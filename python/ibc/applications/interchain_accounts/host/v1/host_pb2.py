# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ibc/applications/interchain_accounts/host/v1/host.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n7ibc/applications/interchain_accounts/host/v1/host.proto\x12,ibc.applications.interchain_accounts.host.v1\"R\n\x06Params\x12!\n\x0chost_enabled\x18\x01 \x01(\x08R\x0bhostEnabled\x12%\n\x0e\x61llow_messages\x18\x02 \x03(\tR\rallowMessagesB\xda\x02\n0com.ibc.applications.interchain_accounts.host.v1B\tHostProtoP\x01ZJgithub.com/cosmos/ibc-go/v7/modules/apps/27-interchain-accounts/host/types\xa2\x02\x04IAIH\xaa\x02+Ibc.Applications.InterchainAccounts.Host.V1\xca\x02+Ibc\\Applications\\InterchainAccounts\\Host\\V1\xe2\x02\x37Ibc\\Applications\\InterchainAccounts\\Host\\V1\\GPBMetadata\xea\x02/Ibc::Applications::InterchainAccounts::Host::V1b\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'ibc.applications.interchain_accounts.host.v1.host_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n0com.ibc.applications.interchain_accounts.host.v1B\tHostProtoP\001ZJgithub.com/cosmos/ibc-go/v7/modules/apps/27-interchain-accounts/host/types\242\002\004IAIH\252\002+Ibc.Applications.InterchainAccounts.Host.V1\312\002+Ibc\\Applications\\InterchainAccounts\\Host\\V1\342\0027Ibc\\Applications\\InterchainAccounts\\Host\\V1\\GPBMetadata\352\002/Ibc::Applications::InterchainAccounts::Host::V1'
  _globals['_PARAMS']._serialized_start=105
  _globals['_PARAMS']._serialized_end=187
# @@protoc_insertion_point(module_scope)
