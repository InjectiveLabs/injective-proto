// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: injective/exchange/v1beta1/exchange.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Injective.Exchange.V1Beta1 {

  /// <summary>Holder for reflection information generated from injective/exchange/v1beta1/exchange.proto</summary>
  public static partial class ExchangeReflection {

    #region Descriptor
    /// <summary>File descriptor for injective/exchange/v1beta1/exchange.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ExchangeReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CilpbmplY3RpdmUvZXhjaGFuZ2UvdjFiZXRhMS9leGNoYW5nZS5wcm90bxIa",
            "aW5qZWN0aXZlLmV4Y2hhbmdlLnYxYmV0YTEaFGdvZ29wcm90by9nb2dvLnBy",
            "b3RvGh5jb3Ntb3MvYmFzZS92MWJldGExL2NvaW4ucHJvdG8aJWluamVjdGl2",
            "ZS9vcmFjbGUvdjFiZXRhMS9vcmFjbGUucHJvdG8i8A4KBlBhcmFtcxJICh9z",
            "cG90X21hcmtldF9pbnN0YW50X2xpc3RpbmdfZmVlGAEgASgLMhkuY29zbW9z",
            "LmJhc2UudjFiZXRhMS5Db2luQgTI3h8AEk4KJWRlcml2YXRpdmVfbWFya2V0",
            "X2luc3RhbnRfbGlzdGluZ19mZWUYAiABKAsyGS5jb3Ntb3MuYmFzZS52MWJl",
            "dGExLkNvaW5CBMjeHwASUwobZGVmYXVsdF9zcG90X21ha2VyX2ZlZV9yYXRl",
            "GAMgASgJQi7a3h8mZ2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay90eXBl",
            "cy5EZWPI3h8AElMKG2RlZmF1bHRfc3BvdF90YWtlcl9mZWVfcmF0ZRgEIAEo",
            "CUIu2t4fJmdpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsvdHlwZXMuRGVj",
            "yN4fABJZCiFkZWZhdWx0X2Rlcml2YXRpdmVfbWFrZXJfZmVlX3JhdGUYBSAB",
            "KAlCLtreHyZnaXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL3R5cGVzLkRl",
            "Y8jeHwASWQohZGVmYXVsdF9kZXJpdmF0aXZlX3Rha2VyX2ZlZV9yYXRlGAYg",
            "ASgJQi7a3h8mZ2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay90eXBlcy5E",
            "ZWPI3h8AElQKHGRlZmF1bHRfaW5pdGlhbF9tYXJnaW5fcmF0aW8YByABKAlC",
            "LtreHyZnaXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL3R5cGVzLkRlY8je",
            "HwASWAogZGVmYXVsdF9tYWludGVuYW5jZV9tYXJnaW5fcmF0aW8YCCABKAlC",
            "LtreHyZnaXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL3R5cGVzLkRlY8je",
            "HwASIAoYZGVmYXVsdF9mdW5kaW5nX2ludGVydmFsGAkgASgDEhgKEGZ1bmRp",
            "bmdfbXVsdGlwbGUYCiABKAMSTgoWcmVsYXllcl9mZWVfc2hhcmVfcmF0ZRgL",
            "IAEoCUIu2t4fJmdpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsvdHlwZXMu",
            "RGVjyN4fABJXCh9kZWZhdWx0X2hvdXJseV9mdW5kaW5nX3JhdGVfY2FwGAwg",
            "ASgJQi7a3h8mZ2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay90eXBlcy5E",
            "ZWPI3h8AElQKHGRlZmF1bHRfaG91cmx5X2ludGVyZXN0X3JhdGUYDSABKAlC",
            "LtreHyZnaXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL3R5cGVzLkRlY8je",
            "HwASJwofbWF4X2Rlcml2YXRpdmVfb3JkZXJfc2lkZV9jb3VudBgOIAEoDRJf",
            "CidpbmpfcmV3YXJkX3N0YWtlZF9yZXF1aXJlbWVudF90aHJlc2hvbGQYDyAB",
            "KAlCLtreHyZnaXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL3R5cGVzLklu",
            "dMjeHwASKAogdHJhZGluZ19yZXdhcmRzX3Zlc3RpbmdfZHVyYXRpb24YECAB",
            "KAMSVAocbGlxdWlkYXRvcl9yZXdhcmRfc2hhcmVfcmF0ZRgRIAEoCUIu2t4f",
            "JmdpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsvdHlwZXMuRGVjyN4fABJS",
            "CiliaW5hcnlfb3B0aW9uc19tYXJrZXRfaW5zdGFudF9saXN0aW5nX2ZlZRgS",
            "IAEoCzIZLmNvc21vcy5iYXNlLnYxYmV0YTEuQ29pbkIEyN4fABJiCiBhdG9t",
            "aWNfbWFya2V0X29yZGVyX2FjY2Vzc19sZXZlbBgTIAEoDjI4LmluamVjdGl2",
            "ZS5leGNoYW5nZS52MWJldGExLkF0b21pY01hcmtldE9yZGVyQWNjZXNzTGV2",
            "ZWwSXwonc3BvdF9hdG9taWNfbWFya2V0X29yZGVyX2ZlZV9tdWx0aXBsaWVy",
            "GBQgASgJQi7a3h8mZ2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay90eXBl",
            "cy5EZWPI3h8AEmUKLWRlcml2YXRpdmVfYXRvbWljX21hcmtldF9vcmRlcl9m",
            "ZWVfbXVsdGlwbGllchgVIAEoCUIu2t4fJmdpdGh1Yi5jb20vY29zbW9zL2Nv",
            "c21vcy1zZGsvdHlwZXMuRGVjyN4fABJpCjFiaW5hcnlfb3B0aW9uc19hdG9t",
            "aWNfbWFya2V0X29yZGVyX2ZlZV9tdWx0aXBsaWVyGBYgASgJQi7a3h8mZ2l0",
            "aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay90eXBlcy5EZWPI3h8AElEKGW1p",
            "bmltYWxfcHJvdG9jb2xfZmVlX3JhdGUYFyABKAlCLtreHyZnaXRodWIuY29t",
            "L2Nvc21vcy9jb3Ntb3Mtc2RrL3R5cGVzLkRlY8jeHwASMworaXNfaW5zdGFu",
            "dF9kZXJpdmF0aXZlX21hcmtldF9sYXVuY2hfZW5hYmxlZBgYIAEoCDoE6KAf",
            "ASJ2ChNNYXJrZXRGZWVNdWx0aXBsaWVyEhEKCW1hcmtldF9pZBgBIAEoCRJG",
            "Cg5mZWVfbXVsdGlwbGllchgCIAEoCUIu2t4fJmdpdGh1Yi5jb20vY29zbW9z",
            "L2Nvc21vcy1zZGsvdHlwZXMuRGVjyN4fADoEiKAfACK/BgoQRGVyaXZhdGl2",
            "ZU1hcmtldBIOCgZ0aWNrZXIYASABKAkSEwoLb3JhY2xlX2Jhc2UYAiABKAkS",
            "FAoMb3JhY2xlX3F1b3RlGAMgASgJEjkKC29yYWNsZV90eXBlGAQgASgOMiQu",
            "aW5qZWN0aXZlLm9yYWNsZS52MWJldGExLk9yYWNsZVR5cGUSGwoTb3JhY2xl",
            "X3NjYWxlX2ZhY3RvchgFIAEoDRITCgtxdW90ZV9kZW5vbRgGIAEoCRIRCglt",
            "YXJrZXRfaWQYByABKAkSTAoUaW5pdGlhbF9tYXJnaW5fcmF0aW8YCCABKAlC",
            "LtreHyZnaXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL3R5cGVzLkRlY8je",
            "HwASUAoYbWFpbnRlbmFuY2VfbWFyZ2luX3JhdGlvGAkgASgJQi7a3h8mZ2l0",
            "aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay90eXBlcy5EZWPI3h8AEkYKDm1h",
            "a2VyX2ZlZV9yYXRlGAogASgJQi7a3h8mZ2l0aHViLmNvbS9jb3Ntb3MvY29z",
            "bW9zLXNkay90eXBlcy5EZWPI3h8AEkYKDnRha2VyX2ZlZV9yYXRlGAsgASgJ",
            "Qi7a3h8mZ2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay90eXBlcy5EZWPI",
            "3h8AEk4KFnJlbGF5ZXJfZmVlX3NoYXJlX3JhdGUYDCABKAlCLtreHyZnaXRo",
            "dWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL3R5cGVzLkRlY8jeHwASEwoLaXNQ",
            "ZXJwZXR1YWwYDSABKAgSOAoGc3RhdHVzGA4gASgOMiguaW5qZWN0aXZlLmV4",
            "Y2hhbmdlLnYxYmV0YTEuTWFya2V0U3RhdHVzEksKE21pbl9wcmljZV90aWNr",
            "X3NpemUYDyABKAlCLtreHyZnaXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2Rr",
            "L3R5cGVzLkRlY8jeHwASTgoWbWluX3F1YW50aXR5X3RpY2tfc2l6ZRgQIAEo",
            "CUIu2t4fJmdpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsvdHlwZXMuRGVj",
            "yN4fADoEiKAfACKnBgoTQmluYXJ5T3B0aW9uc01hcmtldBIOCgZ0aWNrZXIY",
            "ASABKAkSFQoNb3JhY2xlX3N5bWJvbBgCIAEoCRIXCg9vcmFjbGVfcHJvdmlk",
            "ZXIYAyABKAkSOQoLb3JhY2xlX3R5cGUYBCABKA4yJC5pbmplY3RpdmUub3Jh",
            "Y2xlLnYxYmV0YTEuT3JhY2xlVHlwZRIbChNvcmFjbGVfc2NhbGVfZmFjdG9y",
            "GAUgASgNEhwKFGV4cGlyYXRpb25fdGltZXN0YW1wGAYgASgDEhwKFHNldHRs",
            "ZW1lbnRfdGltZXN0YW1wGAcgASgDEg0KBWFkbWluGAggASgJEhMKC3F1b3Rl",
            "X2Rlbm9tGAkgASgJEhEKCW1hcmtldF9pZBgKIAEoCRJGCg5tYWtlcl9mZWVf",
            "cmF0ZRgLIAEoCUIu2t4fJmdpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsv",
            "dHlwZXMuRGVjyN4fABJGCg50YWtlcl9mZWVfcmF0ZRgMIAEoCUIu2t4fJmdp",
            "dGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsvdHlwZXMuRGVjyN4fABJOChZy",
            "ZWxheWVyX2ZlZV9zaGFyZV9yYXRlGA0gASgJQi7a3h8mZ2l0aHViLmNvbS9j",
            "b3Ntb3MvY29zbW9zLXNkay90eXBlcy5EZWPI3h8AEjgKBnN0YXR1cxgOIAEo",
            "DjIoLmluamVjdGl2ZS5leGNoYW5nZS52MWJldGExLk1hcmtldFN0YXR1cxJL",
            "ChNtaW5fcHJpY2VfdGlja19zaXplGA8gASgJQi7a3h8mZ2l0aHViLmNvbS9j",
            "b3Ntb3MvY29zbW9zLXNkay90eXBlcy5EZWPI3h8AEk4KFm1pbl9xdWFudGl0",
            "eV90aWNrX3NpemUYECABKAlCLtreHyZnaXRodWIuY29tL2Nvc21vcy9jb3Nt",
            "b3Mtc2RrL3R5cGVzLkRlY8jeHwASSAoQc2V0dGxlbWVudF9wcmljZRgRIAEo",
            "CUIu2t4fJmdpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsvdHlwZXMuRGVj",
            "yN4fAToEiKAfACKSAgoXRXhwaXJ5RnV0dXJlc01hcmtldEluZm8SEQoJbWFy",
            "a2V0X2lkGAEgASgJEhwKFGV4cGlyYXRpb25fdGltZXN0YW1wGAIgASgDEhwK",
            "FHR3YXBfc3RhcnRfdGltZXN0YW1wGAMgASgDEl4KJmV4cGlyYXRpb25fdHdh",
            "cF9zdGFydF9wcmljZV9jdW11bGF0aXZlGAQgASgJQi7a3h8mZ2l0aHViLmNv",
            "bS9jb3Ntb3MvY29zbW9zLXNkay90eXBlcy5EZWPI3h8AEkgKEHNldHRsZW1l",
            "bnRfcHJpY2UYBSABKAlCLtreHyZnaXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mt",
            "c2RrL3R5cGVzLkRlY8jeHwAigQIKE1BlcnBldHVhbE1hcmtldEluZm8SEQoJ",
            "bWFya2V0X2lkGAEgASgJEk8KF2hvdXJseV9mdW5kaW5nX3JhdGVfY2FwGAIg",
            "ASgJQi7a3h8mZ2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay90eXBlcy5E",
            "ZWPI3h8AEkwKFGhvdXJseV9pbnRlcmVzdF9yYXRlGAMgASgJQi7a3h8mZ2l0",
            "aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay90eXBlcy5EZWPI3h8AEh4KFm5l",
            "eHRfZnVuZGluZ190aW1lc3RhbXAYBCABKAMSGAoQZnVuZGluZ19pbnRlcnZh",
            "bBgFIAEoAyLGAQoWUGVycGV0dWFsTWFya2V0RnVuZGluZxJKChJjdW11bGF0",
            "aXZlX2Z1bmRpbmcYASABKAlCLtreHyZnaXRodWIuY29tL2Nvc21vcy9jb3Nt",
            "b3Mtc2RrL3R5cGVzLkRlY8jeHwASSAoQY3VtdWxhdGl2ZV9wcmljZRgCIAEo",
            "CUIu2t4fJmdpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsvdHlwZXMuRGVj",
            "yN4fABIWCg5sYXN0X3RpbWVzdGFtcBgDIAEoAyJ9Ch5EZXJpdmF0aXZlTWFy",
            "a2V0U2V0dGxlbWVudEluZm8SEQoJbWFya2V0X2lkGAEgASgJEkgKEHNldHRs",
            "ZW1lbnRfcHJpY2UYAiABKAlCLtreHyZnaXRodWIuY29tL2Nvc21vcy9jb3Nt",
            "b3Mtc2RrL3R5cGVzLkRlY8jeHwAiLgoUTmV4dEZ1bmRpbmdUaW1lc3RhbXAS",
            "FgoObmV4dF90aW1lc3RhbXAYASABKAMi5AEKDk1pZFByaWNlQW5kVE9CEkEK",
            "CW1pZF9wcmljZRgBIAEoCUIu2t4fJmdpdGh1Yi5jb20vY29zbW9zL2Nvc21v",
            "cy1zZGsvdHlwZXMuRGVjyN4fARJGCg5iZXN0X2J1eV9wcmljZRgCIAEoCUIu",
            "2t4fJmdpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsvdHlwZXMuRGVjyN4f",
            "ARJHCg9iZXN0X3NlbGxfcHJpY2UYAyABKAlCLtreHyZnaXRodWIuY29tL2Nv",
            "c21vcy9jb3Ntb3Mtc2RrL3R5cGVzLkRlY8jeHwEijwQKClNwb3RNYXJrZXQS",
            "DgoGdGlja2VyGAEgASgJEhIKCmJhc2VfZGVub20YAiABKAkSEwoLcXVvdGVf",
            "ZGVub20YAyABKAkSRgoObWFrZXJfZmVlX3JhdGUYBCABKAlCLtreHyZnaXRo",
            "dWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL3R5cGVzLkRlY8jeHwASRgoOdGFr",
            "ZXJfZmVlX3JhdGUYBSABKAlCLtreHyZnaXRodWIuY29tL2Nvc21vcy9jb3Nt",
            "b3Mtc2RrL3R5cGVzLkRlY8jeHwASTgoWcmVsYXllcl9mZWVfc2hhcmVfcmF0",
            "ZRgGIAEoCUIu2t4fJmdpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsvdHlw",
            "ZXMuRGVjyN4fABIRCgltYXJrZXRfaWQYByABKAkSOAoGc3RhdHVzGAggASgO",
            "MiguaW5qZWN0aXZlLmV4Y2hhbmdlLnYxYmV0YTEuTWFya2V0U3RhdHVzEksK",
            "E21pbl9wcmljZV90aWNrX3NpemUYCSABKAlCLtreHyZnaXRodWIuY29tL2Nv",
            "c21vcy9jb3Ntb3Mtc2RrL3R5cGVzLkRlY8jeHwASTgoWbWluX3F1YW50aXR5",
            "X3RpY2tfc2l6ZRgKIAEoCUIu2t4fJmdpdGh1Yi5jb20vY29zbW9zL2Nvc21v",
            "cy1zZGsvdHlwZXMuRGVjyN4fACKbAQoHRGVwb3NpdBJJChFhdmFpbGFibGVf",
            "YmFsYW5jZRgBIAEoCUIu2t4fJmdpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1z",
            "ZGsvdHlwZXMuRGVjyN4fABJFCg10b3RhbF9iYWxhbmNlGAIgASgJQi7a3h8m",
            "Z2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay90eXBlcy5EZWPI3h8AIiUK",
            "FFN1YmFjY291bnRUcmFkZU5vbmNlEg0KBW5vbmNlGAEgASgNIroBCglPcmRl",
            "ckluZm8SFQoNc3ViYWNjb3VudF9pZBgBIAEoCRIVCg1mZWVfcmVjaXBpZW50",
            "GAIgASgJEj0KBXByaWNlGAMgASgJQi7a3h8mZ2l0aHViLmNvbS9jb3Ntb3Mv",
            "Y29zbW9zLXNkay90eXBlcy5EZWPI3h8AEkAKCHF1YW50aXR5GAQgASgJQi7a",
            "3h8mZ2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay90eXBlcy5EZWPI3h8A",
            "IuEBCglTcG90T3JkZXISEQoJbWFya2V0X2lkGAEgASgJEj8KCm9yZGVyX2lu",
            "Zm8YAiABKAsyJS5pbmplY3RpdmUuZXhjaGFuZ2UudjFiZXRhMS5PcmRlcklu",
            "Zm9CBMjeHwASOQoKb3JkZXJfdHlwZRgDIAEoDjIlLmluamVjdGl2ZS5leGNo",
            "YW5nZS52MWJldGExLk9yZGVyVHlwZRJFCg10cmlnZ2VyX3ByaWNlGAQgASgJ",
            "Qi7a3h8mZ2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay90eXBlcy5EZWPI",
            "3h8BIqkCCg5TcG90TGltaXRPcmRlchI/CgpvcmRlcl9pbmZvGAEgASgLMiUu",
            "aW5qZWN0aXZlLmV4Y2hhbmdlLnYxYmV0YTEuT3JkZXJJbmZvQgTI3h8AEjkK",
            "Cm9yZGVyX3R5cGUYAiABKA4yJS5pbmplY3RpdmUuZXhjaGFuZ2UudjFiZXRh",
            "MS5PcmRlclR5cGUSQAoIZmlsbGFibGUYAyABKAlCLtreHyZnaXRodWIuY29t",
            "L2Nvc21vcy9jb3Ntb3Mtc2RrL3R5cGVzLkRlY8jeHwASRQoNdHJpZ2dlcl9w",
            "cmljZRgEIAEoCUIu2t4fJmdpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsv",
            "dHlwZXMuRGVjyN4fARISCgpvcmRlcl9oYXNoGAUgASgMIq4CCg9TcG90TWFy",
            "a2V0T3JkZXISPwoKb3JkZXJfaW5mbxgBIAEoCzIlLmluamVjdGl2ZS5leGNo",
            "YW5nZS52MWJldGExLk9yZGVySW5mb0IEyN4fABJECgxiYWxhbmNlX2hvbGQY",
            "AiABKAlCLtreHyZnaXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL3R5cGVz",
            "LkRlY8jeHwASEgoKb3JkZXJfaGFzaBgDIAEoDBI5CgpvcmRlcl90eXBlGAQg",
            "ASgOMiUuaW5qZWN0aXZlLmV4Y2hhbmdlLnYxYmV0YTEuT3JkZXJUeXBlEkUK",
            "DXRyaWdnZXJfcHJpY2UYBSABKAlCLtreHyZnaXRodWIuY29tL2Nvc21vcy9j",
            "b3Ntb3Mtc2RrL3R5cGVzLkRlY8jeHwEipwIKD0Rlcml2YXRpdmVPcmRlchIR",
            "CgltYXJrZXRfaWQYASABKAkSPwoKb3JkZXJfaW5mbxgCIAEoCzIlLmluamVj",
            "dGl2ZS5leGNoYW5nZS52MWJldGExLk9yZGVySW5mb0IEyN4fABI5CgpvcmRl",
            "cl90eXBlGAMgASgOMiUuaW5qZWN0aXZlLmV4Y2hhbmdlLnYxYmV0YTEuT3Jk",
            "ZXJUeXBlEj4KBm1hcmdpbhgEIAEoCUIu2t4fJmdpdGh1Yi5jb20vY29zbW9z",
            "L2Nvc21vcy1zZGsvdHlwZXMuRGVjyN4fABJFCg10cmlnZ2VyX3ByaWNlGAUg",
            "ASgJQi7a3h8mZ2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay90eXBlcy5E",
            "ZWPI3h8BIukCChtTdWJhY2NvdW50T3JkZXJib29rTWV0YWRhdGESIQoZdmFu",
            "aWxsYV9saW1pdF9vcmRlcl9jb3VudBgBIAEoDRIlCh1yZWR1Y2Vfb25seV9s",
            "aW1pdF9vcmRlcl9jb3VudBgCIAEoDRJWCh5hZ2dyZWdhdGVfcmVkdWNlX29u",
            "bHlfcXVhbnRpdHkYAyABKAlCLtreHyZnaXRodWIuY29tL2Nvc21vcy9jb3Nt",
            "b3Mtc2RrL3R5cGVzLkRlY8jeHwASUgoaYWdncmVnYXRlX3ZhbmlsbGFfcXVh",
            "bnRpdHkYBCABKAlCLtreHyZnaXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2Rr",
            "L3R5cGVzLkRlY8jeHwASJwofdmFuaWxsYV9jb25kaXRpb25hbF9vcmRlcl9j",
            "b3VudBgFIAEoDRIrCiNyZWR1Y2Vfb25seV9jb25kaXRpb25hbF9vcmRlcl9j",
            "b3VudBgGIAEoDSKoAQoPU3ViYWNjb3VudE9yZGVyEj0KBXByaWNlGAEgASgJ",
            "Qi7a3h8mZ2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay90eXBlcy5EZWPI",
            "3h8AEkAKCHF1YW50aXR5GAIgASgJQi7a3h8mZ2l0aHViLmNvbS9jb3Ntb3Mv",
            "Y29zbW9zLXNkay90eXBlcy5EZWPI3h8AEhQKDGlzUmVkdWNlT25seRgDIAEo",
            "CCJlChNTdWJhY2NvdW50T3JkZXJEYXRhEjoKBW9yZGVyGAEgASgLMisuaW5q",
            "ZWN0aXZlLmV4Y2hhbmdlLnYxYmV0YTEuU3ViYWNjb3VudE9yZGVyEhIKCm9y",
            "ZGVyX2hhc2gYAiABKAwi7wIKFERlcml2YXRpdmVMaW1pdE9yZGVyEj8KCm9y",
            "ZGVyX2luZm8YASABKAsyJS5pbmplY3RpdmUuZXhjaGFuZ2UudjFiZXRhMS5P",
            "cmRlckluZm9CBMjeHwASOQoKb3JkZXJfdHlwZRgCIAEoDjIlLmluamVjdGl2",
            "ZS5leGNoYW5nZS52MWJldGExLk9yZGVyVHlwZRI+CgZtYXJnaW4YAyABKAlC",
            "LtreHyZnaXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL3R5cGVzLkRlY8je",
            "HwASQAoIZmlsbGFibGUYBCABKAlCLtreHyZnaXRodWIuY29tL2Nvc21vcy9j",
            "b3Ntb3Mtc2RrL3R5cGVzLkRlY8jeHwASRQoNdHJpZ2dlcl9wcmljZRgFIAEo",
            "CUIu2t4fJmdpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsvdHlwZXMuRGVj",
            "yN4fARISCgpvcmRlcl9oYXNoGAYgASgMIvMCChVEZXJpdmF0aXZlTWFya2V0",
            "T3JkZXISPwoKb3JkZXJfaW5mbxgBIAEoCzIlLmluamVjdGl2ZS5leGNoYW5n",
            "ZS52MWJldGExLk9yZGVySW5mb0IEyN4fABI5CgpvcmRlcl90eXBlGAIgASgO",
            "MiUuaW5qZWN0aXZlLmV4Y2hhbmdlLnYxYmV0YTEuT3JkZXJUeXBlEj4KBm1h",
            "cmdpbhgDIAEoCUIu2t4fJmdpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsv",
            "dHlwZXMuRGVjyN4fABJDCgttYXJnaW5faG9sZBgEIAEoCUIu2t4fJmdpdGh1",
            "Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsvdHlwZXMuRGVjyN4fABJFCg10cmln",
            "Z2VyX3ByaWNlGAUgASgJQi7a3h8mZ2l0aHViLmNvbS9jb3Ntb3MvY29zbW9z",
            "LXNkay90eXBlcy5EZWPI3h8BEhIKCm9yZGVyX2hhc2gYBiABKAwiswIKCFBv",
            "c2l0aW9uEg4KBmlzTG9uZxgBIAEoCBJACghxdWFudGl0eRgCIAEoCUIu2t4f",
            "JmdpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsvdHlwZXMuRGVjyN4fABJD",
            "CgtlbnRyeV9wcmljZRgDIAEoCUIu2t4fJmdpdGh1Yi5jb20vY29zbW9zL2Nv",
            "c21vcy1zZGsvdHlwZXMuRGVjyN4fABI+CgZtYXJnaW4YBCABKAlCLtreHyZn",
            "aXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL3R5cGVzLkRlY8jeHwASUAoY",
            "Y3VtdWxhdGl2ZV9mdW5kaW5nX2VudHJ5GAUgASgJQi7a3h8mZ2l0aHViLmNv",
            "bS9jb3Ntb3MvY29zbW9zLXNkay90eXBlcy5EZWPI3h8AIjgKFE1hcmtldE9y",
            "ZGVySW5kaWNhdG9yEhEKCW1hcmtldF9pZBgBIAEoCRINCgVpc0J1eRgCIAEo",
            "CCKYAgoIVHJhZGVMb2cSQAoIcXVhbnRpdHkYASABKAlCLtreHyZnaXRodWIu",
            "Y29tL2Nvc21vcy9jb3Ntb3Mtc2RrL3R5cGVzLkRlY8jeHwASPQoFcHJpY2UY",
            "AiABKAlCLtreHyZnaXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL3R5cGVz",
            "LkRlY8jeHwASFQoNc3ViYWNjb3VudF9pZBgDIAEoDBI7CgNmZWUYBCABKAlC",
            "LtreHyZnaXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL3R5cGVzLkRlY8je",
            "HwASEgoKb3JkZXJfaGFzaBgFIAEoDBIjChVmZWVfcmVjaXBpZW50X2FkZHJl",
            "c3MYBiABKAxCBMjeHwEi/wEKDVBvc2l0aW9uRGVsdGESDwoHaXNfbG9uZxgB",
            "IAEoCBJKChJleGVjdXRpb25fcXVhbnRpdHkYAiABKAlCLtreHyZnaXRodWIu",
            "Y29tL2Nvc21vcy9jb3Ntb3Mtc2RrL3R5cGVzLkRlY8jeHwASSAoQZXhlY3V0",
            "aW9uX21hcmdpbhgDIAEoCUIu2t4fJmdpdGh1Yi5jb20vY29zbW9zL2Nvc21v",
            "cy1zZGsvdHlwZXMuRGVjyN4fABJHCg9leGVjdXRpb25fcHJpY2UYBCABKAlC",
            "LtreHyZnaXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL3R5cGVzLkRlY8je",
            "HwAipAIKEkRlcml2YXRpdmVUcmFkZUxvZxIVCg1zdWJhY2NvdW50X2lkGAEg",
            "ASgMEkEKDnBvc2l0aW9uX2RlbHRhGAIgASgLMikuaW5qZWN0aXZlLmV4Y2hh",
            "bmdlLnYxYmV0YTEuUG9zaXRpb25EZWx0YRI+CgZwYXlvdXQYAyABKAlCLtre",
            "HyZnaXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL3R5cGVzLkRlY8jeHwAS",
            "OwoDZmVlGAQgASgJQi7a3h8mZ2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNk",
            "ay90eXBlcy5EZWPI3h8AEhIKCm9yZGVyX2hhc2gYBSABKAwSIwoVZmVlX3Jl",
            "Y2lwaWVudF9hZGRyZXNzGAYgASgMQgTI3h8BImMKElN1YmFjY291bnRQb3Np",
            "dGlvbhI2Cghwb3NpdGlvbhgBIAEoCzIkLmluamVjdGl2ZS5leGNoYW5nZS52",
            "MWJldGExLlBvc2l0aW9uEhUKDXN1YmFjY291bnRfaWQYAiABKAwiYAoRU3Vi",
            "YWNjb3VudERlcG9zaXQSFQoNc3ViYWNjb3VudF9pZBgBIAEoDBI0CgdkZXBv",
            "c2l0GAIgASgLMiMuaW5qZWN0aXZlLmV4Y2hhbmdlLnYxYmV0YTEuRGVwb3Np",
            "dCJfCg1EZXBvc2l0VXBkYXRlEg0KBWRlbm9tGAEgASgJEj8KCGRlcG9zaXRz",
            "GAIgAygLMi0uaW5qZWN0aXZlLmV4Y2hhbmdlLnYxYmV0YTEuU3ViYWNjb3Vu",
            "dERlcG9zaXQitAEKEFBvaW50c011bHRpcGxpZXISTwoXbWFrZXJfcG9pbnRz",
            "X211bHRpcGxpZXIYASABKAlCLtreHyZnaXRodWIuY29tL2Nvc21vcy9jb3Nt",
            "b3Mtc2RrL3R5cGVzLkRlY8jeHwASTwoXdGFrZXJfcG9pbnRzX211bHRpcGxp",
            "ZXIYAiABKAlCLtreHyZnaXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL3R5",
            "cGVzLkRlY8jeHwAimAIKHlRyYWRpbmdSZXdhcmRDYW1wYWlnbkJvb3N0SW5m",
            "bxIfChdib29zdGVkX3Nwb3RfbWFya2V0X2lkcxgBIAMoCRJTChdzcG90X21h",
            "cmtldF9tdWx0aXBsaWVycxgCIAMoCzIsLmluamVjdGl2ZS5leGNoYW5nZS52",
            "MWJldGExLlBvaW50c011bHRpcGxpZXJCBMjeHwASJQodYm9vc3RlZF9kZXJp",
            "dmF0aXZlX21hcmtldF9pZHMYAyADKAkSWQodZGVyaXZhdGl2ZV9tYXJrZXRf",
            "bXVsdGlwbGllcnMYBCADKAsyLC5pbmplY3RpdmUuZXhjaGFuZ2UudjFiZXRh",
            "MS5Qb2ludHNNdWx0aXBsaWVyQgTI3h8AIpgBChJDYW1wYWlnblJld2FyZFBv",
            "b2wSFwoPc3RhcnRfdGltZXN0YW1wGAEgASgDEmkKFG1heF9jYW1wYWlnbl9y",
            "ZXdhcmRzGAIgAygLMhkuY29zbW9zLmJhc2UudjFiZXRhMS5Db2luQjDI3h8A",
            "qt8fKGdpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsvdHlwZXMuQ29pbnMi",
            "1AEKGVRyYWRpbmdSZXdhcmRDYW1wYWlnbkluZm8SIQoZY2FtcGFpZ25fZHVy",
            "YXRpb25fc2Vjb25kcxgBIAEoAxIUCgxxdW90ZV9kZW5vbXMYAiADKAkSXQoZ",
            "dHJhZGluZ19yZXdhcmRfYm9vc3RfaW5mbxgDIAEoCzI6LmluamVjdGl2ZS5l",
            "eGNoYW5nZS52MWJldGExLlRyYWRpbmdSZXdhcmRDYW1wYWlnbkJvb3N0SW5m",
            "bxIfChdkaXNxdWFsaWZpZWRfbWFya2V0X2lkcxgEIAMoCSK2AgoTRmVlRGlz",
            "Y291bnRUaWVySW5mbxJLChNtYWtlcl9kaXNjb3VudF9yYXRlGAEgASgJQi7a",
            "3h8mZ2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay90eXBlcy5EZWPI3h8A",
            "EksKE3Rha2VyX2Rpc2NvdW50X3JhdGUYAiABKAlCLtreHyZnaXRodWIuY29t",
            "L2Nvc21vcy9jb3Ntb3Mtc2RrL3R5cGVzLkRlY8jeHwASRQoNc3Rha2VkX2Ft",
            "b3VudBgDIAEoCUIu2t4fJmdpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsv",
            "dHlwZXMuSW50yN4fABI+CgZ2b2x1bWUYBCABKAlCLtreHyZnaXRodWIuY29t",
            "L2Nvc21vcy9jb3Ntb3Mtc2RrL3R5cGVzLkRlY8jeHwAiwAEKE0ZlZURpc2Nv",
            "dW50U2NoZWR1bGUSFAoMYnVja2V0X2NvdW50GAEgASgEEhcKD2J1Y2tldF9k",
            "dXJhdGlvbhgCIAEoAxIUCgxxdW90ZV9kZW5vbXMYAyADKAkSQwoKdGllcl9p",
            "bmZvcxgEIAMoCzIvLmluamVjdGl2ZS5leGNoYW5nZS52MWJldGExLkZlZURp",
            "c2NvdW50VGllckluZm8SHwoXZGlzcXVhbGlmaWVkX21hcmtldF9pZHMYBSAD",
            "KAkiOQoSRmVlRGlzY291bnRUaWVyVFRMEgwKBHRpZXIYASABKAQSFQoNdHRs",
            "X3RpbWVzdGFtcBgCIAEoAyKaAQoMVm9sdW1lUmVjb3JkEkQKDG1ha2VyX3Zv",
            "bHVtZRgBIAEoCUIu2t4fJmdpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsv",
            "dHlwZXMuRGVjyN4fABJECgx0YWtlcl92b2x1bWUYAiABKAlCLtreHyZnaXRo",
            "dWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL3R5cGVzLkRlY8jeHwAifwoOQWNj",
            "b3VudFJld2FyZHMSDwoHYWNjb3VudBgBIAEoCRJcCgdyZXdhcmRzGAIgAygL",
            "MhkuY29zbW9zLmJhc2UudjFiZXRhMS5Db2luQjDI3h8Aqt8fKGdpdGh1Yi5j",
            "b20vY29zbW9zL2Nvc21vcy1zZGsvdHlwZXMuQ29pbnMiaAoMVHJhZGVSZWNv",
            "cmRzEhEKCW1hcmtldF9pZBgBIAEoCRJFChRsYXRlc3RfdHJhZGVfcmVjb3Jk",
            "cxgCIAMoCzInLmluamVjdGl2ZS5leGNoYW5nZS52MWJldGExLlRyYWRlUmVj",
            "b3JkIicKDVN1YmFjY291bnRJRHMSFgoOc3ViYWNjb3VudF9pZHMYASADKAwi",
            "oQEKC1RyYWRlUmVjb3JkEhEKCXRpbWVzdGFtcBgBIAEoAxI9CgVwcmljZRgC",
            "IAEoCUIu2t4fJmdpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsvdHlwZXMu",
            "RGVjyN4fABJACghxdWFudGl0eRgDIAEoCUIu2t4fJmdpdGh1Yi5jb20vY29z",
            "bW9zL2Nvc21vcy1zZGsvdHlwZXMuRGVjyN4fACJ9CgVMZXZlbBI5CgFwGAEg",
            "ASgJQi7a3h8mZ2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay90eXBlcy5E",
            "ZWPI3h8AEjkKAXEYAiABKAlCLtreHyZnaXRodWIuY29tL2Nvc21vcy9jb3Nt",
            "b3Mtc2RrL3R5cGVzLkRlY8jeHwAiegofQWdncmVnYXRlU3ViYWNjb3VudFZv",
            "bHVtZVJlY29yZBIVCg1zdWJhY2NvdW50X2lkGAEgASgJEkAKDm1hcmtldF92",
            "b2x1bWVzGAIgAygLMiguaW5qZWN0aXZlLmV4Y2hhbmdlLnYxYmV0YTEuTWFy",
            "a2V0Vm9sdW1lInEKHEFnZ3JlZ2F0ZUFjY291bnRWb2x1bWVSZWNvcmQSDwoH",
            "YWNjb3VudBgBIAEoCRJACg5tYXJrZXRfdm9sdW1lcxgCIAMoCzIoLmluamVj",
            "dGl2ZS5leGNoYW5nZS52MWJldGExLk1hcmtldFZvbHVtZSJhCgxNYXJrZXRW",
            "b2x1bWUSEQoJbWFya2V0X2lkGAEgASgJEj4KBnZvbHVtZRgCIAEoCzIoLmlu",
            "amVjdGl2ZS5leGNoYW5nZS52MWJldGExLlZvbHVtZVJlY29yZEIEyN4fACIw",
            "Cg1EZW5vbURlY2ltYWxzEg0KBWRlbm9tGAEgASgJEhAKCGRlY2ltYWxzGAIg",
            "ASgEKnQKHEF0b21pY01hcmtldE9yZGVyQWNjZXNzTGV2ZWwSCgoGTm9ib2R5",
            "EAASIgoeQmVnaW5CbG9ja2VyU21hcnRDb250cmFjdHNPbmx5EAESFgoSU21h",
            "cnRDb250cmFjdHNPbmx5EAISDAoIRXZlcnlvbmUQAypUCgxNYXJrZXRTdGF0",
            "dXMSDwoLVW5zcGVjaWZpZWQQABIKCgZBY3RpdmUQARIKCgZQYXVzZWQQAhIO",
            "CgpEZW1vbGlzaGVkEAMSCwoHRXhwaXJlZBAEKrsCCglPcmRlclR5cGUSIAoL",
            "VU5TUEVDSUZJRUQQABoPip0gC1VOU1BFQ0lGSUVEEhAKA0JVWRABGgeKnSAD",
            "QlVZEhIKBFNFTEwQAhoIip0gBFNFTEwSGgoIU1RPUF9CVVkQAxoMip0gCFNU",
            "T1BfQlVZEhwKCVNUT1BfU0VMTBAEGg2KnSAJU1RPUF9TRUxMEhoKCFRBS0Vf",
            "QlVZEAUaDIqdIAhUQUtFX0JVWRIcCglUQUtFX1NFTEwQBhoNip0gCVRBS0Vf",
            "U0VMTBIWCgZCVVlfUE8QBxoKip0gBkJVWV9QTxIYCgdTRUxMX1BPEAgaC4qd",
            "IAdTRUxMX1BPEh4KCkJVWV9BVE9NSUMQCRoOip0gCkJVWV9BVE9NSUMSIAoL",
            "U0VMTF9BVE9NSUMQChoPip0gC1NFTExfQVRPTUlDKq8BCg1FeGVjdXRpb25U",
            "eXBlEhwKGFVuc3BlY2lmaWVkRXhlY3V0aW9uVHlwZRAAEgoKBk1hcmtldBAB",
            "Eg0KCUxpbWl0RmlsbBACEhoKFkxpbWl0TWF0Y2hSZXN0aW5nT3JkZXIQAxIW",
            "ChJMaW1pdE1hdGNoTmV3T3JkZXIQBBIVChFNYXJrZXRMaXF1aWRhdGlvbhAF",
            "EhoKFkV4cGlyeU1hcmtldFNldHRsZW1lbnQQBiqJAgoJT3JkZXJNYXNrEhYK",
            "BlVOVVNFRBAAGgqKnSAGVU5VU0VEEhAKA0FOWRABGgeKnSADQU5ZEhgKB1JF",
            "R1VMQVIQAhoLip0gB1JFR1VMQVISIAoLQ09ORElUSU9OQUwQBBoPip0gC0NP",
            "TkRJVElPTkFMEi4KF0RJUkVDVElPTl9CVVlfT1JfSElHSEVSEAgaEYqdIA1C",
            "VVlfT1JfSElHSEVSEi4KF0RJUkVDVElPTl9TRUxMX09SX0xPV0VSEBAaEYqd",
            "IA1TRUxMX09SX0xPV0VSEhsKC1RZUEVfTUFSS0VUECAaCoqdIAZNQVJLRVQS",
            "GQoKVFlQRV9MSU1JVBBAGgmKnSAFTElNSVRCUFpOZ2l0aHViLmNvbS9Jbmpl",
            "Y3RpdmVMYWJzL2luamVjdGl2ZS1jb3JlL2luamVjdGl2ZS1jaGFpbi9tb2R1",
            "bGVzL2V4Y2hhbmdlL3R5cGVzYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Gogoproto.GogoReflection.Descriptor, global::Cosmos.Base.V1Beta1.CoinReflection.Descriptor, global::Injective.Oracle.V1Beta1.OracleReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Injective.Exchange.V1Beta1.AtomicMarketOrderAccessLevel), typeof(global::Injective.Exchange.V1Beta1.MarketStatus), typeof(global::Injective.Exchange.V1Beta1.OrderType), typeof(global::Injective.Exchange.V1Beta1.ExecutionType), typeof(global::Injective.Exchange.V1Beta1.OrderMask), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Exchange.V1Beta1.Params), global::Injective.Exchange.V1Beta1.Params.Parser, new[]{ "SpotMarketInstantListingFee", "DerivativeMarketInstantListingFee", "DefaultSpotMakerFeeRate", "DefaultSpotTakerFeeRate", "DefaultDerivativeMakerFeeRate", "DefaultDerivativeTakerFeeRate", "DefaultInitialMarginRatio", "DefaultMaintenanceMarginRatio", "DefaultFundingInterval", "FundingMultiple", "RelayerFeeShareRate", "DefaultHourlyFundingRateCap", "DefaultHourlyInterestRate", "MaxDerivativeOrderSideCount", "InjRewardStakedRequirementThreshold", "TradingRewardsVestingDuration", "LiquidatorRewardShareRate", "BinaryOptionsMarketInstantListingFee", "AtomicMarketOrderAccessLevel", "SpotAtomicMarketOrderFeeMultiplier", "DerivativeAtomicMarketOrderFeeMultiplier", "BinaryOptionsAtomicMarketOrderFeeMultiplier", "MinimalProtocolFeeRate", "IsInstantDerivativeMarketLaunchEnabled" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Exchange.V1Beta1.MarketFeeMultiplier), global::Injective.Exchange.V1Beta1.MarketFeeMultiplier.Parser, new[]{ "MarketId", "FeeMultiplier" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Exchange.V1Beta1.DerivativeMarket), global::Injective.Exchange.V1Beta1.DerivativeMarket.Parser, new[]{ "Ticker", "OracleBase", "OracleQuote", "OracleType", "OracleScaleFactor", "QuoteDenom", "MarketId", "InitialMarginRatio", "MaintenanceMarginRatio", "MakerFeeRate", "TakerFeeRate", "RelayerFeeShareRate", "IsPerpetual", "Status", "MinPriceTickSize", "MinQuantityTickSize" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Exchange.V1Beta1.BinaryOptionsMarket), global::Injective.Exchange.V1Beta1.BinaryOptionsMarket.Parser, new[]{ "Ticker", "OracleSymbol", "OracleProvider", "OracleType", "OracleScaleFactor", "ExpirationTimestamp", "SettlementTimestamp", "Admin", "QuoteDenom", "MarketId", "MakerFeeRate", "TakerFeeRate", "RelayerFeeShareRate", "Status", "MinPriceTickSize", "MinQuantityTickSize", "SettlementPrice" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Exchange.V1Beta1.ExpiryFuturesMarketInfo), global::Injective.Exchange.V1Beta1.ExpiryFuturesMarketInfo.Parser, new[]{ "MarketId", "ExpirationTimestamp", "TwapStartTimestamp", "ExpirationTwapStartPriceCumulative", "SettlementPrice" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Exchange.V1Beta1.PerpetualMarketInfo), global::Injective.Exchange.V1Beta1.PerpetualMarketInfo.Parser, new[]{ "MarketId", "HourlyFundingRateCap", "HourlyInterestRate", "NextFundingTimestamp", "FundingInterval" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Exchange.V1Beta1.PerpetualMarketFunding), global::Injective.Exchange.V1Beta1.PerpetualMarketFunding.Parser, new[]{ "CumulativeFunding", "CumulativePrice", "LastTimestamp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Exchange.V1Beta1.DerivativeMarketSettlementInfo), global::Injective.Exchange.V1Beta1.DerivativeMarketSettlementInfo.Parser, new[]{ "MarketId", "SettlementPrice" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Exchange.V1Beta1.NextFundingTimestamp), global::Injective.Exchange.V1Beta1.NextFundingTimestamp.Parser, new[]{ "NextTimestamp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Exchange.V1Beta1.MidPriceAndTOB), global::Injective.Exchange.V1Beta1.MidPriceAndTOB.Parser, new[]{ "MidPrice", "BestBuyPrice", "BestSellPrice" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Exchange.V1Beta1.SpotMarket), global::Injective.Exchange.V1Beta1.SpotMarket.Parser, new[]{ "Ticker", "BaseDenom", "QuoteDenom", "MakerFeeRate", "TakerFeeRate", "RelayerFeeShareRate", "MarketId", "Status", "MinPriceTickSize", "MinQuantityTickSize" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Exchange.V1Beta1.Deposit), global::Injective.Exchange.V1Beta1.Deposit.Parser, new[]{ "AvailableBalance", "TotalBalance" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Exchange.V1Beta1.SubaccountTradeNonce), global::Injective.Exchange.V1Beta1.SubaccountTradeNonce.Parser, new[]{ "Nonce" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Exchange.V1Beta1.OrderInfo), global::Injective.Exchange.V1Beta1.OrderInfo.Parser, new[]{ "SubaccountId", "FeeRecipient", "Price", "Quantity" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Exchange.V1Beta1.SpotOrder), global::Injective.Exchange.V1Beta1.SpotOrder.Parser, new[]{ "MarketId", "OrderInfo", "OrderType", "TriggerPrice" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Exchange.V1Beta1.SpotLimitOrder), global::Injective.Exchange.V1Beta1.SpotLimitOrder.Parser, new[]{ "OrderInfo", "OrderType", "Fillable", "TriggerPrice", "OrderHash" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Exchange.V1Beta1.SpotMarketOrder), global::Injective.Exchange.V1Beta1.SpotMarketOrder.Parser, new[]{ "OrderInfo", "BalanceHold", "OrderHash", "OrderType", "TriggerPrice" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Exchange.V1Beta1.DerivativeOrder), global::Injective.Exchange.V1Beta1.DerivativeOrder.Parser, new[]{ "MarketId", "OrderInfo", "OrderType", "Margin", "TriggerPrice" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Exchange.V1Beta1.SubaccountOrderbookMetadata), global::Injective.Exchange.V1Beta1.SubaccountOrderbookMetadata.Parser, new[]{ "VanillaLimitOrderCount", "ReduceOnlyLimitOrderCount", "AggregateReduceOnlyQuantity", "AggregateVanillaQuantity", "VanillaConditionalOrderCount", "ReduceOnlyConditionalOrderCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Exchange.V1Beta1.SubaccountOrder), global::Injective.Exchange.V1Beta1.SubaccountOrder.Parser, new[]{ "Price", "Quantity", "IsReduceOnly" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Exchange.V1Beta1.SubaccountOrderData), global::Injective.Exchange.V1Beta1.SubaccountOrderData.Parser, new[]{ "Order", "OrderHash" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Exchange.V1Beta1.DerivativeLimitOrder), global::Injective.Exchange.V1Beta1.DerivativeLimitOrder.Parser, new[]{ "OrderInfo", "OrderType", "Margin", "Fillable", "TriggerPrice", "OrderHash" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Exchange.V1Beta1.DerivativeMarketOrder), global::Injective.Exchange.V1Beta1.DerivativeMarketOrder.Parser, new[]{ "OrderInfo", "OrderType", "Margin", "MarginHold", "TriggerPrice", "OrderHash" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Exchange.V1Beta1.Position), global::Injective.Exchange.V1Beta1.Position.Parser, new[]{ "IsLong", "Quantity", "EntryPrice", "Margin", "CumulativeFundingEntry" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Exchange.V1Beta1.MarketOrderIndicator), global::Injective.Exchange.V1Beta1.MarketOrderIndicator.Parser, new[]{ "MarketId", "IsBuy" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Exchange.V1Beta1.TradeLog), global::Injective.Exchange.V1Beta1.TradeLog.Parser, new[]{ "Quantity", "Price", "SubaccountId", "Fee", "OrderHash", "FeeRecipientAddress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Exchange.V1Beta1.PositionDelta), global::Injective.Exchange.V1Beta1.PositionDelta.Parser, new[]{ "IsLong", "ExecutionQuantity", "ExecutionMargin", "ExecutionPrice" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Exchange.V1Beta1.DerivativeTradeLog), global::Injective.Exchange.V1Beta1.DerivativeTradeLog.Parser, new[]{ "SubaccountId", "PositionDelta", "Payout", "Fee", "OrderHash", "FeeRecipientAddress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Exchange.V1Beta1.SubaccountPosition), global::Injective.Exchange.V1Beta1.SubaccountPosition.Parser, new[]{ "Position", "SubaccountId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Exchange.V1Beta1.SubaccountDeposit), global::Injective.Exchange.V1Beta1.SubaccountDeposit.Parser, new[]{ "SubaccountId", "Deposit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Exchange.V1Beta1.DepositUpdate), global::Injective.Exchange.V1Beta1.DepositUpdate.Parser, new[]{ "Denom", "Deposits" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Exchange.V1Beta1.PointsMultiplier), global::Injective.Exchange.V1Beta1.PointsMultiplier.Parser, new[]{ "MakerPointsMultiplier", "TakerPointsMultiplier" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Exchange.V1Beta1.TradingRewardCampaignBoostInfo), global::Injective.Exchange.V1Beta1.TradingRewardCampaignBoostInfo.Parser, new[]{ "BoostedSpotMarketIds", "SpotMarketMultipliers", "BoostedDerivativeMarketIds", "DerivativeMarketMultipliers" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Exchange.V1Beta1.CampaignRewardPool), global::Injective.Exchange.V1Beta1.CampaignRewardPool.Parser, new[]{ "StartTimestamp", "MaxCampaignRewards" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Exchange.V1Beta1.TradingRewardCampaignInfo), global::Injective.Exchange.V1Beta1.TradingRewardCampaignInfo.Parser, new[]{ "CampaignDurationSeconds", "QuoteDenoms", "TradingRewardBoostInfo", "DisqualifiedMarketIds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Exchange.V1Beta1.FeeDiscountTierInfo), global::Injective.Exchange.V1Beta1.FeeDiscountTierInfo.Parser, new[]{ "MakerDiscountRate", "TakerDiscountRate", "StakedAmount", "Volume" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Exchange.V1Beta1.FeeDiscountSchedule), global::Injective.Exchange.V1Beta1.FeeDiscountSchedule.Parser, new[]{ "BucketCount", "BucketDuration", "QuoteDenoms", "TierInfos", "DisqualifiedMarketIds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Exchange.V1Beta1.FeeDiscountTierTTL), global::Injective.Exchange.V1Beta1.FeeDiscountTierTTL.Parser, new[]{ "Tier", "TtlTimestamp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Exchange.V1Beta1.VolumeRecord), global::Injective.Exchange.V1Beta1.VolumeRecord.Parser, new[]{ "MakerVolume", "TakerVolume" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Exchange.V1Beta1.AccountRewards), global::Injective.Exchange.V1Beta1.AccountRewards.Parser, new[]{ "Account", "Rewards" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Exchange.V1Beta1.TradeRecords), global::Injective.Exchange.V1Beta1.TradeRecords.Parser, new[]{ "MarketId", "LatestTradeRecords" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Exchange.V1Beta1.SubaccountIDs), global::Injective.Exchange.V1Beta1.SubaccountIDs.Parser, new[]{ "SubaccountIds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Exchange.V1Beta1.TradeRecord), global::Injective.Exchange.V1Beta1.TradeRecord.Parser, new[]{ "Timestamp", "Price", "Quantity" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Exchange.V1Beta1.Level), global::Injective.Exchange.V1Beta1.Level.Parser, new[]{ "P", "Q" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Exchange.V1Beta1.AggregateSubaccountVolumeRecord), global::Injective.Exchange.V1Beta1.AggregateSubaccountVolumeRecord.Parser, new[]{ "SubaccountId", "MarketVolumes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Exchange.V1Beta1.AggregateAccountVolumeRecord), global::Injective.Exchange.V1Beta1.AggregateAccountVolumeRecord.Parser, new[]{ "Account", "MarketVolumes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Exchange.V1Beta1.MarketVolume), global::Injective.Exchange.V1Beta1.MarketVolume.Parser, new[]{ "MarketId", "Volume" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Exchange.V1Beta1.DenomDecimals), global::Injective.Exchange.V1Beta1.DenomDecimals.Parser, new[]{ "Denom", "Decimals" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum AtomicMarketOrderAccessLevel {
    [pbr::OriginalName("Nobody")] Nobody = 0,
    /// <summary>
    /// currently unsupported
    /// </summary>
    [pbr::OriginalName("BeginBlockerSmartContractsOnly")] BeginBlockerSmartContractsOnly = 1,
    [pbr::OriginalName("SmartContractsOnly")] SmartContractsOnly = 2,
    [pbr::OriginalName("Everyone")] Everyone = 3,
  }

  public enum MarketStatus {
    [pbr::OriginalName("Unspecified")] Unspecified = 0,
    [pbr::OriginalName("Active")] Active = 1,
    [pbr::OriginalName("Paused")] Paused = 2,
    [pbr::OriginalName("Demolished")] Demolished = 3,
    [pbr::OriginalName("Expired")] Expired = 4,
  }

  public enum OrderType {
    [pbr::OriginalName("UNSPECIFIED")] Unspecified = 0,
    [pbr::OriginalName("BUY")] Buy = 1,
    [pbr::OriginalName("SELL")] Sell = 2,
    [pbr::OriginalName("STOP_BUY")] StopBuy = 3,
    [pbr::OriginalName("STOP_SELL")] StopSell = 4,
    [pbr::OriginalName("TAKE_BUY")] TakeBuy = 5,
    [pbr::OriginalName("TAKE_SELL")] TakeSell = 6,
    [pbr::OriginalName("BUY_PO")] BuyPo = 7,
    [pbr::OriginalName("SELL_PO")] SellPo = 8,
    [pbr::OriginalName("BUY_ATOMIC")] BuyAtomic = 9,
    [pbr::OriginalName("SELL_ATOMIC")] SellAtomic = 10,
  }

  public enum ExecutionType {
    [pbr::OriginalName("UnspecifiedExecutionType")] UnspecifiedExecutionType = 0,
    [pbr::OriginalName("Market")] Market = 1,
    [pbr::OriginalName("LimitFill")] LimitFill = 2,
    [pbr::OriginalName("LimitMatchRestingOrder")] LimitMatchRestingOrder = 3,
    [pbr::OriginalName("LimitMatchNewOrder")] LimitMatchNewOrder = 4,
    [pbr::OriginalName("MarketLiquidation")] MarketLiquidation = 5,
    [pbr::OriginalName("ExpiryMarketSettlement")] ExpiryMarketSettlement = 6,
  }

  public enum OrderMask {
    [pbr::OriginalName("UNUSED")] Unused = 0,
    [pbr::OriginalName("ANY")] Any = 1,
    [pbr::OriginalName("REGULAR")] Regular = 2,
    [pbr::OriginalName("CONDITIONAL")] Conditional = 4,
    /// <summary>
    /// for conditional orders means HIGHER
    /// </summary>
    [pbr::OriginalName("DIRECTION_BUY_OR_HIGHER")] DirectionBuyOrHigher = 8,
    /// <summary>
    /// for conditional orders means LOWER
    /// </summary>
    [pbr::OriginalName("DIRECTION_SELL_OR_LOWER")] DirectionSellOrLower = 16,
    [pbr::OriginalName("TYPE_MARKET")] TypeMarket = 32,
    [pbr::OriginalName("TYPE_LIMIT")] TypeLimit = 64,
  }

  #endregion

  #region Messages
  public sealed partial class Params : pb::IMessage<Params>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Params> _parser = new pb::MessageParser<Params>(() => new Params());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Params> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Exchange.V1Beta1.ExchangeReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Params() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Params(Params other) : this() {
      spotMarketInstantListingFee_ = other.spotMarketInstantListingFee_ != null ? other.spotMarketInstantListingFee_.Clone() : null;
      derivativeMarketInstantListingFee_ = other.derivativeMarketInstantListingFee_ != null ? other.derivativeMarketInstantListingFee_.Clone() : null;
      defaultSpotMakerFeeRate_ = other.defaultSpotMakerFeeRate_;
      defaultSpotTakerFeeRate_ = other.defaultSpotTakerFeeRate_;
      defaultDerivativeMakerFeeRate_ = other.defaultDerivativeMakerFeeRate_;
      defaultDerivativeTakerFeeRate_ = other.defaultDerivativeTakerFeeRate_;
      defaultInitialMarginRatio_ = other.defaultInitialMarginRatio_;
      defaultMaintenanceMarginRatio_ = other.defaultMaintenanceMarginRatio_;
      defaultFundingInterval_ = other.defaultFundingInterval_;
      fundingMultiple_ = other.fundingMultiple_;
      relayerFeeShareRate_ = other.relayerFeeShareRate_;
      defaultHourlyFundingRateCap_ = other.defaultHourlyFundingRateCap_;
      defaultHourlyInterestRate_ = other.defaultHourlyInterestRate_;
      maxDerivativeOrderSideCount_ = other.maxDerivativeOrderSideCount_;
      injRewardStakedRequirementThreshold_ = other.injRewardStakedRequirementThreshold_;
      tradingRewardsVestingDuration_ = other.tradingRewardsVestingDuration_;
      liquidatorRewardShareRate_ = other.liquidatorRewardShareRate_;
      binaryOptionsMarketInstantListingFee_ = other.binaryOptionsMarketInstantListingFee_ != null ? other.binaryOptionsMarketInstantListingFee_.Clone() : null;
      atomicMarketOrderAccessLevel_ = other.atomicMarketOrderAccessLevel_;
      spotAtomicMarketOrderFeeMultiplier_ = other.spotAtomicMarketOrderFeeMultiplier_;
      derivativeAtomicMarketOrderFeeMultiplier_ = other.derivativeAtomicMarketOrderFeeMultiplier_;
      binaryOptionsAtomicMarketOrderFeeMultiplier_ = other.binaryOptionsAtomicMarketOrderFeeMultiplier_;
      minimalProtocolFeeRate_ = other.minimalProtocolFeeRate_;
      isInstantDerivativeMarketLaunchEnabled_ = other.isInstantDerivativeMarketLaunchEnabled_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Params Clone() {
      return new Params(this);
    }

    /// <summary>Field number for the "spot_market_instant_listing_fee" field.</summary>
    public const int SpotMarketInstantListingFeeFieldNumber = 1;
    private global::Cosmos.Base.V1Beta1.Coin spotMarketInstantListingFee_;
    /// <summary>
    /// spot_market_instant_listing_fee defines the expedited fee in INJ required
    /// to create a spot market by bypassing governance
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Cosmos.Base.V1Beta1.Coin SpotMarketInstantListingFee {
      get { return spotMarketInstantListingFee_; }
      set {
        spotMarketInstantListingFee_ = value;
      }
    }

    /// <summary>Field number for the "derivative_market_instant_listing_fee" field.</summary>
    public const int DerivativeMarketInstantListingFeeFieldNumber = 2;
    private global::Cosmos.Base.V1Beta1.Coin derivativeMarketInstantListingFee_;
    /// <summary>
    /// derivative_market_instant_listing_fee defines the expedited fee in INJ
    /// required to create a derivative market by bypassing governance
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Cosmos.Base.V1Beta1.Coin DerivativeMarketInstantListingFee {
      get { return derivativeMarketInstantListingFee_; }
      set {
        derivativeMarketInstantListingFee_ = value;
      }
    }

    /// <summary>Field number for the "default_spot_maker_fee_rate" field.</summary>
    public const int DefaultSpotMakerFeeRateFieldNumber = 3;
    private string defaultSpotMakerFeeRate_ = "";
    /// <summary>
    /// default_spot_maker_fee defines the default exchange trade fee for makers on
    /// a spot market
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DefaultSpotMakerFeeRate {
      get { return defaultSpotMakerFeeRate_; }
      set {
        defaultSpotMakerFeeRate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "default_spot_taker_fee_rate" field.</summary>
    public const int DefaultSpotTakerFeeRateFieldNumber = 4;
    private string defaultSpotTakerFeeRate_ = "";
    /// <summary>
    /// default_spot_taker_fee_rate defines the default exchange trade fee rate for
    /// takers on a new spot market
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DefaultSpotTakerFeeRate {
      get { return defaultSpotTakerFeeRate_; }
      set {
        defaultSpotTakerFeeRate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "default_derivative_maker_fee_rate" field.</summary>
    public const int DefaultDerivativeMakerFeeRateFieldNumber = 5;
    private string defaultDerivativeMakerFeeRate_ = "";
    /// <summary>
    /// default_derivative_maker_fee defines the default exchange trade fee for
    /// makers on a new derivative market
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DefaultDerivativeMakerFeeRate {
      get { return defaultDerivativeMakerFeeRate_; }
      set {
        defaultDerivativeMakerFeeRate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "default_derivative_taker_fee_rate" field.</summary>
    public const int DefaultDerivativeTakerFeeRateFieldNumber = 6;
    private string defaultDerivativeTakerFeeRate_ = "";
    /// <summary>
    /// default_derivative_taker_fee defines the default exchange trade fee for
    /// takers on a new derivative market
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DefaultDerivativeTakerFeeRate {
      get { return defaultDerivativeTakerFeeRate_; }
      set {
        defaultDerivativeTakerFeeRate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "default_initial_margin_ratio" field.</summary>
    public const int DefaultInitialMarginRatioFieldNumber = 7;
    private string defaultInitialMarginRatio_ = "";
    /// <summary>
    /// default_initial_margin_ratio defines the default initial margin ratio on a
    /// new derivative market
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DefaultInitialMarginRatio {
      get { return defaultInitialMarginRatio_; }
      set {
        defaultInitialMarginRatio_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "default_maintenance_margin_ratio" field.</summary>
    public const int DefaultMaintenanceMarginRatioFieldNumber = 8;
    private string defaultMaintenanceMarginRatio_ = "";
    /// <summary>
    /// default_maintenance_margin_ratio defines the default maintenance margin
    /// ratio on a new derivative market
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DefaultMaintenanceMarginRatio {
      get { return defaultMaintenanceMarginRatio_; }
      set {
        defaultMaintenanceMarginRatio_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "default_funding_interval" field.</summary>
    public const int DefaultFundingIntervalFieldNumber = 9;
    private long defaultFundingInterval_;
    /// <summary>
    /// default_funding_interval defines the default funding interval on a
    /// derivative market
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long DefaultFundingInterval {
      get { return defaultFundingInterval_; }
      set {
        defaultFundingInterval_ = value;
      }
    }

    /// <summary>Field number for the "funding_multiple" field.</summary>
    public const int FundingMultipleFieldNumber = 10;
    private long fundingMultiple_;
    /// <summary>
    /// funding_multiple defines the timestamp multiple that the funding timestamp
    /// should be a multiple of
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long FundingMultiple {
      get { return fundingMultiple_; }
      set {
        fundingMultiple_ = value;
      }
    }

    /// <summary>Field number for the "relayer_fee_share_rate" field.</summary>
    public const int RelayerFeeShareRateFieldNumber = 11;
    private string relayerFeeShareRate_ = "";
    /// <summary>
    /// relayer_fee_share_rate defines the trade fee share percentage that goes to
    /// relayers
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RelayerFeeShareRate {
      get { return relayerFeeShareRate_; }
      set {
        relayerFeeShareRate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "default_hourly_funding_rate_cap" field.</summary>
    public const int DefaultHourlyFundingRateCapFieldNumber = 12;
    private string defaultHourlyFundingRateCap_ = "";
    /// <summary>
    /// default_hourly_funding_rate_cap defines the default maximum absolute value
    /// of the hourly funding rate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DefaultHourlyFundingRateCap {
      get { return defaultHourlyFundingRateCap_; }
      set {
        defaultHourlyFundingRateCap_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "default_hourly_interest_rate" field.</summary>
    public const int DefaultHourlyInterestRateFieldNumber = 13;
    private string defaultHourlyInterestRate_ = "";
    /// <summary>
    /// hourly_interest_rate defines the hourly interest rate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DefaultHourlyInterestRate {
      get { return defaultHourlyInterestRate_; }
      set {
        defaultHourlyInterestRate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "max_derivative_order_side_count" field.</summary>
    public const int MaxDerivativeOrderSideCountFieldNumber = 14;
    private uint maxDerivativeOrderSideCount_;
    /// <summary>
    /// max_derivative_order_side_count defines the maximum number of derivative
    /// active orders a subaccount can have for a given orderbook side
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxDerivativeOrderSideCount {
      get { return maxDerivativeOrderSideCount_; }
      set {
        maxDerivativeOrderSideCount_ = value;
      }
    }

    /// <summary>Field number for the "inj_reward_staked_requirement_threshold" field.</summary>
    public const int InjRewardStakedRequirementThresholdFieldNumber = 15;
    private string injRewardStakedRequirementThreshold_ = "";
    /// <summary>
    /// inj_reward_staked_requirement_threshold defines the threshold on INJ
    /// rewards after which one also needs staked INJ to receive more
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InjRewardStakedRequirementThreshold {
      get { return injRewardStakedRequirementThreshold_; }
      set {
        injRewardStakedRequirementThreshold_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "trading_rewards_vesting_duration" field.</summary>
    public const int TradingRewardsVestingDurationFieldNumber = 16;
    private long tradingRewardsVestingDuration_;
    /// <summary>
    /// the trading_rewards_vesting_duration defines the vesting times for trading
    /// rewards
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TradingRewardsVestingDuration {
      get { return tradingRewardsVestingDuration_; }
      set {
        tradingRewardsVestingDuration_ = value;
      }
    }

    /// <summary>Field number for the "liquidator_reward_share_rate" field.</summary>
    public const int LiquidatorRewardShareRateFieldNumber = 17;
    private string liquidatorRewardShareRate_ = "";
    /// <summary>
    /// liquidator_reward_share_rate defines the ratio of the split of the surplus
    /// collateral that goes to the liquidator
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LiquidatorRewardShareRate {
      get { return liquidatorRewardShareRate_; }
      set {
        liquidatorRewardShareRate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "binary_options_market_instant_listing_fee" field.</summary>
    public const int BinaryOptionsMarketInstantListingFeeFieldNumber = 18;
    private global::Cosmos.Base.V1Beta1.Coin binaryOptionsMarketInstantListingFee_;
    /// <summary>
    /// binary_options_market_instant_listing_fee defines the expedited fee in INJ
    /// required to create a derivative market by bypassing governance
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Cosmos.Base.V1Beta1.Coin BinaryOptionsMarketInstantListingFee {
      get { return binaryOptionsMarketInstantListingFee_; }
      set {
        binaryOptionsMarketInstantListingFee_ = value;
      }
    }

    /// <summary>Field number for the "atomic_market_order_access_level" field.</summary>
    public const int AtomicMarketOrderAccessLevelFieldNumber = 19;
    private global::Injective.Exchange.V1Beta1.AtomicMarketOrderAccessLevel atomicMarketOrderAccessLevel_ = global::Injective.Exchange.V1Beta1.AtomicMarketOrderAccessLevel.Nobody;
    /// <summary>
    /// atomic_market_order_access_level defines the required access permissions
    /// for executing atomic market orders
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Injective.Exchange.V1Beta1.AtomicMarketOrderAccessLevel AtomicMarketOrderAccessLevel {
      get { return atomicMarketOrderAccessLevel_; }
      set {
        atomicMarketOrderAccessLevel_ = value;
      }
    }

    /// <summary>Field number for the "spot_atomic_market_order_fee_multiplier" field.</summary>
    public const int SpotAtomicMarketOrderFeeMultiplierFieldNumber = 20;
    private string spotAtomicMarketOrderFeeMultiplier_ = "";
    /// <summary>
    /// spot_atomic_market_order_fee_multiplier defines the default multiplier for
    /// executing atomic market orders in spot markets
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SpotAtomicMarketOrderFeeMultiplier {
      get { return spotAtomicMarketOrderFeeMultiplier_; }
      set {
        spotAtomicMarketOrderFeeMultiplier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "derivative_atomic_market_order_fee_multiplier" field.</summary>
    public const int DerivativeAtomicMarketOrderFeeMultiplierFieldNumber = 21;
    private string derivativeAtomicMarketOrderFeeMultiplier_ = "";
    /// <summary>
    /// derivative_atomic_market_order_fee_multiplier defines the default
    /// multiplier for executing atomic market orders in derivative markets
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DerivativeAtomicMarketOrderFeeMultiplier {
      get { return derivativeAtomicMarketOrderFeeMultiplier_; }
      set {
        derivativeAtomicMarketOrderFeeMultiplier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "binary_options_atomic_market_order_fee_multiplier" field.</summary>
    public const int BinaryOptionsAtomicMarketOrderFeeMultiplierFieldNumber = 22;
    private string binaryOptionsAtomicMarketOrderFeeMultiplier_ = "";
    /// <summary>
    /// binary_options_atomic_market_order_fee_multiplier defines the default
    /// multiplier for executing atomic market orders in binary markets
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BinaryOptionsAtomicMarketOrderFeeMultiplier {
      get { return binaryOptionsAtomicMarketOrderFeeMultiplier_; }
      set {
        binaryOptionsAtomicMarketOrderFeeMultiplier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "minimal_protocol_fee_rate" field.</summary>
    public const int MinimalProtocolFeeRateFieldNumber = 23;
    private string minimalProtocolFeeRate_ = "";
    /// <summary>
    /// minimal_protocol_fee_rate defines the minimal protocol fee rate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MinimalProtocolFeeRate {
      get { return minimalProtocolFeeRate_; }
      set {
        minimalProtocolFeeRate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "is_instant_derivative_market_launch_enabled" field.</summary>
    public const int IsInstantDerivativeMarketLaunchEnabledFieldNumber = 24;
    private bool isInstantDerivativeMarketLaunchEnabled_;
    /// <summary>
    /// is_instant_derivative_market_launch_enabled defines whether instant
    /// derivative market launch is enabled
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsInstantDerivativeMarketLaunchEnabled {
      get { return isInstantDerivativeMarketLaunchEnabled_; }
      set {
        isInstantDerivativeMarketLaunchEnabled_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Params);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Params other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SpotMarketInstantListingFee, other.SpotMarketInstantListingFee)) return false;
      if (!object.Equals(DerivativeMarketInstantListingFee, other.DerivativeMarketInstantListingFee)) return false;
      if (DefaultSpotMakerFeeRate != other.DefaultSpotMakerFeeRate) return false;
      if (DefaultSpotTakerFeeRate != other.DefaultSpotTakerFeeRate) return false;
      if (DefaultDerivativeMakerFeeRate != other.DefaultDerivativeMakerFeeRate) return false;
      if (DefaultDerivativeTakerFeeRate != other.DefaultDerivativeTakerFeeRate) return false;
      if (DefaultInitialMarginRatio != other.DefaultInitialMarginRatio) return false;
      if (DefaultMaintenanceMarginRatio != other.DefaultMaintenanceMarginRatio) return false;
      if (DefaultFundingInterval != other.DefaultFundingInterval) return false;
      if (FundingMultiple != other.FundingMultiple) return false;
      if (RelayerFeeShareRate != other.RelayerFeeShareRate) return false;
      if (DefaultHourlyFundingRateCap != other.DefaultHourlyFundingRateCap) return false;
      if (DefaultHourlyInterestRate != other.DefaultHourlyInterestRate) return false;
      if (MaxDerivativeOrderSideCount != other.MaxDerivativeOrderSideCount) return false;
      if (InjRewardStakedRequirementThreshold != other.InjRewardStakedRequirementThreshold) return false;
      if (TradingRewardsVestingDuration != other.TradingRewardsVestingDuration) return false;
      if (LiquidatorRewardShareRate != other.LiquidatorRewardShareRate) return false;
      if (!object.Equals(BinaryOptionsMarketInstantListingFee, other.BinaryOptionsMarketInstantListingFee)) return false;
      if (AtomicMarketOrderAccessLevel != other.AtomicMarketOrderAccessLevel) return false;
      if (SpotAtomicMarketOrderFeeMultiplier != other.SpotAtomicMarketOrderFeeMultiplier) return false;
      if (DerivativeAtomicMarketOrderFeeMultiplier != other.DerivativeAtomicMarketOrderFeeMultiplier) return false;
      if (BinaryOptionsAtomicMarketOrderFeeMultiplier != other.BinaryOptionsAtomicMarketOrderFeeMultiplier) return false;
      if (MinimalProtocolFeeRate != other.MinimalProtocolFeeRate) return false;
      if (IsInstantDerivativeMarketLaunchEnabled != other.IsInstantDerivativeMarketLaunchEnabled) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (spotMarketInstantListingFee_ != null) hash ^= SpotMarketInstantListingFee.GetHashCode();
      if (derivativeMarketInstantListingFee_ != null) hash ^= DerivativeMarketInstantListingFee.GetHashCode();
      if (DefaultSpotMakerFeeRate.Length != 0) hash ^= DefaultSpotMakerFeeRate.GetHashCode();
      if (DefaultSpotTakerFeeRate.Length != 0) hash ^= DefaultSpotTakerFeeRate.GetHashCode();
      if (DefaultDerivativeMakerFeeRate.Length != 0) hash ^= DefaultDerivativeMakerFeeRate.GetHashCode();
      if (DefaultDerivativeTakerFeeRate.Length != 0) hash ^= DefaultDerivativeTakerFeeRate.GetHashCode();
      if (DefaultInitialMarginRatio.Length != 0) hash ^= DefaultInitialMarginRatio.GetHashCode();
      if (DefaultMaintenanceMarginRatio.Length != 0) hash ^= DefaultMaintenanceMarginRatio.GetHashCode();
      if (DefaultFundingInterval != 0L) hash ^= DefaultFundingInterval.GetHashCode();
      if (FundingMultiple != 0L) hash ^= FundingMultiple.GetHashCode();
      if (RelayerFeeShareRate.Length != 0) hash ^= RelayerFeeShareRate.GetHashCode();
      if (DefaultHourlyFundingRateCap.Length != 0) hash ^= DefaultHourlyFundingRateCap.GetHashCode();
      if (DefaultHourlyInterestRate.Length != 0) hash ^= DefaultHourlyInterestRate.GetHashCode();
      if (MaxDerivativeOrderSideCount != 0) hash ^= MaxDerivativeOrderSideCount.GetHashCode();
      if (InjRewardStakedRequirementThreshold.Length != 0) hash ^= InjRewardStakedRequirementThreshold.GetHashCode();
      if (TradingRewardsVestingDuration != 0L) hash ^= TradingRewardsVestingDuration.GetHashCode();
      if (LiquidatorRewardShareRate.Length != 0) hash ^= LiquidatorRewardShareRate.GetHashCode();
      if (binaryOptionsMarketInstantListingFee_ != null) hash ^= BinaryOptionsMarketInstantListingFee.GetHashCode();
      if (AtomicMarketOrderAccessLevel != global::Injective.Exchange.V1Beta1.AtomicMarketOrderAccessLevel.Nobody) hash ^= AtomicMarketOrderAccessLevel.GetHashCode();
      if (SpotAtomicMarketOrderFeeMultiplier.Length != 0) hash ^= SpotAtomicMarketOrderFeeMultiplier.GetHashCode();
      if (DerivativeAtomicMarketOrderFeeMultiplier.Length != 0) hash ^= DerivativeAtomicMarketOrderFeeMultiplier.GetHashCode();
      if (BinaryOptionsAtomicMarketOrderFeeMultiplier.Length != 0) hash ^= BinaryOptionsAtomicMarketOrderFeeMultiplier.GetHashCode();
      if (MinimalProtocolFeeRate.Length != 0) hash ^= MinimalProtocolFeeRate.GetHashCode();
      if (IsInstantDerivativeMarketLaunchEnabled != false) hash ^= IsInstantDerivativeMarketLaunchEnabled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (spotMarketInstantListingFee_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SpotMarketInstantListingFee);
      }
      if (derivativeMarketInstantListingFee_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DerivativeMarketInstantListingFee);
      }
      if (DefaultSpotMakerFeeRate.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DefaultSpotMakerFeeRate);
      }
      if (DefaultSpotTakerFeeRate.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DefaultSpotTakerFeeRate);
      }
      if (DefaultDerivativeMakerFeeRate.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DefaultDerivativeMakerFeeRate);
      }
      if (DefaultDerivativeTakerFeeRate.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(DefaultDerivativeTakerFeeRate);
      }
      if (DefaultInitialMarginRatio.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(DefaultInitialMarginRatio);
      }
      if (DefaultMaintenanceMarginRatio.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(DefaultMaintenanceMarginRatio);
      }
      if (DefaultFundingInterval != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(DefaultFundingInterval);
      }
      if (FundingMultiple != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(FundingMultiple);
      }
      if (RelayerFeeShareRate.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(RelayerFeeShareRate);
      }
      if (DefaultHourlyFundingRateCap.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(DefaultHourlyFundingRateCap);
      }
      if (DefaultHourlyInterestRate.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(DefaultHourlyInterestRate);
      }
      if (MaxDerivativeOrderSideCount != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(MaxDerivativeOrderSideCount);
      }
      if (InjRewardStakedRequirementThreshold.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(InjRewardStakedRequirementThreshold);
      }
      if (TradingRewardsVestingDuration != 0L) {
        output.WriteRawTag(128, 1);
        output.WriteInt64(TradingRewardsVestingDuration);
      }
      if (LiquidatorRewardShareRate.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(LiquidatorRewardShareRate);
      }
      if (binaryOptionsMarketInstantListingFee_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(BinaryOptionsMarketInstantListingFee);
      }
      if (AtomicMarketOrderAccessLevel != global::Injective.Exchange.V1Beta1.AtomicMarketOrderAccessLevel.Nobody) {
        output.WriteRawTag(152, 1);
        output.WriteEnum((int) AtomicMarketOrderAccessLevel);
      }
      if (SpotAtomicMarketOrderFeeMultiplier.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(SpotAtomicMarketOrderFeeMultiplier);
      }
      if (DerivativeAtomicMarketOrderFeeMultiplier.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(DerivativeAtomicMarketOrderFeeMultiplier);
      }
      if (BinaryOptionsAtomicMarketOrderFeeMultiplier.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(BinaryOptionsAtomicMarketOrderFeeMultiplier);
      }
      if (MinimalProtocolFeeRate.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(MinimalProtocolFeeRate);
      }
      if (IsInstantDerivativeMarketLaunchEnabled != false) {
        output.WriteRawTag(192, 1);
        output.WriteBool(IsInstantDerivativeMarketLaunchEnabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (spotMarketInstantListingFee_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SpotMarketInstantListingFee);
      }
      if (derivativeMarketInstantListingFee_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DerivativeMarketInstantListingFee);
      }
      if (DefaultSpotMakerFeeRate.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DefaultSpotMakerFeeRate);
      }
      if (DefaultSpotTakerFeeRate.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DefaultSpotTakerFeeRate);
      }
      if (DefaultDerivativeMakerFeeRate.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DefaultDerivativeMakerFeeRate);
      }
      if (DefaultDerivativeTakerFeeRate.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(DefaultDerivativeTakerFeeRate);
      }
      if (DefaultInitialMarginRatio.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(DefaultInitialMarginRatio);
      }
      if (DefaultMaintenanceMarginRatio.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(DefaultMaintenanceMarginRatio);
      }
      if (DefaultFundingInterval != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(DefaultFundingInterval);
      }
      if (FundingMultiple != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(FundingMultiple);
      }
      if (RelayerFeeShareRate.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(RelayerFeeShareRate);
      }
      if (DefaultHourlyFundingRateCap.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(DefaultHourlyFundingRateCap);
      }
      if (DefaultHourlyInterestRate.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(DefaultHourlyInterestRate);
      }
      if (MaxDerivativeOrderSideCount != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(MaxDerivativeOrderSideCount);
      }
      if (InjRewardStakedRequirementThreshold.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(InjRewardStakedRequirementThreshold);
      }
      if (TradingRewardsVestingDuration != 0L) {
        output.WriteRawTag(128, 1);
        output.WriteInt64(TradingRewardsVestingDuration);
      }
      if (LiquidatorRewardShareRate.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(LiquidatorRewardShareRate);
      }
      if (binaryOptionsMarketInstantListingFee_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(BinaryOptionsMarketInstantListingFee);
      }
      if (AtomicMarketOrderAccessLevel != global::Injective.Exchange.V1Beta1.AtomicMarketOrderAccessLevel.Nobody) {
        output.WriteRawTag(152, 1);
        output.WriteEnum((int) AtomicMarketOrderAccessLevel);
      }
      if (SpotAtomicMarketOrderFeeMultiplier.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(SpotAtomicMarketOrderFeeMultiplier);
      }
      if (DerivativeAtomicMarketOrderFeeMultiplier.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(DerivativeAtomicMarketOrderFeeMultiplier);
      }
      if (BinaryOptionsAtomicMarketOrderFeeMultiplier.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(BinaryOptionsAtomicMarketOrderFeeMultiplier);
      }
      if (MinimalProtocolFeeRate.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(MinimalProtocolFeeRate);
      }
      if (IsInstantDerivativeMarketLaunchEnabled != false) {
        output.WriteRawTag(192, 1);
        output.WriteBool(IsInstantDerivativeMarketLaunchEnabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (spotMarketInstantListingFee_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SpotMarketInstantListingFee);
      }
      if (derivativeMarketInstantListingFee_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DerivativeMarketInstantListingFee);
      }
      if (DefaultSpotMakerFeeRate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DefaultSpotMakerFeeRate);
      }
      if (DefaultSpotTakerFeeRate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DefaultSpotTakerFeeRate);
      }
      if (DefaultDerivativeMakerFeeRate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DefaultDerivativeMakerFeeRate);
      }
      if (DefaultDerivativeTakerFeeRate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DefaultDerivativeTakerFeeRate);
      }
      if (DefaultInitialMarginRatio.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DefaultInitialMarginRatio);
      }
      if (DefaultMaintenanceMarginRatio.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DefaultMaintenanceMarginRatio);
      }
      if (DefaultFundingInterval != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DefaultFundingInterval);
      }
      if (FundingMultiple != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FundingMultiple);
      }
      if (RelayerFeeShareRate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RelayerFeeShareRate);
      }
      if (DefaultHourlyFundingRateCap.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DefaultHourlyFundingRateCap);
      }
      if (DefaultHourlyInterestRate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DefaultHourlyInterestRate);
      }
      if (MaxDerivativeOrderSideCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxDerivativeOrderSideCount);
      }
      if (InjRewardStakedRequirementThreshold.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InjRewardStakedRequirementThreshold);
      }
      if (TradingRewardsVestingDuration != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(TradingRewardsVestingDuration);
      }
      if (LiquidatorRewardShareRate.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LiquidatorRewardShareRate);
      }
      if (binaryOptionsMarketInstantListingFee_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BinaryOptionsMarketInstantListingFee);
      }
      if (AtomicMarketOrderAccessLevel != global::Injective.Exchange.V1Beta1.AtomicMarketOrderAccessLevel.Nobody) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) AtomicMarketOrderAccessLevel);
      }
      if (SpotAtomicMarketOrderFeeMultiplier.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(SpotAtomicMarketOrderFeeMultiplier);
      }
      if (DerivativeAtomicMarketOrderFeeMultiplier.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DerivativeAtomicMarketOrderFeeMultiplier);
      }
      if (BinaryOptionsAtomicMarketOrderFeeMultiplier.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(BinaryOptionsAtomicMarketOrderFeeMultiplier);
      }
      if (MinimalProtocolFeeRate.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MinimalProtocolFeeRate);
      }
      if (IsInstantDerivativeMarketLaunchEnabled != false) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Params other) {
      if (other == null) {
        return;
      }
      if (other.spotMarketInstantListingFee_ != null) {
        if (spotMarketInstantListingFee_ == null) {
          SpotMarketInstantListingFee = new global::Cosmos.Base.V1Beta1.Coin();
        }
        SpotMarketInstantListingFee.MergeFrom(other.SpotMarketInstantListingFee);
      }
      if (other.derivativeMarketInstantListingFee_ != null) {
        if (derivativeMarketInstantListingFee_ == null) {
          DerivativeMarketInstantListingFee = new global::Cosmos.Base.V1Beta1.Coin();
        }
        DerivativeMarketInstantListingFee.MergeFrom(other.DerivativeMarketInstantListingFee);
      }
      if (other.DefaultSpotMakerFeeRate.Length != 0) {
        DefaultSpotMakerFeeRate = other.DefaultSpotMakerFeeRate;
      }
      if (other.DefaultSpotTakerFeeRate.Length != 0) {
        DefaultSpotTakerFeeRate = other.DefaultSpotTakerFeeRate;
      }
      if (other.DefaultDerivativeMakerFeeRate.Length != 0) {
        DefaultDerivativeMakerFeeRate = other.DefaultDerivativeMakerFeeRate;
      }
      if (other.DefaultDerivativeTakerFeeRate.Length != 0) {
        DefaultDerivativeTakerFeeRate = other.DefaultDerivativeTakerFeeRate;
      }
      if (other.DefaultInitialMarginRatio.Length != 0) {
        DefaultInitialMarginRatio = other.DefaultInitialMarginRatio;
      }
      if (other.DefaultMaintenanceMarginRatio.Length != 0) {
        DefaultMaintenanceMarginRatio = other.DefaultMaintenanceMarginRatio;
      }
      if (other.DefaultFundingInterval != 0L) {
        DefaultFundingInterval = other.DefaultFundingInterval;
      }
      if (other.FundingMultiple != 0L) {
        FundingMultiple = other.FundingMultiple;
      }
      if (other.RelayerFeeShareRate.Length != 0) {
        RelayerFeeShareRate = other.RelayerFeeShareRate;
      }
      if (other.DefaultHourlyFundingRateCap.Length != 0) {
        DefaultHourlyFundingRateCap = other.DefaultHourlyFundingRateCap;
      }
      if (other.DefaultHourlyInterestRate.Length != 0) {
        DefaultHourlyInterestRate = other.DefaultHourlyInterestRate;
      }
      if (other.MaxDerivativeOrderSideCount != 0) {
        MaxDerivativeOrderSideCount = other.MaxDerivativeOrderSideCount;
      }
      if (other.InjRewardStakedRequirementThreshold.Length != 0) {
        InjRewardStakedRequirementThreshold = other.InjRewardStakedRequirementThreshold;
      }
      if (other.TradingRewardsVestingDuration != 0L) {
        TradingRewardsVestingDuration = other.TradingRewardsVestingDuration;
      }
      if (other.LiquidatorRewardShareRate.Length != 0) {
        LiquidatorRewardShareRate = other.LiquidatorRewardShareRate;
      }
      if (other.binaryOptionsMarketInstantListingFee_ != null) {
        if (binaryOptionsMarketInstantListingFee_ == null) {
          BinaryOptionsMarketInstantListingFee = new global::Cosmos.Base.V1Beta1.Coin();
        }
        BinaryOptionsMarketInstantListingFee.MergeFrom(other.BinaryOptionsMarketInstantListingFee);
      }
      if (other.AtomicMarketOrderAccessLevel != global::Injective.Exchange.V1Beta1.AtomicMarketOrderAccessLevel.Nobody) {
        AtomicMarketOrderAccessLevel = other.AtomicMarketOrderAccessLevel;
      }
      if (other.SpotAtomicMarketOrderFeeMultiplier.Length != 0) {
        SpotAtomicMarketOrderFeeMultiplier = other.SpotAtomicMarketOrderFeeMultiplier;
      }
      if (other.DerivativeAtomicMarketOrderFeeMultiplier.Length != 0) {
        DerivativeAtomicMarketOrderFeeMultiplier = other.DerivativeAtomicMarketOrderFeeMultiplier;
      }
      if (other.BinaryOptionsAtomicMarketOrderFeeMultiplier.Length != 0) {
        BinaryOptionsAtomicMarketOrderFeeMultiplier = other.BinaryOptionsAtomicMarketOrderFeeMultiplier;
      }
      if (other.MinimalProtocolFeeRate.Length != 0) {
        MinimalProtocolFeeRate = other.MinimalProtocolFeeRate;
      }
      if (other.IsInstantDerivativeMarketLaunchEnabled != false) {
        IsInstantDerivativeMarketLaunchEnabled = other.IsInstantDerivativeMarketLaunchEnabled;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (spotMarketInstantListingFee_ == null) {
              SpotMarketInstantListingFee = new global::Cosmos.Base.V1Beta1.Coin();
            }
            input.ReadMessage(SpotMarketInstantListingFee);
            break;
          }
          case 18: {
            if (derivativeMarketInstantListingFee_ == null) {
              DerivativeMarketInstantListingFee = new global::Cosmos.Base.V1Beta1.Coin();
            }
            input.ReadMessage(DerivativeMarketInstantListingFee);
            break;
          }
          case 26: {
            DefaultSpotMakerFeeRate = input.ReadString();
            break;
          }
          case 34: {
            DefaultSpotTakerFeeRate = input.ReadString();
            break;
          }
          case 42: {
            DefaultDerivativeMakerFeeRate = input.ReadString();
            break;
          }
          case 50: {
            DefaultDerivativeTakerFeeRate = input.ReadString();
            break;
          }
          case 58: {
            DefaultInitialMarginRatio = input.ReadString();
            break;
          }
          case 66: {
            DefaultMaintenanceMarginRatio = input.ReadString();
            break;
          }
          case 72: {
            DefaultFundingInterval = input.ReadInt64();
            break;
          }
          case 80: {
            FundingMultiple = input.ReadInt64();
            break;
          }
          case 90: {
            RelayerFeeShareRate = input.ReadString();
            break;
          }
          case 98: {
            DefaultHourlyFundingRateCap = input.ReadString();
            break;
          }
          case 106: {
            DefaultHourlyInterestRate = input.ReadString();
            break;
          }
          case 112: {
            MaxDerivativeOrderSideCount = input.ReadUInt32();
            break;
          }
          case 122: {
            InjRewardStakedRequirementThreshold = input.ReadString();
            break;
          }
          case 128: {
            TradingRewardsVestingDuration = input.ReadInt64();
            break;
          }
          case 138: {
            LiquidatorRewardShareRate = input.ReadString();
            break;
          }
          case 146: {
            if (binaryOptionsMarketInstantListingFee_ == null) {
              BinaryOptionsMarketInstantListingFee = new global::Cosmos.Base.V1Beta1.Coin();
            }
            input.ReadMessage(BinaryOptionsMarketInstantListingFee);
            break;
          }
          case 152: {
            AtomicMarketOrderAccessLevel = (global::Injective.Exchange.V1Beta1.AtomicMarketOrderAccessLevel) input.ReadEnum();
            break;
          }
          case 162: {
            SpotAtomicMarketOrderFeeMultiplier = input.ReadString();
            break;
          }
          case 170: {
            DerivativeAtomicMarketOrderFeeMultiplier = input.ReadString();
            break;
          }
          case 178: {
            BinaryOptionsAtomicMarketOrderFeeMultiplier = input.ReadString();
            break;
          }
          case 186: {
            MinimalProtocolFeeRate = input.ReadString();
            break;
          }
          case 192: {
            IsInstantDerivativeMarketLaunchEnabled = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (spotMarketInstantListingFee_ == null) {
              SpotMarketInstantListingFee = new global::Cosmos.Base.V1Beta1.Coin();
            }
            input.ReadMessage(SpotMarketInstantListingFee);
            break;
          }
          case 18: {
            if (derivativeMarketInstantListingFee_ == null) {
              DerivativeMarketInstantListingFee = new global::Cosmos.Base.V1Beta1.Coin();
            }
            input.ReadMessage(DerivativeMarketInstantListingFee);
            break;
          }
          case 26: {
            DefaultSpotMakerFeeRate = input.ReadString();
            break;
          }
          case 34: {
            DefaultSpotTakerFeeRate = input.ReadString();
            break;
          }
          case 42: {
            DefaultDerivativeMakerFeeRate = input.ReadString();
            break;
          }
          case 50: {
            DefaultDerivativeTakerFeeRate = input.ReadString();
            break;
          }
          case 58: {
            DefaultInitialMarginRatio = input.ReadString();
            break;
          }
          case 66: {
            DefaultMaintenanceMarginRatio = input.ReadString();
            break;
          }
          case 72: {
            DefaultFundingInterval = input.ReadInt64();
            break;
          }
          case 80: {
            FundingMultiple = input.ReadInt64();
            break;
          }
          case 90: {
            RelayerFeeShareRate = input.ReadString();
            break;
          }
          case 98: {
            DefaultHourlyFundingRateCap = input.ReadString();
            break;
          }
          case 106: {
            DefaultHourlyInterestRate = input.ReadString();
            break;
          }
          case 112: {
            MaxDerivativeOrderSideCount = input.ReadUInt32();
            break;
          }
          case 122: {
            InjRewardStakedRequirementThreshold = input.ReadString();
            break;
          }
          case 128: {
            TradingRewardsVestingDuration = input.ReadInt64();
            break;
          }
          case 138: {
            LiquidatorRewardShareRate = input.ReadString();
            break;
          }
          case 146: {
            if (binaryOptionsMarketInstantListingFee_ == null) {
              BinaryOptionsMarketInstantListingFee = new global::Cosmos.Base.V1Beta1.Coin();
            }
            input.ReadMessage(BinaryOptionsMarketInstantListingFee);
            break;
          }
          case 152: {
            AtomicMarketOrderAccessLevel = (global::Injective.Exchange.V1Beta1.AtomicMarketOrderAccessLevel) input.ReadEnum();
            break;
          }
          case 162: {
            SpotAtomicMarketOrderFeeMultiplier = input.ReadString();
            break;
          }
          case 170: {
            DerivativeAtomicMarketOrderFeeMultiplier = input.ReadString();
            break;
          }
          case 178: {
            BinaryOptionsAtomicMarketOrderFeeMultiplier = input.ReadString();
            break;
          }
          case 186: {
            MinimalProtocolFeeRate = input.ReadString();
            break;
          }
          case 192: {
            IsInstantDerivativeMarketLaunchEnabled = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MarketFeeMultiplier : pb::IMessage<MarketFeeMultiplier>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MarketFeeMultiplier> _parser = new pb::MessageParser<MarketFeeMultiplier>(() => new MarketFeeMultiplier());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MarketFeeMultiplier> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Exchange.V1Beta1.ExchangeReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MarketFeeMultiplier() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MarketFeeMultiplier(MarketFeeMultiplier other) : this() {
      marketId_ = other.marketId_;
      feeMultiplier_ = other.feeMultiplier_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MarketFeeMultiplier Clone() {
      return new MarketFeeMultiplier(this);
    }

    /// <summary>Field number for the "market_id" field.</summary>
    public const int MarketIdFieldNumber = 1;
    private string marketId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MarketId {
      get { return marketId_; }
      set {
        marketId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fee_multiplier" field.</summary>
    public const int FeeMultiplierFieldNumber = 2;
    private string feeMultiplier_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FeeMultiplier {
      get { return feeMultiplier_; }
      set {
        feeMultiplier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MarketFeeMultiplier);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MarketFeeMultiplier other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MarketId != other.MarketId) return false;
      if (FeeMultiplier != other.FeeMultiplier) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MarketId.Length != 0) hash ^= MarketId.GetHashCode();
      if (FeeMultiplier.Length != 0) hash ^= FeeMultiplier.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MarketId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MarketId);
      }
      if (FeeMultiplier.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FeeMultiplier);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MarketId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MarketId);
      }
      if (FeeMultiplier.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FeeMultiplier);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MarketId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MarketId);
      }
      if (FeeMultiplier.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FeeMultiplier);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MarketFeeMultiplier other) {
      if (other == null) {
        return;
      }
      if (other.MarketId.Length != 0) {
        MarketId = other.MarketId;
      }
      if (other.FeeMultiplier.Length != 0) {
        FeeMultiplier = other.FeeMultiplier;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MarketId = input.ReadString();
            break;
          }
          case 18: {
            FeeMultiplier = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            MarketId = input.ReadString();
            break;
          }
          case 18: {
            FeeMultiplier = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// An object describing a derivative market in the Injective Futures Protocol.
  /// </summary>
  public sealed partial class DerivativeMarket : pb::IMessage<DerivativeMarket>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DerivativeMarket> _parser = new pb::MessageParser<DerivativeMarket>(() => new DerivativeMarket());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DerivativeMarket> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Exchange.V1Beta1.ExchangeReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DerivativeMarket() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DerivativeMarket(DerivativeMarket other) : this() {
      ticker_ = other.ticker_;
      oracleBase_ = other.oracleBase_;
      oracleQuote_ = other.oracleQuote_;
      oracleType_ = other.oracleType_;
      oracleScaleFactor_ = other.oracleScaleFactor_;
      quoteDenom_ = other.quoteDenom_;
      marketId_ = other.marketId_;
      initialMarginRatio_ = other.initialMarginRatio_;
      maintenanceMarginRatio_ = other.maintenanceMarginRatio_;
      makerFeeRate_ = other.makerFeeRate_;
      takerFeeRate_ = other.takerFeeRate_;
      relayerFeeShareRate_ = other.relayerFeeShareRate_;
      isPerpetual_ = other.isPerpetual_;
      status_ = other.status_;
      minPriceTickSize_ = other.minPriceTickSize_;
      minQuantityTickSize_ = other.minQuantityTickSize_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DerivativeMarket Clone() {
      return new DerivativeMarket(this);
    }

    /// <summary>Field number for the "ticker" field.</summary>
    public const int TickerFieldNumber = 1;
    private string ticker_ = "";
    /// <summary>
    /// Ticker for the derivative contract.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Ticker {
      get { return ticker_; }
      set {
        ticker_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "oracle_base" field.</summary>
    public const int OracleBaseFieldNumber = 2;
    private string oracleBase_ = "";
    /// <summary>
    /// Oracle base currency
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OracleBase {
      get { return oracleBase_; }
      set {
        oracleBase_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "oracle_quote" field.</summary>
    public const int OracleQuoteFieldNumber = 3;
    private string oracleQuote_ = "";
    /// <summary>
    /// Oracle quote currency
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OracleQuote {
      get { return oracleQuote_; }
      set {
        oracleQuote_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "oracle_type" field.</summary>
    public const int OracleTypeFieldNumber = 4;
    private global::Injective.Oracle.V1Beta1.OracleType oracleType_ = global::Injective.Oracle.V1Beta1.OracleType.Unspecified;
    /// <summary>
    /// Oracle type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Injective.Oracle.V1Beta1.OracleType OracleType {
      get { return oracleType_; }
      set {
        oracleType_ = value;
      }
    }

    /// <summary>Field number for the "oracle_scale_factor" field.</summary>
    public const int OracleScaleFactorFieldNumber = 5;
    private uint oracleScaleFactor_;
    /// <summary>
    /// Scale factor for oracle prices.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint OracleScaleFactor {
      get { return oracleScaleFactor_; }
      set {
        oracleScaleFactor_ = value;
      }
    }

    /// <summary>Field number for the "quote_denom" field.</summary>
    public const int QuoteDenomFieldNumber = 6;
    private string quoteDenom_ = "";
    /// <summary>
    /// Address of the quote currency denomination for the derivative contract
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string QuoteDenom {
      get { return quoteDenom_; }
      set {
        quoteDenom_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "market_id" field.</summary>
    public const int MarketIdFieldNumber = 7;
    private string marketId_ = "";
    /// <summary>
    /// Unique market ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MarketId {
      get { return marketId_; }
      set {
        marketId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "initial_margin_ratio" field.</summary>
    public const int InitialMarginRatioFieldNumber = 8;
    private string initialMarginRatio_ = "";
    /// <summary>
    /// initial_margin_ratio defines the initial margin ratio of a derivative
    /// market
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InitialMarginRatio {
      get { return initialMarginRatio_; }
      set {
        initialMarginRatio_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "maintenance_margin_ratio" field.</summary>
    public const int MaintenanceMarginRatioFieldNumber = 9;
    private string maintenanceMarginRatio_ = "";
    /// <summary>
    /// maintenance_margin_ratio defines the maintenance margin ratio of a
    /// derivative market
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MaintenanceMarginRatio {
      get { return maintenanceMarginRatio_; }
      set {
        maintenanceMarginRatio_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "maker_fee_rate" field.</summary>
    public const int MakerFeeRateFieldNumber = 10;
    private string makerFeeRate_ = "";
    /// <summary>
    /// maker_fee_rate defines the maker fee rate of a derivative market
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MakerFeeRate {
      get { return makerFeeRate_; }
      set {
        makerFeeRate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "taker_fee_rate" field.</summary>
    public const int TakerFeeRateFieldNumber = 11;
    private string takerFeeRate_ = "";
    /// <summary>
    /// taker_fee_rate defines the taker fee rate of a derivative market
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TakerFeeRate {
      get { return takerFeeRate_; }
      set {
        takerFeeRate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "relayer_fee_share_rate" field.</summary>
    public const int RelayerFeeShareRateFieldNumber = 12;
    private string relayerFeeShareRate_ = "";
    /// <summary>
    /// relayer_fee_share_rate defines the percentage of the transaction fee shared
    /// with the relayer in a derivative market
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RelayerFeeShareRate {
      get { return relayerFeeShareRate_; }
      set {
        relayerFeeShareRate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isPerpetual" field.</summary>
    public const int IsPerpetualFieldNumber = 13;
    private bool isPerpetual_;
    /// <summary>
    /// true if the market is a perpetual market. false if the market is an expiry
    /// futures market
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsPerpetual {
      get { return isPerpetual_; }
      set {
        isPerpetual_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 14;
    private global::Injective.Exchange.V1Beta1.MarketStatus status_ = global::Injective.Exchange.V1Beta1.MarketStatus.Unspecified;
    /// <summary>
    /// Status of the market
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Injective.Exchange.V1Beta1.MarketStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "min_price_tick_size" field.</summary>
    public const int MinPriceTickSizeFieldNumber = 15;
    private string minPriceTickSize_ = "";
    /// <summary>
    /// min_price_tick_size defines the minimum tick size that the price and margin
    /// required for orders in the market
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MinPriceTickSize {
      get { return minPriceTickSize_; }
      set {
        minPriceTickSize_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "min_quantity_tick_size" field.</summary>
    public const int MinQuantityTickSizeFieldNumber = 16;
    private string minQuantityTickSize_ = "";
    /// <summary>
    /// min_quantity_tick_size defines the minimum tick size of the quantity
    /// required for orders in the market
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MinQuantityTickSize {
      get { return minQuantityTickSize_; }
      set {
        minQuantityTickSize_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DerivativeMarket);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DerivativeMarket other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ticker != other.Ticker) return false;
      if (OracleBase != other.OracleBase) return false;
      if (OracleQuote != other.OracleQuote) return false;
      if (OracleType != other.OracleType) return false;
      if (OracleScaleFactor != other.OracleScaleFactor) return false;
      if (QuoteDenom != other.QuoteDenom) return false;
      if (MarketId != other.MarketId) return false;
      if (InitialMarginRatio != other.InitialMarginRatio) return false;
      if (MaintenanceMarginRatio != other.MaintenanceMarginRatio) return false;
      if (MakerFeeRate != other.MakerFeeRate) return false;
      if (TakerFeeRate != other.TakerFeeRate) return false;
      if (RelayerFeeShareRate != other.RelayerFeeShareRate) return false;
      if (IsPerpetual != other.IsPerpetual) return false;
      if (Status != other.Status) return false;
      if (MinPriceTickSize != other.MinPriceTickSize) return false;
      if (MinQuantityTickSize != other.MinQuantityTickSize) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Ticker.Length != 0) hash ^= Ticker.GetHashCode();
      if (OracleBase.Length != 0) hash ^= OracleBase.GetHashCode();
      if (OracleQuote.Length != 0) hash ^= OracleQuote.GetHashCode();
      if (OracleType != global::Injective.Oracle.V1Beta1.OracleType.Unspecified) hash ^= OracleType.GetHashCode();
      if (OracleScaleFactor != 0) hash ^= OracleScaleFactor.GetHashCode();
      if (QuoteDenom.Length != 0) hash ^= QuoteDenom.GetHashCode();
      if (MarketId.Length != 0) hash ^= MarketId.GetHashCode();
      if (InitialMarginRatio.Length != 0) hash ^= InitialMarginRatio.GetHashCode();
      if (MaintenanceMarginRatio.Length != 0) hash ^= MaintenanceMarginRatio.GetHashCode();
      if (MakerFeeRate.Length != 0) hash ^= MakerFeeRate.GetHashCode();
      if (TakerFeeRate.Length != 0) hash ^= TakerFeeRate.GetHashCode();
      if (RelayerFeeShareRate.Length != 0) hash ^= RelayerFeeShareRate.GetHashCode();
      if (IsPerpetual != false) hash ^= IsPerpetual.GetHashCode();
      if (Status != global::Injective.Exchange.V1Beta1.MarketStatus.Unspecified) hash ^= Status.GetHashCode();
      if (MinPriceTickSize.Length != 0) hash ^= MinPriceTickSize.GetHashCode();
      if (MinQuantityTickSize.Length != 0) hash ^= MinQuantityTickSize.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Ticker.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Ticker);
      }
      if (OracleBase.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(OracleBase);
      }
      if (OracleQuote.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(OracleQuote);
      }
      if (OracleType != global::Injective.Oracle.V1Beta1.OracleType.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) OracleType);
      }
      if (OracleScaleFactor != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(OracleScaleFactor);
      }
      if (QuoteDenom.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(QuoteDenom);
      }
      if (MarketId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(MarketId);
      }
      if (InitialMarginRatio.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(InitialMarginRatio);
      }
      if (MaintenanceMarginRatio.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(MaintenanceMarginRatio);
      }
      if (MakerFeeRate.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(MakerFeeRate);
      }
      if (TakerFeeRate.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(TakerFeeRate);
      }
      if (RelayerFeeShareRate.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(RelayerFeeShareRate);
      }
      if (IsPerpetual != false) {
        output.WriteRawTag(104);
        output.WriteBool(IsPerpetual);
      }
      if (Status != global::Injective.Exchange.V1Beta1.MarketStatus.Unspecified) {
        output.WriteRawTag(112);
        output.WriteEnum((int) Status);
      }
      if (MinPriceTickSize.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(MinPriceTickSize);
      }
      if (MinQuantityTickSize.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(MinQuantityTickSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Ticker.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Ticker);
      }
      if (OracleBase.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(OracleBase);
      }
      if (OracleQuote.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(OracleQuote);
      }
      if (OracleType != global::Injective.Oracle.V1Beta1.OracleType.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) OracleType);
      }
      if (OracleScaleFactor != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(OracleScaleFactor);
      }
      if (QuoteDenom.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(QuoteDenom);
      }
      if (MarketId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(MarketId);
      }
      if (InitialMarginRatio.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(InitialMarginRatio);
      }
      if (MaintenanceMarginRatio.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(MaintenanceMarginRatio);
      }
      if (MakerFeeRate.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(MakerFeeRate);
      }
      if (TakerFeeRate.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(TakerFeeRate);
      }
      if (RelayerFeeShareRate.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(RelayerFeeShareRate);
      }
      if (IsPerpetual != false) {
        output.WriteRawTag(104);
        output.WriteBool(IsPerpetual);
      }
      if (Status != global::Injective.Exchange.V1Beta1.MarketStatus.Unspecified) {
        output.WriteRawTag(112);
        output.WriteEnum((int) Status);
      }
      if (MinPriceTickSize.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(MinPriceTickSize);
      }
      if (MinQuantityTickSize.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(MinQuantityTickSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Ticker.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ticker);
      }
      if (OracleBase.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OracleBase);
      }
      if (OracleQuote.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OracleQuote);
      }
      if (OracleType != global::Injective.Oracle.V1Beta1.OracleType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OracleType);
      }
      if (OracleScaleFactor != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OracleScaleFactor);
      }
      if (QuoteDenom.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(QuoteDenom);
      }
      if (MarketId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MarketId);
      }
      if (InitialMarginRatio.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InitialMarginRatio);
      }
      if (MaintenanceMarginRatio.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MaintenanceMarginRatio);
      }
      if (MakerFeeRate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MakerFeeRate);
      }
      if (TakerFeeRate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TakerFeeRate);
      }
      if (RelayerFeeShareRate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RelayerFeeShareRate);
      }
      if (IsPerpetual != false) {
        size += 1 + 1;
      }
      if (Status != global::Injective.Exchange.V1Beta1.MarketStatus.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (MinPriceTickSize.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MinPriceTickSize);
      }
      if (MinQuantityTickSize.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MinQuantityTickSize);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DerivativeMarket other) {
      if (other == null) {
        return;
      }
      if (other.Ticker.Length != 0) {
        Ticker = other.Ticker;
      }
      if (other.OracleBase.Length != 0) {
        OracleBase = other.OracleBase;
      }
      if (other.OracleQuote.Length != 0) {
        OracleQuote = other.OracleQuote;
      }
      if (other.OracleType != global::Injective.Oracle.V1Beta1.OracleType.Unspecified) {
        OracleType = other.OracleType;
      }
      if (other.OracleScaleFactor != 0) {
        OracleScaleFactor = other.OracleScaleFactor;
      }
      if (other.QuoteDenom.Length != 0) {
        QuoteDenom = other.QuoteDenom;
      }
      if (other.MarketId.Length != 0) {
        MarketId = other.MarketId;
      }
      if (other.InitialMarginRatio.Length != 0) {
        InitialMarginRatio = other.InitialMarginRatio;
      }
      if (other.MaintenanceMarginRatio.Length != 0) {
        MaintenanceMarginRatio = other.MaintenanceMarginRatio;
      }
      if (other.MakerFeeRate.Length != 0) {
        MakerFeeRate = other.MakerFeeRate;
      }
      if (other.TakerFeeRate.Length != 0) {
        TakerFeeRate = other.TakerFeeRate;
      }
      if (other.RelayerFeeShareRate.Length != 0) {
        RelayerFeeShareRate = other.RelayerFeeShareRate;
      }
      if (other.IsPerpetual != false) {
        IsPerpetual = other.IsPerpetual;
      }
      if (other.Status != global::Injective.Exchange.V1Beta1.MarketStatus.Unspecified) {
        Status = other.Status;
      }
      if (other.MinPriceTickSize.Length != 0) {
        MinPriceTickSize = other.MinPriceTickSize;
      }
      if (other.MinQuantityTickSize.Length != 0) {
        MinQuantityTickSize = other.MinQuantityTickSize;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Ticker = input.ReadString();
            break;
          }
          case 18: {
            OracleBase = input.ReadString();
            break;
          }
          case 26: {
            OracleQuote = input.ReadString();
            break;
          }
          case 32: {
            OracleType = (global::Injective.Oracle.V1Beta1.OracleType) input.ReadEnum();
            break;
          }
          case 40: {
            OracleScaleFactor = input.ReadUInt32();
            break;
          }
          case 50: {
            QuoteDenom = input.ReadString();
            break;
          }
          case 58: {
            MarketId = input.ReadString();
            break;
          }
          case 66: {
            InitialMarginRatio = input.ReadString();
            break;
          }
          case 74: {
            MaintenanceMarginRatio = input.ReadString();
            break;
          }
          case 82: {
            MakerFeeRate = input.ReadString();
            break;
          }
          case 90: {
            TakerFeeRate = input.ReadString();
            break;
          }
          case 98: {
            RelayerFeeShareRate = input.ReadString();
            break;
          }
          case 104: {
            IsPerpetual = input.ReadBool();
            break;
          }
          case 112: {
            Status = (global::Injective.Exchange.V1Beta1.MarketStatus) input.ReadEnum();
            break;
          }
          case 122: {
            MinPriceTickSize = input.ReadString();
            break;
          }
          case 130: {
            MinQuantityTickSize = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Ticker = input.ReadString();
            break;
          }
          case 18: {
            OracleBase = input.ReadString();
            break;
          }
          case 26: {
            OracleQuote = input.ReadString();
            break;
          }
          case 32: {
            OracleType = (global::Injective.Oracle.V1Beta1.OracleType) input.ReadEnum();
            break;
          }
          case 40: {
            OracleScaleFactor = input.ReadUInt32();
            break;
          }
          case 50: {
            QuoteDenom = input.ReadString();
            break;
          }
          case 58: {
            MarketId = input.ReadString();
            break;
          }
          case 66: {
            InitialMarginRatio = input.ReadString();
            break;
          }
          case 74: {
            MaintenanceMarginRatio = input.ReadString();
            break;
          }
          case 82: {
            MakerFeeRate = input.ReadString();
            break;
          }
          case 90: {
            TakerFeeRate = input.ReadString();
            break;
          }
          case 98: {
            RelayerFeeShareRate = input.ReadString();
            break;
          }
          case 104: {
            IsPerpetual = input.ReadBool();
            break;
          }
          case 112: {
            Status = (global::Injective.Exchange.V1Beta1.MarketStatus) input.ReadEnum();
            break;
          }
          case 122: {
            MinPriceTickSize = input.ReadString();
            break;
          }
          case 130: {
            MinQuantityTickSize = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// An object describing a binary options market in Injective Protocol.
  /// </summary>
  public sealed partial class BinaryOptionsMarket : pb::IMessage<BinaryOptionsMarket>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BinaryOptionsMarket> _parser = new pb::MessageParser<BinaryOptionsMarket>(() => new BinaryOptionsMarket());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BinaryOptionsMarket> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Exchange.V1Beta1.ExchangeReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BinaryOptionsMarket() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BinaryOptionsMarket(BinaryOptionsMarket other) : this() {
      ticker_ = other.ticker_;
      oracleSymbol_ = other.oracleSymbol_;
      oracleProvider_ = other.oracleProvider_;
      oracleType_ = other.oracleType_;
      oracleScaleFactor_ = other.oracleScaleFactor_;
      expirationTimestamp_ = other.expirationTimestamp_;
      settlementTimestamp_ = other.settlementTimestamp_;
      admin_ = other.admin_;
      quoteDenom_ = other.quoteDenom_;
      marketId_ = other.marketId_;
      makerFeeRate_ = other.makerFeeRate_;
      takerFeeRate_ = other.takerFeeRate_;
      relayerFeeShareRate_ = other.relayerFeeShareRate_;
      status_ = other.status_;
      minPriceTickSize_ = other.minPriceTickSize_;
      minQuantityTickSize_ = other.minQuantityTickSize_;
      settlementPrice_ = other.settlementPrice_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BinaryOptionsMarket Clone() {
      return new BinaryOptionsMarket(this);
    }

    /// <summary>Field number for the "ticker" field.</summary>
    public const int TickerFieldNumber = 1;
    private string ticker_ = "";
    /// <summary>
    /// Ticker for the derivative contract.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Ticker {
      get { return ticker_; }
      set {
        ticker_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "oracle_symbol" field.</summary>
    public const int OracleSymbolFieldNumber = 2;
    private string oracleSymbol_ = "";
    /// <summary>
    /// Oracle symbol
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OracleSymbol {
      get { return oracleSymbol_; }
      set {
        oracleSymbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "oracle_provider" field.</summary>
    public const int OracleProviderFieldNumber = 3;
    private string oracleProvider_ = "";
    /// <summary>
    /// Oracle Provider
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OracleProvider {
      get { return oracleProvider_; }
      set {
        oracleProvider_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "oracle_type" field.</summary>
    public const int OracleTypeFieldNumber = 4;
    private global::Injective.Oracle.V1Beta1.OracleType oracleType_ = global::Injective.Oracle.V1Beta1.OracleType.Unspecified;
    /// <summary>
    /// Oracle type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Injective.Oracle.V1Beta1.OracleType OracleType {
      get { return oracleType_; }
      set {
        oracleType_ = value;
      }
    }

    /// <summary>Field number for the "oracle_scale_factor" field.</summary>
    public const int OracleScaleFactorFieldNumber = 5;
    private uint oracleScaleFactor_;
    /// <summary>
    /// Scale factor for oracle prices.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint OracleScaleFactor {
      get { return oracleScaleFactor_; }
      set {
        oracleScaleFactor_ = value;
      }
    }

    /// <summary>Field number for the "expiration_timestamp" field.</summary>
    public const int ExpirationTimestampFieldNumber = 6;
    private long expirationTimestamp_;
    /// <summary>
    /// expiration timestamp
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ExpirationTimestamp {
      get { return expirationTimestamp_; }
      set {
        expirationTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "settlement_timestamp" field.</summary>
    public const int SettlementTimestampFieldNumber = 7;
    private long settlementTimestamp_;
    /// <summary>
    /// expiration timestamp
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long SettlementTimestamp {
      get { return settlementTimestamp_; }
      set {
        settlementTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "admin" field.</summary>
    public const int AdminFieldNumber = 8;
    private string admin_ = "";
    /// <summary>
    /// admin of the market
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Admin {
      get { return admin_; }
      set {
        admin_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "quote_denom" field.</summary>
    public const int QuoteDenomFieldNumber = 9;
    private string quoteDenom_ = "";
    /// <summary>
    /// Address of the quote currency denomination for the binary options contract
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string QuoteDenom {
      get { return quoteDenom_; }
      set {
        quoteDenom_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "market_id" field.</summary>
    public const int MarketIdFieldNumber = 10;
    private string marketId_ = "";
    /// <summary>
    /// Unique market ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MarketId {
      get { return marketId_; }
      set {
        marketId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "maker_fee_rate" field.</summary>
    public const int MakerFeeRateFieldNumber = 11;
    private string makerFeeRate_ = "";
    /// <summary>
    /// maker_fee_rate defines the maker fee rate of a binary options market
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MakerFeeRate {
      get { return makerFeeRate_; }
      set {
        makerFeeRate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "taker_fee_rate" field.</summary>
    public const int TakerFeeRateFieldNumber = 12;
    private string takerFeeRate_ = "";
    /// <summary>
    /// taker_fee_rate defines the taker fee rate of a derivative market
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TakerFeeRate {
      get { return takerFeeRate_; }
      set {
        takerFeeRate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "relayer_fee_share_rate" field.</summary>
    public const int RelayerFeeShareRateFieldNumber = 13;
    private string relayerFeeShareRate_ = "";
    /// <summary>
    /// relayer_fee_share_rate defines the percentage of the transaction fee shared
    /// with the relayer in a derivative market
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RelayerFeeShareRate {
      get { return relayerFeeShareRate_; }
      set {
        relayerFeeShareRate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 14;
    private global::Injective.Exchange.V1Beta1.MarketStatus status_ = global::Injective.Exchange.V1Beta1.MarketStatus.Unspecified;
    /// <summary>
    /// Status of the market
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Injective.Exchange.V1Beta1.MarketStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "min_price_tick_size" field.</summary>
    public const int MinPriceTickSizeFieldNumber = 15;
    private string minPriceTickSize_ = "";
    /// <summary>
    /// min_price_tick_size defines the minimum tick size that the price and margin
    /// required for orders in the market
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MinPriceTickSize {
      get { return minPriceTickSize_; }
      set {
        minPriceTickSize_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "min_quantity_tick_size" field.</summary>
    public const int MinQuantityTickSizeFieldNumber = 16;
    private string minQuantityTickSize_ = "";
    /// <summary>
    /// min_quantity_tick_size defines the minimum tick size of the quantity
    /// required for orders in the market
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MinQuantityTickSize {
      get { return minQuantityTickSize_; }
      set {
        minQuantityTickSize_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "settlement_price" field.</summary>
    public const int SettlementPriceFieldNumber = 17;
    private string settlementPrice_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SettlementPrice {
      get { return settlementPrice_; }
      set {
        settlementPrice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BinaryOptionsMarket);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BinaryOptionsMarket other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ticker != other.Ticker) return false;
      if (OracleSymbol != other.OracleSymbol) return false;
      if (OracleProvider != other.OracleProvider) return false;
      if (OracleType != other.OracleType) return false;
      if (OracleScaleFactor != other.OracleScaleFactor) return false;
      if (ExpirationTimestamp != other.ExpirationTimestamp) return false;
      if (SettlementTimestamp != other.SettlementTimestamp) return false;
      if (Admin != other.Admin) return false;
      if (QuoteDenom != other.QuoteDenom) return false;
      if (MarketId != other.MarketId) return false;
      if (MakerFeeRate != other.MakerFeeRate) return false;
      if (TakerFeeRate != other.TakerFeeRate) return false;
      if (RelayerFeeShareRate != other.RelayerFeeShareRate) return false;
      if (Status != other.Status) return false;
      if (MinPriceTickSize != other.MinPriceTickSize) return false;
      if (MinQuantityTickSize != other.MinQuantityTickSize) return false;
      if (SettlementPrice != other.SettlementPrice) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Ticker.Length != 0) hash ^= Ticker.GetHashCode();
      if (OracleSymbol.Length != 0) hash ^= OracleSymbol.GetHashCode();
      if (OracleProvider.Length != 0) hash ^= OracleProvider.GetHashCode();
      if (OracleType != global::Injective.Oracle.V1Beta1.OracleType.Unspecified) hash ^= OracleType.GetHashCode();
      if (OracleScaleFactor != 0) hash ^= OracleScaleFactor.GetHashCode();
      if (ExpirationTimestamp != 0L) hash ^= ExpirationTimestamp.GetHashCode();
      if (SettlementTimestamp != 0L) hash ^= SettlementTimestamp.GetHashCode();
      if (Admin.Length != 0) hash ^= Admin.GetHashCode();
      if (QuoteDenom.Length != 0) hash ^= QuoteDenom.GetHashCode();
      if (MarketId.Length != 0) hash ^= MarketId.GetHashCode();
      if (MakerFeeRate.Length != 0) hash ^= MakerFeeRate.GetHashCode();
      if (TakerFeeRate.Length != 0) hash ^= TakerFeeRate.GetHashCode();
      if (RelayerFeeShareRate.Length != 0) hash ^= RelayerFeeShareRate.GetHashCode();
      if (Status != global::Injective.Exchange.V1Beta1.MarketStatus.Unspecified) hash ^= Status.GetHashCode();
      if (MinPriceTickSize.Length != 0) hash ^= MinPriceTickSize.GetHashCode();
      if (MinQuantityTickSize.Length != 0) hash ^= MinQuantityTickSize.GetHashCode();
      if (SettlementPrice.Length != 0) hash ^= SettlementPrice.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Ticker.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Ticker);
      }
      if (OracleSymbol.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(OracleSymbol);
      }
      if (OracleProvider.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(OracleProvider);
      }
      if (OracleType != global::Injective.Oracle.V1Beta1.OracleType.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) OracleType);
      }
      if (OracleScaleFactor != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(OracleScaleFactor);
      }
      if (ExpirationTimestamp != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(ExpirationTimestamp);
      }
      if (SettlementTimestamp != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(SettlementTimestamp);
      }
      if (Admin.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Admin);
      }
      if (QuoteDenom.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(QuoteDenom);
      }
      if (MarketId.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(MarketId);
      }
      if (MakerFeeRate.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(MakerFeeRate);
      }
      if (TakerFeeRate.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(TakerFeeRate);
      }
      if (RelayerFeeShareRate.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(RelayerFeeShareRate);
      }
      if (Status != global::Injective.Exchange.V1Beta1.MarketStatus.Unspecified) {
        output.WriteRawTag(112);
        output.WriteEnum((int) Status);
      }
      if (MinPriceTickSize.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(MinPriceTickSize);
      }
      if (MinQuantityTickSize.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(MinQuantityTickSize);
      }
      if (SettlementPrice.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(SettlementPrice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Ticker.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Ticker);
      }
      if (OracleSymbol.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(OracleSymbol);
      }
      if (OracleProvider.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(OracleProvider);
      }
      if (OracleType != global::Injective.Oracle.V1Beta1.OracleType.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) OracleType);
      }
      if (OracleScaleFactor != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(OracleScaleFactor);
      }
      if (ExpirationTimestamp != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(ExpirationTimestamp);
      }
      if (SettlementTimestamp != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(SettlementTimestamp);
      }
      if (Admin.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Admin);
      }
      if (QuoteDenom.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(QuoteDenom);
      }
      if (MarketId.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(MarketId);
      }
      if (MakerFeeRate.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(MakerFeeRate);
      }
      if (TakerFeeRate.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(TakerFeeRate);
      }
      if (RelayerFeeShareRate.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(RelayerFeeShareRate);
      }
      if (Status != global::Injective.Exchange.V1Beta1.MarketStatus.Unspecified) {
        output.WriteRawTag(112);
        output.WriteEnum((int) Status);
      }
      if (MinPriceTickSize.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(MinPriceTickSize);
      }
      if (MinQuantityTickSize.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(MinQuantityTickSize);
      }
      if (SettlementPrice.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(SettlementPrice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Ticker.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ticker);
      }
      if (OracleSymbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OracleSymbol);
      }
      if (OracleProvider.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OracleProvider);
      }
      if (OracleType != global::Injective.Oracle.V1Beta1.OracleType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OracleType);
      }
      if (OracleScaleFactor != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OracleScaleFactor);
      }
      if (ExpirationTimestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ExpirationTimestamp);
      }
      if (SettlementTimestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SettlementTimestamp);
      }
      if (Admin.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Admin);
      }
      if (QuoteDenom.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(QuoteDenom);
      }
      if (MarketId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MarketId);
      }
      if (MakerFeeRate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MakerFeeRate);
      }
      if (TakerFeeRate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TakerFeeRate);
      }
      if (RelayerFeeShareRate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RelayerFeeShareRate);
      }
      if (Status != global::Injective.Exchange.V1Beta1.MarketStatus.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (MinPriceTickSize.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MinPriceTickSize);
      }
      if (MinQuantityTickSize.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MinQuantityTickSize);
      }
      if (SettlementPrice.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(SettlementPrice);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BinaryOptionsMarket other) {
      if (other == null) {
        return;
      }
      if (other.Ticker.Length != 0) {
        Ticker = other.Ticker;
      }
      if (other.OracleSymbol.Length != 0) {
        OracleSymbol = other.OracleSymbol;
      }
      if (other.OracleProvider.Length != 0) {
        OracleProvider = other.OracleProvider;
      }
      if (other.OracleType != global::Injective.Oracle.V1Beta1.OracleType.Unspecified) {
        OracleType = other.OracleType;
      }
      if (other.OracleScaleFactor != 0) {
        OracleScaleFactor = other.OracleScaleFactor;
      }
      if (other.ExpirationTimestamp != 0L) {
        ExpirationTimestamp = other.ExpirationTimestamp;
      }
      if (other.SettlementTimestamp != 0L) {
        SettlementTimestamp = other.SettlementTimestamp;
      }
      if (other.Admin.Length != 0) {
        Admin = other.Admin;
      }
      if (other.QuoteDenom.Length != 0) {
        QuoteDenom = other.QuoteDenom;
      }
      if (other.MarketId.Length != 0) {
        MarketId = other.MarketId;
      }
      if (other.MakerFeeRate.Length != 0) {
        MakerFeeRate = other.MakerFeeRate;
      }
      if (other.TakerFeeRate.Length != 0) {
        TakerFeeRate = other.TakerFeeRate;
      }
      if (other.RelayerFeeShareRate.Length != 0) {
        RelayerFeeShareRate = other.RelayerFeeShareRate;
      }
      if (other.Status != global::Injective.Exchange.V1Beta1.MarketStatus.Unspecified) {
        Status = other.Status;
      }
      if (other.MinPriceTickSize.Length != 0) {
        MinPriceTickSize = other.MinPriceTickSize;
      }
      if (other.MinQuantityTickSize.Length != 0) {
        MinQuantityTickSize = other.MinQuantityTickSize;
      }
      if (other.SettlementPrice.Length != 0) {
        SettlementPrice = other.SettlementPrice;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Ticker = input.ReadString();
            break;
          }
          case 18: {
            OracleSymbol = input.ReadString();
            break;
          }
          case 26: {
            OracleProvider = input.ReadString();
            break;
          }
          case 32: {
            OracleType = (global::Injective.Oracle.V1Beta1.OracleType) input.ReadEnum();
            break;
          }
          case 40: {
            OracleScaleFactor = input.ReadUInt32();
            break;
          }
          case 48: {
            ExpirationTimestamp = input.ReadInt64();
            break;
          }
          case 56: {
            SettlementTimestamp = input.ReadInt64();
            break;
          }
          case 66: {
            Admin = input.ReadString();
            break;
          }
          case 74: {
            QuoteDenom = input.ReadString();
            break;
          }
          case 82: {
            MarketId = input.ReadString();
            break;
          }
          case 90: {
            MakerFeeRate = input.ReadString();
            break;
          }
          case 98: {
            TakerFeeRate = input.ReadString();
            break;
          }
          case 106: {
            RelayerFeeShareRate = input.ReadString();
            break;
          }
          case 112: {
            Status = (global::Injective.Exchange.V1Beta1.MarketStatus) input.ReadEnum();
            break;
          }
          case 122: {
            MinPriceTickSize = input.ReadString();
            break;
          }
          case 130: {
            MinQuantityTickSize = input.ReadString();
            break;
          }
          case 138: {
            SettlementPrice = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Ticker = input.ReadString();
            break;
          }
          case 18: {
            OracleSymbol = input.ReadString();
            break;
          }
          case 26: {
            OracleProvider = input.ReadString();
            break;
          }
          case 32: {
            OracleType = (global::Injective.Oracle.V1Beta1.OracleType) input.ReadEnum();
            break;
          }
          case 40: {
            OracleScaleFactor = input.ReadUInt32();
            break;
          }
          case 48: {
            ExpirationTimestamp = input.ReadInt64();
            break;
          }
          case 56: {
            SettlementTimestamp = input.ReadInt64();
            break;
          }
          case 66: {
            Admin = input.ReadString();
            break;
          }
          case 74: {
            QuoteDenom = input.ReadString();
            break;
          }
          case 82: {
            MarketId = input.ReadString();
            break;
          }
          case 90: {
            MakerFeeRate = input.ReadString();
            break;
          }
          case 98: {
            TakerFeeRate = input.ReadString();
            break;
          }
          case 106: {
            RelayerFeeShareRate = input.ReadString();
            break;
          }
          case 112: {
            Status = (global::Injective.Exchange.V1Beta1.MarketStatus) input.ReadEnum();
            break;
          }
          case 122: {
            MinPriceTickSize = input.ReadString();
            break;
          }
          case 130: {
            MinQuantityTickSize = input.ReadString();
            break;
          }
          case 138: {
            SettlementPrice = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ExpiryFuturesMarketInfo : pb::IMessage<ExpiryFuturesMarketInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExpiryFuturesMarketInfo> _parser = new pb::MessageParser<ExpiryFuturesMarketInfo>(() => new ExpiryFuturesMarketInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ExpiryFuturesMarketInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Exchange.V1Beta1.ExchangeReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExpiryFuturesMarketInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExpiryFuturesMarketInfo(ExpiryFuturesMarketInfo other) : this() {
      marketId_ = other.marketId_;
      expirationTimestamp_ = other.expirationTimestamp_;
      twapStartTimestamp_ = other.twapStartTimestamp_;
      expirationTwapStartPriceCumulative_ = other.expirationTwapStartPriceCumulative_;
      settlementPrice_ = other.settlementPrice_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExpiryFuturesMarketInfo Clone() {
      return new ExpiryFuturesMarketInfo(this);
    }

    /// <summary>Field number for the "market_id" field.</summary>
    public const int MarketIdFieldNumber = 1;
    private string marketId_ = "";
    /// <summary>
    /// market ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MarketId {
      get { return marketId_; }
      set {
        marketId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "expiration_timestamp" field.</summary>
    public const int ExpirationTimestampFieldNumber = 2;
    private long expirationTimestamp_;
    /// <summary>
    /// expiration_timestamp defines the expiration time for a time expiry futures
    /// market.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ExpirationTimestamp {
      get { return expirationTimestamp_; }
      set {
        expirationTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "twap_start_timestamp" field.</summary>
    public const int TwapStartTimestampFieldNumber = 3;
    private long twapStartTimestamp_;
    /// <summary>
    /// expiration_twap_start_timestamp defines the start time of the TWAP
    /// calculation window
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TwapStartTimestamp {
      get { return twapStartTimestamp_; }
      set {
        twapStartTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "expiration_twap_start_price_cumulative" field.</summary>
    public const int ExpirationTwapStartPriceCumulativeFieldNumber = 4;
    private string expirationTwapStartPriceCumulative_ = "";
    /// <summary>
    /// expiration_twap_start_price_cumulative defines the cumulative price for the
    /// start of the TWAP window
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ExpirationTwapStartPriceCumulative {
      get { return expirationTwapStartPriceCumulative_; }
      set {
        expirationTwapStartPriceCumulative_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "settlement_price" field.</summary>
    public const int SettlementPriceFieldNumber = 5;
    private string settlementPrice_ = "";
    /// <summary>
    /// settlement_price defines the settlement price for a time expiry futures
    /// market.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SettlementPrice {
      get { return settlementPrice_; }
      set {
        settlementPrice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ExpiryFuturesMarketInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ExpiryFuturesMarketInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MarketId != other.MarketId) return false;
      if (ExpirationTimestamp != other.ExpirationTimestamp) return false;
      if (TwapStartTimestamp != other.TwapStartTimestamp) return false;
      if (ExpirationTwapStartPriceCumulative != other.ExpirationTwapStartPriceCumulative) return false;
      if (SettlementPrice != other.SettlementPrice) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MarketId.Length != 0) hash ^= MarketId.GetHashCode();
      if (ExpirationTimestamp != 0L) hash ^= ExpirationTimestamp.GetHashCode();
      if (TwapStartTimestamp != 0L) hash ^= TwapStartTimestamp.GetHashCode();
      if (ExpirationTwapStartPriceCumulative.Length != 0) hash ^= ExpirationTwapStartPriceCumulative.GetHashCode();
      if (SettlementPrice.Length != 0) hash ^= SettlementPrice.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MarketId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MarketId);
      }
      if (ExpirationTimestamp != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ExpirationTimestamp);
      }
      if (TwapStartTimestamp != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(TwapStartTimestamp);
      }
      if (ExpirationTwapStartPriceCumulative.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ExpirationTwapStartPriceCumulative);
      }
      if (SettlementPrice.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(SettlementPrice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MarketId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MarketId);
      }
      if (ExpirationTimestamp != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ExpirationTimestamp);
      }
      if (TwapStartTimestamp != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(TwapStartTimestamp);
      }
      if (ExpirationTwapStartPriceCumulative.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ExpirationTwapStartPriceCumulative);
      }
      if (SettlementPrice.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(SettlementPrice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MarketId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MarketId);
      }
      if (ExpirationTimestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ExpirationTimestamp);
      }
      if (TwapStartTimestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TwapStartTimestamp);
      }
      if (ExpirationTwapStartPriceCumulative.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExpirationTwapStartPriceCumulative);
      }
      if (SettlementPrice.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SettlementPrice);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ExpiryFuturesMarketInfo other) {
      if (other == null) {
        return;
      }
      if (other.MarketId.Length != 0) {
        MarketId = other.MarketId;
      }
      if (other.ExpirationTimestamp != 0L) {
        ExpirationTimestamp = other.ExpirationTimestamp;
      }
      if (other.TwapStartTimestamp != 0L) {
        TwapStartTimestamp = other.TwapStartTimestamp;
      }
      if (other.ExpirationTwapStartPriceCumulative.Length != 0) {
        ExpirationTwapStartPriceCumulative = other.ExpirationTwapStartPriceCumulative;
      }
      if (other.SettlementPrice.Length != 0) {
        SettlementPrice = other.SettlementPrice;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MarketId = input.ReadString();
            break;
          }
          case 16: {
            ExpirationTimestamp = input.ReadInt64();
            break;
          }
          case 24: {
            TwapStartTimestamp = input.ReadInt64();
            break;
          }
          case 34: {
            ExpirationTwapStartPriceCumulative = input.ReadString();
            break;
          }
          case 42: {
            SettlementPrice = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            MarketId = input.ReadString();
            break;
          }
          case 16: {
            ExpirationTimestamp = input.ReadInt64();
            break;
          }
          case 24: {
            TwapStartTimestamp = input.ReadInt64();
            break;
          }
          case 34: {
            ExpirationTwapStartPriceCumulative = input.ReadString();
            break;
          }
          case 42: {
            SettlementPrice = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PerpetualMarketInfo : pb::IMessage<PerpetualMarketInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PerpetualMarketInfo> _parser = new pb::MessageParser<PerpetualMarketInfo>(() => new PerpetualMarketInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PerpetualMarketInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Exchange.V1Beta1.ExchangeReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PerpetualMarketInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PerpetualMarketInfo(PerpetualMarketInfo other) : this() {
      marketId_ = other.marketId_;
      hourlyFundingRateCap_ = other.hourlyFundingRateCap_;
      hourlyInterestRate_ = other.hourlyInterestRate_;
      nextFundingTimestamp_ = other.nextFundingTimestamp_;
      fundingInterval_ = other.fundingInterval_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PerpetualMarketInfo Clone() {
      return new PerpetualMarketInfo(this);
    }

    /// <summary>Field number for the "market_id" field.</summary>
    public const int MarketIdFieldNumber = 1;
    private string marketId_ = "";
    /// <summary>
    /// market ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MarketId {
      get { return marketId_; }
      set {
        marketId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hourly_funding_rate_cap" field.</summary>
    public const int HourlyFundingRateCapFieldNumber = 2;
    private string hourlyFundingRateCap_ = "";
    /// <summary>
    /// hourly_funding_rate_cap defines the maximum absolute value of the hourly
    /// funding rate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HourlyFundingRateCap {
      get { return hourlyFundingRateCap_; }
      set {
        hourlyFundingRateCap_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hourly_interest_rate" field.</summary>
    public const int HourlyInterestRateFieldNumber = 3;
    private string hourlyInterestRate_ = "";
    /// <summary>
    /// hourly_interest_rate defines the hourly interest rate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HourlyInterestRate {
      get { return hourlyInterestRate_; }
      set {
        hourlyInterestRate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "next_funding_timestamp" field.</summary>
    public const int NextFundingTimestampFieldNumber = 4;
    private long nextFundingTimestamp_;
    /// <summary>
    /// next_funding_timestamp defines the next funding timestamp in seconds of a
    /// perpetual market
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long NextFundingTimestamp {
      get { return nextFundingTimestamp_; }
      set {
        nextFundingTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "funding_interval" field.</summary>
    public const int FundingIntervalFieldNumber = 5;
    private long fundingInterval_;
    /// <summary>
    /// funding_interval defines the next funding interval in seconds of a
    /// perpetual market.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long FundingInterval {
      get { return fundingInterval_; }
      set {
        fundingInterval_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PerpetualMarketInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PerpetualMarketInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MarketId != other.MarketId) return false;
      if (HourlyFundingRateCap != other.HourlyFundingRateCap) return false;
      if (HourlyInterestRate != other.HourlyInterestRate) return false;
      if (NextFundingTimestamp != other.NextFundingTimestamp) return false;
      if (FundingInterval != other.FundingInterval) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MarketId.Length != 0) hash ^= MarketId.GetHashCode();
      if (HourlyFundingRateCap.Length != 0) hash ^= HourlyFundingRateCap.GetHashCode();
      if (HourlyInterestRate.Length != 0) hash ^= HourlyInterestRate.GetHashCode();
      if (NextFundingTimestamp != 0L) hash ^= NextFundingTimestamp.GetHashCode();
      if (FundingInterval != 0L) hash ^= FundingInterval.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MarketId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MarketId);
      }
      if (HourlyFundingRateCap.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(HourlyFundingRateCap);
      }
      if (HourlyInterestRate.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(HourlyInterestRate);
      }
      if (NextFundingTimestamp != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(NextFundingTimestamp);
      }
      if (FundingInterval != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(FundingInterval);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MarketId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MarketId);
      }
      if (HourlyFundingRateCap.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(HourlyFundingRateCap);
      }
      if (HourlyInterestRate.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(HourlyInterestRate);
      }
      if (NextFundingTimestamp != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(NextFundingTimestamp);
      }
      if (FundingInterval != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(FundingInterval);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MarketId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MarketId);
      }
      if (HourlyFundingRateCap.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HourlyFundingRateCap);
      }
      if (HourlyInterestRate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HourlyInterestRate);
      }
      if (NextFundingTimestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NextFundingTimestamp);
      }
      if (FundingInterval != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FundingInterval);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PerpetualMarketInfo other) {
      if (other == null) {
        return;
      }
      if (other.MarketId.Length != 0) {
        MarketId = other.MarketId;
      }
      if (other.HourlyFundingRateCap.Length != 0) {
        HourlyFundingRateCap = other.HourlyFundingRateCap;
      }
      if (other.HourlyInterestRate.Length != 0) {
        HourlyInterestRate = other.HourlyInterestRate;
      }
      if (other.NextFundingTimestamp != 0L) {
        NextFundingTimestamp = other.NextFundingTimestamp;
      }
      if (other.FundingInterval != 0L) {
        FundingInterval = other.FundingInterval;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MarketId = input.ReadString();
            break;
          }
          case 18: {
            HourlyFundingRateCap = input.ReadString();
            break;
          }
          case 26: {
            HourlyInterestRate = input.ReadString();
            break;
          }
          case 32: {
            NextFundingTimestamp = input.ReadInt64();
            break;
          }
          case 40: {
            FundingInterval = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            MarketId = input.ReadString();
            break;
          }
          case 18: {
            HourlyFundingRateCap = input.ReadString();
            break;
          }
          case 26: {
            HourlyInterestRate = input.ReadString();
            break;
          }
          case 32: {
            NextFundingTimestamp = input.ReadInt64();
            break;
          }
          case 40: {
            FundingInterval = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PerpetualMarketFunding : pb::IMessage<PerpetualMarketFunding>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PerpetualMarketFunding> _parser = new pb::MessageParser<PerpetualMarketFunding>(() => new PerpetualMarketFunding());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PerpetualMarketFunding> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Exchange.V1Beta1.ExchangeReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PerpetualMarketFunding() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PerpetualMarketFunding(PerpetualMarketFunding other) : this() {
      cumulativeFunding_ = other.cumulativeFunding_;
      cumulativePrice_ = other.cumulativePrice_;
      lastTimestamp_ = other.lastTimestamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PerpetualMarketFunding Clone() {
      return new PerpetualMarketFunding(this);
    }

    /// <summary>Field number for the "cumulative_funding" field.</summary>
    public const int CumulativeFundingFieldNumber = 1;
    private string cumulativeFunding_ = "";
    /// <summary>
    /// cumulative_funding defines the cumulative funding of a perpetual market.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CumulativeFunding {
      get { return cumulativeFunding_; }
      set {
        cumulativeFunding_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cumulative_price" field.</summary>
    public const int CumulativePriceFieldNumber = 2;
    private string cumulativePrice_ = "";
    /// <summary>
    /// cumulative_price defines the cumulative price for the current hour up to
    /// the last timestamp
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CumulativePrice {
      get { return cumulativePrice_; }
      set {
        cumulativePrice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "last_timestamp" field.</summary>
    public const int LastTimestampFieldNumber = 3;
    private long lastTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long LastTimestamp {
      get { return lastTimestamp_; }
      set {
        lastTimestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PerpetualMarketFunding);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PerpetualMarketFunding other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CumulativeFunding != other.CumulativeFunding) return false;
      if (CumulativePrice != other.CumulativePrice) return false;
      if (LastTimestamp != other.LastTimestamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CumulativeFunding.Length != 0) hash ^= CumulativeFunding.GetHashCode();
      if (CumulativePrice.Length != 0) hash ^= CumulativePrice.GetHashCode();
      if (LastTimestamp != 0L) hash ^= LastTimestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CumulativeFunding.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CumulativeFunding);
      }
      if (CumulativePrice.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CumulativePrice);
      }
      if (LastTimestamp != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(LastTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CumulativeFunding.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CumulativeFunding);
      }
      if (CumulativePrice.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CumulativePrice);
      }
      if (LastTimestamp != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(LastTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CumulativeFunding.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CumulativeFunding);
      }
      if (CumulativePrice.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CumulativePrice);
      }
      if (LastTimestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastTimestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PerpetualMarketFunding other) {
      if (other == null) {
        return;
      }
      if (other.CumulativeFunding.Length != 0) {
        CumulativeFunding = other.CumulativeFunding;
      }
      if (other.CumulativePrice.Length != 0) {
        CumulativePrice = other.CumulativePrice;
      }
      if (other.LastTimestamp != 0L) {
        LastTimestamp = other.LastTimestamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CumulativeFunding = input.ReadString();
            break;
          }
          case 18: {
            CumulativePrice = input.ReadString();
            break;
          }
          case 24: {
            LastTimestamp = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            CumulativeFunding = input.ReadString();
            break;
          }
          case 18: {
            CumulativePrice = input.ReadString();
            break;
          }
          case 24: {
            LastTimestamp = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DerivativeMarketSettlementInfo : pb::IMessage<DerivativeMarketSettlementInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DerivativeMarketSettlementInfo> _parser = new pb::MessageParser<DerivativeMarketSettlementInfo>(() => new DerivativeMarketSettlementInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DerivativeMarketSettlementInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Exchange.V1Beta1.ExchangeReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DerivativeMarketSettlementInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DerivativeMarketSettlementInfo(DerivativeMarketSettlementInfo other) : this() {
      marketId_ = other.marketId_;
      settlementPrice_ = other.settlementPrice_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DerivativeMarketSettlementInfo Clone() {
      return new DerivativeMarketSettlementInfo(this);
    }

    /// <summary>Field number for the "market_id" field.</summary>
    public const int MarketIdFieldNumber = 1;
    private string marketId_ = "";
    /// <summary>
    /// market ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MarketId {
      get { return marketId_; }
      set {
        marketId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "settlement_price" field.</summary>
    public const int SettlementPriceFieldNumber = 2;
    private string settlementPrice_ = "";
    /// <summary>
    /// settlement_price defines the settlement price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SettlementPrice {
      get { return settlementPrice_; }
      set {
        settlementPrice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DerivativeMarketSettlementInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DerivativeMarketSettlementInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MarketId != other.MarketId) return false;
      if (SettlementPrice != other.SettlementPrice) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MarketId.Length != 0) hash ^= MarketId.GetHashCode();
      if (SettlementPrice.Length != 0) hash ^= SettlementPrice.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MarketId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MarketId);
      }
      if (SettlementPrice.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SettlementPrice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MarketId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MarketId);
      }
      if (SettlementPrice.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SettlementPrice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MarketId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MarketId);
      }
      if (SettlementPrice.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SettlementPrice);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DerivativeMarketSettlementInfo other) {
      if (other == null) {
        return;
      }
      if (other.MarketId.Length != 0) {
        MarketId = other.MarketId;
      }
      if (other.SettlementPrice.Length != 0) {
        SettlementPrice = other.SettlementPrice;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MarketId = input.ReadString();
            break;
          }
          case 18: {
            SettlementPrice = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            MarketId = input.ReadString();
            break;
          }
          case 18: {
            SettlementPrice = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class NextFundingTimestamp : pb::IMessage<NextFundingTimestamp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NextFundingTimestamp> _parser = new pb::MessageParser<NextFundingTimestamp>(() => new NextFundingTimestamp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NextFundingTimestamp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Exchange.V1Beta1.ExchangeReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NextFundingTimestamp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NextFundingTimestamp(NextFundingTimestamp other) : this() {
      nextTimestamp_ = other.nextTimestamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NextFundingTimestamp Clone() {
      return new NextFundingTimestamp(this);
    }

    /// <summary>Field number for the "next_timestamp" field.</summary>
    public const int NextTimestampFieldNumber = 1;
    private long nextTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long NextTimestamp {
      get { return nextTimestamp_; }
      set {
        nextTimestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NextFundingTimestamp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NextFundingTimestamp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NextTimestamp != other.NextTimestamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (NextTimestamp != 0L) hash ^= NextTimestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (NextTimestamp != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(NextTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (NextTimestamp != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(NextTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (NextTimestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NextTimestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NextFundingTimestamp other) {
      if (other == null) {
        return;
      }
      if (other.NextTimestamp != 0L) {
        NextTimestamp = other.NextTimestamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NextTimestamp = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            NextTimestamp = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MidPriceAndTOB : pb::IMessage<MidPriceAndTOB>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MidPriceAndTOB> _parser = new pb::MessageParser<MidPriceAndTOB>(() => new MidPriceAndTOB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MidPriceAndTOB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Exchange.V1Beta1.ExchangeReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MidPriceAndTOB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MidPriceAndTOB(MidPriceAndTOB other) : this() {
      midPrice_ = other.midPrice_;
      bestBuyPrice_ = other.bestBuyPrice_;
      bestSellPrice_ = other.bestSellPrice_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MidPriceAndTOB Clone() {
      return new MidPriceAndTOB(this);
    }

    /// <summary>Field number for the "mid_price" field.</summary>
    public const int MidPriceFieldNumber = 1;
    private string midPrice_ = "";
    /// <summary>
    /// mid price of the market
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MidPrice {
      get { return midPrice_; }
      set {
        midPrice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "best_buy_price" field.</summary>
    public const int BestBuyPriceFieldNumber = 2;
    private string bestBuyPrice_ = "";
    /// <summary>
    /// best buy price of the market
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BestBuyPrice {
      get { return bestBuyPrice_; }
      set {
        bestBuyPrice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "best_sell_price" field.</summary>
    public const int BestSellPriceFieldNumber = 3;
    private string bestSellPrice_ = "";
    /// <summary>
    /// best sell price of the market
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BestSellPrice {
      get { return bestSellPrice_; }
      set {
        bestSellPrice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MidPriceAndTOB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MidPriceAndTOB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MidPrice != other.MidPrice) return false;
      if (BestBuyPrice != other.BestBuyPrice) return false;
      if (BestSellPrice != other.BestSellPrice) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MidPrice.Length != 0) hash ^= MidPrice.GetHashCode();
      if (BestBuyPrice.Length != 0) hash ^= BestBuyPrice.GetHashCode();
      if (BestSellPrice.Length != 0) hash ^= BestSellPrice.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MidPrice.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MidPrice);
      }
      if (BestBuyPrice.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BestBuyPrice);
      }
      if (BestSellPrice.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(BestSellPrice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MidPrice.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MidPrice);
      }
      if (BestBuyPrice.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BestBuyPrice);
      }
      if (BestSellPrice.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(BestSellPrice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MidPrice.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MidPrice);
      }
      if (BestBuyPrice.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BestBuyPrice);
      }
      if (BestSellPrice.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BestSellPrice);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MidPriceAndTOB other) {
      if (other == null) {
        return;
      }
      if (other.MidPrice.Length != 0) {
        MidPrice = other.MidPrice;
      }
      if (other.BestBuyPrice.Length != 0) {
        BestBuyPrice = other.BestBuyPrice;
      }
      if (other.BestSellPrice.Length != 0) {
        BestSellPrice = other.BestSellPrice;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MidPrice = input.ReadString();
            break;
          }
          case 18: {
            BestBuyPrice = input.ReadString();
            break;
          }
          case 26: {
            BestSellPrice = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            MidPrice = input.ReadString();
            break;
          }
          case 18: {
            BestBuyPrice = input.ReadString();
            break;
          }
          case 26: {
            BestSellPrice = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// An object describing trade pair of two assets.
  /// </summary>
  public sealed partial class SpotMarket : pb::IMessage<SpotMarket>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpotMarket> _parser = new pb::MessageParser<SpotMarket>(() => new SpotMarket());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpotMarket> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Exchange.V1Beta1.ExchangeReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpotMarket() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpotMarket(SpotMarket other) : this() {
      ticker_ = other.ticker_;
      baseDenom_ = other.baseDenom_;
      quoteDenom_ = other.quoteDenom_;
      makerFeeRate_ = other.makerFeeRate_;
      takerFeeRate_ = other.takerFeeRate_;
      relayerFeeShareRate_ = other.relayerFeeShareRate_;
      marketId_ = other.marketId_;
      status_ = other.status_;
      minPriceTickSize_ = other.minPriceTickSize_;
      minQuantityTickSize_ = other.minQuantityTickSize_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpotMarket Clone() {
      return new SpotMarket(this);
    }

    /// <summary>Field number for the "ticker" field.</summary>
    public const int TickerFieldNumber = 1;
    private string ticker_ = "";
    /// <summary>
    /// A name of the pair in format AAA/BBB, where AAA is base asset, BBB is quote
    /// asset.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Ticker {
      get { return ticker_; }
      set {
        ticker_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "base_denom" field.</summary>
    public const int BaseDenomFieldNumber = 2;
    private string baseDenom_ = "";
    /// <summary>
    /// Coin denom used for the base asset
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BaseDenom {
      get { return baseDenom_; }
      set {
        baseDenom_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "quote_denom" field.</summary>
    public const int QuoteDenomFieldNumber = 3;
    private string quoteDenom_ = "";
    /// <summary>
    /// Coin used for the quote asset
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string QuoteDenom {
      get { return quoteDenom_; }
      set {
        quoteDenom_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "maker_fee_rate" field.</summary>
    public const int MakerFeeRateFieldNumber = 4;
    private string makerFeeRate_ = "";
    /// <summary>
    /// maker_fee_rate defines the fee percentage makers pay when trading
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MakerFeeRate {
      get { return makerFeeRate_; }
      set {
        makerFeeRate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "taker_fee_rate" field.</summary>
    public const int TakerFeeRateFieldNumber = 5;
    private string takerFeeRate_ = "";
    /// <summary>
    /// taker_fee_rate defines the fee percentage takers pay when trading
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TakerFeeRate {
      get { return takerFeeRate_; }
      set {
        takerFeeRate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "relayer_fee_share_rate" field.</summary>
    public const int RelayerFeeShareRateFieldNumber = 6;
    private string relayerFeeShareRate_ = "";
    /// <summary>
    /// relayer_fee_share_rate defines the percentage of the transaction fee shared
    /// with the relayer in a derivative market
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RelayerFeeShareRate {
      get { return relayerFeeShareRate_; }
      set {
        relayerFeeShareRate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "market_id" field.</summary>
    public const int MarketIdFieldNumber = 7;
    private string marketId_ = "";
    /// <summary>
    /// Unique market ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MarketId {
      get { return marketId_; }
      set {
        marketId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 8;
    private global::Injective.Exchange.V1Beta1.MarketStatus status_ = global::Injective.Exchange.V1Beta1.MarketStatus.Unspecified;
    /// <summary>
    /// Status of the market
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Injective.Exchange.V1Beta1.MarketStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "min_price_tick_size" field.</summary>
    public const int MinPriceTickSizeFieldNumber = 9;
    private string minPriceTickSize_ = "";
    /// <summary>
    /// min_price_tick_size defines the minimum tick size that the price required
    /// for orders in the market
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MinPriceTickSize {
      get { return minPriceTickSize_; }
      set {
        minPriceTickSize_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "min_quantity_tick_size" field.</summary>
    public const int MinQuantityTickSizeFieldNumber = 10;
    private string minQuantityTickSize_ = "";
    /// <summary>
    /// min_quantity_tick_size defines the minimum tick size of the quantity
    /// required for orders in the market
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MinQuantityTickSize {
      get { return minQuantityTickSize_; }
      set {
        minQuantityTickSize_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpotMarket);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpotMarket other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ticker != other.Ticker) return false;
      if (BaseDenom != other.BaseDenom) return false;
      if (QuoteDenom != other.QuoteDenom) return false;
      if (MakerFeeRate != other.MakerFeeRate) return false;
      if (TakerFeeRate != other.TakerFeeRate) return false;
      if (RelayerFeeShareRate != other.RelayerFeeShareRate) return false;
      if (MarketId != other.MarketId) return false;
      if (Status != other.Status) return false;
      if (MinPriceTickSize != other.MinPriceTickSize) return false;
      if (MinQuantityTickSize != other.MinQuantityTickSize) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Ticker.Length != 0) hash ^= Ticker.GetHashCode();
      if (BaseDenom.Length != 0) hash ^= BaseDenom.GetHashCode();
      if (QuoteDenom.Length != 0) hash ^= QuoteDenom.GetHashCode();
      if (MakerFeeRate.Length != 0) hash ^= MakerFeeRate.GetHashCode();
      if (TakerFeeRate.Length != 0) hash ^= TakerFeeRate.GetHashCode();
      if (RelayerFeeShareRate.Length != 0) hash ^= RelayerFeeShareRate.GetHashCode();
      if (MarketId.Length != 0) hash ^= MarketId.GetHashCode();
      if (Status != global::Injective.Exchange.V1Beta1.MarketStatus.Unspecified) hash ^= Status.GetHashCode();
      if (MinPriceTickSize.Length != 0) hash ^= MinPriceTickSize.GetHashCode();
      if (MinQuantityTickSize.Length != 0) hash ^= MinQuantityTickSize.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Ticker.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Ticker);
      }
      if (BaseDenom.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BaseDenom);
      }
      if (QuoteDenom.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(QuoteDenom);
      }
      if (MakerFeeRate.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MakerFeeRate);
      }
      if (TakerFeeRate.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(TakerFeeRate);
      }
      if (RelayerFeeShareRate.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(RelayerFeeShareRate);
      }
      if (MarketId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(MarketId);
      }
      if (Status != global::Injective.Exchange.V1Beta1.MarketStatus.Unspecified) {
        output.WriteRawTag(64);
        output.WriteEnum((int) Status);
      }
      if (MinPriceTickSize.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(MinPriceTickSize);
      }
      if (MinQuantityTickSize.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(MinQuantityTickSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Ticker.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Ticker);
      }
      if (BaseDenom.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BaseDenom);
      }
      if (QuoteDenom.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(QuoteDenom);
      }
      if (MakerFeeRate.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MakerFeeRate);
      }
      if (TakerFeeRate.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(TakerFeeRate);
      }
      if (RelayerFeeShareRate.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(RelayerFeeShareRate);
      }
      if (MarketId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(MarketId);
      }
      if (Status != global::Injective.Exchange.V1Beta1.MarketStatus.Unspecified) {
        output.WriteRawTag(64);
        output.WriteEnum((int) Status);
      }
      if (MinPriceTickSize.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(MinPriceTickSize);
      }
      if (MinQuantityTickSize.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(MinQuantityTickSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Ticker.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ticker);
      }
      if (BaseDenom.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BaseDenom);
      }
      if (QuoteDenom.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(QuoteDenom);
      }
      if (MakerFeeRate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MakerFeeRate);
      }
      if (TakerFeeRate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TakerFeeRate);
      }
      if (RelayerFeeShareRate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RelayerFeeShareRate);
      }
      if (MarketId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MarketId);
      }
      if (Status != global::Injective.Exchange.V1Beta1.MarketStatus.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (MinPriceTickSize.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MinPriceTickSize);
      }
      if (MinQuantityTickSize.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MinQuantityTickSize);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpotMarket other) {
      if (other == null) {
        return;
      }
      if (other.Ticker.Length != 0) {
        Ticker = other.Ticker;
      }
      if (other.BaseDenom.Length != 0) {
        BaseDenom = other.BaseDenom;
      }
      if (other.QuoteDenom.Length != 0) {
        QuoteDenom = other.QuoteDenom;
      }
      if (other.MakerFeeRate.Length != 0) {
        MakerFeeRate = other.MakerFeeRate;
      }
      if (other.TakerFeeRate.Length != 0) {
        TakerFeeRate = other.TakerFeeRate;
      }
      if (other.RelayerFeeShareRate.Length != 0) {
        RelayerFeeShareRate = other.RelayerFeeShareRate;
      }
      if (other.MarketId.Length != 0) {
        MarketId = other.MarketId;
      }
      if (other.Status != global::Injective.Exchange.V1Beta1.MarketStatus.Unspecified) {
        Status = other.Status;
      }
      if (other.MinPriceTickSize.Length != 0) {
        MinPriceTickSize = other.MinPriceTickSize;
      }
      if (other.MinQuantityTickSize.Length != 0) {
        MinQuantityTickSize = other.MinQuantityTickSize;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Ticker = input.ReadString();
            break;
          }
          case 18: {
            BaseDenom = input.ReadString();
            break;
          }
          case 26: {
            QuoteDenom = input.ReadString();
            break;
          }
          case 34: {
            MakerFeeRate = input.ReadString();
            break;
          }
          case 42: {
            TakerFeeRate = input.ReadString();
            break;
          }
          case 50: {
            RelayerFeeShareRate = input.ReadString();
            break;
          }
          case 58: {
            MarketId = input.ReadString();
            break;
          }
          case 64: {
            Status = (global::Injective.Exchange.V1Beta1.MarketStatus) input.ReadEnum();
            break;
          }
          case 74: {
            MinPriceTickSize = input.ReadString();
            break;
          }
          case 82: {
            MinQuantityTickSize = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Ticker = input.ReadString();
            break;
          }
          case 18: {
            BaseDenom = input.ReadString();
            break;
          }
          case 26: {
            QuoteDenom = input.ReadString();
            break;
          }
          case 34: {
            MakerFeeRate = input.ReadString();
            break;
          }
          case 42: {
            TakerFeeRate = input.ReadString();
            break;
          }
          case 50: {
            RelayerFeeShareRate = input.ReadString();
            break;
          }
          case 58: {
            MarketId = input.ReadString();
            break;
          }
          case 64: {
            Status = (global::Injective.Exchange.V1Beta1.MarketStatus) input.ReadEnum();
            break;
          }
          case 74: {
            MinPriceTickSize = input.ReadString();
            break;
          }
          case 82: {
            MinQuantityTickSize = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A subaccount's deposit for a given base currency
  /// </summary>
  public sealed partial class Deposit : pb::IMessage<Deposit>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Deposit> _parser = new pb::MessageParser<Deposit>(() => new Deposit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Deposit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Exchange.V1Beta1.ExchangeReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Deposit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Deposit(Deposit other) : this() {
      availableBalance_ = other.availableBalance_;
      totalBalance_ = other.totalBalance_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Deposit Clone() {
      return new Deposit(this);
    }

    /// <summary>Field number for the "available_balance" field.</summary>
    public const int AvailableBalanceFieldNumber = 1;
    private string availableBalance_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AvailableBalance {
      get { return availableBalance_; }
      set {
        availableBalance_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "total_balance" field.</summary>
    public const int TotalBalanceFieldNumber = 2;
    private string totalBalance_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TotalBalance {
      get { return totalBalance_; }
      set {
        totalBalance_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Deposit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Deposit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AvailableBalance != other.AvailableBalance) return false;
      if (TotalBalance != other.TotalBalance) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AvailableBalance.Length != 0) hash ^= AvailableBalance.GetHashCode();
      if (TotalBalance.Length != 0) hash ^= TotalBalance.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AvailableBalance.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AvailableBalance);
      }
      if (TotalBalance.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TotalBalance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AvailableBalance.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AvailableBalance);
      }
      if (TotalBalance.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TotalBalance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AvailableBalance.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AvailableBalance);
      }
      if (TotalBalance.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TotalBalance);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Deposit other) {
      if (other == null) {
        return;
      }
      if (other.AvailableBalance.Length != 0) {
        AvailableBalance = other.AvailableBalance;
      }
      if (other.TotalBalance.Length != 0) {
        TotalBalance = other.TotalBalance;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AvailableBalance = input.ReadString();
            break;
          }
          case 18: {
            TotalBalance = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            AvailableBalance = input.ReadString();
            break;
          }
          case 18: {
            TotalBalance = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SubaccountTradeNonce : pb::IMessage<SubaccountTradeNonce>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SubaccountTradeNonce> _parser = new pb::MessageParser<SubaccountTradeNonce>(() => new SubaccountTradeNonce());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SubaccountTradeNonce> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Exchange.V1Beta1.ExchangeReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubaccountTradeNonce() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubaccountTradeNonce(SubaccountTradeNonce other) : this() {
      nonce_ = other.nonce_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubaccountTradeNonce Clone() {
      return new SubaccountTradeNonce(this);
    }

    /// <summary>Field number for the "nonce" field.</summary>
    public const int NonceFieldNumber = 1;
    private uint nonce_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Nonce {
      get { return nonce_; }
      set {
        nonce_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SubaccountTradeNonce);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SubaccountTradeNonce other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Nonce != other.Nonce) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Nonce != 0) hash ^= Nonce.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Nonce != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Nonce);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Nonce != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Nonce);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Nonce != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Nonce);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SubaccountTradeNonce other) {
      if (other == null) {
        return;
      }
      if (other.Nonce != 0) {
        Nonce = other.Nonce;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Nonce = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Nonce = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OrderInfo : pb::IMessage<OrderInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OrderInfo> _parser = new pb::MessageParser<OrderInfo>(() => new OrderInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OrderInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Exchange.V1Beta1.ExchangeReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OrderInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OrderInfo(OrderInfo other) : this() {
      subaccountId_ = other.subaccountId_;
      feeRecipient_ = other.feeRecipient_;
      price_ = other.price_;
      quantity_ = other.quantity_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OrderInfo Clone() {
      return new OrderInfo(this);
    }

    /// <summary>Field number for the "subaccount_id" field.</summary>
    public const int SubaccountIdFieldNumber = 1;
    private string subaccountId_ = "";
    /// <summary>
    /// bytes32 subaccount ID that created the order
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SubaccountId {
      get { return subaccountId_; }
      set {
        subaccountId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fee_recipient" field.</summary>
    public const int FeeRecipientFieldNumber = 2;
    private string feeRecipient_ = "";
    /// <summary>
    /// address fee_recipient address that will receive fees for the order
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FeeRecipient {
      get { return feeRecipient_; }
      set {
        feeRecipient_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 3;
    private string price_ = "";
    /// <summary>
    /// price of the order
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Price {
      get { return price_; }
      set {
        price_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "quantity" field.</summary>
    public const int QuantityFieldNumber = 4;
    private string quantity_ = "";
    /// <summary>
    /// quantity of the order
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Quantity {
      get { return quantity_; }
      set {
        quantity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OrderInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OrderInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SubaccountId != other.SubaccountId) return false;
      if (FeeRecipient != other.FeeRecipient) return false;
      if (Price != other.Price) return false;
      if (Quantity != other.Quantity) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SubaccountId.Length != 0) hash ^= SubaccountId.GetHashCode();
      if (FeeRecipient.Length != 0) hash ^= FeeRecipient.GetHashCode();
      if (Price.Length != 0) hash ^= Price.GetHashCode();
      if (Quantity.Length != 0) hash ^= Quantity.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SubaccountId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SubaccountId);
      }
      if (FeeRecipient.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FeeRecipient);
      }
      if (Price.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Price);
      }
      if (Quantity.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Quantity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SubaccountId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SubaccountId);
      }
      if (FeeRecipient.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FeeRecipient);
      }
      if (Price.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Price);
      }
      if (Quantity.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Quantity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SubaccountId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubaccountId);
      }
      if (FeeRecipient.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FeeRecipient);
      }
      if (Price.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Price);
      }
      if (Quantity.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Quantity);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OrderInfo other) {
      if (other == null) {
        return;
      }
      if (other.SubaccountId.Length != 0) {
        SubaccountId = other.SubaccountId;
      }
      if (other.FeeRecipient.Length != 0) {
        FeeRecipient = other.FeeRecipient;
      }
      if (other.Price.Length != 0) {
        Price = other.Price;
      }
      if (other.Quantity.Length != 0) {
        Quantity = other.Quantity;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SubaccountId = input.ReadString();
            break;
          }
          case 18: {
            FeeRecipient = input.ReadString();
            break;
          }
          case 26: {
            Price = input.ReadString();
            break;
          }
          case 34: {
            Quantity = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SubaccountId = input.ReadString();
            break;
          }
          case 18: {
            FeeRecipient = input.ReadString();
            break;
          }
          case 26: {
            Price = input.ReadString();
            break;
          }
          case 34: {
            Quantity = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SpotOrder : pb::IMessage<SpotOrder>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpotOrder> _parser = new pb::MessageParser<SpotOrder>(() => new SpotOrder());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpotOrder> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Exchange.V1Beta1.ExchangeReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpotOrder() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpotOrder(SpotOrder other) : this() {
      marketId_ = other.marketId_;
      orderInfo_ = other.orderInfo_ != null ? other.orderInfo_.Clone() : null;
      orderType_ = other.orderType_;
      triggerPrice_ = other.triggerPrice_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpotOrder Clone() {
      return new SpotOrder(this);
    }

    /// <summary>Field number for the "market_id" field.</summary>
    public const int MarketIdFieldNumber = 1;
    private string marketId_ = "";
    /// <summary>
    /// market_id represents the unique ID of the market
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MarketId {
      get { return marketId_; }
      set {
        marketId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order_info" field.</summary>
    public const int OrderInfoFieldNumber = 2;
    private global::Injective.Exchange.V1Beta1.OrderInfo orderInfo_;
    /// <summary>
    /// order_info contains the information of the order
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Injective.Exchange.V1Beta1.OrderInfo OrderInfo {
      get { return orderInfo_; }
      set {
        orderInfo_ = value;
      }
    }

    /// <summary>Field number for the "order_type" field.</summary>
    public const int OrderTypeFieldNumber = 3;
    private global::Injective.Exchange.V1Beta1.OrderType orderType_ = global::Injective.Exchange.V1Beta1.OrderType.Unspecified;
    /// <summary>
    /// order types
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Injective.Exchange.V1Beta1.OrderType OrderType {
      get { return orderType_; }
      set {
        orderType_ = value;
      }
    }

    /// <summary>Field number for the "trigger_price" field.</summary>
    public const int TriggerPriceFieldNumber = 4;
    private string triggerPrice_ = "";
    /// <summary>
    /// trigger_price is the trigger price used by stop/take orders
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TriggerPrice {
      get { return triggerPrice_; }
      set {
        triggerPrice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpotOrder);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpotOrder other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MarketId != other.MarketId) return false;
      if (!object.Equals(OrderInfo, other.OrderInfo)) return false;
      if (OrderType != other.OrderType) return false;
      if (TriggerPrice != other.TriggerPrice) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MarketId.Length != 0) hash ^= MarketId.GetHashCode();
      if (orderInfo_ != null) hash ^= OrderInfo.GetHashCode();
      if (OrderType != global::Injective.Exchange.V1Beta1.OrderType.Unspecified) hash ^= OrderType.GetHashCode();
      if (TriggerPrice.Length != 0) hash ^= TriggerPrice.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MarketId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MarketId);
      }
      if (orderInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(OrderInfo);
      }
      if (OrderType != global::Injective.Exchange.V1Beta1.OrderType.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) OrderType);
      }
      if (TriggerPrice.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TriggerPrice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MarketId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MarketId);
      }
      if (orderInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(OrderInfo);
      }
      if (OrderType != global::Injective.Exchange.V1Beta1.OrderType.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) OrderType);
      }
      if (TriggerPrice.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TriggerPrice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MarketId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MarketId);
      }
      if (orderInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OrderInfo);
      }
      if (OrderType != global::Injective.Exchange.V1Beta1.OrderType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OrderType);
      }
      if (TriggerPrice.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TriggerPrice);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpotOrder other) {
      if (other == null) {
        return;
      }
      if (other.MarketId.Length != 0) {
        MarketId = other.MarketId;
      }
      if (other.orderInfo_ != null) {
        if (orderInfo_ == null) {
          OrderInfo = new global::Injective.Exchange.V1Beta1.OrderInfo();
        }
        OrderInfo.MergeFrom(other.OrderInfo);
      }
      if (other.OrderType != global::Injective.Exchange.V1Beta1.OrderType.Unspecified) {
        OrderType = other.OrderType;
      }
      if (other.TriggerPrice.Length != 0) {
        TriggerPrice = other.TriggerPrice;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MarketId = input.ReadString();
            break;
          }
          case 18: {
            if (orderInfo_ == null) {
              OrderInfo = new global::Injective.Exchange.V1Beta1.OrderInfo();
            }
            input.ReadMessage(OrderInfo);
            break;
          }
          case 24: {
            OrderType = (global::Injective.Exchange.V1Beta1.OrderType) input.ReadEnum();
            break;
          }
          case 34: {
            TriggerPrice = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            MarketId = input.ReadString();
            break;
          }
          case 18: {
            if (orderInfo_ == null) {
              OrderInfo = new global::Injective.Exchange.V1Beta1.OrderInfo();
            }
            input.ReadMessage(OrderInfo);
            break;
          }
          case 24: {
            OrderType = (global::Injective.Exchange.V1Beta1.OrderType) input.ReadEnum();
            break;
          }
          case 34: {
            TriggerPrice = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A valid Spot limit order with Metadata.
  /// </summary>
  public sealed partial class SpotLimitOrder : pb::IMessage<SpotLimitOrder>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpotLimitOrder> _parser = new pb::MessageParser<SpotLimitOrder>(() => new SpotLimitOrder());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpotLimitOrder> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Exchange.V1Beta1.ExchangeReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpotLimitOrder() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpotLimitOrder(SpotLimitOrder other) : this() {
      orderInfo_ = other.orderInfo_ != null ? other.orderInfo_.Clone() : null;
      orderType_ = other.orderType_;
      fillable_ = other.fillable_;
      triggerPrice_ = other.triggerPrice_;
      orderHash_ = other.orderHash_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpotLimitOrder Clone() {
      return new SpotLimitOrder(this);
    }

    /// <summary>Field number for the "order_info" field.</summary>
    public const int OrderInfoFieldNumber = 1;
    private global::Injective.Exchange.V1Beta1.OrderInfo orderInfo_;
    /// <summary>
    /// order_info contains the information of the order
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Injective.Exchange.V1Beta1.OrderInfo OrderInfo {
      get { return orderInfo_; }
      set {
        orderInfo_ = value;
      }
    }

    /// <summary>Field number for the "order_type" field.</summary>
    public const int OrderTypeFieldNumber = 2;
    private global::Injective.Exchange.V1Beta1.OrderType orderType_ = global::Injective.Exchange.V1Beta1.OrderType.Unspecified;
    /// <summary>
    /// order types
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Injective.Exchange.V1Beta1.OrderType OrderType {
      get { return orderType_; }
      set {
        orderType_ = value;
      }
    }

    /// <summary>Field number for the "fillable" field.</summary>
    public const int FillableFieldNumber = 3;
    private string fillable_ = "";
    /// <summary>
    /// the amount of the quantity remaining fillable
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Fillable {
      get { return fillable_; }
      set {
        fillable_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "trigger_price" field.</summary>
    public const int TriggerPriceFieldNumber = 4;
    private string triggerPrice_ = "";
    /// <summary>
    /// trigger_price is the trigger price used by stop/take orders
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TriggerPrice {
      get { return triggerPrice_; }
      set {
        triggerPrice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order_hash" field.</summary>
    public const int OrderHashFieldNumber = 5;
    private pb::ByteString orderHash_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString OrderHash {
      get { return orderHash_; }
      set {
        orderHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpotLimitOrder);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpotLimitOrder other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(OrderInfo, other.OrderInfo)) return false;
      if (OrderType != other.OrderType) return false;
      if (Fillable != other.Fillable) return false;
      if (TriggerPrice != other.TriggerPrice) return false;
      if (OrderHash != other.OrderHash) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (orderInfo_ != null) hash ^= OrderInfo.GetHashCode();
      if (OrderType != global::Injective.Exchange.V1Beta1.OrderType.Unspecified) hash ^= OrderType.GetHashCode();
      if (Fillable.Length != 0) hash ^= Fillable.GetHashCode();
      if (TriggerPrice.Length != 0) hash ^= TriggerPrice.GetHashCode();
      if (OrderHash.Length != 0) hash ^= OrderHash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (orderInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OrderInfo);
      }
      if (OrderType != global::Injective.Exchange.V1Beta1.OrderType.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) OrderType);
      }
      if (Fillable.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Fillable);
      }
      if (TriggerPrice.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TriggerPrice);
      }
      if (OrderHash.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(OrderHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (orderInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OrderInfo);
      }
      if (OrderType != global::Injective.Exchange.V1Beta1.OrderType.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) OrderType);
      }
      if (Fillable.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Fillable);
      }
      if (TriggerPrice.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TriggerPrice);
      }
      if (OrderHash.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(OrderHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (orderInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OrderInfo);
      }
      if (OrderType != global::Injective.Exchange.V1Beta1.OrderType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OrderType);
      }
      if (Fillable.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Fillable);
      }
      if (TriggerPrice.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TriggerPrice);
      }
      if (OrderHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OrderHash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpotLimitOrder other) {
      if (other == null) {
        return;
      }
      if (other.orderInfo_ != null) {
        if (orderInfo_ == null) {
          OrderInfo = new global::Injective.Exchange.V1Beta1.OrderInfo();
        }
        OrderInfo.MergeFrom(other.OrderInfo);
      }
      if (other.OrderType != global::Injective.Exchange.V1Beta1.OrderType.Unspecified) {
        OrderType = other.OrderType;
      }
      if (other.Fillable.Length != 0) {
        Fillable = other.Fillable;
      }
      if (other.TriggerPrice.Length != 0) {
        TriggerPrice = other.TriggerPrice;
      }
      if (other.OrderHash.Length != 0) {
        OrderHash = other.OrderHash;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (orderInfo_ == null) {
              OrderInfo = new global::Injective.Exchange.V1Beta1.OrderInfo();
            }
            input.ReadMessage(OrderInfo);
            break;
          }
          case 16: {
            OrderType = (global::Injective.Exchange.V1Beta1.OrderType) input.ReadEnum();
            break;
          }
          case 26: {
            Fillable = input.ReadString();
            break;
          }
          case 34: {
            TriggerPrice = input.ReadString();
            break;
          }
          case 42: {
            OrderHash = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (orderInfo_ == null) {
              OrderInfo = new global::Injective.Exchange.V1Beta1.OrderInfo();
            }
            input.ReadMessage(OrderInfo);
            break;
          }
          case 16: {
            OrderType = (global::Injective.Exchange.V1Beta1.OrderType) input.ReadEnum();
            break;
          }
          case 26: {
            Fillable = input.ReadString();
            break;
          }
          case 34: {
            TriggerPrice = input.ReadString();
            break;
          }
          case 42: {
            OrderHash = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A valid Spot market order with Metadata.
  /// </summary>
  public sealed partial class SpotMarketOrder : pb::IMessage<SpotMarketOrder>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpotMarketOrder> _parser = new pb::MessageParser<SpotMarketOrder>(() => new SpotMarketOrder());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpotMarketOrder> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Exchange.V1Beta1.ExchangeReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpotMarketOrder() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpotMarketOrder(SpotMarketOrder other) : this() {
      orderInfo_ = other.orderInfo_ != null ? other.orderInfo_.Clone() : null;
      balanceHold_ = other.balanceHold_;
      orderHash_ = other.orderHash_;
      orderType_ = other.orderType_;
      triggerPrice_ = other.triggerPrice_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpotMarketOrder Clone() {
      return new SpotMarketOrder(this);
    }

    /// <summary>Field number for the "order_info" field.</summary>
    public const int OrderInfoFieldNumber = 1;
    private global::Injective.Exchange.V1Beta1.OrderInfo orderInfo_;
    /// <summary>
    /// order_info contains the information of the order
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Injective.Exchange.V1Beta1.OrderInfo OrderInfo {
      get { return orderInfo_; }
      set {
        orderInfo_ = value;
      }
    }

    /// <summary>Field number for the "balance_hold" field.</summary>
    public const int BalanceHoldFieldNumber = 2;
    private string balanceHold_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BalanceHold {
      get { return balanceHold_; }
      set {
        balanceHold_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order_hash" field.</summary>
    public const int OrderHashFieldNumber = 3;
    private pb::ByteString orderHash_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString OrderHash {
      get { return orderHash_; }
      set {
        orderHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order_type" field.</summary>
    public const int OrderTypeFieldNumber = 4;
    private global::Injective.Exchange.V1Beta1.OrderType orderType_ = global::Injective.Exchange.V1Beta1.OrderType.Unspecified;
    /// <summary>
    /// order types
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Injective.Exchange.V1Beta1.OrderType OrderType {
      get { return orderType_; }
      set {
        orderType_ = value;
      }
    }

    /// <summary>Field number for the "trigger_price" field.</summary>
    public const int TriggerPriceFieldNumber = 5;
    private string triggerPrice_ = "";
    /// <summary>
    /// trigger_price is the trigger price used by stop/take orders
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TriggerPrice {
      get { return triggerPrice_; }
      set {
        triggerPrice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpotMarketOrder);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpotMarketOrder other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(OrderInfo, other.OrderInfo)) return false;
      if (BalanceHold != other.BalanceHold) return false;
      if (OrderHash != other.OrderHash) return false;
      if (OrderType != other.OrderType) return false;
      if (TriggerPrice != other.TriggerPrice) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (orderInfo_ != null) hash ^= OrderInfo.GetHashCode();
      if (BalanceHold.Length != 0) hash ^= BalanceHold.GetHashCode();
      if (OrderHash.Length != 0) hash ^= OrderHash.GetHashCode();
      if (OrderType != global::Injective.Exchange.V1Beta1.OrderType.Unspecified) hash ^= OrderType.GetHashCode();
      if (TriggerPrice.Length != 0) hash ^= TriggerPrice.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (orderInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OrderInfo);
      }
      if (BalanceHold.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BalanceHold);
      }
      if (OrderHash.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(OrderHash);
      }
      if (OrderType != global::Injective.Exchange.V1Beta1.OrderType.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) OrderType);
      }
      if (TriggerPrice.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(TriggerPrice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (orderInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OrderInfo);
      }
      if (BalanceHold.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BalanceHold);
      }
      if (OrderHash.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(OrderHash);
      }
      if (OrderType != global::Injective.Exchange.V1Beta1.OrderType.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) OrderType);
      }
      if (TriggerPrice.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(TriggerPrice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (orderInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OrderInfo);
      }
      if (BalanceHold.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BalanceHold);
      }
      if (OrderHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OrderHash);
      }
      if (OrderType != global::Injective.Exchange.V1Beta1.OrderType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OrderType);
      }
      if (TriggerPrice.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TriggerPrice);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpotMarketOrder other) {
      if (other == null) {
        return;
      }
      if (other.orderInfo_ != null) {
        if (orderInfo_ == null) {
          OrderInfo = new global::Injective.Exchange.V1Beta1.OrderInfo();
        }
        OrderInfo.MergeFrom(other.OrderInfo);
      }
      if (other.BalanceHold.Length != 0) {
        BalanceHold = other.BalanceHold;
      }
      if (other.OrderHash.Length != 0) {
        OrderHash = other.OrderHash;
      }
      if (other.OrderType != global::Injective.Exchange.V1Beta1.OrderType.Unspecified) {
        OrderType = other.OrderType;
      }
      if (other.TriggerPrice.Length != 0) {
        TriggerPrice = other.TriggerPrice;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (orderInfo_ == null) {
              OrderInfo = new global::Injective.Exchange.V1Beta1.OrderInfo();
            }
            input.ReadMessage(OrderInfo);
            break;
          }
          case 18: {
            BalanceHold = input.ReadString();
            break;
          }
          case 26: {
            OrderHash = input.ReadBytes();
            break;
          }
          case 32: {
            OrderType = (global::Injective.Exchange.V1Beta1.OrderType) input.ReadEnum();
            break;
          }
          case 42: {
            TriggerPrice = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (orderInfo_ == null) {
              OrderInfo = new global::Injective.Exchange.V1Beta1.OrderInfo();
            }
            input.ReadMessage(OrderInfo);
            break;
          }
          case 18: {
            BalanceHold = input.ReadString();
            break;
          }
          case 26: {
            OrderHash = input.ReadBytes();
            break;
          }
          case 32: {
            OrderType = (global::Injective.Exchange.V1Beta1.OrderType) input.ReadEnum();
            break;
          }
          case 42: {
            TriggerPrice = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DerivativeOrder : pb::IMessage<DerivativeOrder>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DerivativeOrder> _parser = new pb::MessageParser<DerivativeOrder>(() => new DerivativeOrder());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DerivativeOrder> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Exchange.V1Beta1.ExchangeReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DerivativeOrder() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DerivativeOrder(DerivativeOrder other) : this() {
      marketId_ = other.marketId_;
      orderInfo_ = other.orderInfo_ != null ? other.orderInfo_.Clone() : null;
      orderType_ = other.orderType_;
      margin_ = other.margin_;
      triggerPrice_ = other.triggerPrice_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DerivativeOrder Clone() {
      return new DerivativeOrder(this);
    }

    /// <summary>Field number for the "market_id" field.</summary>
    public const int MarketIdFieldNumber = 1;
    private string marketId_ = "";
    /// <summary>
    /// market_id represents the unique ID of the market
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MarketId {
      get { return marketId_; }
      set {
        marketId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order_info" field.</summary>
    public const int OrderInfoFieldNumber = 2;
    private global::Injective.Exchange.V1Beta1.OrderInfo orderInfo_;
    /// <summary>
    /// order_info contains the information of the order
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Injective.Exchange.V1Beta1.OrderInfo OrderInfo {
      get { return orderInfo_; }
      set {
        orderInfo_ = value;
      }
    }

    /// <summary>Field number for the "order_type" field.</summary>
    public const int OrderTypeFieldNumber = 3;
    private global::Injective.Exchange.V1Beta1.OrderType orderType_ = global::Injective.Exchange.V1Beta1.OrderType.Unspecified;
    /// <summary>
    /// order types
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Injective.Exchange.V1Beta1.OrderType OrderType {
      get { return orderType_; }
      set {
        orderType_ = value;
      }
    }

    /// <summary>Field number for the "margin" field.</summary>
    public const int MarginFieldNumber = 4;
    private string margin_ = "";
    /// <summary>
    /// margin is the margin used by the limit order
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Margin {
      get { return margin_; }
      set {
        margin_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "trigger_price" field.</summary>
    public const int TriggerPriceFieldNumber = 5;
    private string triggerPrice_ = "";
    /// <summary>
    /// trigger_price is the trigger price used by stop/take orders
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TriggerPrice {
      get { return triggerPrice_; }
      set {
        triggerPrice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DerivativeOrder);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DerivativeOrder other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MarketId != other.MarketId) return false;
      if (!object.Equals(OrderInfo, other.OrderInfo)) return false;
      if (OrderType != other.OrderType) return false;
      if (Margin != other.Margin) return false;
      if (TriggerPrice != other.TriggerPrice) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MarketId.Length != 0) hash ^= MarketId.GetHashCode();
      if (orderInfo_ != null) hash ^= OrderInfo.GetHashCode();
      if (OrderType != global::Injective.Exchange.V1Beta1.OrderType.Unspecified) hash ^= OrderType.GetHashCode();
      if (Margin.Length != 0) hash ^= Margin.GetHashCode();
      if (TriggerPrice.Length != 0) hash ^= TriggerPrice.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MarketId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MarketId);
      }
      if (orderInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(OrderInfo);
      }
      if (OrderType != global::Injective.Exchange.V1Beta1.OrderType.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) OrderType);
      }
      if (Margin.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Margin);
      }
      if (TriggerPrice.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(TriggerPrice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MarketId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MarketId);
      }
      if (orderInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(OrderInfo);
      }
      if (OrderType != global::Injective.Exchange.V1Beta1.OrderType.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) OrderType);
      }
      if (Margin.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Margin);
      }
      if (TriggerPrice.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(TriggerPrice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MarketId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MarketId);
      }
      if (orderInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OrderInfo);
      }
      if (OrderType != global::Injective.Exchange.V1Beta1.OrderType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OrderType);
      }
      if (Margin.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Margin);
      }
      if (TriggerPrice.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TriggerPrice);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DerivativeOrder other) {
      if (other == null) {
        return;
      }
      if (other.MarketId.Length != 0) {
        MarketId = other.MarketId;
      }
      if (other.orderInfo_ != null) {
        if (orderInfo_ == null) {
          OrderInfo = new global::Injective.Exchange.V1Beta1.OrderInfo();
        }
        OrderInfo.MergeFrom(other.OrderInfo);
      }
      if (other.OrderType != global::Injective.Exchange.V1Beta1.OrderType.Unspecified) {
        OrderType = other.OrderType;
      }
      if (other.Margin.Length != 0) {
        Margin = other.Margin;
      }
      if (other.TriggerPrice.Length != 0) {
        TriggerPrice = other.TriggerPrice;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MarketId = input.ReadString();
            break;
          }
          case 18: {
            if (orderInfo_ == null) {
              OrderInfo = new global::Injective.Exchange.V1Beta1.OrderInfo();
            }
            input.ReadMessage(OrderInfo);
            break;
          }
          case 24: {
            OrderType = (global::Injective.Exchange.V1Beta1.OrderType) input.ReadEnum();
            break;
          }
          case 34: {
            Margin = input.ReadString();
            break;
          }
          case 42: {
            TriggerPrice = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            MarketId = input.ReadString();
            break;
          }
          case 18: {
            if (orderInfo_ == null) {
              OrderInfo = new global::Injective.Exchange.V1Beta1.OrderInfo();
            }
            input.ReadMessage(OrderInfo);
            break;
          }
          case 24: {
            OrderType = (global::Injective.Exchange.V1Beta1.OrderType) input.ReadEnum();
            break;
          }
          case 34: {
            Margin = input.ReadString();
            break;
          }
          case 42: {
            TriggerPrice = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SubaccountOrderbookMetadata : pb::IMessage<SubaccountOrderbookMetadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SubaccountOrderbookMetadata> _parser = new pb::MessageParser<SubaccountOrderbookMetadata>(() => new SubaccountOrderbookMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SubaccountOrderbookMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Exchange.V1Beta1.ExchangeReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubaccountOrderbookMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubaccountOrderbookMetadata(SubaccountOrderbookMetadata other) : this() {
      vanillaLimitOrderCount_ = other.vanillaLimitOrderCount_;
      reduceOnlyLimitOrderCount_ = other.reduceOnlyLimitOrderCount_;
      aggregateReduceOnlyQuantity_ = other.aggregateReduceOnlyQuantity_;
      aggregateVanillaQuantity_ = other.aggregateVanillaQuantity_;
      vanillaConditionalOrderCount_ = other.vanillaConditionalOrderCount_;
      reduceOnlyConditionalOrderCount_ = other.reduceOnlyConditionalOrderCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubaccountOrderbookMetadata Clone() {
      return new SubaccountOrderbookMetadata(this);
    }

    /// <summary>Field number for the "vanilla_limit_order_count" field.</summary>
    public const int VanillaLimitOrderCountFieldNumber = 1;
    private uint vanillaLimitOrderCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint VanillaLimitOrderCount {
      get { return vanillaLimitOrderCount_; }
      set {
        vanillaLimitOrderCount_ = value;
      }
    }

    /// <summary>Field number for the "reduce_only_limit_order_count" field.</summary>
    public const int ReduceOnlyLimitOrderCountFieldNumber = 2;
    private uint reduceOnlyLimitOrderCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ReduceOnlyLimitOrderCount {
      get { return reduceOnlyLimitOrderCount_; }
      set {
        reduceOnlyLimitOrderCount_ = value;
      }
    }

    /// <summary>Field number for the "aggregate_reduce_only_quantity" field.</summary>
    public const int AggregateReduceOnlyQuantityFieldNumber = 3;
    private string aggregateReduceOnlyQuantity_ = "";
    /// <summary>
    /// AggregateReduceOnlyQuantity is the aggregate fillable quantity of the
    /// subaccount's reduce-only limit orders in the given direction.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AggregateReduceOnlyQuantity {
      get { return aggregateReduceOnlyQuantity_; }
      set {
        aggregateReduceOnlyQuantity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "aggregate_vanilla_quantity" field.</summary>
    public const int AggregateVanillaQuantityFieldNumber = 4;
    private string aggregateVanillaQuantity_ = "";
    /// <summary>
    /// AggregateVanillaQuantity is the aggregate fillable quantity of the
    /// subaccount's vanilla limit orders in the given direction.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AggregateVanillaQuantity {
      get { return aggregateVanillaQuantity_; }
      set {
        aggregateVanillaQuantity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "vanilla_conditional_order_count" field.</summary>
    public const int VanillaConditionalOrderCountFieldNumber = 5;
    private uint vanillaConditionalOrderCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint VanillaConditionalOrderCount {
      get { return vanillaConditionalOrderCount_; }
      set {
        vanillaConditionalOrderCount_ = value;
      }
    }

    /// <summary>Field number for the "reduce_only_conditional_order_count" field.</summary>
    public const int ReduceOnlyConditionalOrderCountFieldNumber = 6;
    private uint reduceOnlyConditionalOrderCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ReduceOnlyConditionalOrderCount {
      get { return reduceOnlyConditionalOrderCount_; }
      set {
        reduceOnlyConditionalOrderCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SubaccountOrderbookMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SubaccountOrderbookMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VanillaLimitOrderCount != other.VanillaLimitOrderCount) return false;
      if (ReduceOnlyLimitOrderCount != other.ReduceOnlyLimitOrderCount) return false;
      if (AggregateReduceOnlyQuantity != other.AggregateReduceOnlyQuantity) return false;
      if (AggregateVanillaQuantity != other.AggregateVanillaQuantity) return false;
      if (VanillaConditionalOrderCount != other.VanillaConditionalOrderCount) return false;
      if (ReduceOnlyConditionalOrderCount != other.ReduceOnlyConditionalOrderCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (VanillaLimitOrderCount != 0) hash ^= VanillaLimitOrderCount.GetHashCode();
      if (ReduceOnlyLimitOrderCount != 0) hash ^= ReduceOnlyLimitOrderCount.GetHashCode();
      if (AggregateReduceOnlyQuantity.Length != 0) hash ^= AggregateReduceOnlyQuantity.GetHashCode();
      if (AggregateVanillaQuantity.Length != 0) hash ^= AggregateVanillaQuantity.GetHashCode();
      if (VanillaConditionalOrderCount != 0) hash ^= VanillaConditionalOrderCount.GetHashCode();
      if (ReduceOnlyConditionalOrderCount != 0) hash ^= ReduceOnlyConditionalOrderCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (VanillaLimitOrderCount != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(VanillaLimitOrderCount);
      }
      if (ReduceOnlyLimitOrderCount != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(ReduceOnlyLimitOrderCount);
      }
      if (AggregateReduceOnlyQuantity.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AggregateReduceOnlyQuantity);
      }
      if (AggregateVanillaQuantity.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(AggregateVanillaQuantity);
      }
      if (VanillaConditionalOrderCount != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(VanillaConditionalOrderCount);
      }
      if (ReduceOnlyConditionalOrderCount != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(ReduceOnlyConditionalOrderCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (VanillaLimitOrderCount != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(VanillaLimitOrderCount);
      }
      if (ReduceOnlyLimitOrderCount != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(ReduceOnlyLimitOrderCount);
      }
      if (AggregateReduceOnlyQuantity.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AggregateReduceOnlyQuantity);
      }
      if (AggregateVanillaQuantity.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(AggregateVanillaQuantity);
      }
      if (VanillaConditionalOrderCount != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(VanillaConditionalOrderCount);
      }
      if (ReduceOnlyConditionalOrderCount != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(ReduceOnlyConditionalOrderCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (VanillaLimitOrderCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(VanillaLimitOrderCount);
      }
      if (ReduceOnlyLimitOrderCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ReduceOnlyLimitOrderCount);
      }
      if (AggregateReduceOnlyQuantity.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AggregateReduceOnlyQuantity);
      }
      if (AggregateVanillaQuantity.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AggregateVanillaQuantity);
      }
      if (VanillaConditionalOrderCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(VanillaConditionalOrderCount);
      }
      if (ReduceOnlyConditionalOrderCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ReduceOnlyConditionalOrderCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SubaccountOrderbookMetadata other) {
      if (other == null) {
        return;
      }
      if (other.VanillaLimitOrderCount != 0) {
        VanillaLimitOrderCount = other.VanillaLimitOrderCount;
      }
      if (other.ReduceOnlyLimitOrderCount != 0) {
        ReduceOnlyLimitOrderCount = other.ReduceOnlyLimitOrderCount;
      }
      if (other.AggregateReduceOnlyQuantity.Length != 0) {
        AggregateReduceOnlyQuantity = other.AggregateReduceOnlyQuantity;
      }
      if (other.AggregateVanillaQuantity.Length != 0) {
        AggregateVanillaQuantity = other.AggregateVanillaQuantity;
      }
      if (other.VanillaConditionalOrderCount != 0) {
        VanillaConditionalOrderCount = other.VanillaConditionalOrderCount;
      }
      if (other.ReduceOnlyConditionalOrderCount != 0) {
        ReduceOnlyConditionalOrderCount = other.ReduceOnlyConditionalOrderCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            VanillaLimitOrderCount = input.ReadUInt32();
            break;
          }
          case 16: {
            ReduceOnlyLimitOrderCount = input.ReadUInt32();
            break;
          }
          case 26: {
            AggregateReduceOnlyQuantity = input.ReadString();
            break;
          }
          case 34: {
            AggregateVanillaQuantity = input.ReadString();
            break;
          }
          case 40: {
            VanillaConditionalOrderCount = input.ReadUInt32();
            break;
          }
          case 48: {
            ReduceOnlyConditionalOrderCount = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            VanillaLimitOrderCount = input.ReadUInt32();
            break;
          }
          case 16: {
            ReduceOnlyLimitOrderCount = input.ReadUInt32();
            break;
          }
          case 26: {
            AggregateReduceOnlyQuantity = input.ReadString();
            break;
          }
          case 34: {
            AggregateVanillaQuantity = input.ReadString();
            break;
          }
          case 40: {
            VanillaConditionalOrderCount = input.ReadUInt32();
            break;
          }
          case 48: {
            ReduceOnlyConditionalOrderCount = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SubaccountOrder : pb::IMessage<SubaccountOrder>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SubaccountOrder> _parser = new pb::MessageParser<SubaccountOrder>(() => new SubaccountOrder());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SubaccountOrder> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Exchange.V1Beta1.ExchangeReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubaccountOrder() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubaccountOrder(SubaccountOrder other) : this() {
      price_ = other.price_;
      quantity_ = other.quantity_;
      isReduceOnly_ = other.isReduceOnly_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubaccountOrder Clone() {
      return new SubaccountOrder(this);
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 1;
    private string price_ = "";
    /// <summary>
    /// price of the order
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Price {
      get { return price_; }
      set {
        price_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "quantity" field.</summary>
    public const int QuantityFieldNumber = 2;
    private string quantity_ = "";
    /// <summary>
    /// the amount of the quantity remaining fillable
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Quantity {
      get { return quantity_; }
      set {
        quantity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isReduceOnly" field.</summary>
    public const int IsReduceOnlyFieldNumber = 3;
    private bool isReduceOnly_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsReduceOnly {
      get { return isReduceOnly_; }
      set {
        isReduceOnly_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SubaccountOrder);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SubaccountOrder other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Price != other.Price) return false;
      if (Quantity != other.Quantity) return false;
      if (IsReduceOnly != other.IsReduceOnly) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Price.Length != 0) hash ^= Price.GetHashCode();
      if (Quantity.Length != 0) hash ^= Quantity.GetHashCode();
      if (IsReduceOnly != false) hash ^= IsReduceOnly.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Price.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Price);
      }
      if (Quantity.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Quantity);
      }
      if (IsReduceOnly != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsReduceOnly);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Price.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Price);
      }
      if (Quantity.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Quantity);
      }
      if (IsReduceOnly != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsReduceOnly);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Price.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Price);
      }
      if (Quantity.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Quantity);
      }
      if (IsReduceOnly != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SubaccountOrder other) {
      if (other == null) {
        return;
      }
      if (other.Price.Length != 0) {
        Price = other.Price;
      }
      if (other.Quantity.Length != 0) {
        Quantity = other.Quantity;
      }
      if (other.IsReduceOnly != false) {
        IsReduceOnly = other.IsReduceOnly;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Price = input.ReadString();
            break;
          }
          case 18: {
            Quantity = input.ReadString();
            break;
          }
          case 24: {
            IsReduceOnly = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Price = input.ReadString();
            break;
          }
          case 18: {
            Quantity = input.ReadString();
            break;
          }
          case 24: {
            IsReduceOnly = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SubaccountOrderData : pb::IMessage<SubaccountOrderData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SubaccountOrderData> _parser = new pb::MessageParser<SubaccountOrderData>(() => new SubaccountOrderData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SubaccountOrderData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Exchange.V1Beta1.ExchangeReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubaccountOrderData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubaccountOrderData(SubaccountOrderData other) : this() {
      order_ = other.order_ != null ? other.order_.Clone() : null;
      orderHash_ = other.orderHash_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubaccountOrderData Clone() {
      return new SubaccountOrderData(this);
    }

    /// <summary>Field number for the "order" field.</summary>
    public const int OrderFieldNumber = 1;
    private global::Injective.Exchange.V1Beta1.SubaccountOrder order_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Injective.Exchange.V1Beta1.SubaccountOrder Order {
      get { return order_; }
      set {
        order_ = value;
      }
    }

    /// <summary>Field number for the "order_hash" field.</summary>
    public const int OrderHashFieldNumber = 2;
    private pb::ByteString orderHash_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString OrderHash {
      get { return orderHash_; }
      set {
        orderHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SubaccountOrderData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SubaccountOrderData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Order, other.Order)) return false;
      if (OrderHash != other.OrderHash) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (order_ != null) hash ^= Order.GetHashCode();
      if (OrderHash.Length != 0) hash ^= OrderHash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (order_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Order);
      }
      if (OrderHash.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(OrderHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (order_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Order);
      }
      if (OrderHash.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(OrderHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (order_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Order);
      }
      if (OrderHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OrderHash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SubaccountOrderData other) {
      if (other == null) {
        return;
      }
      if (other.order_ != null) {
        if (order_ == null) {
          Order = new global::Injective.Exchange.V1Beta1.SubaccountOrder();
        }
        Order.MergeFrom(other.Order);
      }
      if (other.OrderHash.Length != 0) {
        OrderHash = other.OrderHash;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (order_ == null) {
              Order = new global::Injective.Exchange.V1Beta1.SubaccountOrder();
            }
            input.ReadMessage(Order);
            break;
          }
          case 18: {
            OrderHash = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (order_ == null) {
              Order = new global::Injective.Exchange.V1Beta1.SubaccountOrder();
            }
            input.ReadMessage(Order);
            break;
          }
          case 18: {
            OrderHash = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A valid Derivative limit order with Metadata.
  /// </summary>
  public sealed partial class DerivativeLimitOrder : pb::IMessage<DerivativeLimitOrder>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DerivativeLimitOrder> _parser = new pb::MessageParser<DerivativeLimitOrder>(() => new DerivativeLimitOrder());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DerivativeLimitOrder> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Exchange.V1Beta1.ExchangeReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DerivativeLimitOrder() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DerivativeLimitOrder(DerivativeLimitOrder other) : this() {
      orderInfo_ = other.orderInfo_ != null ? other.orderInfo_.Clone() : null;
      orderType_ = other.orderType_;
      margin_ = other.margin_;
      fillable_ = other.fillable_;
      triggerPrice_ = other.triggerPrice_;
      orderHash_ = other.orderHash_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DerivativeLimitOrder Clone() {
      return new DerivativeLimitOrder(this);
    }

    /// <summary>Field number for the "order_info" field.</summary>
    public const int OrderInfoFieldNumber = 1;
    private global::Injective.Exchange.V1Beta1.OrderInfo orderInfo_;
    /// <summary>
    /// order_info contains the information of the order
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Injective.Exchange.V1Beta1.OrderInfo OrderInfo {
      get { return orderInfo_; }
      set {
        orderInfo_ = value;
      }
    }

    /// <summary>Field number for the "order_type" field.</summary>
    public const int OrderTypeFieldNumber = 2;
    private global::Injective.Exchange.V1Beta1.OrderType orderType_ = global::Injective.Exchange.V1Beta1.OrderType.Unspecified;
    /// <summary>
    /// order types
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Injective.Exchange.V1Beta1.OrderType OrderType {
      get { return orderType_; }
      set {
        orderType_ = value;
      }
    }

    /// <summary>Field number for the "margin" field.</summary>
    public const int MarginFieldNumber = 3;
    private string margin_ = "";
    /// <summary>
    /// margin is the margin used by the limit order
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Margin {
      get { return margin_; }
      set {
        margin_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fillable" field.</summary>
    public const int FillableFieldNumber = 4;
    private string fillable_ = "";
    /// <summary>
    /// the amount of the quantity remaining fillable
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Fillable {
      get { return fillable_; }
      set {
        fillable_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "trigger_price" field.</summary>
    public const int TriggerPriceFieldNumber = 5;
    private string triggerPrice_ = "";
    /// <summary>
    /// trigger_price is the trigger price used by stop/take orders
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TriggerPrice {
      get { return triggerPrice_; }
      set {
        triggerPrice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order_hash" field.</summary>
    public const int OrderHashFieldNumber = 6;
    private pb::ByteString orderHash_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString OrderHash {
      get { return orderHash_; }
      set {
        orderHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DerivativeLimitOrder);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DerivativeLimitOrder other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(OrderInfo, other.OrderInfo)) return false;
      if (OrderType != other.OrderType) return false;
      if (Margin != other.Margin) return false;
      if (Fillable != other.Fillable) return false;
      if (TriggerPrice != other.TriggerPrice) return false;
      if (OrderHash != other.OrderHash) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (orderInfo_ != null) hash ^= OrderInfo.GetHashCode();
      if (OrderType != global::Injective.Exchange.V1Beta1.OrderType.Unspecified) hash ^= OrderType.GetHashCode();
      if (Margin.Length != 0) hash ^= Margin.GetHashCode();
      if (Fillable.Length != 0) hash ^= Fillable.GetHashCode();
      if (TriggerPrice.Length != 0) hash ^= TriggerPrice.GetHashCode();
      if (OrderHash.Length != 0) hash ^= OrderHash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (orderInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OrderInfo);
      }
      if (OrderType != global::Injective.Exchange.V1Beta1.OrderType.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) OrderType);
      }
      if (Margin.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Margin);
      }
      if (Fillable.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Fillable);
      }
      if (TriggerPrice.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(TriggerPrice);
      }
      if (OrderHash.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(OrderHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (orderInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OrderInfo);
      }
      if (OrderType != global::Injective.Exchange.V1Beta1.OrderType.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) OrderType);
      }
      if (Margin.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Margin);
      }
      if (Fillable.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Fillable);
      }
      if (TriggerPrice.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(TriggerPrice);
      }
      if (OrderHash.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(OrderHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (orderInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OrderInfo);
      }
      if (OrderType != global::Injective.Exchange.V1Beta1.OrderType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OrderType);
      }
      if (Margin.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Margin);
      }
      if (Fillable.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Fillable);
      }
      if (TriggerPrice.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TriggerPrice);
      }
      if (OrderHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OrderHash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DerivativeLimitOrder other) {
      if (other == null) {
        return;
      }
      if (other.orderInfo_ != null) {
        if (orderInfo_ == null) {
          OrderInfo = new global::Injective.Exchange.V1Beta1.OrderInfo();
        }
        OrderInfo.MergeFrom(other.OrderInfo);
      }
      if (other.OrderType != global::Injective.Exchange.V1Beta1.OrderType.Unspecified) {
        OrderType = other.OrderType;
      }
      if (other.Margin.Length != 0) {
        Margin = other.Margin;
      }
      if (other.Fillable.Length != 0) {
        Fillable = other.Fillable;
      }
      if (other.TriggerPrice.Length != 0) {
        TriggerPrice = other.TriggerPrice;
      }
      if (other.OrderHash.Length != 0) {
        OrderHash = other.OrderHash;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (orderInfo_ == null) {
              OrderInfo = new global::Injective.Exchange.V1Beta1.OrderInfo();
            }
            input.ReadMessage(OrderInfo);
            break;
          }
          case 16: {
            OrderType = (global::Injective.Exchange.V1Beta1.OrderType) input.ReadEnum();
            break;
          }
          case 26: {
            Margin = input.ReadString();
            break;
          }
          case 34: {
            Fillable = input.ReadString();
            break;
          }
          case 42: {
            TriggerPrice = input.ReadString();
            break;
          }
          case 50: {
            OrderHash = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (orderInfo_ == null) {
              OrderInfo = new global::Injective.Exchange.V1Beta1.OrderInfo();
            }
            input.ReadMessage(OrderInfo);
            break;
          }
          case 16: {
            OrderType = (global::Injective.Exchange.V1Beta1.OrderType) input.ReadEnum();
            break;
          }
          case 26: {
            Margin = input.ReadString();
            break;
          }
          case 34: {
            Fillable = input.ReadString();
            break;
          }
          case 42: {
            TriggerPrice = input.ReadString();
            break;
          }
          case 50: {
            OrderHash = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A valid Derivative market order with Metadata.
  /// </summary>
  public sealed partial class DerivativeMarketOrder : pb::IMessage<DerivativeMarketOrder>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DerivativeMarketOrder> _parser = new pb::MessageParser<DerivativeMarketOrder>(() => new DerivativeMarketOrder());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DerivativeMarketOrder> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Exchange.V1Beta1.ExchangeReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DerivativeMarketOrder() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DerivativeMarketOrder(DerivativeMarketOrder other) : this() {
      orderInfo_ = other.orderInfo_ != null ? other.orderInfo_.Clone() : null;
      orderType_ = other.orderType_;
      margin_ = other.margin_;
      marginHold_ = other.marginHold_;
      triggerPrice_ = other.triggerPrice_;
      orderHash_ = other.orderHash_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DerivativeMarketOrder Clone() {
      return new DerivativeMarketOrder(this);
    }

    /// <summary>Field number for the "order_info" field.</summary>
    public const int OrderInfoFieldNumber = 1;
    private global::Injective.Exchange.V1Beta1.OrderInfo orderInfo_;
    /// <summary>
    /// order_info contains the information of the order
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Injective.Exchange.V1Beta1.OrderInfo OrderInfo {
      get { return orderInfo_; }
      set {
        orderInfo_ = value;
      }
    }

    /// <summary>Field number for the "order_type" field.</summary>
    public const int OrderTypeFieldNumber = 2;
    private global::Injective.Exchange.V1Beta1.OrderType orderType_ = global::Injective.Exchange.V1Beta1.OrderType.Unspecified;
    /// <summary>
    /// order types
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Injective.Exchange.V1Beta1.OrderType OrderType {
      get { return orderType_; }
      set {
        orderType_ = value;
      }
    }

    /// <summary>Field number for the "margin" field.</summary>
    public const int MarginFieldNumber = 3;
    private string margin_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Margin {
      get { return margin_; }
      set {
        margin_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "margin_hold" field.</summary>
    public const int MarginHoldFieldNumber = 4;
    private string marginHold_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MarginHold {
      get { return marginHold_; }
      set {
        marginHold_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "trigger_price" field.</summary>
    public const int TriggerPriceFieldNumber = 5;
    private string triggerPrice_ = "";
    /// <summary>
    /// trigger_price is the trigger price used by stop/take orders
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TriggerPrice {
      get { return triggerPrice_; }
      set {
        triggerPrice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order_hash" field.</summary>
    public const int OrderHashFieldNumber = 6;
    private pb::ByteString orderHash_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString OrderHash {
      get { return orderHash_; }
      set {
        orderHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DerivativeMarketOrder);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DerivativeMarketOrder other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(OrderInfo, other.OrderInfo)) return false;
      if (OrderType != other.OrderType) return false;
      if (Margin != other.Margin) return false;
      if (MarginHold != other.MarginHold) return false;
      if (TriggerPrice != other.TriggerPrice) return false;
      if (OrderHash != other.OrderHash) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (orderInfo_ != null) hash ^= OrderInfo.GetHashCode();
      if (OrderType != global::Injective.Exchange.V1Beta1.OrderType.Unspecified) hash ^= OrderType.GetHashCode();
      if (Margin.Length != 0) hash ^= Margin.GetHashCode();
      if (MarginHold.Length != 0) hash ^= MarginHold.GetHashCode();
      if (TriggerPrice.Length != 0) hash ^= TriggerPrice.GetHashCode();
      if (OrderHash.Length != 0) hash ^= OrderHash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (orderInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OrderInfo);
      }
      if (OrderType != global::Injective.Exchange.V1Beta1.OrderType.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) OrderType);
      }
      if (Margin.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Margin);
      }
      if (MarginHold.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MarginHold);
      }
      if (TriggerPrice.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(TriggerPrice);
      }
      if (OrderHash.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(OrderHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (orderInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OrderInfo);
      }
      if (OrderType != global::Injective.Exchange.V1Beta1.OrderType.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) OrderType);
      }
      if (Margin.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Margin);
      }
      if (MarginHold.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MarginHold);
      }
      if (TriggerPrice.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(TriggerPrice);
      }
      if (OrderHash.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(OrderHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (orderInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OrderInfo);
      }
      if (OrderType != global::Injective.Exchange.V1Beta1.OrderType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OrderType);
      }
      if (Margin.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Margin);
      }
      if (MarginHold.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MarginHold);
      }
      if (TriggerPrice.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TriggerPrice);
      }
      if (OrderHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OrderHash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DerivativeMarketOrder other) {
      if (other == null) {
        return;
      }
      if (other.orderInfo_ != null) {
        if (orderInfo_ == null) {
          OrderInfo = new global::Injective.Exchange.V1Beta1.OrderInfo();
        }
        OrderInfo.MergeFrom(other.OrderInfo);
      }
      if (other.OrderType != global::Injective.Exchange.V1Beta1.OrderType.Unspecified) {
        OrderType = other.OrderType;
      }
      if (other.Margin.Length != 0) {
        Margin = other.Margin;
      }
      if (other.MarginHold.Length != 0) {
        MarginHold = other.MarginHold;
      }
      if (other.TriggerPrice.Length != 0) {
        TriggerPrice = other.TriggerPrice;
      }
      if (other.OrderHash.Length != 0) {
        OrderHash = other.OrderHash;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (orderInfo_ == null) {
              OrderInfo = new global::Injective.Exchange.V1Beta1.OrderInfo();
            }
            input.ReadMessage(OrderInfo);
            break;
          }
          case 16: {
            OrderType = (global::Injective.Exchange.V1Beta1.OrderType) input.ReadEnum();
            break;
          }
          case 26: {
            Margin = input.ReadString();
            break;
          }
          case 34: {
            MarginHold = input.ReadString();
            break;
          }
          case 42: {
            TriggerPrice = input.ReadString();
            break;
          }
          case 50: {
            OrderHash = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (orderInfo_ == null) {
              OrderInfo = new global::Injective.Exchange.V1Beta1.OrderInfo();
            }
            input.ReadMessage(OrderInfo);
            break;
          }
          case 16: {
            OrderType = (global::Injective.Exchange.V1Beta1.OrderType) input.ReadEnum();
            break;
          }
          case 26: {
            Margin = input.ReadString();
            break;
          }
          case 34: {
            MarginHold = input.ReadString();
            break;
          }
          case 42: {
            TriggerPrice = input.ReadString();
            break;
          }
          case 50: {
            OrderHash = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Position : pb::IMessage<Position>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Position> _parser = new pb::MessageParser<Position>(() => new Position());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Position> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Exchange.V1Beta1.ExchangeReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Position() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Position(Position other) : this() {
      isLong_ = other.isLong_;
      quantity_ = other.quantity_;
      entryPrice_ = other.entryPrice_;
      margin_ = other.margin_;
      cumulativeFundingEntry_ = other.cumulativeFundingEntry_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Position Clone() {
      return new Position(this);
    }

    /// <summary>Field number for the "isLong" field.</summary>
    public const int IsLongFieldNumber = 1;
    private bool isLong_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsLong {
      get { return isLong_; }
      set {
        isLong_ = value;
      }
    }

    /// <summary>Field number for the "quantity" field.</summary>
    public const int QuantityFieldNumber = 2;
    private string quantity_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Quantity {
      get { return quantity_; }
      set {
        quantity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "entry_price" field.</summary>
    public const int EntryPriceFieldNumber = 3;
    private string entryPrice_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EntryPrice {
      get { return entryPrice_; }
      set {
        entryPrice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "margin" field.</summary>
    public const int MarginFieldNumber = 4;
    private string margin_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Margin {
      get { return margin_; }
      set {
        margin_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cumulative_funding_entry" field.</summary>
    public const int CumulativeFundingEntryFieldNumber = 5;
    private string cumulativeFundingEntry_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CumulativeFundingEntry {
      get { return cumulativeFundingEntry_; }
      set {
        cumulativeFundingEntry_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Position);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Position other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsLong != other.IsLong) return false;
      if (Quantity != other.Quantity) return false;
      if (EntryPrice != other.EntryPrice) return false;
      if (Margin != other.Margin) return false;
      if (CumulativeFundingEntry != other.CumulativeFundingEntry) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (IsLong != false) hash ^= IsLong.GetHashCode();
      if (Quantity.Length != 0) hash ^= Quantity.GetHashCode();
      if (EntryPrice.Length != 0) hash ^= EntryPrice.GetHashCode();
      if (Margin.Length != 0) hash ^= Margin.GetHashCode();
      if (CumulativeFundingEntry.Length != 0) hash ^= CumulativeFundingEntry.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (IsLong != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsLong);
      }
      if (Quantity.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Quantity);
      }
      if (EntryPrice.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(EntryPrice);
      }
      if (Margin.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Margin);
      }
      if (CumulativeFundingEntry.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CumulativeFundingEntry);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (IsLong != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsLong);
      }
      if (Quantity.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Quantity);
      }
      if (EntryPrice.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(EntryPrice);
      }
      if (Margin.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Margin);
      }
      if (CumulativeFundingEntry.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CumulativeFundingEntry);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (IsLong != false) {
        size += 1 + 1;
      }
      if (Quantity.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Quantity);
      }
      if (EntryPrice.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EntryPrice);
      }
      if (Margin.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Margin);
      }
      if (CumulativeFundingEntry.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CumulativeFundingEntry);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Position other) {
      if (other == null) {
        return;
      }
      if (other.IsLong != false) {
        IsLong = other.IsLong;
      }
      if (other.Quantity.Length != 0) {
        Quantity = other.Quantity;
      }
      if (other.EntryPrice.Length != 0) {
        EntryPrice = other.EntryPrice;
      }
      if (other.Margin.Length != 0) {
        Margin = other.Margin;
      }
      if (other.CumulativeFundingEntry.Length != 0) {
        CumulativeFundingEntry = other.CumulativeFundingEntry;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsLong = input.ReadBool();
            break;
          }
          case 18: {
            Quantity = input.ReadString();
            break;
          }
          case 26: {
            EntryPrice = input.ReadString();
            break;
          }
          case 34: {
            Margin = input.ReadString();
            break;
          }
          case 42: {
            CumulativeFundingEntry = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IsLong = input.ReadBool();
            break;
          }
          case 18: {
            Quantity = input.ReadString();
            break;
          }
          case 26: {
            EntryPrice = input.ReadString();
            break;
          }
          case 34: {
            Margin = input.ReadString();
            break;
          }
          case 42: {
            CumulativeFundingEntry = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MarketOrderIndicator : pb::IMessage<MarketOrderIndicator>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MarketOrderIndicator> _parser = new pb::MessageParser<MarketOrderIndicator>(() => new MarketOrderIndicator());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MarketOrderIndicator> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Exchange.V1Beta1.ExchangeReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MarketOrderIndicator() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MarketOrderIndicator(MarketOrderIndicator other) : this() {
      marketId_ = other.marketId_;
      isBuy_ = other.isBuy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MarketOrderIndicator Clone() {
      return new MarketOrderIndicator(this);
    }

    /// <summary>Field number for the "market_id" field.</summary>
    public const int MarketIdFieldNumber = 1;
    private string marketId_ = "";
    /// <summary>
    /// market_id represents the unique ID of the market
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MarketId {
      get { return marketId_; }
      set {
        marketId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isBuy" field.</summary>
    public const int IsBuyFieldNumber = 2;
    private bool isBuy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsBuy {
      get { return isBuy_; }
      set {
        isBuy_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MarketOrderIndicator);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MarketOrderIndicator other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MarketId != other.MarketId) return false;
      if (IsBuy != other.IsBuy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MarketId.Length != 0) hash ^= MarketId.GetHashCode();
      if (IsBuy != false) hash ^= IsBuy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MarketId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MarketId);
      }
      if (IsBuy != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsBuy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MarketId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MarketId);
      }
      if (IsBuy != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsBuy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MarketId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MarketId);
      }
      if (IsBuy != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MarketOrderIndicator other) {
      if (other == null) {
        return;
      }
      if (other.MarketId.Length != 0) {
        MarketId = other.MarketId;
      }
      if (other.IsBuy != false) {
        IsBuy = other.IsBuy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MarketId = input.ReadString();
            break;
          }
          case 16: {
            IsBuy = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            MarketId = input.ReadString();
            break;
          }
          case 16: {
            IsBuy = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TradeLog : pb::IMessage<TradeLog>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TradeLog> _parser = new pb::MessageParser<TradeLog>(() => new TradeLog());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TradeLog> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Exchange.V1Beta1.ExchangeReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TradeLog() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TradeLog(TradeLog other) : this() {
      quantity_ = other.quantity_;
      price_ = other.price_;
      subaccountId_ = other.subaccountId_;
      fee_ = other.fee_;
      orderHash_ = other.orderHash_;
      feeRecipientAddress_ = other.feeRecipientAddress_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TradeLog Clone() {
      return new TradeLog(this);
    }

    /// <summary>Field number for the "quantity" field.</summary>
    public const int QuantityFieldNumber = 1;
    private string quantity_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Quantity {
      get { return quantity_; }
      set {
        quantity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 2;
    private string price_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Price {
      get { return price_; }
      set {
        price_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subaccount_id" field.</summary>
    public const int SubaccountIdFieldNumber = 3;
    private pb::ByteString subaccountId_ = pb::ByteString.Empty;
    /// <summary>
    /// bytes32 subaccount ID that executed the trade
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString SubaccountId {
      get { return subaccountId_; }
      set {
        subaccountId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fee" field.</summary>
    public const int FeeFieldNumber = 4;
    private string fee_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Fee {
      get { return fee_; }
      set {
        fee_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order_hash" field.</summary>
    public const int OrderHashFieldNumber = 5;
    private pb::ByteString orderHash_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString OrderHash {
      get { return orderHash_; }
      set {
        orderHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fee_recipient_address" field.</summary>
    public const int FeeRecipientAddressFieldNumber = 6;
    private pb::ByteString feeRecipientAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString FeeRecipientAddress {
      get { return feeRecipientAddress_; }
      set {
        feeRecipientAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TradeLog);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TradeLog other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Quantity != other.Quantity) return false;
      if (Price != other.Price) return false;
      if (SubaccountId != other.SubaccountId) return false;
      if (Fee != other.Fee) return false;
      if (OrderHash != other.OrderHash) return false;
      if (FeeRecipientAddress != other.FeeRecipientAddress) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Quantity.Length != 0) hash ^= Quantity.GetHashCode();
      if (Price.Length != 0) hash ^= Price.GetHashCode();
      if (SubaccountId.Length != 0) hash ^= SubaccountId.GetHashCode();
      if (Fee.Length != 0) hash ^= Fee.GetHashCode();
      if (OrderHash.Length != 0) hash ^= OrderHash.GetHashCode();
      if (FeeRecipientAddress.Length != 0) hash ^= FeeRecipientAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Quantity.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Quantity);
      }
      if (Price.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Price);
      }
      if (SubaccountId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(SubaccountId);
      }
      if (Fee.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Fee);
      }
      if (OrderHash.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(OrderHash);
      }
      if (FeeRecipientAddress.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(FeeRecipientAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Quantity.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Quantity);
      }
      if (Price.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Price);
      }
      if (SubaccountId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(SubaccountId);
      }
      if (Fee.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Fee);
      }
      if (OrderHash.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(OrderHash);
      }
      if (FeeRecipientAddress.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(FeeRecipientAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Quantity.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Quantity);
      }
      if (Price.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Price);
      }
      if (SubaccountId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(SubaccountId);
      }
      if (Fee.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Fee);
      }
      if (OrderHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OrderHash);
      }
      if (FeeRecipientAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(FeeRecipientAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TradeLog other) {
      if (other == null) {
        return;
      }
      if (other.Quantity.Length != 0) {
        Quantity = other.Quantity;
      }
      if (other.Price.Length != 0) {
        Price = other.Price;
      }
      if (other.SubaccountId.Length != 0) {
        SubaccountId = other.SubaccountId;
      }
      if (other.Fee.Length != 0) {
        Fee = other.Fee;
      }
      if (other.OrderHash.Length != 0) {
        OrderHash = other.OrderHash;
      }
      if (other.FeeRecipientAddress.Length != 0) {
        FeeRecipientAddress = other.FeeRecipientAddress;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Quantity = input.ReadString();
            break;
          }
          case 18: {
            Price = input.ReadString();
            break;
          }
          case 26: {
            SubaccountId = input.ReadBytes();
            break;
          }
          case 34: {
            Fee = input.ReadString();
            break;
          }
          case 42: {
            OrderHash = input.ReadBytes();
            break;
          }
          case 50: {
            FeeRecipientAddress = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Quantity = input.ReadString();
            break;
          }
          case 18: {
            Price = input.ReadString();
            break;
          }
          case 26: {
            SubaccountId = input.ReadBytes();
            break;
          }
          case 34: {
            Fee = input.ReadString();
            break;
          }
          case 42: {
            OrderHash = input.ReadBytes();
            break;
          }
          case 50: {
            FeeRecipientAddress = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PositionDelta : pb::IMessage<PositionDelta>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PositionDelta> _parser = new pb::MessageParser<PositionDelta>(() => new PositionDelta());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PositionDelta> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Exchange.V1Beta1.ExchangeReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PositionDelta() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PositionDelta(PositionDelta other) : this() {
      isLong_ = other.isLong_;
      executionQuantity_ = other.executionQuantity_;
      executionMargin_ = other.executionMargin_;
      executionPrice_ = other.executionPrice_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PositionDelta Clone() {
      return new PositionDelta(this);
    }

    /// <summary>Field number for the "is_long" field.</summary>
    public const int IsLongFieldNumber = 1;
    private bool isLong_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsLong {
      get { return isLong_; }
      set {
        isLong_ = value;
      }
    }

    /// <summary>Field number for the "execution_quantity" field.</summary>
    public const int ExecutionQuantityFieldNumber = 2;
    private string executionQuantity_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ExecutionQuantity {
      get { return executionQuantity_; }
      set {
        executionQuantity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "execution_margin" field.</summary>
    public const int ExecutionMarginFieldNumber = 3;
    private string executionMargin_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ExecutionMargin {
      get { return executionMargin_; }
      set {
        executionMargin_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "execution_price" field.</summary>
    public const int ExecutionPriceFieldNumber = 4;
    private string executionPrice_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ExecutionPrice {
      get { return executionPrice_; }
      set {
        executionPrice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PositionDelta);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PositionDelta other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsLong != other.IsLong) return false;
      if (ExecutionQuantity != other.ExecutionQuantity) return false;
      if (ExecutionMargin != other.ExecutionMargin) return false;
      if (ExecutionPrice != other.ExecutionPrice) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (IsLong != false) hash ^= IsLong.GetHashCode();
      if (ExecutionQuantity.Length != 0) hash ^= ExecutionQuantity.GetHashCode();
      if (ExecutionMargin.Length != 0) hash ^= ExecutionMargin.GetHashCode();
      if (ExecutionPrice.Length != 0) hash ^= ExecutionPrice.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (IsLong != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsLong);
      }
      if (ExecutionQuantity.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ExecutionQuantity);
      }
      if (ExecutionMargin.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ExecutionMargin);
      }
      if (ExecutionPrice.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ExecutionPrice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (IsLong != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsLong);
      }
      if (ExecutionQuantity.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ExecutionQuantity);
      }
      if (ExecutionMargin.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ExecutionMargin);
      }
      if (ExecutionPrice.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ExecutionPrice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (IsLong != false) {
        size += 1 + 1;
      }
      if (ExecutionQuantity.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExecutionQuantity);
      }
      if (ExecutionMargin.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExecutionMargin);
      }
      if (ExecutionPrice.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExecutionPrice);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PositionDelta other) {
      if (other == null) {
        return;
      }
      if (other.IsLong != false) {
        IsLong = other.IsLong;
      }
      if (other.ExecutionQuantity.Length != 0) {
        ExecutionQuantity = other.ExecutionQuantity;
      }
      if (other.ExecutionMargin.Length != 0) {
        ExecutionMargin = other.ExecutionMargin;
      }
      if (other.ExecutionPrice.Length != 0) {
        ExecutionPrice = other.ExecutionPrice;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsLong = input.ReadBool();
            break;
          }
          case 18: {
            ExecutionQuantity = input.ReadString();
            break;
          }
          case 26: {
            ExecutionMargin = input.ReadString();
            break;
          }
          case 34: {
            ExecutionPrice = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IsLong = input.ReadBool();
            break;
          }
          case 18: {
            ExecutionQuantity = input.ReadString();
            break;
          }
          case 26: {
            ExecutionMargin = input.ReadString();
            break;
          }
          case 34: {
            ExecutionPrice = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DerivativeTradeLog : pb::IMessage<DerivativeTradeLog>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DerivativeTradeLog> _parser = new pb::MessageParser<DerivativeTradeLog>(() => new DerivativeTradeLog());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DerivativeTradeLog> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Exchange.V1Beta1.ExchangeReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DerivativeTradeLog() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DerivativeTradeLog(DerivativeTradeLog other) : this() {
      subaccountId_ = other.subaccountId_;
      positionDelta_ = other.positionDelta_ != null ? other.positionDelta_.Clone() : null;
      payout_ = other.payout_;
      fee_ = other.fee_;
      orderHash_ = other.orderHash_;
      feeRecipientAddress_ = other.feeRecipientAddress_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DerivativeTradeLog Clone() {
      return new DerivativeTradeLog(this);
    }

    /// <summary>Field number for the "subaccount_id" field.</summary>
    public const int SubaccountIdFieldNumber = 1;
    private pb::ByteString subaccountId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString SubaccountId {
      get { return subaccountId_; }
      set {
        subaccountId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "position_delta" field.</summary>
    public const int PositionDeltaFieldNumber = 2;
    private global::Injective.Exchange.V1Beta1.PositionDelta positionDelta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Injective.Exchange.V1Beta1.PositionDelta PositionDelta {
      get { return positionDelta_; }
      set {
        positionDelta_ = value;
      }
    }

    /// <summary>Field number for the "payout" field.</summary>
    public const int PayoutFieldNumber = 3;
    private string payout_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Payout {
      get { return payout_; }
      set {
        payout_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fee" field.</summary>
    public const int FeeFieldNumber = 4;
    private string fee_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Fee {
      get { return fee_; }
      set {
        fee_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order_hash" field.</summary>
    public const int OrderHashFieldNumber = 5;
    private pb::ByteString orderHash_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString OrderHash {
      get { return orderHash_; }
      set {
        orderHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fee_recipient_address" field.</summary>
    public const int FeeRecipientAddressFieldNumber = 6;
    private pb::ByteString feeRecipientAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString FeeRecipientAddress {
      get { return feeRecipientAddress_; }
      set {
        feeRecipientAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DerivativeTradeLog);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DerivativeTradeLog other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SubaccountId != other.SubaccountId) return false;
      if (!object.Equals(PositionDelta, other.PositionDelta)) return false;
      if (Payout != other.Payout) return false;
      if (Fee != other.Fee) return false;
      if (OrderHash != other.OrderHash) return false;
      if (FeeRecipientAddress != other.FeeRecipientAddress) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SubaccountId.Length != 0) hash ^= SubaccountId.GetHashCode();
      if (positionDelta_ != null) hash ^= PositionDelta.GetHashCode();
      if (Payout.Length != 0) hash ^= Payout.GetHashCode();
      if (Fee.Length != 0) hash ^= Fee.GetHashCode();
      if (OrderHash.Length != 0) hash ^= OrderHash.GetHashCode();
      if (FeeRecipientAddress.Length != 0) hash ^= FeeRecipientAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SubaccountId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(SubaccountId);
      }
      if (positionDelta_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PositionDelta);
      }
      if (Payout.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Payout);
      }
      if (Fee.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Fee);
      }
      if (OrderHash.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(OrderHash);
      }
      if (FeeRecipientAddress.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(FeeRecipientAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SubaccountId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(SubaccountId);
      }
      if (positionDelta_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PositionDelta);
      }
      if (Payout.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Payout);
      }
      if (Fee.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Fee);
      }
      if (OrderHash.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(OrderHash);
      }
      if (FeeRecipientAddress.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(FeeRecipientAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SubaccountId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(SubaccountId);
      }
      if (positionDelta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PositionDelta);
      }
      if (Payout.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Payout);
      }
      if (Fee.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Fee);
      }
      if (OrderHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OrderHash);
      }
      if (FeeRecipientAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(FeeRecipientAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DerivativeTradeLog other) {
      if (other == null) {
        return;
      }
      if (other.SubaccountId.Length != 0) {
        SubaccountId = other.SubaccountId;
      }
      if (other.positionDelta_ != null) {
        if (positionDelta_ == null) {
          PositionDelta = new global::Injective.Exchange.V1Beta1.PositionDelta();
        }
        PositionDelta.MergeFrom(other.PositionDelta);
      }
      if (other.Payout.Length != 0) {
        Payout = other.Payout;
      }
      if (other.Fee.Length != 0) {
        Fee = other.Fee;
      }
      if (other.OrderHash.Length != 0) {
        OrderHash = other.OrderHash;
      }
      if (other.FeeRecipientAddress.Length != 0) {
        FeeRecipientAddress = other.FeeRecipientAddress;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SubaccountId = input.ReadBytes();
            break;
          }
          case 18: {
            if (positionDelta_ == null) {
              PositionDelta = new global::Injective.Exchange.V1Beta1.PositionDelta();
            }
            input.ReadMessage(PositionDelta);
            break;
          }
          case 26: {
            Payout = input.ReadString();
            break;
          }
          case 34: {
            Fee = input.ReadString();
            break;
          }
          case 42: {
            OrderHash = input.ReadBytes();
            break;
          }
          case 50: {
            FeeRecipientAddress = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SubaccountId = input.ReadBytes();
            break;
          }
          case 18: {
            if (positionDelta_ == null) {
              PositionDelta = new global::Injective.Exchange.V1Beta1.PositionDelta();
            }
            input.ReadMessage(PositionDelta);
            break;
          }
          case 26: {
            Payout = input.ReadString();
            break;
          }
          case 34: {
            Fee = input.ReadString();
            break;
          }
          case 42: {
            OrderHash = input.ReadBytes();
            break;
          }
          case 50: {
            FeeRecipientAddress = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SubaccountPosition : pb::IMessage<SubaccountPosition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SubaccountPosition> _parser = new pb::MessageParser<SubaccountPosition>(() => new SubaccountPosition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SubaccountPosition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Exchange.V1Beta1.ExchangeReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubaccountPosition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubaccountPosition(SubaccountPosition other) : this() {
      position_ = other.position_ != null ? other.position_.Clone() : null;
      subaccountId_ = other.subaccountId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubaccountPosition Clone() {
      return new SubaccountPosition(this);
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 1;
    private global::Injective.Exchange.V1Beta1.Position position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Injective.Exchange.V1Beta1.Position Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "subaccount_id" field.</summary>
    public const int SubaccountIdFieldNumber = 2;
    private pb::ByteString subaccountId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString SubaccountId {
      get { return subaccountId_; }
      set {
        subaccountId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SubaccountPosition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SubaccountPosition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Position, other.Position)) return false;
      if (SubaccountId != other.SubaccountId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (position_ != null) hash ^= Position.GetHashCode();
      if (SubaccountId.Length != 0) hash ^= SubaccountId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (position_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Position);
      }
      if (SubaccountId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(SubaccountId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (position_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Position);
      }
      if (SubaccountId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(SubaccountId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (SubaccountId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(SubaccountId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SubaccountPosition other) {
      if (other == null) {
        return;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::Injective.Exchange.V1Beta1.Position();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.SubaccountId.Length != 0) {
        SubaccountId = other.SubaccountId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (position_ == null) {
              Position = new global::Injective.Exchange.V1Beta1.Position();
            }
            input.ReadMessage(Position);
            break;
          }
          case 18: {
            SubaccountId = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (position_ == null) {
              Position = new global::Injective.Exchange.V1Beta1.Position();
            }
            input.ReadMessage(Position);
            break;
          }
          case 18: {
            SubaccountId = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SubaccountDeposit : pb::IMessage<SubaccountDeposit>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SubaccountDeposit> _parser = new pb::MessageParser<SubaccountDeposit>(() => new SubaccountDeposit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SubaccountDeposit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Exchange.V1Beta1.ExchangeReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubaccountDeposit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubaccountDeposit(SubaccountDeposit other) : this() {
      subaccountId_ = other.subaccountId_;
      deposit_ = other.deposit_ != null ? other.deposit_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubaccountDeposit Clone() {
      return new SubaccountDeposit(this);
    }

    /// <summary>Field number for the "subaccount_id" field.</summary>
    public const int SubaccountIdFieldNumber = 1;
    private pb::ByteString subaccountId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString SubaccountId {
      get { return subaccountId_; }
      set {
        subaccountId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "deposit" field.</summary>
    public const int DepositFieldNumber = 2;
    private global::Injective.Exchange.V1Beta1.Deposit deposit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Injective.Exchange.V1Beta1.Deposit Deposit {
      get { return deposit_; }
      set {
        deposit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SubaccountDeposit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SubaccountDeposit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SubaccountId != other.SubaccountId) return false;
      if (!object.Equals(Deposit, other.Deposit)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SubaccountId.Length != 0) hash ^= SubaccountId.GetHashCode();
      if (deposit_ != null) hash ^= Deposit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SubaccountId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(SubaccountId);
      }
      if (deposit_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Deposit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SubaccountId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(SubaccountId);
      }
      if (deposit_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Deposit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SubaccountId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(SubaccountId);
      }
      if (deposit_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Deposit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SubaccountDeposit other) {
      if (other == null) {
        return;
      }
      if (other.SubaccountId.Length != 0) {
        SubaccountId = other.SubaccountId;
      }
      if (other.deposit_ != null) {
        if (deposit_ == null) {
          Deposit = new global::Injective.Exchange.V1Beta1.Deposit();
        }
        Deposit.MergeFrom(other.Deposit);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SubaccountId = input.ReadBytes();
            break;
          }
          case 18: {
            if (deposit_ == null) {
              Deposit = new global::Injective.Exchange.V1Beta1.Deposit();
            }
            input.ReadMessage(Deposit);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SubaccountId = input.ReadBytes();
            break;
          }
          case 18: {
            if (deposit_ == null) {
              Deposit = new global::Injective.Exchange.V1Beta1.Deposit();
            }
            input.ReadMessage(Deposit);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DepositUpdate : pb::IMessage<DepositUpdate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DepositUpdate> _parser = new pb::MessageParser<DepositUpdate>(() => new DepositUpdate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DepositUpdate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Exchange.V1Beta1.ExchangeReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DepositUpdate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DepositUpdate(DepositUpdate other) : this() {
      denom_ = other.denom_;
      deposits_ = other.deposits_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DepositUpdate Clone() {
      return new DepositUpdate(this);
    }

    /// <summary>Field number for the "denom" field.</summary>
    public const int DenomFieldNumber = 1;
    private string denom_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Denom {
      get { return denom_; }
      set {
        denom_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "deposits" field.</summary>
    public const int DepositsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Injective.Exchange.V1Beta1.SubaccountDeposit> _repeated_deposits_codec
        = pb::FieldCodec.ForMessage(18, global::Injective.Exchange.V1Beta1.SubaccountDeposit.Parser);
    private readonly pbc::RepeatedField<global::Injective.Exchange.V1Beta1.SubaccountDeposit> deposits_ = new pbc::RepeatedField<global::Injective.Exchange.V1Beta1.SubaccountDeposit>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Injective.Exchange.V1Beta1.SubaccountDeposit> Deposits {
      get { return deposits_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DepositUpdate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DepositUpdate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Denom != other.Denom) return false;
      if(!deposits_.Equals(other.deposits_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Denom.Length != 0) hash ^= Denom.GetHashCode();
      hash ^= deposits_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Denom.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Denom);
      }
      deposits_.WriteTo(output, _repeated_deposits_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Denom.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Denom);
      }
      deposits_.WriteTo(ref output, _repeated_deposits_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Denom.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Denom);
      }
      size += deposits_.CalculateSize(_repeated_deposits_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DepositUpdate other) {
      if (other == null) {
        return;
      }
      if (other.Denom.Length != 0) {
        Denom = other.Denom;
      }
      deposits_.Add(other.deposits_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Denom = input.ReadString();
            break;
          }
          case 18: {
            deposits_.AddEntriesFrom(input, _repeated_deposits_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Denom = input.ReadString();
            break;
          }
          case 18: {
            deposits_.AddEntriesFrom(ref input, _repeated_deposits_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PointsMultiplier : pb::IMessage<PointsMultiplier>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PointsMultiplier> _parser = new pb::MessageParser<PointsMultiplier>(() => new PointsMultiplier());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PointsMultiplier> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Exchange.V1Beta1.ExchangeReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PointsMultiplier() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PointsMultiplier(PointsMultiplier other) : this() {
      makerPointsMultiplier_ = other.makerPointsMultiplier_;
      takerPointsMultiplier_ = other.takerPointsMultiplier_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PointsMultiplier Clone() {
      return new PointsMultiplier(this);
    }

    /// <summary>Field number for the "maker_points_multiplier" field.</summary>
    public const int MakerPointsMultiplierFieldNumber = 1;
    private string makerPointsMultiplier_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MakerPointsMultiplier {
      get { return makerPointsMultiplier_; }
      set {
        makerPointsMultiplier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "taker_points_multiplier" field.</summary>
    public const int TakerPointsMultiplierFieldNumber = 2;
    private string takerPointsMultiplier_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TakerPointsMultiplier {
      get { return takerPointsMultiplier_; }
      set {
        takerPointsMultiplier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PointsMultiplier);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PointsMultiplier other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MakerPointsMultiplier != other.MakerPointsMultiplier) return false;
      if (TakerPointsMultiplier != other.TakerPointsMultiplier) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MakerPointsMultiplier.Length != 0) hash ^= MakerPointsMultiplier.GetHashCode();
      if (TakerPointsMultiplier.Length != 0) hash ^= TakerPointsMultiplier.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MakerPointsMultiplier.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MakerPointsMultiplier);
      }
      if (TakerPointsMultiplier.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TakerPointsMultiplier);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MakerPointsMultiplier.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MakerPointsMultiplier);
      }
      if (TakerPointsMultiplier.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TakerPointsMultiplier);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MakerPointsMultiplier.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MakerPointsMultiplier);
      }
      if (TakerPointsMultiplier.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TakerPointsMultiplier);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PointsMultiplier other) {
      if (other == null) {
        return;
      }
      if (other.MakerPointsMultiplier.Length != 0) {
        MakerPointsMultiplier = other.MakerPointsMultiplier;
      }
      if (other.TakerPointsMultiplier.Length != 0) {
        TakerPointsMultiplier = other.TakerPointsMultiplier;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MakerPointsMultiplier = input.ReadString();
            break;
          }
          case 18: {
            TakerPointsMultiplier = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            MakerPointsMultiplier = input.ReadString();
            break;
          }
          case 18: {
            TakerPointsMultiplier = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TradingRewardCampaignBoostInfo : pb::IMessage<TradingRewardCampaignBoostInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TradingRewardCampaignBoostInfo> _parser = new pb::MessageParser<TradingRewardCampaignBoostInfo>(() => new TradingRewardCampaignBoostInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TradingRewardCampaignBoostInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Exchange.V1Beta1.ExchangeReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TradingRewardCampaignBoostInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TradingRewardCampaignBoostInfo(TradingRewardCampaignBoostInfo other) : this() {
      boostedSpotMarketIds_ = other.boostedSpotMarketIds_.Clone();
      spotMarketMultipliers_ = other.spotMarketMultipliers_.Clone();
      boostedDerivativeMarketIds_ = other.boostedDerivativeMarketIds_.Clone();
      derivativeMarketMultipliers_ = other.derivativeMarketMultipliers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TradingRewardCampaignBoostInfo Clone() {
      return new TradingRewardCampaignBoostInfo(this);
    }

    /// <summary>Field number for the "boosted_spot_market_ids" field.</summary>
    public const int BoostedSpotMarketIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_boostedSpotMarketIds_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> boostedSpotMarketIds_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> BoostedSpotMarketIds {
      get { return boostedSpotMarketIds_; }
    }

    /// <summary>Field number for the "spot_market_multipliers" field.</summary>
    public const int SpotMarketMultipliersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Injective.Exchange.V1Beta1.PointsMultiplier> _repeated_spotMarketMultipliers_codec
        = pb::FieldCodec.ForMessage(18, global::Injective.Exchange.V1Beta1.PointsMultiplier.Parser);
    private readonly pbc::RepeatedField<global::Injective.Exchange.V1Beta1.PointsMultiplier> spotMarketMultipliers_ = new pbc::RepeatedField<global::Injective.Exchange.V1Beta1.PointsMultiplier>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Injective.Exchange.V1Beta1.PointsMultiplier> SpotMarketMultipliers {
      get { return spotMarketMultipliers_; }
    }

    /// <summary>Field number for the "boosted_derivative_market_ids" field.</summary>
    public const int BoostedDerivativeMarketIdsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_boostedDerivativeMarketIds_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> boostedDerivativeMarketIds_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> BoostedDerivativeMarketIds {
      get { return boostedDerivativeMarketIds_; }
    }

    /// <summary>Field number for the "derivative_market_multipliers" field.</summary>
    public const int DerivativeMarketMultipliersFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Injective.Exchange.V1Beta1.PointsMultiplier> _repeated_derivativeMarketMultipliers_codec
        = pb::FieldCodec.ForMessage(34, global::Injective.Exchange.V1Beta1.PointsMultiplier.Parser);
    private readonly pbc::RepeatedField<global::Injective.Exchange.V1Beta1.PointsMultiplier> derivativeMarketMultipliers_ = new pbc::RepeatedField<global::Injective.Exchange.V1Beta1.PointsMultiplier>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Injective.Exchange.V1Beta1.PointsMultiplier> DerivativeMarketMultipliers {
      get { return derivativeMarketMultipliers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TradingRewardCampaignBoostInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TradingRewardCampaignBoostInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!boostedSpotMarketIds_.Equals(other.boostedSpotMarketIds_)) return false;
      if(!spotMarketMultipliers_.Equals(other.spotMarketMultipliers_)) return false;
      if(!boostedDerivativeMarketIds_.Equals(other.boostedDerivativeMarketIds_)) return false;
      if(!derivativeMarketMultipliers_.Equals(other.derivativeMarketMultipliers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= boostedSpotMarketIds_.GetHashCode();
      hash ^= spotMarketMultipliers_.GetHashCode();
      hash ^= boostedDerivativeMarketIds_.GetHashCode();
      hash ^= derivativeMarketMultipliers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      boostedSpotMarketIds_.WriteTo(output, _repeated_boostedSpotMarketIds_codec);
      spotMarketMultipliers_.WriteTo(output, _repeated_spotMarketMultipliers_codec);
      boostedDerivativeMarketIds_.WriteTo(output, _repeated_boostedDerivativeMarketIds_codec);
      derivativeMarketMultipliers_.WriteTo(output, _repeated_derivativeMarketMultipliers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      boostedSpotMarketIds_.WriteTo(ref output, _repeated_boostedSpotMarketIds_codec);
      spotMarketMultipliers_.WriteTo(ref output, _repeated_spotMarketMultipliers_codec);
      boostedDerivativeMarketIds_.WriteTo(ref output, _repeated_boostedDerivativeMarketIds_codec);
      derivativeMarketMultipliers_.WriteTo(ref output, _repeated_derivativeMarketMultipliers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += boostedSpotMarketIds_.CalculateSize(_repeated_boostedSpotMarketIds_codec);
      size += spotMarketMultipliers_.CalculateSize(_repeated_spotMarketMultipliers_codec);
      size += boostedDerivativeMarketIds_.CalculateSize(_repeated_boostedDerivativeMarketIds_codec);
      size += derivativeMarketMultipliers_.CalculateSize(_repeated_derivativeMarketMultipliers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TradingRewardCampaignBoostInfo other) {
      if (other == null) {
        return;
      }
      boostedSpotMarketIds_.Add(other.boostedSpotMarketIds_);
      spotMarketMultipliers_.Add(other.spotMarketMultipliers_);
      boostedDerivativeMarketIds_.Add(other.boostedDerivativeMarketIds_);
      derivativeMarketMultipliers_.Add(other.derivativeMarketMultipliers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            boostedSpotMarketIds_.AddEntriesFrom(input, _repeated_boostedSpotMarketIds_codec);
            break;
          }
          case 18: {
            spotMarketMultipliers_.AddEntriesFrom(input, _repeated_spotMarketMultipliers_codec);
            break;
          }
          case 26: {
            boostedDerivativeMarketIds_.AddEntriesFrom(input, _repeated_boostedDerivativeMarketIds_codec);
            break;
          }
          case 34: {
            derivativeMarketMultipliers_.AddEntriesFrom(input, _repeated_derivativeMarketMultipliers_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            boostedSpotMarketIds_.AddEntriesFrom(ref input, _repeated_boostedSpotMarketIds_codec);
            break;
          }
          case 18: {
            spotMarketMultipliers_.AddEntriesFrom(ref input, _repeated_spotMarketMultipliers_codec);
            break;
          }
          case 26: {
            boostedDerivativeMarketIds_.AddEntriesFrom(ref input, _repeated_boostedDerivativeMarketIds_codec);
            break;
          }
          case 34: {
            derivativeMarketMultipliers_.AddEntriesFrom(ref input, _repeated_derivativeMarketMultipliers_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CampaignRewardPool : pb::IMessage<CampaignRewardPool>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CampaignRewardPool> _parser = new pb::MessageParser<CampaignRewardPool>(() => new CampaignRewardPool());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CampaignRewardPool> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Exchange.V1Beta1.ExchangeReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CampaignRewardPool() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CampaignRewardPool(CampaignRewardPool other) : this() {
      startTimestamp_ = other.startTimestamp_;
      maxCampaignRewards_ = other.maxCampaignRewards_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CampaignRewardPool Clone() {
      return new CampaignRewardPool(this);
    }

    /// <summary>Field number for the "start_timestamp" field.</summary>
    public const int StartTimestampFieldNumber = 1;
    private long startTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StartTimestamp {
      get { return startTimestamp_; }
      set {
        startTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "max_campaign_rewards" field.</summary>
    public const int MaxCampaignRewardsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Cosmos.Base.V1Beta1.Coin> _repeated_maxCampaignRewards_codec
        = pb::FieldCodec.ForMessage(18, global::Cosmos.Base.V1Beta1.Coin.Parser);
    private readonly pbc::RepeatedField<global::Cosmos.Base.V1Beta1.Coin> maxCampaignRewards_ = new pbc::RepeatedField<global::Cosmos.Base.V1Beta1.Coin>();
    /// <summary>
    /// max_campaign_rewards are the maximum reward amounts to be disbursed at the
    /// end of the campaign
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Cosmos.Base.V1Beta1.Coin> MaxCampaignRewards {
      get { return maxCampaignRewards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CampaignRewardPool);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CampaignRewardPool other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StartTimestamp != other.StartTimestamp) return false;
      if(!maxCampaignRewards_.Equals(other.maxCampaignRewards_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (StartTimestamp != 0L) hash ^= StartTimestamp.GetHashCode();
      hash ^= maxCampaignRewards_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (StartTimestamp != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(StartTimestamp);
      }
      maxCampaignRewards_.WriteTo(output, _repeated_maxCampaignRewards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (StartTimestamp != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(StartTimestamp);
      }
      maxCampaignRewards_.WriteTo(ref output, _repeated_maxCampaignRewards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (StartTimestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartTimestamp);
      }
      size += maxCampaignRewards_.CalculateSize(_repeated_maxCampaignRewards_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CampaignRewardPool other) {
      if (other == null) {
        return;
      }
      if (other.StartTimestamp != 0L) {
        StartTimestamp = other.StartTimestamp;
      }
      maxCampaignRewards_.Add(other.maxCampaignRewards_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StartTimestamp = input.ReadInt64();
            break;
          }
          case 18: {
            maxCampaignRewards_.AddEntriesFrom(input, _repeated_maxCampaignRewards_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            StartTimestamp = input.ReadInt64();
            break;
          }
          case 18: {
            maxCampaignRewards_.AddEntriesFrom(ref input, _repeated_maxCampaignRewards_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TradingRewardCampaignInfo : pb::IMessage<TradingRewardCampaignInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TradingRewardCampaignInfo> _parser = new pb::MessageParser<TradingRewardCampaignInfo>(() => new TradingRewardCampaignInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TradingRewardCampaignInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Exchange.V1Beta1.ExchangeReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TradingRewardCampaignInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TradingRewardCampaignInfo(TradingRewardCampaignInfo other) : this() {
      campaignDurationSeconds_ = other.campaignDurationSeconds_;
      quoteDenoms_ = other.quoteDenoms_.Clone();
      tradingRewardBoostInfo_ = other.tradingRewardBoostInfo_ != null ? other.tradingRewardBoostInfo_.Clone() : null;
      disqualifiedMarketIds_ = other.disqualifiedMarketIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TradingRewardCampaignInfo Clone() {
      return new TradingRewardCampaignInfo(this);
    }

    /// <summary>Field number for the "campaign_duration_seconds" field.</summary>
    public const int CampaignDurationSecondsFieldNumber = 1;
    private long campaignDurationSeconds_;
    /// <summary>
    /// number of seconds of the duration of each campaign
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CampaignDurationSeconds {
      get { return campaignDurationSeconds_; }
      set {
        campaignDurationSeconds_ = value;
      }
    }

    /// <summary>Field number for the "quote_denoms" field.</summary>
    public const int QuoteDenomsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_quoteDenoms_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> quoteDenoms_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// the trading fee quote denoms which will be counted for the rewards
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> QuoteDenoms {
      get { return quoteDenoms_; }
    }

    /// <summary>Field number for the "trading_reward_boost_info" field.</summary>
    public const int TradingRewardBoostInfoFieldNumber = 3;
    private global::Injective.Exchange.V1Beta1.TradingRewardCampaignBoostInfo tradingRewardBoostInfo_;
    /// <summary>
    /// the optional boost info for markets
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Injective.Exchange.V1Beta1.TradingRewardCampaignBoostInfo TradingRewardBoostInfo {
      get { return tradingRewardBoostInfo_; }
      set {
        tradingRewardBoostInfo_ = value;
      }
    }

    /// <summary>Field number for the "disqualified_market_ids" field.</summary>
    public const int DisqualifiedMarketIdsFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_disqualifiedMarketIds_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> disqualifiedMarketIds_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// the marketIDs which are disqualified from being rewarded
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> DisqualifiedMarketIds {
      get { return disqualifiedMarketIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TradingRewardCampaignInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TradingRewardCampaignInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CampaignDurationSeconds != other.CampaignDurationSeconds) return false;
      if(!quoteDenoms_.Equals(other.quoteDenoms_)) return false;
      if (!object.Equals(TradingRewardBoostInfo, other.TradingRewardBoostInfo)) return false;
      if(!disqualifiedMarketIds_.Equals(other.disqualifiedMarketIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CampaignDurationSeconds != 0L) hash ^= CampaignDurationSeconds.GetHashCode();
      hash ^= quoteDenoms_.GetHashCode();
      if (tradingRewardBoostInfo_ != null) hash ^= TradingRewardBoostInfo.GetHashCode();
      hash ^= disqualifiedMarketIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CampaignDurationSeconds != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(CampaignDurationSeconds);
      }
      quoteDenoms_.WriteTo(output, _repeated_quoteDenoms_codec);
      if (tradingRewardBoostInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TradingRewardBoostInfo);
      }
      disqualifiedMarketIds_.WriteTo(output, _repeated_disqualifiedMarketIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CampaignDurationSeconds != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(CampaignDurationSeconds);
      }
      quoteDenoms_.WriteTo(ref output, _repeated_quoteDenoms_codec);
      if (tradingRewardBoostInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TradingRewardBoostInfo);
      }
      disqualifiedMarketIds_.WriteTo(ref output, _repeated_disqualifiedMarketIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CampaignDurationSeconds != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CampaignDurationSeconds);
      }
      size += quoteDenoms_.CalculateSize(_repeated_quoteDenoms_codec);
      if (tradingRewardBoostInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TradingRewardBoostInfo);
      }
      size += disqualifiedMarketIds_.CalculateSize(_repeated_disqualifiedMarketIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TradingRewardCampaignInfo other) {
      if (other == null) {
        return;
      }
      if (other.CampaignDurationSeconds != 0L) {
        CampaignDurationSeconds = other.CampaignDurationSeconds;
      }
      quoteDenoms_.Add(other.quoteDenoms_);
      if (other.tradingRewardBoostInfo_ != null) {
        if (tradingRewardBoostInfo_ == null) {
          TradingRewardBoostInfo = new global::Injective.Exchange.V1Beta1.TradingRewardCampaignBoostInfo();
        }
        TradingRewardBoostInfo.MergeFrom(other.TradingRewardBoostInfo);
      }
      disqualifiedMarketIds_.Add(other.disqualifiedMarketIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CampaignDurationSeconds = input.ReadInt64();
            break;
          }
          case 18: {
            quoteDenoms_.AddEntriesFrom(input, _repeated_quoteDenoms_codec);
            break;
          }
          case 26: {
            if (tradingRewardBoostInfo_ == null) {
              TradingRewardBoostInfo = new global::Injective.Exchange.V1Beta1.TradingRewardCampaignBoostInfo();
            }
            input.ReadMessage(TradingRewardBoostInfo);
            break;
          }
          case 34: {
            disqualifiedMarketIds_.AddEntriesFrom(input, _repeated_disqualifiedMarketIds_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CampaignDurationSeconds = input.ReadInt64();
            break;
          }
          case 18: {
            quoteDenoms_.AddEntriesFrom(ref input, _repeated_quoteDenoms_codec);
            break;
          }
          case 26: {
            if (tradingRewardBoostInfo_ == null) {
              TradingRewardBoostInfo = new global::Injective.Exchange.V1Beta1.TradingRewardCampaignBoostInfo();
            }
            input.ReadMessage(TradingRewardBoostInfo);
            break;
          }
          case 34: {
            disqualifiedMarketIds_.AddEntriesFrom(ref input, _repeated_disqualifiedMarketIds_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class FeeDiscountTierInfo : pb::IMessage<FeeDiscountTierInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FeeDiscountTierInfo> _parser = new pb::MessageParser<FeeDiscountTierInfo>(() => new FeeDiscountTierInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FeeDiscountTierInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Exchange.V1Beta1.ExchangeReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FeeDiscountTierInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FeeDiscountTierInfo(FeeDiscountTierInfo other) : this() {
      makerDiscountRate_ = other.makerDiscountRate_;
      takerDiscountRate_ = other.takerDiscountRate_;
      stakedAmount_ = other.stakedAmount_;
      volume_ = other.volume_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FeeDiscountTierInfo Clone() {
      return new FeeDiscountTierInfo(this);
    }

    /// <summary>Field number for the "maker_discount_rate" field.</summary>
    public const int MakerDiscountRateFieldNumber = 1;
    private string makerDiscountRate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MakerDiscountRate {
      get { return makerDiscountRate_; }
      set {
        makerDiscountRate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "taker_discount_rate" field.</summary>
    public const int TakerDiscountRateFieldNumber = 2;
    private string takerDiscountRate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TakerDiscountRate {
      get { return takerDiscountRate_; }
      set {
        takerDiscountRate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "staked_amount" field.</summary>
    public const int StakedAmountFieldNumber = 3;
    private string stakedAmount_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StakedAmount {
      get { return stakedAmount_; }
      set {
        stakedAmount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "volume" field.</summary>
    public const int VolumeFieldNumber = 4;
    private string volume_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Volume {
      get { return volume_; }
      set {
        volume_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FeeDiscountTierInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FeeDiscountTierInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MakerDiscountRate != other.MakerDiscountRate) return false;
      if (TakerDiscountRate != other.TakerDiscountRate) return false;
      if (StakedAmount != other.StakedAmount) return false;
      if (Volume != other.Volume) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MakerDiscountRate.Length != 0) hash ^= MakerDiscountRate.GetHashCode();
      if (TakerDiscountRate.Length != 0) hash ^= TakerDiscountRate.GetHashCode();
      if (StakedAmount.Length != 0) hash ^= StakedAmount.GetHashCode();
      if (Volume.Length != 0) hash ^= Volume.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MakerDiscountRate.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MakerDiscountRate);
      }
      if (TakerDiscountRate.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TakerDiscountRate);
      }
      if (StakedAmount.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(StakedAmount);
      }
      if (Volume.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Volume);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MakerDiscountRate.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MakerDiscountRate);
      }
      if (TakerDiscountRate.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TakerDiscountRate);
      }
      if (StakedAmount.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(StakedAmount);
      }
      if (Volume.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Volume);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MakerDiscountRate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MakerDiscountRate);
      }
      if (TakerDiscountRate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TakerDiscountRate);
      }
      if (StakedAmount.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StakedAmount);
      }
      if (Volume.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Volume);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FeeDiscountTierInfo other) {
      if (other == null) {
        return;
      }
      if (other.MakerDiscountRate.Length != 0) {
        MakerDiscountRate = other.MakerDiscountRate;
      }
      if (other.TakerDiscountRate.Length != 0) {
        TakerDiscountRate = other.TakerDiscountRate;
      }
      if (other.StakedAmount.Length != 0) {
        StakedAmount = other.StakedAmount;
      }
      if (other.Volume.Length != 0) {
        Volume = other.Volume;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MakerDiscountRate = input.ReadString();
            break;
          }
          case 18: {
            TakerDiscountRate = input.ReadString();
            break;
          }
          case 26: {
            StakedAmount = input.ReadString();
            break;
          }
          case 34: {
            Volume = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            MakerDiscountRate = input.ReadString();
            break;
          }
          case 18: {
            TakerDiscountRate = input.ReadString();
            break;
          }
          case 26: {
            StakedAmount = input.ReadString();
            break;
          }
          case 34: {
            Volume = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class FeeDiscountSchedule : pb::IMessage<FeeDiscountSchedule>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FeeDiscountSchedule> _parser = new pb::MessageParser<FeeDiscountSchedule>(() => new FeeDiscountSchedule());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FeeDiscountSchedule> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Exchange.V1Beta1.ExchangeReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FeeDiscountSchedule() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FeeDiscountSchedule(FeeDiscountSchedule other) : this() {
      bucketCount_ = other.bucketCount_;
      bucketDuration_ = other.bucketDuration_;
      quoteDenoms_ = other.quoteDenoms_.Clone();
      tierInfos_ = other.tierInfos_.Clone();
      disqualifiedMarketIds_ = other.disqualifiedMarketIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FeeDiscountSchedule Clone() {
      return new FeeDiscountSchedule(this);
    }

    /// <summary>Field number for the "bucket_count" field.</summary>
    public const int BucketCountFieldNumber = 1;
    private ulong bucketCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong BucketCount {
      get { return bucketCount_; }
      set {
        bucketCount_ = value;
      }
    }

    /// <summary>Field number for the "bucket_duration" field.</summary>
    public const int BucketDurationFieldNumber = 2;
    private long bucketDuration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long BucketDuration {
      get { return bucketDuration_; }
      set {
        bucketDuration_ = value;
      }
    }

    /// <summary>Field number for the "quote_denoms" field.</summary>
    public const int QuoteDenomsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_quoteDenoms_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> quoteDenoms_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// the trading fee quote denoms which will be counted for the fee paid
    /// contribution
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> QuoteDenoms {
      get { return quoteDenoms_; }
    }

    /// <summary>Field number for the "tier_infos" field.</summary>
    public const int TierInfosFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Injective.Exchange.V1Beta1.FeeDiscountTierInfo> _repeated_tierInfos_codec
        = pb::FieldCodec.ForMessage(34, global::Injective.Exchange.V1Beta1.FeeDiscountTierInfo.Parser);
    private readonly pbc::RepeatedField<global::Injective.Exchange.V1Beta1.FeeDiscountTierInfo> tierInfos_ = new pbc::RepeatedField<global::Injective.Exchange.V1Beta1.FeeDiscountTierInfo>();
    /// <summary>
    /// the fee discount tiers
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Injective.Exchange.V1Beta1.FeeDiscountTierInfo> TierInfos {
      get { return tierInfos_; }
    }

    /// <summary>Field number for the "disqualified_market_ids" field.</summary>
    public const int DisqualifiedMarketIdsFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_disqualifiedMarketIds_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> disqualifiedMarketIds_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// the marketIDs which are disqualified from contributing to the fee paid
    /// amount
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> DisqualifiedMarketIds {
      get { return disqualifiedMarketIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FeeDiscountSchedule);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FeeDiscountSchedule other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BucketCount != other.BucketCount) return false;
      if (BucketDuration != other.BucketDuration) return false;
      if(!quoteDenoms_.Equals(other.quoteDenoms_)) return false;
      if(!tierInfos_.Equals(other.tierInfos_)) return false;
      if(!disqualifiedMarketIds_.Equals(other.disqualifiedMarketIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (BucketCount != 0UL) hash ^= BucketCount.GetHashCode();
      if (BucketDuration != 0L) hash ^= BucketDuration.GetHashCode();
      hash ^= quoteDenoms_.GetHashCode();
      hash ^= tierInfos_.GetHashCode();
      hash ^= disqualifiedMarketIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BucketCount != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(BucketCount);
      }
      if (BucketDuration != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(BucketDuration);
      }
      quoteDenoms_.WriteTo(output, _repeated_quoteDenoms_codec);
      tierInfos_.WriteTo(output, _repeated_tierInfos_codec);
      disqualifiedMarketIds_.WriteTo(output, _repeated_disqualifiedMarketIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BucketCount != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(BucketCount);
      }
      if (BucketDuration != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(BucketDuration);
      }
      quoteDenoms_.WriteTo(ref output, _repeated_quoteDenoms_codec);
      tierInfos_.WriteTo(ref output, _repeated_tierInfos_codec);
      disqualifiedMarketIds_.WriteTo(ref output, _repeated_disqualifiedMarketIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (BucketCount != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BucketCount);
      }
      if (BucketDuration != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BucketDuration);
      }
      size += quoteDenoms_.CalculateSize(_repeated_quoteDenoms_codec);
      size += tierInfos_.CalculateSize(_repeated_tierInfos_codec);
      size += disqualifiedMarketIds_.CalculateSize(_repeated_disqualifiedMarketIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FeeDiscountSchedule other) {
      if (other == null) {
        return;
      }
      if (other.BucketCount != 0UL) {
        BucketCount = other.BucketCount;
      }
      if (other.BucketDuration != 0L) {
        BucketDuration = other.BucketDuration;
      }
      quoteDenoms_.Add(other.quoteDenoms_);
      tierInfos_.Add(other.tierInfos_);
      disqualifiedMarketIds_.Add(other.disqualifiedMarketIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BucketCount = input.ReadUInt64();
            break;
          }
          case 16: {
            BucketDuration = input.ReadInt64();
            break;
          }
          case 26: {
            quoteDenoms_.AddEntriesFrom(input, _repeated_quoteDenoms_codec);
            break;
          }
          case 34: {
            tierInfos_.AddEntriesFrom(input, _repeated_tierInfos_codec);
            break;
          }
          case 42: {
            disqualifiedMarketIds_.AddEntriesFrom(input, _repeated_disqualifiedMarketIds_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BucketCount = input.ReadUInt64();
            break;
          }
          case 16: {
            BucketDuration = input.ReadInt64();
            break;
          }
          case 26: {
            quoteDenoms_.AddEntriesFrom(ref input, _repeated_quoteDenoms_codec);
            break;
          }
          case 34: {
            tierInfos_.AddEntriesFrom(ref input, _repeated_tierInfos_codec);
            break;
          }
          case 42: {
            disqualifiedMarketIds_.AddEntriesFrom(ref input, _repeated_disqualifiedMarketIds_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class FeeDiscountTierTTL : pb::IMessage<FeeDiscountTierTTL>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FeeDiscountTierTTL> _parser = new pb::MessageParser<FeeDiscountTierTTL>(() => new FeeDiscountTierTTL());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FeeDiscountTierTTL> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Exchange.V1Beta1.ExchangeReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FeeDiscountTierTTL() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FeeDiscountTierTTL(FeeDiscountTierTTL other) : this() {
      tier_ = other.tier_;
      ttlTimestamp_ = other.ttlTimestamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FeeDiscountTierTTL Clone() {
      return new FeeDiscountTierTTL(this);
    }

    /// <summary>Field number for the "tier" field.</summary>
    public const int TierFieldNumber = 1;
    private ulong tier_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Tier {
      get { return tier_; }
      set {
        tier_ = value;
      }
    }

    /// <summary>Field number for the "ttl_timestamp" field.</summary>
    public const int TtlTimestampFieldNumber = 2;
    private long ttlTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TtlTimestamp {
      get { return ttlTimestamp_; }
      set {
        ttlTimestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FeeDiscountTierTTL);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FeeDiscountTierTTL other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tier != other.Tier) return false;
      if (TtlTimestamp != other.TtlTimestamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Tier != 0UL) hash ^= Tier.GetHashCode();
      if (TtlTimestamp != 0L) hash ^= TtlTimestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Tier != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Tier);
      }
      if (TtlTimestamp != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(TtlTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Tier != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Tier);
      }
      if (TtlTimestamp != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(TtlTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Tier != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Tier);
      }
      if (TtlTimestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TtlTimestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FeeDiscountTierTTL other) {
      if (other == null) {
        return;
      }
      if (other.Tier != 0UL) {
        Tier = other.Tier;
      }
      if (other.TtlTimestamp != 0L) {
        TtlTimestamp = other.TtlTimestamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Tier = input.ReadUInt64();
            break;
          }
          case 16: {
            TtlTimestamp = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Tier = input.ReadUInt64();
            break;
          }
          case 16: {
            TtlTimestamp = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class VolumeRecord : pb::IMessage<VolumeRecord>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VolumeRecord> _parser = new pb::MessageParser<VolumeRecord>(() => new VolumeRecord());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<VolumeRecord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Exchange.V1Beta1.ExchangeReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VolumeRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VolumeRecord(VolumeRecord other) : this() {
      makerVolume_ = other.makerVolume_;
      takerVolume_ = other.takerVolume_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VolumeRecord Clone() {
      return new VolumeRecord(this);
    }

    /// <summary>Field number for the "maker_volume" field.</summary>
    public const int MakerVolumeFieldNumber = 1;
    private string makerVolume_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MakerVolume {
      get { return makerVolume_; }
      set {
        makerVolume_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "taker_volume" field.</summary>
    public const int TakerVolumeFieldNumber = 2;
    private string takerVolume_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TakerVolume {
      get { return takerVolume_; }
      set {
        takerVolume_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as VolumeRecord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(VolumeRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MakerVolume != other.MakerVolume) return false;
      if (TakerVolume != other.TakerVolume) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MakerVolume.Length != 0) hash ^= MakerVolume.GetHashCode();
      if (TakerVolume.Length != 0) hash ^= TakerVolume.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MakerVolume.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MakerVolume);
      }
      if (TakerVolume.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TakerVolume);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MakerVolume.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MakerVolume);
      }
      if (TakerVolume.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TakerVolume);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MakerVolume.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MakerVolume);
      }
      if (TakerVolume.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TakerVolume);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(VolumeRecord other) {
      if (other == null) {
        return;
      }
      if (other.MakerVolume.Length != 0) {
        MakerVolume = other.MakerVolume;
      }
      if (other.TakerVolume.Length != 0) {
        TakerVolume = other.TakerVolume;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MakerVolume = input.ReadString();
            break;
          }
          case 18: {
            TakerVolume = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            MakerVolume = input.ReadString();
            break;
          }
          case 18: {
            TakerVolume = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AccountRewards : pb::IMessage<AccountRewards>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AccountRewards> _parser = new pb::MessageParser<AccountRewards>(() => new AccountRewards());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AccountRewards> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Exchange.V1Beta1.ExchangeReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AccountRewards() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AccountRewards(AccountRewards other) : this() {
      account_ = other.account_;
      rewards_ = other.rewards_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AccountRewards Clone() {
      return new AccountRewards(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private string account_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Account {
      get { return account_; }
      set {
        account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rewards" field.</summary>
    public const int RewardsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Cosmos.Base.V1Beta1.Coin> _repeated_rewards_codec
        = pb::FieldCodec.ForMessage(18, global::Cosmos.Base.V1Beta1.Coin.Parser);
    private readonly pbc::RepeatedField<global::Cosmos.Base.V1Beta1.Coin> rewards_ = new pbc::RepeatedField<global::Cosmos.Base.V1Beta1.Coin>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Cosmos.Base.V1Beta1.Coin> Rewards {
      get { return rewards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AccountRewards);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AccountRewards other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Account != other.Account) return false;
      if(!rewards_.Equals(other.rewards_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Account.Length != 0) hash ^= Account.GetHashCode();
      hash ^= rewards_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Account.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Account);
      }
      rewards_.WriteTo(output, _repeated_rewards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Account.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Account);
      }
      rewards_.WriteTo(ref output, _repeated_rewards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Account.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
      }
      size += rewards_.CalculateSize(_repeated_rewards_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AccountRewards other) {
      if (other == null) {
        return;
      }
      if (other.Account.Length != 0) {
        Account = other.Account;
      }
      rewards_.Add(other.rewards_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Account = input.ReadString();
            break;
          }
          case 18: {
            rewards_.AddEntriesFrom(input, _repeated_rewards_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Account = input.ReadString();
            break;
          }
          case 18: {
            rewards_.AddEntriesFrom(ref input, _repeated_rewards_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TradeRecords : pb::IMessage<TradeRecords>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TradeRecords> _parser = new pb::MessageParser<TradeRecords>(() => new TradeRecords());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TradeRecords> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Exchange.V1Beta1.ExchangeReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TradeRecords() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TradeRecords(TradeRecords other) : this() {
      marketId_ = other.marketId_;
      latestTradeRecords_ = other.latestTradeRecords_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TradeRecords Clone() {
      return new TradeRecords(this);
    }

    /// <summary>Field number for the "market_id" field.</summary>
    public const int MarketIdFieldNumber = 1;
    private string marketId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MarketId {
      get { return marketId_; }
      set {
        marketId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "latest_trade_records" field.</summary>
    public const int LatestTradeRecordsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Injective.Exchange.V1Beta1.TradeRecord> _repeated_latestTradeRecords_codec
        = pb::FieldCodec.ForMessage(18, global::Injective.Exchange.V1Beta1.TradeRecord.Parser);
    private readonly pbc::RepeatedField<global::Injective.Exchange.V1Beta1.TradeRecord> latestTradeRecords_ = new pbc::RepeatedField<global::Injective.Exchange.V1Beta1.TradeRecord>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Injective.Exchange.V1Beta1.TradeRecord> LatestTradeRecords {
      get { return latestTradeRecords_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TradeRecords);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TradeRecords other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MarketId != other.MarketId) return false;
      if(!latestTradeRecords_.Equals(other.latestTradeRecords_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MarketId.Length != 0) hash ^= MarketId.GetHashCode();
      hash ^= latestTradeRecords_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MarketId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MarketId);
      }
      latestTradeRecords_.WriteTo(output, _repeated_latestTradeRecords_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MarketId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MarketId);
      }
      latestTradeRecords_.WriteTo(ref output, _repeated_latestTradeRecords_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MarketId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MarketId);
      }
      size += latestTradeRecords_.CalculateSize(_repeated_latestTradeRecords_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TradeRecords other) {
      if (other == null) {
        return;
      }
      if (other.MarketId.Length != 0) {
        MarketId = other.MarketId;
      }
      latestTradeRecords_.Add(other.latestTradeRecords_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MarketId = input.ReadString();
            break;
          }
          case 18: {
            latestTradeRecords_.AddEntriesFrom(input, _repeated_latestTradeRecords_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            MarketId = input.ReadString();
            break;
          }
          case 18: {
            latestTradeRecords_.AddEntriesFrom(ref input, _repeated_latestTradeRecords_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SubaccountIDs : pb::IMessage<SubaccountIDs>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SubaccountIDs> _parser = new pb::MessageParser<SubaccountIDs>(() => new SubaccountIDs());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SubaccountIDs> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Exchange.V1Beta1.ExchangeReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubaccountIDs() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubaccountIDs(SubaccountIDs other) : this() {
      subaccountIds_ = other.subaccountIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubaccountIDs Clone() {
      return new SubaccountIDs(this);
    }

    /// <summary>Field number for the "subaccount_ids" field.</summary>
    public const int SubaccountIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_subaccountIds_codec
        = pb::FieldCodec.ForBytes(10);
    private readonly pbc::RepeatedField<pb::ByteString> subaccountIds_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<pb::ByteString> SubaccountIds {
      get { return subaccountIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SubaccountIDs);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SubaccountIDs other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!subaccountIds_.Equals(other.subaccountIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= subaccountIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      subaccountIds_.WriteTo(output, _repeated_subaccountIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      subaccountIds_.WriteTo(ref output, _repeated_subaccountIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += subaccountIds_.CalculateSize(_repeated_subaccountIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SubaccountIDs other) {
      if (other == null) {
        return;
      }
      subaccountIds_.Add(other.subaccountIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            subaccountIds_.AddEntriesFrom(input, _repeated_subaccountIds_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            subaccountIds_.AddEntriesFrom(ref input, _repeated_subaccountIds_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TradeRecord : pb::IMessage<TradeRecord>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TradeRecord> _parser = new pb::MessageParser<TradeRecord>(() => new TradeRecord());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TradeRecord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Exchange.V1Beta1.ExchangeReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TradeRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TradeRecord(TradeRecord other) : this() {
      timestamp_ = other.timestamp_;
      price_ = other.price_;
      quantity_ = other.quantity_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TradeRecord Clone() {
      return new TradeRecord(this);
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 1;
    private long timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 2;
    private string price_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Price {
      get { return price_; }
      set {
        price_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "quantity" field.</summary>
    public const int QuantityFieldNumber = 3;
    private string quantity_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Quantity {
      get { return quantity_; }
      set {
        quantity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TradeRecord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TradeRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Timestamp != other.Timestamp) return false;
      if (Price != other.Price) return false;
      if (Quantity != other.Quantity) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      if (Price.Length != 0) hash ^= Price.GetHashCode();
      if (Quantity.Length != 0) hash ^= Quantity.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Timestamp != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Timestamp);
      }
      if (Price.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Price);
      }
      if (Quantity.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Quantity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Timestamp != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Timestamp);
      }
      if (Price.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Price);
      }
      if (Quantity.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Quantity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (Price.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Price);
      }
      if (Quantity.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Quantity);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TradeRecord other) {
      if (other == null) {
        return;
      }
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      if (other.Price.Length != 0) {
        Price = other.Price;
      }
      if (other.Quantity.Length != 0) {
        Quantity = other.Quantity;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 18: {
            Price = input.ReadString();
            break;
          }
          case 26: {
            Quantity = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 18: {
            Price = input.ReadString();
            break;
          }
          case 26: {
            Quantity = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Level : pb::IMessage<Level>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Level> _parser = new pb::MessageParser<Level>(() => new Level());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Level> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Exchange.V1Beta1.ExchangeReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Level() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Level(Level other) : this() {
      p_ = other.p_;
      q_ = other.q_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Level Clone() {
      return new Level(this);
    }

    /// <summary>Field number for the "p" field.</summary>
    public const int PFieldNumber = 1;
    private string p_ = "";
    /// <summary>
    /// price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string P {
      get { return p_; }
      set {
        p_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "q" field.</summary>
    public const int QFieldNumber = 2;
    private string q_ = "";
    /// <summary>
    /// quantity
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Q {
      get { return q_; }
      set {
        q_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Level);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Level other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (P != other.P) return false;
      if (Q != other.Q) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (P.Length != 0) hash ^= P.GetHashCode();
      if (Q.Length != 0) hash ^= Q.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (P.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(P);
      }
      if (Q.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Q);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (P.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(P);
      }
      if (Q.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Q);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (P.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(P);
      }
      if (Q.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Q);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Level other) {
      if (other == null) {
        return;
      }
      if (other.P.Length != 0) {
        P = other.P;
      }
      if (other.Q.Length != 0) {
        Q = other.Q;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            P = input.ReadString();
            break;
          }
          case 18: {
            Q = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            P = input.ReadString();
            break;
          }
          case 18: {
            Q = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AggregateSubaccountVolumeRecord : pb::IMessage<AggregateSubaccountVolumeRecord>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AggregateSubaccountVolumeRecord> _parser = new pb::MessageParser<AggregateSubaccountVolumeRecord>(() => new AggregateSubaccountVolumeRecord());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AggregateSubaccountVolumeRecord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Exchange.V1Beta1.ExchangeReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AggregateSubaccountVolumeRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AggregateSubaccountVolumeRecord(AggregateSubaccountVolumeRecord other) : this() {
      subaccountId_ = other.subaccountId_;
      marketVolumes_ = other.marketVolumes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AggregateSubaccountVolumeRecord Clone() {
      return new AggregateSubaccountVolumeRecord(this);
    }

    /// <summary>Field number for the "subaccount_id" field.</summary>
    public const int SubaccountIdFieldNumber = 1;
    private string subaccountId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SubaccountId {
      get { return subaccountId_; }
      set {
        subaccountId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "market_volumes" field.</summary>
    public const int MarketVolumesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Injective.Exchange.V1Beta1.MarketVolume> _repeated_marketVolumes_codec
        = pb::FieldCodec.ForMessage(18, global::Injective.Exchange.V1Beta1.MarketVolume.Parser);
    private readonly pbc::RepeatedField<global::Injective.Exchange.V1Beta1.MarketVolume> marketVolumes_ = new pbc::RepeatedField<global::Injective.Exchange.V1Beta1.MarketVolume>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Injective.Exchange.V1Beta1.MarketVolume> MarketVolumes {
      get { return marketVolumes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AggregateSubaccountVolumeRecord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AggregateSubaccountVolumeRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SubaccountId != other.SubaccountId) return false;
      if(!marketVolumes_.Equals(other.marketVolumes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SubaccountId.Length != 0) hash ^= SubaccountId.GetHashCode();
      hash ^= marketVolumes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SubaccountId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SubaccountId);
      }
      marketVolumes_.WriteTo(output, _repeated_marketVolumes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SubaccountId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SubaccountId);
      }
      marketVolumes_.WriteTo(ref output, _repeated_marketVolumes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SubaccountId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubaccountId);
      }
      size += marketVolumes_.CalculateSize(_repeated_marketVolumes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AggregateSubaccountVolumeRecord other) {
      if (other == null) {
        return;
      }
      if (other.SubaccountId.Length != 0) {
        SubaccountId = other.SubaccountId;
      }
      marketVolumes_.Add(other.marketVolumes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SubaccountId = input.ReadString();
            break;
          }
          case 18: {
            marketVolumes_.AddEntriesFrom(input, _repeated_marketVolumes_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SubaccountId = input.ReadString();
            break;
          }
          case 18: {
            marketVolumes_.AddEntriesFrom(ref input, _repeated_marketVolumes_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AggregateAccountVolumeRecord : pb::IMessage<AggregateAccountVolumeRecord>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AggregateAccountVolumeRecord> _parser = new pb::MessageParser<AggregateAccountVolumeRecord>(() => new AggregateAccountVolumeRecord());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AggregateAccountVolumeRecord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Exchange.V1Beta1.ExchangeReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AggregateAccountVolumeRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AggregateAccountVolumeRecord(AggregateAccountVolumeRecord other) : this() {
      account_ = other.account_;
      marketVolumes_ = other.marketVolumes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AggregateAccountVolumeRecord Clone() {
      return new AggregateAccountVolumeRecord(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private string account_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Account {
      get { return account_; }
      set {
        account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "market_volumes" field.</summary>
    public const int MarketVolumesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Injective.Exchange.V1Beta1.MarketVolume> _repeated_marketVolumes_codec
        = pb::FieldCodec.ForMessage(18, global::Injective.Exchange.V1Beta1.MarketVolume.Parser);
    private readonly pbc::RepeatedField<global::Injective.Exchange.V1Beta1.MarketVolume> marketVolumes_ = new pbc::RepeatedField<global::Injective.Exchange.V1Beta1.MarketVolume>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Injective.Exchange.V1Beta1.MarketVolume> MarketVolumes {
      get { return marketVolumes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AggregateAccountVolumeRecord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AggregateAccountVolumeRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Account != other.Account) return false;
      if(!marketVolumes_.Equals(other.marketVolumes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Account.Length != 0) hash ^= Account.GetHashCode();
      hash ^= marketVolumes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Account.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Account);
      }
      marketVolumes_.WriteTo(output, _repeated_marketVolumes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Account.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Account);
      }
      marketVolumes_.WriteTo(ref output, _repeated_marketVolumes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Account.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
      }
      size += marketVolumes_.CalculateSize(_repeated_marketVolumes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AggregateAccountVolumeRecord other) {
      if (other == null) {
        return;
      }
      if (other.Account.Length != 0) {
        Account = other.Account;
      }
      marketVolumes_.Add(other.marketVolumes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Account = input.ReadString();
            break;
          }
          case 18: {
            marketVolumes_.AddEntriesFrom(input, _repeated_marketVolumes_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Account = input.ReadString();
            break;
          }
          case 18: {
            marketVolumes_.AddEntriesFrom(ref input, _repeated_marketVolumes_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MarketVolume : pb::IMessage<MarketVolume>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MarketVolume> _parser = new pb::MessageParser<MarketVolume>(() => new MarketVolume());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MarketVolume> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Exchange.V1Beta1.ExchangeReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MarketVolume() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MarketVolume(MarketVolume other) : this() {
      marketId_ = other.marketId_;
      volume_ = other.volume_ != null ? other.volume_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MarketVolume Clone() {
      return new MarketVolume(this);
    }

    /// <summary>Field number for the "market_id" field.</summary>
    public const int MarketIdFieldNumber = 1;
    private string marketId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MarketId {
      get { return marketId_; }
      set {
        marketId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "volume" field.</summary>
    public const int VolumeFieldNumber = 2;
    private global::Injective.Exchange.V1Beta1.VolumeRecord volume_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Injective.Exchange.V1Beta1.VolumeRecord Volume {
      get { return volume_; }
      set {
        volume_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MarketVolume);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MarketVolume other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MarketId != other.MarketId) return false;
      if (!object.Equals(Volume, other.Volume)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MarketId.Length != 0) hash ^= MarketId.GetHashCode();
      if (volume_ != null) hash ^= Volume.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MarketId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MarketId);
      }
      if (volume_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Volume);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MarketId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MarketId);
      }
      if (volume_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Volume);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MarketId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MarketId);
      }
      if (volume_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Volume);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MarketVolume other) {
      if (other == null) {
        return;
      }
      if (other.MarketId.Length != 0) {
        MarketId = other.MarketId;
      }
      if (other.volume_ != null) {
        if (volume_ == null) {
          Volume = new global::Injective.Exchange.V1Beta1.VolumeRecord();
        }
        Volume.MergeFrom(other.Volume);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MarketId = input.ReadString();
            break;
          }
          case 18: {
            if (volume_ == null) {
              Volume = new global::Injective.Exchange.V1Beta1.VolumeRecord();
            }
            input.ReadMessage(Volume);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            MarketId = input.ReadString();
            break;
          }
          case 18: {
            if (volume_ == null) {
              Volume = new global::Injective.Exchange.V1Beta1.VolumeRecord();
            }
            input.ReadMessage(Volume);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DenomDecimals : pb::IMessage<DenomDecimals>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DenomDecimals> _parser = new pb::MessageParser<DenomDecimals>(() => new DenomDecimals());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DenomDecimals> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Exchange.V1Beta1.ExchangeReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DenomDecimals() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DenomDecimals(DenomDecimals other) : this() {
      denom_ = other.denom_;
      decimals_ = other.decimals_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DenomDecimals Clone() {
      return new DenomDecimals(this);
    }

    /// <summary>Field number for the "denom" field.</summary>
    public const int DenomFieldNumber = 1;
    private string denom_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Denom {
      get { return denom_; }
      set {
        denom_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "decimals" field.</summary>
    public const int DecimalsFieldNumber = 2;
    private ulong decimals_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Decimals {
      get { return decimals_; }
      set {
        decimals_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DenomDecimals);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DenomDecimals other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Denom != other.Denom) return false;
      if (Decimals != other.Decimals) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Denom.Length != 0) hash ^= Denom.GetHashCode();
      if (Decimals != 0UL) hash ^= Decimals.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Denom.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Denom);
      }
      if (Decimals != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Decimals);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Denom.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Denom);
      }
      if (Decimals != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Decimals);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Denom.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Denom);
      }
      if (Decimals != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Decimals);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DenomDecimals other) {
      if (other == null) {
        return;
      }
      if (other.Denom.Length != 0) {
        Denom = other.Denom;
      }
      if (other.Decimals != 0UL) {
        Decimals = other.Decimals;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Denom = input.ReadString();
            break;
          }
          case 16: {
            Decimals = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Denom = input.ReadString();
            break;
          }
          case 16: {
            Decimals = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
