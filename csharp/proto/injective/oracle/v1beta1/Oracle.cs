// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: injective/oracle/v1beta1/oracle.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Injective.Oracle.V1Beta1 {

  /// <summary>Holder for reflection information generated from injective/oracle/v1beta1/oracle.proto</summary>
  public static partial class OracleReflection {

    #region Descriptor
    /// <summary>File descriptor for injective/oracle/v1beta1/oracle.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OracleReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiVpbmplY3RpdmUvb3JhY2xlL3YxYmV0YTEvb3JhY2xlLnByb3RvEhhpbmpl",
            "Y3RpdmUub3JhY2xlLnYxYmV0YTEaFGdvZ29wcm90by9nb2dvLnByb3RvGh5j",
            "b3Ntb3MvYmFzZS92MWJldGExL2NvaW4ucHJvdG8iJQoGUGFyYW1zEhUKDXB5",
            "dGhfY29udHJhY3QYASABKAk6BOigHwEibQoKT3JhY2xlSW5mbxIOCgZzeW1i",
            "b2wYASABKAkSOQoLb3JhY2xlX3R5cGUYAiABKA4yJC5pbmplY3RpdmUub3Jh",
            "Y2xlLnYxYmV0YTEuT3JhY2xlVHlwZRIUCgxzY2FsZV9mYWN0b3IYAyABKA0i",
            "ugEKE0NoYWlubGlua1ByaWNlU3RhdGUSDwoHZmVlZF9pZBgBIAEoCRI+CgZh",
            "bnN3ZXIYAiABKAlCLtreHyZnaXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2Rr",
            "L3R5cGVzLkRlY8jeHwASEQoJdGltZXN0YW1wGAMgASgEEj8KC3ByaWNlX3N0",
            "YXRlGAQgASgLMiQuaW5qZWN0aXZlLm9yYWNsZS52MWJldGExLlByaWNlU3Rh",
            "dGVCBMjeHwAiyQEKDkJhbmRQcmljZVN0YXRlEg4KBnN5bWJvbBgBIAEoCRI8",
            "CgRyYXRlGAIgASgJQi7a3h8mZ2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNk",
            "ay90eXBlcy5JbnTI3h8AEhQKDHJlc29sdmVfdGltZRgDIAEoBBISCgpyZXF1",
            "ZXN0X0lEGAQgASgEEj8KC3ByaWNlX3N0YXRlGAUgASgLMiQuaW5qZWN0aXZl",
            "Lm9yYWNsZS52MWJldGExLlByaWNlU3RhdGVCBMjeHwAiegoOUHJpY2VGZWVk",
            "U3RhdGUSDAoEYmFzZRgBIAEoCRINCgVxdW90ZRgCIAEoCRI5CgtwcmljZV9z",
            "dGF0ZRgDIAEoCzIkLmluamVjdGl2ZS5vcmFjbGUudjFiZXRhMS5QcmljZVN0",
            "YXRlEhAKCHJlbGF5ZXJzGAQgAygJIjIKDFByb3ZpZGVySW5mbxIQCghwcm92",
            "aWRlchgBIAEoCRIQCghyZWxheWVycxgCIAMoCSKbAQoNUHJvdmlkZXJTdGF0",
            "ZRI9Cg1wcm92aWRlcl9pbmZvGAEgASgLMiYuaW5qZWN0aXZlLm9yYWNsZS52",
            "MWJldGExLlByb3ZpZGVySW5mbxJLChVwcm92aWRlcl9wcmljZV9zdGF0ZXMY",
            "AiADKAsyLC5pbmplY3RpdmUub3JhY2xlLnYxYmV0YTEuUHJvdmlkZXJQcmlj",
            "ZVN0YXRlIlkKElByb3ZpZGVyUHJpY2VTdGF0ZRIOCgZzeW1ib2wYASABKAkS",
            "MwoFc3RhdGUYAiABKAsyJC5pbmplY3RpdmUub3JhY2xlLnYxYmV0YTEuUHJp",
            "Y2VTdGF0ZSIsCg1QcmljZUZlZWRJbmZvEgwKBGJhc2UYASABKAkSDQoFcXVv",
            "dGUYAiABKAkiTwoOUHJpY2VGZWVkUHJpY2USPQoFcHJpY2UYASABKAlCLtre",
            "HyZnaXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL3R5cGVzLkRlY8jeHwAi",
            "kgEKEkNvaW5iYXNlUHJpY2VTdGF0ZRIMCgRraW5kGAEgASgJEhEKCXRpbWVz",
            "dGFtcBgCIAEoBBILCgNrZXkYAyABKAkSDQoFdmFsdWUYBCABKAQSPwoLcHJp",
            "Y2Vfc3RhdGUYBSABKAsyJC5pbmplY3RpdmUub3JhY2xlLnYxYmV0YTEuUHJp",
            "Y2VTdGF0ZUIEyN4fACKoAQoKUHJpY2VTdGF0ZRI9CgVwcmljZRgBIAEoCUIu",
            "2t4fJmdpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsvdHlwZXMuRGVjyN4f",
            "ABJIChBjdW11bGF0aXZlX3ByaWNlGAIgASgJQi7a3h8mZ2l0aHViLmNvbS9j",
            "b3Ntb3MvY29zbW9zLXNkay90eXBlcy5EZWPI3h8AEhEKCXRpbWVzdGFtcBgD",
            "IAEoAyK8AgoOUHl0aFByaWNlU3RhdGUSEAoIcHJpY2VfaWQYASABKAkSQQoJ",
            "ZW1hX3ByaWNlGAIgASgJQi7a3h8mZ2l0aHViLmNvbS9jb3Ntb3MvY29zbW9z",
            "LXNkay90eXBlcy5EZWPI3h8AEkAKCGVtYV9jb25mGAMgASgJQi7a3h8mZ2l0",
            "aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay90eXBlcy5EZWPI3h8AEjwKBGNv",
            "bmYYBCABKAlCLtreHyZnaXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL3R5",
            "cGVzLkRlY8jeHwASFAoMcHVibGlzaF90aW1lGAUgASgEEj8KC3ByaWNlX3N0",
            "YXRlGAYgASgLMiQuaW5qZWN0aXZlLm9yYWNsZS52MWJldGExLlByaWNlU3Rh",
            "dGVCBMjeHwAinAIKEUJhbmRPcmFjbGVSZXF1ZXN0EhIKCnJlcXVlc3RfaWQY",
            "ASABKAQSGAoQb3JhY2xlX3NjcmlwdF9pZBgCIAEoAxIPCgdzeW1ib2xzGAMg",
            "AygJEhEKCWFza19jb3VudBgEIAEoBBIRCgltaW5fY291bnQYBSABKAQSXgoJ",
            "ZmVlX2xpbWl0GAYgAygLMhkuY29zbW9zLmJhc2UudjFiZXRhMS5Db2luQjDI",
            "3h8Aqt8fKGdpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsvdHlwZXMuQ29p",
            "bnMSEwoLcHJlcGFyZV9nYXMYByABKAQSEwoLZXhlY3V0ZV9nYXMYCCABKAQS",
            "GAoQbWluX3NvdXJjZV9jb3VudBgJIAEoBCKoAQoNQmFuZElCQ1BhcmFtcxIY",
            "ChBiYW5kX2liY19lbmFibGVkGAEgASgIEhwKFGliY19yZXF1ZXN0X2ludGVy",
            "dmFsGAIgASgDEhoKEmliY19zb3VyY2VfY2hhbm5lbBgDIAEoCRITCgtpYmNf",
            "dmVyc2lvbhgEIAEoCRITCgtpYmNfcG9ydF9pZBgFIAEoCRIZChFsZWdhY3lf",
            "b3JhY2xlX2lkcxgGIAMoAyJyChRTeW1ib2xQcmljZVRpbWVzdGFtcBI0CgZv",
            "cmFjbGUYASABKA4yJC5pbmplY3RpdmUub3JhY2xlLnYxYmV0YTEuT3JhY2xl",
            "VHlwZRIRCglzeW1ib2xfaWQYAiABKAkSEQoJdGltZXN0YW1wGAMgASgDImQK",
            "E0xhc3RQcmljZVRpbWVzdGFtcHMSTQoVbGFzdF9wcmljZV90aW1lc3RhbXBz",
            "GAEgAygLMi4uaW5qZWN0aXZlLm9yYWNsZS52MWJldGExLlN5bWJvbFByaWNl",
            "VGltZXN0YW1wIpwBCgxQcmljZVJlY29yZHMSNAoGb3JhY2xlGAEgASgOMiQu",
            "aW5qZWN0aXZlLm9yYWNsZS52MWJldGExLk9yYWNsZVR5cGUSEQoJc3ltYm9s",
            "X2lkGAIgASgJEkMKFGxhdGVzdF9wcmljZV9yZWNvcmRzGAMgAygLMiUuaW5q",
            "ZWN0aXZlLm9yYWNsZS52MWJldGExLlByaWNlUmVjb3JkIl8KC1ByaWNlUmVj",
            "b3JkEhEKCXRpbWVzdGFtcBgBIAEoAxI9CgVwcmljZRgCIAEoCUIu2t4fJmdp",
            "dGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsvdHlwZXMuRGVjyN4fACK/AwoS",
            "TWV0YWRhdGFTdGF0aXN0aWNzEhMKC2dyb3VwX2NvdW50GAEgASgNEhsKE3Jl",
            "Y29yZHNfc2FtcGxlX3NpemUYAiABKA0SPAoEbWVhbhgDIAEoCUIu2t4fJmdp",
            "dGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsvdHlwZXMuRGVjyN4fABI8CgR0",
            "d2FwGAQgASgJQi7a3h8mZ2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay90",
            "eXBlcy5EZWPI3h8AEhcKD2ZpcnN0X3RpbWVzdGFtcBgFIAEoAxIWCg5sYXN0",
            "X3RpbWVzdGFtcBgGIAEoAxJBCgltaW5fcHJpY2UYByABKAlCLtreHyZnaXRo",
            "dWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL3R5cGVzLkRlY8jeHwASQQoJbWF4",
            "X3ByaWNlGAggASgJQi7a3h8mZ2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNk",
            "ay90eXBlcy5EZWPI3h8AEkQKDG1lZGlhbl9wcmljZRgJIAEoCUIu2t4fJmdp",
            "dGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsvdHlwZXMuRGVjyN4fACKcAQoQ",
            "UHJpY2VBdHRlc3RhdGlvbhIQCghwcmljZV9pZBgBIAEoCRINCgVwcmljZRgC",
            "IAEoAxIMCgRjb25mGAMgASgEEgwKBGV4cG8YBCABKAUSEQoJZW1hX3ByaWNl",
            "GAUgASgDEhAKCGVtYV9jb25mGAYgASgEEhAKCGVtYV9leHBvGAcgASgFEhQK",
            "DHB1Ymxpc2hfdGltZRgIIAEoAyqfAQoKT3JhY2xlVHlwZRIPCgtVbnNwZWNp",
            "ZmllZBAAEggKBEJhbmQQARINCglQcmljZUZlZWQQAhIMCghDb2luYmFzZRAD",
            "Eg0KCUNoYWlubGluaxAEEgkKBVJhem9yEAUSBwoDRGlhEAYSCAoEQVBJMxAH",
            "EgcKA1VtYRAIEggKBFB5dGgQCRILCgdCYW5kSUJDEAoSDAoIUHJvdmlkZXIQ",
            "C0JOWkxnaXRodWIuY29tL0luamVjdGl2ZUxhYnMvaW5qZWN0aXZlLWNvcmUv",
            "aW5qZWN0aXZlLWNoYWluL21vZHVsZXMvb3JhY2xlL3R5cGVzYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Gogoproto.GogoReflection.Descriptor, global::Cosmos.Base.V1Beta1.CoinReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Injective.Oracle.V1Beta1.OracleType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Oracle.V1Beta1.Params), global::Injective.Oracle.V1Beta1.Params.Parser, new[]{ "PythContract" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Oracle.V1Beta1.OracleInfo), global::Injective.Oracle.V1Beta1.OracleInfo.Parser, new[]{ "Symbol", "OracleType", "ScaleFactor" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Oracle.V1Beta1.ChainlinkPriceState), global::Injective.Oracle.V1Beta1.ChainlinkPriceState.Parser, new[]{ "FeedId", "Answer", "Timestamp", "PriceState" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Oracle.V1Beta1.BandPriceState), global::Injective.Oracle.V1Beta1.BandPriceState.Parser, new[]{ "Symbol", "Rate", "ResolveTime", "RequestID", "PriceState" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Oracle.V1Beta1.PriceFeedState), global::Injective.Oracle.V1Beta1.PriceFeedState.Parser, new[]{ "Base", "Quote", "PriceState", "Relayers" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Oracle.V1Beta1.ProviderInfo), global::Injective.Oracle.V1Beta1.ProviderInfo.Parser, new[]{ "Provider", "Relayers" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Oracle.V1Beta1.ProviderState), global::Injective.Oracle.V1Beta1.ProviderState.Parser, new[]{ "ProviderInfo", "ProviderPriceStates" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Oracle.V1Beta1.ProviderPriceState), global::Injective.Oracle.V1Beta1.ProviderPriceState.Parser, new[]{ "Symbol", "State" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Oracle.V1Beta1.PriceFeedInfo), global::Injective.Oracle.V1Beta1.PriceFeedInfo.Parser, new[]{ "Base", "Quote" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Oracle.V1Beta1.PriceFeedPrice), global::Injective.Oracle.V1Beta1.PriceFeedPrice.Parser, new[]{ "Price" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Oracle.V1Beta1.CoinbasePriceState), global::Injective.Oracle.V1Beta1.CoinbasePriceState.Parser, new[]{ "Kind", "Timestamp", "Key", "Value", "PriceState" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Oracle.V1Beta1.PriceState), global::Injective.Oracle.V1Beta1.PriceState.Parser, new[]{ "Price", "CumulativePrice", "Timestamp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Oracle.V1Beta1.PythPriceState), global::Injective.Oracle.V1Beta1.PythPriceState.Parser, new[]{ "PriceId", "EmaPrice", "EmaConf", "Conf", "PublishTime", "PriceState" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Oracle.V1Beta1.BandOracleRequest), global::Injective.Oracle.V1Beta1.BandOracleRequest.Parser, new[]{ "RequestId", "OracleScriptId", "Symbols", "AskCount", "MinCount", "FeeLimit", "PrepareGas", "ExecuteGas", "MinSourceCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Oracle.V1Beta1.BandIBCParams), global::Injective.Oracle.V1Beta1.BandIBCParams.Parser, new[]{ "BandIbcEnabled", "IbcRequestInterval", "IbcSourceChannel", "IbcVersion", "IbcPortId", "LegacyOracleIds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Oracle.V1Beta1.SymbolPriceTimestamp), global::Injective.Oracle.V1Beta1.SymbolPriceTimestamp.Parser, new[]{ "Oracle", "SymbolId", "Timestamp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Oracle.V1Beta1.LastPriceTimestamps), global::Injective.Oracle.V1Beta1.LastPriceTimestamps.Parser, new[]{ "LastPriceTimestamps_" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Oracle.V1Beta1.PriceRecords), global::Injective.Oracle.V1Beta1.PriceRecords.Parser, new[]{ "Oracle", "SymbolId", "LatestPriceRecords" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Oracle.V1Beta1.PriceRecord), global::Injective.Oracle.V1Beta1.PriceRecord.Parser, new[]{ "Timestamp", "Price" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Oracle.V1Beta1.MetadataStatistics), global::Injective.Oracle.V1Beta1.MetadataStatistics.Parser, new[]{ "GroupCount", "RecordsSampleSize", "Mean", "Twap", "FirstTimestamp", "LastTimestamp", "MinPrice", "MaxPrice", "MedianPrice" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Oracle.V1Beta1.PriceAttestation), global::Injective.Oracle.V1Beta1.PriceAttestation.Parser, new[]{ "PriceId", "Price", "Conf", "Expo", "EmaPrice", "EmaConf", "EmaExpo", "PublishTime" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum OracleType {
    [pbr::OriginalName("Unspecified")] Unspecified = 0,
    [pbr::OriginalName("Band")] Band = 1,
    [pbr::OriginalName("PriceFeed")] PriceFeed = 2,
    [pbr::OriginalName("Coinbase")] Coinbase = 3,
    [pbr::OriginalName("Chainlink")] Chainlink = 4,
    [pbr::OriginalName("Razor")] Razor = 5,
    [pbr::OriginalName("Dia")] Dia = 6,
    [pbr::OriginalName("API3")] Api3 = 7,
    [pbr::OriginalName("Uma")] Uma = 8,
    [pbr::OriginalName("Pyth")] Pyth = 9,
    [pbr::OriginalName("BandIBC")] BandIbc = 10,
    [pbr::OriginalName("Provider")] Provider = 11,
  }

  #endregion

  #region Messages
  public sealed partial class Params : pb::IMessage<Params>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Params> _parser = new pb::MessageParser<Params>(() => new Params());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Params> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Oracle.V1Beta1.OracleReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Params() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Params(Params other) : this() {
      pythContract_ = other.pythContract_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Params Clone() {
      return new Params(this);
    }

    /// <summary>Field number for the "pyth_contract" field.</summary>
    public const int PythContractFieldNumber = 1;
    private string pythContract_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PythContract {
      get { return pythContract_; }
      set {
        pythContract_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Params);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Params other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PythContract != other.PythContract) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PythContract.Length != 0) hash ^= PythContract.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PythContract.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PythContract);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PythContract.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PythContract);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PythContract.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PythContract);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Params other) {
      if (other == null) {
        return;
      }
      if (other.PythContract.Length != 0) {
        PythContract = other.PythContract;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PythContract = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PythContract = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OracleInfo : pb::IMessage<OracleInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OracleInfo> _parser = new pb::MessageParser<OracleInfo>(() => new OracleInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OracleInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Oracle.V1Beta1.OracleReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OracleInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OracleInfo(OracleInfo other) : this() {
      symbol_ = other.symbol_;
      oracleType_ = other.oracleType_;
      scaleFactor_ = other.scaleFactor_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OracleInfo Clone() {
      return new OracleInfo(this);
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 1;
    private string symbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "oracle_type" field.</summary>
    public const int OracleTypeFieldNumber = 2;
    private global::Injective.Oracle.V1Beta1.OracleType oracleType_ = global::Injective.Oracle.V1Beta1.OracleType.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Injective.Oracle.V1Beta1.OracleType OracleType {
      get { return oracleType_; }
      set {
        oracleType_ = value;
      }
    }

    /// <summary>Field number for the "scale_factor" field.</summary>
    public const int ScaleFactorFieldNumber = 3;
    private uint scaleFactor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ScaleFactor {
      get { return scaleFactor_; }
      set {
        scaleFactor_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OracleInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OracleInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Symbol != other.Symbol) return false;
      if (OracleType != other.OracleType) return false;
      if (ScaleFactor != other.ScaleFactor) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (OracleType != global::Injective.Oracle.V1Beta1.OracleType.Unspecified) hash ^= OracleType.GetHashCode();
      if (ScaleFactor != 0) hash ^= ScaleFactor.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Symbol.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Symbol);
      }
      if (OracleType != global::Injective.Oracle.V1Beta1.OracleType.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) OracleType);
      }
      if (ScaleFactor != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(ScaleFactor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Symbol.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Symbol);
      }
      if (OracleType != global::Injective.Oracle.V1Beta1.OracleType.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) OracleType);
      }
      if (ScaleFactor != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(ScaleFactor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (OracleType != global::Injective.Oracle.V1Beta1.OracleType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OracleType);
      }
      if (ScaleFactor != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ScaleFactor);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OracleInfo other) {
      if (other == null) {
        return;
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.OracleType != global::Injective.Oracle.V1Beta1.OracleType.Unspecified) {
        OracleType = other.OracleType;
      }
      if (other.ScaleFactor != 0) {
        ScaleFactor = other.ScaleFactor;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Symbol = input.ReadString();
            break;
          }
          case 16: {
            OracleType = (global::Injective.Oracle.V1Beta1.OracleType) input.ReadEnum();
            break;
          }
          case 24: {
            ScaleFactor = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Symbol = input.ReadString();
            break;
          }
          case 16: {
            OracleType = (global::Injective.Oracle.V1Beta1.OracleType) input.ReadEnum();
            break;
          }
          case 24: {
            ScaleFactor = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ChainlinkPriceState : pb::IMessage<ChainlinkPriceState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ChainlinkPriceState> _parser = new pb::MessageParser<ChainlinkPriceState>(() => new ChainlinkPriceState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ChainlinkPriceState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Oracle.V1Beta1.OracleReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChainlinkPriceState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChainlinkPriceState(ChainlinkPriceState other) : this() {
      feedId_ = other.feedId_;
      answer_ = other.answer_;
      timestamp_ = other.timestamp_;
      priceState_ = other.priceState_ != null ? other.priceState_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChainlinkPriceState Clone() {
      return new ChainlinkPriceState(this);
    }

    /// <summary>Field number for the "feed_id" field.</summary>
    public const int FeedIdFieldNumber = 1;
    private string feedId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FeedId {
      get { return feedId_; }
      set {
        feedId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "answer" field.</summary>
    public const int AnswerFieldNumber = 2;
    private string answer_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Answer {
      get { return answer_; }
      set {
        answer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 3;
    private ulong timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "price_state" field.</summary>
    public const int PriceStateFieldNumber = 4;
    private global::Injective.Oracle.V1Beta1.PriceState priceState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Injective.Oracle.V1Beta1.PriceState PriceState {
      get { return priceState_; }
      set {
        priceState_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ChainlinkPriceState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ChainlinkPriceState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FeedId != other.FeedId) return false;
      if (Answer != other.Answer) return false;
      if (Timestamp != other.Timestamp) return false;
      if (!object.Equals(PriceState, other.PriceState)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (FeedId.Length != 0) hash ^= FeedId.GetHashCode();
      if (Answer.Length != 0) hash ^= Answer.GetHashCode();
      if (Timestamp != 0UL) hash ^= Timestamp.GetHashCode();
      if (priceState_ != null) hash ^= PriceState.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FeedId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FeedId);
      }
      if (Answer.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Answer);
      }
      if (Timestamp != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Timestamp);
      }
      if (priceState_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PriceState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FeedId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FeedId);
      }
      if (Answer.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Answer);
      }
      if (Timestamp != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Timestamp);
      }
      if (priceState_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PriceState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (FeedId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FeedId);
      }
      if (Answer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Answer);
      }
      if (Timestamp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Timestamp);
      }
      if (priceState_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PriceState);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ChainlinkPriceState other) {
      if (other == null) {
        return;
      }
      if (other.FeedId.Length != 0) {
        FeedId = other.FeedId;
      }
      if (other.Answer.Length != 0) {
        Answer = other.Answer;
      }
      if (other.Timestamp != 0UL) {
        Timestamp = other.Timestamp;
      }
      if (other.priceState_ != null) {
        if (priceState_ == null) {
          PriceState = new global::Injective.Oracle.V1Beta1.PriceState();
        }
        PriceState.MergeFrom(other.PriceState);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FeedId = input.ReadString();
            break;
          }
          case 18: {
            Answer = input.ReadString();
            break;
          }
          case 24: {
            Timestamp = input.ReadUInt64();
            break;
          }
          case 34: {
            if (priceState_ == null) {
              PriceState = new global::Injective.Oracle.V1Beta1.PriceState();
            }
            input.ReadMessage(PriceState);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            FeedId = input.ReadString();
            break;
          }
          case 18: {
            Answer = input.ReadString();
            break;
          }
          case 24: {
            Timestamp = input.ReadUInt64();
            break;
          }
          case 34: {
            if (priceState_ == null) {
              PriceState = new global::Injective.Oracle.V1Beta1.PriceState();
            }
            input.ReadMessage(PriceState);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BandPriceState : pb::IMessage<BandPriceState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BandPriceState> _parser = new pb::MessageParser<BandPriceState>(() => new BandPriceState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BandPriceState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Oracle.V1Beta1.OracleReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BandPriceState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BandPriceState(BandPriceState other) : this() {
      symbol_ = other.symbol_;
      rate_ = other.rate_;
      resolveTime_ = other.resolveTime_;
      requestID_ = other.requestID_;
      priceState_ = other.priceState_ != null ? other.priceState_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BandPriceState Clone() {
      return new BandPriceState(this);
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 1;
    private string symbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rate" field.</summary>
    public const int RateFieldNumber = 2;
    private string rate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Rate {
      get { return rate_; }
      set {
        rate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "resolve_time" field.</summary>
    public const int ResolveTimeFieldNumber = 3;
    private ulong resolveTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong ResolveTime {
      get { return resolveTime_; }
      set {
        resolveTime_ = value;
      }
    }

    /// <summary>Field number for the "request_ID" field.</summary>
    public const int RequestIDFieldNumber = 4;
    private ulong requestID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong RequestID {
      get { return requestID_; }
      set {
        requestID_ = value;
      }
    }

    /// <summary>Field number for the "price_state" field.</summary>
    public const int PriceStateFieldNumber = 5;
    private global::Injective.Oracle.V1Beta1.PriceState priceState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Injective.Oracle.V1Beta1.PriceState PriceState {
      get { return priceState_; }
      set {
        priceState_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BandPriceState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BandPriceState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Symbol != other.Symbol) return false;
      if (Rate != other.Rate) return false;
      if (ResolveTime != other.ResolveTime) return false;
      if (RequestID != other.RequestID) return false;
      if (!object.Equals(PriceState, other.PriceState)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (Rate.Length != 0) hash ^= Rate.GetHashCode();
      if (ResolveTime != 0UL) hash ^= ResolveTime.GetHashCode();
      if (RequestID != 0UL) hash ^= RequestID.GetHashCode();
      if (priceState_ != null) hash ^= PriceState.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Symbol.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Symbol);
      }
      if (Rate.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Rate);
      }
      if (ResolveTime != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(ResolveTime);
      }
      if (RequestID != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(RequestID);
      }
      if (priceState_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PriceState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Symbol.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Symbol);
      }
      if (Rate.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Rate);
      }
      if (ResolveTime != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(ResolveTime);
      }
      if (RequestID != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(RequestID);
      }
      if (priceState_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PriceState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (Rate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Rate);
      }
      if (ResolveTime != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ResolveTime);
      }
      if (RequestID != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RequestID);
      }
      if (priceState_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PriceState);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BandPriceState other) {
      if (other == null) {
        return;
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.Rate.Length != 0) {
        Rate = other.Rate;
      }
      if (other.ResolveTime != 0UL) {
        ResolveTime = other.ResolveTime;
      }
      if (other.RequestID != 0UL) {
        RequestID = other.RequestID;
      }
      if (other.priceState_ != null) {
        if (priceState_ == null) {
          PriceState = new global::Injective.Oracle.V1Beta1.PriceState();
        }
        PriceState.MergeFrom(other.PriceState);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Symbol = input.ReadString();
            break;
          }
          case 18: {
            Rate = input.ReadString();
            break;
          }
          case 24: {
            ResolveTime = input.ReadUInt64();
            break;
          }
          case 32: {
            RequestID = input.ReadUInt64();
            break;
          }
          case 42: {
            if (priceState_ == null) {
              PriceState = new global::Injective.Oracle.V1Beta1.PriceState();
            }
            input.ReadMessage(PriceState);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Symbol = input.ReadString();
            break;
          }
          case 18: {
            Rate = input.ReadString();
            break;
          }
          case 24: {
            ResolveTime = input.ReadUInt64();
            break;
          }
          case 32: {
            RequestID = input.ReadUInt64();
            break;
          }
          case 42: {
            if (priceState_ == null) {
              PriceState = new global::Injective.Oracle.V1Beta1.PriceState();
            }
            input.ReadMessage(PriceState);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PriceFeedState : pb::IMessage<PriceFeedState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PriceFeedState> _parser = new pb::MessageParser<PriceFeedState>(() => new PriceFeedState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PriceFeedState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Oracle.V1Beta1.OracleReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PriceFeedState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PriceFeedState(PriceFeedState other) : this() {
      base_ = other.base_;
      quote_ = other.quote_;
      priceState_ = other.priceState_ != null ? other.priceState_.Clone() : null;
      relayers_ = other.relayers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PriceFeedState Clone() {
      return new PriceFeedState(this);
    }

    /// <summary>Field number for the "base" field.</summary>
    public const int BaseFieldNumber = 1;
    private string base_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Base {
      get { return base_; }
      set {
        base_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "quote" field.</summary>
    public const int QuoteFieldNumber = 2;
    private string quote_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Quote {
      get { return quote_; }
      set {
        quote_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "price_state" field.</summary>
    public const int PriceStateFieldNumber = 3;
    private global::Injective.Oracle.V1Beta1.PriceState priceState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Injective.Oracle.V1Beta1.PriceState PriceState {
      get { return priceState_; }
      set {
        priceState_ = value;
      }
    }

    /// <summary>Field number for the "relayers" field.</summary>
    public const int RelayersFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_relayers_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> relayers_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Relayers {
      get { return relayers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PriceFeedState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PriceFeedState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Base != other.Base) return false;
      if (Quote != other.Quote) return false;
      if (!object.Equals(PriceState, other.PriceState)) return false;
      if(!relayers_.Equals(other.relayers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Base.Length != 0) hash ^= Base.GetHashCode();
      if (Quote.Length != 0) hash ^= Quote.GetHashCode();
      if (priceState_ != null) hash ^= PriceState.GetHashCode();
      hash ^= relayers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Base.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Base);
      }
      if (Quote.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Quote);
      }
      if (priceState_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PriceState);
      }
      relayers_.WriteTo(output, _repeated_relayers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Base.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Base);
      }
      if (Quote.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Quote);
      }
      if (priceState_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PriceState);
      }
      relayers_.WriteTo(ref output, _repeated_relayers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Base.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Base);
      }
      if (Quote.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Quote);
      }
      if (priceState_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PriceState);
      }
      size += relayers_.CalculateSize(_repeated_relayers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PriceFeedState other) {
      if (other == null) {
        return;
      }
      if (other.Base.Length != 0) {
        Base = other.Base;
      }
      if (other.Quote.Length != 0) {
        Quote = other.Quote;
      }
      if (other.priceState_ != null) {
        if (priceState_ == null) {
          PriceState = new global::Injective.Oracle.V1Beta1.PriceState();
        }
        PriceState.MergeFrom(other.PriceState);
      }
      relayers_.Add(other.relayers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Base = input.ReadString();
            break;
          }
          case 18: {
            Quote = input.ReadString();
            break;
          }
          case 26: {
            if (priceState_ == null) {
              PriceState = new global::Injective.Oracle.V1Beta1.PriceState();
            }
            input.ReadMessage(PriceState);
            break;
          }
          case 34: {
            relayers_.AddEntriesFrom(input, _repeated_relayers_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Base = input.ReadString();
            break;
          }
          case 18: {
            Quote = input.ReadString();
            break;
          }
          case 26: {
            if (priceState_ == null) {
              PriceState = new global::Injective.Oracle.V1Beta1.PriceState();
            }
            input.ReadMessage(PriceState);
            break;
          }
          case 34: {
            relayers_.AddEntriesFrom(ref input, _repeated_relayers_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProviderInfo : pb::IMessage<ProviderInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProviderInfo> _parser = new pb::MessageParser<ProviderInfo>(() => new ProviderInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ProviderInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Oracle.V1Beta1.OracleReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProviderInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProviderInfo(ProviderInfo other) : this() {
      provider_ = other.provider_;
      relayers_ = other.relayers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProviderInfo Clone() {
      return new ProviderInfo(this);
    }

    /// <summary>Field number for the "provider" field.</summary>
    public const int ProviderFieldNumber = 1;
    private string provider_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Provider {
      get { return provider_; }
      set {
        provider_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "relayers" field.</summary>
    public const int RelayersFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_relayers_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> relayers_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Relayers {
      get { return relayers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ProviderInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ProviderInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Provider != other.Provider) return false;
      if(!relayers_.Equals(other.relayers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Provider.Length != 0) hash ^= Provider.GetHashCode();
      hash ^= relayers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Provider.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Provider);
      }
      relayers_.WriteTo(output, _repeated_relayers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Provider.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Provider);
      }
      relayers_.WriteTo(ref output, _repeated_relayers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Provider.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Provider);
      }
      size += relayers_.CalculateSize(_repeated_relayers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ProviderInfo other) {
      if (other == null) {
        return;
      }
      if (other.Provider.Length != 0) {
        Provider = other.Provider;
      }
      relayers_.Add(other.relayers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Provider = input.ReadString();
            break;
          }
          case 18: {
            relayers_.AddEntriesFrom(input, _repeated_relayers_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Provider = input.ReadString();
            break;
          }
          case 18: {
            relayers_.AddEntriesFrom(ref input, _repeated_relayers_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProviderState : pb::IMessage<ProviderState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProviderState> _parser = new pb::MessageParser<ProviderState>(() => new ProviderState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ProviderState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Oracle.V1Beta1.OracleReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProviderState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProviderState(ProviderState other) : this() {
      providerInfo_ = other.providerInfo_ != null ? other.providerInfo_.Clone() : null;
      providerPriceStates_ = other.providerPriceStates_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProviderState Clone() {
      return new ProviderState(this);
    }

    /// <summary>Field number for the "provider_info" field.</summary>
    public const int ProviderInfoFieldNumber = 1;
    private global::Injective.Oracle.V1Beta1.ProviderInfo providerInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Injective.Oracle.V1Beta1.ProviderInfo ProviderInfo {
      get { return providerInfo_; }
      set {
        providerInfo_ = value;
      }
    }

    /// <summary>Field number for the "provider_price_states" field.</summary>
    public const int ProviderPriceStatesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Injective.Oracle.V1Beta1.ProviderPriceState> _repeated_providerPriceStates_codec
        = pb::FieldCodec.ForMessage(18, global::Injective.Oracle.V1Beta1.ProviderPriceState.Parser);
    private readonly pbc::RepeatedField<global::Injective.Oracle.V1Beta1.ProviderPriceState> providerPriceStates_ = new pbc::RepeatedField<global::Injective.Oracle.V1Beta1.ProviderPriceState>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Injective.Oracle.V1Beta1.ProviderPriceState> ProviderPriceStates {
      get { return providerPriceStates_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ProviderState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ProviderState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ProviderInfo, other.ProviderInfo)) return false;
      if(!providerPriceStates_.Equals(other.providerPriceStates_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (providerInfo_ != null) hash ^= ProviderInfo.GetHashCode();
      hash ^= providerPriceStates_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (providerInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ProviderInfo);
      }
      providerPriceStates_.WriteTo(output, _repeated_providerPriceStates_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (providerInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ProviderInfo);
      }
      providerPriceStates_.WriteTo(ref output, _repeated_providerPriceStates_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (providerInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProviderInfo);
      }
      size += providerPriceStates_.CalculateSize(_repeated_providerPriceStates_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ProviderState other) {
      if (other == null) {
        return;
      }
      if (other.providerInfo_ != null) {
        if (providerInfo_ == null) {
          ProviderInfo = new global::Injective.Oracle.V1Beta1.ProviderInfo();
        }
        ProviderInfo.MergeFrom(other.ProviderInfo);
      }
      providerPriceStates_.Add(other.providerPriceStates_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (providerInfo_ == null) {
              ProviderInfo = new global::Injective.Oracle.V1Beta1.ProviderInfo();
            }
            input.ReadMessage(ProviderInfo);
            break;
          }
          case 18: {
            providerPriceStates_.AddEntriesFrom(input, _repeated_providerPriceStates_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (providerInfo_ == null) {
              ProviderInfo = new global::Injective.Oracle.V1Beta1.ProviderInfo();
            }
            input.ReadMessage(ProviderInfo);
            break;
          }
          case 18: {
            providerPriceStates_.AddEntriesFrom(ref input, _repeated_providerPriceStates_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProviderPriceState : pb::IMessage<ProviderPriceState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProviderPriceState> _parser = new pb::MessageParser<ProviderPriceState>(() => new ProviderPriceState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ProviderPriceState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Oracle.V1Beta1.OracleReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProviderPriceState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProviderPriceState(ProviderPriceState other) : this() {
      symbol_ = other.symbol_;
      state_ = other.state_ != null ? other.state_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProviderPriceState Clone() {
      return new ProviderPriceState(this);
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 1;
    private string symbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 2;
    private global::Injective.Oracle.V1Beta1.PriceState state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Injective.Oracle.V1Beta1.PriceState State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ProviderPriceState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ProviderPriceState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Symbol != other.Symbol) return false;
      if (!object.Equals(State, other.State)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (state_ != null) hash ^= State.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Symbol.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Symbol);
      }
      if (state_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Symbol.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Symbol);
      }
      if (state_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (state_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(State);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ProviderPriceState other) {
      if (other == null) {
        return;
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.state_ != null) {
        if (state_ == null) {
          State = new global::Injective.Oracle.V1Beta1.PriceState();
        }
        State.MergeFrom(other.State);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Symbol = input.ReadString();
            break;
          }
          case 18: {
            if (state_ == null) {
              State = new global::Injective.Oracle.V1Beta1.PriceState();
            }
            input.ReadMessage(State);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Symbol = input.ReadString();
            break;
          }
          case 18: {
            if (state_ == null) {
              State = new global::Injective.Oracle.V1Beta1.PriceState();
            }
            input.ReadMessage(State);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PriceFeedInfo : pb::IMessage<PriceFeedInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PriceFeedInfo> _parser = new pb::MessageParser<PriceFeedInfo>(() => new PriceFeedInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PriceFeedInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Oracle.V1Beta1.OracleReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PriceFeedInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PriceFeedInfo(PriceFeedInfo other) : this() {
      base_ = other.base_;
      quote_ = other.quote_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PriceFeedInfo Clone() {
      return new PriceFeedInfo(this);
    }

    /// <summary>Field number for the "base" field.</summary>
    public const int BaseFieldNumber = 1;
    private string base_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Base {
      get { return base_; }
      set {
        base_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "quote" field.</summary>
    public const int QuoteFieldNumber = 2;
    private string quote_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Quote {
      get { return quote_; }
      set {
        quote_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PriceFeedInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PriceFeedInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Base != other.Base) return false;
      if (Quote != other.Quote) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Base.Length != 0) hash ^= Base.GetHashCode();
      if (Quote.Length != 0) hash ^= Quote.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Base.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Base);
      }
      if (Quote.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Quote);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Base.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Base);
      }
      if (Quote.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Quote);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Base.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Base);
      }
      if (Quote.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Quote);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PriceFeedInfo other) {
      if (other == null) {
        return;
      }
      if (other.Base.Length != 0) {
        Base = other.Base;
      }
      if (other.Quote.Length != 0) {
        Quote = other.Quote;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Base = input.ReadString();
            break;
          }
          case 18: {
            Quote = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Base = input.ReadString();
            break;
          }
          case 18: {
            Quote = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PriceFeedPrice : pb::IMessage<PriceFeedPrice>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PriceFeedPrice> _parser = new pb::MessageParser<PriceFeedPrice>(() => new PriceFeedPrice());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PriceFeedPrice> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Oracle.V1Beta1.OracleReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PriceFeedPrice() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PriceFeedPrice(PriceFeedPrice other) : this() {
      price_ = other.price_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PriceFeedPrice Clone() {
      return new PriceFeedPrice(this);
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 1;
    private string price_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Price {
      get { return price_; }
      set {
        price_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PriceFeedPrice);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PriceFeedPrice other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Price != other.Price) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Price.Length != 0) hash ^= Price.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Price.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Price);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Price.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Price);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Price.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Price);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PriceFeedPrice other) {
      if (other == null) {
        return;
      }
      if (other.Price.Length != 0) {
        Price = other.Price;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Price = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Price = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CoinbasePriceState : pb::IMessage<CoinbasePriceState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CoinbasePriceState> _parser = new pb::MessageParser<CoinbasePriceState>(() => new CoinbasePriceState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CoinbasePriceState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Oracle.V1Beta1.OracleReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CoinbasePriceState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CoinbasePriceState(CoinbasePriceState other) : this() {
      kind_ = other.kind_;
      timestamp_ = other.timestamp_;
      key_ = other.key_;
      value_ = other.value_;
      priceState_ = other.priceState_ != null ? other.priceState_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CoinbasePriceState Clone() {
      return new CoinbasePriceState(this);
    }

    /// <summary>Field number for the "kind" field.</summary>
    public const int KindFieldNumber = 1;
    private string kind_ = "";
    /// <summary>
    /// kind should always be "prices"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Kind {
      get { return kind_; }
      set {
        kind_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 2;
    private ulong timestamp_;
    /// <summary>
    /// timestamp of the when the price was signed by coinbase
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 3;
    private string key_ = "";
    /// <summary>
    /// the symbol of the price, e.g. BTC
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 4;
    private ulong value_;
    /// <summary>
    /// the value of the price scaled by 1e6
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    /// <summary>Field number for the "price_state" field.</summary>
    public const int PriceStateFieldNumber = 5;
    private global::Injective.Oracle.V1Beta1.PriceState priceState_;
    /// <summary>
    /// the price state
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Injective.Oracle.V1Beta1.PriceState PriceState {
      get { return priceState_; }
      set {
        priceState_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CoinbasePriceState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CoinbasePriceState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Kind != other.Kind) return false;
      if (Timestamp != other.Timestamp) return false;
      if (Key != other.Key) return false;
      if (Value != other.Value) return false;
      if (!object.Equals(PriceState, other.PriceState)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Kind.Length != 0) hash ^= Kind.GetHashCode();
      if (Timestamp != 0UL) hash ^= Timestamp.GetHashCode();
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (Value != 0UL) hash ^= Value.GetHashCode();
      if (priceState_ != null) hash ^= PriceState.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Kind.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Kind);
      }
      if (Timestamp != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Timestamp);
      }
      if (Key.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Key);
      }
      if (Value != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(Value);
      }
      if (priceState_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PriceState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Kind.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Kind);
      }
      if (Timestamp != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Timestamp);
      }
      if (Key.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Key);
      }
      if (Value != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(Value);
      }
      if (priceState_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PriceState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Kind.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Kind);
      }
      if (Timestamp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Timestamp);
      }
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (Value != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Value);
      }
      if (priceState_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PriceState);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CoinbasePriceState other) {
      if (other == null) {
        return;
      }
      if (other.Kind.Length != 0) {
        Kind = other.Kind;
      }
      if (other.Timestamp != 0UL) {
        Timestamp = other.Timestamp;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.Value != 0UL) {
        Value = other.Value;
      }
      if (other.priceState_ != null) {
        if (priceState_ == null) {
          PriceState = new global::Injective.Oracle.V1Beta1.PriceState();
        }
        PriceState.MergeFrom(other.PriceState);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Kind = input.ReadString();
            break;
          }
          case 16: {
            Timestamp = input.ReadUInt64();
            break;
          }
          case 26: {
            Key = input.ReadString();
            break;
          }
          case 32: {
            Value = input.ReadUInt64();
            break;
          }
          case 42: {
            if (priceState_ == null) {
              PriceState = new global::Injective.Oracle.V1Beta1.PriceState();
            }
            input.ReadMessage(PriceState);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Kind = input.ReadString();
            break;
          }
          case 16: {
            Timestamp = input.ReadUInt64();
            break;
          }
          case 26: {
            Key = input.ReadString();
            break;
          }
          case 32: {
            Value = input.ReadUInt64();
            break;
          }
          case 42: {
            if (priceState_ == null) {
              PriceState = new global::Injective.Oracle.V1Beta1.PriceState();
            }
            input.ReadMessage(PriceState);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PriceState : pb::IMessage<PriceState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PriceState> _parser = new pb::MessageParser<PriceState>(() => new PriceState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PriceState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Oracle.V1Beta1.OracleReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PriceState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PriceState(PriceState other) : this() {
      price_ = other.price_;
      cumulativePrice_ = other.cumulativePrice_;
      timestamp_ = other.timestamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PriceState Clone() {
      return new PriceState(this);
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 1;
    private string price_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Price {
      get { return price_; }
      set {
        price_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cumulative_price" field.</summary>
    public const int CumulativePriceFieldNumber = 2;
    private string cumulativePrice_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CumulativePrice {
      get { return cumulativePrice_; }
      set {
        cumulativePrice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 3;
    private long timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PriceState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PriceState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Price != other.Price) return false;
      if (CumulativePrice != other.CumulativePrice) return false;
      if (Timestamp != other.Timestamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Price.Length != 0) hash ^= Price.GetHashCode();
      if (CumulativePrice.Length != 0) hash ^= CumulativePrice.GetHashCode();
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Price.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Price);
      }
      if (CumulativePrice.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CumulativePrice);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Price.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Price);
      }
      if (CumulativePrice.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CumulativePrice);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Price.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Price);
      }
      if (CumulativePrice.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CumulativePrice);
      }
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PriceState other) {
      if (other == null) {
        return;
      }
      if (other.Price.Length != 0) {
        Price = other.Price;
      }
      if (other.CumulativePrice.Length != 0) {
        CumulativePrice = other.CumulativePrice;
      }
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Price = input.ReadString();
            break;
          }
          case 18: {
            CumulativePrice = input.ReadString();
            break;
          }
          case 24: {
            Timestamp = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Price = input.ReadString();
            break;
          }
          case 18: {
            CumulativePrice = input.ReadString();
            break;
          }
          case 24: {
            Timestamp = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PythPriceState : pb::IMessage<PythPriceState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PythPriceState> _parser = new pb::MessageParser<PythPriceState>(() => new PythPriceState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PythPriceState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Oracle.V1Beta1.OracleReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PythPriceState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PythPriceState(PythPriceState other) : this() {
      priceId_ = other.priceId_;
      emaPrice_ = other.emaPrice_;
      emaConf_ = other.emaConf_;
      conf_ = other.conf_;
      publishTime_ = other.publishTime_;
      priceState_ = other.priceState_ != null ? other.priceState_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PythPriceState Clone() {
      return new PythPriceState(this);
    }

    /// <summary>Field number for the "price_id" field.</summary>
    public const int PriceIdFieldNumber = 1;
    private string priceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PriceId {
      get { return priceId_; }
      set {
        priceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ema_price" field.</summary>
    public const int EmaPriceFieldNumber = 2;
    private string emaPrice_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EmaPrice {
      get { return emaPrice_; }
      set {
        emaPrice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ema_conf" field.</summary>
    public const int EmaConfFieldNumber = 3;
    private string emaConf_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EmaConf {
      get { return emaConf_; }
      set {
        emaConf_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "conf" field.</summary>
    public const int ConfFieldNumber = 4;
    private string conf_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Conf {
      get { return conf_; }
      set {
        conf_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "publish_time" field.</summary>
    public const int PublishTimeFieldNumber = 5;
    private ulong publishTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong PublishTime {
      get { return publishTime_; }
      set {
        publishTime_ = value;
      }
    }

    /// <summary>Field number for the "price_state" field.</summary>
    public const int PriceStateFieldNumber = 6;
    private global::Injective.Oracle.V1Beta1.PriceState priceState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Injective.Oracle.V1Beta1.PriceState PriceState {
      get { return priceState_; }
      set {
        priceState_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PythPriceState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PythPriceState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PriceId != other.PriceId) return false;
      if (EmaPrice != other.EmaPrice) return false;
      if (EmaConf != other.EmaConf) return false;
      if (Conf != other.Conf) return false;
      if (PublishTime != other.PublishTime) return false;
      if (!object.Equals(PriceState, other.PriceState)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PriceId.Length != 0) hash ^= PriceId.GetHashCode();
      if (EmaPrice.Length != 0) hash ^= EmaPrice.GetHashCode();
      if (EmaConf.Length != 0) hash ^= EmaConf.GetHashCode();
      if (Conf.Length != 0) hash ^= Conf.GetHashCode();
      if (PublishTime != 0UL) hash ^= PublishTime.GetHashCode();
      if (priceState_ != null) hash ^= PriceState.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PriceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PriceId);
      }
      if (EmaPrice.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EmaPrice);
      }
      if (EmaConf.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(EmaConf);
      }
      if (Conf.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Conf);
      }
      if (PublishTime != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(PublishTime);
      }
      if (priceState_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(PriceState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PriceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PriceId);
      }
      if (EmaPrice.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EmaPrice);
      }
      if (EmaConf.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(EmaConf);
      }
      if (Conf.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Conf);
      }
      if (PublishTime != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(PublishTime);
      }
      if (priceState_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(PriceState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PriceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PriceId);
      }
      if (EmaPrice.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EmaPrice);
      }
      if (EmaConf.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EmaConf);
      }
      if (Conf.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Conf);
      }
      if (PublishTime != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PublishTime);
      }
      if (priceState_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PriceState);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PythPriceState other) {
      if (other == null) {
        return;
      }
      if (other.PriceId.Length != 0) {
        PriceId = other.PriceId;
      }
      if (other.EmaPrice.Length != 0) {
        EmaPrice = other.EmaPrice;
      }
      if (other.EmaConf.Length != 0) {
        EmaConf = other.EmaConf;
      }
      if (other.Conf.Length != 0) {
        Conf = other.Conf;
      }
      if (other.PublishTime != 0UL) {
        PublishTime = other.PublishTime;
      }
      if (other.priceState_ != null) {
        if (priceState_ == null) {
          PriceState = new global::Injective.Oracle.V1Beta1.PriceState();
        }
        PriceState.MergeFrom(other.PriceState);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PriceId = input.ReadString();
            break;
          }
          case 18: {
            EmaPrice = input.ReadString();
            break;
          }
          case 26: {
            EmaConf = input.ReadString();
            break;
          }
          case 34: {
            Conf = input.ReadString();
            break;
          }
          case 40: {
            PublishTime = input.ReadUInt64();
            break;
          }
          case 50: {
            if (priceState_ == null) {
              PriceState = new global::Injective.Oracle.V1Beta1.PriceState();
            }
            input.ReadMessage(PriceState);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PriceId = input.ReadString();
            break;
          }
          case 18: {
            EmaPrice = input.ReadString();
            break;
          }
          case 26: {
            EmaConf = input.ReadString();
            break;
          }
          case 34: {
            Conf = input.ReadString();
            break;
          }
          case 40: {
            PublishTime = input.ReadUInt64();
            break;
          }
          case 50: {
            if (priceState_ == null) {
              PriceState = new global::Injective.Oracle.V1Beta1.PriceState();
            }
            input.ReadMessage(PriceState);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BandOracleRequest : pb::IMessage<BandOracleRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BandOracleRequest> _parser = new pb::MessageParser<BandOracleRequest>(() => new BandOracleRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BandOracleRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Oracle.V1Beta1.OracleReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BandOracleRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BandOracleRequest(BandOracleRequest other) : this() {
      requestId_ = other.requestId_;
      oracleScriptId_ = other.oracleScriptId_;
      symbols_ = other.symbols_.Clone();
      askCount_ = other.askCount_;
      minCount_ = other.minCount_;
      feeLimit_ = other.feeLimit_.Clone();
      prepareGas_ = other.prepareGas_;
      executeGas_ = other.executeGas_;
      minSourceCount_ = other.minSourceCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BandOracleRequest Clone() {
      return new BandOracleRequest(this);
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private ulong requestId_;
    /// <summary>
    /// Unique Identifier for band ibc oracle request
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    /// <summary>Field number for the "oracle_script_id" field.</summary>
    public const int OracleScriptIdFieldNumber = 2;
    private long oracleScriptId_;
    /// <summary>
    /// OracleScriptID is the unique identifier of the oracle script to be
    /// executed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long OracleScriptId {
      get { return oracleScriptId_; }
      set {
        oracleScriptId_ = value;
      }
    }

    /// <summary>Field number for the "symbols" field.</summary>
    public const int SymbolsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_symbols_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> symbols_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Symbols is the list of symbols to prepare in the calldata
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Symbols {
      get { return symbols_; }
    }

    /// <summary>Field number for the "ask_count" field.</summary>
    public const int AskCountFieldNumber = 4;
    private ulong askCount_;
    /// <summary>
    /// AskCount is the number of validators that are requested to respond to this
    /// oracle request. Higher value means more security, at a higher gas cost.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong AskCount {
      get { return askCount_; }
      set {
        askCount_ = value;
      }
    }

    /// <summary>Field number for the "min_count" field.</summary>
    public const int MinCountFieldNumber = 5;
    private ulong minCount_;
    /// <summary>
    /// MinCount is the minimum number of validators necessary for the request to
    /// proceed to the execution phase. Higher value means more security, at the
    /// cost of liveness.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong MinCount {
      get { return minCount_; }
      set {
        minCount_ = value;
      }
    }

    /// <summary>Field number for the "fee_limit" field.</summary>
    public const int FeeLimitFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Cosmos.Base.V1Beta1.Coin> _repeated_feeLimit_codec
        = pb::FieldCodec.ForMessage(50, global::Cosmos.Base.V1Beta1.Coin.Parser);
    private readonly pbc::RepeatedField<global::Cosmos.Base.V1Beta1.Coin> feeLimit_ = new pbc::RepeatedField<global::Cosmos.Base.V1Beta1.Coin>();
    /// <summary>
    /// FeeLimit is the maximum tokens that will be paid to all data source
    /// providers.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Cosmos.Base.V1Beta1.Coin> FeeLimit {
      get { return feeLimit_; }
    }

    /// <summary>Field number for the "prepare_gas" field.</summary>
    public const int PrepareGasFieldNumber = 7;
    private ulong prepareGas_;
    /// <summary>
    /// PrepareGas is amount of gas to pay to prepare raw requests
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong PrepareGas {
      get { return prepareGas_; }
      set {
        prepareGas_ = value;
      }
    }

    /// <summary>Field number for the "execute_gas" field.</summary>
    public const int ExecuteGasFieldNumber = 8;
    private ulong executeGas_;
    /// <summary>
    /// ExecuteGas is amount of gas to reserve for executing
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong ExecuteGas {
      get { return executeGas_; }
      set {
        executeGas_ = value;
      }
    }

    /// <summary>Field number for the "min_source_count" field.</summary>
    public const int MinSourceCountFieldNumber = 9;
    private ulong minSourceCount_;
    /// <summary>
    /// MinSourceCount is the minimum number of data sources that must be used by
    /// each validator
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong MinSourceCount {
      get { return minSourceCount_; }
      set {
        minSourceCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BandOracleRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BandOracleRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (OracleScriptId != other.OracleScriptId) return false;
      if(!symbols_.Equals(other.symbols_)) return false;
      if (AskCount != other.AskCount) return false;
      if (MinCount != other.MinCount) return false;
      if(!feeLimit_.Equals(other.feeLimit_)) return false;
      if (PrepareGas != other.PrepareGas) return false;
      if (ExecuteGas != other.ExecuteGas) return false;
      if (MinSourceCount != other.MinSourceCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestId != 0UL) hash ^= RequestId.GetHashCode();
      if (OracleScriptId != 0L) hash ^= OracleScriptId.GetHashCode();
      hash ^= symbols_.GetHashCode();
      if (AskCount != 0UL) hash ^= AskCount.GetHashCode();
      if (MinCount != 0UL) hash ^= MinCount.GetHashCode();
      hash ^= feeLimit_.GetHashCode();
      if (PrepareGas != 0UL) hash ^= PrepareGas.GetHashCode();
      if (ExecuteGas != 0UL) hash ^= ExecuteGas.GetHashCode();
      if (MinSourceCount != 0UL) hash ^= MinSourceCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RequestId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(RequestId);
      }
      if (OracleScriptId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(OracleScriptId);
      }
      symbols_.WriteTo(output, _repeated_symbols_codec);
      if (AskCount != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(AskCount);
      }
      if (MinCount != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(MinCount);
      }
      feeLimit_.WriteTo(output, _repeated_feeLimit_codec);
      if (PrepareGas != 0UL) {
        output.WriteRawTag(56);
        output.WriteUInt64(PrepareGas);
      }
      if (ExecuteGas != 0UL) {
        output.WriteRawTag(64);
        output.WriteUInt64(ExecuteGas);
      }
      if (MinSourceCount != 0UL) {
        output.WriteRawTag(72);
        output.WriteUInt64(MinSourceCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RequestId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(RequestId);
      }
      if (OracleScriptId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(OracleScriptId);
      }
      symbols_.WriteTo(ref output, _repeated_symbols_codec);
      if (AskCount != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(AskCount);
      }
      if (MinCount != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(MinCount);
      }
      feeLimit_.WriteTo(ref output, _repeated_feeLimit_codec);
      if (PrepareGas != 0UL) {
        output.WriteRawTag(56);
        output.WriteUInt64(PrepareGas);
      }
      if (ExecuteGas != 0UL) {
        output.WriteRawTag(64);
        output.WriteUInt64(ExecuteGas);
      }
      if (MinSourceCount != 0UL) {
        output.WriteRawTag(72);
        output.WriteUInt64(MinSourceCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RequestId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RequestId);
      }
      if (OracleScriptId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OracleScriptId);
      }
      size += symbols_.CalculateSize(_repeated_symbols_codec);
      if (AskCount != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AskCount);
      }
      if (MinCount != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MinCount);
      }
      size += feeLimit_.CalculateSize(_repeated_feeLimit_codec);
      if (PrepareGas != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PrepareGas);
      }
      if (ExecuteGas != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ExecuteGas);
      }
      if (MinSourceCount != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MinSourceCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BandOracleRequest other) {
      if (other == null) {
        return;
      }
      if (other.RequestId != 0UL) {
        RequestId = other.RequestId;
      }
      if (other.OracleScriptId != 0L) {
        OracleScriptId = other.OracleScriptId;
      }
      symbols_.Add(other.symbols_);
      if (other.AskCount != 0UL) {
        AskCount = other.AskCount;
      }
      if (other.MinCount != 0UL) {
        MinCount = other.MinCount;
      }
      feeLimit_.Add(other.feeLimit_);
      if (other.PrepareGas != 0UL) {
        PrepareGas = other.PrepareGas;
      }
      if (other.ExecuteGas != 0UL) {
        ExecuteGas = other.ExecuteGas;
      }
      if (other.MinSourceCount != 0UL) {
        MinSourceCount = other.MinSourceCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestId = input.ReadUInt64();
            break;
          }
          case 16: {
            OracleScriptId = input.ReadInt64();
            break;
          }
          case 26: {
            symbols_.AddEntriesFrom(input, _repeated_symbols_codec);
            break;
          }
          case 32: {
            AskCount = input.ReadUInt64();
            break;
          }
          case 40: {
            MinCount = input.ReadUInt64();
            break;
          }
          case 50: {
            feeLimit_.AddEntriesFrom(input, _repeated_feeLimit_codec);
            break;
          }
          case 56: {
            PrepareGas = input.ReadUInt64();
            break;
          }
          case 64: {
            ExecuteGas = input.ReadUInt64();
            break;
          }
          case 72: {
            MinSourceCount = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RequestId = input.ReadUInt64();
            break;
          }
          case 16: {
            OracleScriptId = input.ReadInt64();
            break;
          }
          case 26: {
            symbols_.AddEntriesFrom(ref input, _repeated_symbols_codec);
            break;
          }
          case 32: {
            AskCount = input.ReadUInt64();
            break;
          }
          case 40: {
            MinCount = input.ReadUInt64();
            break;
          }
          case 50: {
            feeLimit_.AddEntriesFrom(ref input, _repeated_feeLimit_codec);
            break;
          }
          case 56: {
            PrepareGas = input.ReadUInt64();
            break;
          }
          case 64: {
            ExecuteGas = input.ReadUInt64();
            break;
          }
          case 72: {
            MinSourceCount = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BandIBCParams : pb::IMessage<BandIBCParams>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BandIBCParams> _parser = new pb::MessageParser<BandIBCParams>(() => new BandIBCParams());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BandIBCParams> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Oracle.V1Beta1.OracleReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BandIBCParams() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BandIBCParams(BandIBCParams other) : this() {
      bandIbcEnabled_ = other.bandIbcEnabled_;
      ibcRequestInterval_ = other.ibcRequestInterval_;
      ibcSourceChannel_ = other.ibcSourceChannel_;
      ibcVersion_ = other.ibcVersion_;
      ibcPortId_ = other.ibcPortId_;
      legacyOracleIds_ = other.legacyOracleIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BandIBCParams Clone() {
      return new BandIBCParams(this);
    }

    /// <summary>Field number for the "band_ibc_enabled" field.</summary>
    public const int BandIbcEnabledFieldNumber = 1;
    private bool bandIbcEnabled_;
    /// <summary>
    /// true if Band IBC should be enabled
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool BandIbcEnabled {
      get { return bandIbcEnabled_; }
      set {
        bandIbcEnabled_ = value;
      }
    }

    /// <summary>Field number for the "ibc_request_interval" field.</summary>
    public const int IbcRequestIntervalFieldNumber = 2;
    private long ibcRequestInterval_;
    /// <summary>
    /// block request interval to send Band IBC prices
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long IbcRequestInterval {
      get { return ibcRequestInterval_; }
      set {
        ibcRequestInterval_ = value;
      }
    }

    /// <summary>Field number for the "ibc_source_channel" field.</summary>
    public const int IbcSourceChannelFieldNumber = 3;
    private string ibcSourceChannel_ = "";
    /// <summary>
    /// band IBC source channel
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string IbcSourceChannel {
      get { return ibcSourceChannel_; }
      set {
        ibcSourceChannel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ibc_version" field.</summary>
    public const int IbcVersionFieldNumber = 4;
    private string ibcVersion_ = "";
    /// <summary>
    /// band IBC version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string IbcVersion {
      get { return ibcVersion_; }
      set {
        ibcVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ibc_port_id" field.</summary>
    public const int IbcPortIdFieldNumber = 5;
    private string ibcPortId_ = "";
    /// <summary>
    /// band IBC portID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string IbcPortId {
      get { return ibcPortId_; }
      set {
        ibcPortId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "legacy_oracle_ids" field.</summary>
    public const int LegacyOracleIdsFieldNumber = 6;
    private static readonly pb::FieldCodec<long> _repeated_legacyOracleIds_codec
        = pb::FieldCodec.ForInt64(50);
    private readonly pbc::RepeatedField<long> legacyOracleIds_ = new pbc::RepeatedField<long>();
    /// <summary>
    ///  legacy oracle scheme ids
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> LegacyOracleIds {
      get { return legacyOracleIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BandIBCParams);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BandIBCParams other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BandIbcEnabled != other.BandIbcEnabled) return false;
      if (IbcRequestInterval != other.IbcRequestInterval) return false;
      if (IbcSourceChannel != other.IbcSourceChannel) return false;
      if (IbcVersion != other.IbcVersion) return false;
      if (IbcPortId != other.IbcPortId) return false;
      if(!legacyOracleIds_.Equals(other.legacyOracleIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (BandIbcEnabled != false) hash ^= BandIbcEnabled.GetHashCode();
      if (IbcRequestInterval != 0L) hash ^= IbcRequestInterval.GetHashCode();
      if (IbcSourceChannel.Length != 0) hash ^= IbcSourceChannel.GetHashCode();
      if (IbcVersion.Length != 0) hash ^= IbcVersion.GetHashCode();
      if (IbcPortId.Length != 0) hash ^= IbcPortId.GetHashCode();
      hash ^= legacyOracleIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BandIbcEnabled != false) {
        output.WriteRawTag(8);
        output.WriteBool(BandIbcEnabled);
      }
      if (IbcRequestInterval != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(IbcRequestInterval);
      }
      if (IbcSourceChannel.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(IbcSourceChannel);
      }
      if (IbcVersion.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(IbcVersion);
      }
      if (IbcPortId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(IbcPortId);
      }
      legacyOracleIds_.WriteTo(output, _repeated_legacyOracleIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BandIbcEnabled != false) {
        output.WriteRawTag(8);
        output.WriteBool(BandIbcEnabled);
      }
      if (IbcRequestInterval != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(IbcRequestInterval);
      }
      if (IbcSourceChannel.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(IbcSourceChannel);
      }
      if (IbcVersion.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(IbcVersion);
      }
      if (IbcPortId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(IbcPortId);
      }
      legacyOracleIds_.WriteTo(ref output, _repeated_legacyOracleIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (BandIbcEnabled != false) {
        size += 1 + 1;
      }
      if (IbcRequestInterval != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(IbcRequestInterval);
      }
      if (IbcSourceChannel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IbcSourceChannel);
      }
      if (IbcVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IbcVersion);
      }
      if (IbcPortId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IbcPortId);
      }
      size += legacyOracleIds_.CalculateSize(_repeated_legacyOracleIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BandIBCParams other) {
      if (other == null) {
        return;
      }
      if (other.BandIbcEnabled != false) {
        BandIbcEnabled = other.BandIbcEnabled;
      }
      if (other.IbcRequestInterval != 0L) {
        IbcRequestInterval = other.IbcRequestInterval;
      }
      if (other.IbcSourceChannel.Length != 0) {
        IbcSourceChannel = other.IbcSourceChannel;
      }
      if (other.IbcVersion.Length != 0) {
        IbcVersion = other.IbcVersion;
      }
      if (other.IbcPortId.Length != 0) {
        IbcPortId = other.IbcPortId;
      }
      legacyOracleIds_.Add(other.legacyOracleIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BandIbcEnabled = input.ReadBool();
            break;
          }
          case 16: {
            IbcRequestInterval = input.ReadInt64();
            break;
          }
          case 26: {
            IbcSourceChannel = input.ReadString();
            break;
          }
          case 34: {
            IbcVersion = input.ReadString();
            break;
          }
          case 42: {
            IbcPortId = input.ReadString();
            break;
          }
          case 50:
          case 48: {
            legacyOracleIds_.AddEntriesFrom(input, _repeated_legacyOracleIds_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BandIbcEnabled = input.ReadBool();
            break;
          }
          case 16: {
            IbcRequestInterval = input.ReadInt64();
            break;
          }
          case 26: {
            IbcSourceChannel = input.ReadString();
            break;
          }
          case 34: {
            IbcVersion = input.ReadString();
            break;
          }
          case 42: {
            IbcPortId = input.ReadString();
            break;
          }
          case 50:
          case 48: {
            legacyOracleIds_.AddEntriesFrom(ref input, _repeated_legacyOracleIds_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SymbolPriceTimestamp : pb::IMessage<SymbolPriceTimestamp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SymbolPriceTimestamp> _parser = new pb::MessageParser<SymbolPriceTimestamp>(() => new SymbolPriceTimestamp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SymbolPriceTimestamp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Oracle.V1Beta1.OracleReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SymbolPriceTimestamp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SymbolPriceTimestamp(SymbolPriceTimestamp other) : this() {
      oracle_ = other.oracle_;
      symbolId_ = other.symbolId_;
      timestamp_ = other.timestamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SymbolPriceTimestamp Clone() {
      return new SymbolPriceTimestamp(this);
    }

    /// <summary>Field number for the "oracle" field.</summary>
    public const int OracleFieldNumber = 1;
    private global::Injective.Oracle.V1Beta1.OracleType oracle_ = global::Injective.Oracle.V1Beta1.OracleType.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Injective.Oracle.V1Beta1.OracleType Oracle {
      get { return oracle_; }
      set {
        oracle_ = value;
      }
    }

    /// <summary>Field number for the "symbol_id" field.</summary>
    public const int SymbolIdFieldNumber = 2;
    private string symbolId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SymbolId {
      get { return symbolId_; }
      set {
        symbolId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 3;
    private long timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SymbolPriceTimestamp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SymbolPriceTimestamp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Oracle != other.Oracle) return false;
      if (SymbolId != other.SymbolId) return false;
      if (Timestamp != other.Timestamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Oracle != global::Injective.Oracle.V1Beta1.OracleType.Unspecified) hash ^= Oracle.GetHashCode();
      if (SymbolId.Length != 0) hash ^= SymbolId.GetHashCode();
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Oracle != global::Injective.Oracle.V1Beta1.OracleType.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Oracle);
      }
      if (SymbolId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SymbolId);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Oracle != global::Injective.Oracle.V1Beta1.OracleType.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Oracle);
      }
      if (SymbolId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SymbolId);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Oracle != global::Injective.Oracle.V1Beta1.OracleType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Oracle);
      }
      if (SymbolId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SymbolId);
      }
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SymbolPriceTimestamp other) {
      if (other == null) {
        return;
      }
      if (other.Oracle != global::Injective.Oracle.V1Beta1.OracleType.Unspecified) {
        Oracle = other.Oracle;
      }
      if (other.SymbolId.Length != 0) {
        SymbolId = other.SymbolId;
      }
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Oracle = (global::Injective.Oracle.V1Beta1.OracleType) input.ReadEnum();
            break;
          }
          case 18: {
            SymbolId = input.ReadString();
            break;
          }
          case 24: {
            Timestamp = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Oracle = (global::Injective.Oracle.V1Beta1.OracleType) input.ReadEnum();
            break;
          }
          case 18: {
            SymbolId = input.ReadString();
            break;
          }
          case 24: {
            Timestamp = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LastPriceTimestamps : pb::IMessage<LastPriceTimestamps>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LastPriceTimestamps> _parser = new pb::MessageParser<LastPriceTimestamps>(() => new LastPriceTimestamps());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LastPriceTimestamps> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Oracle.V1Beta1.OracleReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LastPriceTimestamps() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LastPriceTimestamps(LastPriceTimestamps other) : this() {
      lastPriceTimestamps_ = other.lastPriceTimestamps_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LastPriceTimestamps Clone() {
      return new LastPriceTimestamps(this);
    }

    /// <summary>Field number for the "last_price_timestamps" field.</summary>
    public const int LastPriceTimestamps_FieldNumber = 1;
    private static readonly pb::FieldCodec<global::Injective.Oracle.V1Beta1.SymbolPriceTimestamp> _repeated_lastPriceTimestamps_codec
        = pb::FieldCodec.ForMessage(10, global::Injective.Oracle.V1Beta1.SymbolPriceTimestamp.Parser);
    private readonly pbc::RepeatedField<global::Injective.Oracle.V1Beta1.SymbolPriceTimestamp> lastPriceTimestamps_ = new pbc::RepeatedField<global::Injective.Oracle.V1Beta1.SymbolPriceTimestamp>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Injective.Oracle.V1Beta1.SymbolPriceTimestamp> LastPriceTimestamps_ {
      get { return lastPriceTimestamps_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LastPriceTimestamps);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LastPriceTimestamps other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!lastPriceTimestamps_.Equals(other.lastPriceTimestamps_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= lastPriceTimestamps_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      lastPriceTimestamps_.WriteTo(output, _repeated_lastPriceTimestamps_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      lastPriceTimestamps_.WriteTo(ref output, _repeated_lastPriceTimestamps_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += lastPriceTimestamps_.CalculateSize(_repeated_lastPriceTimestamps_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LastPriceTimestamps other) {
      if (other == null) {
        return;
      }
      lastPriceTimestamps_.Add(other.lastPriceTimestamps_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            lastPriceTimestamps_.AddEntriesFrom(input, _repeated_lastPriceTimestamps_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            lastPriceTimestamps_.AddEntriesFrom(ref input, _repeated_lastPriceTimestamps_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PriceRecords : pb::IMessage<PriceRecords>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PriceRecords> _parser = new pb::MessageParser<PriceRecords>(() => new PriceRecords());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PriceRecords> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Oracle.V1Beta1.OracleReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PriceRecords() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PriceRecords(PriceRecords other) : this() {
      oracle_ = other.oracle_;
      symbolId_ = other.symbolId_;
      latestPriceRecords_ = other.latestPriceRecords_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PriceRecords Clone() {
      return new PriceRecords(this);
    }

    /// <summary>Field number for the "oracle" field.</summary>
    public const int OracleFieldNumber = 1;
    private global::Injective.Oracle.V1Beta1.OracleType oracle_ = global::Injective.Oracle.V1Beta1.OracleType.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Injective.Oracle.V1Beta1.OracleType Oracle {
      get { return oracle_; }
      set {
        oracle_ = value;
      }
    }

    /// <summary>Field number for the "symbol_id" field.</summary>
    public const int SymbolIdFieldNumber = 2;
    private string symbolId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SymbolId {
      get { return symbolId_; }
      set {
        symbolId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "latest_price_records" field.</summary>
    public const int LatestPriceRecordsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Injective.Oracle.V1Beta1.PriceRecord> _repeated_latestPriceRecords_codec
        = pb::FieldCodec.ForMessage(26, global::Injective.Oracle.V1Beta1.PriceRecord.Parser);
    private readonly pbc::RepeatedField<global::Injective.Oracle.V1Beta1.PriceRecord> latestPriceRecords_ = new pbc::RepeatedField<global::Injective.Oracle.V1Beta1.PriceRecord>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Injective.Oracle.V1Beta1.PriceRecord> LatestPriceRecords {
      get { return latestPriceRecords_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PriceRecords);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PriceRecords other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Oracle != other.Oracle) return false;
      if (SymbolId != other.SymbolId) return false;
      if(!latestPriceRecords_.Equals(other.latestPriceRecords_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Oracle != global::Injective.Oracle.V1Beta1.OracleType.Unspecified) hash ^= Oracle.GetHashCode();
      if (SymbolId.Length != 0) hash ^= SymbolId.GetHashCode();
      hash ^= latestPriceRecords_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Oracle != global::Injective.Oracle.V1Beta1.OracleType.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Oracle);
      }
      if (SymbolId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SymbolId);
      }
      latestPriceRecords_.WriteTo(output, _repeated_latestPriceRecords_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Oracle != global::Injective.Oracle.V1Beta1.OracleType.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Oracle);
      }
      if (SymbolId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SymbolId);
      }
      latestPriceRecords_.WriteTo(ref output, _repeated_latestPriceRecords_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Oracle != global::Injective.Oracle.V1Beta1.OracleType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Oracle);
      }
      if (SymbolId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SymbolId);
      }
      size += latestPriceRecords_.CalculateSize(_repeated_latestPriceRecords_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PriceRecords other) {
      if (other == null) {
        return;
      }
      if (other.Oracle != global::Injective.Oracle.V1Beta1.OracleType.Unspecified) {
        Oracle = other.Oracle;
      }
      if (other.SymbolId.Length != 0) {
        SymbolId = other.SymbolId;
      }
      latestPriceRecords_.Add(other.latestPriceRecords_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Oracle = (global::Injective.Oracle.V1Beta1.OracleType) input.ReadEnum();
            break;
          }
          case 18: {
            SymbolId = input.ReadString();
            break;
          }
          case 26: {
            latestPriceRecords_.AddEntriesFrom(input, _repeated_latestPriceRecords_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Oracle = (global::Injective.Oracle.V1Beta1.OracleType) input.ReadEnum();
            break;
          }
          case 18: {
            SymbolId = input.ReadString();
            break;
          }
          case 26: {
            latestPriceRecords_.AddEntriesFrom(ref input, _repeated_latestPriceRecords_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PriceRecord : pb::IMessage<PriceRecord>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PriceRecord> _parser = new pb::MessageParser<PriceRecord>(() => new PriceRecord());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PriceRecord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Oracle.V1Beta1.OracleReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PriceRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PriceRecord(PriceRecord other) : this() {
      timestamp_ = other.timestamp_;
      price_ = other.price_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PriceRecord Clone() {
      return new PriceRecord(this);
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 1;
    private long timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 2;
    private string price_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Price {
      get { return price_; }
      set {
        price_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PriceRecord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PriceRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Timestamp != other.Timestamp) return false;
      if (Price != other.Price) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      if (Price.Length != 0) hash ^= Price.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Timestamp != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Timestamp);
      }
      if (Price.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Price);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Timestamp != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Timestamp);
      }
      if (Price.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Price);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (Price.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Price);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PriceRecord other) {
      if (other == null) {
        return;
      }
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      if (other.Price.Length != 0) {
        Price = other.Price;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 18: {
            Price = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 18: {
            Price = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// MetadataStatistics refers to the metadata summary statistics of the
  /// historical sample considered
  /// </summary>
  public sealed partial class MetadataStatistics : pb::IMessage<MetadataStatistics>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MetadataStatistics> _parser = new pb::MessageParser<MetadataStatistics>(() => new MetadataStatistics());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MetadataStatistics> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Oracle.V1Beta1.OracleReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MetadataStatistics() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MetadataStatistics(MetadataStatistics other) : this() {
      groupCount_ = other.groupCount_;
      recordsSampleSize_ = other.recordsSampleSize_;
      mean_ = other.mean_;
      twap_ = other.twap_;
      firstTimestamp_ = other.firstTimestamp_;
      lastTimestamp_ = other.lastTimestamp_;
      minPrice_ = other.minPrice_;
      maxPrice_ = other.maxPrice_;
      medianPrice_ = other.medianPrice_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MetadataStatistics Clone() {
      return new MetadataStatistics(this);
    }

    /// <summary>Field number for the "group_count" field.</summary>
    public const int GroupCountFieldNumber = 1;
    private uint groupCount_;
    /// <summary>
    /// GroupCount refers to the number of groups used. Equals RecordsSampleSize if
    /// no grouping is used
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GroupCount {
      get { return groupCount_; }
      set {
        groupCount_ = value;
      }
    }

    /// <summary>Field number for the "records_sample_size" field.</summary>
    public const int RecordsSampleSizeFieldNumber = 2;
    private uint recordsSampleSize_;
    /// <summary>
    /// RecordsSampleSize refers to the total number of records used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RecordsSampleSize {
      get { return recordsSampleSize_; }
      set {
        recordsSampleSize_ = value;
      }
    }

    /// <summary>Field number for the "mean" field.</summary>
    public const int MeanFieldNumber = 3;
    private string mean_ = "";
    /// <summary>
    /// Mean refers to the arithmetic mean
    /// For trades, the mean is the VWAP computed over the grouped trade records ∑
    /// (price * quantity) / ∑ quantity For oracle prices, the mean is computed
    /// over the price records ∑ (price) / prices_count
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Mean {
      get { return mean_; }
      set {
        mean_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "twap" field.</summary>
    public const int TwapFieldNumber = 4;
    private string twap_ = "";
    /// <summary>
    /// TWAP refers to the time-weighted average price which equals ∑ (price_i *
    /// ∆t_i) / ∑ ∆t_i where ∆t_i = t_i - t_{i-1}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Twap {
      get { return twap_; }
      set {
        twap_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "first_timestamp" field.</summary>
    public const int FirstTimestampFieldNumber = 5;
    private long firstTimestamp_;
    /// <summary>
    /// FirstTimestamp is the timestamp of the oldest record considered
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long FirstTimestamp {
      get { return firstTimestamp_; }
      set {
        firstTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "last_timestamp" field.</summary>
    public const int LastTimestampFieldNumber = 6;
    private long lastTimestamp_;
    /// <summary>
    /// LastTimestamp is the timestamp of the youngest record considered
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long LastTimestamp {
      get { return lastTimestamp_; }
      set {
        lastTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "min_price" field.</summary>
    public const int MinPriceFieldNumber = 7;
    private string minPrice_ = "";
    /// <summary>
    /// MinPrice refers to the smallest individual raw price considered
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MinPrice {
      get { return minPrice_; }
      set {
        minPrice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "max_price" field.</summary>
    public const int MaxPriceFieldNumber = 8;
    private string maxPrice_ = "";
    /// <summary>
    /// MaxPrice refers to the largest individual raw price considered
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MaxPrice {
      get { return maxPrice_; }
      set {
        maxPrice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "median_price" field.</summary>
    public const int MedianPriceFieldNumber = 9;
    private string medianPrice_ = "";
    /// <summary>
    /// MedianPrice refers to the median individual raw price considered
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MedianPrice {
      get { return medianPrice_; }
      set {
        medianPrice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MetadataStatistics);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MetadataStatistics other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GroupCount != other.GroupCount) return false;
      if (RecordsSampleSize != other.RecordsSampleSize) return false;
      if (Mean != other.Mean) return false;
      if (Twap != other.Twap) return false;
      if (FirstTimestamp != other.FirstTimestamp) return false;
      if (LastTimestamp != other.LastTimestamp) return false;
      if (MinPrice != other.MinPrice) return false;
      if (MaxPrice != other.MaxPrice) return false;
      if (MedianPrice != other.MedianPrice) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (GroupCount != 0) hash ^= GroupCount.GetHashCode();
      if (RecordsSampleSize != 0) hash ^= RecordsSampleSize.GetHashCode();
      if (Mean.Length != 0) hash ^= Mean.GetHashCode();
      if (Twap.Length != 0) hash ^= Twap.GetHashCode();
      if (FirstTimestamp != 0L) hash ^= FirstTimestamp.GetHashCode();
      if (LastTimestamp != 0L) hash ^= LastTimestamp.GetHashCode();
      if (MinPrice.Length != 0) hash ^= MinPrice.GetHashCode();
      if (MaxPrice.Length != 0) hash ^= MaxPrice.GetHashCode();
      if (MedianPrice.Length != 0) hash ^= MedianPrice.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GroupCount != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(GroupCount);
      }
      if (RecordsSampleSize != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(RecordsSampleSize);
      }
      if (Mean.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Mean);
      }
      if (Twap.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Twap);
      }
      if (FirstTimestamp != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(FirstTimestamp);
      }
      if (LastTimestamp != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(LastTimestamp);
      }
      if (MinPrice.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(MinPrice);
      }
      if (MaxPrice.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(MaxPrice);
      }
      if (MedianPrice.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(MedianPrice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GroupCount != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(GroupCount);
      }
      if (RecordsSampleSize != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(RecordsSampleSize);
      }
      if (Mean.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Mean);
      }
      if (Twap.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Twap);
      }
      if (FirstTimestamp != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(FirstTimestamp);
      }
      if (LastTimestamp != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(LastTimestamp);
      }
      if (MinPrice.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(MinPrice);
      }
      if (MaxPrice.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(MaxPrice);
      }
      if (MedianPrice.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(MedianPrice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (GroupCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GroupCount);
      }
      if (RecordsSampleSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RecordsSampleSize);
      }
      if (Mean.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Mean);
      }
      if (Twap.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Twap);
      }
      if (FirstTimestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FirstTimestamp);
      }
      if (LastTimestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastTimestamp);
      }
      if (MinPrice.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MinPrice);
      }
      if (MaxPrice.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MaxPrice);
      }
      if (MedianPrice.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MedianPrice);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MetadataStatistics other) {
      if (other == null) {
        return;
      }
      if (other.GroupCount != 0) {
        GroupCount = other.GroupCount;
      }
      if (other.RecordsSampleSize != 0) {
        RecordsSampleSize = other.RecordsSampleSize;
      }
      if (other.Mean.Length != 0) {
        Mean = other.Mean;
      }
      if (other.Twap.Length != 0) {
        Twap = other.Twap;
      }
      if (other.FirstTimestamp != 0L) {
        FirstTimestamp = other.FirstTimestamp;
      }
      if (other.LastTimestamp != 0L) {
        LastTimestamp = other.LastTimestamp;
      }
      if (other.MinPrice.Length != 0) {
        MinPrice = other.MinPrice;
      }
      if (other.MaxPrice.Length != 0) {
        MaxPrice = other.MaxPrice;
      }
      if (other.MedianPrice.Length != 0) {
        MedianPrice = other.MedianPrice;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GroupCount = input.ReadUInt32();
            break;
          }
          case 16: {
            RecordsSampleSize = input.ReadUInt32();
            break;
          }
          case 26: {
            Mean = input.ReadString();
            break;
          }
          case 34: {
            Twap = input.ReadString();
            break;
          }
          case 40: {
            FirstTimestamp = input.ReadInt64();
            break;
          }
          case 48: {
            LastTimestamp = input.ReadInt64();
            break;
          }
          case 58: {
            MinPrice = input.ReadString();
            break;
          }
          case 66: {
            MaxPrice = input.ReadString();
            break;
          }
          case 74: {
            MedianPrice = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GroupCount = input.ReadUInt32();
            break;
          }
          case 16: {
            RecordsSampleSize = input.ReadUInt32();
            break;
          }
          case 26: {
            Mean = input.ReadString();
            break;
          }
          case 34: {
            Twap = input.ReadString();
            break;
          }
          case 40: {
            FirstTimestamp = input.ReadInt64();
            break;
          }
          case 48: {
            LastTimestamp = input.ReadInt64();
            break;
          }
          case 58: {
            MinPrice = input.ReadString();
            break;
          }
          case 66: {
            MaxPrice = input.ReadString();
            break;
          }
          case 74: {
            MedianPrice = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PriceAttestation : pb::IMessage<PriceAttestation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PriceAttestation> _parser = new pb::MessageParser<PriceAttestation>(() => new PriceAttestation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PriceAttestation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Oracle.V1Beta1.OracleReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PriceAttestation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PriceAttestation(PriceAttestation other) : this() {
      priceId_ = other.priceId_;
      price_ = other.price_;
      conf_ = other.conf_;
      expo_ = other.expo_;
      emaPrice_ = other.emaPrice_;
      emaConf_ = other.emaConf_;
      emaExpo_ = other.emaExpo_;
      publishTime_ = other.publishTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PriceAttestation Clone() {
      return new PriceAttestation(this);
    }

    /// <summary>Field number for the "price_id" field.</summary>
    public const int PriceIdFieldNumber = 1;
    private string priceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PriceId {
      get { return priceId_; }
      set {
        priceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 2;
    private long price_;
    /// <summary>
    /// MaxPrice refers to the largest individual raw price considered
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Price {
      get { return price_; }
      set {
        price_ = value;
      }
    }

    /// <summary>Field number for the "conf" field.</summary>
    public const int ConfFieldNumber = 3;
    private ulong conf_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Conf {
      get { return conf_; }
      set {
        conf_ = value;
      }
    }

    /// <summary>Field number for the "expo" field.</summary>
    public const int ExpoFieldNumber = 4;
    private int expo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Expo {
      get { return expo_; }
      set {
        expo_ = value;
      }
    }

    /// <summary>Field number for the "ema_price" field.</summary>
    public const int EmaPriceFieldNumber = 5;
    private long emaPrice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long EmaPrice {
      get { return emaPrice_; }
      set {
        emaPrice_ = value;
      }
    }

    /// <summary>Field number for the "ema_conf" field.</summary>
    public const int EmaConfFieldNumber = 6;
    private ulong emaConf_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong EmaConf {
      get { return emaConf_; }
      set {
        emaConf_ = value;
      }
    }

    /// <summary>Field number for the "ema_expo" field.</summary>
    public const int EmaExpoFieldNumber = 7;
    private int emaExpo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EmaExpo {
      get { return emaExpo_; }
      set {
        emaExpo_ = value;
      }
    }

    /// <summary>Field number for the "publish_time" field.</summary>
    public const int PublishTimeFieldNumber = 8;
    private long publishTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long PublishTime {
      get { return publishTime_; }
      set {
        publishTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PriceAttestation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PriceAttestation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PriceId != other.PriceId) return false;
      if (Price != other.Price) return false;
      if (Conf != other.Conf) return false;
      if (Expo != other.Expo) return false;
      if (EmaPrice != other.EmaPrice) return false;
      if (EmaConf != other.EmaConf) return false;
      if (EmaExpo != other.EmaExpo) return false;
      if (PublishTime != other.PublishTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PriceId.Length != 0) hash ^= PriceId.GetHashCode();
      if (Price != 0L) hash ^= Price.GetHashCode();
      if (Conf != 0UL) hash ^= Conf.GetHashCode();
      if (Expo != 0) hash ^= Expo.GetHashCode();
      if (EmaPrice != 0L) hash ^= EmaPrice.GetHashCode();
      if (EmaConf != 0UL) hash ^= EmaConf.GetHashCode();
      if (EmaExpo != 0) hash ^= EmaExpo.GetHashCode();
      if (PublishTime != 0L) hash ^= PublishTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PriceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PriceId);
      }
      if (Price != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Price);
      }
      if (Conf != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Conf);
      }
      if (Expo != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Expo);
      }
      if (EmaPrice != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(EmaPrice);
      }
      if (EmaConf != 0UL) {
        output.WriteRawTag(48);
        output.WriteUInt64(EmaConf);
      }
      if (EmaExpo != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(EmaExpo);
      }
      if (PublishTime != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(PublishTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PriceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PriceId);
      }
      if (Price != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Price);
      }
      if (Conf != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Conf);
      }
      if (Expo != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Expo);
      }
      if (EmaPrice != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(EmaPrice);
      }
      if (EmaConf != 0UL) {
        output.WriteRawTag(48);
        output.WriteUInt64(EmaConf);
      }
      if (EmaExpo != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(EmaExpo);
      }
      if (PublishTime != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(PublishTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PriceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PriceId);
      }
      if (Price != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Price);
      }
      if (Conf != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Conf);
      }
      if (Expo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Expo);
      }
      if (EmaPrice != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EmaPrice);
      }
      if (EmaConf != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(EmaConf);
      }
      if (EmaExpo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EmaExpo);
      }
      if (PublishTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PublishTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PriceAttestation other) {
      if (other == null) {
        return;
      }
      if (other.PriceId.Length != 0) {
        PriceId = other.PriceId;
      }
      if (other.Price != 0L) {
        Price = other.Price;
      }
      if (other.Conf != 0UL) {
        Conf = other.Conf;
      }
      if (other.Expo != 0) {
        Expo = other.Expo;
      }
      if (other.EmaPrice != 0L) {
        EmaPrice = other.EmaPrice;
      }
      if (other.EmaConf != 0UL) {
        EmaConf = other.EmaConf;
      }
      if (other.EmaExpo != 0) {
        EmaExpo = other.EmaExpo;
      }
      if (other.PublishTime != 0L) {
        PublishTime = other.PublishTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PriceId = input.ReadString();
            break;
          }
          case 16: {
            Price = input.ReadInt64();
            break;
          }
          case 24: {
            Conf = input.ReadUInt64();
            break;
          }
          case 32: {
            Expo = input.ReadInt32();
            break;
          }
          case 40: {
            EmaPrice = input.ReadInt64();
            break;
          }
          case 48: {
            EmaConf = input.ReadUInt64();
            break;
          }
          case 56: {
            EmaExpo = input.ReadInt32();
            break;
          }
          case 64: {
            PublishTime = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PriceId = input.ReadString();
            break;
          }
          case 16: {
            Price = input.ReadInt64();
            break;
          }
          case 24: {
            Conf = input.ReadUInt64();
            break;
          }
          case 32: {
            Expo = input.ReadInt32();
            break;
          }
          case 40: {
            EmaPrice = input.ReadInt64();
            break;
          }
          case 48: {
            EmaConf = input.ReadUInt64();
            break;
          }
          case 56: {
            EmaExpo = input.ReadInt32();
            break;
          }
          case 64: {
            PublishTime = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
