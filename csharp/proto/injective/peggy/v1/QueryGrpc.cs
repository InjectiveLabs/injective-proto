// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: injective/peggy/v1/query.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Injective.Peggy.V1 {
  /// <summary>
  /// Query defines the gRPC querier service
  /// </summary>
  public static partial class Query
  {
    static readonly string __ServiceName = "injective.peggy.v1.Query";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Injective.Peggy.V1.QueryParamsRequest> __Marshaller_injective_peggy_v1_QueryParamsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Injective.Peggy.V1.QueryParamsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Injective.Peggy.V1.QueryParamsResponse> __Marshaller_injective_peggy_v1_QueryParamsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Injective.Peggy.V1.QueryParamsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Injective.Peggy.V1.QueryCurrentValsetRequest> __Marshaller_injective_peggy_v1_QueryCurrentValsetRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Injective.Peggy.V1.QueryCurrentValsetRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Injective.Peggy.V1.QueryCurrentValsetResponse> __Marshaller_injective_peggy_v1_QueryCurrentValsetResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Injective.Peggy.V1.QueryCurrentValsetResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Injective.Peggy.V1.QueryValsetRequestRequest> __Marshaller_injective_peggy_v1_QueryValsetRequestRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Injective.Peggy.V1.QueryValsetRequestRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Injective.Peggy.V1.QueryValsetRequestResponse> __Marshaller_injective_peggy_v1_QueryValsetRequestResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Injective.Peggy.V1.QueryValsetRequestResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Injective.Peggy.V1.QueryValsetConfirmRequest> __Marshaller_injective_peggy_v1_QueryValsetConfirmRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Injective.Peggy.V1.QueryValsetConfirmRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Injective.Peggy.V1.QueryValsetConfirmResponse> __Marshaller_injective_peggy_v1_QueryValsetConfirmResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Injective.Peggy.V1.QueryValsetConfirmResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Injective.Peggy.V1.QueryValsetConfirmsByNonceRequest> __Marshaller_injective_peggy_v1_QueryValsetConfirmsByNonceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Injective.Peggy.V1.QueryValsetConfirmsByNonceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Injective.Peggy.V1.QueryValsetConfirmsByNonceResponse> __Marshaller_injective_peggy_v1_QueryValsetConfirmsByNonceResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Injective.Peggy.V1.QueryValsetConfirmsByNonceResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Injective.Peggy.V1.QueryLastValsetRequestsRequest> __Marshaller_injective_peggy_v1_QueryLastValsetRequestsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Injective.Peggy.V1.QueryLastValsetRequestsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Injective.Peggy.V1.QueryLastValsetRequestsResponse> __Marshaller_injective_peggy_v1_QueryLastValsetRequestsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Injective.Peggy.V1.QueryLastValsetRequestsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Injective.Peggy.V1.QueryLastPendingValsetRequestByAddrRequest> __Marshaller_injective_peggy_v1_QueryLastPendingValsetRequestByAddrRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Injective.Peggy.V1.QueryLastPendingValsetRequestByAddrRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Injective.Peggy.V1.QueryLastPendingValsetRequestByAddrResponse> __Marshaller_injective_peggy_v1_QueryLastPendingValsetRequestByAddrResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Injective.Peggy.V1.QueryLastPendingValsetRequestByAddrResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Injective.Peggy.V1.QueryLastEventByAddrRequest> __Marshaller_injective_peggy_v1_QueryLastEventByAddrRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Injective.Peggy.V1.QueryLastEventByAddrRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Injective.Peggy.V1.QueryLastEventByAddrResponse> __Marshaller_injective_peggy_v1_QueryLastEventByAddrResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Injective.Peggy.V1.QueryLastEventByAddrResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Injective.Peggy.V1.QueryPendingSendToEth> __Marshaller_injective_peggy_v1_QueryPendingSendToEth = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Injective.Peggy.V1.QueryPendingSendToEth.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Injective.Peggy.V1.QueryPendingSendToEthResponse> __Marshaller_injective_peggy_v1_QueryPendingSendToEthResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Injective.Peggy.V1.QueryPendingSendToEthResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Injective.Peggy.V1.QueryBatchFeeRequest> __Marshaller_injective_peggy_v1_QueryBatchFeeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Injective.Peggy.V1.QueryBatchFeeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Injective.Peggy.V1.QueryBatchFeeResponse> __Marshaller_injective_peggy_v1_QueryBatchFeeResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Injective.Peggy.V1.QueryBatchFeeResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Injective.Peggy.V1.QueryOutgoingTxBatchesRequest> __Marshaller_injective_peggy_v1_QueryOutgoingTxBatchesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Injective.Peggy.V1.QueryOutgoingTxBatchesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Injective.Peggy.V1.QueryOutgoingTxBatchesResponse> __Marshaller_injective_peggy_v1_QueryOutgoingTxBatchesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Injective.Peggy.V1.QueryOutgoingTxBatchesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Injective.Peggy.V1.QueryLastPendingBatchRequestByAddrRequest> __Marshaller_injective_peggy_v1_QueryLastPendingBatchRequestByAddrRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Injective.Peggy.V1.QueryLastPendingBatchRequestByAddrRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Injective.Peggy.V1.QueryLastPendingBatchRequestByAddrResponse> __Marshaller_injective_peggy_v1_QueryLastPendingBatchRequestByAddrResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Injective.Peggy.V1.QueryLastPendingBatchRequestByAddrResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Injective.Peggy.V1.QueryBatchRequestByNonceRequest> __Marshaller_injective_peggy_v1_QueryBatchRequestByNonceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Injective.Peggy.V1.QueryBatchRequestByNonceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Injective.Peggy.V1.QueryBatchRequestByNonceResponse> __Marshaller_injective_peggy_v1_QueryBatchRequestByNonceResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Injective.Peggy.V1.QueryBatchRequestByNonceResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Injective.Peggy.V1.QueryBatchConfirmsRequest> __Marshaller_injective_peggy_v1_QueryBatchConfirmsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Injective.Peggy.V1.QueryBatchConfirmsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Injective.Peggy.V1.QueryBatchConfirmsResponse> __Marshaller_injective_peggy_v1_QueryBatchConfirmsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Injective.Peggy.V1.QueryBatchConfirmsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Injective.Peggy.V1.QueryERC20ToDenomRequest> __Marshaller_injective_peggy_v1_QueryERC20ToDenomRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Injective.Peggy.V1.QueryERC20ToDenomRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Injective.Peggy.V1.QueryERC20ToDenomResponse> __Marshaller_injective_peggy_v1_QueryERC20ToDenomResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Injective.Peggy.V1.QueryERC20ToDenomResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Injective.Peggy.V1.QueryDenomToERC20Request> __Marshaller_injective_peggy_v1_QueryDenomToERC20Request = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Injective.Peggy.V1.QueryDenomToERC20Request.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Injective.Peggy.V1.QueryDenomToERC20Response> __Marshaller_injective_peggy_v1_QueryDenomToERC20Response = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Injective.Peggy.V1.QueryDenomToERC20Response.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Injective.Peggy.V1.QueryDelegateKeysByValidatorAddress> __Marshaller_injective_peggy_v1_QueryDelegateKeysByValidatorAddress = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Injective.Peggy.V1.QueryDelegateKeysByValidatorAddress.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Injective.Peggy.V1.QueryDelegateKeysByValidatorAddressResponse> __Marshaller_injective_peggy_v1_QueryDelegateKeysByValidatorAddressResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Injective.Peggy.V1.QueryDelegateKeysByValidatorAddressResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Injective.Peggy.V1.QueryDelegateKeysByEthAddress> __Marshaller_injective_peggy_v1_QueryDelegateKeysByEthAddress = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Injective.Peggy.V1.QueryDelegateKeysByEthAddress.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Injective.Peggy.V1.QueryDelegateKeysByEthAddressResponse> __Marshaller_injective_peggy_v1_QueryDelegateKeysByEthAddressResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Injective.Peggy.V1.QueryDelegateKeysByEthAddressResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Injective.Peggy.V1.QueryDelegateKeysByOrchestratorAddress> __Marshaller_injective_peggy_v1_QueryDelegateKeysByOrchestratorAddress = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Injective.Peggy.V1.QueryDelegateKeysByOrchestratorAddress.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Injective.Peggy.V1.QueryDelegateKeysByOrchestratorAddressResponse> __Marshaller_injective_peggy_v1_QueryDelegateKeysByOrchestratorAddressResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Injective.Peggy.V1.QueryDelegateKeysByOrchestratorAddressResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Injective.Peggy.V1.QueryModuleStateRequest> __Marshaller_injective_peggy_v1_QueryModuleStateRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Injective.Peggy.V1.QueryModuleStateRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Injective.Peggy.V1.QueryModuleStateResponse> __Marshaller_injective_peggy_v1_QueryModuleStateResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Injective.Peggy.V1.QueryModuleStateResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Injective.Peggy.V1.MissingNoncesRequest> __Marshaller_injective_peggy_v1_MissingNoncesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Injective.Peggy.V1.MissingNoncesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Injective.Peggy.V1.MissingNoncesResponse> __Marshaller_injective_peggy_v1_MissingNoncesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Injective.Peggy.V1.MissingNoncesResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Injective.Peggy.V1.QueryParamsRequest, global::Injective.Peggy.V1.QueryParamsResponse> __Method_Params = new grpc::Method<global::Injective.Peggy.V1.QueryParamsRequest, global::Injective.Peggy.V1.QueryParamsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Params",
        __Marshaller_injective_peggy_v1_QueryParamsRequest,
        __Marshaller_injective_peggy_v1_QueryParamsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Injective.Peggy.V1.QueryCurrentValsetRequest, global::Injective.Peggy.V1.QueryCurrentValsetResponse> __Method_CurrentValset = new grpc::Method<global::Injective.Peggy.V1.QueryCurrentValsetRequest, global::Injective.Peggy.V1.QueryCurrentValsetResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CurrentValset",
        __Marshaller_injective_peggy_v1_QueryCurrentValsetRequest,
        __Marshaller_injective_peggy_v1_QueryCurrentValsetResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Injective.Peggy.V1.QueryValsetRequestRequest, global::Injective.Peggy.V1.QueryValsetRequestResponse> __Method_ValsetRequest = new grpc::Method<global::Injective.Peggy.V1.QueryValsetRequestRequest, global::Injective.Peggy.V1.QueryValsetRequestResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ValsetRequest",
        __Marshaller_injective_peggy_v1_QueryValsetRequestRequest,
        __Marshaller_injective_peggy_v1_QueryValsetRequestResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Injective.Peggy.V1.QueryValsetConfirmRequest, global::Injective.Peggy.V1.QueryValsetConfirmResponse> __Method_ValsetConfirm = new grpc::Method<global::Injective.Peggy.V1.QueryValsetConfirmRequest, global::Injective.Peggy.V1.QueryValsetConfirmResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ValsetConfirm",
        __Marshaller_injective_peggy_v1_QueryValsetConfirmRequest,
        __Marshaller_injective_peggy_v1_QueryValsetConfirmResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Injective.Peggy.V1.QueryValsetConfirmsByNonceRequest, global::Injective.Peggy.V1.QueryValsetConfirmsByNonceResponse> __Method_ValsetConfirmsByNonce = new grpc::Method<global::Injective.Peggy.V1.QueryValsetConfirmsByNonceRequest, global::Injective.Peggy.V1.QueryValsetConfirmsByNonceResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ValsetConfirmsByNonce",
        __Marshaller_injective_peggy_v1_QueryValsetConfirmsByNonceRequest,
        __Marshaller_injective_peggy_v1_QueryValsetConfirmsByNonceResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Injective.Peggy.V1.QueryLastValsetRequestsRequest, global::Injective.Peggy.V1.QueryLastValsetRequestsResponse> __Method_LastValsetRequests = new grpc::Method<global::Injective.Peggy.V1.QueryLastValsetRequestsRequest, global::Injective.Peggy.V1.QueryLastValsetRequestsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "LastValsetRequests",
        __Marshaller_injective_peggy_v1_QueryLastValsetRequestsRequest,
        __Marshaller_injective_peggy_v1_QueryLastValsetRequestsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Injective.Peggy.V1.QueryLastPendingValsetRequestByAddrRequest, global::Injective.Peggy.V1.QueryLastPendingValsetRequestByAddrResponse> __Method_LastPendingValsetRequestByAddr = new grpc::Method<global::Injective.Peggy.V1.QueryLastPendingValsetRequestByAddrRequest, global::Injective.Peggy.V1.QueryLastPendingValsetRequestByAddrResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "LastPendingValsetRequestByAddr",
        __Marshaller_injective_peggy_v1_QueryLastPendingValsetRequestByAddrRequest,
        __Marshaller_injective_peggy_v1_QueryLastPendingValsetRequestByAddrResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Injective.Peggy.V1.QueryLastEventByAddrRequest, global::Injective.Peggy.V1.QueryLastEventByAddrResponse> __Method_LastEventByAddr = new grpc::Method<global::Injective.Peggy.V1.QueryLastEventByAddrRequest, global::Injective.Peggy.V1.QueryLastEventByAddrResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "LastEventByAddr",
        __Marshaller_injective_peggy_v1_QueryLastEventByAddrRequest,
        __Marshaller_injective_peggy_v1_QueryLastEventByAddrResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Injective.Peggy.V1.QueryPendingSendToEth, global::Injective.Peggy.V1.QueryPendingSendToEthResponse> __Method_GetPendingSendToEth = new grpc::Method<global::Injective.Peggy.V1.QueryPendingSendToEth, global::Injective.Peggy.V1.QueryPendingSendToEthResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPendingSendToEth",
        __Marshaller_injective_peggy_v1_QueryPendingSendToEth,
        __Marshaller_injective_peggy_v1_QueryPendingSendToEthResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Injective.Peggy.V1.QueryBatchFeeRequest, global::Injective.Peggy.V1.QueryBatchFeeResponse> __Method_BatchFees = new grpc::Method<global::Injective.Peggy.V1.QueryBatchFeeRequest, global::Injective.Peggy.V1.QueryBatchFeeResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BatchFees",
        __Marshaller_injective_peggy_v1_QueryBatchFeeRequest,
        __Marshaller_injective_peggy_v1_QueryBatchFeeResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Injective.Peggy.V1.QueryOutgoingTxBatchesRequest, global::Injective.Peggy.V1.QueryOutgoingTxBatchesResponse> __Method_OutgoingTxBatches = new grpc::Method<global::Injective.Peggy.V1.QueryOutgoingTxBatchesRequest, global::Injective.Peggy.V1.QueryOutgoingTxBatchesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "OutgoingTxBatches",
        __Marshaller_injective_peggy_v1_QueryOutgoingTxBatchesRequest,
        __Marshaller_injective_peggy_v1_QueryOutgoingTxBatchesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Injective.Peggy.V1.QueryLastPendingBatchRequestByAddrRequest, global::Injective.Peggy.V1.QueryLastPendingBatchRequestByAddrResponse> __Method_LastPendingBatchRequestByAddr = new grpc::Method<global::Injective.Peggy.V1.QueryLastPendingBatchRequestByAddrRequest, global::Injective.Peggy.V1.QueryLastPendingBatchRequestByAddrResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "LastPendingBatchRequestByAddr",
        __Marshaller_injective_peggy_v1_QueryLastPendingBatchRequestByAddrRequest,
        __Marshaller_injective_peggy_v1_QueryLastPendingBatchRequestByAddrResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Injective.Peggy.V1.QueryBatchRequestByNonceRequest, global::Injective.Peggy.V1.QueryBatchRequestByNonceResponse> __Method_BatchRequestByNonce = new grpc::Method<global::Injective.Peggy.V1.QueryBatchRequestByNonceRequest, global::Injective.Peggy.V1.QueryBatchRequestByNonceResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BatchRequestByNonce",
        __Marshaller_injective_peggy_v1_QueryBatchRequestByNonceRequest,
        __Marshaller_injective_peggy_v1_QueryBatchRequestByNonceResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Injective.Peggy.V1.QueryBatchConfirmsRequest, global::Injective.Peggy.V1.QueryBatchConfirmsResponse> __Method_BatchConfirms = new grpc::Method<global::Injective.Peggy.V1.QueryBatchConfirmsRequest, global::Injective.Peggy.V1.QueryBatchConfirmsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BatchConfirms",
        __Marshaller_injective_peggy_v1_QueryBatchConfirmsRequest,
        __Marshaller_injective_peggy_v1_QueryBatchConfirmsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Injective.Peggy.V1.QueryERC20ToDenomRequest, global::Injective.Peggy.V1.QueryERC20ToDenomResponse> __Method_ERC20ToDenom = new grpc::Method<global::Injective.Peggy.V1.QueryERC20ToDenomRequest, global::Injective.Peggy.V1.QueryERC20ToDenomResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ERC20ToDenom",
        __Marshaller_injective_peggy_v1_QueryERC20ToDenomRequest,
        __Marshaller_injective_peggy_v1_QueryERC20ToDenomResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Injective.Peggy.V1.QueryDenomToERC20Request, global::Injective.Peggy.V1.QueryDenomToERC20Response> __Method_DenomToERC20 = new grpc::Method<global::Injective.Peggy.V1.QueryDenomToERC20Request, global::Injective.Peggy.V1.QueryDenomToERC20Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DenomToERC20",
        __Marshaller_injective_peggy_v1_QueryDenomToERC20Request,
        __Marshaller_injective_peggy_v1_QueryDenomToERC20Response);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Injective.Peggy.V1.QueryDelegateKeysByValidatorAddress, global::Injective.Peggy.V1.QueryDelegateKeysByValidatorAddressResponse> __Method_GetDelegateKeyByValidator = new grpc::Method<global::Injective.Peggy.V1.QueryDelegateKeysByValidatorAddress, global::Injective.Peggy.V1.QueryDelegateKeysByValidatorAddressResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDelegateKeyByValidator",
        __Marshaller_injective_peggy_v1_QueryDelegateKeysByValidatorAddress,
        __Marshaller_injective_peggy_v1_QueryDelegateKeysByValidatorAddressResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Injective.Peggy.V1.QueryDelegateKeysByEthAddress, global::Injective.Peggy.V1.QueryDelegateKeysByEthAddressResponse> __Method_GetDelegateKeyByEth = new grpc::Method<global::Injective.Peggy.V1.QueryDelegateKeysByEthAddress, global::Injective.Peggy.V1.QueryDelegateKeysByEthAddressResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDelegateKeyByEth",
        __Marshaller_injective_peggy_v1_QueryDelegateKeysByEthAddress,
        __Marshaller_injective_peggy_v1_QueryDelegateKeysByEthAddressResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Injective.Peggy.V1.QueryDelegateKeysByOrchestratorAddress, global::Injective.Peggy.V1.QueryDelegateKeysByOrchestratorAddressResponse> __Method_GetDelegateKeyByOrchestrator = new grpc::Method<global::Injective.Peggy.V1.QueryDelegateKeysByOrchestratorAddress, global::Injective.Peggy.V1.QueryDelegateKeysByOrchestratorAddressResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDelegateKeyByOrchestrator",
        __Marshaller_injective_peggy_v1_QueryDelegateKeysByOrchestratorAddress,
        __Marshaller_injective_peggy_v1_QueryDelegateKeysByOrchestratorAddressResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Injective.Peggy.V1.QueryModuleStateRequest, global::Injective.Peggy.V1.QueryModuleStateResponse> __Method_PeggyModuleState = new grpc::Method<global::Injective.Peggy.V1.QueryModuleStateRequest, global::Injective.Peggy.V1.QueryModuleStateResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PeggyModuleState",
        __Marshaller_injective_peggy_v1_QueryModuleStateRequest,
        __Marshaller_injective_peggy_v1_QueryModuleStateResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Injective.Peggy.V1.MissingNoncesRequest, global::Injective.Peggy.V1.MissingNoncesResponse> __Method_MissingPeggoNonces = new grpc::Method<global::Injective.Peggy.V1.MissingNoncesRequest, global::Injective.Peggy.V1.MissingNoncesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "MissingPeggoNonces",
        __Marshaller_injective_peggy_v1_MissingNoncesRequest,
        __Marshaller_injective_peggy_v1_MissingNoncesResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Injective.Peggy.V1.QueryReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Query</summary>
    [grpc::BindServiceMethod(typeof(Query), "BindService")]
    public abstract partial class QueryBase
    {
      /// <summary>
      /// Deployments queries deployments
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Injective.Peggy.V1.QueryParamsResponse> Params(global::Injective.Peggy.V1.QueryParamsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// valset
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Injective.Peggy.V1.QueryCurrentValsetResponse> CurrentValset(global::Injective.Peggy.V1.QueryCurrentValsetRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Injective.Peggy.V1.QueryValsetRequestResponse> ValsetRequest(global::Injective.Peggy.V1.QueryValsetRequestRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Injective.Peggy.V1.QueryValsetConfirmResponse> ValsetConfirm(global::Injective.Peggy.V1.QueryValsetConfirmRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Injective.Peggy.V1.QueryValsetConfirmsByNonceResponse> ValsetConfirmsByNonce(global::Injective.Peggy.V1.QueryValsetConfirmsByNonceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Injective.Peggy.V1.QueryLastValsetRequestsResponse> LastValsetRequests(global::Injective.Peggy.V1.QueryLastValsetRequestsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Injective.Peggy.V1.QueryLastPendingValsetRequestByAddrResponse> LastPendingValsetRequestByAddr(global::Injective.Peggy.V1.QueryLastPendingValsetRequestByAddrRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// claim
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Injective.Peggy.V1.QueryLastEventByAddrResponse> LastEventByAddr(global::Injective.Peggy.V1.QueryLastEventByAddrRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// batch
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Injective.Peggy.V1.QueryPendingSendToEthResponse> GetPendingSendToEth(global::Injective.Peggy.V1.QueryPendingSendToEth request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Injective.Peggy.V1.QueryBatchFeeResponse> BatchFees(global::Injective.Peggy.V1.QueryBatchFeeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Injective.Peggy.V1.QueryOutgoingTxBatchesResponse> OutgoingTxBatches(global::Injective.Peggy.V1.QueryOutgoingTxBatchesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Injective.Peggy.V1.QueryLastPendingBatchRequestByAddrResponse> LastPendingBatchRequestByAddr(global::Injective.Peggy.V1.QueryLastPendingBatchRequestByAddrRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Injective.Peggy.V1.QueryBatchRequestByNonceResponse> BatchRequestByNonce(global::Injective.Peggy.V1.QueryBatchRequestByNonceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Injective.Peggy.V1.QueryBatchConfirmsResponse> BatchConfirms(global::Injective.Peggy.V1.QueryBatchConfirmsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Injective.Peggy.V1.QueryERC20ToDenomResponse> ERC20ToDenom(global::Injective.Peggy.V1.QueryERC20ToDenomRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Injective.Peggy.V1.QueryDenomToERC20Response> DenomToERC20(global::Injective.Peggy.V1.QueryDenomToERC20Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Injective.Peggy.V1.QueryDelegateKeysByValidatorAddressResponse> GetDelegateKeyByValidator(global::Injective.Peggy.V1.QueryDelegateKeysByValidatorAddress request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Injective.Peggy.V1.QueryDelegateKeysByEthAddressResponse> GetDelegateKeyByEth(global::Injective.Peggy.V1.QueryDelegateKeysByEthAddress request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Injective.Peggy.V1.QueryDelegateKeysByOrchestratorAddressResponse> GetDelegateKeyByOrchestrator(global::Injective.Peggy.V1.QueryDelegateKeysByOrchestratorAddress request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Retrieves the entire peggy module's state
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Injective.Peggy.V1.QueryModuleStateResponse> PeggyModuleState(global::Injective.Peggy.V1.QueryModuleStateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Injective.Peggy.V1.MissingNoncesResponse> MissingPeggoNonces(global::Injective.Peggy.V1.MissingNoncesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Query</summary>
    public partial class QueryClient : grpc::ClientBase<QueryClient>
    {
      /// <summary>Creates a new client for Query</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public QueryClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Query that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public QueryClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected QueryClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected QueryClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Deployments queries deployments
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Injective.Peggy.V1.QueryParamsResponse Params(global::Injective.Peggy.V1.QueryParamsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Params(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deployments queries deployments
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Injective.Peggy.V1.QueryParamsResponse Params(global::Injective.Peggy.V1.QueryParamsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Params, null, options, request);
      }
      /// <summary>
      /// Deployments queries deployments
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Injective.Peggy.V1.QueryParamsResponse> ParamsAsync(global::Injective.Peggy.V1.QueryParamsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ParamsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deployments queries deployments
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Injective.Peggy.V1.QueryParamsResponse> ParamsAsync(global::Injective.Peggy.V1.QueryParamsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Params, null, options, request);
      }
      /// <summary>
      /// valset
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Injective.Peggy.V1.QueryCurrentValsetResponse CurrentValset(global::Injective.Peggy.V1.QueryCurrentValsetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CurrentValset(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// valset
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Injective.Peggy.V1.QueryCurrentValsetResponse CurrentValset(global::Injective.Peggy.V1.QueryCurrentValsetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CurrentValset, null, options, request);
      }
      /// <summary>
      /// valset
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Injective.Peggy.V1.QueryCurrentValsetResponse> CurrentValsetAsync(global::Injective.Peggy.V1.QueryCurrentValsetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CurrentValsetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// valset
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Injective.Peggy.V1.QueryCurrentValsetResponse> CurrentValsetAsync(global::Injective.Peggy.V1.QueryCurrentValsetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CurrentValset, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Injective.Peggy.V1.QueryValsetRequestResponse ValsetRequest(global::Injective.Peggy.V1.QueryValsetRequestRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ValsetRequest(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Injective.Peggy.V1.QueryValsetRequestResponse ValsetRequest(global::Injective.Peggy.V1.QueryValsetRequestRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ValsetRequest, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Injective.Peggy.V1.QueryValsetRequestResponse> ValsetRequestAsync(global::Injective.Peggy.V1.QueryValsetRequestRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ValsetRequestAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Injective.Peggy.V1.QueryValsetRequestResponse> ValsetRequestAsync(global::Injective.Peggy.V1.QueryValsetRequestRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ValsetRequest, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Injective.Peggy.V1.QueryValsetConfirmResponse ValsetConfirm(global::Injective.Peggy.V1.QueryValsetConfirmRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ValsetConfirm(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Injective.Peggy.V1.QueryValsetConfirmResponse ValsetConfirm(global::Injective.Peggy.V1.QueryValsetConfirmRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ValsetConfirm, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Injective.Peggy.V1.QueryValsetConfirmResponse> ValsetConfirmAsync(global::Injective.Peggy.V1.QueryValsetConfirmRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ValsetConfirmAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Injective.Peggy.V1.QueryValsetConfirmResponse> ValsetConfirmAsync(global::Injective.Peggy.V1.QueryValsetConfirmRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ValsetConfirm, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Injective.Peggy.V1.QueryValsetConfirmsByNonceResponse ValsetConfirmsByNonce(global::Injective.Peggy.V1.QueryValsetConfirmsByNonceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ValsetConfirmsByNonce(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Injective.Peggy.V1.QueryValsetConfirmsByNonceResponse ValsetConfirmsByNonce(global::Injective.Peggy.V1.QueryValsetConfirmsByNonceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ValsetConfirmsByNonce, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Injective.Peggy.V1.QueryValsetConfirmsByNonceResponse> ValsetConfirmsByNonceAsync(global::Injective.Peggy.V1.QueryValsetConfirmsByNonceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ValsetConfirmsByNonceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Injective.Peggy.V1.QueryValsetConfirmsByNonceResponse> ValsetConfirmsByNonceAsync(global::Injective.Peggy.V1.QueryValsetConfirmsByNonceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ValsetConfirmsByNonce, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Injective.Peggy.V1.QueryLastValsetRequestsResponse LastValsetRequests(global::Injective.Peggy.V1.QueryLastValsetRequestsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LastValsetRequests(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Injective.Peggy.V1.QueryLastValsetRequestsResponse LastValsetRequests(global::Injective.Peggy.V1.QueryLastValsetRequestsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_LastValsetRequests, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Injective.Peggy.V1.QueryLastValsetRequestsResponse> LastValsetRequestsAsync(global::Injective.Peggy.V1.QueryLastValsetRequestsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LastValsetRequestsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Injective.Peggy.V1.QueryLastValsetRequestsResponse> LastValsetRequestsAsync(global::Injective.Peggy.V1.QueryLastValsetRequestsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_LastValsetRequests, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Injective.Peggy.V1.QueryLastPendingValsetRequestByAddrResponse LastPendingValsetRequestByAddr(global::Injective.Peggy.V1.QueryLastPendingValsetRequestByAddrRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LastPendingValsetRequestByAddr(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Injective.Peggy.V1.QueryLastPendingValsetRequestByAddrResponse LastPendingValsetRequestByAddr(global::Injective.Peggy.V1.QueryLastPendingValsetRequestByAddrRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_LastPendingValsetRequestByAddr, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Injective.Peggy.V1.QueryLastPendingValsetRequestByAddrResponse> LastPendingValsetRequestByAddrAsync(global::Injective.Peggy.V1.QueryLastPendingValsetRequestByAddrRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LastPendingValsetRequestByAddrAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Injective.Peggy.V1.QueryLastPendingValsetRequestByAddrResponse> LastPendingValsetRequestByAddrAsync(global::Injective.Peggy.V1.QueryLastPendingValsetRequestByAddrRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_LastPendingValsetRequestByAddr, null, options, request);
      }
      /// <summary>
      /// claim
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Injective.Peggy.V1.QueryLastEventByAddrResponse LastEventByAddr(global::Injective.Peggy.V1.QueryLastEventByAddrRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LastEventByAddr(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// claim
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Injective.Peggy.V1.QueryLastEventByAddrResponse LastEventByAddr(global::Injective.Peggy.V1.QueryLastEventByAddrRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_LastEventByAddr, null, options, request);
      }
      /// <summary>
      /// claim
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Injective.Peggy.V1.QueryLastEventByAddrResponse> LastEventByAddrAsync(global::Injective.Peggy.V1.QueryLastEventByAddrRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LastEventByAddrAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// claim
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Injective.Peggy.V1.QueryLastEventByAddrResponse> LastEventByAddrAsync(global::Injective.Peggy.V1.QueryLastEventByAddrRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_LastEventByAddr, null, options, request);
      }
      /// <summary>
      /// batch
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Injective.Peggy.V1.QueryPendingSendToEthResponse GetPendingSendToEth(global::Injective.Peggy.V1.QueryPendingSendToEth request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPendingSendToEth(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// batch
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Injective.Peggy.V1.QueryPendingSendToEthResponse GetPendingSendToEth(global::Injective.Peggy.V1.QueryPendingSendToEth request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetPendingSendToEth, null, options, request);
      }
      /// <summary>
      /// batch
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Injective.Peggy.V1.QueryPendingSendToEthResponse> GetPendingSendToEthAsync(global::Injective.Peggy.V1.QueryPendingSendToEth request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPendingSendToEthAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// batch
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Injective.Peggy.V1.QueryPendingSendToEthResponse> GetPendingSendToEthAsync(global::Injective.Peggy.V1.QueryPendingSendToEth request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetPendingSendToEth, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Injective.Peggy.V1.QueryBatchFeeResponse BatchFees(global::Injective.Peggy.V1.QueryBatchFeeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchFees(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Injective.Peggy.V1.QueryBatchFeeResponse BatchFees(global::Injective.Peggy.V1.QueryBatchFeeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BatchFees, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Injective.Peggy.V1.QueryBatchFeeResponse> BatchFeesAsync(global::Injective.Peggy.V1.QueryBatchFeeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchFeesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Injective.Peggy.V1.QueryBatchFeeResponse> BatchFeesAsync(global::Injective.Peggy.V1.QueryBatchFeeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BatchFees, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Injective.Peggy.V1.QueryOutgoingTxBatchesResponse OutgoingTxBatches(global::Injective.Peggy.V1.QueryOutgoingTxBatchesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return OutgoingTxBatches(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Injective.Peggy.V1.QueryOutgoingTxBatchesResponse OutgoingTxBatches(global::Injective.Peggy.V1.QueryOutgoingTxBatchesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_OutgoingTxBatches, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Injective.Peggy.V1.QueryOutgoingTxBatchesResponse> OutgoingTxBatchesAsync(global::Injective.Peggy.V1.QueryOutgoingTxBatchesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return OutgoingTxBatchesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Injective.Peggy.V1.QueryOutgoingTxBatchesResponse> OutgoingTxBatchesAsync(global::Injective.Peggy.V1.QueryOutgoingTxBatchesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_OutgoingTxBatches, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Injective.Peggy.V1.QueryLastPendingBatchRequestByAddrResponse LastPendingBatchRequestByAddr(global::Injective.Peggy.V1.QueryLastPendingBatchRequestByAddrRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LastPendingBatchRequestByAddr(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Injective.Peggy.V1.QueryLastPendingBatchRequestByAddrResponse LastPendingBatchRequestByAddr(global::Injective.Peggy.V1.QueryLastPendingBatchRequestByAddrRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_LastPendingBatchRequestByAddr, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Injective.Peggy.V1.QueryLastPendingBatchRequestByAddrResponse> LastPendingBatchRequestByAddrAsync(global::Injective.Peggy.V1.QueryLastPendingBatchRequestByAddrRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LastPendingBatchRequestByAddrAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Injective.Peggy.V1.QueryLastPendingBatchRequestByAddrResponse> LastPendingBatchRequestByAddrAsync(global::Injective.Peggy.V1.QueryLastPendingBatchRequestByAddrRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_LastPendingBatchRequestByAddr, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Injective.Peggy.V1.QueryBatchRequestByNonceResponse BatchRequestByNonce(global::Injective.Peggy.V1.QueryBatchRequestByNonceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchRequestByNonce(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Injective.Peggy.V1.QueryBatchRequestByNonceResponse BatchRequestByNonce(global::Injective.Peggy.V1.QueryBatchRequestByNonceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BatchRequestByNonce, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Injective.Peggy.V1.QueryBatchRequestByNonceResponse> BatchRequestByNonceAsync(global::Injective.Peggy.V1.QueryBatchRequestByNonceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchRequestByNonceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Injective.Peggy.V1.QueryBatchRequestByNonceResponse> BatchRequestByNonceAsync(global::Injective.Peggy.V1.QueryBatchRequestByNonceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BatchRequestByNonce, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Injective.Peggy.V1.QueryBatchConfirmsResponse BatchConfirms(global::Injective.Peggy.V1.QueryBatchConfirmsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchConfirms(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Injective.Peggy.V1.QueryBatchConfirmsResponse BatchConfirms(global::Injective.Peggy.V1.QueryBatchConfirmsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BatchConfirms, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Injective.Peggy.V1.QueryBatchConfirmsResponse> BatchConfirmsAsync(global::Injective.Peggy.V1.QueryBatchConfirmsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchConfirmsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Injective.Peggy.V1.QueryBatchConfirmsResponse> BatchConfirmsAsync(global::Injective.Peggy.V1.QueryBatchConfirmsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BatchConfirms, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Injective.Peggy.V1.QueryERC20ToDenomResponse ERC20ToDenom(global::Injective.Peggy.V1.QueryERC20ToDenomRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ERC20ToDenom(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Injective.Peggy.V1.QueryERC20ToDenomResponse ERC20ToDenom(global::Injective.Peggy.V1.QueryERC20ToDenomRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ERC20ToDenom, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Injective.Peggy.V1.QueryERC20ToDenomResponse> ERC20ToDenomAsync(global::Injective.Peggy.V1.QueryERC20ToDenomRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ERC20ToDenomAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Injective.Peggy.V1.QueryERC20ToDenomResponse> ERC20ToDenomAsync(global::Injective.Peggy.V1.QueryERC20ToDenomRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ERC20ToDenom, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Injective.Peggy.V1.QueryDenomToERC20Response DenomToERC20(global::Injective.Peggy.V1.QueryDenomToERC20Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DenomToERC20(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Injective.Peggy.V1.QueryDenomToERC20Response DenomToERC20(global::Injective.Peggy.V1.QueryDenomToERC20Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DenomToERC20, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Injective.Peggy.V1.QueryDenomToERC20Response> DenomToERC20Async(global::Injective.Peggy.V1.QueryDenomToERC20Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DenomToERC20Async(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Injective.Peggy.V1.QueryDenomToERC20Response> DenomToERC20Async(global::Injective.Peggy.V1.QueryDenomToERC20Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DenomToERC20, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Injective.Peggy.V1.QueryDelegateKeysByValidatorAddressResponse GetDelegateKeyByValidator(global::Injective.Peggy.V1.QueryDelegateKeysByValidatorAddress request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDelegateKeyByValidator(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Injective.Peggy.V1.QueryDelegateKeysByValidatorAddressResponse GetDelegateKeyByValidator(global::Injective.Peggy.V1.QueryDelegateKeysByValidatorAddress request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDelegateKeyByValidator, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Injective.Peggy.V1.QueryDelegateKeysByValidatorAddressResponse> GetDelegateKeyByValidatorAsync(global::Injective.Peggy.V1.QueryDelegateKeysByValidatorAddress request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDelegateKeyByValidatorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Injective.Peggy.V1.QueryDelegateKeysByValidatorAddressResponse> GetDelegateKeyByValidatorAsync(global::Injective.Peggy.V1.QueryDelegateKeysByValidatorAddress request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDelegateKeyByValidator, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Injective.Peggy.V1.QueryDelegateKeysByEthAddressResponse GetDelegateKeyByEth(global::Injective.Peggy.V1.QueryDelegateKeysByEthAddress request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDelegateKeyByEth(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Injective.Peggy.V1.QueryDelegateKeysByEthAddressResponse GetDelegateKeyByEth(global::Injective.Peggy.V1.QueryDelegateKeysByEthAddress request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDelegateKeyByEth, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Injective.Peggy.V1.QueryDelegateKeysByEthAddressResponse> GetDelegateKeyByEthAsync(global::Injective.Peggy.V1.QueryDelegateKeysByEthAddress request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDelegateKeyByEthAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Injective.Peggy.V1.QueryDelegateKeysByEthAddressResponse> GetDelegateKeyByEthAsync(global::Injective.Peggy.V1.QueryDelegateKeysByEthAddress request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDelegateKeyByEth, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Injective.Peggy.V1.QueryDelegateKeysByOrchestratorAddressResponse GetDelegateKeyByOrchestrator(global::Injective.Peggy.V1.QueryDelegateKeysByOrchestratorAddress request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDelegateKeyByOrchestrator(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Injective.Peggy.V1.QueryDelegateKeysByOrchestratorAddressResponse GetDelegateKeyByOrchestrator(global::Injective.Peggy.V1.QueryDelegateKeysByOrchestratorAddress request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDelegateKeyByOrchestrator, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Injective.Peggy.V1.QueryDelegateKeysByOrchestratorAddressResponse> GetDelegateKeyByOrchestratorAsync(global::Injective.Peggy.V1.QueryDelegateKeysByOrchestratorAddress request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDelegateKeyByOrchestratorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Injective.Peggy.V1.QueryDelegateKeysByOrchestratorAddressResponse> GetDelegateKeyByOrchestratorAsync(global::Injective.Peggy.V1.QueryDelegateKeysByOrchestratorAddress request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDelegateKeyByOrchestrator, null, options, request);
      }
      /// <summary>
      /// Retrieves the entire peggy module's state
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Injective.Peggy.V1.QueryModuleStateResponse PeggyModuleState(global::Injective.Peggy.V1.QueryModuleStateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PeggyModuleState(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves the entire peggy module's state
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Injective.Peggy.V1.QueryModuleStateResponse PeggyModuleState(global::Injective.Peggy.V1.QueryModuleStateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PeggyModuleState, null, options, request);
      }
      /// <summary>
      /// Retrieves the entire peggy module's state
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Injective.Peggy.V1.QueryModuleStateResponse> PeggyModuleStateAsync(global::Injective.Peggy.V1.QueryModuleStateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PeggyModuleStateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves the entire peggy module's state
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Injective.Peggy.V1.QueryModuleStateResponse> PeggyModuleStateAsync(global::Injective.Peggy.V1.QueryModuleStateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PeggyModuleState, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Injective.Peggy.V1.MissingNoncesResponse MissingPeggoNonces(global::Injective.Peggy.V1.MissingNoncesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MissingPeggoNonces(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Injective.Peggy.V1.MissingNoncesResponse MissingPeggoNonces(global::Injective.Peggy.V1.MissingNoncesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_MissingPeggoNonces, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Injective.Peggy.V1.MissingNoncesResponse> MissingPeggoNoncesAsync(global::Injective.Peggy.V1.MissingNoncesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MissingPeggoNoncesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Injective.Peggy.V1.MissingNoncesResponse> MissingPeggoNoncesAsync(global::Injective.Peggy.V1.MissingNoncesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_MissingPeggoNonces, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override QueryClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new QueryClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(QueryBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Params, serviceImpl.Params)
          .AddMethod(__Method_CurrentValset, serviceImpl.CurrentValset)
          .AddMethod(__Method_ValsetRequest, serviceImpl.ValsetRequest)
          .AddMethod(__Method_ValsetConfirm, serviceImpl.ValsetConfirm)
          .AddMethod(__Method_ValsetConfirmsByNonce, serviceImpl.ValsetConfirmsByNonce)
          .AddMethod(__Method_LastValsetRequests, serviceImpl.LastValsetRequests)
          .AddMethod(__Method_LastPendingValsetRequestByAddr, serviceImpl.LastPendingValsetRequestByAddr)
          .AddMethod(__Method_LastEventByAddr, serviceImpl.LastEventByAddr)
          .AddMethod(__Method_GetPendingSendToEth, serviceImpl.GetPendingSendToEth)
          .AddMethod(__Method_BatchFees, serviceImpl.BatchFees)
          .AddMethod(__Method_OutgoingTxBatches, serviceImpl.OutgoingTxBatches)
          .AddMethod(__Method_LastPendingBatchRequestByAddr, serviceImpl.LastPendingBatchRequestByAddr)
          .AddMethod(__Method_BatchRequestByNonce, serviceImpl.BatchRequestByNonce)
          .AddMethod(__Method_BatchConfirms, serviceImpl.BatchConfirms)
          .AddMethod(__Method_ERC20ToDenom, serviceImpl.ERC20ToDenom)
          .AddMethod(__Method_DenomToERC20, serviceImpl.DenomToERC20)
          .AddMethod(__Method_GetDelegateKeyByValidator, serviceImpl.GetDelegateKeyByValidator)
          .AddMethod(__Method_GetDelegateKeyByEth, serviceImpl.GetDelegateKeyByEth)
          .AddMethod(__Method_GetDelegateKeyByOrchestrator, serviceImpl.GetDelegateKeyByOrchestrator)
          .AddMethod(__Method_PeggyModuleState, serviceImpl.PeggyModuleState)
          .AddMethod(__Method_MissingPeggoNonces, serviceImpl.MissingPeggoNonces).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, QueryBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_Params, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Injective.Peggy.V1.QueryParamsRequest, global::Injective.Peggy.V1.QueryParamsResponse>(serviceImpl.Params));
      serviceBinder.AddMethod(__Method_CurrentValset, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Injective.Peggy.V1.QueryCurrentValsetRequest, global::Injective.Peggy.V1.QueryCurrentValsetResponse>(serviceImpl.CurrentValset));
      serviceBinder.AddMethod(__Method_ValsetRequest, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Injective.Peggy.V1.QueryValsetRequestRequest, global::Injective.Peggy.V1.QueryValsetRequestResponse>(serviceImpl.ValsetRequest));
      serviceBinder.AddMethod(__Method_ValsetConfirm, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Injective.Peggy.V1.QueryValsetConfirmRequest, global::Injective.Peggy.V1.QueryValsetConfirmResponse>(serviceImpl.ValsetConfirm));
      serviceBinder.AddMethod(__Method_ValsetConfirmsByNonce, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Injective.Peggy.V1.QueryValsetConfirmsByNonceRequest, global::Injective.Peggy.V1.QueryValsetConfirmsByNonceResponse>(serviceImpl.ValsetConfirmsByNonce));
      serviceBinder.AddMethod(__Method_LastValsetRequests, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Injective.Peggy.V1.QueryLastValsetRequestsRequest, global::Injective.Peggy.V1.QueryLastValsetRequestsResponse>(serviceImpl.LastValsetRequests));
      serviceBinder.AddMethod(__Method_LastPendingValsetRequestByAddr, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Injective.Peggy.V1.QueryLastPendingValsetRequestByAddrRequest, global::Injective.Peggy.V1.QueryLastPendingValsetRequestByAddrResponse>(serviceImpl.LastPendingValsetRequestByAddr));
      serviceBinder.AddMethod(__Method_LastEventByAddr, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Injective.Peggy.V1.QueryLastEventByAddrRequest, global::Injective.Peggy.V1.QueryLastEventByAddrResponse>(serviceImpl.LastEventByAddr));
      serviceBinder.AddMethod(__Method_GetPendingSendToEth, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Injective.Peggy.V1.QueryPendingSendToEth, global::Injective.Peggy.V1.QueryPendingSendToEthResponse>(serviceImpl.GetPendingSendToEth));
      serviceBinder.AddMethod(__Method_BatchFees, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Injective.Peggy.V1.QueryBatchFeeRequest, global::Injective.Peggy.V1.QueryBatchFeeResponse>(serviceImpl.BatchFees));
      serviceBinder.AddMethod(__Method_OutgoingTxBatches, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Injective.Peggy.V1.QueryOutgoingTxBatchesRequest, global::Injective.Peggy.V1.QueryOutgoingTxBatchesResponse>(serviceImpl.OutgoingTxBatches));
      serviceBinder.AddMethod(__Method_LastPendingBatchRequestByAddr, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Injective.Peggy.V1.QueryLastPendingBatchRequestByAddrRequest, global::Injective.Peggy.V1.QueryLastPendingBatchRequestByAddrResponse>(serviceImpl.LastPendingBatchRequestByAddr));
      serviceBinder.AddMethod(__Method_BatchRequestByNonce, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Injective.Peggy.V1.QueryBatchRequestByNonceRequest, global::Injective.Peggy.V1.QueryBatchRequestByNonceResponse>(serviceImpl.BatchRequestByNonce));
      serviceBinder.AddMethod(__Method_BatchConfirms, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Injective.Peggy.V1.QueryBatchConfirmsRequest, global::Injective.Peggy.V1.QueryBatchConfirmsResponse>(serviceImpl.BatchConfirms));
      serviceBinder.AddMethod(__Method_ERC20ToDenom, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Injective.Peggy.V1.QueryERC20ToDenomRequest, global::Injective.Peggy.V1.QueryERC20ToDenomResponse>(serviceImpl.ERC20ToDenom));
      serviceBinder.AddMethod(__Method_DenomToERC20, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Injective.Peggy.V1.QueryDenomToERC20Request, global::Injective.Peggy.V1.QueryDenomToERC20Response>(serviceImpl.DenomToERC20));
      serviceBinder.AddMethod(__Method_GetDelegateKeyByValidator, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Injective.Peggy.V1.QueryDelegateKeysByValidatorAddress, global::Injective.Peggy.V1.QueryDelegateKeysByValidatorAddressResponse>(serviceImpl.GetDelegateKeyByValidator));
      serviceBinder.AddMethod(__Method_GetDelegateKeyByEth, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Injective.Peggy.V1.QueryDelegateKeysByEthAddress, global::Injective.Peggy.V1.QueryDelegateKeysByEthAddressResponse>(serviceImpl.GetDelegateKeyByEth));
      serviceBinder.AddMethod(__Method_GetDelegateKeyByOrchestrator, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Injective.Peggy.V1.QueryDelegateKeysByOrchestratorAddress, global::Injective.Peggy.V1.QueryDelegateKeysByOrchestratorAddressResponse>(serviceImpl.GetDelegateKeyByOrchestrator));
      serviceBinder.AddMethod(__Method_PeggyModuleState, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Injective.Peggy.V1.QueryModuleStateRequest, global::Injective.Peggy.V1.QueryModuleStateResponse>(serviceImpl.PeggyModuleState));
      serviceBinder.AddMethod(__Method_MissingPeggoNonces, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Injective.Peggy.V1.MissingNoncesRequest, global::Injective.Peggy.V1.MissingNoncesResponse>(serviceImpl.MissingPeggoNonces));
    }

  }
}
#endregion
