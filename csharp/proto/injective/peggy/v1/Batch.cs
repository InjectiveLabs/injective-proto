// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: injective/peggy/v1/batch.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Injective.Peggy.V1 {

  /// <summary>Holder for reflection information generated from injective/peggy/v1/batch.proto</summary>
  public static partial class BatchReflection {

    #region Descriptor
    /// <summary>File descriptor for injective/peggy/v1/batch.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BatchReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5pbmplY3RpdmUvcGVnZ3kvdjEvYmF0Y2gucHJvdG8SEmluamVjdGl2ZS5w",
            "ZWdneS52MRokaW5qZWN0aXZlL3BlZ2d5L3YxL2F0dGVzdGF0aW9uLnByb3Rv",
            "IqIBCg9PdXRnb2luZ1R4QmF0Y2gSEwoLYmF0Y2hfbm9uY2UYASABKAQSFQoN",
            "YmF0Y2hfdGltZW91dBgCIAEoBBI8Cgx0cmFuc2FjdGlvbnMYAyADKAsyJi5p",
            "bmplY3RpdmUucGVnZ3kudjEuT3V0Z29pbmdUcmFuc2ZlclR4EhYKDnRva2Vu",
            "X2NvbnRyYWN0GAQgASgJEg0KBWJsb2NrGAUgASgEIq4BChJPdXRnb2luZ1Ry",
            "YW5zZmVyVHgSCgoCaWQYASABKAQSDgoGc2VuZGVyGAIgASgJEhQKDGRlc3Rf",
            "YWRkcmVzcxgDIAEoCRIzCgtlcmMyMF90b2tlbhgEIAEoCzIeLmluamVjdGl2",
            "ZS5wZWdneS52MS5FUkMyMFRva2VuEjEKCWVyYzIwX2ZlZRgFIAEoCzIeLmlu",
            "amVjdGl2ZS5wZWdneS52MS5FUkMyMFRva2VuQk1aS2dpdGh1Yi5jb20vSW5q",
            "ZWN0aXZlTGFicy9pbmplY3RpdmUtY29yZS9pbmplY3RpdmUtY2hhaW4vbW9k",
            "dWxlcy9wZWdneS90eXBlc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Injective.Peggy.V1.AttestationReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Peggy.V1.OutgoingTxBatch), global::Injective.Peggy.V1.OutgoingTxBatch.Parser, new[]{ "BatchNonce", "BatchTimeout", "Transactions", "TokenContract", "Block" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Injective.Peggy.V1.OutgoingTransferTx), global::Injective.Peggy.V1.OutgoingTransferTx.Parser, new[]{ "Id", "Sender", "DestAddress", "Erc20Token", "Erc20Fee" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// OutgoingTxBatch represents a batch of transactions going from Peggy to ETH
  /// </summary>
  public sealed partial class OutgoingTxBatch : pb::IMessage<OutgoingTxBatch>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OutgoingTxBatch> _parser = new pb::MessageParser<OutgoingTxBatch>(() => new OutgoingTxBatch());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OutgoingTxBatch> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Peggy.V1.BatchReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OutgoingTxBatch() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OutgoingTxBatch(OutgoingTxBatch other) : this() {
      batchNonce_ = other.batchNonce_;
      batchTimeout_ = other.batchTimeout_;
      transactions_ = other.transactions_.Clone();
      tokenContract_ = other.tokenContract_;
      block_ = other.block_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OutgoingTxBatch Clone() {
      return new OutgoingTxBatch(this);
    }

    /// <summary>Field number for the "batch_nonce" field.</summary>
    public const int BatchNonceFieldNumber = 1;
    private ulong batchNonce_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong BatchNonce {
      get { return batchNonce_; }
      set {
        batchNonce_ = value;
      }
    }

    /// <summary>Field number for the "batch_timeout" field.</summary>
    public const int BatchTimeoutFieldNumber = 2;
    private ulong batchTimeout_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong BatchTimeout {
      get { return batchTimeout_; }
      set {
        batchTimeout_ = value;
      }
    }

    /// <summary>Field number for the "transactions" field.</summary>
    public const int TransactionsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Injective.Peggy.V1.OutgoingTransferTx> _repeated_transactions_codec
        = pb::FieldCodec.ForMessage(26, global::Injective.Peggy.V1.OutgoingTransferTx.Parser);
    private readonly pbc::RepeatedField<global::Injective.Peggy.V1.OutgoingTransferTx> transactions_ = new pbc::RepeatedField<global::Injective.Peggy.V1.OutgoingTransferTx>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Injective.Peggy.V1.OutgoingTransferTx> Transactions {
      get { return transactions_; }
    }

    /// <summary>Field number for the "token_contract" field.</summary>
    public const int TokenContractFieldNumber = 4;
    private string tokenContract_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TokenContract {
      get { return tokenContract_; }
      set {
        tokenContract_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "block" field.</summary>
    public const int BlockFieldNumber = 5;
    private ulong block_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Block {
      get { return block_; }
      set {
        block_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OutgoingTxBatch);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OutgoingTxBatch other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BatchNonce != other.BatchNonce) return false;
      if (BatchTimeout != other.BatchTimeout) return false;
      if(!transactions_.Equals(other.transactions_)) return false;
      if (TokenContract != other.TokenContract) return false;
      if (Block != other.Block) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (BatchNonce != 0UL) hash ^= BatchNonce.GetHashCode();
      if (BatchTimeout != 0UL) hash ^= BatchTimeout.GetHashCode();
      hash ^= transactions_.GetHashCode();
      if (TokenContract.Length != 0) hash ^= TokenContract.GetHashCode();
      if (Block != 0UL) hash ^= Block.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BatchNonce != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(BatchNonce);
      }
      if (BatchTimeout != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(BatchTimeout);
      }
      transactions_.WriteTo(output, _repeated_transactions_codec);
      if (TokenContract.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TokenContract);
      }
      if (Block != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(Block);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BatchNonce != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(BatchNonce);
      }
      if (BatchTimeout != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(BatchTimeout);
      }
      transactions_.WriteTo(ref output, _repeated_transactions_codec);
      if (TokenContract.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TokenContract);
      }
      if (Block != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(Block);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (BatchNonce != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BatchNonce);
      }
      if (BatchTimeout != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BatchTimeout);
      }
      size += transactions_.CalculateSize(_repeated_transactions_codec);
      if (TokenContract.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TokenContract);
      }
      if (Block != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Block);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OutgoingTxBatch other) {
      if (other == null) {
        return;
      }
      if (other.BatchNonce != 0UL) {
        BatchNonce = other.BatchNonce;
      }
      if (other.BatchTimeout != 0UL) {
        BatchTimeout = other.BatchTimeout;
      }
      transactions_.Add(other.transactions_);
      if (other.TokenContract.Length != 0) {
        TokenContract = other.TokenContract;
      }
      if (other.Block != 0UL) {
        Block = other.Block;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BatchNonce = input.ReadUInt64();
            break;
          }
          case 16: {
            BatchTimeout = input.ReadUInt64();
            break;
          }
          case 26: {
            transactions_.AddEntriesFrom(input, _repeated_transactions_codec);
            break;
          }
          case 34: {
            TokenContract = input.ReadString();
            break;
          }
          case 40: {
            Block = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BatchNonce = input.ReadUInt64();
            break;
          }
          case 16: {
            BatchTimeout = input.ReadUInt64();
            break;
          }
          case 26: {
            transactions_.AddEntriesFrom(ref input, _repeated_transactions_codec);
            break;
          }
          case 34: {
            TokenContract = input.ReadString();
            break;
          }
          case 40: {
            Block = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// OutgoingTransferTx represents an individual send from Peggy to ETH
  /// </summary>
  public sealed partial class OutgoingTransferTx : pb::IMessage<OutgoingTransferTx>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OutgoingTransferTx> _parser = new pb::MessageParser<OutgoingTransferTx>(() => new OutgoingTransferTx());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OutgoingTransferTx> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Injective.Peggy.V1.BatchReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OutgoingTransferTx() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OutgoingTransferTx(OutgoingTransferTx other) : this() {
      id_ = other.id_;
      sender_ = other.sender_;
      destAddress_ = other.destAddress_;
      erc20Token_ = other.erc20Token_ != null ? other.erc20Token_.Clone() : null;
      erc20Fee_ = other.erc20Fee_ != null ? other.erc20Fee_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OutgoingTransferTx Clone() {
      return new OutgoingTransferTx(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private ulong id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "sender" field.</summary>
    public const int SenderFieldNumber = 2;
    private string sender_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Sender {
      get { return sender_; }
      set {
        sender_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dest_address" field.</summary>
    public const int DestAddressFieldNumber = 3;
    private string destAddress_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DestAddress {
      get { return destAddress_; }
      set {
        destAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "erc20_token" field.</summary>
    public const int Erc20TokenFieldNumber = 4;
    private global::Injective.Peggy.V1.ERC20Token erc20Token_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Injective.Peggy.V1.ERC20Token Erc20Token {
      get { return erc20Token_; }
      set {
        erc20Token_ = value;
      }
    }

    /// <summary>Field number for the "erc20_fee" field.</summary>
    public const int Erc20FeeFieldNumber = 5;
    private global::Injective.Peggy.V1.ERC20Token erc20Fee_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Injective.Peggy.V1.ERC20Token Erc20Fee {
      get { return erc20Fee_; }
      set {
        erc20Fee_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OutgoingTransferTx);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OutgoingTransferTx other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Sender != other.Sender) return false;
      if (DestAddress != other.DestAddress) return false;
      if (!object.Equals(Erc20Token, other.Erc20Token)) return false;
      if (!object.Equals(Erc20Fee, other.Erc20Fee)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0UL) hash ^= Id.GetHashCode();
      if (Sender.Length != 0) hash ^= Sender.GetHashCode();
      if (DestAddress.Length != 0) hash ^= DestAddress.GetHashCode();
      if (erc20Token_ != null) hash ^= Erc20Token.GetHashCode();
      if (erc20Fee_ != null) hash ^= Erc20Fee.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
      if (Sender.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Sender);
      }
      if (DestAddress.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DestAddress);
      }
      if (erc20Token_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Erc20Token);
      }
      if (erc20Fee_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Erc20Fee);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
      if (Sender.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Sender);
      }
      if (DestAddress.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DestAddress);
      }
      if (erc20Token_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Erc20Token);
      }
      if (erc20Fee_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Erc20Fee);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Id);
      }
      if (Sender.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sender);
      }
      if (DestAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DestAddress);
      }
      if (erc20Token_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Erc20Token);
      }
      if (erc20Fee_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Erc20Fee);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OutgoingTransferTx other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0UL) {
        Id = other.Id;
      }
      if (other.Sender.Length != 0) {
        Sender = other.Sender;
      }
      if (other.DestAddress.Length != 0) {
        DestAddress = other.DestAddress;
      }
      if (other.erc20Token_ != null) {
        if (erc20Token_ == null) {
          Erc20Token = new global::Injective.Peggy.V1.ERC20Token();
        }
        Erc20Token.MergeFrom(other.Erc20Token);
      }
      if (other.erc20Fee_ != null) {
        if (erc20Fee_ == null) {
          Erc20Fee = new global::Injective.Peggy.V1.ERC20Token();
        }
        Erc20Fee.MergeFrom(other.Erc20Fee);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
          case 18: {
            Sender = input.ReadString();
            break;
          }
          case 26: {
            DestAddress = input.ReadString();
            break;
          }
          case 34: {
            if (erc20Token_ == null) {
              Erc20Token = new global::Injective.Peggy.V1.ERC20Token();
            }
            input.ReadMessage(Erc20Token);
            break;
          }
          case 42: {
            if (erc20Fee_ == null) {
              Erc20Fee = new global::Injective.Peggy.V1.ERC20Token();
            }
            input.ReadMessage(Erc20Fee);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
          case 18: {
            Sender = input.ReadString();
            break;
          }
          case 26: {
            DestAddress = input.ReadString();
            break;
          }
          case 34: {
            if (erc20Token_ == null) {
              Erc20Token = new global::Injective.Peggy.V1.ERC20Token();
            }
            input.ReadMessage(Erc20Token);
            break;
          }
          case 42: {
            if (erc20Fee_ == null) {
              Erc20Fee = new global::Injective.Peggy.V1.ERC20Token();
            }
            input.ReadMessage(Erc20Fee);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
