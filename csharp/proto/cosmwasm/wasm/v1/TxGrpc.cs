// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: cosmwasm/wasm/v1/tx.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Cosmwasm.Wasm.V1 {
  /// <summary>
  /// Msg defines the wasm Msg service.
  /// </summary>
  public static partial class Msg
  {
    static readonly string __ServiceName = "cosmwasm.wasm.v1.Msg";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmwasm.Wasm.V1.MsgStoreCode> __Marshaller_cosmwasm_wasm_v1_MsgStoreCode = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmwasm.Wasm.V1.MsgStoreCode.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmwasm.Wasm.V1.MsgStoreCodeResponse> __Marshaller_cosmwasm_wasm_v1_MsgStoreCodeResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmwasm.Wasm.V1.MsgStoreCodeResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmwasm.Wasm.V1.MsgInstantiateContract> __Marshaller_cosmwasm_wasm_v1_MsgInstantiateContract = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmwasm.Wasm.V1.MsgInstantiateContract.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmwasm.Wasm.V1.MsgInstantiateContractResponse> __Marshaller_cosmwasm_wasm_v1_MsgInstantiateContractResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmwasm.Wasm.V1.MsgInstantiateContractResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmwasm.Wasm.V1.MsgInstantiateContract2> __Marshaller_cosmwasm_wasm_v1_MsgInstantiateContract2 = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmwasm.Wasm.V1.MsgInstantiateContract2.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmwasm.Wasm.V1.MsgInstantiateContract2Response> __Marshaller_cosmwasm_wasm_v1_MsgInstantiateContract2Response = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmwasm.Wasm.V1.MsgInstantiateContract2Response.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmwasm.Wasm.V1.MsgExecuteContract> __Marshaller_cosmwasm_wasm_v1_MsgExecuteContract = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmwasm.Wasm.V1.MsgExecuteContract.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmwasm.Wasm.V1.MsgExecuteContractResponse> __Marshaller_cosmwasm_wasm_v1_MsgExecuteContractResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmwasm.Wasm.V1.MsgExecuteContractResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmwasm.Wasm.V1.MsgMigrateContract> __Marshaller_cosmwasm_wasm_v1_MsgMigrateContract = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmwasm.Wasm.V1.MsgMigrateContract.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmwasm.Wasm.V1.MsgMigrateContractResponse> __Marshaller_cosmwasm_wasm_v1_MsgMigrateContractResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmwasm.Wasm.V1.MsgMigrateContractResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmwasm.Wasm.V1.MsgUpdateAdmin> __Marshaller_cosmwasm_wasm_v1_MsgUpdateAdmin = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmwasm.Wasm.V1.MsgUpdateAdmin.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmwasm.Wasm.V1.MsgUpdateAdminResponse> __Marshaller_cosmwasm_wasm_v1_MsgUpdateAdminResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmwasm.Wasm.V1.MsgUpdateAdminResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmwasm.Wasm.V1.MsgClearAdmin> __Marshaller_cosmwasm_wasm_v1_MsgClearAdmin = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmwasm.Wasm.V1.MsgClearAdmin.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmwasm.Wasm.V1.MsgClearAdminResponse> __Marshaller_cosmwasm_wasm_v1_MsgClearAdminResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmwasm.Wasm.V1.MsgClearAdminResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmwasm.Wasm.V1.MsgUpdateInstantiateConfig> __Marshaller_cosmwasm_wasm_v1_MsgUpdateInstantiateConfig = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmwasm.Wasm.V1.MsgUpdateInstantiateConfig.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmwasm.Wasm.V1.MsgUpdateInstantiateConfigResponse> __Marshaller_cosmwasm_wasm_v1_MsgUpdateInstantiateConfigResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmwasm.Wasm.V1.MsgUpdateInstantiateConfigResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmwasm.Wasm.V1.MsgUpdateParams> __Marshaller_cosmwasm_wasm_v1_MsgUpdateParams = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmwasm.Wasm.V1.MsgUpdateParams.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmwasm.Wasm.V1.MsgUpdateParamsResponse> __Marshaller_cosmwasm_wasm_v1_MsgUpdateParamsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmwasm.Wasm.V1.MsgUpdateParamsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmwasm.Wasm.V1.MsgSudoContract> __Marshaller_cosmwasm_wasm_v1_MsgSudoContract = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmwasm.Wasm.V1.MsgSudoContract.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmwasm.Wasm.V1.MsgSudoContractResponse> __Marshaller_cosmwasm_wasm_v1_MsgSudoContractResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmwasm.Wasm.V1.MsgSudoContractResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmwasm.Wasm.V1.MsgPinCodes> __Marshaller_cosmwasm_wasm_v1_MsgPinCodes = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmwasm.Wasm.V1.MsgPinCodes.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmwasm.Wasm.V1.MsgPinCodesResponse> __Marshaller_cosmwasm_wasm_v1_MsgPinCodesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmwasm.Wasm.V1.MsgPinCodesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmwasm.Wasm.V1.MsgUnpinCodes> __Marshaller_cosmwasm_wasm_v1_MsgUnpinCodes = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmwasm.Wasm.V1.MsgUnpinCodes.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmwasm.Wasm.V1.MsgUnpinCodesResponse> __Marshaller_cosmwasm_wasm_v1_MsgUnpinCodesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmwasm.Wasm.V1.MsgUnpinCodesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmwasm.Wasm.V1.MsgStoreAndInstantiateContract> __Marshaller_cosmwasm_wasm_v1_MsgStoreAndInstantiateContract = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmwasm.Wasm.V1.MsgStoreAndInstantiateContract.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmwasm.Wasm.V1.MsgStoreAndInstantiateContractResponse> __Marshaller_cosmwasm_wasm_v1_MsgStoreAndInstantiateContractResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmwasm.Wasm.V1.MsgStoreAndInstantiateContractResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmwasm.Wasm.V1.MsgRemoveCodeUploadParamsAddresses> __Marshaller_cosmwasm_wasm_v1_MsgRemoveCodeUploadParamsAddresses = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmwasm.Wasm.V1.MsgRemoveCodeUploadParamsAddresses.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmwasm.Wasm.V1.MsgRemoveCodeUploadParamsAddressesResponse> __Marshaller_cosmwasm_wasm_v1_MsgRemoveCodeUploadParamsAddressesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmwasm.Wasm.V1.MsgRemoveCodeUploadParamsAddressesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmwasm.Wasm.V1.MsgAddCodeUploadParamsAddresses> __Marshaller_cosmwasm_wasm_v1_MsgAddCodeUploadParamsAddresses = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmwasm.Wasm.V1.MsgAddCodeUploadParamsAddresses.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmwasm.Wasm.V1.MsgAddCodeUploadParamsAddressesResponse> __Marshaller_cosmwasm_wasm_v1_MsgAddCodeUploadParamsAddressesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmwasm.Wasm.V1.MsgAddCodeUploadParamsAddressesResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmwasm.Wasm.V1.MsgStoreCode, global::Cosmwasm.Wasm.V1.MsgStoreCodeResponse> __Method_StoreCode = new grpc::Method<global::Cosmwasm.Wasm.V1.MsgStoreCode, global::Cosmwasm.Wasm.V1.MsgStoreCodeResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "StoreCode",
        __Marshaller_cosmwasm_wasm_v1_MsgStoreCode,
        __Marshaller_cosmwasm_wasm_v1_MsgStoreCodeResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmwasm.Wasm.V1.MsgInstantiateContract, global::Cosmwasm.Wasm.V1.MsgInstantiateContractResponse> __Method_InstantiateContract = new grpc::Method<global::Cosmwasm.Wasm.V1.MsgInstantiateContract, global::Cosmwasm.Wasm.V1.MsgInstantiateContractResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "InstantiateContract",
        __Marshaller_cosmwasm_wasm_v1_MsgInstantiateContract,
        __Marshaller_cosmwasm_wasm_v1_MsgInstantiateContractResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmwasm.Wasm.V1.MsgInstantiateContract2, global::Cosmwasm.Wasm.V1.MsgInstantiateContract2Response> __Method_InstantiateContract2 = new grpc::Method<global::Cosmwasm.Wasm.V1.MsgInstantiateContract2, global::Cosmwasm.Wasm.V1.MsgInstantiateContract2Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "InstantiateContract2",
        __Marshaller_cosmwasm_wasm_v1_MsgInstantiateContract2,
        __Marshaller_cosmwasm_wasm_v1_MsgInstantiateContract2Response);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmwasm.Wasm.V1.MsgExecuteContract, global::Cosmwasm.Wasm.V1.MsgExecuteContractResponse> __Method_ExecuteContract = new grpc::Method<global::Cosmwasm.Wasm.V1.MsgExecuteContract, global::Cosmwasm.Wasm.V1.MsgExecuteContractResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ExecuteContract",
        __Marshaller_cosmwasm_wasm_v1_MsgExecuteContract,
        __Marshaller_cosmwasm_wasm_v1_MsgExecuteContractResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmwasm.Wasm.V1.MsgMigrateContract, global::Cosmwasm.Wasm.V1.MsgMigrateContractResponse> __Method_MigrateContract = new grpc::Method<global::Cosmwasm.Wasm.V1.MsgMigrateContract, global::Cosmwasm.Wasm.V1.MsgMigrateContractResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "MigrateContract",
        __Marshaller_cosmwasm_wasm_v1_MsgMigrateContract,
        __Marshaller_cosmwasm_wasm_v1_MsgMigrateContractResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmwasm.Wasm.V1.MsgUpdateAdmin, global::Cosmwasm.Wasm.V1.MsgUpdateAdminResponse> __Method_UpdateAdmin = new grpc::Method<global::Cosmwasm.Wasm.V1.MsgUpdateAdmin, global::Cosmwasm.Wasm.V1.MsgUpdateAdminResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateAdmin",
        __Marshaller_cosmwasm_wasm_v1_MsgUpdateAdmin,
        __Marshaller_cosmwasm_wasm_v1_MsgUpdateAdminResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmwasm.Wasm.V1.MsgClearAdmin, global::Cosmwasm.Wasm.V1.MsgClearAdminResponse> __Method_ClearAdmin = new grpc::Method<global::Cosmwasm.Wasm.V1.MsgClearAdmin, global::Cosmwasm.Wasm.V1.MsgClearAdminResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ClearAdmin",
        __Marshaller_cosmwasm_wasm_v1_MsgClearAdmin,
        __Marshaller_cosmwasm_wasm_v1_MsgClearAdminResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmwasm.Wasm.V1.MsgUpdateInstantiateConfig, global::Cosmwasm.Wasm.V1.MsgUpdateInstantiateConfigResponse> __Method_UpdateInstantiateConfig = new grpc::Method<global::Cosmwasm.Wasm.V1.MsgUpdateInstantiateConfig, global::Cosmwasm.Wasm.V1.MsgUpdateInstantiateConfigResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateInstantiateConfig",
        __Marshaller_cosmwasm_wasm_v1_MsgUpdateInstantiateConfig,
        __Marshaller_cosmwasm_wasm_v1_MsgUpdateInstantiateConfigResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmwasm.Wasm.V1.MsgUpdateParams, global::Cosmwasm.Wasm.V1.MsgUpdateParamsResponse> __Method_UpdateParams = new grpc::Method<global::Cosmwasm.Wasm.V1.MsgUpdateParams, global::Cosmwasm.Wasm.V1.MsgUpdateParamsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateParams",
        __Marshaller_cosmwasm_wasm_v1_MsgUpdateParams,
        __Marshaller_cosmwasm_wasm_v1_MsgUpdateParamsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmwasm.Wasm.V1.MsgSudoContract, global::Cosmwasm.Wasm.V1.MsgSudoContractResponse> __Method_SudoContract = new grpc::Method<global::Cosmwasm.Wasm.V1.MsgSudoContract, global::Cosmwasm.Wasm.V1.MsgSudoContractResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SudoContract",
        __Marshaller_cosmwasm_wasm_v1_MsgSudoContract,
        __Marshaller_cosmwasm_wasm_v1_MsgSudoContractResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmwasm.Wasm.V1.MsgPinCodes, global::Cosmwasm.Wasm.V1.MsgPinCodesResponse> __Method_PinCodes = new grpc::Method<global::Cosmwasm.Wasm.V1.MsgPinCodes, global::Cosmwasm.Wasm.V1.MsgPinCodesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PinCodes",
        __Marshaller_cosmwasm_wasm_v1_MsgPinCodes,
        __Marshaller_cosmwasm_wasm_v1_MsgPinCodesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmwasm.Wasm.V1.MsgUnpinCodes, global::Cosmwasm.Wasm.V1.MsgUnpinCodesResponse> __Method_UnpinCodes = new grpc::Method<global::Cosmwasm.Wasm.V1.MsgUnpinCodes, global::Cosmwasm.Wasm.V1.MsgUnpinCodesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UnpinCodes",
        __Marshaller_cosmwasm_wasm_v1_MsgUnpinCodes,
        __Marshaller_cosmwasm_wasm_v1_MsgUnpinCodesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmwasm.Wasm.V1.MsgStoreAndInstantiateContract, global::Cosmwasm.Wasm.V1.MsgStoreAndInstantiateContractResponse> __Method_StoreAndInstantiateContract = new grpc::Method<global::Cosmwasm.Wasm.V1.MsgStoreAndInstantiateContract, global::Cosmwasm.Wasm.V1.MsgStoreAndInstantiateContractResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "StoreAndInstantiateContract",
        __Marshaller_cosmwasm_wasm_v1_MsgStoreAndInstantiateContract,
        __Marshaller_cosmwasm_wasm_v1_MsgStoreAndInstantiateContractResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmwasm.Wasm.V1.MsgRemoveCodeUploadParamsAddresses, global::Cosmwasm.Wasm.V1.MsgRemoveCodeUploadParamsAddressesResponse> __Method_RemoveCodeUploadParamsAddresses = new grpc::Method<global::Cosmwasm.Wasm.V1.MsgRemoveCodeUploadParamsAddresses, global::Cosmwasm.Wasm.V1.MsgRemoveCodeUploadParamsAddressesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveCodeUploadParamsAddresses",
        __Marshaller_cosmwasm_wasm_v1_MsgRemoveCodeUploadParamsAddresses,
        __Marshaller_cosmwasm_wasm_v1_MsgRemoveCodeUploadParamsAddressesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmwasm.Wasm.V1.MsgAddCodeUploadParamsAddresses, global::Cosmwasm.Wasm.V1.MsgAddCodeUploadParamsAddressesResponse> __Method_AddCodeUploadParamsAddresses = new grpc::Method<global::Cosmwasm.Wasm.V1.MsgAddCodeUploadParamsAddresses, global::Cosmwasm.Wasm.V1.MsgAddCodeUploadParamsAddressesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddCodeUploadParamsAddresses",
        __Marshaller_cosmwasm_wasm_v1_MsgAddCodeUploadParamsAddresses,
        __Marshaller_cosmwasm_wasm_v1_MsgAddCodeUploadParamsAddressesResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Cosmwasm.Wasm.V1.TxReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Msg</summary>
    [grpc::BindServiceMethod(typeof(Msg), "BindService")]
    public abstract partial class MsgBase
    {
      /// <summary>
      /// StoreCode to submit Wasm code to the system
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cosmwasm.Wasm.V1.MsgStoreCodeResponse> StoreCode(global::Cosmwasm.Wasm.V1.MsgStoreCode request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  InstantiateContract creates a new smart contract instance for the given
      ///  code id.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cosmwasm.Wasm.V1.MsgInstantiateContractResponse> InstantiateContract(global::Cosmwasm.Wasm.V1.MsgInstantiateContract request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  InstantiateContract2 creates a new smart contract instance for the given
      ///  code id with a predictable address
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cosmwasm.Wasm.V1.MsgInstantiateContract2Response> InstantiateContract2(global::Cosmwasm.Wasm.V1.MsgInstantiateContract2 request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Execute submits the given message data to a smart contract
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cosmwasm.Wasm.V1.MsgExecuteContractResponse> ExecuteContract(global::Cosmwasm.Wasm.V1.MsgExecuteContract request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Migrate runs a code upgrade/ downgrade for a smart contract
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cosmwasm.Wasm.V1.MsgMigrateContractResponse> MigrateContract(global::Cosmwasm.Wasm.V1.MsgMigrateContract request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// UpdateAdmin sets a new   admin for a smart contract
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cosmwasm.Wasm.V1.MsgUpdateAdminResponse> UpdateAdmin(global::Cosmwasm.Wasm.V1.MsgUpdateAdmin request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// ClearAdmin removes any admin stored for a smart contract
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cosmwasm.Wasm.V1.MsgClearAdminResponse> ClearAdmin(global::Cosmwasm.Wasm.V1.MsgClearAdmin request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// UpdateInstantiateConfig updates instantiate config for a smart contract
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cosmwasm.Wasm.V1.MsgUpdateInstantiateConfigResponse> UpdateInstantiateConfig(global::Cosmwasm.Wasm.V1.MsgUpdateInstantiateConfig request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// UpdateParams defines a governance operation for updating the x/wasm
      /// module parameters. The authority is defined in the keeper.
      ///
      /// Since: 0.40
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cosmwasm.Wasm.V1.MsgUpdateParamsResponse> UpdateParams(global::Cosmwasm.Wasm.V1.MsgUpdateParams request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// SudoContract defines a governance operation for calling sudo
      /// on a contract. The authority is defined in the keeper.
      ///
      /// Since: 0.40
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cosmwasm.Wasm.V1.MsgSudoContractResponse> SudoContract(global::Cosmwasm.Wasm.V1.MsgSudoContract request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// PinCodes defines a governance operation for pinning a set of
      /// code ids in the wasmvm cache. The authority is defined in the keeper.
      ///
      /// Since: 0.40
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cosmwasm.Wasm.V1.MsgPinCodesResponse> PinCodes(global::Cosmwasm.Wasm.V1.MsgPinCodes request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// UnpinCodes defines a governance operation for unpinning a set of
      /// code ids in the wasmvm cache. The authority is defined in the keeper.
      ///
      /// Since: 0.40
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cosmwasm.Wasm.V1.MsgUnpinCodesResponse> UnpinCodes(global::Cosmwasm.Wasm.V1.MsgUnpinCodes request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// StoreAndInstantiateContract defines a governance operation for storing
      /// and instantiating the contract. The authority is defined in the keeper.
      ///
      /// Since: 0.40
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cosmwasm.Wasm.V1.MsgStoreAndInstantiateContractResponse> StoreAndInstantiateContract(global::Cosmwasm.Wasm.V1.MsgStoreAndInstantiateContract request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// RemoveCodeUploadParamsAddresses defines a governance operation for
      /// removing addresses from code upload params.
      /// The authority is defined in the keeper.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cosmwasm.Wasm.V1.MsgRemoveCodeUploadParamsAddressesResponse> RemoveCodeUploadParamsAddresses(global::Cosmwasm.Wasm.V1.MsgRemoveCodeUploadParamsAddresses request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// AddCodeUploadParamsAddresses defines a governance operation for
      /// adding addresses to code upload params.
      /// The authority is defined in the keeper.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cosmwasm.Wasm.V1.MsgAddCodeUploadParamsAddressesResponse> AddCodeUploadParamsAddresses(global::Cosmwasm.Wasm.V1.MsgAddCodeUploadParamsAddresses request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Msg</summary>
    public partial class MsgClient : grpc::ClientBase<MsgClient>
    {
      /// <summary>Creates a new client for Msg</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public MsgClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Msg that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public MsgClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected MsgClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected MsgClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// StoreCode to submit Wasm code to the system
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmwasm.Wasm.V1.MsgStoreCodeResponse StoreCode(global::Cosmwasm.Wasm.V1.MsgStoreCode request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StoreCode(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// StoreCode to submit Wasm code to the system
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmwasm.Wasm.V1.MsgStoreCodeResponse StoreCode(global::Cosmwasm.Wasm.V1.MsgStoreCode request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_StoreCode, null, options, request);
      }
      /// <summary>
      /// StoreCode to submit Wasm code to the system
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmwasm.Wasm.V1.MsgStoreCodeResponse> StoreCodeAsync(global::Cosmwasm.Wasm.V1.MsgStoreCode request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StoreCodeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// StoreCode to submit Wasm code to the system
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmwasm.Wasm.V1.MsgStoreCodeResponse> StoreCodeAsync(global::Cosmwasm.Wasm.V1.MsgStoreCode request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_StoreCode, null, options, request);
      }
      /// <summary>
      ///  InstantiateContract creates a new smart contract instance for the given
      ///  code id.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmwasm.Wasm.V1.MsgInstantiateContractResponse InstantiateContract(global::Cosmwasm.Wasm.V1.MsgInstantiateContract request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InstantiateContract(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  InstantiateContract creates a new smart contract instance for the given
      ///  code id.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmwasm.Wasm.V1.MsgInstantiateContractResponse InstantiateContract(global::Cosmwasm.Wasm.V1.MsgInstantiateContract request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_InstantiateContract, null, options, request);
      }
      /// <summary>
      ///  InstantiateContract creates a new smart contract instance for the given
      ///  code id.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmwasm.Wasm.V1.MsgInstantiateContractResponse> InstantiateContractAsync(global::Cosmwasm.Wasm.V1.MsgInstantiateContract request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InstantiateContractAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  InstantiateContract creates a new smart contract instance for the given
      ///  code id.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmwasm.Wasm.V1.MsgInstantiateContractResponse> InstantiateContractAsync(global::Cosmwasm.Wasm.V1.MsgInstantiateContract request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_InstantiateContract, null, options, request);
      }
      /// <summary>
      ///  InstantiateContract2 creates a new smart contract instance for the given
      ///  code id with a predictable address
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmwasm.Wasm.V1.MsgInstantiateContract2Response InstantiateContract2(global::Cosmwasm.Wasm.V1.MsgInstantiateContract2 request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InstantiateContract2(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  InstantiateContract2 creates a new smart contract instance for the given
      ///  code id with a predictable address
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmwasm.Wasm.V1.MsgInstantiateContract2Response InstantiateContract2(global::Cosmwasm.Wasm.V1.MsgInstantiateContract2 request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_InstantiateContract2, null, options, request);
      }
      /// <summary>
      ///  InstantiateContract2 creates a new smart contract instance for the given
      ///  code id with a predictable address
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmwasm.Wasm.V1.MsgInstantiateContract2Response> InstantiateContract2Async(global::Cosmwasm.Wasm.V1.MsgInstantiateContract2 request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InstantiateContract2Async(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  InstantiateContract2 creates a new smart contract instance for the given
      ///  code id with a predictable address
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmwasm.Wasm.V1.MsgInstantiateContract2Response> InstantiateContract2Async(global::Cosmwasm.Wasm.V1.MsgInstantiateContract2 request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_InstantiateContract2, null, options, request);
      }
      /// <summary>
      /// Execute submits the given message data to a smart contract
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmwasm.Wasm.V1.MsgExecuteContractResponse ExecuteContract(global::Cosmwasm.Wasm.V1.MsgExecuteContract request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExecuteContract(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Execute submits the given message data to a smart contract
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmwasm.Wasm.V1.MsgExecuteContractResponse ExecuteContract(global::Cosmwasm.Wasm.V1.MsgExecuteContract request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ExecuteContract, null, options, request);
      }
      /// <summary>
      /// Execute submits the given message data to a smart contract
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmwasm.Wasm.V1.MsgExecuteContractResponse> ExecuteContractAsync(global::Cosmwasm.Wasm.V1.MsgExecuteContract request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExecuteContractAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Execute submits the given message data to a smart contract
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmwasm.Wasm.V1.MsgExecuteContractResponse> ExecuteContractAsync(global::Cosmwasm.Wasm.V1.MsgExecuteContract request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ExecuteContract, null, options, request);
      }
      /// <summary>
      /// Migrate runs a code upgrade/ downgrade for a smart contract
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmwasm.Wasm.V1.MsgMigrateContractResponse MigrateContract(global::Cosmwasm.Wasm.V1.MsgMigrateContract request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MigrateContract(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Migrate runs a code upgrade/ downgrade for a smart contract
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmwasm.Wasm.V1.MsgMigrateContractResponse MigrateContract(global::Cosmwasm.Wasm.V1.MsgMigrateContract request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_MigrateContract, null, options, request);
      }
      /// <summary>
      /// Migrate runs a code upgrade/ downgrade for a smart contract
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmwasm.Wasm.V1.MsgMigrateContractResponse> MigrateContractAsync(global::Cosmwasm.Wasm.V1.MsgMigrateContract request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MigrateContractAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Migrate runs a code upgrade/ downgrade for a smart contract
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmwasm.Wasm.V1.MsgMigrateContractResponse> MigrateContractAsync(global::Cosmwasm.Wasm.V1.MsgMigrateContract request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_MigrateContract, null, options, request);
      }
      /// <summary>
      /// UpdateAdmin sets a new   admin for a smart contract
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmwasm.Wasm.V1.MsgUpdateAdminResponse UpdateAdmin(global::Cosmwasm.Wasm.V1.MsgUpdateAdmin request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAdmin(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// UpdateAdmin sets a new   admin for a smart contract
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmwasm.Wasm.V1.MsgUpdateAdminResponse UpdateAdmin(global::Cosmwasm.Wasm.V1.MsgUpdateAdmin request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateAdmin, null, options, request);
      }
      /// <summary>
      /// UpdateAdmin sets a new   admin for a smart contract
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmwasm.Wasm.V1.MsgUpdateAdminResponse> UpdateAdminAsync(global::Cosmwasm.Wasm.V1.MsgUpdateAdmin request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAdminAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// UpdateAdmin sets a new   admin for a smart contract
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmwasm.Wasm.V1.MsgUpdateAdminResponse> UpdateAdminAsync(global::Cosmwasm.Wasm.V1.MsgUpdateAdmin request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateAdmin, null, options, request);
      }
      /// <summary>
      /// ClearAdmin removes any admin stored for a smart contract
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmwasm.Wasm.V1.MsgClearAdminResponse ClearAdmin(global::Cosmwasm.Wasm.V1.MsgClearAdmin request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ClearAdmin(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ClearAdmin removes any admin stored for a smart contract
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmwasm.Wasm.V1.MsgClearAdminResponse ClearAdmin(global::Cosmwasm.Wasm.V1.MsgClearAdmin request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ClearAdmin, null, options, request);
      }
      /// <summary>
      /// ClearAdmin removes any admin stored for a smart contract
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmwasm.Wasm.V1.MsgClearAdminResponse> ClearAdminAsync(global::Cosmwasm.Wasm.V1.MsgClearAdmin request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ClearAdminAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ClearAdmin removes any admin stored for a smart contract
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmwasm.Wasm.V1.MsgClearAdminResponse> ClearAdminAsync(global::Cosmwasm.Wasm.V1.MsgClearAdmin request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ClearAdmin, null, options, request);
      }
      /// <summary>
      /// UpdateInstantiateConfig updates instantiate config for a smart contract
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmwasm.Wasm.V1.MsgUpdateInstantiateConfigResponse UpdateInstantiateConfig(global::Cosmwasm.Wasm.V1.MsgUpdateInstantiateConfig request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateInstantiateConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// UpdateInstantiateConfig updates instantiate config for a smart contract
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmwasm.Wasm.V1.MsgUpdateInstantiateConfigResponse UpdateInstantiateConfig(global::Cosmwasm.Wasm.V1.MsgUpdateInstantiateConfig request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateInstantiateConfig, null, options, request);
      }
      /// <summary>
      /// UpdateInstantiateConfig updates instantiate config for a smart contract
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmwasm.Wasm.V1.MsgUpdateInstantiateConfigResponse> UpdateInstantiateConfigAsync(global::Cosmwasm.Wasm.V1.MsgUpdateInstantiateConfig request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateInstantiateConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// UpdateInstantiateConfig updates instantiate config for a smart contract
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmwasm.Wasm.V1.MsgUpdateInstantiateConfigResponse> UpdateInstantiateConfigAsync(global::Cosmwasm.Wasm.V1.MsgUpdateInstantiateConfig request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateInstantiateConfig, null, options, request);
      }
      /// <summary>
      /// UpdateParams defines a governance operation for updating the x/wasm
      /// module parameters. The authority is defined in the keeper.
      ///
      /// Since: 0.40
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmwasm.Wasm.V1.MsgUpdateParamsResponse UpdateParams(global::Cosmwasm.Wasm.V1.MsgUpdateParams request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateParams(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// UpdateParams defines a governance operation for updating the x/wasm
      /// module parameters. The authority is defined in the keeper.
      ///
      /// Since: 0.40
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmwasm.Wasm.V1.MsgUpdateParamsResponse UpdateParams(global::Cosmwasm.Wasm.V1.MsgUpdateParams request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateParams, null, options, request);
      }
      /// <summary>
      /// UpdateParams defines a governance operation for updating the x/wasm
      /// module parameters. The authority is defined in the keeper.
      ///
      /// Since: 0.40
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmwasm.Wasm.V1.MsgUpdateParamsResponse> UpdateParamsAsync(global::Cosmwasm.Wasm.V1.MsgUpdateParams request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateParamsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// UpdateParams defines a governance operation for updating the x/wasm
      /// module parameters. The authority is defined in the keeper.
      ///
      /// Since: 0.40
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmwasm.Wasm.V1.MsgUpdateParamsResponse> UpdateParamsAsync(global::Cosmwasm.Wasm.V1.MsgUpdateParams request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateParams, null, options, request);
      }
      /// <summary>
      /// SudoContract defines a governance operation for calling sudo
      /// on a contract. The authority is defined in the keeper.
      ///
      /// Since: 0.40
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmwasm.Wasm.V1.MsgSudoContractResponse SudoContract(global::Cosmwasm.Wasm.V1.MsgSudoContract request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SudoContract(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// SudoContract defines a governance operation for calling sudo
      /// on a contract. The authority is defined in the keeper.
      ///
      /// Since: 0.40
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmwasm.Wasm.V1.MsgSudoContractResponse SudoContract(global::Cosmwasm.Wasm.V1.MsgSudoContract request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SudoContract, null, options, request);
      }
      /// <summary>
      /// SudoContract defines a governance operation for calling sudo
      /// on a contract. The authority is defined in the keeper.
      ///
      /// Since: 0.40
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmwasm.Wasm.V1.MsgSudoContractResponse> SudoContractAsync(global::Cosmwasm.Wasm.V1.MsgSudoContract request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SudoContractAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// SudoContract defines a governance operation for calling sudo
      /// on a contract. The authority is defined in the keeper.
      ///
      /// Since: 0.40
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmwasm.Wasm.V1.MsgSudoContractResponse> SudoContractAsync(global::Cosmwasm.Wasm.V1.MsgSudoContract request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SudoContract, null, options, request);
      }
      /// <summary>
      /// PinCodes defines a governance operation for pinning a set of
      /// code ids in the wasmvm cache. The authority is defined in the keeper.
      ///
      /// Since: 0.40
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmwasm.Wasm.V1.MsgPinCodesResponse PinCodes(global::Cosmwasm.Wasm.V1.MsgPinCodes request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PinCodes(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// PinCodes defines a governance operation for pinning a set of
      /// code ids in the wasmvm cache. The authority is defined in the keeper.
      ///
      /// Since: 0.40
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmwasm.Wasm.V1.MsgPinCodesResponse PinCodes(global::Cosmwasm.Wasm.V1.MsgPinCodes request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PinCodes, null, options, request);
      }
      /// <summary>
      /// PinCodes defines a governance operation for pinning a set of
      /// code ids in the wasmvm cache. The authority is defined in the keeper.
      ///
      /// Since: 0.40
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmwasm.Wasm.V1.MsgPinCodesResponse> PinCodesAsync(global::Cosmwasm.Wasm.V1.MsgPinCodes request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PinCodesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// PinCodes defines a governance operation for pinning a set of
      /// code ids in the wasmvm cache. The authority is defined in the keeper.
      ///
      /// Since: 0.40
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmwasm.Wasm.V1.MsgPinCodesResponse> PinCodesAsync(global::Cosmwasm.Wasm.V1.MsgPinCodes request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PinCodes, null, options, request);
      }
      /// <summary>
      /// UnpinCodes defines a governance operation for unpinning a set of
      /// code ids in the wasmvm cache. The authority is defined in the keeper.
      ///
      /// Since: 0.40
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmwasm.Wasm.V1.MsgUnpinCodesResponse UnpinCodes(global::Cosmwasm.Wasm.V1.MsgUnpinCodes request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UnpinCodes(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// UnpinCodes defines a governance operation for unpinning a set of
      /// code ids in the wasmvm cache. The authority is defined in the keeper.
      ///
      /// Since: 0.40
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmwasm.Wasm.V1.MsgUnpinCodesResponse UnpinCodes(global::Cosmwasm.Wasm.V1.MsgUnpinCodes request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UnpinCodes, null, options, request);
      }
      /// <summary>
      /// UnpinCodes defines a governance operation for unpinning a set of
      /// code ids in the wasmvm cache. The authority is defined in the keeper.
      ///
      /// Since: 0.40
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmwasm.Wasm.V1.MsgUnpinCodesResponse> UnpinCodesAsync(global::Cosmwasm.Wasm.V1.MsgUnpinCodes request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UnpinCodesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// UnpinCodes defines a governance operation for unpinning a set of
      /// code ids in the wasmvm cache. The authority is defined in the keeper.
      ///
      /// Since: 0.40
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmwasm.Wasm.V1.MsgUnpinCodesResponse> UnpinCodesAsync(global::Cosmwasm.Wasm.V1.MsgUnpinCodes request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UnpinCodes, null, options, request);
      }
      /// <summary>
      /// StoreAndInstantiateContract defines a governance operation for storing
      /// and instantiating the contract. The authority is defined in the keeper.
      ///
      /// Since: 0.40
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmwasm.Wasm.V1.MsgStoreAndInstantiateContractResponse StoreAndInstantiateContract(global::Cosmwasm.Wasm.V1.MsgStoreAndInstantiateContract request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StoreAndInstantiateContract(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// StoreAndInstantiateContract defines a governance operation for storing
      /// and instantiating the contract. The authority is defined in the keeper.
      ///
      /// Since: 0.40
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmwasm.Wasm.V1.MsgStoreAndInstantiateContractResponse StoreAndInstantiateContract(global::Cosmwasm.Wasm.V1.MsgStoreAndInstantiateContract request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_StoreAndInstantiateContract, null, options, request);
      }
      /// <summary>
      /// StoreAndInstantiateContract defines a governance operation for storing
      /// and instantiating the contract. The authority is defined in the keeper.
      ///
      /// Since: 0.40
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmwasm.Wasm.V1.MsgStoreAndInstantiateContractResponse> StoreAndInstantiateContractAsync(global::Cosmwasm.Wasm.V1.MsgStoreAndInstantiateContract request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StoreAndInstantiateContractAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// StoreAndInstantiateContract defines a governance operation for storing
      /// and instantiating the contract. The authority is defined in the keeper.
      ///
      /// Since: 0.40
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmwasm.Wasm.V1.MsgStoreAndInstantiateContractResponse> StoreAndInstantiateContractAsync(global::Cosmwasm.Wasm.V1.MsgStoreAndInstantiateContract request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_StoreAndInstantiateContract, null, options, request);
      }
      /// <summary>
      /// RemoveCodeUploadParamsAddresses defines a governance operation for
      /// removing addresses from code upload params.
      /// The authority is defined in the keeper.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmwasm.Wasm.V1.MsgRemoveCodeUploadParamsAddressesResponse RemoveCodeUploadParamsAddresses(global::Cosmwasm.Wasm.V1.MsgRemoveCodeUploadParamsAddresses request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveCodeUploadParamsAddresses(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// RemoveCodeUploadParamsAddresses defines a governance operation for
      /// removing addresses from code upload params.
      /// The authority is defined in the keeper.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmwasm.Wasm.V1.MsgRemoveCodeUploadParamsAddressesResponse RemoveCodeUploadParamsAddresses(global::Cosmwasm.Wasm.V1.MsgRemoveCodeUploadParamsAddresses request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveCodeUploadParamsAddresses, null, options, request);
      }
      /// <summary>
      /// RemoveCodeUploadParamsAddresses defines a governance operation for
      /// removing addresses from code upload params.
      /// The authority is defined in the keeper.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmwasm.Wasm.V1.MsgRemoveCodeUploadParamsAddressesResponse> RemoveCodeUploadParamsAddressesAsync(global::Cosmwasm.Wasm.V1.MsgRemoveCodeUploadParamsAddresses request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveCodeUploadParamsAddressesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// RemoveCodeUploadParamsAddresses defines a governance operation for
      /// removing addresses from code upload params.
      /// The authority is defined in the keeper.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmwasm.Wasm.V1.MsgRemoveCodeUploadParamsAddressesResponse> RemoveCodeUploadParamsAddressesAsync(global::Cosmwasm.Wasm.V1.MsgRemoveCodeUploadParamsAddresses request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveCodeUploadParamsAddresses, null, options, request);
      }
      /// <summary>
      /// AddCodeUploadParamsAddresses defines a governance operation for
      /// adding addresses to code upload params.
      /// The authority is defined in the keeper.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmwasm.Wasm.V1.MsgAddCodeUploadParamsAddressesResponse AddCodeUploadParamsAddresses(global::Cosmwasm.Wasm.V1.MsgAddCodeUploadParamsAddresses request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddCodeUploadParamsAddresses(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// AddCodeUploadParamsAddresses defines a governance operation for
      /// adding addresses to code upload params.
      /// The authority is defined in the keeper.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmwasm.Wasm.V1.MsgAddCodeUploadParamsAddressesResponse AddCodeUploadParamsAddresses(global::Cosmwasm.Wasm.V1.MsgAddCodeUploadParamsAddresses request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddCodeUploadParamsAddresses, null, options, request);
      }
      /// <summary>
      /// AddCodeUploadParamsAddresses defines a governance operation for
      /// adding addresses to code upload params.
      /// The authority is defined in the keeper.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmwasm.Wasm.V1.MsgAddCodeUploadParamsAddressesResponse> AddCodeUploadParamsAddressesAsync(global::Cosmwasm.Wasm.V1.MsgAddCodeUploadParamsAddresses request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddCodeUploadParamsAddressesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// AddCodeUploadParamsAddresses defines a governance operation for
      /// adding addresses to code upload params.
      /// The authority is defined in the keeper.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmwasm.Wasm.V1.MsgAddCodeUploadParamsAddressesResponse> AddCodeUploadParamsAddressesAsync(global::Cosmwasm.Wasm.V1.MsgAddCodeUploadParamsAddresses request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddCodeUploadParamsAddresses, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override MsgClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new MsgClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(MsgBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_StoreCode, serviceImpl.StoreCode)
          .AddMethod(__Method_InstantiateContract, serviceImpl.InstantiateContract)
          .AddMethod(__Method_InstantiateContract2, serviceImpl.InstantiateContract2)
          .AddMethod(__Method_ExecuteContract, serviceImpl.ExecuteContract)
          .AddMethod(__Method_MigrateContract, serviceImpl.MigrateContract)
          .AddMethod(__Method_UpdateAdmin, serviceImpl.UpdateAdmin)
          .AddMethod(__Method_ClearAdmin, serviceImpl.ClearAdmin)
          .AddMethod(__Method_UpdateInstantiateConfig, serviceImpl.UpdateInstantiateConfig)
          .AddMethod(__Method_UpdateParams, serviceImpl.UpdateParams)
          .AddMethod(__Method_SudoContract, serviceImpl.SudoContract)
          .AddMethod(__Method_PinCodes, serviceImpl.PinCodes)
          .AddMethod(__Method_UnpinCodes, serviceImpl.UnpinCodes)
          .AddMethod(__Method_StoreAndInstantiateContract, serviceImpl.StoreAndInstantiateContract)
          .AddMethod(__Method_RemoveCodeUploadParamsAddresses, serviceImpl.RemoveCodeUploadParamsAddresses)
          .AddMethod(__Method_AddCodeUploadParamsAddresses, serviceImpl.AddCodeUploadParamsAddresses).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, MsgBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_StoreCode, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cosmwasm.Wasm.V1.MsgStoreCode, global::Cosmwasm.Wasm.V1.MsgStoreCodeResponse>(serviceImpl.StoreCode));
      serviceBinder.AddMethod(__Method_InstantiateContract, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cosmwasm.Wasm.V1.MsgInstantiateContract, global::Cosmwasm.Wasm.V1.MsgInstantiateContractResponse>(serviceImpl.InstantiateContract));
      serviceBinder.AddMethod(__Method_InstantiateContract2, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cosmwasm.Wasm.V1.MsgInstantiateContract2, global::Cosmwasm.Wasm.V1.MsgInstantiateContract2Response>(serviceImpl.InstantiateContract2));
      serviceBinder.AddMethod(__Method_ExecuteContract, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cosmwasm.Wasm.V1.MsgExecuteContract, global::Cosmwasm.Wasm.V1.MsgExecuteContractResponse>(serviceImpl.ExecuteContract));
      serviceBinder.AddMethod(__Method_MigrateContract, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cosmwasm.Wasm.V1.MsgMigrateContract, global::Cosmwasm.Wasm.V1.MsgMigrateContractResponse>(serviceImpl.MigrateContract));
      serviceBinder.AddMethod(__Method_UpdateAdmin, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cosmwasm.Wasm.V1.MsgUpdateAdmin, global::Cosmwasm.Wasm.V1.MsgUpdateAdminResponse>(serviceImpl.UpdateAdmin));
      serviceBinder.AddMethod(__Method_ClearAdmin, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cosmwasm.Wasm.V1.MsgClearAdmin, global::Cosmwasm.Wasm.V1.MsgClearAdminResponse>(serviceImpl.ClearAdmin));
      serviceBinder.AddMethod(__Method_UpdateInstantiateConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cosmwasm.Wasm.V1.MsgUpdateInstantiateConfig, global::Cosmwasm.Wasm.V1.MsgUpdateInstantiateConfigResponse>(serviceImpl.UpdateInstantiateConfig));
      serviceBinder.AddMethod(__Method_UpdateParams, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cosmwasm.Wasm.V1.MsgUpdateParams, global::Cosmwasm.Wasm.V1.MsgUpdateParamsResponse>(serviceImpl.UpdateParams));
      serviceBinder.AddMethod(__Method_SudoContract, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cosmwasm.Wasm.V1.MsgSudoContract, global::Cosmwasm.Wasm.V1.MsgSudoContractResponse>(serviceImpl.SudoContract));
      serviceBinder.AddMethod(__Method_PinCodes, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cosmwasm.Wasm.V1.MsgPinCodes, global::Cosmwasm.Wasm.V1.MsgPinCodesResponse>(serviceImpl.PinCodes));
      serviceBinder.AddMethod(__Method_UnpinCodes, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cosmwasm.Wasm.V1.MsgUnpinCodes, global::Cosmwasm.Wasm.V1.MsgUnpinCodesResponse>(serviceImpl.UnpinCodes));
      serviceBinder.AddMethod(__Method_StoreAndInstantiateContract, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cosmwasm.Wasm.V1.MsgStoreAndInstantiateContract, global::Cosmwasm.Wasm.V1.MsgStoreAndInstantiateContractResponse>(serviceImpl.StoreAndInstantiateContract));
      serviceBinder.AddMethod(__Method_RemoveCodeUploadParamsAddresses, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cosmwasm.Wasm.V1.MsgRemoveCodeUploadParamsAddresses, global::Cosmwasm.Wasm.V1.MsgRemoveCodeUploadParamsAddressesResponse>(serviceImpl.RemoveCodeUploadParamsAddresses));
      serviceBinder.AddMethod(__Method_AddCodeUploadParamsAddresses, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cosmwasm.Wasm.V1.MsgAddCodeUploadParamsAddresses, global::Cosmwasm.Wasm.V1.MsgAddCodeUploadParamsAddressesResponse>(serviceImpl.AddCodeUploadParamsAddresses));
    }

  }
}
#endregion
