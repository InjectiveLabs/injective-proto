// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ibc/core/connection/v1/tx.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Ibc.Core.Connection.V1 {
  /// <summary>
  /// Msg defines the ibc/connection Msg service.
  /// </summary>
  public static partial class Msg
  {
    static readonly string __ServiceName = "ibc.core.connection.v1.Msg";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ibc.Core.Connection.V1.MsgConnectionOpenInit> __Marshaller_ibc_core_connection_v1_MsgConnectionOpenInit = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ibc.Core.Connection.V1.MsgConnectionOpenInit.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ibc.Core.Connection.V1.MsgConnectionOpenInitResponse> __Marshaller_ibc_core_connection_v1_MsgConnectionOpenInitResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ibc.Core.Connection.V1.MsgConnectionOpenInitResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ibc.Core.Connection.V1.MsgConnectionOpenTry> __Marshaller_ibc_core_connection_v1_MsgConnectionOpenTry = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ibc.Core.Connection.V1.MsgConnectionOpenTry.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ibc.Core.Connection.V1.MsgConnectionOpenTryResponse> __Marshaller_ibc_core_connection_v1_MsgConnectionOpenTryResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ibc.Core.Connection.V1.MsgConnectionOpenTryResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ibc.Core.Connection.V1.MsgConnectionOpenAck> __Marshaller_ibc_core_connection_v1_MsgConnectionOpenAck = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ibc.Core.Connection.V1.MsgConnectionOpenAck.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ibc.Core.Connection.V1.MsgConnectionOpenAckResponse> __Marshaller_ibc_core_connection_v1_MsgConnectionOpenAckResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ibc.Core.Connection.V1.MsgConnectionOpenAckResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ibc.Core.Connection.V1.MsgConnectionOpenConfirm> __Marshaller_ibc_core_connection_v1_MsgConnectionOpenConfirm = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ibc.Core.Connection.V1.MsgConnectionOpenConfirm.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ibc.Core.Connection.V1.MsgConnectionOpenConfirmResponse> __Marshaller_ibc_core_connection_v1_MsgConnectionOpenConfirmResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ibc.Core.Connection.V1.MsgConnectionOpenConfirmResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ibc.Core.Connection.V1.MsgUpdateParams> __Marshaller_ibc_core_connection_v1_MsgUpdateParams = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ibc.Core.Connection.V1.MsgUpdateParams.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ibc.Core.Connection.V1.MsgUpdateParamsResponse> __Marshaller_ibc_core_connection_v1_MsgUpdateParamsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ibc.Core.Connection.V1.MsgUpdateParamsResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Ibc.Core.Connection.V1.MsgConnectionOpenInit, global::Ibc.Core.Connection.V1.MsgConnectionOpenInitResponse> __Method_ConnectionOpenInit = new grpc::Method<global::Ibc.Core.Connection.V1.MsgConnectionOpenInit, global::Ibc.Core.Connection.V1.MsgConnectionOpenInitResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConnectionOpenInit",
        __Marshaller_ibc_core_connection_v1_MsgConnectionOpenInit,
        __Marshaller_ibc_core_connection_v1_MsgConnectionOpenInitResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Ibc.Core.Connection.V1.MsgConnectionOpenTry, global::Ibc.Core.Connection.V1.MsgConnectionOpenTryResponse> __Method_ConnectionOpenTry = new grpc::Method<global::Ibc.Core.Connection.V1.MsgConnectionOpenTry, global::Ibc.Core.Connection.V1.MsgConnectionOpenTryResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConnectionOpenTry",
        __Marshaller_ibc_core_connection_v1_MsgConnectionOpenTry,
        __Marshaller_ibc_core_connection_v1_MsgConnectionOpenTryResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Ibc.Core.Connection.V1.MsgConnectionOpenAck, global::Ibc.Core.Connection.V1.MsgConnectionOpenAckResponse> __Method_ConnectionOpenAck = new grpc::Method<global::Ibc.Core.Connection.V1.MsgConnectionOpenAck, global::Ibc.Core.Connection.V1.MsgConnectionOpenAckResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConnectionOpenAck",
        __Marshaller_ibc_core_connection_v1_MsgConnectionOpenAck,
        __Marshaller_ibc_core_connection_v1_MsgConnectionOpenAckResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Ibc.Core.Connection.V1.MsgConnectionOpenConfirm, global::Ibc.Core.Connection.V1.MsgConnectionOpenConfirmResponse> __Method_ConnectionOpenConfirm = new grpc::Method<global::Ibc.Core.Connection.V1.MsgConnectionOpenConfirm, global::Ibc.Core.Connection.V1.MsgConnectionOpenConfirmResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConnectionOpenConfirm",
        __Marshaller_ibc_core_connection_v1_MsgConnectionOpenConfirm,
        __Marshaller_ibc_core_connection_v1_MsgConnectionOpenConfirmResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Ibc.Core.Connection.V1.MsgUpdateParams, global::Ibc.Core.Connection.V1.MsgUpdateParamsResponse> __Method_UpdateConnectionParams = new grpc::Method<global::Ibc.Core.Connection.V1.MsgUpdateParams, global::Ibc.Core.Connection.V1.MsgUpdateParamsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateConnectionParams",
        __Marshaller_ibc_core_connection_v1_MsgUpdateParams,
        __Marshaller_ibc_core_connection_v1_MsgUpdateParamsResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Ibc.Core.Connection.V1.TxReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Msg</summary>
    [grpc::BindServiceMethod(typeof(Msg), "BindService")]
    public abstract partial class MsgBase
    {
      /// <summary>
      /// ConnectionOpenInit defines a rpc handler method for MsgConnectionOpenInit.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Ibc.Core.Connection.V1.MsgConnectionOpenInitResponse> ConnectionOpenInit(global::Ibc.Core.Connection.V1.MsgConnectionOpenInit request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// ConnectionOpenTry defines a rpc handler method for MsgConnectionOpenTry.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Ibc.Core.Connection.V1.MsgConnectionOpenTryResponse> ConnectionOpenTry(global::Ibc.Core.Connection.V1.MsgConnectionOpenTry request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// ConnectionOpenAck defines a rpc handler method for MsgConnectionOpenAck.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Ibc.Core.Connection.V1.MsgConnectionOpenAckResponse> ConnectionOpenAck(global::Ibc.Core.Connection.V1.MsgConnectionOpenAck request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// ConnectionOpenConfirm defines a rpc handler method for
      /// MsgConnectionOpenConfirm.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Ibc.Core.Connection.V1.MsgConnectionOpenConfirmResponse> ConnectionOpenConfirm(global::Ibc.Core.Connection.V1.MsgConnectionOpenConfirm request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// UpdateConnectionParams defines a rpc handler method for
      /// MsgUpdateParams.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Ibc.Core.Connection.V1.MsgUpdateParamsResponse> UpdateConnectionParams(global::Ibc.Core.Connection.V1.MsgUpdateParams request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Msg</summary>
    public partial class MsgClient : grpc::ClientBase<MsgClient>
    {
      /// <summary>Creates a new client for Msg</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public MsgClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Msg that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public MsgClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected MsgClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected MsgClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// ConnectionOpenInit defines a rpc handler method for MsgConnectionOpenInit.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ibc.Core.Connection.V1.MsgConnectionOpenInitResponse ConnectionOpenInit(global::Ibc.Core.Connection.V1.MsgConnectionOpenInit request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConnectionOpenInit(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ConnectionOpenInit defines a rpc handler method for MsgConnectionOpenInit.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ibc.Core.Connection.V1.MsgConnectionOpenInitResponse ConnectionOpenInit(global::Ibc.Core.Connection.V1.MsgConnectionOpenInit request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConnectionOpenInit, null, options, request);
      }
      /// <summary>
      /// ConnectionOpenInit defines a rpc handler method for MsgConnectionOpenInit.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ibc.Core.Connection.V1.MsgConnectionOpenInitResponse> ConnectionOpenInitAsync(global::Ibc.Core.Connection.V1.MsgConnectionOpenInit request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConnectionOpenInitAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ConnectionOpenInit defines a rpc handler method for MsgConnectionOpenInit.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ibc.Core.Connection.V1.MsgConnectionOpenInitResponse> ConnectionOpenInitAsync(global::Ibc.Core.Connection.V1.MsgConnectionOpenInit request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConnectionOpenInit, null, options, request);
      }
      /// <summary>
      /// ConnectionOpenTry defines a rpc handler method for MsgConnectionOpenTry.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ibc.Core.Connection.V1.MsgConnectionOpenTryResponse ConnectionOpenTry(global::Ibc.Core.Connection.V1.MsgConnectionOpenTry request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConnectionOpenTry(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ConnectionOpenTry defines a rpc handler method for MsgConnectionOpenTry.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ibc.Core.Connection.V1.MsgConnectionOpenTryResponse ConnectionOpenTry(global::Ibc.Core.Connection.V1.MsgConnectionOpenTry request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConnectionOpenTry, null, options, request);
      }
      /// <summary>
      /// ConnectionOpenTry defines a rpc handler method for MsgConnectionOpenTry.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ibc.Core.Connection.V1.MsgConnectionOpenTryResponse> ConnectionOpenTryAsync(global::Ibc.Core.Connection.V1.MsgConnectionOpenTry request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConnectionOpenTryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ConnectionOpenTry defines a rpc handler method for MsgConnectionOpenTry.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ibc.Core.Connection.V1.MsgConnectionOpenTryResponse> ConnectionOpenTryAsync(global::Ibc.Core.Connection.V1.MsgConnectionOpenTry request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConnectionOpenTry, null, options, request);
      }
      /// <summary>
      /// ConnectionOpenAck defines a rpc handler method for MsgConnectionOpenAck.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ibc.Core.Connection.V1.MsgConnectionOpenAckResponse ConnectionOpenAck(global::Ibc.Core.Connection.V1.MsgConnectionOpenAck request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConnectionOpenAck(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ConnectionOpenAck defines a rpc handler method for MsgConnectionOpenAck.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ibc.Core.Connection.V1.MsgConnectionOpenAckResponse ConnectionOpenAck(global::Ibc.Core.Connection.V1.MsgConnectionOpenAck request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConnectionOpenAck, null, options, request);
      }
      /// <summary>
      /// ConnectionOpenAck defines a rpc handler method for MsgConnectionOpenAck.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ibc.Core.Connection.V1.MsgConnectionOpenAckResponse> ConnectionOpenAckAsync(global::Ibc.Core.Connection.V1.MsgConnectionOpenAck request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConnectionOpenAckAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ConnectionOpenAck defines a rpc handler method for MsgConnectionOpenAck.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ibc.Core.Connection.V1.MsgConnectionOpenAckResponse> ConnectionOpenAckAsync(global::Ibc.Core.Connection.V1.MsgConnectionOpenAck request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConnectionOpenAck, null, options, request);
      }
      /// <summary>
      /// ConnectionOpenConfirm defines a rpc handler method for
      /// MsgConnectionOpenConfirm.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ibc.Core.Connection.V1.MsgConnectionOpenConfirmResponse ConnectionOpenConfirm(global::Ibc.Core.Connection.V1.MsgConnectionOpenConfirm request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConnectionOpenConfirm(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ConnectionOpenConfirm defines a rpc handler method for
      /// MsgConnectionOpenConfirm.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ibc.Core.Connection.V1.MsgConnectionOpenConfirmResponse ConnectionOpenConfirm(global::Ibc.Core.Connection.V1.MsgConnectionOpenConfirm request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConnectionOpenConfirm, null, options, request);
      }
      /// <summary>
      /// ConnectionOpenConfirm defines a rpc handler method for
      /// MsgConnectionOpenConfirm.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ibc.Core.Connection.V1.MsgConnectionOpenConfirmResponse> ConnectionOpenConfirmAsync(global::Ibc.Core.Connection.V1.MsgConnectionOpenConfirm request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConnectionOpenConfirmAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ConnectionOpenConfirm defines a rpc handler method for
      /// MsgConnectionOpenConfirm.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ibc.Core.Connection.V1.MsgConnectionOpenConfirmResponse> ConnectionOpenConfirmAsync(global::Ibc.Core.Connection.V1.MsgConnectionOpenConfirm request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConnectionOpenConfirm, null, options, request);
      }
      /// <summary>
      /// UpdateConnectionParams defines a rpc handler method for
      /// MsgUpdateParams.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ibc.Core.Connection.V1.MsgUpdateParamsResponse UpdateConnectionParams(global::Ibc.Core.Connection.V1.MsgUpdateParams request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateConnectionParams(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// UpdateConnectionParams defines a rpc handler method for
      /// MsgUpdateParams.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ibc.Core.Connection.V1.MsgUpdateParamsResponse UpdateConnectionParams(global::Ibc.Core.Connection.V1.MsgUpdateParams request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateConnectionParams, null, options, request);
      }
      /// <summary>
      /// UpdateConnectionParams defines a rpc handler method for
      /// MsgUpdateParams.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ibc.Core.Connection.V1.MsgUpdateParamsResponse> UpdateConnectionParamsAsync(global::Ibc.Core.Connection.V1.MsgUpdateParams request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateConnectionParamsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// UpdateConnectionParams defines a rpc handler method for
      /// MsgUpdateParams.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ibc.Core.Connection.V1.MsgUpdateParamsResponse> UpdateConnectionParamsAsync(global::Ibc.Core.Connection.V1.MsgUpdateParams request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateConnectionParams, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override MsgClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new MsgClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(MsgBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_ConnectionOpenInit, serviceImpl.ConnectionOpenInit)
          .AddMethod(__Method_ConnectionOpenTry, serviceImpl.ConnectionOpenTry)
          .AddMethod(__Method_ConnectionOpenAck, serviceImpl.ConnectionOpenAck)
          .AddMethod(__Method_ConnectionOpenConfirm, serviceImpl.ConnectionOpenConfirm)
          .AddMethod(__Method_UpdateConnectionParams, serviceImpl.UpdateConnectionParams).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, MsgBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_ConnectionOpenInit, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Ibc.Core.Connection.V1.MsgConnectionOpenInit, global::Ibc.Core.Connection.V1.MsgConnectionOpenInitResponse>(serviceImpl.ConnectionOpenInit));
      serviceBinder.AddMethod(__Method_ConnectionOpenTry, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Ibc.Core.Connection.V1.MsgConnectionOpenTry, global::Ibc.Core.Connection.V1.MsgConnectionOpenTryResponse>(serviceImpl.ConnectionOpenTry));
      serviceBinder.AddMethod(__Method_ConnectionOpenAck, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Ibc.Core.Connection.V1.MsgConnectionOpenAck, global::Ibc.Core.Connection.V1.MsgConnectionOpenAckResponse>(serviceImpl.ConnectionOpenAck));
      serviceBinder.AddMethod(__Method_ConnectionOpenConfirm, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Ibc.Core.Connection.V1.MsgConnectionOpenConfirm, global::Ibc.Core.Connection.V1.MsgConnectionOpenConfirmResponse>(serviceImpl.ConnectionOpenConfirm));
      serviceBinder.AddMethod(__Method_UpdateConnectionParams, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Ibc.Core.Connection.V1.MsgUpdateParams, global::Ibc.Core.Connection.V1.MsgUpdateParamsResponse>(serviceImpl.UpdateConnectionParams));
    }

  }
}
#endregion
