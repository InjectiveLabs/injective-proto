// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ibc/core/client/v1/query.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Ibc.Core.Client.V1 {
  /// <summary>
  /// Query provides defines the gRPC querier service
  /// </summary>
  public static partial class Query
  {
    static readonly string __ServiceName = "ibc.core.client.v1.Query";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ibc.Core.Client.V1.QueryClientStateRequest> __Marshaller_ibc_core_client_v1_QueryClientStateRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ibc.Core.Client.V1.QueryClientStateRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ibc.Core.Client.V1.QueryClientStateResponse> __Marshaller_ibc_core_client_v1_QueryClientStateResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ibc.Core.Client.V1.QueryClientStateResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ibc.Core.Client.V1.QueryClientStatesRequest> __Marshaller_ibc_core_client_v1_QueryClientStatesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ibc.Core.Client.V1.QueryClientStatesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ibc.Core.Client.V1.QueryClientStatesResponse> __Marshaller_ibc_core_client_v1_QueryClientStatesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ibc.Core.Client.V1.QueryClientStatesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ibc.Core.Client.V1.QueryConsensusStateRequest> __Marshaller_ibc_core_client_v1_QueryConsensusStateRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ibc.Core.Client.V1.QueryConsensusStateRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ibc.Core.Client.V1.QueryConsensusStateResponse> __Marshaller_ibc_core_client_v1_QueryConsensusStateResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ibc.Core.Client.V1.QueryConsensusStateResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ibc.Core.Client.V1.QueryConsensusStatesRequest> __Marshaller_ibc_core_client_v1_QueryConsensusStatesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ibc.Core.Client.V1.QueryConsensusStatesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ibc.Core.Client.V1.QueryConsensusStatesResponse> __Marshaller_ibc_core_client_v1_QueryConsensusStatesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ibc.Core.Client.V1.QueryConsensusStatesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ibc.Core.Client.V1.QueryConsensusStateHeightsRequest> __Marshaller_ibc_core_client_v1_QueryConsensusStateHeightsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ibc.Core.Client.V1.QueryConsensusStateHeightsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ibc.Core.Client.V1.QueryConsensusStateHeightsResponse> __Marshaller_ibc_core_client_v1_QueryConsensusStateHeightsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ibc.Core.Client.V1.QueryConsensusStateHeightsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ibc.Core.Client.V1.QueryClientStatusRequest> __Marshaller_ibc_core_client_v1_QueryClientStatusRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ibc.Core.Client.V1.QueryClientStatusRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ibc.Core.Client.V1.QueryClientStatusResponse> __Marshaller_ibc_core_client_v1_QueryClientStatusResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ibc.Core.Client.V1.QueryClientStatusResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ibc.Core.Client.V1.QueryClientParamsRequest> __Marshaller_ibc_core_client_v1_QueryClientParamsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ibc.Core.Client.V1.QueryClientParamsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ibc.Core.Client.V1.QueryClientParamsResponse> __Marshaller_ibc_core_client_v1_QueryClientParamsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ibc.Core.Client.V1.QueryClientParamsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ibc.Core.Client.V1.QueryUpgradedClientStateRequest> __Marshaller_ibc_core_client_v1_QueryUpgradedClientStateRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ibc.Core.Client.V1.QueryUpgradedClientStateRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ibc.Core.Client.V1.QueryUpgradedClientStateResponse> __Marshaller_ibc_core_client_v1_QueryUpgradedClientStateResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ibc.Core.Client.V1.QueryUpgradedClientStateResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ibc.Core.Client.V1.QueryUpgradedConsensusStateRequest> __Marshaller_ibc_core_client_v1_QueryUpgradedConsensusStateRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ibc.Core.Client.V1.QueryUpgradedConsensusStateRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ibc.Core.Client.V1.QueryUpgradedConsensusStateResponse> __Marshaller_ibc_core_client_v1_QueryUpgradedConsensusStateResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ibc.Core.Client.V1.QueryUpgradedConsensusStateResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Ibc.Core.Client.V1.QueryClientStateRequest, global::Ibc.Core.Client.V1.QueryClientStateResponse> __Method_ClientState = new grpc::Method<global::Ibc.Core.Client.V1.QueryClientStateRequest, global::Ibc.Core.Client.V1.QueryClientStateResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ClientState",
        __Marshaller_ibc_core_client_v1_QueryClientStateRequest,
        __Marshaller_ibc_core_client_v1_QueryClientStateResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Ibc.Core.Client.V1.QueryClientStatesRequest, global::Ibc.Core.Client.V1.QueryClientStatesResponse> __Method_ClientStates = new grpc::Method<global::Ibc.Core.Client.V1.QueryClientStatesRequest, global::Ibc.Core.Client.V1.QueryClientStatesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ClientStates",
        __Marshaller_ibc_core_client_v1_QueryClientStatesRequest,
        __Marshaller_ibc_core_client_v1_QueryClientStatesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Ibc.Core.Client.V1.QueryConsensusStateRequest, global::Ibc.Core.Client.V1.QueryConsensusStateResponse> __Method_ConsensusState = new grpc::Method<global::Ibc.Core.Client.V1.QueryConsensusStateRequest, global::Ibc.Core.Client.V1.QueryConsensusStateResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConsensusState",
        __Marshaller_ibc_core_client_v1_QueryConsensusStateRequest,
        __Marshaller_ibc_core_client_v1_QueryConsensusStateResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Ibc.Core.Client.V1.QueryConsensusStatesRequest, global::Ibc.Core.Client.V1.QueryConsensusStatesResponse> __Method_ConsensusStates = new grpc::Method<global::Ibc.Core.Client.V1.QueryConsensusStatesRequest, global::Ibc.Core.Client.V1.QueryConsensusStatesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConsensusStates",
        __Marshaller_ibc_core_client_v1_QueryConsensusStatesRequest,
        __Marshaller_ibc_core_client_v1_QueryConsensusStatesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Ibc.Core.Client.V1.QueryConsensusStateHeightsRequest, global::Ibc.Core.Client.V1.QueryConsensusStateHeightsResponse> __Method_ConsensusStateHeights = new grpc::Method<global::Ibc.Core.Client.V1.QueryConsensusStateHeightsRequest, global::Ibc.Core.Client.V1.QueryConsensusStateHeightsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConsensusStateHeights",
        __Marshaller_ibc_core_client_v1_QueryConsensusStateHeightsRequest,
        __Marshaller_ibc_core_client_v1_QueryConsensusStateHeightsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Ibc.Core.Client.V1.QueryClientStatusRequest, global::Ibc.Core.Client.V1.QueryClientStatusResponse> __Method_ClientStatus = new grpc::Method<global::Ibc.Core.Client.V1.QueryClientStatusRequest, global::Ibc.Core.Client.V1.QueryClientStatusResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ClientStatus",
        __Marshaller_ibc_core_client_v1_QueryClientStatusRequest,
        __Marshaller_ibc_core_client_v1_QueryClientStatusResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Ibc.Core.Client.V1.QueryClientParamsRequest, global::Ibc.Core.Client.V1.QueryClientParamsResponse> __Method_ClientParams = new grpc::Method<global::Ibc.Core.Client.V1.QueryClientParamsRequest, global::Ibc.Core.Client.V1.QueryClientParamsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ClientParams",
        __Marshaller_ibc_core_client_v1_QueryClientParamsRequest,
        __Marshaller_ibc_core_client_v1_QueryClientParamsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Ibc.Core.Client.V1.QueryUpgradedClientStateRequest, global::Ibc.Core.Client.V1.QueryUpgradedClientStateResponse> __Method_UpgradedClientState = new grpc::Method<global::Ibc.Core.Client.V1.QueryUpgradedClientStateRequest, global::Ibc.Core.Client.V1.QueryUpgradedClientStateResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpgradedClientState",
        __Marshaller_ibc_core_client_v1_QueryUpgradedClientStateRequest,
        __Marshaller_ibc_core_client_v1_QueryUpgradedClientStateResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Ibc.Core.Client.V1.QueryUpgradedConsensusStateRequest, global::Ibc.Core.Client.V1.QueryUpgradedConsensusStateResponse> __Method_UpgradedConsensusState = new grpc::Method<global::Ibc.Core.Client.V1.QueryUpgradedConsensusStateRequest, global::Ibc.Core.Client.V1.QueryUpgradedConsensusStateResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpgradedConsensusState",
        __Marshaller_ibc_core_client_v1_QueryUpgradedConsensusStateRequest,
        __Marshaller_ibc_core_client_v1_QueryUpgradedConsensusStateResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Ibc.Core.Client.V1.QueryReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Query</summary>
    [grpc::BindServiceMethod(typeof(Query), "BindService")]
    public abstract partial class QueryBase
    {
      /// <summary>
      /// ClientState queries an IBC light client.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Ibc.Core.Client.V1.QueryClientStateResponse> ClientState(global::Ibc.Core.Client.V1.QueryClientStateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// ClientStates queries all the IBC light clients of a chain.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Ibc.Core.Client.V1.QueryClientStatesResponse> ClientStates(global::Ibc.Core.Client.V1.QueryClientStatesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// ConsensusState queries a consensus state associated with a client state at
      /// a given height.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Ibc.Core.Client.V1.QueryConsensusStateResponse> ConsensusState(global::Ibc.Core.Client.V1.QueryConsensusStateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// ConsensusStates queries all the consensus state associated with a given
      /// client.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Ibc.Core.Client.V1.QueryConsensusStatesResponse> ConsensusStates(global::Ibc.Core.Client.V1.QueryConsensusStatesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// ConsensusStateHeights queries the height of every consensus states associated with a given client.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Ibc.Core.Client.V1.QueryConsensusStateHeightsResponse> ConsensusStateHeights(global::Ibc.Core.Client.V1.QueryConsensusStateHeightsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Status queries the status of an IBC client.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Ibc.Core.Client.V1.QueryClientStatusResponse> ClientStatus(global::Ibc.Core.Client.V1.QueryClientStatusRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// ClientParams queries all parameters of the ibc client submodule.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Ibc.Core.Client.V1.QueryClientParamsResponse> ClientParams(global::Ibc.Core.Client.V1.QueryClientParamsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// UpgradedClientState queries an Upgraded IBC light client.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Ibc.Core.Client.V1.QueryUpgradedClientStateResponse> UpgradedClientState(global::Ibc.Core.Client.V1.QueryUpgradedClientStateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// UpgradedConsensusState queries an Upgraded IBC consensus state.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Ibc.Core.Client.V1.QueryUpgradedConsensusStateResponse> UpgradedConsensusState(global::Ibc.Core.Client.V1.QueryUpgradedConsensusStateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Query</summary>
    public partial class QueryClient : grpc::ClientBase<QueryClient>
    {
      /// <summary>Creates a new client for Query</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public QueryClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Query that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public QueryClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected QueryClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected QueryClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// ClientState queries an IBC light client.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ibc.Core.Client.V1.QueryClientStateResponse ClientState(global::Ibc.Core.Client.V1.QueryClientStateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ClientState(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ClientState queries an IBC light client.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ibc.Core.Client.V1.QueryClientStateResponse ClientState(global::Ibc.Core.Client.V1.QueryClientStateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ClientState, null, options, request);
      }
      /// <summary>
      /// ClientState queries an IBC light client.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ibc.Core.Client.V1.QueryClientStateResponse> ClientStateAsync(global::Ibc.Core.Client.V1.QueryClientStateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ClientStateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ClientState queries an IBC light client.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ibc.Core.Client.V1.QueryClientStateResponse> ClientStateAsync(global::Ibc.Core.Client.V1.QueryClientStateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ClientState, null, options, request);
      }
      /// <summary>
      /// ClientStates queries all the IBC light clients of a chain.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ibc.Core.Client.V1.QueryClientStatesResponse ClientStates(global::Ibc.Core.Client.V1.QueryClientStatesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ClientStates(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ClientStates queries all the IBC light clients of a chain.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ibc.Core.Client.V1.QueryClientStatesResponse ClientStates(global::Ibc.Core.Client.V1.QueryClientStatesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ClientStates, null, options, request);
      }
      /// <summary>
      /// ClientStates queries all the IBC light clients of a chain.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ibc.Core.Client.V1.QueryClientStatesResponse> ClientStatesAsync(global::Ibc.Core.Client.V1.QueryClientStatesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ClientStatesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ClientStates queries all the IBC light clients of a chain.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ibc.Core.Client.V1.QueryClientStatesResponse> ClientStatesAsync(global::Ibc.Core.Client.V1.QueryClientStatesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ClientStates, null, options, request);
      }
      /// <summary>
      /// ConsensusState queries a consensus state associated with a client state at
      /// a given height.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ibc.Core.Client.V1.QueryConsensusStateResponse ConsensusState(global::Ibc.Core.Client.V1.QueryConsensusStateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConsensusState(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ConsensusState queries a consensus state associated with a client state at
      /// a given height.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ibc.Core.Client.V1.QueryConsensusStateResponse ConsensusState(global::Ibc.Core.Client.V1.QueryConsensusStateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConsensusState, null, options, request);
      }
      /// <summary>
      /// ConsensusState queries a consensus state associated with a client state at
      /// a given height.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ibc.Core.Client.V1.QueryConsensusStateResponse> ConsensusStateAsync(global::Ibc.Core.Client.V1.QueryConsensusStateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConsensusStateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ConsensusState queries a consensus state associated with a client state at
      /// a given height.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ibc.Core.Client.V1.QueryConsensusStateResponse> ConsensusStateAsync(global::Ibc.Core.Client.V1.QueryConsensusStateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConsensusState, null, options, request);
      }
      /// <summary>
      /// ConsensusStates queries all the consensus state associated with a given
      /// client.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ibc.Core.Client.V1.QueryConsensusStatesResponse ConsensusStates(global::Ibc.Core.Client.V1.QueryConsensusStatesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConsensusStates(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ConsensusStates queries all the consensus state associated with a given
      /// client.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ibc.Core.Client.V1.QueryConsensusStatesResponse ConsensusStates(global::Ibc.Core.Client.V1.QueryConsensusStatesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConsensusStates, null, options, request);
      }
      /// <summary>
      /// ConsensusStates queries all the consensus state associated with a given
      /// client.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ibc.Core.Client.V1.QueryConsensusStatesResponse> ConsensusStatesAsync(global::Ibc.Core.Client.V1.QueryConsensusStatesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConsensusStatesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ConsensusStates queries all the consensus state associated with a given
      /// client.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ibc.Core.Client.V1.QueryConsensusStatesResponse> ConsensusStatesAsync(global::Ibc.Core.Client.V1.QueryConsensusStatesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConsensusStates, null, options, request);
      }
      /// <summary>
      /// ConsensusStateHeights queries the height of every consensus states associated with a given client.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ibc.Core.Client.V1.QueryConsensusStateHeightsResponse ConsensusStateHeights(global::Ibc.Core.Client.V1.QueryConsensusStateHeightsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConsensusStateHeights(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ConsensusStateHeights queries the height of every consensus states associated with a given client.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ibc.Core.Client.V1.QueryConsensusStateHeightsResponse ConsensusStateHeights(global::Ibc.Core.Client.V1.QueryConsensusStateHeightsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConsensusStateHeights, null, options, request);
      }
      /// <summary>
      /// ConsensusStateHeights queries the height of every consensus states associated with a given client.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ibc.Core.Client.V1.QueryConsensusStateHeightsResponse> ConsensusStateHeightsAsync(global::Ibc.Core.Client.V1.QueryConsensusStateHeightsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConsensusStateHeightsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ConsensusStateHeights queries the height of every consensus states associated with a given client.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ibc.Core.Client.V1.QueryConsensusStateHeightsResponse> ConsensusStateHeightsAsync(global::Ibc.Core.Client.V1.QueryConsensusStateHeightsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConsensusStateHeights, null, options, request);
      }
      /// <summary>
      /// Status queries the status of an IBC client.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ibc.Core.Client.V1.QueryClientStatusResponse ClientStatus(global::Ibc.Core.Client.V1.QueryClientStatusRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ClientStatus(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Status queries the status of an IBC client.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ibc.Core.Client.V1.QueryClientStatusResponse ClientStatus(global::Ibc.Core.Client.V1.QueryClientStatusRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ClientStatus, null, options, request);
      }
      /// <summary>
      /// Status queries the status of an IBC client.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ibc.Core.Client.V1.QueryClientStatusResponse> ClientStatusAsync(global::Ibc.Core.Client.V1.QueryClientStatusRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ClientStatusAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Status queries the status of an IBC client.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ibc.Core.Client.V1.QueryClientStatusResponse> ClientStatusAsync(global::Ibc.Core.Client.V1.QueryClientStatusRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ClientStatus, null, options, request);
      }
      /// <summary>
      /// ClientParams queries all parameters of the ibc client submodule.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ibc.Core.Client.V1.QueryClientParamsResponse ClientParams(global::Ibc.Core.Client.V1.QueryClientParamsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ClientParams(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ClientParams queries all parameters of the ibc client submodule.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ibc.Core.Client.V1.QueryClientParamsResponse ClientParams(global::Ibc.Core.Client.V1.QueryClientParamsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ClientParams, null, options, request);
      }
      /// <summary>
      /// ClientParams queries all parameters of the ibc client submodule.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ibc.Core.Client.V1.QueryClientParamsResponse> ClientParamsAsync(global::Ibc.Core.Client.V1.QueryClientParamsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ClientParamsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ClientParams queries all parameters of the ibc client submodule.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ibc.Core.Client.V1.QueryClientParamsResponse> ClientParamsAsync(global::Ibc.Core.Client.V1.QueryClientParamsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ClientParams, null, options, request);
      }
      /// <summary>
      /// UpgradedClientState queries an Upgraded IBC light client.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ibc.Core.Client.V1.QueryUpgradedClientStateResponse UpgradedClientState(global::Ibc.Core.Client.V1.QueryUpgradedClientStateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpgradedClientState(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// UpgradedClientState queries an Upgraded IBC light client.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ibc.Core.Client.V1.QueryUpgradedClientStateResponse UpgradedClientState(global::Ibc.Core.Client.V1.QueryUpgradedClientStateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpgradedClientState, null, options, request);
      }
      /// <summary>
      /// UpgradedClientState queries an Upgraded IBC light client.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ibc.Core.Client.V1.QueryUpgradedClientStateResponse> UpgradedClientStateAsync(global::Ibc.Core.Client.V1.QueryUpgradedClientStateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpgradedClientStateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// UpgradedClientState queries an Upgraded IBC light client.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ibc.Core.Client.V1.QueryUpgradedClientStateResponse> UpgradedClientStateAsync(global::Ibc.Core.Client.V1.QueryUpgradedClientStateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpgradedClientState, null, options, request);
      }
      /// <summary>
      /// UpgradedConsensusState queries an Upgraded IBC consensus state.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ibc.Core.Client.V1.QueryUpgradedConsensusStateResponse UpgradedConsensusState(global::Ibc.Core.Client.V1.QueryUpgradedConsensusStateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpgradedConsensusState(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// UpgradedConsensusState queries an Upgraded IBC consensus state.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ibc.Core.Client.V1.QueryUpgradedConsensusStateResponse UpgradedConsensusState(global::Ibc.Core.Client.V1.QueryUpgradedConsensusStateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpgradedConsensusState, null, options, request);
      }
      /// <summary>
      /// UpgradedConsensusState queries an Upgraded IBC consensus state.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ibc.Core.Client.V1.QueryUpgradedConsensusStateResponse> UpgradedConsensusStateAsync(global::Ibc.Core.Client.V1.QueryUpgradedConsensusStateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpgradedConsensusStateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// UpgradedConsensusState queries an Upgraded IBC consensus state.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ibc.Core.Client.V1.QueryUpgradedConsensusStateResponse> UpgradedConsensusStateAsync(global::Ibc.Core.Client.V1.QueryUpgradedConsensusStateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpgradedConsensusState, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override QueryClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new QueryClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(QueryBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_ClientState, serviceImpl.ClientState)
          .AddMethod(__Method_ClientStates, serviceImpl.ClientStates)
          .AddMethod(__Method_ConsensusState, serviceImpl.ConsensusState)
          .AddMethod(__Method_ConsensusStates, serviceImpl.ConsensusStates)
          .AddMethod(__Method_ConsensusStateHeights, serviceImpl.ConsensusStateHeights)
          .AddMethod(__Method_ClientStatus, serviceImpl.ClientStatus)
          .AddMethod(__Method_ClientParams, serviceImpl.ClientParams)
          .AddMethod(__Method_UpgradedClientState, serviceImpl.UpgradedClientState)
          .AddMethod(__Method_UpgradedConsensusState, serviceImpl.UpgradedConsensusState).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, QueryBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_ClientState, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Ibc.Core.Client.V1.QueryClientStateRequest, global::Ibc.Core.Client.V1.QueryClientStateResponse>(serviceImpl.ClientState));
      serviceBinder.AddMethod(__Method_ClientStates, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Ibc.Core.Client.V1.QueryClientStatesRequest, global::Ibc.Core.Client.V1.QueryClientStatesResponse>(serviceImpl.ClientStates));
      serviceBinder.AddMethod(__Method_ConsensusState, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Ibc.Core.Client.V1.QueryConsensusStateRequest, global::Ibc.Core.Client.V1.QueryConsensusStateResponse>(serviceImpl.ConsensusState));
      serviceBinder.AddMethod(__Method_ConsensusStates, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Ibc.Core.Client.V1.QueryConsensusStatesRequest, global::Ibc.Core.Client.V1.QueryConsensusStatesResponse>(serviceImpl.ConsensusStates));
      serviceBinder.AddMethod(__Method_ConsensusStateHeights, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Ibc.Core.Client.V1.QueryConsensusStateHeightsRequest, global::Ibc.Core.Client.V1.QueryConsensusStateHeightsResponse>(serviceImpl.ConsensusStateHeights));
      serviceBinder.AddMethod(__Method_ClientStatus, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Ibc.Core.Client.V1.QueryClientStatusRequest, global::Ibc.Core.Client.V1.QueryClientStatusResponse>(serviceImpl.ClientStatus));
      serviceBinder.AddMethod(__Method_ClientParams, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Ibc.Core.Client.V1.QueryClientParamsRequest, global::Ibc.Core.Client.V1.QueryClientParamsResponse>(serviceImpl.ClientParams));
      serviceBinder.AddMethod(__Method_UpgradedClientState, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Ibc.Core.Client.V1.QueryUpgradedClientStateRequest, global::Ibc.Core.Client.V1.QueryUpgradedClientStateResponse>(serviceImpl.UpgradedClientState));
      serviceBinder.AddMethod(__Method_UpgradedConsensusState, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Ibc.Core.Client.V1.QueryUpgradedConsensusStateRequest, global::Ibc.Core.Client.V1.QueryUpgradedConsensusStateResponse>(serviceImpl.UpgradedConsensusState));
    }

  }
}
#endregion
