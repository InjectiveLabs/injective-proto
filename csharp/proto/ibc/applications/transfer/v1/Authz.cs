// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ibc/applications/transfer/v1/authz.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Ibc.Applications.Transfer.V1 {

  /// <summary>Holder for reflection information generated from ibc/applications/transfer/v1/authz.proto</summary>
  public static partial class AuthzReflection {

    #region Descriptor
    /// <summary>File descriptor for ibc/applications/transfer/v1/authz.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AuthzReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CihpYmMvYXBwbGljYXRpb25zL3RyYW5zZmVyL3YxL2F1dGh6LnByb3RvEhxp",
            "YmMuYXBwbGljYXRpb25zLnRyYW5zZmVyLnYxGhljb3Ntb3NfcHJvdG8vY29z",
            "bW9zLnByb3RvGhRnb2dvcHJvdG8vZ29nby5wcm90bxoeY29zbW9zL2Jhc2Uv",
            "djFiZXRhMS9jb2luLnByb3RvIq8BCgpBbGxvY2F0aW9uEhMKC3NvdXJjZV9w",
            "b3J0GAEgASgJEhYKDnNvdXJjZV9jaGFubmVsGAIgASgJEmAKC3NwZW5kX2xp",
            "bWl0GAMgAygLMhkuY29zbW9zLmJhc2UudjFiZXRhMS5Db2luQjDI3h8Aqt8f",
            "KGdpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsvdHlwZXMuQ29pbnMSEgoK",
            "YWxsb3dfbGlzdBgEIAMoCSKEAQoVVHJhbnNmZXJBdXRob3JpemF0aW9uEkMK",
            "C2FsbG9jYXRpb25zGAEgAygLMiguaWJjLmFwcGxpY2F0aW9ucy50cmFuc2Zl",
            "ci52MS5BbGxvY2F0aW9uQgTI3h8AOibKtC0iY29zbW9zLmF1dGh6LnYxYmV0",
            "YTEuQXV0aG9yaXphdGlvbkI5WjdnaXRodWIuY29tL2Nvc21vcy9pYmMtZ28v",
            "djcvbW9kdWxlcy9hcHBzL3RyYW5zZmVyL3R5cGVzYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::CosmosProto.CosmosReflection.Descriptor, global::Gogoproto.GogoReflection.Descriptor, global::Cosmos.Base.V1Beta1.CoinReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Ibc.Applications.Transfer.V1.Allocation), global::Ibc.Applications.Transfer.V1.Allocation.Parser, new[]{ "SourcePort", "SourceChannel", "SpendLimit", "AllowList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ibc.Applications.Transfer.V1.TransferAuthorization), global::Ibc.Applications.Transfer.V1.TransferAuthorization.Parser, new[]{ "Allocations" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Allocation defines the spend limit for a particular port and channel
  /// </summary>
  public sealed partial class Allocation : pb::IMessage<Allocation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Allocation> _parser = new pb::MessageParser<Allocation>(() => new Allocation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Allocation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ibc.Applications.Transfer.V1.AuthzReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Allocation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Allocation(Allocation other) : this() {
      sourcePort_ = other.sourcePort_;
      sourceChannel_ = other.sourceChannel_;
      spendLimit_ = other.spendLimit_.Clone();
      allowList_ = other.allowList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Allocation Clone() {
      return new Allocation(this);
    }

    /// <summary>Field number for the "source_port" field.</summary>
    public const int SourcePortFieldNumber = 1;
    private string sourcePort_ = "";
    /// <summary>
    /// the port on which the packet will be sent
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SourcePort {
      get { return sourcePort_; }
      set {
        sourcePort_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "source_channel" field.</summary>
    public const int SourceChannelFieldNumber = 2;
    private string sourceChannel_ = "";
    /// <summary>
    /// the channel by which the packet will be sent
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SourceChannel {
      get { return sourceChannel_; }
      set {
        sourceChannel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "spend_limit" field.</summary>
    public const int SpendLimitFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Cosmos.Base.V1Beta1.Coin> _repeated_spendLimit_codec
        = pb::FieldCodec.ForMessage(26, global::Cosmos.Base.V1Beta1.Coin.Parser);
    private readonly pbc::RepeatedField<global::Cosmos.Base.V1Beta1.Coin> spendLimit_ = new pbc::RepeatedField<global::Cosmos.Base.V1Beta1.Coin>();
    /// <summary>
    /// spend limitation on the channel
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Cosmos.Base.V1Beta1.Coin> SpendLimit {
      get { return spendLimit_; }
    }

    /// <summary>Field number for the "allow_list" field.</summary>
    public const int AllowListFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_allowList_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> allowList_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// allow list of receivers, an empty allow list permits any receiver address
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> AllowList {
      get { return allowList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Allocation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Allocation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SourcePort != other.SourcePort) return false;
      if (SourceChannel != other.SourceChannel) return false;
      if(!spendLimit_.Equals(other.spendLimit_)) return false;
      if(!allowList_.Equals(other.allowList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SourcePort.Length != 0) hash ^= SourcePort.GetHashCode();
      if (SourceChannel.Length != 0) hash ^= SourceChannel.GetHashCode();
      hash ^= spendLimit_.GetHashCode();
      hash ^= allowList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SourcePort.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SourcePort);
      }
      if (SourceChannel.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SourceChannel);
      }
      spendLimit_.WriteTo(output, _repeated_spendLimit_codec);
      allowList_.WriteTo(output, _repeated_allowList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SourcePort.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SourcePort);
      }
      if (SourceChannel.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SourceChannel);
      }
      spendLimit_.WriteTo(ref output, _repeated_spendLimit_codec);
      allowList_.WriteTo(ref output, _repeated_allowList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SourcePort.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourcePort);
      }
      if (SourceChannel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceChannel);
      }
      size += spendLimit_.CalculateSize(_repeated_spendLimit_codec);
      size += allowList_.CalculateSize(_repeated_allowList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Allocation other) {
      if (other == null) {
        return;
      }
      if (other.SourcePort.Length != 0) {
        SourcePort = other.SourcePort;
      }
      if (other.SourceChannel.Length != 0) {
        SourceChannel = other.SourceChannel;
      }
      spendLimit_.Add(other.spendLimit_);
      allowList_.Add(other.allowList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SourcePort = input.ReadString();
            break;
          }
          case 18: {
            SourceChannel = input.ReadString();
            break;
          }
          case 26: {
            spendLimit_.AddEntriesFrom(input, _repeated_spendLimit_codec);
            break;
          }
          case 34: {
            allowList_.AddEntriesFrom(input, _repeated_allowList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SourcePort = input.ReadString();
            break;
          }
          case 18: {
            SourceChannel = input.ReadString();
            break;
          }
          case 26: {
            spendLimit_.AddEntriesFrom(ref input, _repeated_spendLimit_codec);
            break;
          }
          case 34: {
            allowList_.AddEntriesFrom(ref input, _repeated_allowList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// TransferAuthorization allows the grantee to spend up to spend_limit coins from
  /// the granter's account for ibc transfer on a specific channel
  /// </summary>
  public sealed partial class TransferAuthorization : pb::IMessage<TransferAuthorization>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TransferAuthorization> _parser = new pb::MessageParser<TransferAuthorization>(() => new TransferAuthorization());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TransferAuthorization> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ibc.Applications.Transfer.V1.AuthzReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TransferAuthorization() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TransferAuthorization(TransferAuthorization other) : this() {
      allocations_ = other.allocations_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TransferAuthorization Clone() {
      return new TransferAuthorization(this);
    }

    /// <summary>Field number for the "allocations" field.</summary>
    public const int AllocationsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Ibc.Applications.Transfer.V1.Allocation> _repeated_allocations_codec
        = pb::FieldCodec.ForMessage(10, global::Ibc.Applications.Transfer.V1.Allocation.Parser);
    private readonly pbc::RepeatedField<global::Ibc.Applications.Transfer.V1.Allocation> allocations_ = new pbc::RepeatedField<global::Ibc.Applications.Transfer.V1.Allocation>();
    /// <summary>
    /// port and channel amounts
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Ibc.Applications.Transfer.V1.Allocation> Allocations {
      get { return allocations_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TransferAuthorization);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TransferAuthorization other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!allocations_.Equals(other.allocations_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= allocations_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      allocations_.WriteTo(output, _repeated_allocations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      allocations_.WriteTo(ref output, _repeated_allocations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += allocations_.CalculateSize(_repeated_allocations_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TransferAuthorization other) {
      if (other == null) {
        return;
      }
      allocations_.Add(other.allocations_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            allocations_.AddEntriesFrom(input, _repeated_allocations_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            allocations_.AddEntriesFrom(ref input, _repeated_allocations_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
