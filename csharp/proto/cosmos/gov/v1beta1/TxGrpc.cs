// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: cosmos/gov/v1beta1/tx.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Cosmos.Gov.V1Beta1 {
  /// <summary>
  /// Msg defines the bank Msg service.
  /// </summary>
  public static partial class Msg
  {
    static readonly string __ServiceName = "cosmos.gov.v1beta1.Msg";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Gov.V1Beta1.MsgSubmitProposal> __Marshaller_cosmos_gov_v1beta1_MsgSubmitProposal = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Gov.V1Beta1.MsgSubmitProposal.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Gov.V1Beta1.MsgSubmitProposalResponse> __Marshaller_cosmos_gov_v1beta1_MsgSubmitProposalResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Gov.V1Beta1.MsgSubmitProposalResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Gov.V1Beta1.MsgVote> __Marshaller_cosmos_gov_v1beta1_MsgVote = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Gov.V1Beta1.MsgVote.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Gov.V1Beta1.MsgVoteResponse> __Marshaller_cosmos_gov_v1beta1_MsgVoteResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Gov.V1Beta1.MsgVoteResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Gov.V1Beta1.MsgVoteWeighted> __Marshaller_cosmos_gov_v1beta1_MsgVoteWeighted = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Gov.V1Beta1.MsgVoteWeighted.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Gov.V1Beta1.MsgVoteWeightedResponse> __Marshaller_cosmos_gov_v1beta1_MsgVoteWeightedResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Gov.V1Beta1.MsgVoteWeightedResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Gov.V1Beta1.MsgDeposit> __Marshaller_cosmos_gov_v1beta1_MsgDeposit = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Gov.V1Beta1.MsgDeposit.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Gov.V1Beta1.MsgDepositResponse> __Marshaller_cosmos_gov_v1beta1_MsgDepositResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Gov.V1Beta1.MsgDepositResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Gov.V1Beta1.MsgSubmitProposal, global::Cosmos.Gov.V1Beta1.MsgSubmitProposalResponse> __Method_SubmitProposal = new grpc::Method<global::Cosmos.Gov.V1Beta1.MsgSubmitProposal, global::Cosmos.Gov.V1Beta1.MsgSubmitProposalResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SubmitProposal",
        __Marshaller_cosmos_gov_v1beta1_MsgSubmitProposal,
        __Marshaller_cosmos_gov_v1beta1_MsgSubmitProposalResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Gov.V1Beta1.MsgVote, global::Cosmos.Gov.V1Beta1.MsgVoteResponse> __Method_Vote = new grpc::Method<global::Cosmos.Gov.V1Beta1.MsgVote, global::Cosmos.Gov.V1Beta1.MsgVoteResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Vote",
        __Marshaller_cosmos_gov_v1beta1_MsgVote,
        __Marshaller_cosmos_gov_v1beta1_MsgVoteResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Gov.V1Beta1.MsgVoteWeighted, global::Cosmos.Gov.V1Beta1.MsgVoteWeightedResponse> __Method_VoteWeighted = new grpc::Method<global::Cosmos.Gov.V1Beta1.MsgVoteWeighted, global::Cosmos.Gov.V1Beta1.MsgVoteWeightedResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "VoteWeighted",
        __Marshaller_cosmos_gov_v1beta1_MsgVoteWeighted,
        __Marshaller_cosmos_gov_v1beta1_MsgVoteWeightedResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Gov.V1Beta1.MsgDeposit, global::Cosmos.Gov.V1Beta1.MsgDepositResponse> __Method_Deposit = new grpc::Method<global::Cosmos.Gov.V1Beta1.MsgDeposit, global::Cosmos.Gov.V1Beta1.MsgDepositResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Deposit",
        __Marshaller_cosmos_gov_v1beta1_MsgDeposit,
        __Marshaller_cosmos_gov_v1beta1_MsgDepositResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Cosmos.Gov.V1Beta1.TxReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Msg</summary>
    [grpc::BindServiceMethod(typeof(Msg), "BindService")]
    public abstract partial class MsgBase
    {
      /// <summary>
      /// SubmitProposal defines a method to create new proposal given a content.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cosmos.Gov.V1Beta1.MsgSubmitProposalResponse> SubmitProposal(global::Cosmos.Gov.V1Beta1.MsgSubmitProposal request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Vote defines a method to add a vote on a specific proposal.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cosmos.Gov.V1Beta1.MsgVoteResponse> Vote(global::Cosmos.Gov.V1Beta1.MsgVote request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// VoteWeighted defines a method to add a weighted vote on a specific proposal.
      ///
      /// Since: cosmos-sdk 0.43
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cosmos.Gov.V1Beta1.MsgVoteWeightedResponse> VoteWeighted(global::Cosmos.Gov.V1Beta1.MsgVoteWeighted request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deposit defines a method to add deposit on a specific proposal.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cosmos.Gov.V1Beta1.MsgDepositResponse> Deposit(global::Cosmos.Gov.V1Beta1.MsgDeposit request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Msg</summary>
    public partial class MsgClient : grpc::ClientBase<MsgClient>
    {
      /// <summary>Creates a new client for Msg</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public MsgClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Msg that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public MsgClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected MsgClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected MsgClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// SubmitProposal defines a method to create new proposal given a content.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Gov.V1Beta1.MsgSubmitProposalResponse SubmitProposal(global::Cosmos.Gov.V1Beta1.MsgSubmitProposal request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SubmitProposal(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// SubmitProposal defines a method to create new proposal given a content.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Gov.V1Beta1.MsgSubmitProposalResponse SubmitProposal(global::Cosmos.Gov.V1Beta1.MsgSubmitProposal request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SubmitProposal, null, options, request);
      }
      /// <summary>
      /// SubmitProposal defines a method to create new proposal given a content.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Gov.V1Beta1.MsgSubmitProposalResponse> SubmitProposalAsync(global::Cosmos.Gov.V1Beta1.MsgSubmitProposal request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SubmitProposalAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// SubmitProposal defines a method to create new proposal given a content.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Gov.V1Beta1.MsgSubmitProposalResponse> SubmitProposalAsync(global::Cosmos.Gov.V1Beta1.MsgSubmitProposal request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SubmitProposal, null, options, request);
      }
      /// <summary>
      /// Vote defines a method to add a vote on a specific proposal.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Gov.V1Beta1.MsgVoteResponse Vote(global::Cosmos.Gov.V1Beta1.MsgVote request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Vote(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Vote defines a method to add a vote on a specific proposal.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Gov.V1Beta1.MsgVoteResponse Vote(global::Cosmos.Gov.V1Beta1.MsgVote request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Vote, null, options, request);
      }
      /// <summary>
      /// Vote defines a method to add a vote on a specific proposal.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Gov.V1Beta1.MsgVoteResponse> VoteAsync(global::Cosmos.Gov.V1Beta1.MsgVote request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return VoteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Vote defines a method to add a vote on a specific proposal.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Gov.V1Beta1.MsgVoteResponse> VoteAsync(global::Cosmos.Gov.V1Beta1.MsgVote request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Vote, null, options, request);
      }
      /// <summary>
      /// VoteWeighted defines a method to add a weighted vote on a specific proposal.
      ///
      /// Since: cosmos-sdk 0.43
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Gov.V1Beta1.MsgVoteWeightedResponse VoteWeighted(global::Cosmos.Gov.V1Beta1.MsgVoteWeighted request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return VoteWeighted(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// VoteWeighted defines a method to add a weighted vote on a specific proposal.
      ///
      /// Since: cosmos-sdk 0.43
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Gov.V1Beta1.MsgVoteWeightedResponse VoteWeighted(global::Cosmos.Gov.V1Beta1.MsgVoteWeighted request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_VoteWeighted, null, options, request);
      }
      /// <summary>
      /// VoteWeighted defines a method to add a weighted vote on a specific proposal.
      ///
      /// Since: cosmos-sdk 0.43
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Gov.V1Beta1.MsgVoteWeightedResponse> VoteWeightedAsync(global::Cosmos.Gov.V1Beta1.MsgVoteWeighted request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return VoteWeightedAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// VoteWeighted defines a method to add a weighted vote on a specific proposal.
      ///
      /// Since: cosmos-sdk 0.43
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Gov.V1Beta1.MsgVoteWeightedResponse> VoteWeightedAsync(global::Cosmos.Gov.V1Beta1.MsgVoteWeighted request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_VoteWeighted, null, options, request);
      }
      /// <summary>
      /// Deposit defines a method to add deposit on a specific proposal.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Gov.V1Beta1.MsgDepositResponse Deposit(global::Cosmos.Gov.V1Beta1.MsgDeposit request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Deposit(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deposit defines a method to add deposit on a specific proposal.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Gov.V1Beta1.MsgDepositResponse Deposit(global::Cosmos.Gov.V1Beta1.MsgDeposit request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Deposit, null, options, request);
      }
      /// <summary>
      /// Deposit defines a method to add deposit on a specific proposal.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Gov.V1Beta1.MsgDepositResponse> DepositAsync(global::Cosmos.Gov.V1Beta1.MsgDeposit request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DepositAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deposit defines a method to add deposit on a specific proposal.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Gov.V1Beta1.MsgDepositResponse> DepositAsync(global::Cosmos.Gov.V1Beta1.MsgDeposit request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Deposit, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override MsgClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new MsgClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(MsgBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_SubmitProposal, serviceImpl.SubmitProposal)
          .AddMethod(__Method_Vote, serviceImpl.Vote)
          .AddMethod(__Method_VoteWeighted, serviceImpl.VoteWeighted)
          .AddMethod(__Method_Deposit, serviceImpl.Deposit).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, MsgBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_SubmitProposal, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cosmos.Gov.V1Beta1.MsgSubmitProposal, global::Cosmos.Gov.V1Beta1.MsgSubmitProposalResponse>(serviceImpl.SubmitProposal));
      serviceBinder.AddMethod(__Method_Vote, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cosmos.Gov.V1Beta1.MsgVote, global::Cosmos.Gov.V1Beta1.MsgVoteResponse>(serviceImpl.Vote));
      serviceBinder.AddMethod(__Method_VoteWeighted, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cosmos.Gov.V1Beta1.MsgVoteWeighted, global::Cosmos.Gov.V1Beta1.MsgVoteWeightedResponse>(serviceImpl.VoteWeighted));
      serviceBinder.AddMethod(__Method_Deposit, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cosmos.Gov.V1Beta1.MsgDeposit, global::Cosmos.Gov.V1Beta1.MsgDepositResponse>(serviceImpl.Deposit));
    }

  }
}
#endregion
