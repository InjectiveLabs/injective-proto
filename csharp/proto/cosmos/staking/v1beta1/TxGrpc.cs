// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: cosmos/staking/v1beta1/tx.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Cosmos.Staking.V1Beta1 {
  /// <summary>
  /// Msg defines the staking Msg service.
  /// </summary>
  public static partial class Msg
  {
    static readonly string __ServiceName = "cosmos.staking.v1beta1.Msg";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Staking.V1Beta1.MsgCreateValidator> __Marshaller_cosmos_staking_v1beta1_MsgCreateValidator = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Staking.V1Beta1.MsgCreateValidator.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Staking.V1Beta1.MsgCreateValidatorResponse> __Marshaller_cosmos_staking_v1beta1_MsgCreateValidatorResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Staking.V1Beta1.MsgCreateValidatorResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Staking.V1Beta1.MsgEditValidator> __Marshaller_cosmos_staking_v1beta1_MsgEditValidator = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Staking.V1Beta1.MsgEditValidator.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Staking.V1Beta1.MsgEditValidatorResponse> __Marshaller_cosmos_staking_v1beta1_MsgEditValidatorResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Staking.V1Beta1.MsgEditValidatorResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Staking.V1Beta1.MsgDelegate> __Marshaller_cosmos_staking_v1beta1_MsgDelegate = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Staking.V1Beta1.MsgDelegate.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Staking.V1Beta1.MsgDelegateResponse> __Marshaller_cosmos_staking_v1beta1_MsgDelegateResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Staking.V1Beta1.MsgDelegateResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Staking.V1Beta1.MsgBeginRedelegate> __Marshaller_cosmos_staking_v1beta1_MsgBeginRedelegate = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Staking.V1Beta1.MsgBeginRedelegate.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Staking.V1Beta1.MsgBeginRedelegateResponse> __Marshaller_cosmos_staking_v1beta1_MsgBeginRedelegateResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Staking.V1Beta1.MsgBeginRedelegateResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Staking.V1Beta1.MsgUndelegate> __Marshaller_cosmos_staking_v1beta1_MsgUndelegate = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Staking.V1Beta1.MsgUndelegate.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Staking.V1Beta1.MsgUndelegateResponse> __Marshaller_cosmos_staking_v1beta1_MsgUndelegateResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Staking.V1Beta1.MsgUndelegateResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Staking.V1Beta1.MsgCancelUnbondingDelegation> __Marshaller_cosmos_staking_v1beta1_MsgCancelUnbondingDelegation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Staking.V1Beta1.MsgCancelUnbondingDelegation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Staking.V1Beta1.MsgCancelUnbondingDelegationResponse> __Marshaller_cosmos_staking_v1beta1_MsgCancelUnbondingDelegationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Staking.V1Beta1.MsgCancelUnbondingDelegationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Staking.V1Beta1.MsgUpdateParams> __Marshaller_cosmos_staking_v1beta1_MsgUpdateParams = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Staking.V1Beta1.MsgUpdateParams.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Staking.V1Beta1.MsgUpdateParamsResponse> __Marshaller_cosmos_staking_v1beta1_MsgUpdateParamsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Staking.V1Beta1.MsgUpdateParamsResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Staking.V1Beta1.MsgCreateValidator, global::Cosmos.Staking.V1Beta1.MsgCreateValidatorResponse> __Method_CreateValidator = new grpc::Method<global::Cosmos.Staking.V1Beta1.MsgCreateValidator, global::Cosmos.Staking.V1Beta1.MsgCreateValidatorResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateValidator",
        __Marshaller_cosmos_staking_v1beta1_MsgCreateValidator,
        __Marshaller_cosmos_staking_v1beta1_MsgCreateValidatorResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Staking.V1Beta1.MsgEditValidator, global::Cosmos.Staking.V1Beta1.MsgEditValidatorResponse> __Method_EditValidator = new grpc::Method<global::Cosmos.Staking.V1Beta1.MsgEditValidator, global::Cosmos.Staking.V1Beta1.MsgEditValidatorResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "EditValidator",
        __Marshaller_cosmos_staking_v1beta1_MsgEditValidator,
        __Marshaller_cosmos_staking_v1beta1_MsgEditValidatorResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Staking.V1Beta1.MsgDelegate, global::Cosmos.Staking.V1Beta1.MsgDelegateResponse> __Method_Delegate = new grpc::Method<global::Cosmos.Staking.V1Beta1.MsgDelegate, global::Cosmos.Staking.V1Beta1.MsgDelegateResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Delegate",
        __Marshaller_cosmos_staking_v1beta1_MsgDelegate,
        __Marshaller_cosmos_staking_v1beta1_MsgDelegateResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Staking.V1Beta1.MsgBeginRedelegate, global::Cosmos.Staking.V1Beta1.MsgBeginRedelegateResponse> __Method_BeginRedelegate = new grpc::Method<global::Cosmos.Staking.V1Beta1.MsgBeginRedelegate, global::Cosmos.Staking.V1Beta1.MsgBeginRedelegateResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BeginRedelegate",
        __Marshaller_cosmos_staking_v1beta1_MsgBeginRedelegate,
        __Marshaller_cosmos_staking_v1beta1_MsgBeginRedelegateResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Staking.V1Beta1.MsgUndelegate, global::Cosmos.Staking.V1Beta1.MsgUndelegateResponse> __Method_Undelegate = new grpc::Method<global::Cosmos.Staking.V1Beta1.MsgUndelegate, global::Cosmos.Staking.V1Beta1.MsgUndelegateResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Undelegate",
        __Marshaller_cosmos_staking_v1beta1_MsgUndelegate,
        __Marshaller_cosmos_staking_v1beta1_MsgUndelegateResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Staking.V1Beta1.MsgCancelUnbondingDelegation, global::Cosmos.Staking.V1Beta1.MsgCancelUnbondingDelegationResponse> __Method_CancelUnbondingDelegation = new grpc::Method<global::Cosmos.Staking.V1Beta1.MsgCancelUnbondingDelegation, global::Cosmos.Staking.V1Beta1.MsgCancelUnbondingDelegationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CancelUnbondingDelegation",
        __Marshaller_cosmos_staking_v1beta1_MsgCancelUnbondingDelegation,
        __Marshaller_cosmos_staking_v1beta1_MsgCancelUnbondingDelegationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Staking.V1Beta1.MsgUpdateParams, global::Cosmos.Staking.V1Beta1.MsgUpdateParamsResponse> __Method_UpdateParams = new grpc::Method<global::Cosmos.Staking.V1Beta1.MsgUpdateParams, global::Cosmos.Staking.V1Beta1.MsgUpdateParamsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateParams",
        __Marshaller_cosmos_staking_v1beta1_MsgUpdateParams,
        __Marshaller_cosmos_staking_v1beta1_MsgUpdateParamsResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Cosmos.Staking.V1Beta1.TxReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Msg</summary>
    [grpc::BindServiceMethod(typeof(Msg), "BindService")]
    public abstract partial class MsgBase
    {
      /// <summary>
      /// CreateValidator defines a method for creating a new validator.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cosmos.Staking.V1Beta1.MsgCreateValidatorResponse> CreateValidator(global::Cosmos.Staking.V1Beta1.MsgCreateValidator request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// EditValidator defines a method for editing an existing validator.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cosmos.Staking.V1Beta1.MsgEditValidatorResponse> EditValidator(global::Cosmos.Staking.V1Beta1.MsgEditValidator request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Delegate defines a method for performing a delegation of coins
      /// from a delegator to a validator.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cosmos.Staking.V1Beta1.MsgDelegateResponse> Delegate(global::Cosmos.Staking.V1Beta1.MsgDelegate request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// BeginRedelegate defines a method for performing a redelegation
      /// of coins from a delegator and source validator to a destination validator.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cosmos.Staking.V1Beta1.MsgBeginRedelegateResponse> BeginRedelegate(global::Cosmos.Staking.V1Beta1.MsgBeginRedelegate request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Undelegate defines a method for performing an undelegation from a
      /// delegate and a validator.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cosmos.Staking.V1Beta1.MsgUndelegateResponse> Undelegate(global::Cosmos.Staking.V1Beta1.MsgUndelegate request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// CancelUnbondingDelegation defines a method for performing canceling the unbonding delegation
      /// and delegate back to previous validator.
      ///
      /// Since: cosmos-sdk 0.46
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cosmos.Staking.V1Beta1.MsgCancelUnbondingDelegationResponse> CancelUnbondingDelegation(global::Cosmos.Staking.V1Beta1.MsgCancelUnbondingDelegation request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// UpdateParams defines an operation for updating the x/staking module
      /// parameters.
      /// Since: cosmos-sdk 0.47
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cosmos.Staking.V1Beta1.MsgUpdateParamsResponse> UpdateParams(global::Cosmos.Staking.V1Beta1.MsgUpdateParams request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Msg</summary>
    public partial class MsgClient : grpc::ClientBase<MsgClient>
    {
      /// <summary>Creates a new client for Msg</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public MsgClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Msg that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public MsgClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected MsgClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected MsgClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// CreateValidator defines a method for creating a new validator.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Staking.V1Beta1.MsgCreateValidatorResponse CreateValidator(global::Cosmos.Staking.V1Beta1.MsgCreateValidator request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateValidator(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// CreateValidator defines a method for creating a new validator.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Staking.V1Beta1.MsgCreateValidatorResponse CreateValidator(global::Cosmos.Staking.V1Beta1.MsgCreateValidator request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateValidator, null, options, request);
      }
      /// <summary>
      /// CreateValidator defines a method for creating a new validator.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Staking.V1Beta1.MsgCreateValidatorResponse> CreateValidatorAsync(global::Cosmos.Staking.V1Beta1.MsgCreateValidator request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateValidatorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// CreateValidator defines a method for creating a new validator.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Staking.V1Beta1.MsgCreateValidatorResponse> CreateValidatorAsync(global::Cosmos.Staking.V1Beta1.MsgCreateValidator request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateValidator, null, options, request);
      }
      /// <summary>
      /// EditValidator defines a method for editing an existing validator.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Staking.V1Beta1.MsgEditValidatorResponse EditValidator(global::Cosmos.Staking.V1Beta1.MsgEditValidator request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EditValidator(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// EditValidator defines a method for editing an existing validator.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Staking.V1Beta1.MsgEditValidatorResponse EditValidator(global::Cosmos.Staking.V1Beta1.MsgEditValidator request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_EditValidator, null, options, request);
      }
      /// <summary>
      /// EditValidator defines a method for editing an existing validator.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Staking.V1Beta1.MsgEditValidatorResponse> EditValidatorAsync(global::Cosmos.Staking.V1Beta1.MsgEditValidator request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EditValidatorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// EditValidator defines a method for editing an existing validator.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Staking.V1Beta1.MsgEditValidatorResponse> EditValidatorAsync(global::Cosmos.Staking.V1Beta1.MsgEditValidator request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_EditValidator, null, options, request);
      }
      /// <summary>
      /// Delegate defines a method for performing a delegation of coins
      /// from a delegator to a validator.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Staking.V1Beta1.MsgDelegateResponse Delegate(global::Cosmos.Staking.V1Beta1.MsgDelegate request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Delegate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delegate defines a method for performing a delegation of coins
      /// from a delegator to a validator.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Staking.V1Beta1.MsgDelegateResponse Delegate(global::Cosmos.Staking.V1Beta1.MsgDelegate request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Delegate, null, options, request);
      }
      /// <summary>
      /// Delegate defines a method for performing a delegation of coins
      /// from a delegator to a validator.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Staking.V1Beta1.MsgDelegateResponse> DelegateAsync(global::Cosmos.Staking.V1Beta1.MsgDelegate request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DelegateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delegate defines a method for performing a delegation of coins
      /// from a delegator to a validator.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Staking.V1Beta1.MsgDelegateResponse> DelegateAsync(global::Cosmos.Staking.V1Beta1.MsgDelegate request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Delegate, null, options, request);
      }
      /// <summary>
      /// BeginRedelegate defines a method for performing a redelegation
      /// of coins from a delegator and source validator to a destination validator.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Staking.V1Beta1.MsgBeginRedelegateResponse BeginRedelegate(global::Cosmos.Staking.V1Beta1.MsgBeginRedelegate request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BeginRedelegate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// BeginRedelegate defines a method for performing a redelegation
      /// of coins from a delegator and source validator to a destination validator.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Staking.V1Beta1.MsgBeginRedelegateResponse BeginRedelegate(global::Cosmos.Staking.V1Beta1.MsgBeginRedelegate request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BeginRedelegate, null, options, request);
      }
      /// <summary>
      /// BeginRedelegate defines a method for performing a redelegation
      /// of coins from a delegator and source validator to a destination validator.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Staking.V1Beta1.MsgBeginRedelegateResponse> BeginRedelegateAsync(global::Cosmos.Staking.V1Beta1.MsgBeginRedelegate request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BeginRedelegateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// BeginRedelegate defines a method for performing a redelegation
      /// of coins from a delegator and source validator to a destination validator.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Staking.V1Beta1.MsgBeginRedelegateResponse> BeginRedelegateAsync(global::Cosmos.Staking.V1Beta1.MsgBeginRedelegate request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BeginRedelegate, null, options, request);
      }
      /// <summary>
      /// Undelegate defines a method for performing an undelegation from a
      /// delegate and a validator.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Staking.V1Beta1.MsgUndelegateResponse Undelegate(global::Cosmos.Staking.V1Beta1.MsgUndelegate request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Undelegate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Undelegate defines a method for performing an undelegation from a
      /// delegate and a validator.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Staking.V1Beta1.MsgUndelegateResponse Undelegate(global::Cosmos.Staking.V1Beta1.MsgUndelegate request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Undelegate, null, options, request);
      }
      /// <summary>
      /// Undelegate defines a method for performing an undelegation from a
      /// delegate and a validator.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Staking.V1Beta1.MsgUndelegateResponse> UndelegateAsync(global::Cosmos.Staking.V1Beta1.MsgUndelegate request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UndelegateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Undelegate defines a method for performing an undelegation from a
      /// delegate and a validator.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Staking.V1Beta1.MsgUndelegateResponse> UndelegateAsync(global::Cosmos.Staking.V1Beta1.MsgUndelegate request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Undelegate, null, options, request);
      }
      /// <summary>
      /// CancelUnbondingDelegation defines a method for performing canceling the unbonding delegation
      /// and delegate back to previous validator.
      ///
      /// Since: cosmos-sdk 0.46
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Staking.V1Beta1.MsgCancelUnbondingDelegationResponse CancelUnbondingDelegation(global::Cosmos.Staking.V1Beta1.MsgCancelUnbondingDelegation request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CancelUnbondingDelegation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// CancelUnbondingDelegation defines a method for performing canceling the unbonding delegation
      /// and delegate back to previous validator.
      ///
      /// Since: cosmos-sdk 0.46
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Staking.V1Beta1.MsgCancelUnbondingDelegationResponse CancelUnbondingDelegation(global::Cosmos.Staking.V1Beta1.MsgCancelUnbondingDelegation request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CancelUnbondingDelegation, null, options, request);
      }
      /// <summary>
      /// CancelUnbondingDelegation defines a method for performing canceling the unbonding delegation
      /// and delegate back to previous validator.
      ///
      /// Since: cosmos-sdk 0.46
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Staking.V1Beta1.MsgCancelUnbondingDelegationResponse> CancelUnbondingDelegationAsync(global::Cosmos.Staking.V1Beta1.MsgCancelUnbondingDelegation request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CancelUnbondingDelegationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// CancelUnbondingDelegation defines a method for performing canceling the unbonding delegation
      /// and delegate back to previous validator.
      ///
      /// Since: cosmos-sdk 0.46
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Staking.V1Beta1.MsgCancelUnbondingDelegationResponse> CancelUnbondingDelegationAsync(global::Cosmos.Staking.V1Beta1.MsgCancelUnbondingDelegation request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CancelUnbondingDelegation, null, options, request);
      }
      /// <summary>
      /// UpdateParams defines an operation for updating the x/staking module
      /// parameters.
      /// Since: cosmos-sdk 0.47
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Staking.V1Beta1.MsgUpdateParamsResponse UpdateParams(global::Cosmos.Staking.V1Beta1.MsgUpdateParams request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateParams(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// UpdateParams defines an operation for updating the x/staking module
      /// parameters.
      /// Since: cosmos-sdk 0.47
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Staking.V1Beta1.MsgUpdateParamsResponse UpdateParams(global::Cosmos.Staking.V1Beta1.MsgUpdateParams request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateParams, null, options, request);
      }
      /// <summary>
      /// UpdateParams defines an operation for updating the x/staking module
      /// parameters.
      /// Since: cosmos-sdk 0.47
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Staking.V1Beta1.MsgUpdateParamsResponse> UpdateParamsAsync(global::Cosmos.Staking.V1Beta1.MsgUpdateParams request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateParamsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// UpdateParams defines an operation for updating the x/staking module
      /// parameters.
      /// Since: cosmos-sdk 0.47
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Staking.V1Beta1.MsgUpdateParamsResponse> UpdateParamsAsync(global::Cosmos.Staking.V1Beta1.MsgUpdateParams request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateParams, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override MsgClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new MsgClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(MsgBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateValidator, serviceImpl.CreateValidator)
          .AddMethod(__Method_EditValidator, serviceImpl.EditValidator)
          .AddMethod(__Method_Delegate, serviceImpl.Delegate)
          .AddMethod(__Method_BeginRedelegate, serviceImpl.BeginRedelegate)
          .AddMethod(__Method_Undelegate, serviceImpl.Undelegate)
          .AddMethod(__Method_CancelUnbondingDelegation, serviceImpl.CancelUnbondingDelegation)
          .AddMethod(__Method_UpdateParams, serviceImpl.UpdateParams).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, MsgBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateValidator, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cosmos.Staking.V1Beta1.MsgCreateValidator, global::Cosmos.Staking.V1Beta1.MsgCreateValidatorResponse>(serviceImpl.CreateValidator));
      serviceBinder.AddMethod(__Method_EditValidator, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cosmos.Staking.V1Beta1.MsgEditValidator, global::Cosmos.Staking.V1Beta1.MsgEditValidatorResponse>(serviceImpl.EditValidator));
      serviceBinder.AddMethod(__Method_Delegate, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cosmos.Staking.V1Beta1.MsgDelegate, global::Cosmos.Staking.V1Beta1.MsgDelegateResponse>(serviceImpl.Delegate));
      serviceBinder.AddMethod(__Method_BeginRedelegate, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cosmos.Staking.V1Beta1.MsgBeginRedelegate, global::Cosmos.Staking.V1Beta1.MsgBeginRedelegateResponse>(serviceImpl.BeginRedelegate));
      serviceBinder.AddMethod(__Method_Undelegate, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cosmos.Staking.V1Beta1.MsgUndelegate, global::Cosmos.Staking.V1Beta1.MsgUndelegateResponse>(serviceImpl.Undelegate));
      serviceBinder.AddMethod(__Method_CancelUnbondingDelegation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cosmos.Staking.V1Beta1.MsgCancelUnbondingDelegation, global::Cosmos.Staking.V1Beta1.MsgCancelUnbondingDelegationResponse>(serviceImpl.CancelUnbondingDelegation));
      serviceBinder.AddMethod(__Method_UpdateParams, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cosmos.Staking.V1Beta1.MsgUpdateParams, global::Cosmos.Staking.V1Beta1.MsgUpdateParamsResponse>(serviceImpl.UpdateParams));
    }

  }
}
#endregion
