// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: cosmos/base/reflection/v2alpha1/reflection.proto
// </auto-generated>
// Original file comments:
// Since: cosmos-sdk 0.43
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Cosmos.Base.Reflection.V2Alpha1 {
  /// <summary>
  /// ReflectionService defines a service for application reflection.
  /// </summary>
  public static partial class ReflectionService
  {
    static readonly string __ServiceName = "cosmos.base.reflection.v2alpha1.ReflectionService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Base.Reflection.V2Alpha1.GetAuthnDescriptorRequest> __Marshaller_cosmos_base_reflection_v2alpha1_GetAuthnDescriptorRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Base.Reflection.V2Alpha1.GetAuthnDescriptorRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Base.Reflection.V2Alpha1.GetAuthnDescriptorResponse> __Marshaller_cosmos_base_reflection_v2alpha1_GetAuthnDescriptorResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Base.Reflection.V2Alpha1.GetAuthnDescriptorResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Base.Reflection.V2Alpha1.GetChainDescriptorRequest> __Marshaller_cosmos_base_reflection_v2alpha1_GetChainDescriptorRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Base.Reflection.V2Alpha1.GetChainDescriptorRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Base.Reflection.V2Alpha1.GetChainDescriptorResponse> __Marshaller_cosmos_base_reflection_v2alpha1_GetChainDescriptorResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Base.Reflection.V2Alpha1.GetChainDescriptorResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Base.Reflection.V2Alpha1.GetCodecDescriptorRequest> __Marshaller_cosmos_base_reflection_v2alpha1_GetCodecDescriptorRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Base.Reflection.V2Alpha1.GetCodecDescriptorRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Base.Reflection.V2Alpha1.GetCodecDescriptorResponse> __Marshaller_cosmos_base_reflection_v2alpha1_GetCodecDescriptorResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Base.Reflection.V2Alpha1.GetCodecDescriptorResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Base.Reflection.V2Alpha1.GetConfigurationDescriptorRequest> __Marshaller_cosmos_base_reflection_v2alpha1_GetConfigurationDescriptorRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Base.Reflection.V2Alpha1.GetConfigurationDescriptorRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Base.Reflection.V2Alpha1.GetConfigurationDescriptorResponse> __Marshaller_cosmos_base_reflection_v2alpha1_GetConfigurationDescriptorResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Base.Reflection.V2Alpha1.GetConfigurationDescriptorResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Base.Reflection.V2Alpha1.GetQueryServicesDescriptorRequest> __Marshaller_cosmos_base_reflection_v2alpha1_GetQueryServicesDescriptorRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Base.Reflection.V2Alpha1.GetQueryServicesDescriptorRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Base.Reflection.V2Alpha1.GetQueryServicesDescriptorResponse> __Marshaller_cosmos_base_reflection_v2alpha1_GetQueryServicesDescriptorResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Base.Reflection.V2Alpha1.GetQueryServicesDescriptorResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Base.Reflection.V2Alpha1.GetTxDescriptorRequest> __Marshaller_cosmos_base_reflection_v2alpha1_GetTxDescriptorRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Base.Reflection.V2Alpha1.GetTxDescriptorRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Base.Reflection.V2Alpha1.GetTxDescriptorResponse> __Marshaller_cosmos_base_reflection_v2alpha1_GetTxDescriptorResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Base.Reflection.V2Alpha1.GetTxDescriptorResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Base.Reflection.V2Alpha1.GetAuthnDescriptorRequest, global::Cosmos.Base.Reflection.V2Alpha1.GetAuthnDescriptorResponse> __Method_GetAuthnDescriptor = new grpc::Method<global::Cosmos.Base.Reflection.V2Alpha1.GetAuthnDescriptorRequest, global::Cosmos.Base.Reflection.V2Alpha1.GetAuthnDescriptorResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAuthnDescriptor",
        __Marshaller_cosmos_base_reflection_v2alpha1_GetAuthnDescriptorRequest,
        __Marshaller_cosmos_base_reflection_v2alpha1_GetAuthnDescriptorResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Base.Reflection.V2Alpha1.GetChainDescriptorRequest, global::Cosmos.Base.Reflection.V2Alpha1.GetChainDescriptorResponse> __Method_GetChainDescriptor = new grpc::Method<global::Cosmos.Base.Reflection.V2Alpha1.GetChainDescriptorRequest, global::Cosmos.Base.Reflection.V2Alpha1.GetChainDescriptorResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetChainDescriptor",
        __Marshaller_cosmos_base_reflection_v2alpha1_GetChainDescriptorRequest,
        __Marshaller_cosmos_base_reflection_v2alpha1_GetChainDescriptorResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Base.Reflection.V2Alpha1.GetCodecDescriptorRequest, global::Cosmos.Base.Reflection.V2Alpha1.GetCodecDescriptorResponse> __Method_GetCodecDescriptor = new grpc::Method<global::Cosmos.Base.Reflection.V2Alpha1.GetCodecDescriptorRequest, global::Cosmos.Base.Reflection.V2Alpha1.GetCodecDescriptorResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCodecDescriptor",
        __Marshaller_cosmos_base_reflection_v2alpha1_GetCodecDescriptorRequest,
        __Marshaller_cosmos_base_reflection_v2alpha1_GetCodecDescriptorResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Base.Reflection.V2Alpha1.GetConfigurationDescriptorRequest, global::Cosmos.Base.Reflection.V2Alpha1.GetConfigurationDescriptorResponse> __Method_GetConfigurationDescriptor = new grpc::Method<global::Cosmos.Base.Reflection.V2Alpha1.GetConfigurationDescriptorRequest, global::Cosmos.Base.Reflection.V2Alpha1.GetConfigurationDescriptorResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetConfigurationDescriptor",
        __Marshaller_cosmos_base_reflection_v2alpha1_GetConfigurationDescriptorRequest,
        __Marshaller_cosmos_base_reflection_v2alpha1_GetConfigurationDescriptorResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Base.Reflection.V2Alpha1.GetQueryServicesDescriptorRequest, global::Cosmos.Base.Reflection.V2Alpha1.GetQueryServicesDescriptorResponse> __Method_GetQueryServicesDescriptor = new grpc::Method<global::Cosmos.Base.Reflection.V2Alpha1.GetQueryServicesDescriptorRequest, global::Cosmos.Base.Reflection.V2Alpha1.GetQueryServicesDescriptorResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetQueryServicesDescriptor",
        __Marshaller_cosmos_base_reflection_v2alpha1_GetQueryServicesDescriptorRequest,
        __Marshaller_cosmos_base_reflection_v2alpha1_GetQueryServicesDescriptorResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Base.Reflection.V2Alpha1.GetTxDescriptorRequest, global::Cosmos.Base.Reflection.V2Alpha1.GetTxDescriptorResponse> __Method_GetTxDescriptor = new grpc::Method<global::Cosmos.Base.Reflection.V2Alpha1.GetTxDescriptorRequest, global::Cosmos.Base.Reflection.V2Alpha1.GetTxDescriptorResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetTxDescriptor",
        __Marshaller_cosmos_base_reflection_v2alpha1_GetTxDescriptorRequest,
        __Marshaller_cosmos_base_reflection_v2alpha1_GetTxDescriptorResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Cosmos.Base.Reflection.V2Alpha1.ReflectionReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of ReflectionService</summary>
    [grpc::BindServiceMethod(typeof(ReflectionService), "BindService")]
    public abstract partial class ReflectionServiceBase
    {
      /// <summary>
      /// GetAuthnDescriptor returns information on how to authenticate transactions in the application
      /// NOTE: this RPC is still experimental and might be subject to breaking changes or removal in
      /// future releases of the cosmos-sdk.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cosmos.Base.Reflection.V2Alpha1.GetAuthnDescriptorResponse> GetAuthnDescriptor(global::Cosmos.Base.Reflection.V2Alpha1.GetAuthnDescriptorRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// GetChainDescriptor returns the description of the chain
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cosmos.Base.Reflection.V2Alpha1.GetChainDescriptorResponse> GetChainDescriptor(global::Cosmos.Base.Reflection.V2Alpha1.GetChainDescriptorRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// GetCodecDescriptor returns the descriptor of the codec of the application
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cosmos.Base.Reflection.V2Alpha1.GetCodecDescriptorResponse> GetCodecDescriptor(global::Cosmos.Base.Reflection.V2Alpha1.GetCodecDescriptorRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// GetConfigurationDescriptor returns the descriptor for the sdk.Config of the application
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cosmos.Base.Reflection.V2Alpha1.GetConfigurationDescriptorResponse> GetConfigurationDescriptor(global::Cosmos.Base.Reflection.V2Alpha1.GetConfigurationDescriptorRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// GetQueryServicesDescriptor returns the available gRPC queryable services of the application
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cosmos.Base.Reflection.V2Alpha1.GetQueryServicesDescriptorResponse> GetQueryServicesDescriptor(global::Cosmos.Base.Reflection.V2Alpha1.GetQueryServicesDescriptorRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// GetTxDescriptor returns information on the used transaction object and available msgs that can be used
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cosmos.Base.Reflection.V2Alpha1.GetTxDescriptorResponse> GetTxDescriptor(global::Cosmos.Base.Reflection.V2Alpha1.GetTxDescriptorRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for ReflectionService</summary>
    public partial class ReflectionServiceClient : grpc::ClientBase<ReflectionServiceClient>
    {
      /// <summary>Creates a new client for ReflectionService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ReflectionServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for ReflectionService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ReflectionServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ReflectionServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ReflectionServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// GetAuthnDescriptor returns information on how to authenticate transactions in the application
      /// NOTE: this RPC is still experimental and might be subject to breaking changes or removal in
      /// future releases of the cosmos-sdk.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Base.Reflection.V2Alpha1.GetAuthnDescriptorResponse GetAuthnDescriptor(global::Cosmos.Base.Reflection.V2Alpha1.GetAuthnDescriptorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAuthnDescriptor(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// GetAuthnDescriptor returns information on how to authenticate transactions in the application
      /// NOTE: this RPC is still experimental and might be subject to breaking changes or removal in
      /// future releases of the cosmos-sdk.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Base.Reflection.V2Alpha1.GetAuthnDescriptorResponse GetAuthnDescriptor(global::Cosmos.Base.Reflection.V2Alpha1.GetAuthnDescriptorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAuthnDescriptor, null, options, request);
      }
      /// <summary>
      /// GetAuthnDescriptor returns information on how to authenticate transactions in the application
      /// NOTE: this RPC is still experimental and might be subject to breaking changes or removal in
      /// future releases of the cosmos-sdk.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Base.Reflection.V2Alpha1.GetAuthnDescriptorResponse> GetAuthnDescriptorAsync(global::Cosmos.Base.Reflection.V2Alpha1.GetAuthnDescriptorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAuthnDescriptorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// GetAuthnDescriptor returns information on how to authenticate transactions in the application
      /// NOTE: this RPC is still experimental and might be subject to breaking changes or removal in
      /// future releases of the cosmos-sdk.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Base.Reflection.V2Alpha1.GetAuthnDescriptorResponse> GetAuthnDescriptorAsync(global::Cosmos.Base.Reflection.V2Alpha1.GetAuthnDescriptorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAuthnDescriptor, null, options, request);
      }
      /// <summary>
      /// GetChainDescriptor returns the description of the chain
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Base.Reflection.V2Alpha1.GetChainDescriptorResponse GetChainDescriptor(global::Cosmos.Base.Reflection.V2Alpha1.GetChainDescriptorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetChainDescriptor(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// GetChainDescriptor returns the description of the chain
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Base.Reflection.V2Alpha1.GetChainDescriptorResponse GetChainDescriptor(global::Cosmos.Base.Reflection.V2Alpha1.GetChainDescriptorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetChainDescriptor, null, options, request);
      }
      /// <summary>
      /// GetChainDescriptor returns the description of the chain
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Base.Reflection.V2Alpha1.GetChainDescriptorResponse> GetChainDescriptorAsync(global::Cosmos.Base.Reflection.V2Alpha1.GetChainDescriptorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetChainDescriptorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// GetChainDescriptor returns the description of the chain
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Base.Reflection.V2Alpha1.GetChainDescriptorResponse> GetChainDescriptorAsync(global::Cosmos.Base.Reflection.V2Alpha1.GetChainDescriptorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetChainDescriptor, null, options, request);
      }
      /// <summary>
      /// GetCodecDescriptor returns the descriptor of the codec of the application
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Base.Reflection.V2Alpha1.GetCodecDescriptorResponse GetCodecDescriptor(global::Cosmos.Base.Reflection.V2Alpha1.GetCodecDescriptorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCodecDescriptor(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// GetCodecDescriptor returns the descriptor of the codec of the application
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Base.Reflection.V2Alpha1.GetCodecDescriptorResponse GetCodecDescriptor(global::Cosmos.Base.Reflection.V2Alpha1.GetCodecDescriptorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCodecDescriptor, null, options, request);
      }
      /// <summary>
      /// GetCodecDescriptor returns the descriptor of the codec of the application
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Base.Reflection.V2Alpha1.GetCodecDescriptorResponse> GetCodecDescriptorAsync(global::Cosmos.Base.Reflection.V2Alpha1.GetCodecDescriptorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCodecDescriptorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// GetCodecDescriptor returns the descriptor of the codec of the application
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Base.Reflection.V2Alpha1.GetCodecDescriptorResponse> GetCodecDescriptorAsync(global::Cosmos.Base.Reflection.V2Alpha1.GetCodecDescriptorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCodecDescriptor, null, options, request);
      }
      /// <summary>
      /// GetConfigurationDescriptor returns the descriptor for the sdk.Config of the application
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Base.Reflection.V2Alpha1.GetConfigurationDescriptorResponse GetConfigurationDescriptor(global::Cosmos.Base.Reflection.V2Alpha1.GetConfigurationDescriptorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetConfigurationDescriptor(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// GetConfigurationDescriptor returns the descriptor for the sdk.Config of the application
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Base.Reflection.V2Alpha1.GetConfigurationDescriptorResponse GetConfigurationDescriptor(global::Cosmos.Base.Reflection.V2Alpha1.GetConfigurationDescriptorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetConfigurationDescriptor, null, options, request);
      }
      /// <summary>
      /// GetConfigurationDescriptor returns the descriptor for the sdk.Config of the application
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Base.Reflection.V2Alpha1.GetConfigurationDescriptorResponse> GetConfigurationDescriptorAsync(global::Cosmos.Base.Reflection.V2Alpha1.GetConfigurationDescriptorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetConfigurationDescriptorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// GetConfigurationDescriptor returns the descriptor for the sdk.Config of the application
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Base.Reflection.V2Alpha1.GetConfigurationDescriptorResponse> GetConfigurationDescriptorAsync(global::Cosmos.Base.Reflection.V2Alpha1.GetConfigurationDescriptorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetConfigurationDescriptor, null, options, request);
      }
      /// <summary>
      /// GetQueryServicesDescriptor returns the available gRPC queryable services of the application
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Base.Reflection.V2Alpha1.GetQueryServicesDescriptorResponse GetQueryServicesDescriptor(global::Cosmos.Base.Reflection.V2Alpha1.GetQueryServicesDescriptorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetQueryServicesDescriptor(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// GetQueryServicesDescriptor returns the available gRPC queryable services of the application
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Base.Reflection.V2Alpha1.GetQueryServicesDescriptorResponse GetQueryServicesDescriptor(global::Cosmos.Base.Reflection.V2Alpha1.GetQueryServicesDescriptorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetQueryServicesDescriptor, null, options, request);
      }
      /// <summary>
      /// GetQueryServicesDescriptor returns the available gRPC queryable services of the application
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Base.Reflection.V2Alpha1.GetQueryServicesDescriptorResponse> GetQueryServicesDescriptorAsync(global::Cosmos.Base.Reflection.V2Alpha1.GetQueryServicesDescriptorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetQueryServicesDescriptorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// GetQueryServicesDescriptor returns the available gRPC queryable services of the application
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Base.Reflection.V2Alpha1.GetQueryServicesDescriptorResponse> GetQueryServicesDescriptorAsync(global::Cosmos.Base.Reflection.V2Alpha1.GetQueryServicesDescriptorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetQueryServicesDescriptor, null, options, request);
      }
      /// <summary>
      /// GetTxDescriptor returns information on the used transaction object and available msgs that can be used
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Base.Reflection.V2Alpha1.GetTxDescriptorResponse GetTxDescriptor(global::Cosmos.Base.Reflection.V2Alpha1.GetTxDescriptorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTxDescriptor(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// GetTxDescriptor returns information on the used transaction object and available msgs that can be used
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Base.Reflection.V2Alpha1.GetTxDescriptorResponse GetTxDescriptor(global::Cosmos.Base.Reflection.V2Alpha1.GetTxDescriptorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetTxDescriptor, null, options, request);
      }
      /// <summary>
      /// GetTxDescriptor returns information on the used transaction object and available msgs that can be used
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Base.Reflection.V2Alpha1.GetTxDescriptorResponse> GetTxDescriptorAsync(global::Cosmos.Base.Reflection.V2Alpha1.GetTxDescriptorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTxDescriptorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// GetTxDescriptor returns information on the used transaction object and available msgs that can be used
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Base.Reflection.V2Alpha1.GetTxDescriptorResponse> GetTxDescriptorAsync(global::Cosmos.Base.Reflection.V2Alpha1.GetTxDescriptorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetTxDescriptor, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override ReflectionServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ReflectionServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(ReflectionServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetAuthnDescriptor, serviceImpl.GetAuthnDescriptor)
          .AddMethod(__Method_GetChainDescriptor, serviceImpl.GetChainDescriptor)
          .AddMethod(__Method_GetCodecDescriptor, serviceImpl.GetCodecDescriptor)
          .AddMethod(__Method_GetConfigurationDescriptor, serviceImpl.GetConfigurationDescriptor)
          .AddMethod(__Method_GetQueryServicesDescriptor, serviceImpl.GetQueryServicesDescriptor)
          .AddMethod(__Method_GetTxDescriptor, serviceImpl.GetTxDescriptor).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ReflectionServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetAuthnDescriptor, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cosmos.Base.Reflection.V2Alpha1.GetAuthnDescriptorRequest, global::Cosmos.Base.Reflection.V2Alpha1.GetAuthnDescriptorResponse>(serviceImpl.GetAuthnDescriptor));
      serviceBinder.AddMethod(__Method_GetChainDescriptor, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cosmos.Base.Reflection.V2Alpha1.GetChainDescriptorRequest, global::Cosmos.Base.Reflection.V2Alpha1.GetChainDescriptorResponse>(serviceImpl.GetChainDescriptor));
      serviceBinder.AddMethod(__Method_GetCodecDescriptor, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cosmos.Base.Reflection.V2Alpha1.GetCodecDescriptorRequest, global::Cosmos.Base.Reflection.V2Alpha1.GetCodecDescriptorResponse>(serviceImpl.GetCodecDescriptor));
      serviceBinder.AddMethod(__Method_GetConfigurationDescriptor, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cosmos.Base.Reflection.V2Alpha1.GetConfigurationDescriptorRequest, global::Cosmos.Base.Reflection.V2Alpha1.GetConfigurationDescriptorResponse>(serviceImpl.GetConfigurationDescriptor));
      serviceBinder.AddMethod(__Method_GetQueryServicesDescriptor, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cosmos.Base.Reflection.V2Alpha1.GetQueryServicesDescriptorRequest, global::Cosmos.Base.Reflection.V2Alpha1.GetQueryServicesDescriptorResponse>(serviceImpl.GetQueryServicesDescriptor));
      serviceBinder.AddMethod(__Method_GetTxDescriptor, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cosmos.Base.Reflection.V2Alpha1.GetTxDescriptorRequest, global::Cosmos.Base.Reflection.V2Alpha1.GetTxDescriptorResponse>(serviceImpl.GetTxDescriptor));
    }

  }
}
#endregion
