// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: exchange/event_provider_api.proto

#include "exchange/event_provider_api.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace event_provider_api {
template <typename>
PROTOBUF_CONSTEXPR GetLatestHeightRequest::GetLatestHeightRequest(
    ::_pbi::ConstantInitialized) {}
struct GetLatestHeightRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLatestHeightRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLatestHeightRequestDefaultTypeInternal() {}
  union {
    GetLatestHeightRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLatestHeightRequestDefaultTypeInternal _GetLatestHeightRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR GetLatestHeightResponse::GetLatestHeightResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.s_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.errmsg_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.data_)*/nullptr} {}
struct GetLatestHeightResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLatestHeightResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLatestHeightResponseDefaultTypeInternal() {}
  union {
    GetLatestHeightResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLatestHeightResponseDefaultTypeInternal _GetLatestHeightResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR LatestBlockHeight::LatestBlockHeight(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.height_)*/ ::uint64_t{0u}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LatestBlockHeightDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LatestBlockHeightDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LatestBlockHeightDefaultTypeInternal() {}
  union {
    LatestBlockHeight _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LatestBlockHeightDefaultTypeInternal _LatestBlockHeight_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR GetBlockEventsRPCRequest::GetBlockEventsRPCRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.backend_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.height_)*/ 0

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetBlockEventsRPCRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetBlockEventsRPCRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetBlockEventsRPCRequestDefaultTypeInternal() {}
  union {
    GetBlockEventsRPCRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetBlockEventsRPCRequestDefaultTypeInternal _GetBlockEventsRPCRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR GetBlockEventsRPCResponse::GetBlockEventsRPCResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.s_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.errmsg_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.data_)*/nullptr} {}
struct GetBlockEventsRPCResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetBlockEventsRPCResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetBlockEventsRPCResponseDefaultTypeInternal() {}
  union {
    GetBlockEventsRPCResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetBlockEventsRPCResponseDefaultTypeInternal _GetBlockEventsRPCResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR BlockEventsRPC::BlockEventsRPC(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.types_)*/{}
  , /*decltype(_impl_.events_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BlockEventsRPCDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlockEventsRPCDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlockEventsRPCDefaultTypeInternal() {}
  union {
    BlockEventsRPC _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlockEventsRPCDefaultTypeInternal _BlockEventsRPC_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR GetCustomEventsRPCRequest::GetCustomEventsRPCRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.backend_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.events_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.height_)*/ 0

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetCustomEventsRPCRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetCustomEventsRPCRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetCustomEventsRPCRequestDefaultTypeInternal() {}
  union {
    GetCustomEventsRPCRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetCustomEventsRPCRequestDefaultTypeInternal _GetCustomEventsRPCRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR GetCustomEventsRPCResponse::GetCustomEventsRPCResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.s_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.errmsg_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.data_)*/nullptr} {}
struct GetCustomEventsRPCResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetCustomEventsRPCResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetCustomEventsRPCResponseDefaultTypeInternal() {}
  union {
    GetCustomEventsRPCResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetCustomEventsRPCResponseDefaultTypeInternal _GetCustomEventsRPCResponse_default_instance_;
}  // namespace event_provider_api
static ::_pb::Metadata file_level_metadata_exchange_2fevent_5fprovider_5fapi_2eproto[8];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_exchange_2fevent_5fprovider_5fapi_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_exchange_2fevent_5fprovider_5fapi_2eproto = nullptr;
const ::uint32_t TableStruct_exchange_2fevent_5fprovider_5fapi_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::event_provider_api::GetLatestHeightRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::event_provider_api::GetLatestHeightResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::event_provider_api::GetLatestHeightResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::event_provider_api::GetLatestHeightResponse, _impl_.s_),
    PROTOBUF_FIELD_OFFSET(::event_provider_api::GetLatestHeightResponse, _impl_.errmsg_),
    PROTOBUF_FIELD_OFFSET(::event_provider_api::GetLatestHeightResponse, _impl_.data_),
    ~0u,
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::event_provider_api::LatestBlockHeight, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::event_provider_api::LatestBlockHeight, _impl_.height_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::event_provider_api::GetBlockEventsRPCRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::event_provider_api::GetBlockEventsRPCRequest, _impl_.backend_),
    PROTOBUF_FIELD_OFFSET(::event_provider_api::GetBlockEventsRPCRequest, _impl_.height_),
    PROTOBUF_FIELD_OFFSET(::event_provider_api::GetBlockEventsRPCResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::event_provider_api::GetBlockEventsRPCResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::event_provider_api::GetBlockEventsRPCResponse, _impl_.s_),
    PROTOBUF_FIELD_OFFSET(::event_provider_api::GetBlockEventsRPCResponse, _impl_.errmsg_),
    PROTOBUF_FIELD_OFFSET(::event_provider_api::GetBlockEventsRPCResponse, _impl_.data_),
    ~0u,
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::event_provider_api::BlockEventsRPC, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::event_provider_api::BlockEventsRPC, _impl_.types_),
    PROTOBUF_FIELD_OFFSET(::event_provider_api::BlockEventsRPC, _impl_.events_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::event_provider_api::GetCustomEventsRPCRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::event_provider_api::GetCustomEventsRPCRequest, _impl_.backend_),
    PROTOBUF_FIELD_OFFSET(::event_provider_api::GetCustomEventsRPCRequest, _impl_.height_),
    PROTOBUF_FIELD_OFFSET(::event_provider_api::GetCustomEventsRPCRequest, _impl_.events_),
    PROTOBUF_FIELD_OFFSET(::event_provider_api::GetCustomEventsRPCResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::event_provider_api::GetCustomEventsRPCResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::event_provider_api::GetCustomEventsRPCResponse, _impl_.s_),
    PROTOBUF_FIELD_OFFSET(::event_provider_api::GetCustomEventsRPCResponse, _impl_.errmsg_),
    PROTOBUF_FIELD_OFFSET(::event_provider_api::GetCustomEventsRPCResponse, _impl_.data_),
    ~0u,
    ~0u,
    0,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::event_provider_api::GetLatestHeightRequest)},
        { 8, 19, -1, sizeof(::event_provider_api::GetLatestHeightResponse)},
        { 22, -1, -1, sizeof(::event_provider_api::LatestBlockHeight)},
        { 31, -1, -1, sizeof(::event_provider_api::GetBlockEventsRPCRequest)},
        { 41, 52, -1, sizeof(::event_provider_api::GetBlockEventsRPCResponse)},
        { 55, -1, -1, sizeof(::event_provider_api::BlockEventsRPC)},
        { 65, -1, -1, sizeof(::event_provider_api::GetCustomEventsRPCRequest)},
        { 76, 87, -1, sizeof(::event_provider_api::GetCustomEventsRPCResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::event_provider_api::_GetLatestHeightRequest_default_instance_._instance,
    &::event_provider_api::_GetLatestHeightResponse_default_instance_._instance,
    &::event_provider_api::_LatestBlockHeight_default_instance_._instance,
    &::event_provider_api::_GetBlockEventsRPCRequest_default_instance_._instance,
    &::event_provider_api::_GetBlockEventsRPCResponse_default_instance_._instance,
    &::event_provider_api::_BlockEventsRPC_default_instance_._instance,
    &::event_provider_api::_GetCustomEventsRPCRequest_default_instance_._instance,
    &::event_provider_api::_GetCustomEventsRPCResponse_default_instance_._instance,
};
const char descriptor_table_protodef_exchange_2fevent_5fprovider_5fapi_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n!exchange/event_provider_api.proto\022\022eve"
    "nt_provider_api\"\030\n\026GetLatestHeightReques"
    "t\"z\n\027GetLatestHeightResponse\022\014\n\001s\030\001 \001(\tR"
    "\001s\022\026\n\006errmsg\030\002 \001(\tR\006errmsg\0229\n\004data\030\003 \001(\013"
    "2%.event_provider_api.LatestBlockHeightR"
    "\004data\"+\n\021LatestBlockHeight\022\026\n\006height\030\001 \001"
    "(\004R\006height\"L\n\030GetBlockEventsRPCRequest\022\030"
    "\n\007backend\030\001 \001(\tR\007backend\022\026\n\006height\030\002 \001(\021"
    "R\006height\"y\n\031GetBlockEventsRPCResponse\022\014\n"
    "\001s\030\001 \001(\tR\001s\022\026\n\006errmsg\030\002 \001(\tR\006errmsg\0226\n\004d"
    "ata\030\003 \001(\0132\".event_provider_api.BlockEven"
    "tsRPCR\004data\">\n\016BlockEventsRPC\022\024\n\005types\030\001"
    " \003(\tR\005types\022\026\n\006events\030\002 \003(\014R\006events\"e\n\031G"
    "etCustomEventsRPCRequest\022\030\n\007backend\030\001 \001("
    "\tR\007backend\022\026\n\006height\030\002 \001(\021R\006height\022\026\n\006ev"
    "ents\030\003 \001(\tR\006events\"z\n\032GetCustomEventsRPC"
    "Response\022\014\n\001s\030\001 \001(\tR\001s\022\026\n\006errmsg\030\002 \001(\tR\006"
    "errmsg\0226\n\004data\030\003 \001(\0132\".event_provider_ap"
    "i.BlockEventsRPCR\004data2\345\002\n\020EventProvider"
    "API\022j\n\017GetLatestHeight\022*.event_provider_"
    "api.GetLatestHeightRequest\032+.event_provi"
    "der_api.GetLatestHeightResponse\022p\n\021GetBl"
    "ockEventsRPC\022,.event_provider_api.GetBlo"
    "ckEventsRPCRequest\032-.event_provider_api."
    "GetBlockEventsRPCResponse\022s\n\022GetCustomEv"
    "entsRPC\022-.event_provider_api.GetCustomEv"
    "entsRPCRequest\032..event_provider_api.GetC"
    "ustomEventsRPCResponseB\246\001\n\026com.event_pro"
    "vider_apiB\025EventProviderApiProtoP\001Z\025/eve"
    "nt_provider_apipb\242\002\003EXX\252\002\020EventProviderA"
    "pi\312\002\020EventProviderApi\342\002\034EventProviderApi"
    "\\GPBMetadata\352\002\020EventProviderApib\006proto3"
};
static ::absl::once_flag descriptor_table_exchange_2fevent_5fprovider_5fapi_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_exchange_2fevent_5fprovider_5fapi_2eproto = {
    false,
    false,
    1279,
    descriptor_table_protodef_exchange_2fevent_5fprovider_5fapi_2eproto,
    "exchange/event_provider_api.proto",
    &descriptor_table_exchange_2fevent_5fprovider_5fapi_2eproto_once,
    nullptr,
    0,
    8,
    schemas,
    file_default_instances,
    TableStruct_exchange_2fevent_5fprovider_5fapi_2eproto::offsets,
    file_level_metadata_exchange_2fevent_5fprovider_5fapi_2eproto,
    file_level_enum_descriptors_exchange_2fevent_5fprovider_5fapi_2eproto,
    file_level_service_descriptors_exchange_2fevent_5fprovider_5fapi_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_exchange_2fevent_5fprovider_5fapi_2eproto_getter() {
  return &descriptor_table_exchange_2fevent_5fprovider_5fapi_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_exchange_2fevent_5fprovider_5fapi_2eproto(&descriptor_table_exchange_2fevent_5fprovider_5fapi_2eproto);
namespace event_provider_api {
// ===================================================================

class GetLatestHeightRequest::_Internal {
 public:
};

GetLatestHeightRequest::GetLatestHeightRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:event_provider_api.GetLatestHeightRequest)
}
GetLatestHeightRequest::GetLatestHeightRequest(const GetLatestHeightRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetLatestHeightRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:event_provider_api.GetLatestHeightRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetLatestHeightRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetLatestHeightRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetLatestHeightRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_exchange_2fevent_5fprovider_5fapi_2eproto_getter, &descriptor_table_exchange_2fevent_5fprovider_5fapi_2eproto_once,
      file_level_metadata_exchange_2fevent_5fprovider_5fapi_2eproto[0]);
}
// ===================================================================

class GetLatestHeightResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GetLatestHeightResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GetLatestHeightResponse, _impl_._has_bits_);
  static const ::event_provider_api::LatestBlockHeight& data(const GetLatestHeightResponse* msg);
  static void set_has_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::event_provider_api::LatestBlockHeight&
GetLatestHeightResponse::_Internal::data(const GetLatestHeightResponse* msg) {
  return *msg->_impl_.data_;
}
GetLatestHeightResponse::GetLatestHeightResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_provider_api.GetLatestHeightResponse)
}
GetLatestHeightResponse::GetLatestHeightResponse(const GetLatestHeightResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetLatestHeightResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.s_) {}

    , decltype(_impl_.errmsg_) {}

    , decltype(_impl_.data_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.s_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.s_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_s().empty()) {
    _this->_impl_.s_.Set(from._internal_s(), _this->GetArenaForAllocation());
  }
  _impl_.errmsg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.errmsg_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_errmsg().empty()) {
    _this->_impl_.errmsg_.Set(from._internal_errmsg(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.data_ = new ::event_provider_api::LatestBlockHeight(*from._impl_.data_);
  }
  // @@protoc_insertion_point(copy_constructor:event_provider_api.GetLatestHeightResponse)
}

inline void GetLatestHeightResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.s_) {}

    , decltype(_impl_.errmsg_) {}

    , decltype(_impl_.data_){nullptr}
  };
  _impl_.s_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.s_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.errmsg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.errmsg_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetLatestHeightResponse::~GetLatestHeightResponse() {
  // @@protoc_insertion_point(destructor:event_provider_api.GetLatestHeightResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetLatestHeightResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.s_.Destroy();
  _impl_.errmsg_.Destroy();
  if (this != internal_default_instance()) delete _impl_.data_;
}

void GetLatestHeightResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetLatestHeightResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:event_provider_api.GetLatestHeightResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.s_.ClearToEmpty();
  _impl_.errmsg_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.data_ != nullptr);
    _impl_.data_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLatestHeightResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string s = 1 [json_name = "s"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_s();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "event_provider_api.GetLatestHeightResponse.s"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string errmsg = 2 [json_name = "errmsg"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_errmsg();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "event_provider_api.GetLatestHeightResponse.errmsg"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .event_provider_api.LatestBlockHeight data = 3 [json_name = "data"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* GetLatestHeightResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_provider_api.GetLatestHeightResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string s = 1 [json_name = "s"];
  if (!this->_internal_s().empty()) {
    const std::string& _s = this->_internal_s();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "event_provider_api.GetLatestHeightResponse.s");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string errmsg = 2 [json_name = "errmsg"];
  if (!this->_internal_errmsg().empty()) {
    const std::string& _s = this->_internal_errmsg();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "event_provider_api.GetLatestHeightResponse.errmsg");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .event_provider_api.LatestBlockHeight data = 3 [json_name = "data"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_provider_api.GetLatestHeightResponse)
  return target;
}

::size_t GetLatestHeightResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_provider_api.GetLatestHeightResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string s = 1 [json_name = "s"];
  if (!this->_internal_s().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_s());
  }

  // string errmsg = 2 [json_name = "errmsg"];
  if (!this->_internal_errmsg().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_errmsg());
  }

  // .event_provider_api.LatestBlockHeight data = 3 [json_name = "data"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.data_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetLatestHeightResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetLatestHeightResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetLatestHeightResponse::GetClassData() const { return &_class_data_; }


void GetLatestHeightResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetLatestHeightResponse*>(&to_msg);
  auto& from = static_cast<const GetLatestHeightResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:event_provider_api.GetLatestHeightResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_s().empty()) {
    _this->_internal_set_s(from._internal_s());
  }
  if (!from._internal_errmsg().empty()) {
    _this->_internal_set_errmsg(from._internal_errmsg());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_data()->::event_provider_api::LatestBlockHeight::MergeFrom(
        from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetLatestHeightResponse::CopyFrom(const GetLatestHeightResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_provider_api.GetLatestHeightResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLatestHeightResponse::IsInitialized() const {
  return true;
}

void GetLatestHeightResponse::InternalSwap(GetLatestHeightResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.s_, lhs_arena,
                                       &other->_impl_.s_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.errmsg_, lhs_arena,
                                       &other->_impl_.errmsg_, rhs_arena);
  swap(_impl_.data_, other->_impl_.data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLatestHeightResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_exchange_2fevent_5fprovider_5fapi_2eproto_getter, &descriptor_table_exchange_2fevent_5fprovider_5fapi_2eproto_once,
      file_level_metadata_exchange_2fevent_5fprovider_5fapi_2eproto[1]);
}
// ===================================================================

class LatestBlockHeight::_Internal {
 public:
};

LatestBlockHeight::LatestBlockHeight(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_provider_api.LatestBlockHeight)
}
LatestBlockHeight::LatestBlockHeight(const LatestBlockHeight& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:event_provider_api.LatestBlockHeight)
}

inline void LatestBlockHeight::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.height_) { ::uint64_t{0u} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

LatestBlockHeight::~LatestBlockHeight() {
  // @@protoc_insertion_point(destructor:event_provider_api.LatestBlockHeight)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LatestBlockHeight::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}

void LatestBlockHeight::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LatestBlockHeight::Clear() {
// @@protoc_insertion_point(message_clear_start:event_provider_api.LatestBlockHeight)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.height_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LatestBlockHeight::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 height = 1 [json_name = "height"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* LatestBlockHeight::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_provider_api.LatestBlockHeight)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 height = 1 [json_name = "height"];
  if (this->_internal_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_height(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_provider_api.LatestBlockHeight)
  return target;
}

::size_t LatestBlockHeight::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_provider_api.LatestBlockHeight)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 height = 1 [json_name = "height"];
  if (this->_internal_height() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_height());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LatestBlockHeight::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LatestBlockHeight::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LatestBlockHeight::GetClassData() const { return &_class_data_; }


void LatestBlockHeight::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LatestBlockHeight*>(&to_msg);
  auto& from = static_cast<const LatestBlockHeight&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:event_provider_api.LatestBlockHeight)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_height() != 0) {
    _this->_internal_set_height(from._internal_height());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LatestBlockHeight::CopyFrom(const LatestBlockHeight& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_provider_api.LatestBlockHeight)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LatestBlockHeight::IsInitialized() const {
  return true;
}

void LatestBlockHeight::InternalSwap(LatestBlockHeight* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);

  swap(_impl_.height_, other->_impl_.height_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LatestBlockHeight::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_exchange_2fevent_5fprovider_5fapi_2eproto_getter, &descriptor_table_exchange_2fevent_5fprovider_5fapi_2eproto_once,
      file_level_metadata_exchange_2fevent_5fprovider_5fapi_2eproto[2]);
}
// ===================================================================

class GetBlockEventsRPCRequest::_Internal {
 public:
};

GetBlockEventsRPCRequest::GetBlockEventsRPCRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_provider_api.GetBlockEventsRPCRequest)
}
GetBlockEventsRPCRequest::GetBlockEventsRPCRequest(const GetBlockEventsRPCRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetBlockEventsRPCRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.backend_) {}

    , decltype(_impl_.height_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.backend_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.backend_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_backend().empty()) {
    _this->_impl_.backend_.Set(from._internal_backend(), _this->GetArenaForAllocation());
  }
  _this->_impl_.height_ = from._impl_.height_;
  // @@protoc_insertion_point(copy_constructor:event_provider_api.GetBlockEventsRPCRequest)
}

inline void GetBlockEventsRPCRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.backend_) {}

    , decltype(_impl_.height_) { 0 }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.backend_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.backend_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetBlockEventsRPCRequest::~GetBlockEventsRPCRequest() {
  // @@protoc_insertion_point(destructor:event_provider_api.GetBlockEventsRPCRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetBlockEventsRPCRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.backend_.Destroy();
}

void GetBlockEventsRPCRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetBlockEventsRPCRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:event_provider_api.GetBlockEventsRPCRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.backend_.ClearToEmpty();
  _impl_.height_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBlockEventsRPCRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string backend = 1 [json_name = "backend"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_backend();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "event_provider_api.GetBlockEventsRPCRequest.backend"));
        } else {
          goto handle_unusual;
        }
        continue;
      // sint32 height = 2 [json_name = "height"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          _impl_.height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* GetBlockEventsRPCRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_provider_api.GetBlockEventsRPCRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string backend = 1 [json_name = "backend"];
  if (!this->_internal_backend().empty()) {
    const std::string& _s = this->_internal_backend();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "event_provider_api.GetBlockEventsRPCRequest.backend");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // sint32 height = 2 [json_name = "height"];
  if (this->_internal_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
        2, this->_internal_height(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_provider_api.GetBlockEventsRPCRequest)
  return target;
}

::size_t GetBlockEventsRPCRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_provider_api.GetBlockEventsRPCRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string backend = 1 [json_name = "backend"];
  if (!this->_internal_backend().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_backend());
  }

  // sint32 height = 2 [json_name = "height"];
  if (this->_internal_height() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(
        this->_internal_height());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetBlockEventsRPCRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetBlockEventsRPCRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetBlockEventsRPCRequest::GetClassData() const { return &_class_data_; }


void GetBlockEventsRPCRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetBlockEventsRPCRequest*>(&to_msg);
  auto& from = static_cast<const GetBlockEventsRPCRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:event_provider_api.GetBlockEventsRPCRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_backend().empty()) {
    _this->_internal_set_backend(from._internal_backend());
  }
  if (from._internal_height() != 0) {
    _this->_internal_set_height(from._internal_height());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetBlockEventsRPCRequest::CopyFrom(const GetBlockEventsRPCRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_provider_api.GetBlockEventsRPCRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBlockEventsRPCRequest::IsInitialized() const {
  return true;
}

void GetBlockEventsRPCRequest::InternalSwap(GetBlockEventsRPCRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.backend_, lhs_arena,
                                       &other->_impl_.backend_, rhs_arena);

  swap(_impl_.height_, other->_impl_.height_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBlockEventsRPCRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_exchange_2fevent_5fprovider_5fapi_2eproto_getter, &descriptor_table_exchange_2fevent_5fprovider_5fapi_2eproto_once,
      file_level_metadata_exchange_2fevent_5fprovider_5fapi_2eproto[3]);
}
// ===================================================================

class GetBlockEventsRPCResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GetBlockEventsRPCResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GetBlockEventsRPCResponse, _impl_._has_bits_);
  static const ::event_provider_api::BlockEventsRPC& data(const GetBlockEventsRPCResponse* msg);
  static void set_has_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::event_provider_api::BlockEventsRPC&
GetBlockEventsRPCResponse::_Internal::data(const GetBlockEventsRPCResponse* msg) {
  return *msg->_impl_.data_;
}
GetBlockEventsRPCResponse::GetBlockEventsRPCResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_provider_api.GetBlockEventsRPCResponse)
}
GetBlockEventsRPCResponse::GetBlockEventsRPCResponse(const GetBlockEventsRPCResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetBlockEventsRPCResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.s_) {}

    , decltype(_impl_.errmsg_) {}

    , decltype(_impl_.data_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.s_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.s_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_s().empty()) {
    _this->_impl_.s_.Set(from._internal_s(), _this->GetArenaForAllocation());
  }
  _impl_.errmsg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.errmsg_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_errmsg().empty()) {
    _this->_impl_.errmsg_.Set(from._internal_errmsg(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.data_ = new ::event_provider_api::BlockEventsRPC(*from._impl_.data_);
  }
  // @@protoc_insertion_point(copy_constructor:event_provider_api.GetBlockEventsRPCResponse)
}

inline void GetBlockEventsRPCResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.s_) {}

    , decltype(_impl_.errmsg_) {}

    , decltype(_impl_.data_){nullptr}
  };
  _impl_.s_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.s_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.errmsg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.errmsg_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetBlockEventsRPCResponse::~GetBlockEventsRPCResponse() {
  // @@protoc_insertion_point(destructor:event_provider_api.GetBlockEventsRPCResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetBlockEventsRPCResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.s_.Destroy();
  _impl_.errmsg_.Destroy();
  if (this != internal_default_instance()) delete _impl_.data_;
}

void GetBlockEventsRPCResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetBlockEventsRPCResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:event_provider_api.GetBlockEventsRPCResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.s_.ClearToEmpty();
  _impl_.errmsg_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.data_ != nullptr);
    _impl_.data_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBlockEventsRPCResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string s = 1 [json_name = "s"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_s();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "event_provider_api.GetBlockEventsRPCResponse.s"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string errmsg = 2 [json_name = "errmsg"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_errmsg();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "event_provider_api.GetBlockEventsRPCResponse.errmsg"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .event_provider_api.BlockEventsRPC data = 3 [json_name = "data"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* GetBlockEventsRPCResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_provider_api.GetBlockEventsRPCResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string s = 1 [json_name = "s"];
  if (!this->_internal_s().empty()) {
    const std::string& _s = this->_internal_s();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "event_provider_api.GetBlockEventsRPCResponse.s");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string errmsg = 2 [json_name = "errmsg"];
  if (!this->_internal_errmsg().empty()) {
    const std::string& _s = this->_internal_errmsg();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "event_provider_api.GetBlockEventsRPCResponse.errmsg");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .event_provider_api.BlockEventsRPC data = 3 [json_name = "data"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_provider_api.GetBlockEventsRPCResponse)
  return target;
}

::size_t GetBlockEventsRPCResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_provider_api.GetBlockEventsRPCResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string s = 1 [json_name = "s"];
  if (!this->_internal_s().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_s());
  }

  // string errmsg = 2 [json_name = "errmsg"];
  if (!this->_internal_errmsg().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_errmsg());
  }

  // .event_provider_api.BlockEventsRPC data = 3 [json_name = "data"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.data_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetBlockEventsRPCResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetBlockEventsRPCResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetBlockEventsRPCResponse::GetClassData() const { return &_class_data_; }


void GetBlockEventsRPCResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetBlockEventsRPCResponse*>(&to_msg);
  auto& from = static_cast<const GetBlockEventsRPCResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:event_provider_api.GetBlockEventsRPCResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_s().empty()) {
    _this->_internal_set_s(from._internal_s());
  }
  if (!from._internal_errmsg().empty()) {
    _this->_internal_set_errmsg(from._internal_errmsg());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_data()->::event_provider_api::BlockEventsRPC::MergeFrom(
        from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetBlockEventsRPCResponse::CopyFrom(const GetBlockEventsRPCResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_provider_api.GetBlockEventsRPCResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBlockEventsRPCResponse::IsInitialized() const {
  return true;
}

void GetBlockEventsRPCResponse::InternalSwap(GetBlockEventsRPCResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.s_, lhs_arena,
                                       &other->_impl_.s_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.errmsg_, lhs_arena,
                                       &other->_impl_.errmsg_, rhs_arena);
  swap(_impl_.data_, other->_impl_.data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBlockEventsRPCResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_exchange_2fevent_5fprovider_5fapi_2eproto_getter, &descriptor_table_exchange_2fevent_5fprovider_5fapi_2eproto_once,
      file_level_metadata_exchange_2fevent_5fprovider_5fapi_2eproto[4]);
}
// ===================================================================

class BlockEventsRPC::_Internal {
 public:
};

BlockEventsRPC::BlockEventsRPC(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_provider_api.BlockEventsRPC)
}
BlockEventsRPC::BlockEventsRPC(const BlockEventsRPC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BlockEventsRPC* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.types_){from._impl_.types_}
    , decltype(_impl_.events_){from._impl_.events_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:event_provider_api.BlockEventsRPC)
}

inline void BlockEventsRPC::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.types_){arena}
    , decltype(_impl_.events_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

BlockEventsRPC::~BlockEventsRPC() {
  // @@protoc_insertion_point(destructor:event_provider_api.BlockEventsRPC)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BlockEventsRPC::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_types()->~RepeatedPtrField();
  _internal_mutable_events()->~RepeatedPtrField();
}

void BlockEventsRPC::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BlockEventsRPC::Clear() {
// @@protoc_insertion_point(message_clear_start:event_provider_api.BlockEventsRPC)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_types()->Clear();
  _internal_mutable_events()->Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BlockEventsRPC::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string types = 1 [json_name = "types"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_types();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "event_provider_api.BlockEventsRPC.types"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated bytes events = 2 [json_name = "events"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_events();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* BlockEventsRPC::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_provider_api.BlockEventsRPC)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string types = 1 [json_name = "types"];
  for (int i = 0, n = this->_internal_types_size(); i < n; ++i) {
    const auto& s = this->_internal_types(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "event_provider_api.BlockEventsRPC.types");
    target = stream->WriteString(1, s, target);
  }

  // repeated bytes events = 2 [json_name = "events"];
  for (int i = 0, n = this->_internal_events_size(); i < n; ++i) {
    const auto& s = this->_internal_events(i);
    target = stream->WriteBytes(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_provider_api.BlockEventsRPC)
  return target;
}

::size_t BlockEventsRPC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_provider_api.BlockEventsRPC)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string types = 1 [json_name = "types"];
  total_size += 1 * ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_internal_types().size());
  for (int i = 0, n = _internal_types().size(); i < n; ++i) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        _internal_types().Get(i));
  }

  // repeated bytes events = 2 [json_name = "events"];
  total_size += 1 * ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_internal_events().size());
  for (int i = 0, n = _internal_events().size(); i < n; ++i) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        _internal_events().Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BlockEventsRPC::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BlockEventsRPC::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BlockEventsRPC::GetClassData() const { return &_class_data_; }


void BlockEventsRPC::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BlockEventsRPC*>(&to_msg);
  auto& from = static_cast<const BlockEventsRPC&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:event_provider_api.BlockEventsRPC)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_types()->MergeFrom(from._internal_types());
  _this->_internal_mutable_events()->MergeFrom(from._internal_events());
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BlockEventsRPC::CopyFrom(const BlockEventsRPC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_provider_api.BlockEventsRPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlockEventsRPC::IsInitialized() const {
  return true;
}

void BlockEventsRPC::InternalSwap(BlockEventsRPC* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_types()->InternalSwap(
      other->_internal_mutable_types());
  _internal_mutable_events()->InternalSwap(
      other->_internal_mutable_events());
}

::PROTOBUF_NAMESPACE_ID::Metadata BlockEventsRPC::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_exchange_2fevent_5fprovider_5fapi_2eproto_getter, &descriptor_table_exchange_2fevent_5fprovider_5fapi_2eproto_once,
      file_level_metadata_exchange_2fevent_5fprovider_5fapi_2eproto[5]);
}
// ===================================================================

class GetCustomEventsRPCRequest::_Internal {
 public:
};

GetCustomEventsRPCRequest::GetCustomEventsRPCRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_provider_api.GetCustomEventsRPCRequest)
}
GetCustomEventsRPCRequest::GetCustomEventsRPCRequest(const GetCustomEventsRPCRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetCustomEventsRPCRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.backend_) {}

    , decltype(_impl_.events_) {}

    , decltype(_impl_.height_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.backend_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.backend_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_backend().empty()) {
    _this->_impl_.backend_.Set(from._internal_backend(), _this->GetArenaForAllocation());
  }
  _impl_.events_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.events_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_events().empty()) {
    _this->_impl_.events_.Set(from._internal_events(), _this->GetArenaForAllocation());
  }
  _this->_impl_.height_ = from._impl_.height_;
  // @@protoc_insertion_point(copy_constructor:event_provider_api.GetCustomEventsRPCRequest)
}

inline void GetCustomEventsRPCRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.backend_) {}

    , decltype(_impl_.events_) {}

    , decltype(_impl_.height_) { 0 }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.backend_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.backend_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.events_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.events_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetCustomEventsRPCRequest::~GetCustomEventsRPCRequest() {
  // @@protoc_insertion_point(destructor:event_provider_api.GetCustomEventsRPCRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetCustomEventsRPCRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.backend_.Destroy();
  _impl_.events_.Destroy();
}

void GetCustomEventsRPCRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetCustomEventsRPCRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:event_provider_api.GetCustomEventsRPCRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.backend_.ClearToEmpty();
  _impl_.events_.ClearToEmpty();
  _impl_.height_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetCustomEventsRPCRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string backend = 1 [json_name = "backend"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_backend();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "event_provider_api.GetCustomEventsRPCRequest.backend"));
        } else {
          goto handle_unusual;
        }
        continue;
      // sint32 height = 2 [json_name = "height"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          _impl_.height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string events = 3 [json_name = "events"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_events();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "event_provider_api.GetCustomEventsRPCRequest.events"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* GetCustomEventsRPCRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_provider_api.GetCustomEventsRPCRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string backend = 1 [json_name = "backend"];
  if (!this->_internal_backend().empty()) {
    const std::string& _s = this->_internal_backend();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "event_provider_api.GetCustomEventsRPCRequest.backend");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // sint32 height = 2 [json_name = "height"];
  if (this->_internal_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
        2, this->_internal_height(), target);
  }

  // string events = 3 [json_name = "events"];
  if (!this->_internal_events().empty()) {
    const std::string& _s = this->_internal_events();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "event_provider_api.GetCustomEventsRPCRequest.events");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_provider_api.GetCustomEventsRPCRequest)
  return target;
}

::size_t GetCustomEventsRPCRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_provider_api.GetCustomEventsRPCRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string backend = 1 [json_name = "backend"];
  if (!this->_internal_backend().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_backend());
  }

  // string events = 3 [json_name = "events"];
  if (!this->_internal_events().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_events());
  }

  // sint32 height = 2 [json_name = "height"];
  if (this->_internal_height() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(
        this->_internal_height());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetCustomEventsRPCRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetCustomEventsRPCRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetCustomEventsRPCRequest::GetClassData() const { return &_class_data_; }


void GetCustomEventsRPCRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetCustomEventsRPCRequest*>(&to_msg);
  auto& from = static_cast<const GetCustomEventsRPCRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:event_provider_api.GetCustomEventsRPCRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_backend().empty()) {
    _this->_internal_set_backend(from._internal_backend());
  }
  if (!from._internal_events().empty()) {
    _this->_internal_set_events(from._internal_events());
  }
  if (from._internal_height() != 0) {
    _this->_internal_set_height(from._internal_height());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetCustomEventsRPCRequest::CopyFrom(const GetCustomEventsRPCRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_provider_api.GetCustomEventsRPCRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCustomEventsRPCRequest::IsInitialized() const {
  return true;
}

void GetCustomEventsRPCRequest::InternalSwap(GetCustomEventsRPCRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.backend_, lhs_arena,
                                       &other->_impl_.backend_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.events_, lhs_arena,
                                       &other->_impl_.events_, rhs_arena);

  swap(_impl_.height_, other->_impl_.height_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCustomEventsRPCRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_exchange_2fevent_5fprovider_5fapi_2eproto_getter, &descriptor_table_exchange_2fevent_5fprovider_5fapi_2eproto_once,
      file_level_metadata_exchange_2fevent_5fprovider_5fapi_2eproto[6]);
}
// ===================================================================

class GetCustomEventsRPCResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GetCustomEventsRPCResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GetCustomEventsRPCResponse, _impl_._has_bits_);
  static const ::event_provider_api::BlockEventsRPC& data(const GetCustomEventsRPCResponse* msg);
  static void set_has_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::event_provider_api::BlockEventsRPC&
GetCustomEventsRPCResponse::_Internal::data(const GetCustomEventsRPCResponse* msg) {
  return *msg->_impl_.data_;
}
GetCustomEventsRPCResponse::GetCustomEventsRPCResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_provider_api.GetCustomEventsRPCResponse)
}
GetCustomEventsRPCResponse::GetCustomEventsRPCResponse(const GetCustomEventsRPCResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetCustomEventsRPCResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.s_) {}

    , decltype(_impl_.errmsg_) {}

    , decltype(_impl_.data_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.s_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.s_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_s().empty()) {
    _this->_impl_.s_.Set(from._internal_s(), _this->GetArenaForAllocation());
  }
  _impl_.errmsg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.errmsg_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_errmsg().empty()) {
    _this->_impl_.errmsg_.Set(from._internal_errmsg(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.data_ = new ::event_provider_api::BlockEventsRPC(*from._impl_.data_);
  }
  // @@protoc_insertion_point(copy_constructor:event_provider_api.GetCustomEventsRPCResponse)
}

inline void GetCustomEventsRPCResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.s_) {}

    , decltype(_impl_.errmsg_) {}

    , decltype(_impl_.data_){nullptr}
  };
  _impl_.s_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.s_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.errmsg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.errmsg_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetCustomEventsRPCResponse::~GetCustomEventsRPCResponse() {
  // @@protoc_insertion_point(destructor:event_provider_api.GetCustomEventsRPCResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetCustomEventsRPCResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.s_.Destroy();
  _impl_.errmsg_.Destroy();
  if (this != internal_default_instance()) delete _impl_.data_;
}

void GetCustomEventsRPCResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetCustomEventsRPCResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:event_provider_api.GetCustomEventsRPCResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.s_.ClearToEmpty();
  _impl_.errmsg_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.data_ != nullptr);
    _impl_.data_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetCustomEventsRPCResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string s = 1 [json_name = "s"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_s();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "event_provider_api.GetCustomEventsRPCResponse.s"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string errmsg = 2 [json_name = "errmsg"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_errmsg();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "event_provider_api.GetCustomEventsRPCResponse.errmsg"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .event_provider_api.BlockEventsRPC data = 3 [json_name = "data"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* GetCustomEventsRPCResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:event_provider_api.GetCustomEventsRPCResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string s = 1 [json_name = "s"];
  if (!this->_internal_s().empty()) {
    const std::string& _s = this->_internal_s();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "event_provider_api.GetCustomEventsRPCResponse.s");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string errmsg = 2 [json_name = "errmsg"];
  if (!this->_internal_errmsg().empty()) {
    const std::string& _s = this->_internal_errmsg();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "event_provider_api.GetCustomEventsRPCResponse.errmsg");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .event_provider_api.BlockEventsRPC data = 3 [json_name = "data"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_provider_api.GetCustomEventsRPCResponse)
  return target;
}

::size_t GetCustomEventsRPCResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_provider_api.GetCustomEventsRPCResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string s = 1 [json_name = "s"];
  if (!this->_internal_s().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_s());
  }

  // string errmsg = 2 [json_name = "errmsg"];
  if (!this->_internal_errmsg().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_errmsg());
  }

  // .event_provider_api.BlockEventsRPC data = 3 [json_name = "data"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.data_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetCustomEventsRPCResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetCustomEventsRPCResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetCustomEventsRPCResponse::GetClassData() const { return &_class_data_; }


void GetCustomEventsRPCResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetCustomEventsRPCResponse*>(&to_msg);
  auto& from = static_cast<const GetCustomEventsRPCResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:event_provider_api.GetCustomEventsRPCResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_s().empty()) {
    _this->_internal_set_s(from._internal_s());
  }
  if (!from._internal_errmsg().empty()) {
    _this->_internal_set_errmsg(from._internal_errmsg());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_data()->::event_provider_api::BlockEventsRPC::MergeFrom(
        from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetCustomEventsRPCResponse::CopyFrom(const GetCustomEventsRPCResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_provider_api.GetCustomEventsRPCResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCustomEventsRPCResponse::IsInitialized() const {
  return true;
}

void GetCustomEventsRPCResponse::InternalSwap(GetCustomEventsRPCResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.s_, lhs_arena,
                                       &other->_impl_.s_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.errmsg_, lhs_arena,
                                       &other->_impl_.errmsg_, rhs_arena);
  swap(_impl_.data_, other->_impl_.data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCustomEventsRPCResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_exchange_2fevent_5fprovider_5fapi_2eproto_getter, &descriptor_table_exchange_2fevent_5fprovider_5fapi_2eproto_once,
      file_level_metadata_exchange_2fevent_5fprovider_5fapi_2eproto[7]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace event_provider_api
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::event_provider_api::GetLatestHeightRequest*
Arena::CreateMaybeMessage< ::event_provider_api::GetLatestHeightRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_provider_api::GetLatestHeightRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::event_provider_api::GetLatestHeightResponse*
Arena::CreateMaybeMessage< ::event_provider_api::GetLatestHeightResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_provider_api::GetLatestHeightResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::event_provider_api::LatestBlockHeight*
Arena::CreateMaybeMessage< ::event_provider_api::LatestBlockHeight >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_provider_api::LatestBlockHeight >(arena);
}
template<> PROTOBUF_NOINLINE ::event_provider_api::GetBlockEventsRPCRequest*
Arena::CreateMaybeMessage< ::event_provider_api::GetBlockEventsRPCRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_provider_api::GetBlockEventsRPCRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::event_provider_api::GetBlockEventsRPCResponse*
Arena::CreateMaybeMessage< ::event_provider_api::GetBlockEventsRPCResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_provider_api::GetBlockEventsRPCResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::event_provider_api::BlockEventsRPC*
Arena::CreateMaybeMessage< ::event_provider_api::BlockEventsRPC >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_provider_api::BlockEventsRPC >(arena);
}
template<> PROTOBUF_NOINLINE ::event_provider_api::GetCustomEventsRPCRequest*
Arena::CreateMaybeMessage< ::event_provider_api::GetCustomEventsRPCRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_provider_api::GetCustomEventsRPCRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::event_provider_api::GetCustomEventsRPCResponse*
Arena::CreateMaybeMessage< ::event_provider_api::GetCustomEventsRPCResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::event_provider_api::GetCustomEventsRPCResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
