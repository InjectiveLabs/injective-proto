// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: exchange/injective_meta_rpc.proto

#include "exchange/injective_meta_rpc.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace injective_meta_rpc {
template <typename>
PROTOBUF_CONSTEXPR PingRequest::PingRequest(
    ::_pbi::ConstantInitialized) {}
struct PingRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PingRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PingRequestDefaultTypeInternal() {}
  union {
    PingRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PingRequestDefaultTypeInternal _PingRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR PingResponse::PingResponse(
    ::_pbi::ConstantInitialized) {}
struct PingResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PingResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PingResponseDefaultTypeInternal() {}
  union {
    PingResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PingResponseDefaultTypeInternal _PingResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR VersionRequest::VersionRequest(
    ::_pbi::ConstantInitialized) {}
struct VersionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VersionRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VersionRequestDefaultTypeInternal() {}
  union {
    VersionRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VersionRequestDefaultTypeInternal _VersionRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR VersionResponse_BuildEntry_DoNotUse::VersionResponse_BuildEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct VersionResponse_BuildEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VersionResponse_BuildEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VersionResponse_BuildEntry_DoNotUseDefaultTypeInternal() {}
  union {
    VersionResponse_BuildEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VersionResponse_BuildEntry_DoNotUseDefaultTypeInternal _VersionResponse_BuildEntry_DoNotUse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR VersionResponse::VersionResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.build_)*/{}
  , /*decltype(_impl_.version_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct VersionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VersionResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VersionResponseDefaultTypeInternal() {}
  union {
    VersionResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VersionResponseDefaultTypeInternal _VersionResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR InfoRequest::InfoRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.timestamp_)*/ ::int64_t{0}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct InfoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InfoRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InfoRequestDefaultTypeInternal() {}
  union {
    InfoRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InfoRequestDefaultTypeInternal _InfoRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR InfoResponse_BuildEntry_DoNotUse::InfoResponse_BuildEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct InfoResponse_BuildEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InfoResponse_BuildEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InfoResponse_BuildEntry_DoNotUseDefaultTypeInternal() {}
  union {
    InfoResponse_BuildEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InfoResponse_BuildEntry_DoNotUseDefaultTypeInternal _InfoResponse_BuildEntry_DoNotUse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR InfoResponse::InfoResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.build_)*/{}
  , /*decltype(_impl_.version_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.region_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.timestamp_)*/ ::int64_t{0}

  , /*decltype(_impl_.server_time_)*/ ::int64_t{0}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct InfoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InfoResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InfoResponseDefaultTypeInternal() {}
  union {
    InfoResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InfoResponseDefaultTypeInternal _InfoResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR StreamKeepaliveRequest::StreamKeepaliveRequest(
    ::_pbi::ConstantInitialized) {}
struct StreamKeepaliveRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StreamKeepaliveRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StreamKeepaliveRequestDefaultTypeInternal() {}
  union {
    StreamKeepaliveRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StreamKeepaliveRequestDefaultTypeInternal _StreamKeepaliveRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR StreamKeepaliveResponse::StreamKeepaliveResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.event_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.new_endpoint_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.timestamp_)*/ ::int64_t{0}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StreamKeepaliveResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StreamKeepaliveResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StreamKeepaliveResponseDefaultTypeInternal() {}
  union {
    StreamKeepaliveResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StreamKeepaliveResponseDefaultTypeInternal _StreamKeepaliveResponse_default_instance_;
}  // namespace injective_meta_rpc
static ::_pb::Metadata file_level_metadata_exchange_2finjective_5fmeta_5frpc_2eproto[10];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_exchange_2finjective_5fmeta_5frpc_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_exchange_2finjective_5fmeta_5frpc_2eproto = nullptr;
const ::uint32_t TableStruct_exchange_2finjective_5fmeta_5frpc_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective_meta_rpc::PingRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective_meta_rpc::PingResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective_meta_rpc::VersionRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective_meta_rpc::VersionResponse_BuildEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::injective_meta_rpc::VersionResponse_BuildEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective_meta_rpc::VersionResponse_BuildEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::injective_meta_rpc::VersionResponse_BuildEntry_DoNotUse, value_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective_meta_rpc::VersionResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective_meta_rpc::VersionResponse, _impl_.version_),
    PROTOBUF_FIELD_OFFSET(::injective_meta_rpc::VersionResponse, _impl_.build_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective_meta_rpc::InfoRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective_meta_rpc::InfoRequest, _impl_.timestamp_),
    PROTOBUF_FIELD_OFFSET(::injective_meta_rpc::InfoResponse_BuildEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::injective_meta_rpc::InfoResponse_BuildEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective_meta_rpc::InfoResponse_BuildEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::injective_meta_rpc::InfoResponse_BuildEntry_DoNotUse, value_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective_meta_rpc::InfoResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective_meta_rpc::InfoResponse, _impl_.timestamp_),
    PROTOBUF_FIELD_OFFSET(::injective_meta_rpc::InfoResponse, _impl_.server_time_),
    PROTOBUF_FIELD_OFFSET(::injective_meta_rpc::InfoResponse, _impl_.version_),
    PROTOBUF_FIELD_OFFSET(::injective_meta_rpc::InfoResponse, _impl_.build_),
    PROTOBUF_FIELD_OFFSET(::injective_meta_rpc::InfoResponse, _impl_.region_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective_meta_rpc::StreamKeepaliveRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective_meta_rpc::StreamKeepaliveResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective_meta_rpc::StreamKeepaliveResponse, _impl_.event_),
    PROTOBUF_FIELD_OFFSET(::injective_meta_rpc::StreamKeepaliveResponse, _impl_.new_endpoint_),
    PROTOBUF_FIELD_OFFSET(::injective_meta_rpc::StreamKeepaliveResponse, _impl_.timestamp_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::injective_meta_rpc::PingRequest)},
        { 8, -1, -1, sizeof(::injective_meta_rpc::PingResponse)},
        { 16, -1, -1, sizeof(::injective_meta_rpc::VersionRequest)},
        { 24, 34, -1, sizeof(::injective_meta_rpc::VersionResponse_BuildEntry_DoNotUse)},
        { 36, -1, -1, sizeof(::injective_meta_rpc::VersionResponse)},
        { 46, -1, -1, sizeof(::injective_meta_rpc::InfoRequest)},
        { 55, 65, -1, sizeof(::injective_meta_rpc::InfoResponse_BuildEntry_DoNotUse)},
        { 67, -1, -1, sizeof(::injective_meta_rpc::InfoResponse)},
        { 80, -1, -1, sizeof(::injective_meta_rpc::StreamKeepaliveRequest)},
        { 88, -1, -1, sizeof(::injective_meta_rpc::StreamKeepaliveResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::injective_meta_rpc::_PingRequest_default_instance_._instance,
    &::injective_meta_rpc::_PingResponse_default_instance_._instance,
    &::injective_meta_rpc::_VersionRequest_default_instance_._instance,
    &::injective_meta_rpc::_VersionResponse_BuildEntry_DoNotUse_default_instance_._instance,
    &::injective_meta_rpc::_VersionResponse_default_instance_._instance,
    &::injective_meta_rpc::_InfoRequest_default_instance_._instance,
    &::injective_meta_rpc::_InfoResponse_BuildEntry_DoNotUse_default_instance_._instance,
    &::injective_meta_rpc::_InfoResponse_default_instance_._instance,
    &::injective_meta_rpc::_StreamKeepaliveRequest_default_instance_._instance,
    &::injective_meta_rpc::_StreamKeepaliveResponse_default_instance_._instance,
};
const char descriptor_table_protodef_exchange_2finjective_5fmeta_5frpc_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n!exchange/injective_meta_rpc.proto\022\022inj"
    "ective_meta_rpc\"\r\n\013PingRequest\"\016\n\014PingRe"
    "sponse\"\020\n\016VersionRequest\"\253\001\n\017VersionResp"
    "onse\022\030\n\007version\030\001 \001(\tR\007version\022D\n\005build\030"
    "\002 \003(\0132..injective_meta_rpc.VersionRespon"
    "se.BuildEntryR\005build\0328\n\nBuildEntry\022\020\n\003ke"
    "y\030\001 \001(\tR\003key\022\024\n\005value\030\002 \001(\tR\005value:\0028\001\"+"
    "\n\013InfoRequest\022\034\n\ttimestamp\030\001 \001(\022R\ttimest"
    "amp\"\374\001\n\014InfoResponse\022\034\n\ttimestamp\030\001 \001(\022R"
    "\ttimestamp\022\037\n\013server_time\030\002 \001(\022R\nserverT"
    "ime\022\030\n\007version\030\003 \001(\tR\007version\022A\n\005build\030\004"
    " \003(\0132+.injective_meta_rpc.InfoResponse.B"
    "uildEntryR\005build\022\026\n\006region\030\005 \001(\tR\006region"
    "\0328\n\nBuildEntry\022\020\n\003key\030\001 \001(\tR\003key\022\024\n\005valu"
    "e\030\002 \001(\tR\005value:\0028\001\"\030\n\026StreamKeepaliveReq"
    "uest\"p\n\027StreamKeepaliveResponse\022\024\n\005event"
    "\030\001 \001(\tR\005event\022!\n\014new_endpoint\030\002 \001(\tR\013new"
    "Endpoint\022\034\n\ttimestamp\030\003 \001(\022R\ttimestamp2\352"
    "\002\n\020InjectiveMetaRPC\022I\n\004Ping\022\037.injective_"
    "meta_rpc.PingRequest\032 .injective_meta_rp"
    "c.PingResponse\022R\n\007Version\022\".injective_me"
    "ta_rpc.VersionRequest\032#.injective_meta_r"
    "pc.VersionResponse\022I\n\004Info\022\037.injective_m"
    "eta_rpc.InfoRequest\032 .injective_meta_rpc"
    ".InfoResponse\022l\n\017StreamKeepalive\022*.injec"
    "tive_meta_rpc.StreamKeepaliveRequest\032+.i"
    "njective_meta_rpc.StreamKeepaliveRespons"
    "e0\001B\246\001\n\026com.injective_meta_rpcB\025Injectiv"
    "eMetaRpcProtoP\001Z\025/injective_meta_rpcpb\242\002"
    "\003IXX\252\002\020InjectiveMetaRpc\312\002\020InjectiveMetaR"
    "pc\342\002\034InjectiveMetaRpc\\GPBMetadata\352\002\020Inje"
    "ctiveMetaRpcb\006proto3"
};
static ::absl::once_flag descriptor_table_exchange_2finjective_5fmeta_5frpc_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_exchange_2finjective_5fmeta_5frpc_2eproto = {
    false,
    false,
    1260,
    descriptor_table_protodef_exchange_2finjective_5fmeta_5frpc_2eproto,
    "exchange/injective_meta_rpc.proto",
    &descriptor_table_exchange_2finjective_5fmeta_5frpc_2eproto_once,
    nullptr,
    0,
    10,
    schemas,
    file_default_instances,
    TableStruct_exchange_2finjective_5fmeta_5frpc_2eproto::offsets,
    file_level_metadata_exchange_2finjective_5fmeta_5frpc_2eproto,
    file_level_enum_descriptors_exchange_2finjective_5fmeta_5frpc_2eproto,
    file_level_service_descriptors_exchange_2finjective_5fmeta_5frpc_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_exchange_2finjective_5fmeta_5frpc_2eproto_getter() {
  return &descriptor_table_exchange_2finjective_5fmeta_5frpc_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_exchange_2finjective_5fmeta_5frpc_2eproto(&descriptor_table_exchange_2finjective_5fmeta_5frpc_2eproto);
namespace injective_meta_rpc {
// ===================================================================

class PingRequest::_Internal {
 public:
};

PingRequest::PingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective_meta_rpc.PingRequest)
}
PingRequest::PingRequest(const PingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  PingRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective_meta_rpc.PingRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PingRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PingRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata PingRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_exchange_2finjective_5fmeta_5frpc_2eproto_getter, &descriptor_table_exchange_2finjective_5fmeta_5frpc_2eproto_once,
      file_level_metadata_exchange_2finjective_5fmeta_5frpc_2eproto[0]);
}
// ===================================================================

class PingResponse::_Internal {
 public:
};

PingResponse::PingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective_meta_rpc.PingResponse)
}
PingResponse::PingResponse(const PingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  PingResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective_meta_rpc.PingResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PingResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PingResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata PingResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_exchange_2finjective_5fmeta_5frpc_2eproto_getter, &descriptor_table_exchange_2finjective_5fmeta_5frpc_2eproto_once,
      file_level_metadata_exchange_2finjective_5fmeta_5frpc_2eproto[1]);
}
// ===================================================================

class VersionRequest::_Internal {
 public:
};

VersionRequest::VersionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective_meta_rpc.VersionRequest)
}
VersionRequest::VersionRequest(const VersionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  VersionRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective_meta_rpc.VersionRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData VersionRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*VersionRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata VersionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_exchange_2finjective_5fmeta_5frpc_2eproto_getter, &descriptor_table_exchange_2finjective_5fmeta_5frpc_2eproto_once,
      file_level_metadata_exchange_2finjective_5fmeta_5frpc_2eproto[2]);
}
// ===================================================================

VersionResponse_BuildEntry_DoNotUse::VersionResponse_BuildEntry_DoNotUse() {}
VersionResponse_BuildEntry_DoNotUse::VersionResponse_BuildEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void VersionResponse_BuildEntry_DoNotUse::MergeFrom(const VersionResponse_BuildEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata VersionResponse_BuildEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_exchange_2finjective_5fmeta_5frpc_2eproto_getter, &descriptor_table_exchange_2finjective_5fmeta_5frpc_2eproto_once,
      file_level_metadata_exchange_2finjective_5fmeta_5frpc_2eproto[3]);
}
// ===================================================================

class VersionResponse::_Internal {
 public:
};

VersionResponse::VersionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective_meta_rpc.VersionResponse)
}
VersionResponse::VersionResponse(const VersionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  VersionResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_.build_)*/{}
    , decltype(_impl_.version_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.build_.MergeFrom(from._impl_.build_);
  _impl_.version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.version_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_version().empty()) {
    _this->_impl_.version_.Set(from._internal_version(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:injective_meta_rpc.VersionResponse)
}

inline void VersionResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      /*decltype(_impl_.build_)*/{::_pbi::ArenaInitialized(), arena}
    , decltype(_impl_.version_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.version_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

VersionResponse::~VersionResponse() {
  // @@protoc_insertion_point(destructor:injective_meta_rpc.VersionResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void VersionResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.build_.~MapField();
  _impl_.version_.Destroy();
}

void VersionResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void VersionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:injective_meta_rpc.VersionResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.build_.Clear();
  _impl_.version_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VersionResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string version = 1 [json_name = "version"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective_meta_rpc.VersionResponse.version"));
        } else {
          goto handle_unusual;
        }
        continue;
      // map<string, string> build = 2 [json_name = "build"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.build_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* VersionResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective_meta_rpc.VersionResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string version = 1 [json_name = "version"];
  if (!this->_internal_version().empty()) {
    const std::string& _s = this->_internal_version();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective_meta_rpc.VersionResponse.version");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // map<string, string> build = 2 [json_name = "build"];
  if (!this->_internal_build().empty()) {
    using MapType = ::_pb::Map<std::string, std::string>;
    using WireHelper = VersionResponse_BuildEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_build();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          entry.first.data(), static_cast<int>(entry.first.length()),
 ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective_meta_rpc.VersionResponse.build");
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          entry.second.data(), static_cast<int>(entry.second.length()),
 ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective_meta_rpc.VersionResponse.build");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(2, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(2, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective_meta_rpc.VersionResponse)
  return target;
}

::size_t VersionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective_meta_rpc.VersionResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> build = 2 [json_name = "build"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_build_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_build().begin();
      it != this->_internal_build().end(); ++it) {
    total_size += VersionResponse_BuildEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string version = 1 [json_name = "version"];
  if (!this->_internal_version().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData VersionResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    VersionResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*VersionResponse::GetClassData() const { return &_class_data_; }


void VersionResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<VersionResponse*>(&to_msg);
  auto& from = static_cast<const VersionResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective_meta_rpc.VersionResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.build_.MergeFrom(from._impl_.build_);
  if (!from._internal_version().empty()) {
    _this->_internal_set_version(from._internal_version());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void VersionResponse::CopyFrom(const VersionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective_meta_rpc.VersionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VersionResponse::IsInitialized() const {
  return true;
}

void VersionResponse::InternalSwap(VersionResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.build_.InternalSwap(&other->_impl_.build_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.version_, lhs_arena,
                                       &other->_impl_.version_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata VersionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_exchange_2finjective_5fmeta_5frpc_2eproto_getter, &descriptor_table_exchange_2finjective_5fmeta_5frpc_2eproto_once,
      file_level_metadata_exchange_2finjective_5fmeta_5frpc_2eproto[4]);
}
// ===================================================================

class InfoRequest::_Internal {
 public:
};

InfoRequest::InfoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective_meta_rpc.InfoRequest)
}
InfoRequest::InfoRequest(const InfoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective_meta_rpc.InfoRequest)
}

inline void InfoRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.timestamp_) { ::int64_t{0} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

InfoRequest::~InfoRequest() {
  // @@protoc_insertion_point(destructor:injective_meta_rpc.InfoRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InfoRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}

void InfoRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void InfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:injective_meta_rpc.InfoRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.timestamp_ = ::int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InfoRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint64 timestamp = 1 [json_name = "timestamp"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* InfoRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective_meta_rpc.InfoRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint64 timestamp = 1 [json_name = "timestamp"];
  if (this->_internal_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt64ToArray(
        1, this->_internal_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective_meta_rpc.InfoRequest)
  return target;
}

::size_t InfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective_meta_rpc.InfoRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint64 timestamp = 1 [json_name = "timestamp"];
  if (this->_internal_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt64SizePlusOne(
        this->_internal_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InfoRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    InfoRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InfoRequest::GetClassData() const { return &_class_data_; }


void InfoRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<InfoRequest*>(&to_msg);
  auto& from = static_cast<const InfoRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective_meta_rpc.InfoRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_timestamp() != 0) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InfoRequest::CopyFrom(const InfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective_meta_rpc.InfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InfoRequest::IsInitialized() const {
  return true;
}

void InfoRequest::InternalSwap(InfoRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);

  swap(_impl_.timestamp_, other->_impl_.timestamp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InfoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_exchange_2finjective_5fmeta_5frpc_2eproto_getter, &descriptor_table_exchange_2finjective_5fmeta_5frpc_2eproto_once,
      file_level_metadata_exchange_2finjective_5fmeta_5frpc_2eproto[5]);
}
// ===================================================================

InfoResponse_BuildEntry_DoNotUse::InfoResponse_BuildEntry_DoNotUse() {}
InfoResponse_BuildEntry_DoNotUse::InfoResponse_BuildEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void InfoResponse_BuildEntry_DoNotUse::MergeFrom(const InfoResponse_BuildEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata InfoResponse_BuildEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_exchange_2finjective_5fmeta_5frpc_2eproto_getter, &descriptor_table_exchange_2finjective_5fmeta_5frpc_2eproto_once,
      file_level_metadata_exchange_2finjective_5fmeta_5frpc_2eproto[6]);
}
// ===================================================================

class InfoResponse::_Internal {
 public:
};

InfoResponse::InfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective_meta_rpc.InfoResponse)
}
InfoResponse::InfoResponse(const InfoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  InfoResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_.build_)*/{}
    , decltype(_impl_.version_) {}

    , decltype(_impl_.region_) {}

    , decltype(_impl_.timestamp_) {}

    , decltype(_impl_.server_time_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.build_.MergeFrom(from._impl_.build_);
  _impl_.version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.version_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_version().empty()) {
    _this->_impl_.version_.Set(from._internal_version(), _this->GetArenaForAllocation());
  }
  _impl_.region_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.region_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_region().empty()) {
    _this->_impl_.region_.Set(from._internal_region(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.timestamp_, &from._impl_.timestamp_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.server_time_) -
    reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.server_time_));
  // @@protoc_insertion_point(copy_constructor:injective_meta_rpc.InfoResponse)
}

inline void InfoResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      /*decltype(_impl_.build_)*/{::_pbi::ArenaInitialized(), arena}
    , decltype(_impl_.version_) {}

    , decltype(_impl_.region_) {}

    , decltype(_impl_.timestamp_) { ::int64_t{0} }

    , decltype(_impl_.server_time_) { ::int64_t{0} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.version_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.region_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.region_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

InfoResponse::~InfoResponse() {
  // @@protoc_insertion_point(destructor:injective_meta_rpc.InfoResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InfoResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.build_.~MapField();
  _impl_.version_.Destroy();
  _impl_.region_.Destroy();
}

void InfoResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void InfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:injective_meta_rpc.InfoResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.build_.Clear();
  _impl_.version_.ClearToEmpty();
  _impl_.region_.ClearToEmpty();
  ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.server_time_) -
      reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.server_time_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InfoResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint64 timestamp = 1 [json_name = "timestamp"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // sint64 server_time = 2 [json_name = "serverTime"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          _impl_.server_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string version = 3 [json_name = "version"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective_meta_rpc.InfoResponse.version"));
        } else {
          goto handle_unusual;
        }
        continue;
      // map<string, string> build = 4 [json_name = "build"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.build_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // string region = 5 [json_name = "region"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_region();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective_meta_rpc.InfoResponse.region"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* InfoResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective_meta_rpc.InfoResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint64 timestamp = 1 [json_name = "timestamp"];
  if (this->_internal_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt64ToArray(
        1, this->_internal_timestamp(), target);
  }

  // sint64 server_time = 2 [json_name = "serverTime"];
  if (this->_internal_server_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt64ToArray(
        2, this->_internal_server_time(), target);
  }

  // string version = 3 [json_name = "version"];
  if (!this->_internal_version().empty()) {
    const std::string& _s = this->_internal_version();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective_meta_rpc.InfoResponse.version");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // map<string, string> build = 4 [json_name = "build"];
  if (!this->_internal_build().empty()) {
    using MapType = ::_pb::Map<std::string, std::string>;
    using WireHelper = InfoResponse_BuildEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_build();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          entry.first.data(), static_cast<int>(entry.first.length()),
 ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective_meta_rpc.InfoResponse.build");
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          entry.second.data(), static_cast<int>(entry.second.length()),
 ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective_meta_rpc.InfoResponse.build");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(4, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(4, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // string region = 5 [json_name = "region"];
  if (!this->_internal_region().empty()) {
    const std::string& _s = this->_internal_region();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective_meta_rpc.InfoResponse.region");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective_meta_rpc.InfoResponse)
  return target;
}

::size_t InfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective_meta_rpc.InfoResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> build = 4 [json_name = "build"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_build_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_build().begin();
      it != this->_internal_build().end(); ++it) {
    total_size += InfoResponse_BuildEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string version = 3 [json_name = "version"];
  if (!this->_internal_version().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_version());
  }

  // string region = 5 [json_name = "region"];
  if (!this->_internal_region().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_region());
  }

  // sint64 timestamp = 1 [json_name = "timestamp"];
  if (this->_internal_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt64SizePlusOne(
        this->_internal_timestamp());
  }

  // sint64 server_time = 2 [json_name = "serverTime"];
  if (this->_internal_server_time() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt64SizePlusOne(
        this->_internal_server_time());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InfoResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    InfoResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InfoResponse::GetClassData() const { return &_class_data_; }


void InfoResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<InfoResponse*>(&to_msg);
  auto& from = static_cast<const InfoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective_meta_rpc.InfoResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.build_.MergeFrom(from._impl_.build_);
  if (!from._internal_version().empty()) {
    _this->_internal_set_version(from._internal_version());
  }
  if (!from._internal_region().empty()) {
    _this->_internal_set_region(from._internal_region());
  }
  if (from._internal_timestamp() != 0) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (from._internal_server_time() != 0) {
    _this->_internal_set_server_time(from._internal_server_time());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InfoResponse::CopyFrom(const InfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective_meta_rpc.InfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InfoResponse::IsInitialized() const {
  return true;
}

void InfoResponse::InternalSwap(InfoResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.build_.InternalSwap(&other->_impl_.build_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.version_, lhs_arena,
                                       &other->_impl_.version_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.region_, lhs_arena,
                                       &other->_impl_.region_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InfoResponse, _impl_.server_time_)
      + sizeof(InfoResponse::_impl_.server_time_)
      - PROTOBUF_FIELD_OFFSET(InfoResponse, _impl_.timestamp_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_));
}

::PROTOBUF_NAMESPACE_ID::Metadata InfoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_exchange_2finjective_5fmeta_5frpc_2eproto_getter, &descriptor_table_exchange_2finjective_5fmeta_5frpc_2eproto_once,
      file_level_metadata_exchange_2finjective_5fmeta_5frpc_2eproto[7]);
}
// ===================================================================

class StreamKeepaliveRequest::_Internal {
 public:
};

StreamKeepaliveRequest::StreamKeepaliveRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective_meta_rpc.StreamKeepaliveRequest)
}
StreamKeepaliveRequest::StreamKeepaliveRequest(const StreamKeepaliveRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  StreamKeepaliveRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective_meta_rpc.StreamKeepaliveRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StreamKeepaliveRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StreamKeepaliveRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata StreamKeepaliveRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_exchange_2finjective_5fmeta_5frpc_2eproto_getter, &descriptor_table_exchange_2finjective_5fmeta_5frpc_2eproto_once,
      file_level_metadata_exchange_2finjective_5fmeta_5frpc_2eproto[8]);
}
// ===================================================================

class StreamKeepaliveResponse::_Internal {
 public:
};

StreamKeepaliveResponse::StreamKeepaliveResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective_meta_rpc.StreamKeepaliveResponse)
}
StreamKeepaliveResponse::StreamKeepaliveResponse(const StreamKeepaliveResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StreamKeepaliveResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.event_) {}

    , decltype(_impl_.new_endpoint_) {}

    , decltype(_impl_.timestamp_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.event_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.event_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_event().empty()) {
    _this->_impl_.event_.Set(from._internal_event(), _this->GetArenaForAllocation());
  }
  _impl_.new_endpoint_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.new_endpoint_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_new_endpoint().empty()) {
    _this->_impl_.new_endpoint_.Set(from._internal_new_endpoint(), _this->GetArenaForAllocation());
  }
  _this->_impl_.timestamp_ = from._impl_.timestamp_;
  // @@protoc_insertion_point(copy_constructor:injective_meta_rpc.StreamKeepaliveResponse)
}

inline void StreamKeepaliveResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.event_) {}

    , decltype(_impl_.new_endpoint_) {}

    , decltype(_impl_.timestamp_) { ::int64_t{0} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.event_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.event_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.new_endpoint_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.new_endpoint_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

StreamKeepaliveResponse::~StreamKeepaliveResponse() {
  // @@protoc_insertion_point(destructor:injective_meta_rpc.StreamKeepaliveResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StreamKeepaliveResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.event_.Destroy();
  _impl_.new_endpoint_.Destroy();
}

void StreamKeepaliveResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StreamKeepaliveResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:injective_meta_rpc.StreamKeepaliveResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.event_.ClearToEmpty();
  _impl_.new_endpoint_.ClearToEmpty();
  _impl_.timestamp_ = ::int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StreamKeepaliveResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string event = 1 [json_name = "event"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_event();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective_meta_rpc.StreamKeepaliveResponse.event"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string new_endpoint = 2 [json_name = "newEndpoint"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_new_endpoint();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective_meta_rpc.StreamKeepaliveResponse.new_endpoint"));
        } else {
          goto handle_unusual;
        }
        continue;
      // sint64 timestamp = 3 [json_name = "timestamp"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 24)) {
          _impl_.timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* StreamKeepaliveResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective_meta_rpc.StreamKeepaliveResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string event = 1 [json_name = "event"];
  if (!this->_internal_event().empty()) {
    const std::string& _s = this->_internal_event();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective_meta_rpc.StreamKeepaliveResponse.event");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string new_endpoint = 2 [json_name = "newEndpoint"];
  if (!this->_internal_new_endpoint().empty()) {
    const std::string& _s = this->_internal_new_endpoint();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective_meta_rpc.StreamKeepaliveResponse.new_endpoint");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // sint64 timestamp = 3 [json_name = "timestamp"];
  if (this->_internal_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt64ToArray(
        3, this->_internal_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective_meta_rpc.StreamKeepaliveResponse)
  return target;
}

::size_t StreamKeepaliveResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective_meta_rpc.StreamKeepaliveResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string event = 1 [json_name = "event"];
  if (!this->_internal_event().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_event());
  }

  // string new_endpoint = 2 [json_name = "newEndpoint"];
  if (!this->_internal_new_endpoint().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_new_endpoint());
  }

  // sint64 timestamp = 3 [json_name = "timestamp"];
  if (this->_internal_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt64SizePlusOne(
        this->_internal_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StreamKeepaliveResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StreamKeepaliveResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StreamKeepaliveResponse::GetClassData() const { return &_class_data_; }


void StreamKeepaliveResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StreamKeepaliveResponse*>(&to_msg);
  auto& from = static_cast<const StreamKeepaliveResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective_meta_rpc.StreamKeepaliveResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_event().empty()) {
    _this->_internal_set_event(from._internal_event());
  }
  if (!from._internal_new_endpoint().empty()) {
    _this->_internal_set_new_endpoint(from._internal_new_endpoint());
  }
  if (from._internal_timestamp() != 0) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StreamKeepaliveResponse::CopyFrom(const StreamKeepaliveResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective_meta_rpc.StreamKeepaliveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamKeepaliveResponse::IsInitialized() const {
  return true;
}

void StreamKeepaliveResponse::InternalSwap(StreamKeepaliveResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.event_, lhs_arena,
                                       &other->_impl_.event_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.new_endpoint_, lhs_arena,
                                       &other->_impl_.new_endpoint_, rhs_arena);

  swap(_impl_.timestamp_, other->_impl_.timestamp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StreamKeepaliveResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_exchange_2finjective_5fmeta_5frpc_2eproto_getter, &descriptor_table_exchange_2finjective_5fmeta_5frpc_2eproto_once,
      file_level_metadata_exchange_2finjective_5fmeta_5frpc_2eproto[9]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace injective_meta_rpc
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::injective_meta_rpc::PingRequest*
Arena::CreateMaybeMessage< ::injective_meta_rpc::PingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective_meta_rpc::PingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::injective_meta_rpc::PingResponse*
Arena::CreateMaybeMessage< ::injective_meta_rpc::PingResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective_meta_rpc::PingResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective_meta_rpc::VersionRequest*
Arena::CreateMaybeMessage< ::injective_meta_rpc::VersionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective_meta_rpc::VersionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::injective_meta_rpc::VersionResponse_BuildEntry_DoNotUse*
Arena::CreateMaybeMessage< ::injective_meta_rpc::VersionResponse_BuildEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective_meta_rpc::VersionResponse_BuildEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective_meta_rpc::VersionResponse*
Arena::CreateMaybeMessage< ::injective_meta_rpc::VersionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective_meta_rpc::VersionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective_meta_rpc::InfoRequest*
Arena::CreateMaybeMessage< ::injective_meta_rpc::InfoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective_meta_rpc::InfoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::injective_meta_rpc::InfoResponse_BuildEntry_DoNotUse*
Arena::CreateMaybeMessage< ::injective_meta_rpc::InfoResponse_BuildEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective_meta_rpc::InfoResponse_BuildEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective_meta_rpc::InfoResponse*
Arena::CreateMaybeMessage< ::injective_meta_rpc::InfoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective_meta_rpc::InfoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective_meta_rpc::StreamKeepaliveRequest*
Arena::CreateMaybeMessage< ::injective_meta_rpc::StreamKeepaliveRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective_meta_rpc::StreamKeepaliveRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::injective_meta_rpc::StreamKeepaliveResponse*
Arena::CreateMaybeMessage< ::injective_meta_rpc::StreamKeepaliveResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective_meta_rpc::StreamKeepaliveResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
