// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: amino/amino.proto

#include "amino/amino.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace amino {
}  // namespace amino
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_amino_2famino_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_amino_2famino_2eproto = nullptr;
const ::uint32_t TableStruct_amino_2famino_2eproto::offsets[1] = {};
static constexpr ::_pbi::MigrationSchema* schemas = nullptr;
static constexpr ::_pb::Message* const* file_default_instances = nullptr;
const char descriptor_table_protodef_amino_2famino_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\021amino/amino.proto\022\005amino\032 google/proto"
    "buf/descriptor.proto:6\n\004name\022\037.google.pr"
    "otobuf.MessageOptions\030\361\214\246\005 \001(\tR\004name:M\n\020"
    "message_encoding\022\037.google.protobuf.Messa"
    "geOptions\030\362\214\246\005 \001(\tR\017messageEncoding:<\n\010e"
    "ncoding\022\035.google.protobuf.FieldOptions\030\363"
    "\214\246\005 \001(\tR\010encoding:\?\n\nfield_name\022\035.google"
    ".protobuf.FieldOptions\030\364\214\246\005 \001(\tR\tfieldNa"
    "me:G\n\016dont_omitempty\022\035.google.protobuf.F"
    "ieldOptions\030\365\214\246\005 \001(\010R\rdontOmitemptyBx\n\tc"
    "om.aminoB\nAminoProtoP\001Z+github.com/cosmo"
    "s/cosmos-sdk/types/tx/amino\242\002\003AXX\252\002\005Amin"
    "o\312\002\005Amino\342\002\021Amino\\GPBMetadata\352\002\005Aminob\006p"
    "roto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_amino_2famino_2eproto_deps[1] =
    {
        &::descriptor_table_google_2fprotobuf_2fdescriptor_2eproto,
};
static ::absl::once_flag descriptor_table_amino_2famino_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_amino_2famino_2eproto = {
    false,
    false,
    525,
    descriptor_table_protodef_amino_2famino_2eproto,
    "amino/amino.proto",
    &descriptor_table_amino_2famino_2eproto_once,
    descriptor_table_amino_2famino_2eproto_deps,
    1,
    0,
    schemas,
    file_default_instances,
    TableStruct_amino_2famino_2eproto::offsets,
    nullptr,
    file_level_enum_descriptors_amino_2famino_2eproto,
    file_level_service_descriptors_amino_2famino_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_amino_2famino_2eproto_getter() {
  return &descriptor_table_amino_2famino_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_amino_2famino_2eproto(&descriptor_table_amino_2famino_2eproto);
namespace amino {
const std::string name_default("");
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::MessageOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::StringTypeTraits, 9, false>
  name(kNameFieldNumber, name_default, nullptr);
const std::string message_encoding_default("");
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::MessageOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::StringTypeTraits, 9, false>
  message_encoding(kMessageEncodingFieldNumber, message_encoding_default, nullptr);
const std::string encoding_default("");
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::FieldOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::StringTypeTraits, 9, false>
  encoding(kEncodingFieldNumber, encoding_default, nullptr);
const std::string field_name_default("");
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::FieldOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::StringTypeTraits, 9, false>
  field_name(kFieldNameFieldNumber, field_name_default, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::FieldOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< bool >, 8, false>
  dont_omitempty(kDontOmitemptyFieldNumber, false, nullptr);
// @@protoc_insertion_point(namespace_scope)
}  // namespace amino
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
