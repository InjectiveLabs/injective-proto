// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/staking/v1beta1/tx.proto

#include "cosmos/staking/v1beta1/tx.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace cosmos {
namespace staking {
namespace v1beta1 {
template <typename>
PROTOBUF_CONSTEXPR MsgCreateValidator::MsgCreateValidator(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.min_self_delegation_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.delegator_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.validator_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.description_)*/nullptr
  , /*decltype(_impl_.commission_)*/nullptr
  , /*decltype(_impl_.pubkey_)*/nullptr
  , /*decltype(_impl_.value_)*/nullptr} {}
struct MsgCreateValidatorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgCreateValidatorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgCreateValidatorDefaultTypeInternal() {}
  union {
    MsgCreateValidator _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgCreateValidatorDefaultTypeInternal _MsgCreateValidator_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgCreateValidatorResponse::MsgCreateValidatorResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgCreateValidatorResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgCreateValidatorResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgCreateValidatorResponseDefaultTypeInternal() {}
  union {
    MsgCreateValidatorResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgCreateValidatorResponseDefaultTypeInternal _MsgCreateValidatorResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgEditValidator::MsgEditValidator(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.validator_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.commission_rate_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.min_self_delegation_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.description_)*/nullptr} {}
struct MsgEditValidatorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgEditValidatorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgEditValidatorDefaultTypeInternal() {}
  union {
    MsgEditValidator _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgEditValidatorDefaultTypeInternal _MsgEditValidator_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgEditValidatorResponse::MsgEditValidatorResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgEditValidatorResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgEditValidatorResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgEditValidatorResponseDefaultTypeInternal() {}
  union {
    MsgEditValidatorResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgEditValidatorResponseDefaultTypeInternal _MsgEditValidatorResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgDelegate::MsgDelegate(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.delegator_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.validator_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.amount_)*/nullptr} {}
struct MsgDelegateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgDelegateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgDelegateDefaultTypeInternal() {}
  union {
    MsgDelegate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgDelegateDefaultTypeInternal _MsgDelegate_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgDelegateResponse::MsgDelegateResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgDelegateResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgDelegateResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgDelegateResponseDefaultTypeInternal() {}
  union {
    MsgDelegateResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgDelegateResponseDefaultTypeInternal _MsgDelegateResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgBeginRedelegate::MsgBeginRedelegate(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.delegator_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.validator_src_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.validator_dst_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.amount_)*/nullptr} {}
struct MsgBeginRedelegateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgBeginRedelegateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgBeginRedelegateDefaultTypeInternal() {}
  union {
    MsgBeginRedelegate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgBeginRedelegateDefaultTypeInternal _MsgBeginRedelegate_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgBeginRedelegateResponse::MsgBeginRedelegateResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.completion_time_)*/nullptr} {}
struct MsgBeginRedelegateResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgBeginRedelegateResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgBeginRedelegateResponseDefaultTypeInternal() {}
  union {
    MsgBeginRedelegateResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgBeginRedelegateResponseDefaultTypeInternal _MsgBeginRedelegateResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgUndelegate::MsgUndelegate(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.delegator_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.validator_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.amount_)*/nullptr} {}
struct MsgUndelegateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgUndelegateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgUndelegateDefaultTypeInternal() {}
  union {
    MsgUndelegate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgUndelegateDefaultTypeInternal _MsgUndelegate_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgUndelegateResponse::MsgUndelegateResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.completion_time_)*/nullptr} {}
struct MsgUndelegateResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgUndelegateResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgUndelegateResponseDefaultTypeInternal() {}
  union {
    MsgUndelegateResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgUndelegateResponseDefaultTypeInternal _MsgUndelegateResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgCancelUnbondingDelegation::MsgCancelUnbondingDelegation(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.delegator_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.validator_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.amount_)*/nullptr
  , /*decltype(_impl_.creation_height_)*/ ::int64_t{0}
} {}
struct MsgCancelUnbondingDelegationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgCancelUnbondingDelegationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgCancelUnbondingDelegationDefaultTypeInternal() {}
  union {
    MsgCancelUnbondingDelegation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgCancelUnbondingDelegationDefaultTypeInternal _MsgCancelUnbondingDelegation_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgCancelUnbondingDelegationResponse::MsgCancelUnbondingDelegationResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgCancelUnbondingDelegationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgCancelUnbondingDelegationResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgCancelUnbondingDelegationResponseDefaultTypeInternal() {}
  union {
    MsgCancelUnbondingDelegationResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgCancelUnbondingDelegationResponseDefaultTypeInternal _MsgCancelUnbondingDelegationResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgUpdateParams::MsgUpdateParams(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.authority_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.params_)*/nullptr} {}
struct MsgUpdateParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgUpdateParamsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgUpdateParamsDefaultTypeInternal() {}
  union {
    MsgUpdateParams _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgUpdateParamsDefaultTypeInternal _MsgUpdateParams_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgUpdateParamsResponse::MsgUpdateParamsResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgUpdateParamsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgUpdateParamsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgUpdateParamsResponseDefaultTypeInternal() {}
  union {
    MsgUpdateParamsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgUpdateParamsResponseDefaultTypeInternal _MsgUpdateParamsResponse_default_instance_;
}  // namespace v1beta1
}  // namespace staking
}  // namespace cosmos
static ::_pb::Metadata file_level_metadata_cosmos_2fstaking_2fv1beta1_2ftx_2eproto[14];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_cosmos_2fstaking_2fv1beta1_2ftx_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cosmos_2fstaking_2fv1beta1_2ftx_2eproto = nullptr;
const ::uint32_t TableStruct_cosmos_2fstaking_2fv1beta1_2ftx_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgCreateValidator, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgCreateValidator, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgCreateValidator, _impl_.description_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgCreateValidator, _impl_.commission_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgCreateValidator, _impl_.min_self_delegation_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgCreateValidator, _impl_.delegator_address_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgCreateValidator, _impl_.validator_address_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgCreateValidator, _impl_.pubkey_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgCreateValidator, _impl_.value_),
    0,
    1,
    ~0u,
    ~0u,
    ~0u,
    2,
    3,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgCreateValidatorResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgEditValidator, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgEditValidator, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgEditValidator, _impl_.description_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgEditValidator, _impl_.validator_address_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgEditValidator, _impl_.commission_rate_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgEditValidator, _impl_.min_self_delegation_),
    0,
    ~0u,
    ~0u,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgEditValidatorResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgDelegate, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgDelegate, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgDelegate, _impl_.delegator_address_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgDelegate, _impl_.validator_address_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgDelegate, _impl_.amount_),
    ~0u,
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgDelegateResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgBeginRedelegate, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgBeginRedelegate, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgBeginRedelegate, _impl_.delegator_address_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgBeginRedelegate, _impl_.validator_src_address_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgBeginRedelegate, _impl_.validator_dst_address_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgBeginRedelegate, _impl_.amount_),
    ~0u,
    ~0u,
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgBeginRedelegateResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgBeginRedelegateResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgBeginRedelegateResponse, _impl_.completion_time_),
    0,
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgUndelegate, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgUndelegate, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgUndelegate, _impl_.delegator_address_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgUndelegate, _impl_.validator_address_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgUndelegate, _impl_.amount_),
    ~0u,
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgUndelegateResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgUndelegateResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgUndelegateResponse, _impl_.completion_time_),
    0,
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgCancelUnbondingDelegation, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgCancelUnbondingDelegation, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgCancelUnbondingDelegation, _impl_.delegator_address_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgCancelUnbondingDelegation, _impl_.validator_address_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgCancelUnbondingDelegation, _impl_.amount_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgCancelUnbondingDelegation, _impl_.creation_height_),
    ~0u,
    ~0u,
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgCancelUnbondingDelegationResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgUpdateParams, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgUpdateParams, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgUpdateParams, _impl_.authority_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgUpdateParams, _impl_.params_),
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgUpdateParamsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, 15, -1, sizeof(::cosmos::staking::v1beta1::MsgCreateValidator)},
        { 22, -1, -1, sizeof(::cosmos::staking::v1beta1::MsgCreateValidatorResponse)},
        { 30, 42, -1, sizeof(::cosmos::staking::v1beta1::MsgEditValidator)},
        { 46, -1, -1, sizeof(::cosmos::staking::v1beta1::MsgEditValidatorResponse)},
        { 54, 65, -1, sizeof(::cosmos::staking::v1beta1::MsgDelegate)},
        { 68, -1, -1, sizeof(::cosmos::staking::v1beta1::MsgDelegateResponse)},
        { 76, 88, -1, sizeof(::cosmos::staking::v1beta1::MsgBeginRedelegate)},
        { 92, 101, -1, sizeof(::cosmos::staking::v1beta1::MsgBeginRedelegateResponse)},
        { 102, 113, -1, sizeof(::cosmos::staking::v1beta1::MsgUndelegate)},
        { 116, 125, -1, sizeof(::cosmos::staking::v1beta1::MsgUndelegateResponse)},
        { 126, 138, -1, sizeof(::cosmos::staking::v1beta1::MsgCancelUnbondingDelegation)},
        { 142, -1, -1, sizeof(::cosmos::staking::v1beta1::MsgCancelUnbondingDelegationResponse)},
        { 150, 160, -1, sizeof(::cosmos::staking::v1beta1::MsgUpdateParams)},
        { 162, -1, -1, sizeof(::cosmos::staking::v1beta1::MsgUpdateParamsResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::cosmos::staking::v1beta1::_MsgCreateValidator_default_instance_._instance,
    &::cosmos::staking::v1beta1::_MsgCreateValidatorResponse_default_instance_._instance,
    &::cosmos::staking::v1beta1::_MsgEditValidator_default_instance_._instance,
    &::cosmos::staking::v1beta1::_MsgEditValidatorResponse_default_instance_._instance,
    &::cosmos::staking::v1beta1::_MsgDelegate_default_instance_._instance,
    &::cosmos::staking::v1beta1::_MsgDelegateResponse_default_instance_._instance,
    &::cosmos::staking::v1beta1::_MsgBeginRedelegate_default_instance_._instance,
    &::cosmos::staking::v1beta1::_MsgBeginRedelegateResponse_default_instance_._instance,
    &::cosmos::staking::v1beta1::_MsgUndelegate_default_instance_._instance,
    &::cosmos::staking::v1beta1::_MsgUndelegateResponse_default_instance_._instance,
    &::cosmos::staking::v1beta1::_MsgCancelUnbondingDelegation_default_instance_._instance,
    &::cosmos::staking::v1beta1::_MsgCancelUnbondingDelegationResponse_default_instance_._instance,
    &::cosmos::staking::v1beta1::_MsgUpdateParams_default_instance_._instance,
    &::cosmos::staking::v1beta1::_MsgUpdateParamsResponse_default_instance_._instance,
};
const char descriptor_table_protodef_cosmos_2fstaking_2fv1beta1_2ftx_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\037cosmos/staking/v1beta1/tx.proto\022\026cosmo"
    "s.staking.v1beta1\032\031google/protobuf/any.p"
    "roto\032\037google/protobuf/timestamp.proto\032\024g"
    "ogoproto/gogo.proto\032\031cosmos_proto/cosmos"
    ".proto\032\036cosmos/base/v1beta1/coin.proto\032$"
    "cosmos/staking/v1beta1/staking.proto\032\027co"
    "smos/msg/v1/msg.proto\032\021amino/amino.proto"
    "\"\222\005\n\022MsgCreateValidator\022P\n\013description\030\001"
    " \001(\0132#.cosmos.staking.v1beta1.Descriptio"
    "nB\t\310\336\037\000\250\347\260*\001R\013description\022R\n\ncommission\030"
    "\002 \001(\0132\'.cosmos.staking.v1beta1.Commissio"
    "nRatesB\t\310\336\037\000\250\347\260*\001R\ncommission\022l\n\023min_sel"
    "f_delegation\030\003 \001(\tB<\310\336\037\000\332\336\037&github.com/c"
    "osmos/cosmos-sdk/types.Int\322\264-\ncosmos.Int"
    "R\021minSelfDelegation\022E\n\021delegator_address"
    "\030\004 \001(\tB\030\322\264-\024cosmos.AddressStringR\020delega"
    "torAddress\022E\n\021validator_address\030\005 \001(\tB\030\322"
    "\264-\024cosmos.AddressStringR\020validatorAddres"
    "s\022F\n\006pubkey\030\006 \001(\0132\024.google.protobuf.AnyB"
    "\030\312\264-\024cosmos.crypto.PubKeyR\006pubkey\022:\n\005val"
    "ue\030\007 \001(\0132\031.cosmos.base.v1beta1.CoinB\t\310\336\037"
    "\000\250\347\260*\001R\005value:V\210\240\037\000\350\240\037\000\202\347\260*\021delegator_ad"
    "dress\202\347\260*\021validator_address\212\347\260*\035cosmos-s"
    "dk/MsgCreateValidator\"\034\n\032MsgCreateValida"
    "torResponse\"\270\003\n\020MsgEditValidator\022P\n\013desc"
    "ription\030\001 \001(\0132#.cosmos.staking.v1beta1.D"
    "escriptionB\t\310\336\037\000\250\347\260*\001R\013description\022E\n\021va"
    "lidator_address\030\002 \001(\tB\030\322\264-\024cosmos.Addres"
    "sStringR\020validatorAddress\022a\n\017commission_"
    "rate\030\003 \001(\tB8\332\336\037&github.com/cosmos/cosmos"
    "-sdk/types.Dec\322\264-\ncosmos.DecR\016commission"
    "Rate\022h\n\023min_self_delegation\030\004 \001(\tB8\332\336\037&g"
    "ithub.com/cosmos/cosmos-sdk/types.Int\322\264-"
    "\ncosmos.IntR\021minSelfDelegation:>\210\240\037\000\350\240\037\000"
    "\202\347\260*\021validator_address\212\347\260*\033cosmos-sdk/Ms"
    "gEditValidator\"\032\n\030MsgEditValidatorRespon"
    "se\"\224\002\n\013MsgDelegate\022E\n\021delegator_address\030"
    "\001 \001(\tB\030\322\264-\024cosmos.AddressStringR\020delegat"
    "orAddress\022E\n\021validator_address\030\002 \001(\tB\030\322\264"
    "-\024cosmos.AddressStringR\020validatorAddress"
    "\022<\n\006amount\030\003 \001(\0132\031.cosmos.base.v1beta1.C"
    "oinB\t\310\336\037\000\250\347\260*\001R\006amount:9\210\240\037\000\350\240\037\000\202\347\260*\021del"
    "egator_address\212\347\260*\026cosmos-sdk/MsgDelegat"
    "e\"\025\n\023MsgDelegateResponse\"\367\002\n\022MsgBeginRed"
    "elegate\022E\n\021delegator_address\030\001 \001(\tB\030\322\264-\024"
    "cosmos.AddressStringR\020delegatorAddress\022L"
    "\n\025validator_src_address\030\002 \001(\tB\030\322\264-\024cosmo"
    "s.AddressStringR\023validatorSrcAddress\022L\n\025"
    "validator_dst_address\030\003 \001(\tB\030\322\264-\024cosmos."
    "AddressStringR\023validatorDstAddress\022<\n\006am"
    "ount\030\004 \001(\0132\031.cosmos.base.v1beta1.CoinB\t\310"
    "\336\037\000\250\347\260*\001R\006amount:@\210\240\037\000\350\240\037\000\202\347\260*\021delegator"
    "_address\212\347\260*\035cosmos-sdk/MsgBeginRedelega"
    "te\"p\n\032MsgBeginRedelegateResponse\022R\n\017comp"
    "letion_time\030\001 \001(\0132\032.google.protobuf.Time"
    "stampB\r\310\336\037\000\220\337\037\001\250\347\260*\001R\016completionTime\"\230\002\n"
    "\rMsgUndelegate\022E\n\021delegator_address\030\001 \001("
    "\tB\030\322\264-\024cosmos.AddressStringR\020delegatorAd"
    "dress\022E\n\021validator_address\030\002 \001(\tB\030\322\264-\024co"
    "smos.AddressStringR\020validatorAddress\022<\n\006"
    "amount\030\003 \001(\0132\031.cosmos.base.v1beta1.CoinB"
    "\t\310\336\037\000\250\347\260*\001R\006amount:;\210\240\037\000\350\240\037\000\202\347\260*\021delegat"
    "or_address\212\347\260*\030cosmos-sdk/MsgUndelegate\""
    "k\n\025MsgUndelegateResponse\022R\n\017completion_t"
    "ime\030\001 \001(\0132\032.google.protobuf.TimestampB\r\310"
    "\336\037\000\220\337\037\001\250\347\260*\001R\016completionTime\"\337\002\n\034MsgCanc"
    "elUnbondingDelegation\022E\n\021delegator_addre"
    "ss\030\001 \001(\tB\030\322\264-\024cosmos.AddressStringR\020dele"
    "gatorAddress\022E\n\021validator_address\030\002 \001(\tB"
    "\030\322\264-\024cosmos.AddressStringR\020validatorAddr"
    "ess\022<\n\006amount\030\003 \001(\0132\031.cosmos.base.v1beta"
    "1.CoinB\t\310\336\037\000\250\347\260*\001R\006amount\022\'\n\017creation_he"
    "ight\030\004 \001(\003R\016creationHeight:J\210\240\037\000\350\240\037\000\202\347\260*"
    "\021delegator_address\212\347\260*\'cosmos-sdk/MsgCan"
    "celUnbondingDelegation\"&\n$MsgCancelUnbon"
    "dingDelegationResponse\"\305\001\n\017MsgUpdatePara"
    "ms\0226\n\tauthority\030\001 \001(\tB\030\322\264-\024cosmos.Addres"
    "sStringR\tauthority\022A\n\006params\030\002 \001(\0132\036.cos"
    "mos.staking.v1beta1.ParamsB\t\310\336\037\000\250\347\260*\001R\006p"
    "arams:7\202\347\260*\tauthority\212\347\260*$cosmos-sdk/x/s"
    "taking/MsgUpdateParams\"\031\n\027MsgUpdateParam"
    "sResponse2\235\006\n\003Msg\022q\n\017CreateValidator\022*.c"
    "osmos.staking.v1beta1.MsgCreateValidator"
    "\0322.cosmos.staking.v1beta1.MsgCreateValid"
    "atorResponse\022k\n\rEditValidator\022(.cosmos.s"
    "taking.v1beta1.MsgEditValidator\0320.cosmos"
    ".staking.v1beta1.MsgEditValidatorRespons"
    "e\022\\\n\010Delegate\022#.cosmos.staking.v1beta1.M"
    "sgDelegate\032+.cosmos.staking.v1beta1.MsgD"
    "elegateResponse\022q\n\017BeginRedelegate\022*.cos"
    "mos.staking.v1beta1.MsgBeginRedelegate\0322"
    ".cosmos.staking.v1beta1.MsgBeginRedelega"
    "teResponse\022b\n\nUndelegate\022%.cosmos.stakin"
    "g.v1beta1.MsgUndelegate\032-.cosmos.staking"
    ".v1beta1.MsgUndelegateResponse\022\217\001\n\031Cance"
    "lUnbondingDelegation\0224.cosmos.staking.v1"
    "beta1.MsgCancelUnbondingDelegation\032<.cos"
    "mos.staking.v1beta1.MsgCancelUnbondingDe"
    "legationResponse\022h\n\014UpdateParams\022\'.cosmo"
    "s.staking.v1beta1.MsgUpdateParams\032/.cosm"
    "os.staking.v1beta1.MsgUpdateParamsRespon"
    "se\032\005\200\347\260*\001B\315\001\n\032com.cosmos.staking.v1beta1"
    "B\007TxProtoP\001Z,github.com/cosmos/cosmos-sd"
    "k/x/staking/types\242\002\003CSX\252\002\026Cosmos.Staking"
    ".V1beta1\312\002\026Cosmos\\Staking\\V1beta1\342\002\"Cosm"
    "os\\Staking\\V1beta1\\GPBMetadata\352\002\030Cosmos:"
    ":Staking::V1beta1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_cosmos_2fstaking_2fv1beta1_2ftx_2eproto_deps[8] =
    {
        &::descriptor_table_amino_2famino_2eproto,
        &::descriptor_table_cosmos_2fbase_2fv1beta1_2fcoin_2eproto,
        &::descriptor_table_cosmos_2fmsg_2fv1_2fmsg_2eproto,
        &::descriptor_table_cosmos_2fstaking_2fv1beta1_2fstaking_2eproto,
        &::descriptor_table_cosmos_5fproto_2fcosmos_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_google_2fprotobuf_2fany_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_cosmos_2fstaking_2fv1beta1_2ftx_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_cosmos_2fstaking_2fv1beta1_2ftx_2eproto = {
    false,
    false,
    4265,
    descriptor_table_protodef_cosmos_2fstaking_2fv1beta1_2ftx_2eproto,
    "cosmos/staking/v1beta1/tx.proto",
    &descriptor_table_cosmos_2fstaking_2fv1beta1_2ftx_2eproto_once,
    descriptor_table_cosmos_2fstaking_2fv1beta1_2ftx_2eproto_deps,
    8,
    14,
    schemas,
    file_default_instances,
    TableStruct_cosmos_2fstaking_2fv1beta1_2ftx_2eproto::offsets,
    file_level_metadata_cosmos_2fstaking_2fv1beta1_2ftx_2eproto,
    file_level_enum_descriptors_cosmos_2fstaking_2fv1beta1_2ftx_2eproto,
    file_level_service_descriptors_cosmos_2fstaking_2fv1beta1_2ftx_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_cosmos_2fstaking_2fv1beta1_2ftx_2eproto_getter() {
  return &descriptor_table_cosmos_2fstaking_2fv1beta1_2ftx_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_cosmos_2fstaking_2fv1beta1_2ftx_2eproto(&descriptor_table_cosmos_2fstaking_2fv1beta1_2ftx_2eproto);
namespace cosmos {
namespace staking {
namespace v1beta1 {
// ===================================================================

class MsgCreateValidator::_Internal {
 public:
  using HasBits = decltype(std::declval<MsgCreateValidator>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MsgCreateValidator, _impl_._has_bits_);
  static const ::cosmos::staking::v1beta1::Description& description(const MsgCreateValidator* msg);
  static void set_has_description(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::cosmos::staking::v1beta1::CommissionRates& commission(const MsgCreateValidator* msg);
  static void set_has_commission(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Any& pubkey(const MsgCreateValidator* msg);
  static void set_has_pubkey(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::cosmos::base::v1beta1::Coin& value(const MsgCreateValidator* msg);
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::cosmos::staking::v1beta1::Description&
MsgCreateValidator::_Internal::description(const MsgCreateValidator* msg) {
  return *msg->_impl_.description_;
}
const ::cosmos::staking::v1beta1::CommissionRates&
MsgCreateValidator::_Internal::commission(const MsgCreateValidator* msg) {
  return *msg->_impl_.commission_;
}
const ::PROTOBUF_NAMESPACE_ID::Any&
MsgCreateValidator::_Internal::pubkey(const MsgCreateValidator* msg) {
  return *msg->_impl_.pubkey_;
}
const ::cosmos::base::v1beta1::Coin&
MsgCreateValidator::_Internal::value(const MsgCreateValidator* msg) {
  return *msg->_impl_.value_;
}
void MsgCreateValidator::clear_description() {
  if (_impl_.description_ != nullptr) _impl_.description_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void MsgCreateValidator::clear_commission() {
  if (_impl_.commission_ != nullptr) _impl_.commission_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void MsgCreateValidator::clear_pubkey() {
  if (_impl_.pubkey_ != nullptr) _impl_.pubkey_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void MsgCreateValidator::clear_value() {
  if (_impl_.value_ != nullptr) _impl_.value_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
MsgCreateValidator::MsgCreateValidator(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.MsgCreateValidator)
}
MsgCreateValidator::MsgCreateValidator(const MsgCreateValidator& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgCreateValidator* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.min_self_delegation_) {}

    , decltype(_impl_.delegator_address_) {}

    , decltype(_impl_.validator_address_) {}

    , decltype(_impl_.description_){nullptr}
    , decltype(_impl_.commission_){nullptr}
    , decltype(_impl_.pubkey_){nullptr}
    , decltype(_impl_.value_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.min_self_delegation_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.min_self_delegation_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_min_self_delegation().empty()) {
    _this->_impl_.min_self_delegation_.Set(from._internal_min_self_delegation(), _this->GetArenaForAllocation());
  }
  _impl_.delegator_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.delegator_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_delegator_address().empty()) {
    _this->_impl_.delegator_address_.Set(from._internal_delegator_address(), _this->GetArenaForAllocation());
  }
  _impl_.validator_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.validator_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_validator_address().empty()) {
    _this->_impl_.validator_address_.Set(from._internal_validator_address(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.description_ = new ::cosmos::staking::v1beta1::Description(*from._impl_.description_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.commission_ = new ::cosmos::staking::v1beta1::CommissionRates(*from._impl_.commission_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.pubkey_ = new ::PROTOBUF_NAMESPACE_ID::Any(*from._impl_.pubkey_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000008u) != 0) {
    _this->_impl_.value_ = new ::cosmos::base::v1beta1::Coin(*from._impl_.value_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.MsgCreateValidator)
}

inline void MsgCreateValidator::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.min_self_delegation_) {}

    , decltype(_impl_.delegator_address_) {}

    , decltype(_impl_.validator_address_) {}

    , decltype(_impl_.description_){nullptr}
    , decltype(_impl_.commission_){nullptr}
    , decltype(_impl_.pubkey_){nullptr}
    , decltype(_impl_.value_){nullptr}
  };
  _impl_.min_self_delegation_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.min_self_delegation_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.delegator_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.delegator_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.validator_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.validator_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgCreateValidator::~MsgCreateValidator() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.MsgCreateValidator)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgCreateValidator::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.min_self_delegation_.Destroy();
  _impl_.delegator_address_.Destroy();
  _impl_.validator_address_.Destroy();
  if (this != internal_default_instance()) delete _impl_.description_;
  if (this != internal_default_instance()) delete _impl_.commission_;
  if (this != internal_default_instance()) delete _impl_.pubkey_;
  if (this != internal_default_instance()) delete _impl_.value_;
}

void MsgCreateValidator::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgCreateValidator::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.MsgCreateValidator)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.min_self_delegation_.ClearToEmpty();
  _impl_.delegator_address_.ClearToEmpty();
  _impl_.validator_address_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.description_ != nullptr);
      _impl_.description_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.commission_ != nullptr);
      _impl_.commission_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.pubkey_ != nullptr);
      _impl_.pubkey_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.value_ != nullptr);
      _impl_.value_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgCreateValidator::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cosmos.staking.v1beta1.Description description = 1 [json_name = "description", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_description(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.staking.v1beta1.CommissionRates commission = 2 [json_name = "commission", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_commission(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string min_self_delegation = 3 [json_name = "minSelfDelegation", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (.cosmos_proto.scalar) = "cosmos.Int"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_min_self_delegation();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.staking.v1beta1.MsgCreateValidator.min_self_delegation"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string delegator_address = 4 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_delegator_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.staking.v1beta1.MsgCreateValidator.delegator_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string validator_address = 5 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_validator_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.staking.v1beta1.MsgCreateValidator.validator_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .google.protobuf.Any pubkey = 6 [json_name = "pubkey", (.cosmos_proto.accepts_interface) = "cosmos.crypto.PubKey"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_pubkey(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.v1beta1.Coin value = 7 [json_name = "value", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgCreateValidator::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.MsgCreateValidator)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.staking.v1beta1.Description description = 1 [json_name = "description", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::description(this),
        _Internal::description(this).GetCachedSize(), target, stream);
  }

  // .cosmos.staking.v1beta1.CommissionRates commission = 2 [json_name = "commission", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::commission(this),
        _Internal::commission(this).GetCachedSize(), target, stream);
  }

  // string min_self_delegation = 3 [json_name = "minSelfDelegation", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (.cosmos_proto.scalar) = "cosmos.Int"];
  if (!this->_internal_min_self_delegation().empty()) {
    const std::string& _s = this->_internal_min_self_delegation();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.MsgCreateValidator.min_self_delegation");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string delegator_address = 4 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_delegator_address().empty()) {
    const std::string& _s = this->_internal_delegator_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.MsgCreateValidator.delegator_address");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string validator_address = 5 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_validator_address().empty()) {
    const std::string& _s = this->_internal_validator_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.MsgCreateValidator.validator_address");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // .google.protobuf.Any pubkey = 6 [json_name = "pubkey", (.cosmos_proto.accepts_interface) = "cosmos.crypto.PubKey"];
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::pubkey(this),
        _Internal::pubkey(this).GetCachedSize(), target, stream);
  }

  // .cosmos.base.v1beta1.Coin value = 7 [json_name = "value", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::value(this),
        _Internal::value(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.MsgCreateValidator)
  return target;
}

::size_t MsgCreateValidator::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.MsgCreateValidator)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string min_self_delegation = 3 [json_name = "minSelfDelegation", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (.cosmos_proto.scalar) = "cosmos.Int"];
  if (!this->_internal_min_self_delegation().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_min_self_delegation());
  }

  // string delegator_address = 4 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_delegator_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_delegator_address());
  }

  // string validator_address = 5 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_validator_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_validator_address());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // .cosmos.staking.v1beta1.Description description = 1 [json_name = "description", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.description_);
    }

    // .cosmos.staking.v1beta1.CommissionRates commission = 2 [json_name = "commission", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.commission_);
    }

    // .google.protobuf.Any pubkey = 6 [json_name = "pubkey", (.cosmos_proto.accepts_interface) = "cosmos.crypto.PubKey"];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.pubkey_);
    }

    // .cosmos.base.v1beta1.Coin value = 7 [json_name = "value", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.value_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgCreateValidator::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgCreateValidator::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgCreateValidator::GetClassData() const { return &_class_data_; }


void MsgCreateValidator::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgCreateValidator*>(&to_msg);
  auto& from = static_cast<const MsgCreateValidator&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.MsgCreateValidator)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_min_self_delegation().empty()) {
    _this->_internal_set_min_self_delegation(from._internal_min_self_delegation());
  }
  if (!from._internal_delegator_address().empty()) {
    _this->_internal_set_delegator_address(from._internal_delegator_address());
  }
  if (!from._internal_validator_address().empty()) {
    _this->_internal_set_validator_address(from._internal_validator_address());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_description()->::cosmos::staking::v1beta1::Description::MergeFrom(
          from._internal_description());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_commission()->::cosmos::staking::v1beta1::CommissionRates::MergeFrom(
          from._internal_commission());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_pubkey()->::PROTOBUF_NAMESPACE_ID::Any::MergeFrom(
          from._internal_pubkey());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_value()->::cosmos::base::v1beta1::Coin::MergeFrom(
          from._internal_value());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgCreateValidator::CopyFrom(const MsgCreateValidator& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.MsgCreateValidator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgCreateValidator::IsInitialized() const {
  return true;
}

void MsgCreateValidator::InternalSwap(MsgCreateValidator* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.min_self_delegation_, lhs_arena,
                                       &other->_impl_.min_self_delegation_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.delegator_address_, lhs_arena,
                                       &other->_impl_.delegator_address_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.validator_address_, lhs_arena,
                                       &other->_impl_.validator_address_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MsgCreateValidator, _impl_.value_)
      + sizeof(MsgCreateValidator::_impl_.value_)
      - PROTOBUF_FIELD_OFFSET(MsgCreateValidator, _impl_.description_)>(
          reinterpret_cast<char*>(&_impl_.description_),
          reinterpret_cast<char*>(&other->_impl_.description_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgCreateValidator::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fstaking_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fstaking_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fstaking_2fv1beta1_2ftx_2eproto[0]);
}
// ===================================================================

class MsgCreateValidatorResponse::_Internal {
 public:
};

MsgCreateValidatorResponse::MsgCreateValidatorResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.MsgCreateValidatorResponse)
}
MsgCreateValidatorResponse::MsgCreateValidatorResponse(const MsgCreateValidatorResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgCreateValidatorResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.MsgCreateValidatorResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgCreateValidatorResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgCreateValidatorResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgCreateValidatorResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fstaking_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fstaking_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fstaking_2fv1beta1_2ftx_2eproto[1]);
}
// ===================================================================

class MsgEditValidator::_Internal {
 public:
  using HasBits = decltype(std::declval<MsgEditValidator>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MsgEditValidator, _impl_._has_bits_);
  static const ::cosmos::staking::v1beta1::Description& description(const MsgEditValidator* msg);
  static void set_has_description(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::staking::v1beta1::Description&
MsgEditValidator::_Internal::description(const MsgEditValidator* msg) {
  return *msg->_impl_.description_;
}
void MsgEditValidator::clear_description() {
  if (_impl_.description_ != nullptr) _impl_.description_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
MsgEditValidator::MsgEditValidator(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.MsgEditValidator)
}
MsgEditValidator::MsgEditValidator(const MsgEditValidator& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgEditValidator* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.validator_address_) {}

    , decltype(_impl_.commission_rate_) {}

    , decltype(_impl_.min_self_delegation_) {}

    , decltype(_impl_.description_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.validator_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.validator_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_validator_address().empty()) {
    _this->_impl_.validator_address_.Set(from._internal_validator_address(), _this->GetArenaForAllocation());
  }
  _impl_.commission_rate_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.commission_rate_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_commission_rate().empty()) {
    _this->_impl_.commission_rate_.Set(from._internal_commission_rate(), _this->GetArenaForAllocation());
  }
  _impl_.min_self_delegation_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.min_self_delegation_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_min_self_delegation().empty()) {
    _this->_impl_.min_self_delegation_.Set(from._internal_min_self_delegation(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.description_ = new ::cosmos::staking::v1beta1::Description(*from._impl_.description_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.MsgEditValidator)
}

inline void MsgEditValidator::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.validator_address_) {}

    , decltype(_impl_.commission_rate_) {}

    , decltype(_impl_.min_self_delegation_) {}

    , decltype(_impl_.description_){nullptr}
  };
  _impl_.validator_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.validator_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.commission_rate_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.commission_rate_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.min_self_delegation_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.min_self_delegation_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgEditValidator::~MsgEditValidator() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.MsgEditValidator)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgEditValidator::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.validator_address_.Destroy();
  _impl_.commission_rate_.Destroy();
  _impl_.min_self_delegation_.Destroy();
  if (this != internal_default_instance()) delete _impl_.description_;
}

void MsgEditValidator::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgEditValidator::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.MsgEditValidator)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.validator_address_.ClearToEmpty();
  _impl_.commission_rate_.ClearToEmpty();
  _impl_.min_self_delegation_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.description_ != nullptr);
    _impl_.description_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgEditValidator::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cosmos.staking.v1beta1.Description description = 1 [json_name = "description", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_description(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string validator_address = 2 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_validator_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.staking.v1beta1.MsgEditValidator.validator_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string commission_rate = 3 [json_name = "commissionRate", (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.cosmos_proto.scalar) = "cosmos.Dec"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_commission_rate();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.staking.v1beta1.MsgEditValidator.commission_rate"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string min_self_delegation = 4 [json_name = "minSelfDelegation", (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (.cosmos_proto.scalar) = "cosmos.Int"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_min_self_delegation();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.staking.v1beta1.MsgEditValidator.min_self_delegation"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgEditValidator::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.MsgEditValidator)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.staking.v1beta1.Description description = 1 [json_name = "description", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::description(this),
        _Internal::description(this).GetCachedSize(), target, stream);
  }

  // string validator_address = 2 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_validator_address().empty()) {
    const std::string& _s = this->_internal_validator_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.MsgEditValidator.validator_address");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string commission_rate = 3 [json_name = "commissionRate", (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.cosmos_proto.scalar) = "cosmos.Dec"];
  if (!this->_internal_commission_rate().empty()) {
    const std::string& _s = this->_internal_commission_rate();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.MsgEditValidator.commission_rate");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string min_self_delegation = 4 [json_name = "minSelfDelegation", (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (.cosmos_proto.scalar) = "cosmos.Int"];
  if (!this->_internal_min_self_delegation().empty()) {
    const std::string& _s = this->_internal_min_self_delegation();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.MsgEditValidator.min_self_delegation");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.MsgEditValidator)
  return target;
}

::size_t MsgEditValidator::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.MsgEditValidator)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string validator_address = 2 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_validator_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_validator_address());
  }

  // string commission_rate = 3 [json_name = "commissionRate", (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.cosmos_proto.scalar) = "cosmos.Dec"];
  if (!this->_internal_commission_rate().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_commission_rate());
  }

  // string min_self_delegation = 4 [json_name = "minSelfDelegation", (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (.cosmos_proto.scalar) = "cosmos.Int"];
  if (!this->_internal_min_self_delegation().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_min_self_delegation());
  }

  // .cosmos.staking.v1beta1.Description description = 1 [json_name = "description", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.description_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgEditValidator::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgEditValidator::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgEditValidator::GetClassData() const { return &_class_data_; }


void MsgEditValidator::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgEditValidator*>(&to_msg);
  auto& from = static_cast<const MsgEditValidator&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.MsgEditValidator)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_validator_address().empty()) {
    _this->_internal_set_validator_address(from._internal_validator_address());
  }
  if (!from._internal_commission_rate().empty()) {
    _this->_internal_set_commission_rate(from._internal_commission_rate());
  }
  if (!from._internal_min_self_delegation().empty()) {
    _this->_internal_set_min_self_delegation(from._internal_min_self_delegation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_description()->::cosmos::staking::v1beta1::Description::MergeFrom(
        from._internal_description());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgEditValidator::CopyFrom(const MsgEditValidator& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.MsgEditValidator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgEditValidator::IsInitialized() const {
  return true;
}

void MsgEditValidator::InternalSwap(MsgEditValidator* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.validator_address_, lhs_arena,
                                       &other->_impl_.validator_address_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.commission_rate_, lhs_arena,
                                       &other->_impl_.commission_rate_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.min_self_delegation_, lhs_arena,
                                       &other->_impl_.min_self_delegation_, rhs_arena);
  swap(_impl_.description_, other->_impl_.description_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgEditValidator::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fstaking_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fstaking_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fstaking_2fv1beta1_2ftx_2eproto[2]);
}
// ===================================================================

class MsgEditValidatorResponse::_Internal {
 public:
};

MsgEditValidatorResponse::MsgEditValidatorResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.MsgEditValidatorResponse)
}
MsgEditValidatorResponse::MsgEditValidatorResponse(const MsgEditValidatorResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgEditValidatorResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.MsgEditValidatorResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgEditValidatorResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgEditValidatorResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgEditValidatorResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fstaking_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fstaking_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fstaking_2fv1beta1_2ftx_2eproto[3]);
}
// ===================================================================

class MsgDelegate::_Internal {
 public:
  using HasBits = decltype(std::declval<MsgDelegate>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MsgDelegate, _impl_._has_bits_);
  static const ::cosmos::base::v1beta1::Coin& amount(const MsgDelegate* msg);
  static void set_has_amount(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::v1beta1::Coin&
MsgDelegate::_Internal::amount(const MsgDelegate* msg) {
  return *msg->_impl_.amount_;
}
void MsgDelegate::clear_amount() {
  if (_impl_.amount_ != nullptr) _impl_.amount_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
MsgDelegate::MsgDelegate(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.MsgDelegate)
}
MsgDelegate::MsgDelegate(const MsgDelegate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgDelegate* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.delegator_address_) {}

    , decltype(_impl_.validator_address_) {}

    , decltype(_impl_.amount_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.delegator_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.delegator_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_delegator_address().empty()) {
    _this->_impl_.delegator_address_.Set(from._internal_delegator_address(), _this->GetArenaForAllocation());
  }
  _impl_.validator_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.validator_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_validator_address().empty()) {
    _this->_impl_.validator_address_.Set(from._internal_validator_address(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.amount_ = new ::cosmos::base::v1beta1::Coin(*from._impl_.amount_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.MsgDelegate)
}

inline void MsgDelegate::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.delegator_address_) {}

    , decltype(_impl_.validator_address_) {}

    , decltype(_impl_.amount_){nullptr}
  };
  _impl_.delegator_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.delegator_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.validator_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.validator_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgDelegate::~MsgDelegate() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.MsgDelegate)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgDelegate::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.delegator_address_.Destroy();
  _impl_.validator_address_.Destroy();
  if (this != internal_default_instance()) delete _impl_.amount_;
}

void MsgDelegate::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgDelegate::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.MsgDelegate)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.delegator_address_.ClearToEmpty();
  _impl_.validator_address_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.amount_ != nullptr);
    _impl_.amount_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgDelegate::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_delegator_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.staking.v1beta1.MsgDelegate.delegator_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string validator_address = 2 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_validator_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.staking.v1beta1.MsgDelegate.validator_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_amount(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgDelegate::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.MsgDelegate)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_delegator_address().empty()) {
    const std::string& _s = this->_internal_delegator_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.MsgDelegate.delegator_address");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string validator_address = 2 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_validator_address().empty()) {
    const std::string& _s = this->_internal_validator_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.MsgDelegate.validator_address");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::amount(this),
        _Internal::amount(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.MsgDelegate)
  return target;
}

::size_t MsgDelegate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.MsgDelegate)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_delegator_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_delegator_address());
  }

  // string validator_address = 2 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_validator_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_validator_address());
  }

  // .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.amount_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgDelegate::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgDelegate::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgDelegate::GetClassData() const { return &_class_data_; }


void MsgDelegate::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgDelegate*>(&to_msg);
  auto& from = static_cast<const MsgDelegate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.MsgDelegate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_delegator_address().empty()) {
    _this->_internal_set_delegator_address(from._internal_delegator_address());
  }
  if (!from._internal_validator_address().empty()) {
    _this->_internal_set_validator_address(from._internal_validator_address());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_amount()->::cosmos::base::v1beta1::Coin::MergeFrom(
        from._internal_amount());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgDelegate::CopyFrom(const MsgDelegate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.MsgDelegate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDelegate::IsInitialized() const {
  return true;
}

void MsgDelegate::InternalSwap(MsgDelegate* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.delegator_address_, lhs_arena,
                                       &other->_impl_.delegator_address_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.validator_address_, lhs_arena,
                                       &other->_impl_.validator_address_, rhs_arena);
  swap(_impl_.amount_, other->_impl_.amount_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgDelegate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fstaking_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fstaking_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fstaking_2fv1beta1_2ftx_2eproto[4]);
}
// ===================================================================

class MsgDelegateResponse::_Internal {
 public:
};

MsgDelegateResponse::MsgDelegateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.MsgDelegateResponse)
}
MsgDelegateResponse::MsgDelegateResponse(const MsgDelegateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgDelegateResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.MsgDelegateResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgDelegateResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgDelegateResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgDelegateResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fstaking_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fstaking_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fstaking_2fv1beta1_2ftx_2eproto[5]);
}
// ===================================================================

class MsgBeginRedelegate::_Internal {
 public:
  using HasBits = decltype(std::declval<MsgBeginRedelegate>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MsgBeginRedelegate, _impl_._has_bits_);
  static const ::cosmos::base::v1beta1::Coin& amount(const MsgBeginRedelegate* msg);
  static void set_has_amount(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::v1beta1::Coin&
MsgBeginRedelegate::_Internal::amount(const MsgBeginRedelegate* msg) {
  return *msg->_impl_.amount_;
}
void MsgBeginRedelegate::clear_amount() {
  if (_impl_.amount_ != nullptr) _impl_.amount_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
MsgBeginRedelegate::MsgBeginRedelegate(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.MsgBeginRedelegate)
}
MsgBeginRedelegate::MsgBeginRedelegate(const MsgBeginRedelegate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgBeginRedelegate* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.delegator_address_) {}

    , decltype(_impl_.validator_src_address_) {}

    , decltype(_impl_.validator_dst_address_) {}

    , decltype(_impl_.amount_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.delegator_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.delegator_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_delegator_address().empty()) {
    _this->_impl_.delegator_address_.Set(from._internal_delegator_address(), _this->GetArenaForAllocation());
  }
  _impl_.validator_src_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.validator_src_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_validator_src_address().empty()) {
    _this->_impl_.validator_src_address_.Set(from._internal_validator_src_address(), _this->GetArenaForAllocation());
  }
  _impl_.validator_dst_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.validator_dst_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_validator_dst_address().empty()) {
    _this->_impl_.validator_dst_address_.Set(from._internal_validator_dst_address(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.amount_ = new ::cosmos::base::v1beta1::Coin(*from._impl_.amount_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.MsgBeginRedelegate)
}

inline void MsgBeginRedelegate::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.delegator_address_) {}

    , decltype(_impl_.validator_src_address_) {}

    , decltype(_impl_.validator_dst_address_) {}

    , decltype(_impl_.amount_){nullptr}
  };
  _impl_.delegator_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.delegator_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.validator_src_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.validator_src_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.validator_dst_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.validator_dst_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgBeginRedelegate::~MsgBeginRedelegate() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.MsgBeginRedelegate)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgBeginRedelegate::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.delegator_address_.Destroy();
  _impl_.validator_src_address_.Destroy();
  _impl_.validator_dst_address_.Destroy();
  if (this != internal_default_instance()) delete _impl_.amount_;
}

void MsgBeginRedelegate::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgBeginRedelegate::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.MsgBeginRedelegate)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.delegator_address_.ClearToEmpty();
  _impl_.validator_src_address_.ClearToEmpty();
  _impl_.validator_dst_address_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.amount_ != nullptr);
    _impl_.amount_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgBeginRedelegate::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_delegator_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.staking.v1beta1.MsgBeginRedelegate.delegator_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string validator_src_address = 2 [json_name = "validatorSrcAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_validator_src_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.staking.v1beta1.MsgBeginRedelegate.validator_src_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string validator_dst_address = 3 [json_name = "validatorDstAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_validator_dst_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.staking.v1beta1.MsgBeginRedelegate.validator_dst_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.v1beta1.Coin amount = 4 [json_name = "amount", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_amount(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgBeginRedelegate::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.MsgBeginRedelegate)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_delegator_address().empty()) {
    const std::string& _s = this->_internal_delegator_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.MsgBeginRedelegate.delegator_address");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string validator_src_address = 2 [json_name = "validatorSrcAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_validator_src_address().empty()) {
    const std::string& _s = this->_internal_validator_src_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.MsgBeginRedelegate.validator_src_address");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string validator_dst_address = 3 [json_name = "validatorDstAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_validator_dst_address().empty()) {
    const std::string& _s = this->_internal_validator_dst_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.MsgBeginRedelegate.validator_dst_address");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.v1beta1.Coin amount = 4 [json_name = "amount", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::amount(this),
        _Internal::amount(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.MsgBeginRedelegate)
  return target;
}

::size_t MsgBeginRedelegate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.MsgBeginRedelegate)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_delegator_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_delegator_address());
  }

  // string validator_src_address = 2 [json_name = "validatorSrcAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_validator_src_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_validator_src_address());
  }

  // string validator_dst_address = 3 [json_name = "validatorDstAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_validator_dst_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_validator_dst_address());
  }

  // .cosmos.base.v1beta1.Coin amount = 4 [json_name = "amount", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.amount_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgBeginRedelegate::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgBeginRedelegate::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgBeginRedelegate::GetClassData() const { return &_class_data_; }


void MsgBeginRedelegate::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgBeginRedelegate*>(&to_msg);
  auto& from = static_cast<const MsgBeginRedelegate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.MsgBeginRedelegate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_delegator_address().empty()) {
    _this->_internal_set_delegator_address(from._internal_delegator_address());
  }
  if (!from._internal_validator_src_address().empty()) {
    _this->_internal_set_validator_src_address(from._internal_validator_src_address());
  }
  if (!from._internal_validator_dst_address().empty()) {
    _this->_internal_set_validator_dst_address(from._internal_validator_dst_address());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_amount()->::cosmos::base::v1beta1::Coin::MergeFrom(
        from._internal_amount());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgBeginRedelegate::CopyFrom(const MsgBeginRedelegate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.MsgBeginRedelegate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBeginRedelegate::IsInitialized() const {
  return true;
}

void MsgBeginRedelegate::InternalSwap(MsgBeginRedelegate* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.delegator_address_, lhs_arena,
                                       &other->_impl_.delegator_address_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.validator_src_address_, lhs_arena,
                                       &other->_impl_.validator_src_address_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.validator_dst_address_, lhs_arena,
                                       &other->_impl_.validator_dst_address_, rhs_arena);
  swap(_impl_.amount_, other->_impl_.amount_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgBeginRedelegate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fstaking_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fstaking_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fstaking_2fv1beta1_2ftx_2eproto[6]);
}
// ===================================================================

class MsgBeginRedelegateResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<MsgBeginRedelegateResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MsgBeginRedelegateResponse, _impl_._has_bits_);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& completion_time(const MsgBeginRedelegateResponse* msg);
  static void set_has_completion_time(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::PROTOBUF_NAMESPACE_ID::Timestamp&
MsgBeginRedelegateResponse::_Internal::completion_time(const MsgBeginRedelegateResponse* msg) {
  return *msg->_impl_.completion_time_;
}
void MsgBeginRedelegateResponse::clear_completion_time() {
  if (_impl_.completion_time_ != nullptr) _impl_.completion_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
MsgBeginRedelegateResponse::MsgBeginRedelegateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.MsgBeginRedelegateResponse)
}
MsgBeginRedelegateResponse::MsgBeginRedelegateResponse(const MsgBeginRedelegateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgBeginRedelegateResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.completion_time_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.completion_time_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.completion_time_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.MsgBeginRedelegateResponse)
}

inline void MsgBeginRedelegateResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.completion_time_){nullptr}
  };
}

MsgBeginRedelegateResponse::~MsgBeginRedelegateResponse() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.MsgBeginRedelegateResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgBeginRedelegateResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.completion_time_;
}

void MsgBeginRedelegateResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgBeginRedelegateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.MsgBeginRedelegateResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.completion_time_ != nullptr);
    _impl_.completion_time_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgBeginRedelegateResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.protobuf.Timestamp completion_time = 1 [json_name = "completionTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_completion_time(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgBeginRedelegateResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.MsgBeginRedelegateResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp completion_time = 1 [json_name = "completionTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::completion_time(this),
        _Internal::completion_time(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.MsgBeginRedelegateResponse)
  return target;
}

::size_t MsgBeginRedelegateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.MsgBeginRedelegateResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Timestamp completion_time = 1 [json_name = "completionTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.completion_time_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgBeginRedelegateResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgBeginRedelegateResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgBeginRedelegateResponse::GetClassData() const { return &_class_data_; }


void MsgBeginRedelegateResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgBeginRedelegateResponse*>(&to_msg);
  auto& from = static_cast<const MsgBeginRedelegateResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.MsgBeginRedelegateResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_completion_time()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
        from._internal_completion_time());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgBeginRedelegateResponse::CopyFrom(const MsgBeginRedelegateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.MsgBeginRedelegateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBeginRedelegateResponse::IsInitialized() const {
  return true;
}

void MsgBeginRedelegateResponse::InternalSwap(MsgBeginRedelegateResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.completion_time_, other->_impl_.completion_time_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgBeginRedelegateResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fstaking_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fstaking_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fstaking_2fv1beta1_2ftx_2eproto[7]);
}
// ===================================================================

class MsgUndelegate::_Internal {
 public:
  using HasBits = decltype(std::declval<MsgUndelegate>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MsgUndelegate, _impl_._has_bits_);
  static const ::cosmos::base::v1beta1::Coin& amount(const MsgUndelegate* msg);
  static void set_has_amount(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::v1beta1::Coin&
MsgUndelegate::_Internal::amount(const MsgUndelegate* msg) {
  return *msg->_impl_.amount_;
}
void MsgUndelegate::clear_amount() {
  if (_impl_.amount_ != nullptr) _impl_.amount_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
MsgUndelegate::MsgUndelegate(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.MsgUndelegate)
}
MsgUndelegate::MsgUndelegate(const MsgUndelegate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgUndelegate* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.delegator_address_) {}

    , decltype(_impl_.validator_address_) {}

    , decltype(_impl_.amount_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.delegator_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.delegator_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_delegator_address().empty()) {
    _this->_impl_.delegator_address_.Set(from._internal_delegator_address(), _this->GetArenaForAllocation());
  }
  _impl_.validator_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.validator_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_validator_address().empty()) {
    _this->_impl_.validator_address_.Set(from._internal_validator_address(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.amount_ = new ::cosmos::base::v1beta1::Coin(*from._impl_.amount_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.MsgUndelegate)
}

inline void MsgUndelegate::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.delegator_address_) {}

    , decltype(_impl_.validator_address_) {}

    , decltype(_impl_.amount_){nullptr}
  };
  _impl_.delegator_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.delegator_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.validator_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.validator_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgUndelegate::~MsgUndelegate() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.MsgUndelegate)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgUndelegate::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.delegator_address_.Destroy();
  _impl_.validator_address_.Destroy();
  if (this != internal_default_instance()) delete _impl_.amount_;
}

void MsgUndelegate::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgUndelegate::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.MsgUndelegate)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.delegator_address_.ClearToEmpty();
  _impl_.validator_address_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.amount_ != nullptr);
    _impl_.amount_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgUndelegate::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_delegator_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.staking.v1beta1.MsgUndelegate.delegator_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string validator_address = 2 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_validator_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.staking.v1beta1.MsgUndelegate.validator_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_amount(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgUndelegate::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.MsgUndelegate)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_delegator_address().empty()) {
    const std::string& _s = this->_internal_delegator_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.MsgUndelegate.delegator_address");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string validator_address = 2 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_validator_address().empty()) {
    const std::string& _s = this->_internal_validator_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.MsgUndelegate.validator_address");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::amount(this),
        _Internal::amount(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.MsgUndelegate)
  return target;
}

::size_t MsgUndelegate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.MsgUndelegate)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_delegator_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_delegator_address());
  }

  // string validator_address = 2 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_validator_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_validator_address());
  }

  // .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.amount_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgUndelegate::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgUndelegate::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgUndelegate::GetClassData() const { return &_class_data_; }


void MsgUndelegate::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgUndelegate*>(&to_msg);
  auto& from = static_cast<const MsgUndelegate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.MsgUndelegate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_delegator_address().empty()) {
    _this->_internal_set_delegator_address(from._internal_delegator_address());
  }
  if (!from._internal_validator_address().empty()) {
    _this->_internal_set_validator_address(from._internal_validator_address());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_amount()->::cosmos::base::v1beta1::Coin::MergeFrom(
        from._internal_amount());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgUndelegate::CopyFrom(const MsgUndelegate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.MsgUndelegate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgUndelegate::IsInitialized() const {
  return true;
}

void MsgUndelegate::InternalSwap(MsgUndelegate* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.delegator_address_, lhs_arena,
                                       &other->_impl_.delegator_address_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.validator_address_, lhs_arena,
                                       &other->_impl_.validator_address_, rhs_arena);
  swap(_impl_.amount_, other->_impl_.amount_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgUndelegate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fstaking_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fstaking_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fstaking_2fv1beta1_2ftx_2eproto[8]);
}
// ===================================================================

class MsgUndelegateResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<MsgUndelegateResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MsgUndelegateResponse, _impl_._has_bits_);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& completion_time(const MsgUndelegateResponse* msg);
  static void set_has_completion_time(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::PROTOBUF_NAMESPACE_ID::Timestamp&
MsgUndelegateResponse::_Internal::completion_time(const MsgUndelegateResponse* msg) {
  return *msg->_impl_.completion_time_;
}
void MsgUndelegateResponse::clear_completion_time() {
  if (_impl_.completion_time_ != nullptr) _impl_.completion_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
MsgUndelegateResponse::MsgUndelegateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.MsgUndelegateResponse)
}
MsgUndelegateResponse::MsgUndelegateResponse(const MsgUndelegateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgUndelegateResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.completion_time_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.completion_time_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.completion_time_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.MsgUndelegateResponse)
}

inline void MsgUndelegateResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.completion_time_){nullptr}
  };
}

MsgUndelegateResponse::~MsgUndelegateResponse() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.MsgUndelegateResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgUndelegateResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.completion_time_;
}

void MsgUndelegateResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgUndelegateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.MsgUndelegateResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.completion_time_ != nullptr);
    _impl_.completion_time_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgUndelegateResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.protobuf.Timestamp completion_time = 1 [json_name = "completionTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_completion_time(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgUndelegateResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.MsgUndelegateResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp completion_time = 1 [json_name = "completionTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::completion_time(this),
        _Internal::completion_time(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.MsgUndelegateResponse)
  return target;
}

::size_t MsgUndelegateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.MsgUndelegateResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Timestamp completion_time = 1 [json_name = "completionTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.completion_time_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgUndelegateResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgUndelegateResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgUndelegateResponse::GetClassData() const { return &_class_data_; }


void MsgUndelegateResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgUndelegateResponse*>(&to_msg);
  auto& from = static_cast<const MsgUndelegateResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.MsgUndelegateResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_completion_time()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
        from._internal_completion_time());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgUndelegateResponse::CopyFrom(const MsgUndelegateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.MsgUndelegateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgUndelegateResponse::IsInitialized() const {
  return true;
}

void MsgUndelegateResponse::InternalSwap(MsgUndelegateResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.completion_time_, other->_impl_.completion_time_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgUndelegateResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fstaking_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fstaking_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fstaking_2fv1beta1_2ftx_2eproto[9]);
}
// ===================================================================

class MsgCancelUnbondingDelegation::_Internal {
 public:
  using HasBits = decltype(std::declval<MsgCancelUnbondingDelegation>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MsgCancelUnbondingDelegation, _impl_._has_bits_);
  static const ::cosmos::base::v1beta1::Coin& amount(const MsgCancelUnbondingDelegation* msg);
  static void set_has_amount(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::v1beta1::Coin&
MsgCancelUnbondingDelegation::_Internal::amount(const MsgCancelUnbondingDelegation* msg) {
  return *msg->_impl_.amount_;
}
void MsgCancelUnbondingDelegation::clear_amount() {
  if (_impl_.amount_ != nullptr) _impl_.amount_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
MsgCancelUnbondingDelegation::MsgCancelUnbondingDelegation(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.MsgCancelUnbondingDelegation)
}
MsgCancelUnbondingDelegation::MsgCancelUnbondingDelegation(const MsgCancelUnbondingDelegation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgCancelUnbondingDelegation* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.delegator_address_) {}

    , decltype(_impl_.validator_address_) {}

    , decltype(_impl_.amount_){nullptr}
    , decltype(_impl_.creation_height_) {}
  };

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.delegator_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.delegator_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_delegator_address().empty()) {
    _this->_impl_.delegator_address_.Set(from._internal_delegator_address(), _this->GetArenaForAllocation());
  }
  _impl_.validator_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.validator_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_validator_address().empty()) {
    _this->_impl_.validator_address_.Set(from._internal_validator_address(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.amount_ = new ::cosmos::base::v1beta1::Coin(*from._impl_.amount_);
  }
  _this->_impl_.creation_height_ = from._impl_.creation_height_;
  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.MsgCancelUnbondingDelegation)
}

inline void MsgCancelUnbondingDelegation::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.delegator_address_) {}

    , decltype(_impl_.validator_address_) {}

    , decltype(_impl_.amount_){nullptr}
    , decltype(_impl_.creation_height_) { ::int64_t{0} }

  };
  _impl_.delegator_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.delegator_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.validator_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.validator_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgCancelUnbondingDelegation::~MsgCancelUnbondingDelegation() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.MsgCancelUnbondingDelegation)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgCancelUnbondingDelegation::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.delegator_address_.Destroy();
  _impl_.validator_address_.Destroy();
  if (this != internal_default_instance()) delete _impl_.amount_;
}

void MsgCancelUnbondingDelegation::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgCancelUnbondingDelegation::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.MsgCancelUnbondingDelegation)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.delegator_address_.ClearToEmpty();
  _impl_.validator_address_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.amount_ != nullptr);
    _impl_.amount_->Clear();
  }
  _impl_.creation_height_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgCancelUnbondingDelegation::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_delegator_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.staking.v1beta1.MsgCancelUnbondingDelegation.delegator_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string validator_address = 2 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_validator_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.staking.v1beta1.MsgCancelUnbondingDelegation.validator_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_amount(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // int64 creation_height = 4 [json_name = "creationHeight"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 32)) {
          _impl_.creation_height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgCancelUnbondingDelegation::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.MsgCancelUnbondingDelegation)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_delegator_address().empty()) {
    const std::string& _s = this->_internal_delegator_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.MsgCancelUnbondingDelegation.delegator_address");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string validator_address = 2 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_validator_address().empty()) {
    const std::string& _s = this->_internal_validator_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.MsgCancelUnbondingDelegation.validator_address");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::amount(this),
        _Internal::amount(this).GetCachedSize(), target, stream);
  }

  // int64 creation_height = 4 [json_name = "creationHeight"];
  if (this->_internal_creation_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        4, this->_internal_creation_height(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.MsgCancelUnbondingDelegation)
  return target;
}

::size_t MsgCancelUnbondingDelegation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.MsgCancelUnbondingDelegation)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_delegator_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_delegator_address());
  }

  // string validator_address = 2 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_validator_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_validator_address());
  }

  // .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.amount_);
  }

  // int64 creation_height = 4 [json_name = "creationHeight"];
  if (this->_internal_creation_height() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_creation_height());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgCancelUnbondingDelegation::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgCancelUnbondingDelegation::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgCancelUnbondingDelegation::GetClassData() const { return &_class_data_; }


void MsgCancelUnbondingDelegation::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgCancelUnbondingDelegation*>(&to_msg);
  auto& from = static_cast<const MsgCancelUnbondingDelegation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.MsgCancelUnbondingDelegation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_delegator_address().empty()) {
    _this->_internal_set_delegator_address(from._internal_delegator_address());
  }
  if (!from._internal_validator_address().empty()) {
    _this->_internal_set_validator_address(from._internal_validator_address());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_amount()->::cosmos::base::v1beta1::Coin::MergeFrom(
        from._internal_amount());
  }
  if (from._internal_creation_height() != 0) {
    _this->_internal_set_creation_height(from._internal_creation_height());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgCancelUnbondingDelegation::CopyFrom(const MsgCancelUnbondingDelegation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.MsgCancelUnbondingDelegation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgCancelUnbondingDelegation::IsInitialized() const {
  return true;
}

void MsgCancelUnbondingDelegation::InternalSwap(MsgCancelUnbondingDelegation* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.delegator_address_, lhs_arena,
                                       &other->_impl_.delegator_address_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.validator_address_, lhs_arena,
                                       &other->_impl_.validator_address_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MsgCancelUnbondingDelegation, _impl_.creation_height_)
      + sizeof(MsgCancelUnbondingDelegation::_impl_.creation_height_)
      - PROTOBUF_FIELD_OFFSET(MsgCancelUnbondingDelegation, _impl_.amount_)>(
          reinterpret_cast<char*>(&_impl_.amount_),
          reinterpret_cast<char*>(&other->_impl_.amount_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgCancelUnbondingDelegation::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fstaking_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fstaking_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fstaking_2fv1beta1_2ftx_2eproto[10]);
}
// ===================================================================

class MsgCancelUnbondingDelegationResponse::_Internal {
 public:
};

MsgCancelUnbondingDelegationResponse::MsgCancelUnbondingDelegationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.MsgCancelUnbondingDelegationResponse)
}
MsgCancelUnbondingDelegationResponse::MsgCancelUnbondingDelegationResponse(const MsgCancelUnbondingDelegationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgCancelUnbondingDelegationResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.MsgCancelUnbondingDelegationResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgCancelUnbondingDelegationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgCancelUnbondingDelegationResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgCancelUnbondingDelegationResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fstaking_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fstaking_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fstaking_2fv1beta1_2ftx_2eproto[11]);
}
// ===================================================================

class MsgUpdateParams::_Internal {
 public:
  using HasBits = decltype(std::declval<MsgUpdateParams>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MsgUpdateParams, _impl_._has_bits_);
  static const ::cosmos::staking::v1beta1::Params& params(const MsgUpdateParams* msg);
  static void set_has_params(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::staking::v1beta1::Params&
MsgUpdateParams::_Internal::params(const MsgUpdateParams* msg) {
  return *msg->_impl_.params_;
}
void MsgUpdateParams::clear_params() {
  if (_impl_.params_ != nullptr) _impl_.params_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
MsgUpdateParams::MsgUpdateParams(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.MsgUpdateParams)
}
MsgUpdateParams::MsgUpdateParams(const MsgUpdateParams& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgUpdateParams* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.authority_) {}

    , decltype(_impl_.params_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.authority_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.authority_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_authority().empty()) {
    _this->_impl_.authority_.Set(from._internal_authority(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.params_ = new ::cosmos::staking::v1beta1::Params(*from._impl_.params_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.MsgUpdateParams)
}

inline void MsgUpdateParams::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.authority_) {}

    , decltype(_impl_.params_){nullptr}
  };
  _impl_.authority_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.authority_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgUpdateParams::~MsgUpdateParams() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.MsgUpdateParams)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgUpdateParams::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.authority_.Destroy();
  if (this != internal_default_instance()) delete _impl_.params_;
}

void MsgUpdateParams::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgUpdateParams::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.MsgUpdateParams)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.authority_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.params_ != nullptr);
    _impl_.params_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgUpdateParams::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_authority();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.staking.v1beta1.MsgUpdateParams.authority"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.staking.v1beta1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgUpdateParams::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.MsgUpdateParams)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_authority().empty()) {
    const std::string& _s = this->_internal_authority();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.MsgUpdateParams.authority");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.staking.v1beta1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.MsgUpdateParams)
  return target;
}

::size_t MsgUpdateParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.MsgUpdateParams)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_authority().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_authority());
  }

  // .cosmos.staking.v1beta1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgUpdateParams::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgUpdateParams::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgUpdateParams::GetClassData() const { return &_class_data_; }


void MsgUpdateParams::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgUpdateParams*>(&to_msg);
  auto& from = static_cast<const MsgUpdateParams&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.MsgUpdateParams)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_authority().empty()) {
    _this->_internal_set_authority(from._internal_authority());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_params()->::cosmos::staking::v1beta1::Params::MergeFrom(
        from._internal_params());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgUpdateParams::CopyFrom(const MsgUpdateParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.MsgUpdateParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgUpdateParams::IsInitialized() const {
  return true;
}

void MsgUpdateParams::InternalSwap(MsgUpdateParams* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.authority_, lhs_arena,
                                       &other->_impl_.authority_, rhs_arena);
  swap(_impl_.params_, other->_impl_.params_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgUpdateParams::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fstaking_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fstaking_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fstaking_2fv1beta1_2ftx_2eproto[12]);
}
// ===================================================================

class MsgUpdateParamsResponse::_Internal {
 public:
};

MsgUpdateParamsResponse::MsgUpdateParamsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.MsgUpdateParamsResponse)
}
MsgUpdateParamsResponse::MsgUpdateParamsResponse(const MsgUpdateParamsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgUpdateParamsResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.MsgUpdateParamsResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgUpdateParamsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgUpdateParamsResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgUpdateParamsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fstaking_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fstaking_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fstaking_2fv1beta1_2ftx_2eproto[13]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace staking
}  // namespace cosmos
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::cosmos::staking::v1beta1::MsgCreateValidator*
Arena::CreateMaybeMessage< ::cosmos::staking::v1beta1::MsgCreateValidator >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::staking::v1beta1::MsgCreateValidator >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::staking::v1beta1::MsgCreateValidatorResponse*
Arena::CreateMaybeMessage< ::cosmos::staking::v1beta1::MsgCreateValidatorResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::staking::v1beta1::MsgCreateValidatorResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::staking::v1beta1::MsgEditValidator*
Arena::CreateMaybeMessage< ::cosmos::staking::v1beta1::MsgEditValidator >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::staking::v1beta1::MsgEditValidator >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::staking::v1beta1::MsgEditValidatorResponse*
Arena::CreateMaybeMessage< ::cosmos::staking::v1beta1::MsgEditValidatorResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::staking::v1beta1::MsgEditValidatorResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::staking::v1beta1::MsgDelegate*
Arena::CreateMaybeMessage< ::cosmos::staking::v1beta1::MsgDelegate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::staking::v1beta1::MsgDelegate >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::staking::v1beta1::MsgDelegateResponse*
Arena::CreateMaybeMessage< ::cosmos::staking::v1beta1::MsgDelegateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::staking::v1beta1::MsgDelegateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::staking::v1beta1::MsgBeginRedelegate*
Arena::CreateMaybeMessage< ::cosmos::staking::v1beta1::MsgBeginRedelegate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::staking::v1beta1::MsgBeginRedelegate >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::staking::v1beta1::MsgBeginRedelegateResponse*
Arena::CreateMaybeMessage< ::cosmos::staking::v1beta1::MsgBeginRedelegateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::staking::v1beta1::MsgBeginRedelegateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::staking::v1beta1::MsgUndelegate*
Arena::CreateMaybeMessage< ::cosmos::staking::v1beta1::MsgUndelegate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::staking::v1beta1::MsgUndelegate >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::staking::v1beta1::MsgUndelegateResponse*
Arena::CreateMaybeMessage< ::cosmos::staking::v1beta1::MsgUndelegateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::staking::v1beta1::MsgUndelegateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::staking::v1beta1::MsgCancelUnbondingDelegation*
Arena::CreateMaybeMessage< ::cosmos::staking::v1beta1::MsgCancelUnbondingDelegation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::staking::v1beta1::MsgCancelUnbondingDelegation >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::staking::v1beta1::MsgCancelUnbondingDelegationResponse*
Arena::CreateMaybeMessage< ::cosmos::staking::v1beta1::MsgCancelUnbondingDelegationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::staking::v1beta1::MsgCancelUnbondingDelegationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::staking::v1beta1::MsgUpdateParams*
Arena::CreateMaybeMessage< ::cosmos::staking::v1beta1::MsgUpdateParams >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::staking::v1beta1::MsgUpdateParams >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::staking::v1beta1::MsgUpdateParamsResponse*
Arena::CreateMaybeMessage< ::cosmos::staking::v1beta1::MsgUpdateParamsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::staking::v1beta1::MsgUpdateParamsResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
