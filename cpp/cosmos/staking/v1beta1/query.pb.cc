// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/staking/v1beta1/query.proto

#include "cosmos/staking/v1beta1/query.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace cosmos {
namespace staking {
namespace v1beta1 {
template <typename>
PROTOBUF_CONSTEXPR QueryValidatorsRequest::QueryValidatorsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.status_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.pagination_)*/nullptr} {}
struct QueryValidatorsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryValidatorsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryValidatorsRequestDefaultTypeInternal() {}
  union {
    QueryValidatorsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryValidatorsRequestDefaultTypeInternal _QueryValidatorsRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryValidatorsResponse::QueryValidatorsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.validators_)*/{}
  , /*decltype(_impl_.pagination_)*/nullptr} {}
struct QueryValidatorsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryValidatorsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryValidatorsResponseDefaultTypeInternal() {}
  union {
    QueryValidatorsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryValidatorsResponseDefaultTypeInternal _QueryValidatorsResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryValidatorRequest::QueryValidatorRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.validator_addr_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryValidatorRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryValidatorRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryValidatorRequestDefaultTypeInternal() {}
  union {
    QueryValidatorRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryValidatorRequestDefaultTypeInternal _QueryValidatorRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryValidatorResponse::QueryValidatorResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.validator_)*/nullptr} {}
struct QueryValidatorResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryValidatorResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryValidatorResponseDefaultTypeInternal() {}
  union {
    QueryValidatorResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryValidatorResponseDefaultTypeInternal _QueryValidatorResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryValidatorDelegationsRequest::QueryValidatorDelegationsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.validator_addr_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.pagination_)*/nullptr} {}
struct QueryValidatorDelegationsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryValidatorDelegationsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryValidatorDelegationsRequestDefaultTypeInternal() {}
  union {
    QueryValidatorDelegationsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryValidatorDelegationsRequestDefaultTypeInternal _QueryValidatorDelegationsRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryValidatorDelegationsResponse::QueryValidatorDelegationsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.delegation_responses_)*/{}
  , /*decltype(_impl_.pagination_)*/nullptr} {}
struct QueryValidatorDelegationsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryValidatorDelegationsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryValidatorDelegationsResponseDefaultTypeInternal() {}
  union {
    QueryValidatorDelegationsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryValidatorDelegationsResponseDefaultTypeInternal _QueryValidatorDelegationsResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryValidatorUnbondingDelegationsRequest::QueryValidatorUnbondingDelegationsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.validator_addr_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.pagination_)*/nullptr} {}
struct QueryValidatorUnbondingDelegationsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryValidatorUnbondingDelegationsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryValidatorUnbondingDelegationsRequestDefaultTypeInternal() {}
  union {
    QueryValidatorUnbondingDelegationsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryValidatorUnbondingDelegationsRequestDefaultTypeInternal _QueryValidatorUnbondingDelegationsRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryValidatorUnbondingDelegationsResponse::QueryValidatorUnbondingDelegationsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.unbonding_responses_)*/{}
  , /*decltype(_impl_.pagination_)*/nullptr} {}
struct QueryValidatorUnbondingDelegationsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryValidatorUnbondingDelegationsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryValidatorUnbondingDelegationsResponseDefaultTypeInternal() {}
  union {
    QueryValidatorUnbondingDelegationsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryValidatorUnbondingDelegationsResponseDefaultTypeInternal _QueryValidatorUnbondingDelegationsResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryDelegationRequest::QueryDelegationRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.delegator_addr_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.validator_addr_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryDelegationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryDelegationRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryDelegationRequestDefaultTypeInternal() {}
  union {
    QueryDelegationRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryDelegationRequestDefaultTypeInternal _QueryDelegationRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryDelegationResponse::QueryDelegationResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.delegation_response_)*/nullptr} {}
struct QueryDelegationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryDelegationResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryDelegationResponseDefaultTypeInternal() {}
  union {
    QueryDelegationResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryDelegationResponseDefaultTypeInternal _QueryDelegationResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryUnbondingDelegationRequest::QueryUnbondingDelegationRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.delegator_addr_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.validator_addr_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryUnbondingDelegationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryUnbondingDelegationRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryUnbondingDelegationRequestDefaultTypeInternal() {}
  union {
    QueryUnbondingDelegationRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryUnbondingDelegationRequestDefaultTypeInternal _QueryUnbondingDelegationRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryUnbondingDelegationResponse::QueryUnbondingDelegationResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.unbond_)*/nullptr} {}
struct QueryUnbondingDelegationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryUnbondingDelegationResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryUnbondingDelegationResponseDefaultTypeInternal() {}
  union {
    QueryUnbondingDelegationResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryUnbondingDelegationResponseDefaultTypeInternal _QueryUnbondingDelegationResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryDelegatorDelegationsRequest::QueryDelegatorDelegationsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.delegator_addr_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.pagination_)*/nullptr} {}
struct QueryDelegatorDelegationsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryDelegatorDelegationsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryDelegatorDelegationsRequestDefaultTypeInternal() {}
  union {
    QueryDelegatorDelegationsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryDelegatorDelegationsRequestDefaultTypeInternal _QueryDelegatorDelegationsRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryDelegatorDelegationsResponse::QueryDelegatorDelegationsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.delegation_responses_)*/{}
  , /*decltype(_impl_.pagination_)*/nullptr} {}
struct QueryDelegatorDelegationsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryDelegatorDelegationsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryDelegatorDelegationsResponseDefaultTypeInternal() {}
  union {
    QueryDelegatorDelegationsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryDelegatorDelegationsResponseDefaultTypeInternal _QueryDelegatorDelegationsResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryDelegatorUnbondingDelegationsRequest::QueryDelegatorUnbondingDelegationsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.delegator_addr_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.pagination_)*/nullptr} {}
struct QueryDelegatorUnbondingDelegationsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryDelegatorUnbondingDelegationsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryDelegatorUnbondingDelegationsRequestDefaultTypeInternal() {}
  union {
    QueryDelegatorUnbondingDelegationsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryDelegatorUnbondingDelegationsRequestDefaultTypeInternal _QueryDelegatorUnbondingDelegationsRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryDelegatorUnbondingDelegationsResponse::QueryDelegatorUnbondingDelegationsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.unbonding_responses_)*/{}
  , /*decltype(_impl_.pagination_)*/nullptr} {}
struct QueryDelegatorUnbondingDelegationsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryDelegatorUnbondingDelegationsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryDelegatorUnbondingDelegationsResponseDefaultTypeInternal() {}
  union {
    QueryDelegatorUnbondingDelegationsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryDelegatorUnbondingDelegationsResponseDefaultTypeInternal _QueryDelegatorUnbondingDelegationsResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryRedelegationsRequest::QueryRedelegationsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.delegator_addr_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.src_validator_addr_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.dst_validator_addr_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.pagination_)*/nullptr} {}
struct QueryRedelegationsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryRedelegationsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryRedelegationsRequestDefaultTypeInternal() {}
  union {
    QueryRedelegationsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryRedelegationsRequestDefaultTypeInternal _QueryRedelegationsRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryRedelegationsResponse::QueryRedelegationsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.redelegation_responses_)*/{}
  , /*decltype(_impl_.pagination_)*/nullptr} {}
struct QueryRedelegationsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryRedelegationsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryRedelegationsResponseDefaultTypeInternal() {}
  union {
    QueryRedelegationsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryRedelegationsResponseDefaultTypeInternal _QueryRedelegationsResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryDelegatorValidatorsRequest::QueryDelegatorValidatorsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.delegator_addr_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.pagination_)*/nullptr} {}
struct QueryDelegatorValidatorsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryDelegatorValidatorsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryDelegatorValidatorsRequestDefaultTypeInternal() {}
  union {
    QueryDelegatorValidatorsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryDelegatorValidatorsRequestDefaultTypeInternal _QueryDelegatorValidatorsRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryDelegatorValidatorsResponse::QueryDelegatorValidatorsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.validators_)*/{}
  , /*decltype(_impl_.pagination_)*/nullptr} {}
struct QueryDelegatorValidatorsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryDelegatorValidatorsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryDelegatorValidatorsResponseDefaultTypeInternal() {}
  union {
    QueryDelegatorValidatorsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryDelegatorValidatorsResponseDefaultTypeInternal _QueryDelegatorValidatorsResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryDelegatorValidatorRequest::QueryDelegatorValidatorRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.delegator_addr_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.validator_addr_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryDelegatorValidatorRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryDelegatorValidatorRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryDelegatorValidatorRequestDefaultTypeInternal() {}
  union {
    QueryDelegatorValidatorRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryDelegatorValidatorRequestDefaultTypeInternal _QueryDelegatorValidatorRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryDelegatorValidatorResponse::QueryDelegatorValidatorResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.validator_)*/nullptr} {}
struct QueryDelegatorValidatorResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryDelegatorValidatorResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryDelegatorValidatorResponseDefaultTypeInternal() {}
  union {
    QueryDelegatorValidatorResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryDelegatorValidatorResponseDefaultTypeInternal _QueryDelegatorValidatorResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryHistoricalInfoRequest::QueryHistoricalInfoRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.height_)*/ ::int64_t{0}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryHistoricalInfoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryHistoricalInfoRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryHistoricalInfoRequestDefaultTypeInternal() {}
  union {
    QueryHistoricalInfoRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryHistoricalInfoRequestDefaultTypeInternal _QueryHistoricalInfoRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryHistoricalInfoResponse::QueryHistoricalInfoResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.hist_)*/nullptr} {}
struct QueryHistoricalInfoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryHistoricalInfoResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryHistoricalInfoResponseDefaultTypeInternal() {}
  union {
    QueryHistoricalInfoResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryHistoricalInfoResponseDefaultTypeInternal _QueryHistoricalInfoResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryPoolRequest::QueryPoolRequest(
    ::_pbi::ConstantInitialized) {}
struct QueryPoolRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryPoolRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryPoolRequestDefaultTypeInternal() {}
  union {
    QueryPoolRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryPoolRequestDefaultTypeInternal _QueryPoolRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryPoolResponse::QueryPoolResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.pool_)*/nullptr} {}
struct QueryPoolResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryPoolResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryPoolResponseDefaultTypeInternal() {}
  union {
    QueryPoolResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryPoolResponseDefaultTypeInternal _QueryPoolResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryParamsRequest::QueryParamsRequest(
    ::_pbi::ConstantInitialized) {}
struct QueryParamsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryParamsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryParamsRequestDefaultTypeInternal() {}
  union {
    QueryParamsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryParamsRequestDefaultTypeInternal _QueryParamsRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryParamsResponse::QueryParamsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.params_)*/nullptr} {}
struct QueryParamsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryParamsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryParamsResponseDefaultTypeInternal() {}
  union {
    QueryParamsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryParamsResponseDefaultTypeInternal _QueryParamsResponse_default_instance_;
}  // namespace v1beta1
}  // namespace staking
}  // namespace cosmos
static ::_pb::Metadata file_level_metadata_cosmos_2fstaking_2fv1beta1_2fquery_2eproto[28];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_cosmos_2fstaking_2fv1beta1_2fquery_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cosmos_2fstaking_2fv1beta1_2fquery_2eproto = nullptr;
const ::uint32_t TableStruct_cosmos_2fstaking_2fv1beta1_2fquery_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryValidatorsRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryValidatorsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryValidatorsRequest, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryValidatorsRequest, _impl_.pagination_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryValidatorsResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryValidatorsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryValidatorsResponse, _impl_.validators_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryValidatorsResponse, _impl_.pagination_),
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryValidatorRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryValidatorRequest, _impl_.validator_addr_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryValidatorResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryValidatorResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryValidatorResponse, _impl_.validator_),
    0,
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryValidatorDelegationsRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryValidatorDelegationsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryValidatorDelegationsRequest, _impl_.validator_addr_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryValidatorDelegationsRequest, _impl_.pagination_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryValidatorDelegationsResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryValidatorDelegationsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryValidatorDelegationsResponse, _impl_.delegation_responses_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryValidatorDelegationsResponse, _impl_.pagination_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryValidatorUnbondingDelegationsRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryValidatorUnbondingDelegationsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryValidatorUnbondingDelegationsRequest, _impl_.validator_addr_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryValidatorUnbondingDelegationsRequest, _impl_.pagination_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryValidatorUnbondingDelegationsResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryValidatorUnbondingDelegationsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryValidatorUnbondingDelegationsResponse, _impl_.unbonding_responses_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryValidatorUnbondingDelegationsResponse, _impl_.pagination_),
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryDelegationRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryDelegationRequest, _impl_.delegator_addr_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryDelegationRequest, _impl_.validator_addr_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryDelegationResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryDelegationResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryDelegationResponse, _impl_.delegation_response_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryUnbondingDelegationRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryUnbondingDelegationRequest, _impl_.delegator_addr_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryUnbondingDelegationRequest, _impl_.validator_addr_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryUnbondingDelegationResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryUnbondingDelegationResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryUnbondingDelegationResponse, _impl_.unbond_),
    0,
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryDelegatorDelegationsRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryDelegatorDelegationsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryDelegatorDelegationsRequest, _impl_.delegator_addr_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryDelegatorDelegationsRequest, _impl_.pagination_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryDelegatorDelegationsResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryDelegatorDelegationsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryDelegatorDelegationsResponse, _impl_.delegation_responses_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryDelegatorDelegationsResponse, _impl_.pagination_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryDelegatorUnbondingDelegationsRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryDelegatorUnbondingDelegationsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryDelegatorUnbondingDelegationsRequest, _impl_.delegator_addr_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryDelegatorUnbondingDelegationsRequest, _impl_.pagination_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryDelegatorUnbondingDelegationsResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryDelegatorUnbondingDelegationsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryDelegatorUnbondingDelegationsResponse, _impl_.unbonding_responses_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryDelegatorUnbondingDelegationsResponse, _impl_.pagination_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryRedelegationsRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryRedelegationsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryRedelegationsRequest, _impl_.delegator_addr_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryRedelegationsRequest, _impl_.src_validator_addr_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryRedelegationsRequest, _impl_.dst_validator_addr_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryRedelegationsRequest, _impl_.pagination_),
    ~0u,
    ~0u,
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryRedelegationsResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryRedelegationsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryRedelegationsResponse, _impl_.redelegation_responses_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryRedelegationsResponse, _impl_.pagination_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryDelegatorValidatorsRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryDelegatorValidatorsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryDelegatorValidatorsRequest, _impl_.delegator_addr_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryDelegatorValidatorsRequest, _impl_.pagination_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryDelegatorValidatorsResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryDelegatorValidatorsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryDelegatorValidatorsResponse, _impl_.validators_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryDelegatorValidatorsResponse, _impl_.pagination_),
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryDelegatorValidatorRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryDelegatorValidatorRequest, _impl_.delegator_addr_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryDelegatorValidatorRequest, _impl_.validator_addr_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryDelegatorValidatorResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryDelegatorValidatorResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryDelegatorValidatorResponse, _impl_.validator_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryHistoricalInfoRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryHistoricalInfoRequest, _impl_.height_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryHistoricalInfoResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryHistoricalInfoResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryHistoricalInfoResponse, _impl_.hist_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryPoolRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryPoolResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryPoolResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryPoolResponse, _impl_.pool_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryParamsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryParamsResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryParamsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::QueryParamsResponse, _impl_.params_),
    0,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, 10, -1, sizeof(::cosmos::staking::v1beta1::QueryValidatorsRequest)},
        { 12, 22, -1, sizeof(::cosmos::staking::v1beta1::QueryValidatorsResponse)},
        { 24, -1, -1, sizeof(::cosmos::staking::v1beta1::QueryValidatorRequest)},
        { 33, 42, -1, sizeof(::cosmos::staking::v1beta1::QueryValidatorResponse)},
        { 43, 53, -1, sizeof(::cosmos::staking::v1beta1::QueryValidatorDelegationsRequest)},
        { 55, 65, -1, sizeof(::cosmos::staking::v1beta1::QueryValidatorDelegationsResponse)},
        { 67, 77, -1, sizeof(::cosmos::staking::v1beta1::QueryValidatorUnbondingDelegationsRequest)},
        { 79, 89, -1, sizeof(::cosmos::staking::v1beta1::QueryValidatorUnbondingDelegationsResponse)},
        { 91, -1, -1, sizeof(::cosmos::staking::v1beta1::QueryDelegationRequest)},
        { 101, 110, -1, sizeof(::cosmos::staking::v1beta1::QueryDelegationResponse)},
        { 111, -1, -1, sizeof(::cosmos::staking::v1beta1::QueryUnbondingDelegationRequest)},
        { 121, 130, -1, sizeof(::cosmos::staking::v1beta1::QueryUnbondingDelegationResponse)},
        { 131, 141, -1, sizeof(::cosmos::staking::v1beta1::QueryDelegatorDelegationsRequest)},
        { 143, 153, -1, sizeof(::cosmos::staking::v1beta1::QueryDelegatorDelegationsResponse)},
        { 155, 165, -1, sizeof(::cosmos::staking::v1beta1::QueryDelegatorUnbondingDelegationsRequest)},
        { 167, 177, -1, sizeof(::cosmos::staking::v1beta1::QueryDelegatorUnbondingDelegationsResponse)},
        { 179, 191, -1, sizeof(::cosmos::staking::v1beta1::QueryRedelegationsRequest)},
        { 195, 205, -1, sizeof(::cosmos::staking::v1beta1::QueryRedelegationsResponse)},
        { 207, 217, -1, sizeof(::cosmos::staking::v1beta1::QueryDelegatorValidatorsRequest)},
        { 219, 229, -1, sizeof(::cosmos::staking::v1beta1::QueryDelegatorValidatorsResponse)},
        { 231, -1, -1, sizeof(::cosmos::staking::v1beta1::QueryDelegatorValidatorRequest)},
        { 241, 250, -1, sizeof(::cosmos::staking::v1beta1::QueryDelegatorValidatorResponse)},
        { 251, -1, -1, sizeof(::cosmos::staking::v1beta1::QueryHistoricalInfoRequest)},
        { 260, 269, -1, sizeof(::cosmos::staking::v1beta1::QueryHistoricalInfoResponse)},
        { 270, -1, -1, sizeof(::cosmos::staking::v1beta1::QueryPoolRequest)},
        { 278, 287, -1, sizeof(::cosmos::staking::v1beta1::QueryPoolResponse)},
        { 288, -1, -1, sizeof(::cosmos::staking::v1beta1::QueryParamsRequest)},
        { 296, 305, -1, sizeof(::cosmos::staking::v1beta1::QueryParamsResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::cosmos::staking::v1beta1::_QueryValidatorsRequest_default_instance_._instance,
    &::cosmos::staking::v1beta1::_QueryValidatorsResponse_default_instance_._instance,
    &::cosmos::staking::v1beta1::_QueryValidatorRequest_default_instance_._instance,
    &::cosmos::staking::v1beta1::_QueryValidatorResponse_default_instance_._instance,
    &::cosmos::staking::v1beta1::_QueryValidatorDelegationsRequest_default_instance_._instance,
    &::cosmos::staking::v1beta1::_QueryValidatorDelegationsResponse_default_instance_._instance,
    &::cosmos::staking::v1beta1::_QueryValidatorUnbondingDelegationsRequest_default_instance_._instance,
    &::cosmos::staking::v1beta1::_QueryValidatorUnbondingDelegationsResponse_default_instance_._instance,
    &::cosmos::staking::v1beta1::_QueryDelegationRequest_default_instance_._instance,
    &::cosmos::staking::v1beta1::_QueryDelegationResponse_default_instance_._instance,
    &::cosmos::staking::v1beta1::_QueryUnbondingDelegationRequest_default_instance_._instance,
    &::cosmos::staking::v1beta1::_QueryUnbondingDelegationResponse_default_instance_._instance,
    &::cosmos::staking::v1beta1::_QueryDelegatorDelegationsRequest_default_instance_._instance,
    &::cosmos::staking::v1beta1::_QueryDelegatorDelegationsResponse_default_instance_._instance,
    &::cosmos::staking::v1beta1::_QueryDelegatorUnbondingDelegationsRequest_default_instance_._instance,
    &::cosmos::staking::v1beta1::_QueryDelegatorUnbondingDelegationsResponse_default_instance_._instance,
    &::cosmos::staking::v1beta1::_QueryRedelegationsRequest_default_instance_._instance,
    &::cosmos::staking::v1beta1::_QueryRedelegationsResponse_default_instance_._instance,
    &::cosmos::staking::v1beta1::_QueryDelegatorValidatorsRequest_default_instance_._instance,
    &::cosmos::staking::v1beta1::_QueryDelegatorValidatorsResponse_default_instance_._instance,
    &::cosmos::staking::v1beta1::_QueryDelegatorValidatorRequest_default_instance_._instance,
    &::cosmos::staking::v1beta1::_QueryDelegatorValidatorResponse_default_instance_._instance,
    &::cosmos::staking::v1beta1::_QueryHistoricalInfoRequest_default_instance_._instance,
    &::cosmos::staking::v1beta1::_QueryHistoricalInfoResponse_default_instance_._instance,
    &::cosmos::staking::v1beta1::_QueryPoolRequest_default_instance_._instance,
    &::cosmos::staking::v1beta1::_QueryPoolResponse_default_instance_._instance,
    &::cosmos::staking::v1beta1::_QueryParamsRequest_default_instance_._instance,
    &::cosmos::staking::v1beta1::_QueryParamsResponse_default_instance_._instance,
};
const char descriptor_table_protodef_cosmos_2fstaking_2fv1beta1_2fquery_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\"cosmos/staking/v1beta1/query.proto\022\026co"
    "smos.staking.v1beta1\032*cosmos/base/query/"
    "v1beta1/pagination.proto\032\024gogoproto/gogo"
    ".proto\032\034google/api/annotations.proto\032$co"
    "smos/staking/v1beta1/staking.proto\032\031cosm"
    "os_proto/cosmos.proto\032\033cosmos/query/v1/q"
    "uery.proto\032\021amino/amino.proto\"x\n\026QueryVa"
    "lidatorsRequest\022\026\n\006status\030\001 \001(\tR\006status\022"
    "F\n\npagination\030\002 \001(\0132&.cosmos.base.query."
    "v1beta1.PageRequestR\npagination\"\260\001\n\027Quer"
    "yValidatorsResponse\022L\n\nvalidators\030\001 \003(\0132"
    "!.cosmos.staking.v1beta1.ValidatorB\t\310\336\037\000"
    "\250\347\260*\001R\nvalidators\022G\n\npagination\030\002 \001(\0132\'."
    "cosmos.base.query.v1beta1.PageResponseR\n"
    "pagination\"X\n\025QueryValidatorRequest\022\?\n\016v"
    "alidator_addr\030\001 \001(\tB\030\322\264-\024cosmos.AddressS"
    "tringR\rvalidatorAddr\"d\n\026QueryValidatorRe"
    "sponse\022J\n\tvalidator\030\001 \001(\0132!.cosmos.staki"
    "ng.v1beta1.ValidatorB\t\310\336\037\000\250\347\260*\001R\tvalidat"
    "or\"\253\001\n QueryValidatorDelegationsRequest\022"
    "\?\n\016validator_addr\030\001 \001(\tB\030\322\264-\024cosmos.Addr"
    "essStringR\rvalidatorAddr\022F\n\npagination\030\002"
    " \001(\0132&.cosmos.base.query.v1beta1.PageReq"
    "uestR\npagination\"\355\001\n!QueryValidatorDeleg"
    "ationsResponse\022\177\n\024delegation_responses\030\001"
    " \003(\0132*.cosmos.staking.v1beta1.Delegation"
    "ResponseB \310\336\037\000\252\337\037\023DelegationResponses\250\347\260"
    "*\001R\023delegationResponses\022G\n\npagination\030\002 "
    "\001(\0132\'.cosmos.base.query.v1beta1.PageResp"
    "onseR\npagination\"\264\001\n)QueryValidatorUnbon"
    "dingDelegationsRequest\022\?\n\016validator_addr"
    "\030\001 \001(\tB\030\322\264-\024cosmos.AddressStringR\rvalida"
    "torAddr\022F\n\npagination\030\002 \001(\0132&.cosmos.bas"
    "e.query.v1beta1.PageRequestR\npagination\""
    "\336\001\n*QueryValidatorUnbondingDelegationsRe"
    "sponse\022g\n\023unbonding_responses\030\001 \003(\0132+.co"
    "smos.staking.v1beta1.UnbondingDelegation"
    "B\t\310\336\037\000\250\347\260*\001R\022unbondingResponses\022G\n\npagin"
    "ation\030\002 \001(\0132\'.cosmos.base.query.v1beta1."
    "PageResponseR\npagination\"\244\001\n\026QueryDelega"
    "tionRequest\022\?\n\016delegator_addr\030\001 \001(\tB\030\322\264-"
    "\024cosmos.AddressStringR\rdelegatorAddr\022\?\n\016"
    "validator_addr\030\002 \001(\tB\030\322\264-\024cosmos.Address"
    "StringR\rvalidatorAddr:\010\210\240\037\000\350\240\037\000\"v\n\027Query"
    "DelegationResponse\022[\n\023delegation_respons"
    "e\030\001 \001(\0132*.cosmos.staking.v1beta1.Delegat"
    "ionResponseR\022delegationResponse\"\255\001\n\037Quer"
    "yUnbondingDelegationRequest\022\?\n\016delegator"
    "_addr\030\001 \001(\tB\030\322\264-\024cosmos.AddressStringR\rd"
    "elegatorAddr\022\?\n\016validator_addr\030\002 \001(\tB\030\322\264"
    "-\024cosmos.AddressStringR\rvalidatorAddr:\010\210"
    "\240\037\000\350\240\037\000\"r\n QueryUnbondingDelegationRespo"
    "nse\022N\n\006unbond\030\001 \001(\0132+.cosmos.staking.v1b"
    "eta1.UnbondingDelegationB\t\310\336\037\000\250\347\260*\001R\006unb"
    "ond\"\265\001\n QueryDelegatorDelegationsRequest"
    "\022\?\n\016delegator_addr\030\001 \001(\tB\030\322\264-\024cosmos.Add"
    "ressStringR\rdelegatorAddr\022F\n\npagination\030"
    "\002 \001(\0132&.cosmos.base.query.v1beta1.PageRe"
    "questR\npagination:\010\210\240\037\000\350\240\037\000\"\326\001\n!QueryDel"
    "egatorDelegationsResponse\022h\n\024delegation_"
    "responses\030\001 \003(\0132*.cosmos.staking.v1beta1"
    ".DelegationResponseB\t\310\336\037\000\250\347\260*\001R\023delegati"
    "onResponses\022G\n\npagination\030\002 \001(\0132\'.cosmos"
    ".base.query.v1beta1.PageResponseR\npagina"
    "tion\"\276\001\n)QueryDelegatorUnbondingDelegati"
    "onsRequest\022\?\n\016delegator_addr\030\001 \001(\tB\030\322\264-\024"
    "cosmos.AddressStringR\rdelegatorAddr\022F\n\np"
    "agination\030\002 \001(\0132&.cosmos.base.query.v1be"
    "ta1.PageRequestR\npagination:\010\210\240\037\000\350\240\037\000\"\336\001"
    "\n*QueryDelegatorUnbondingDelegationsResp"
    "onse\022g\n\023unbonding_responses\030\001 \003(\0132+.cosm"
    "os.staking.v1beta1.UnbondingDelegationB\t"
    "\310\336\037\000\250\347\260*\001R\022unbondingResponses\022G\n\npaginat"
    "ion\030\002 \001(\0132\'.cosmos.base.query.v1beta1.Pa"
    "geResponseR\npagination\"\276\002\n\031QueryRedelega"
    "tionsRequest\022\?\n\016delegator_addr\030\001 \001(\tB\030\322\264"
    "-\024cosmos.AddressStringR\rdelegatorAddr\022F\n"
    "\022src_validator_addr\030\002 \001(\tB\030\322\264-\024cosmos.Ad"
    "dressStringR\020srcValidatorAddr\022F\n\022dst_val"
    "idator_addr\030\003 \001(\tB\030\322\264-\024cosmos.AddressStr"
    "ingR\020dstValidatorAddr\022F\n\npagination\030\004 \001("
    "\0132&.cosmos.base.query.v1beta1.PageReques"
    "tR\npagination:\010\210\240\037\000\350\240\037\000\"\325\001\n\032QueryRedeleg"
    "ationsResponse\022n\n\026redelegation_responses"
    "\030\001 \003(\0132,.cosmos.staking.v1beta1.Redelega"
    "tionResponseB\t\310\336\037\000\250\347\260*\001R\025redelegationRes"
    "ponses\022G\n\npagination\030\002 \001(\0132\'.cosmos.base"
    ".query.v1beta1.PageResponseR\npagination\""
    "\264\001\n\037QueryDelegatorValidatorsRequest\022\?\n\016d"
    "elegator_addr\030\001 \001(\tB\030\322\264-\024cosmos.AddressS"
    "tringR\rdelegatorAddr\022F\n\npagination\030\002 \001(\013"
    "2&.cosmos.base.query.v1beta1.PageRequest"
    "R\npagination:\010\210\240\037\000\350\240\037\000\"\271\001\n QueryDelegato"
    "rValidatorsResponse\022L\n\nvalidators\030\001 \003(\0132"
    "!.cosmos.staking.v1beta1.ValidatorB\t\310\336\037\000"
    "\250\347\260*\001R\nvalidators\022G\n\npagination\030\002 \001(\0132\'."
    "cosmos.base.query.v1beta1.PageResponseR\n"
    "pagination\"\254\001\n\036QueryDelegatorValidatorRe"
    "quest\022\?\n\016delegator_addr\030\001 \001(\tB\030\322\264-\024cosmo"
    "s.AddressStringR\rdelegatorAddr\022\?\n\016valida"
    "tor_addr\030\002 \001(\tB\030\322\264-\024cosmos.AddressString"
    "R\rvalidatorAddr:\010\210\240\037\000\350\240\037\000\"m\n\037QueryDelega"
    "torValidatorResponse\022J\n\tvalidator\030\001 \001(\0132"
    "!.cosmos.staking.v1beta1.ValidatorB\t\310\336\037\000"
    "\250\347\260*\001R\tvalidator\"4\n\032QueryHistoricalInfoR"
    "equest\022\026\n\006height\030\001 \001(\003R\006height\"Y\n\033QueryH"
    "istoricalInfoResponse\022:\n\004hist\030\001 \001(\0132&.co"
    "smos.staking.v1beta1.HistoricalInfoR\004his"
    "t\"\022\n\020QueryPoolRequest\"P\n\021QueryPoolRespon"
    "se\022;\n\004pool\030\001 \001(\0132\034.cosmos.staking.v1beta"
    "1.PoolB\t\310\336\037\000\250\347\260*\001R\004pool\"\024\n\022QueryParamsRe"
    "quest\"X\n\023QueryParamsResponse\022A\n\006params\030\001"
    " \001(\0132\036.cosmos.staking.v1beta1.ParamsB\t\310\336"
    "\037\000\250\347\260*\001R\006params2\260\026\n\005Query\022\236\001\n\nValidators"
    "\022..cosmos.staking.v1beta1.QueryValidator"
    "sRequest\032/.cosmos.staking.v1beta1.QueryV"
    "alidatorsResponse\"/\210\347\260*\001\202\323\344\223\002$\022\"/cosmos/"
    "staking/v1beta1/validators\022\254\001\n\tValidator"
    "\022-.cosmos.staking.v1beta1.QueryValidator"
    "Request\032..cosmos.staking.v1beta1.QueryVa"
    "lidatorResponse\"@\210\347\260*\001\202\323\344\223\0025\0223/cosmos/st"
    "aking/v1beta1/validators/{validator_addr"
    "}\022\331\001\n\024ValidatorDelegations\0228.cosmos.stak"
    "ing.v1beta1.QueryValidatorDelegationsReq"
    "uest\0329.cosmos.staking.v1beta1.QueryValid"
    "atorDelegationsResponse\"L\210\347\260*\001\202\323\344\223\002A\022\?/c"
    "osmos/staking/v1beta1/validators/{valida"
    "tor_addr}/delegations\022\376\001\n\035ValidatorUnbon"
    "dingDelegations\022A.cosmos.staking.v1beta1"
    ".QueryValidatorUnbondingDelegationsReque"
    "st\032B.cosmos.staking.v1beta1.QueryValidat"
    "orUnbondingDelegationsResponse\"V\210\347\260*\001\202\323\344"
    "\223\002K\022I/cosmos/staking/v1beta1/validators/"
    "{validator_addr}/unbonding_delegations\022\314"
    "\001\n\nDelegation\022..cosmos.staking.v1beta1.Q"
    "ueryDelegationRequest\032/.cosmos.staking.v"
    "1beta1.QueryDelegationResponse\"]\210\347\260*\001\202\323\344"
    "\223\002R\022P/cosmos/staking/v1beta1/validators/"
    "{validator_addr}/delegations/{delegator_"
    "addr}\022\374\001\n\023UnbondingDelegation\0227.cosmos.s"
    "taking.v1beta1.QueryUnbondingDelegationR"
    "equest\0328.cosmos.staking.v1beta1.QueryUnb"
    "ondingDelegationResponse\"r\210\347\260*\001\202\323\344\223\002g\022e/"
    "cosmos/staking/v1beta1/validators/{valid"
    "ator_addr}/delegations/{delegator_addr}/"
    "unbonding_delegation\022\316\001\n\024DelegatorDelega"
    "tions\0228.cosmos.staking.v1beta1.QueryDele"
    "gatorDelegationsRequest\0329.cosmos.staking"
    ".v1beta1.QueryDelegatorDelegationsRespon"
    "se\"A\210\347\260*\001\202\323\344\223\0026\0224/cosmos/staking/v1beta1"
    "/delegations/{delegator_addr}\022\376\001\n\035Delega"
    "torUnbondingDelegations\022A.cosmos.staking"
    ".v1beta1.QueryDelegatorUnbondingDelegati"
    "onsRequest\032B.cosmos.staking.v1beta1.Quer"
    "yDelegatorUnbondingDelegationsResponse\"V"
    "\210\347\260*\001\202\323\344\223\002K\022I/cosmos/staking/v1beta1/del"
    "egators/{delegator_addr}/unbonding_deleg"
    "ations\022\306\001\n\rRedelegations\0221.cosmos.stakin"
    "g.v1beta1.QueryRedelegationsRequest\0322.co"
    "smos.staking.v1beta1.QueryRedelegationsR"
    "esponse\"N\210\347\260*\001\202\323\344\223\002C\022A/cosmos/staking/v1"
    "beta1/delegators/{delegator_addr}/redele"
    "gations\022\325\001\n\023DelegatorValidators\0227.cosmos"
    ".staking.v1beta1.QueryDelegatorValidator"
    "sRequest\0328.cosmos.staking.v1beta1.QueryD"
    "elegatorValidatorsResponse\"K\210\347\260*\001\202\323\344\223\002@\022"
    ">/cosmos/staking/v1beta1/delegators/{del"
    "egator_addr}/validators\022\343\001\n\022DelegatorVal"
    "idator\0226.cosmos.staking.v1beta1.QueryDel"
    "egatorValidatorRequest\0327.cosmos.staking."
    "v1beta1.QueryDelegatorValidatorResponse\""
    "\\\210\347\260*\001\202\323\344\223\002Q\022O/cosmos/staking/v1beta1/de"
    "legators/{delegator_addr}/validators/{va"
    "lidator_addr}\022\270\001\n\016HistoricalInfo\0222.cosmo"
    "s.staking.v1beta1.QueryHistoricalInfoReq"
    "uest\0323.cosmos.staking.v1beta1.QueryHisto"
    "ricalInfoResponse\"=\210\347\260*\001\202\323\344\223\0022\0220/cosmos/"
    "staking/v1beta1/historical_info/{height}"
    "\022\206\001\n\004Pool\022(.cosmos.staking.v1beta1.Query"
    "PoolRequest\032).cosmos.staking.v1beta1.Que"
    "ryPoolResponse\")\210\347\260*\001\202\323\344\223\002\036\022\034/cosmos/sta"
    "king/v1beta1/pool\022\216\001\n\006Params\022*.cosmos.st"
    "aking.v1beta1.QueryParamsRequest\032+.cosmo"
    "s.staking.v1beta1.QueryParamsResponse\"+\210"
    "\347\260*\001\202\323\344\223\002 \022\036/cosmos/staking/v1beta1/para"
    "msB\320\001\n\032com.cosmos.staking.v1beta1B\nQuery"
    "ProtoP\001Z,github.com/cosmos/cosmos-sdk/x/"
    "staking/types\242\002\003CSX\252\002\026Cosmos.Staking.V1b"
    "eta1\312\002\026Cosmos\\Staking\\V1beta1\342\002\"Cosmos\\S"
    "taking\\V1beta1\\GPBMetadata\352\002\030Cosmos::Sta"
    "king::V1beta1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_deps[7] =
    {
        &::descriptor_table_amino_2famino_2eproto,
        &::descriptor_table_cosmos_2fbase_2fquery_2fv1beta1_2fpagination_2eproto,
        &::descriptor_table_cosmos_2fquery_2fv1_2fquery_2eproto,
        &::descriptor_table_cosmos_2fstaking_2fv1beta1_2fstaking_2eproto,
        &::descriptor_table_cosmos_5fproto_2fcosmos_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_google_2fapi_2fannotations_2eproto,
};
static ::absl::once_flag descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto = {
    false,
    false,
    7621,
    descriptor_table_protodef_cosmos_2fstaking_2fv1beta1_2fquery_2eproto,
    "cosmos/staking/v1beta1/query.proto",
    &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_once,
    descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_deps,
    7,
    28,
    schemas,
    file_default_instances,
    TableStruct_cosmos_2fstaking_2fv1beta1_2fquery_2eproto::offsets,
    file_level_metadata_cosmos_2fstaking_2fv1beta1_2fquery_2eproto,
    file_level_enum_descriptors_cosmos_2fstaking_2fv1beta1_2fquery_2eproto,
    file_level_service_descriptors_cosmos_2fstaking_2fv1beta1_2fquery_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_getter() {
  return &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_cosmos_2fstaking_2fv1beta1_2fquery_2eproto(&descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto);
namespace cosmos {
namespace staking {
namespace v1beta1 {
// ===================================================================

class QueryValidatorsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryValidatorsRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryValidatorsRequest, _impl_._has_bits_);
  static const ::cosmos::base::query::v1beta1::PageRequest& pagination(const QueryValidatorsRequest* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::query::v1beta1::PageRequest&
QueryValidatorsRequest::_Internal::pagination(const QueryValidatorsRequest* msg) {
  return *msg->_impl_.pagination_;
}
void QueryValidatorsRequest::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryValidatorsRequest::QueryValidatorsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.QueryValidatorsRequest)
}
QueryValidatorsRequest::QueryValidatorsRequest(const QueryValidatorsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryValidatorsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.status_) {}

    , decltype(_impl_.pagination_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.status_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.status_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_status().empty()) {
    _this->_impl_.status_.Set(from._internal_status(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::cosmos::base::query::v1beta1::PageRequest(*from._impl_.pagination_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.QueryValidatorsRequest)
}

inline void QueryValidatorsRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.status_) {}

    , decltype(_impl_.pagination_){nullptr}
  };
  _impl_.status_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.status_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryValidatorsRequest::~QueryValidatorsRequest() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.QueryValidatorsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryValidatorsRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.status_.Destroy();
  if (this != internal_default_instance()) delete _impl_.pagination_;
}

void QueryValidatorsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryValidatorsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.QueryValidatorsRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.status_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryValidatorsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string status = 1 [json_name = "status"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_status();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.staking.v1beta1.QueryValidatorsRequest.status"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagination(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryValidatorsRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.QueryValidatorsRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string status = 1 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    const std::string& _s = this->_internal_status();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.QueryValidatorsRequest.status");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.QueryValidatorsRequest)
  return target;
}

::size_t QueryValidatorsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.QueryValidatorsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 1 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_status());
  }

  // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryValidatorsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryValidatorsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryValidatorsRequest::GetClassData() const { return &_class_data_; }


void QueryValidatorsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryValidatorsRequest*>(&to_msg);
  auto& from = static_cast<const QueryValidatorsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.QueryValidatorsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _this->_internal_set_status(from._internal_status());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::cosmos::base::query::v1beta1::PageRequest::MergeFrom(
        from._internal_pagination());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryValidatorsRequest::CopyFrom(const QueryValidatorsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.QueryValidatorsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryValidatorsRequest::IsInitialized() const {
  return true;
}

void QueryValidatorsRequest::InternalSwap(QueryValidatorsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.status_, lhs_arena,
                                       &other->_impl_.status_, rhs_arena);
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryValidatorsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fstaking_2fv1beta1_2fquery_2eproto[0]);
}
// ===================================================================

class QueryValidatorsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryValidatorsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryValidatorsResponse, _impl_._has_bits_);
  static const ::cosmos::base::query::v1beta1::PageResponse& pagination(const QueryValidatorsResponse* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::query::v1beta1::PageResponse&
QueryValidatorsResponse::_Internal::pagination(const QueryValidatorsResponse* msg) {
  return *msg->_impl_.pagination_;
}
void QueryValidatorsResponse::clear_validators() {
  _internal_mutable_validators()->Clear();
}
void QueryValidatorsResponse::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryValidatorsResponse::QueryValidatorsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.QueryValidatorsResponse)
}
QueryValidatorsResponse::QueryValidatorsResponse(const QueryValidatorsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryValidatorsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.validators_){from._impl_.validators_}
    , decltype(_impl_.pagination_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::cosmos::base::query::v1beta1::PageResponse(*from._impl_.pagination_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.QueryValidatorsResponse)
}

inline void QueryValidatorsResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.validators_){arena}
    , decltype(_impl_.pagination_){nullptr}
  };
}

QueryValidatorsResponse::~QueryValidatorsResponse() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.QueryValidatorsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryValidatorsResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_validators()->~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.pagination_;
}

void QueryValidatorsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryValidatorsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.QueryValidatorsResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_validators()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryValidatorsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .cosmos.staking.v1beta1.Validator validators = 1 [json_name = "validators", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_validators(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagination(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryValidatorsResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.QueryValidatorsResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cosmos.staking.v1beta1.Validator validators = 1 [json_name = "validators", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_validators_size()); i < n; i++) {
    const auto& repfield = this->_internal_validators(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.QueryValidatorsResponse)
  return target;
}

::size_t QueryValidatorsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.QueryValidatorsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cosmos.staking.v1beta1.Validator validators = 1 [json_name = "validators", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  total_size += 1UL * this->_internal_validators_size();
  for (const auto& msg : this->_internal_validators()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryValidatorsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryValidatorsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryValidatorsResponse::GetClassData() const { return &_class_data_; }


void QueryValidatorsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryValidatorsResponse*>(&to_msg);
  auto& from = static_cast<const QueryValidatorsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.QueryValidatorsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_validators()->MergeFrom(from._internal_validators());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::cosmos::base::query::v1beta1::PageResponse::MergeFrom(
        from._internal_pagination());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryValidatorsResponse::CopyFrom(const QueryValidatorsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.QueryValidatorsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryValidatorsResponse::IsInitialized() const {
  return true;
}

void QueryValidatorsResponse::InternalSwap(QueryValidatorsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _internal_mutable_validators()->InternalSwap(other->_internal_mutable_validators());
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryValidatorsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fstaking_2fv1beta1_2fquery_2eproto[1]);
}
// ===================================================================

class QueryValidatorRequest::_Internal {
 public:
};

QueryValidatorRequest::QueryValidatorRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.QueryValidatorRequest)
}
QueryValidatorRequest::QueryValidatorRequest(const QueryValidatorRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryValidatorRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.validator_addr_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.validator_addr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.validator_addr_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_validator_addr().empty()) {
    _this->_impl_.validator_addr_.Set(from._internal_validator_addr(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.QueryValidatorRequest)
}

inline void QueryValidatorRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.validator_addr_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.validator_addr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.validator_addr_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryValidatorRequest::~QueryValidatorRequest() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.QueryValidatorRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryValidatorRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.validator_addr_.Destroy();
}

void QueryValidatorRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryValidatorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.QueryValidatorRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.validator_addr_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryValidatorRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string validator_addr = 1 [json_name = "validatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_validator_addr();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.staking.v1beta1.QueryValidatorRequest.validator_addr"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryValidatorRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.QueryValidatorRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string validator_addr = 1 [json_name = "validatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_validator_addr().empty()) {
    const std::string& _s = this->_internal_validator_addr();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.QueryValidatorRequest.validator_addr");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.QueryValidatorRequest)
  return target;
}

::size_t QueryValidatorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.QueryValidatorRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string validator_addr = 1 [json_name = "validatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_validator_addr().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_validator_addr());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryValidatorRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryValidatorRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryValidatorRequest::GetClassData() const { return &_class_data_; }


void QueryValidatorRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryValidatorRequest*>(&to_msg);
  auto& from = static_cast<const QueryValidatorRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.QueryValidatorRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_validator_addr().empty()) {
    _this->_internal_set_validator_addr(from._internal_validator_addr());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryValidatorRequest::CopyFrom(const QueryValidatorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.QueryValidatorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryValidatorRequest::IsInitialized() const {
  return true;
}

void QueryValidatorRequest::InternalSwap(QueryValidatorRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.validator_addr_, lhs_arena,
                                       &other->_impl_.validator_addr_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryValidatorRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fstaking_2fv1beta1_2fquery_2eproto[2]);
}
// ===================================================================

class QueryValidatorResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryValidatorResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryValidatorResponse, _impl_._has_bits_);
  static const ::cosmos::staking::v1beta1::Validator& validator(const QueryValidatorResponse* msg);
  static void set_has_validator(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::staking::v1beta1::Validator&
QueryValidatorResponse::_Internal::validator(const QueryValidatorResponse* msg) {
  return *msg->_impl_.validator_;
}
void QueryValidatorResponse::clear_validator() {
  if (_impl_.validator_ != nullptr) _impl_.validator_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryValidatorResponse::QueryValidatorResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.QueryValidatorResponse)
}
QueryValidatorResponse::QueryValidatorResponse(const QueryValidatorResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryValidatorResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.validator_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.validator_ = new ::cosmos::staking::v1beta1::Validator(*from._impl_.validator_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.QueryValidatorResponse)
}

inline void QueryValidatorResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.validator_){nullptr}
  };
}

QueryValidatorResponse::~QueryValidatorResponse() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.QueryValidatorResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryValidatorResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.validator_;
}

void QueryValidatorResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryValidatorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.QueryValidatorResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.validator_ != nullptr);
    _impl_.validator_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryValidatorResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cosmos.staking.v1beta1.Validator validator = 1 [json_name = "validator", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_validator(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryValidatorResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.QueryValidatorResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.staking.v1beta1.Validator validator = 1 [json_name = "validator", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::validator(this),
        _Internal::validator(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.QueryValidatorResponse)
  return target;
}

::size_t QueryValidatorResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.QueryValidatorResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cosmos.staking.v1beta1.Validator validator = 1 [json_name = "validator", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.validator_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryValidatorResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryValidatorResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryValidatorResponse::GetClassData() const { return &_class_data_; }


void QueryValidatorResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryValidatorResponse*>(&to_msg);
  auto& from = static_cast<const QueryValidatorResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.QueryValidatorResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_validator()->::cosmos::staking::v1beta1::Validator::MergeFrom(
        from._internal_validator());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryValidatorResponse::CopyFrom(const QueryValidatorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.QueryValidatorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryValidatorResponse::IsInitialized() const {
  return true;
}

void QueryValidatorResponse::InternalSwap(QueryValidatorResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.validator_, other->_impl_.validator_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryValidatorResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fstaking_2fv1beta1_2fquery_2eproto[3]);
}
// ===================================================================

class QueryValidatorDelegationsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryValidatorDelegationsRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryValidatorDelegationsRequest, _impl_._has_bits_);
  static const ::cosmos::base::query::v1beta1::PageRequest& pagination(const QueryValidatorDelegationsRequest* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::query::v1beta1::PageRequest&
QueryValidatorDelegationsRequest::_Internal::pagination(const QueryValidatorDelegationsRequest* msg) {
  return *msg->_impl_.pagination_;
}
void QueryValidatorDelegationsRequest::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryValidatorDelegationsRequest::QueryValidatorDelegationsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.QueryValidatorDelegationsRequest)
}
QueryValidatorDelegationsRequest::QueryValidatorDelegationsRequest(const QueryValidatorDelegationsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryValidatorDelegationsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.validator_addr_) {}

    , decltype(_impl_.pagination_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.validator_addr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.validator_addr_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_validator_addr().empty()) {
    _this->_impl_.validator_addr_.Set(from._internal_validator_addr(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::cosmos::base::query::v1beta1::PageRequest(*from._impl_.pagination_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.QueryValidatorDelegationsRequest)
}

inline void QueryValidatorDelegationsRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.validator_addr_) {}

    , decltype(_impl_.pagination_){nullptr}
  };
  _impl_.validator_addr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.validator_addr_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryValidatorDelegationsRequest::~QueryValidatorDelegationsRequest() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.QueryValidatorDelegationsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryValidatorDelegationsRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.validator_addr_.Destroy();
  if (this != internal_default_instance()) delete _impl_.pagination_;
}

void QueryValidatorDelegationsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryValidatorDelegationsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.QueryValidatorDelegationsRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.validator_addr_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryValidatorDelegationsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string validator_addr = 1 [json_name = "validatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_validator_addr();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.staking.v1beta1.QueryValidatorDelegationsRequest.validator_addr"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagination(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryValidatorDelegationsRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.QueryValidatorDelegationsRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string validator_addr = 1 [json_name = "validatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_validator_addr().empty()) {
    const std::string& _s = this->_internal_validator_addr();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.QueryValidatorDelegationsRequest.validator_addr");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.QueryValidatorDelegationsRequest)
  return target;
}

::size_t QueryValidatorDelegationsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.QueryValidatorDelegationsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string validator_addr = 1 [json_name = "validatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_validator_addr().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_validator_addr());
  }

  // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryValidatorDelegationsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryValidatorDelegationsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryValidatorDelegationsRequest::GetClassData() const { return &_class_data_; }


void QueryValidatorDelegationsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryValidatorDelegationsRequest*>(&to_msg);
  auto& from = static_cast<const QueryValidatorDelegationsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.QueryValidatorDelegationsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_validator_addr().empty()) {
    _this->_internal_set_validator_addr(from._internal_validator_addr());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::cosmos::base::query::v1beta1::PageRequest::MergeFrom(
        from._internal_pagination());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryValidatorDelegationsRequest::CopyFrom(const QueryValidatorDelegationsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.QueryValidatorDelegationsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryValidatorDelegationsRequest::IsInitialized() const {
  return true;
}

void QueryValidatorDelegationsRequest::InternalSwap(QueryValidatorDelegationsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.validator_addr_, lhs_arena,
                                       &other->_impl_.validator_addr_, rhs_arena);
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryValidatorDelegationsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fstaking_2fv1beta1_2fquery_2eproto[4]);
}
// ===================================================================

class QueryValidatorDelegationsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryValidatorDelegationsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryValidatorDelegationsResponse, _impl_._has_bits_);
  static const ::cosmos::base::query::v1beta1::PageResponse& pagination(const QueryValidatorDelegationsResponse* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::query::v1beta1::PageResponse&
QueryValidatorDelegationsResponse::_Internal::pagination(const QueryValidatorDelegationsResponse* msg) {
  return *msg->_impl_.pagination_;
}
void QueryValidatorDelegationsResponse::clear_delegation_responses() {
  _internal_mutable_delegation_responses()->Clear();
}
void QueryValidatorDelegationsResponse::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryValidatorDelegationsResponse::QueryValidatorDelegationsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.QueryValidatorDelegationsResponse)
}
QueryValidatorDelegationsResponse::QueryValidatorDelegationsResponse(const QueryValidatorDelegationsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryValidatorDelegationsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.delegation_responses_){from._impl_.delegation_responses_}
    , decltype(_impl_.pagination_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::cosmos::base::query::v1beta1::PageResponse(*from._impl_.pagination_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.QueryValidatorDelegationsResponse)
}

inline void QueryValidatorDelegationsResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.delegation_responses_){arena}
    , decltype(_impl_.pagination_){nullptr}
  };
}

QueryValidatorDelegationsResponse::~QueryValidatorDelegationsResponse() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.QueryValidatorDelegationsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryValidatorDelegationsResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_delegation_responses()->~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.pagination_;
}

void QueryValidatorDelegationsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryValidatorDelegationsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.QueryValidatorDelegationsResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_delegation_responses()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryValidatorDelegationsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .cosmos.staking.v1beta1.DelegationResponse delegation_responses = 1 [json_name = "delegationResponses", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "DelegationResponses", (.amino.dont_omitempty) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_delegation_responses(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagination(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryValidatorDelegationsResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.QueryValidatorDelegationsResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cosmos.staking.v1beta1.DelegationResponse delegation_responses = 1 [json_name = "delegationResponses", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "DelegationResponses", (.amino.dont_omitempty) = true];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_delegation_responses_size()); i < n; i++) {
    const auto& repfield = this->_internal_delegation_responses(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.QueryValidatorDelegationsResponse)
  return target;
}

::size_t QueryValidatorDelegationsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.QueryValidatorDelegationsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cosmos.staking.v1beta1.DelegationResponse delegation_responses = 1 [json_name = "delegationResponses", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "DelegationResponses", (.amino.dont_omitempty) = true];
  total_size += 1UL * this->_internal_delegation_responses_size();
  for (const auto& msg : this->_internal_delegation_responses()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryValidatorDelegationsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryValidatorDelegationsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryValidatorDelegationsResponse::GetClassData() const { return &_class_data_; }


void QueryValidatorDelegationsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryValidatorDelegationsResponse*>(&to_msg);
  auto& from = static_cast<const QueryValidatorDelegationsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.QueryValidatorDelegationsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_delegation_responses()->MergeFrom(from._internal_delegation_responses());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::cosmos::base::query::v1beta1::PageResponse::MergeFrom(
        from._internal_pagination());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryValidatorDelegationsResponse::CopyFrom(const QueryValidatorDelegationsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.QueryValidatorDelegationsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryValidatorDelegationsResponse::IsInitialized() const {
  return true;
}

void QueryValidatorDelegationsResponse::InternalSwap(QueryValidatorDelegationsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _internal_mutable_delegation_responses()->InternalSwap(other->_internal_mutable_delegation_responses());
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryValidatorDelegationsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fstaking_2fv1beta1_2fquery_2eproto[5]);
}
// ===================================================================

class QueryValidatorUnbondingDelegationsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryValidatorUnbondingDelegationsRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryValidatorUnbondingDelegationsRequest, _impl_._has_bits_);
  static const ::cosmos::base::query::v1beta1::PageRequest& pagination(const QueryValidatorUnbondingDelegationsRequest* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::query::v1beta1::PageRequest&
QueryValidatorUnbondingDelegationsRequest::_Internal::pagination(const QueryValidatorUnbondingDelegationsRequest* msg) {
  return *msg->_impl_.pagination_;
}
void QueryValidatorUnbondingDelegationsRequest::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryValidatorUnbondingDelegationsRequest::QueryValidatorUnbondingDelegationsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsRequest)
}
QueryValidatorUnbondingDelegationsRequest::QueryValidatorUnbondingDelegationsRequest(const QueryValidatorUnbondingDelegationsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryValidatorUnbondingDelegationsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.validator_addr_) {}

    , decltype(_impl_.pagination_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.validator_addr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.validator_addr_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_validator_addr().empty()) {
    _this->_impl_.validator_addr_.Set(from._internal_validator_addr(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::cosmos::base::query::v1beta1::PageRequest(*from._impl_.pagination_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsRequest)
}

inline void QueryValidatorUnbondingDelegationsRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.validator_addr_) {}

    , decltype(_impl_.pagination_){nullptr}
  };
  _impl_.validator_addr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.validator_addr_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryValidatorUnbondingDelegationsRequest::~QueryValidatorUnbondingDelegationsRequest() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryValidatorUnbondingDelegationsRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.validator_addr_.Destroy();
  if (this != internal_default_instance()) delete _impl_.pagination_;
}

void QueryValidatorUnbondingDelegationsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryValidatorUnbondingDelegationsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.validator_addr_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryValidatorUnbondingDelegationsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string validator_addr = 1 [json_name = "validatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_validator_addr();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsRequest.validator_addr"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagination(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryValidatorUnbondingDelegationsRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string validator_addr = 1 [json_name = "validatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_validator_addr().empty()) {
    const std::string& _s = this->_internal_validator_addr();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsRequest.validator_addr");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsRequest)
  return target;
}

::size_t QueryValidatorUnbondingDelegationsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string validator_addr = 1 [json_name = "validatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_validator_addr().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_validator_addr());
  }

  // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryValidatorUnbondingDelegationsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryValidatorUnbondingDelegationsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryValidatorUnbondingDelegationsRequest::GetClassData() const { return &_class_data_; }


void QueryValidatorUnbondingDelegationsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryValidatorUnbondingDelegationsRequest*>(&to_msg);
  auto& from = static_cast<const QueryValidatorUnbondingDelegationsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_validator_addr().empty()) {
    _this->_internal_set_validator_addr(from._internal_validator_addr());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::cosmos::base::query::v1beta1::PageRequest::MergeFrom(
        from._internal_pagination());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryValidatorUnbondingDelegationsRequest::CopyFrom(const QueryValidatorUnbondingDelegationsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryValidatorUnbondingDelegationsRequest::IsInitialized() const {
  return true;
}

void QueryValidatorUnbondingDelegationsRequest::InternalSwap(QueryValidatorUnbondingDelegationsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.validator_addr_, lhs_arena,
                                       &other->_impl_.validator_addr_, rhs_arena);
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryValidatorUnbondingDelegationsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fstaking_2fv1beta1_2fquery_2eproto[6]);
}
// ===================================================================

class QueryValidatorUnbondingDelegationsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryValidatorUnbondingDelegationsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryValidatorUnbondingDelegationsResponse, _impl_._has_bits_);
  static const ::cosmos::base::query::v1beta1::PageResponse& pagination(const QueryValidatorUnbondingDelegationsResponse* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::query::v1beta1::PageResponse&
QueryValidatorUnbondingDelegationsResponse::_Internal::pagination(const QueryValidatorUnbondingDelegationsResponse* msg) {
  return *msg->_impl_.pagination_;
}
void QueryValidatorUnbondingDelegationsResponse::clear_unbonding_responses() {
  _internal_mutable_unbonding_responses()->Clear();
}
void QueryValidatorUnbondingDelegationsResponse::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryValidatorUnbondingDelegationsResponse::QueryValidatorUnbondingDelegationsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse)
}
QueryValidatorUnbondingDelegationsResponse::QueryValidatorUnbondingDelegationsResponse(const QueryValidatorUnbondingDelegationsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryValidatorUnbondingDelegationsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.unbonding_responses_){from._impl_.unbonding_responses_}
    , decltype(_impl_.pagination_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::cosmos::base::query::v1beta1::PageResponse(*from._impl_.pagination_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse)
}

inline void QueryValidatorUnbondingDelegationsResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.unbonding_responses_){arena}
    , decltype(_impl_.pagination_){nullptr}
  };
}

QueryValidatorUnbondingDelegationsResponse::~QueryValidatorUnbondingDelegationsResponse() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryValidatorUnbondingDelegationsResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_unbonding_responses()->~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.pagination_;
}

void QueryValidatorUnbondingDelegationsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryValidatorUnbondingDelegationsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_unbonding_responses()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryValidatorUnbondingDelegationsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .cosmos.staking.v1beta1.UnbondingDelegation unbonding_responses = 1 [json_name = "unbondingResponses", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_unbonding_responses(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagination(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryValidatorUnbondingDelegationsResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cosmos.staking.v1beta1.UnbondingDelegation unbonding_responses = 1 [json_name = "unbondingResponses", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_unbonding_responses_size()); i < n; i++) {
    const auto& repfield = this->_internal_unbonding_responses(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse)
  return target;
}

::size_t QueryValidatorUnbondingDelegationsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cosmos.staking.v1beta1.UnbondingDelegation unbonding_responses = 1 [json_name = "unbondingResponses", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  total_size += 1UL * this->_internal_unbonding_responses_size();
  for (const auto& msg : this->_internal_unbonding_responses()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryValidatorUnbondingDelegationsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryValidatorUnbondingDelegationsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryValidatorUnbondingDelegationsResponse::GetClassData() const { return &_class_data_; }


void QueryValidatorUnbondingDelegationsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryValidatorUnbondingDelegationsResponse*>(&to_msg);
  auto& from = static_cast<const QueryValidatorUnbondingDelegationsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_unbonding_responses()->MergeFrom(from._internal_unbonding_responses());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::cosmos::base::query::v1beta1::PageResponse::MergeFrom(
        from._internal_pagination());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryValidatorUnbondingDelegationsResponse::CopyFrom(const QueryValidatorUnbondingDelegationsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryValidatorUnbondingDelegationsResponse::IsInitialized() const {
  return true;
}

void QueryValidatorUnbondingDelegationsResponse::InternalSwap(QueryValidatorUnbondingDelegationsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _internal_mutable_unbonding_responses()->InternalSwap(other->_internal_mutable_unbonding_responses());
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryValidatorUnbondingDelegationsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fstaking_2fv1beta1_2fquery_2eproto[7]);
}
// ===================================================================

class QueryDelegationRequest::_Internal {
 public:
};

QueryDelegationRequest::QueryDelegationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.QueryDelegationRequest)
}
QueryDelegationRequest::QueryDelegationRequest(const QueryDelegationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryDelegationRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.delegator_addr_) {}

    , decltype(_impl_.validator_addr_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.delegator_addr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.delegator_addr_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_delegator_addr().empty()) {
    _this->_impl_.delegator_addr_.Set(from._internal_delegator_addr(), _this->GetArenaForAllocation());
  }
  _impl_.validator_addr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.validator_addr_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_validator_addr().empty()) {
    _this->_impl_.validator_addr_.Set(from._internal_validator_addr(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.QueryDelegationRequest)
}

inline void QueryDelegationRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.delegator_addr_) {}

    , decltype(_impl_.validator_addr_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.delegator_addr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.delegator_addr_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.validator_addr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.validator_addr_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryDelegationRequest::~QueryDelegationRequest() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.QueryDelegationRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryDelegationRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.delegator_addr_.Destroy();
  _impl_.validator_addr_.Destroy();
}

void QueryDelegationRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryDelegationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.QueryDelegationRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.delegator_addr_.ClearToEmpty();
  _impl_.validator_addr_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryDelegationRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string delegator_addr = 1 [json_name = "delegatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_delegator_addr();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.staking.v1beta1.QueryDelegationRequest.delegator_addr"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string validator_addr = 2 [json_name = "validatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_validator_addr();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.staking.v1beta1.QueryDelegationRequest.validator_addr"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryDelegationRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.QueryDelegationRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string delegator_addr = 1 [json_name = "delegatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_delegator_addr().empty()) {
    const std::string& _s = this->_internal_delegator_addr();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.QueryDelegationRequest.delegator_addr");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string validator_addr = 2 [json_name = "validatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_validator_addr().empty()) {
    const std::string& _s = this->_internal_validator_addr();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.QueryDelegationRequest.validator_addr");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.QueryDelegationRequest)
  return target;
}

::size_t QueryDelegationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.QueryDelegationRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string delegator_addr = 1 [json_name = "delegatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_delegator_addr().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_delegator_addr());
  }

  // string validator_addr = 2 [json_name = "validatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_validator_addr().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_validator_addr());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryDelegationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryDelegationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryDelegationRequest::GetClassData() const { return &_class_data_; }


void QueryDelegationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryDelegationRequest*>(&to_msg);
  auto& from = static_cast<const QueryDelegationRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.QueryDelegationRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_delegator_addr().empty()) {
    _this->_internal_set_delegator_addr(from._internal_delegator_addr());
  }
  if (!from._internal_validator_addr().empty()) {
    _this->_internal_set_validator_addr(from._internal_validator_addr());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryDelegationRequest::CopyFrom(const QueryDelegationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.QueryDelegationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDelegationRequest::IsInitialized() const {
  return true;
}

void QueryDelegationRequest::InternalSwap(QueryDelegationRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.delegator_addr_, lhs_arena,
                                       &other->_impl_.delegator_addr_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.validator_addr_, lhs_arena,
                                       &other->_impl_.validator_addr_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryDelegationRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fstaking_2fv1beta1_2fquery_2eproto[8]);
}
// ===================================================================

class QueryDelegationResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryDelegationResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryDelegationResponse, _impl_._has_bits_);
  static const ::cosmos::staking::v1beta1::DelegationResponse& delegation_response(const QueryDelegationResponse* msg);
  static void set_has_delegation_response(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::staking::v1beta1::DelegationResponse&
QueryDelegationResponse::_Internal::delegation_response(const QueryDelegationResponse* msg) {
  return *msg->_impl_.delegation_response_;
}
void QueryDelegationResponse::clear_delegation_response() {
  if (_impl_.delegation_response_ != nullptr) _impl_.delegation_response_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryDelegationResponse::QueryDelegationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.QueryDelegationResponse)
}
QueryDelegationResponse::QueryDelegationResponse(const QueryDelegationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryDelegationResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.delegation_response_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.delegation_response_ = new ::cosmos::staking::v1beta1::DelegationResponse(*from._impl_.delegation_response_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.QueryDelegationResponse)
}

inline void QueryDelegationResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.delegation_response_){nullptr}
  };
}

QueryDelegationResponse::~QueryDelegationResponse() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.QueryDelegationResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryDelegationResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.delegation_response_;
}

void QueryDelegationResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryDelegationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.QueryDelegationResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.delegation_response_ != nullptr);
    _impl_.delegation_response_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryDelegationResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cosmos.staking.v1beta1.DelegationResponse delegation_response = 1 [json_name = "delegationResponse"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_delegation_response(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryDelegationResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.QueryDelegationResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.staking.v1beta1.DelegationResponse delegation_response = 1 [json_name = "delegationResponse"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::delegation_response(this),
        _Internal::delegation_response(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.QueryDelegationResponse)
  return target;
}

::size_t QueryDelegationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.QueryDelegationResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cosmos.staking.v1beta1.DelegationResponse delegation_response = 1 [json_name = "delegationResponse"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.delegation_response_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryDelegationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryDelegationResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryDelegationResponse::GetClassData() const { return &_class_data_; }


void QueryDelegationResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryDelegationResponse*>(&to_msg);
  auto& from = static_cast<const QueryDelegationResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.QueryDelegationResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_delegation_response()->::cosmos::staking::v1beta1::DelegationResponse::MergeFrom(
        from._internal_delegation_response());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryDelegationResponse::CopyFrom(const QueryDelegationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.QueryDelegationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDelegationResponse::IsInitialized() const {
  return true;
}

void QueryDelegationResponse::InternalSwap(QueryDelegationResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.delegation_response_, other->_impl_.delegation_response_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryDelegationResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fstaking_2fv1beta1_2fquery_2eproto[9]);
}
// ===================================================================

class QueryUnbondingDelegationRequest::_Internal {
 public:
};

QueryUnbondingDelegationRequest::QueryUnbondingDelegationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.QueryUnbondingDelegationRequest)
}
QueryUnbondingDelegationRequest::QueryUnbondingDelegationRequest(const QueryUnbondingDelegationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryUnbondingDelegationRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.delegator_addr_) {}

    , decltype(_impl_.validator_addr_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.delegator_addr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.delegator_addr_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_delegator_addr().empty()) {
    _this->_impl_.delegator_addr_.Set(from._internal_delegator_addr(), _this->GetArenaForAllocation());
  }
  _impl_.validator_addr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.validator_addr_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_validator_addr().empty()) {
    _this->_impl_.validator_addr_.Set(from._internal_validator_addr(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.QueryUnbondingDelegationRequest)
}

inline void QueryUnbondingDelegationRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.delegator_addr_) {}

    , decltype(_impl_.validator_addr_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.delegator_addr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.delegator_addr_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.validator_addr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.validator_addr_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryUnbondingDelegationRequest::~QueryUnbondingDelegationRequest() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.QueryUnbondingDelegationRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryUnbondingDelegationRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.delegator_addr_.Destroy();
  _impl_.validator_addr_.Destroy();
}

void QueryUnbondingDelegationRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryUnbondingDelegationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.QueryUnbondingDelegationRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.delegator_addr_.ClearToEmpty();
  _impl_.validator_addr_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryUnbondingDelegationRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string delegator_addr = 1 [json_name = "delegatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_delegator_addr();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.staking.v1beta1.QueryUnbondingDelegationRequest.delegator_addr"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string validator_addr = 2 [json_name = "validatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_validator_addr();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.staking.v1beta1.QueryUnbondingDelegationRequest.validator_addr"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryUnbondingDelegationRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.QueryUnbondingDelegationRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string delegator_addr = 1 [json_name = "delegatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_delegator_addr().empty()) {
    const std::string& _s = this->_internal_delegator_addr();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.QueryUnbondingDelegationRequest.delegator_addr");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string validator_addr = 2 [json_name = "validatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_validator_addr().empty()) {
    const std::string& _s = this->_internal_validator_addr();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.QueryUnbondingDelegationRequest.validator_addr");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.QueryUnbondingDelegationRequest)
  return target;
}

::size_t QueryUnbondingDelegationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.QueryUnbondingDelegationRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string delegator_addr = 1 [json_name = "delegatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_delegator_addr().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_delegator_addr());
  }

  // string validator_addr = 2 [json_name = "validatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_validator_addr().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_validator_addr());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryUnbondingDelegationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryUnbondingDelegationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryUnbondingDelegationRequest::GetClassData() const { return &_class_data_; }


void QueryUnbondingDelegationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryUnbondingDelegationRequest*>(&to_msg);
  auto& from = static_cast<const QueryUnbondingDelegationRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.QueryUnbondingDelegationRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_delegator_addr().empty()) {
    _this->_internal_set_delegator_addr(from._internal_delegator_addr());
  }
  if (!from._internal_validator_addr().empty()) {
    _this->_internal_set_validator_addr(from._internal_validator_addr());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryUnbondingDelegationRequest::CopyFrom(const QueryUnbondingDelegationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.QueryUnbondingDelegationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryUnbondingDelegationRequest::IsInitialized() const {
  return true;
}

void QueryUnbondingDelegationRequest::InternalSwap(QueryUnbondingDelegationRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.delegator_addr_, lhs_arena,
                                       &other->_impl_.delegator_addr_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.validator_addr_, lhs_arena,
                                       &other->_impl_.validator_addr_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryUnbondingDelegationRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fstaking_2fv1beta1_2fquery_2eproto[10]);
}
// ===================================================================

class QueryUnbondingDelegationResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryUnbondingDelegationResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryUnbondingDelegationResponse, _impl_._has_bits_);
  static const ::cosmos::staking::v1beta1::UnbondingDelegation& unbond(const QueryUnbondingDelegationResponse* msg);
  static void set_has_unbond(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::staking::v1beta1::UnbondingDelegation&
QueryUnbondingDelegationResponse::_Internal::unbond(const QueryUnbondingDelegationResponse* msg) {
  return *msg->_impl_.unbond_;
}
void QueryUnbondingDelegationResponse::clear_unbond() {
  if (_impl_.unbond_ != nullptr) _impl_.unbond_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryUnbondingDelegationResponse::QueryUnbondingDelegationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.QueryUnbondingDelegationResponse)
}
QueryUnbondingDelegationResponse::QueryUnbondingDelegationResponse(const QueryUnbondingDelegationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryUnbondingDelegationResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.unbond_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.unbond_ = new ::cosmos::staking::v1beta1::UnbondingDelegation(*from._impl_.unbond_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.QueryUnbondingDelegationResponse)
}

inline void QueryUnbondingDelegationResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.unbond_){nullptr}
  };
}

QueryUnbondingDelegationResponse::~QueryUnbondingDelegationResponse() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.QueryUnbondingDelegationResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryUnbondingDelegationResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.unbond_;
}

void QueryUnbondingDelegationResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryUnbondingDelegationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.QueryUnbondingDelegationResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.unbond_ != nullptr);
    _impl_.unbond_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryUnbondingDelegationResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cosmos.staking.v1beta1.UnbondingDelegation unbond = 1 [json_name = "unbond", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_unbond(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryUnbondingDelegationResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.QueryUnbondingDelegationResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.staking.v1beta1.UnbondingDelegation unbond = 1 [json_name = "unbond", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::unbond(this),
        _Internal::unbond(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.QueryUnbondingDelegationResponse)
  return target;
}

::size_t QueryUnbondingDelegationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.QueryUnbondingDelegationResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cosmos.staking.v1beta1.UnbondingDelegation unbond = 1 [json_name = "unbond", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.unbond_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryUnbondingDelegationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryUnbondingDelegationResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryUnbondingDelegationResponse::GetClassData() const { return &_class_data_; }


void QueryUnbondingDelegationResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryUnbondingDelegationResponse*>(&to_msg);
  auto& from = static_cast<const QueryUnbondingDelegationResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.QueryUnbondingDelegationResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_unbond()->::cosmos::staking::v1beta1::UnbondingDelegation::MergeFrom(
        from._internal_unbond());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryUnbondingDelegationResponse::CopyFrom(const QueryUnbondingDelegationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.QueryUnbondingDelegationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryUnbondingDelegationResponse::IsInitialized() const {
  return true;
}

void QueryUnbondingDelegationResponse::InternalSwap(QueryUnbondingDelegationResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.unbond_, other->_impl_.unbond_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryUnbondingDelegationResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fstaking_2fv1beta1_2fquery_2eproto[11]);
}
// ===================================================================

class QueryDelegatorDelegationsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryDelegatorDelegationsRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryDelegatorDelegationsRequest, _impl_._has_bits_);
  static const ::cosmos::base::query::v1beta1::PageRequest& pagination(const QueryDelegatorDelegationsRequest* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::query::v1beta1::PageRequest&
QueryDelegatorDelegationsRequest::_Internal::pagination(const QueryDelegatorDelegationsRequest* msg) {
  return *msg->_impl_.pagination_;
}
void QueryDelegatorDelegationsRequest::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryDelegatorDelegationsRequest::QueryDelegatorDelegationsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.QueryDelegatorDelegationsRequest)
}
QueryDelegatorDelegationsRequest::QueryDelegatorDelegationsRequest(const QueryDelegatorDelegationsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryDelegatorDelegationsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.delegator_addr_) {}

    , decltype(_impl_.pagination_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.delegator_addr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.delegator_addr_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_delegator_addr().empty()) {
    _this->_impl_.delegator_addr_.Set(from._internal_delegator_addr(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::cosmos::base::query::v1beta1::PageRequest(*from._impl_.pagination_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.QueryDelegatorDelegationsRequest)
}

inline void QueryDelegatorDelegationsRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.delegator_addr_) {}

    , decltype(_impl_.pagination_){nullptr}
  };
  _impl_.delegator_addr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.delegator_addr_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryDelegatorDelegationsRequest::~QueryDelegatorDelegationsRequest() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.QueryDelegatorDelegationsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryDelegatorDelegationsRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.delegator_addr_.Destroy();
  if (this != internal_default_instance()) delete _impl_.pagination_;
}

void QueryDelegatorDelegationsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryDelegatorDelegationsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.QueryDelegatorDelegationsRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.delegator_addr_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryDelegatorDelegationsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string delegator_addr = 1 [json_name = "delegatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_delegator_addr();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.staking.v1beta1.QueryDelegatorDelegationsRequest.delegator_addr"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagination(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryDelegatorDelegationsRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.QueryDelegatorDelegationsRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string delegator_addr = 1 [json_name = "delegatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_delegator_addr().empty()) {
    const std::string& _s = this->_internal_delegator_addr();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.QueryDelegatorDelegationsRequest.delegator_addr");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.QueryDelegatorDelegationsRequest)
  return target;
}

::size_t QueryDelegatorDelegationsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.QueryDelegatorDelegationsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string delegator_addr = 1 [json_name = "delegatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_delegator_addr().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_delegator_addr());
  }

  // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryDelegatorDelegationsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryDelegatorDelegationsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryDelegatorDelegationsRequest::GetClassData() const { return &_class_data_; }


void QueryDelegatorDelegationsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryDelegatorDelegationsRequest*>(&to_msg);
  auto& from = static_cast<const QueryDelegatorDelegationsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.QueryDelegatorDelegationsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_delegator_addr().empty()) {
    _this->_internal_set_delegator_addr(from._internal_delegator_addr());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::cosmos::base::query::v1beta1::PageRequest::MergeFrom(
        from._internal_pagination());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryDelegatorDelegationsRequest::CopyFrom(const QueryDelegatorDelegationsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.QueryDelegatorDelegationsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDelegatorDelegationsRequest::IsInitialized() const {
  return true;
}

void QueryDelegatorDelegationsRequest::InternalSwap(QueryDelegatorDelegationsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.delegator_addr_, lhs_arena,
                                       &other->_impl_.delegator_addr_, rhs_arena);
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryDelegatorDelegationsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fstaking_2fv1beta1_2fquery_2eproto[12]);
}
// ===================================================================

class QueryDelegatorDelegationsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryDelegatorDelegationsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryDelegatorDelegationsResponse, _impl_._has_bits_);
  static const ::cosmos::base::query::v1beta1::PageResponse& pagination(const QueryDelegatorDelegationsResponse* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::query::v1beta1::PageResponse&
QueryDelegatorDelegationsResponse::_Internal::pagination(const QueryDelegatorDelegationsResponse* msg) {
  return *msg->_impl_.pagination_;
}
void QueryDelegatorDelegationsResponse::clear_delegation_responses() {
  _internal_mutable_delegation_responses()->Clear();
}
void QueryDelegatorDelegationsResponse::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryDelegatorDelegationsResponse::QueryDelegatorDelegationsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse)
}
QueryDelegatorDelegationsResponse::QueryDelegatorDelegationsResponse(const QueryDelegatorDelegationsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryDelegatorDelegationsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.delegation_responses_){from._impl_.delegation_responses_}
    , decltype(_impl_.pagination_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::cosmos::base::query::v1beta1::PageResponse(*from._impl_.pagination_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse)
}

inline void QueryDelegatorDelegationsResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.delegation_responses_){arena}
    , decltype(_impl_.pagination_){nullptr}
  };
}

QueryDelegatorDelegationsResponse::~QueryDelegatorDelegationsResponse() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryDelegatorDelegationsResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_delegation_responses()->~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.pagination_;
}

void QueryDelegatorDelegationsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryDelegatorDelegationsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_delegation_responses()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryDelegatorDelegationsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .cosmos.staking.v1beta1.DelegationResponse delegation_responses = 1 [json_name = "delegationResponses", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_delegation_responses(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagination(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryDelegatorDelegationsResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cosmos.staking.v1beta1.DelegationResponse delegation_responses = 1 [json_name = "delegationResponses", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_delegation_responses_size()); i < n; i++) {
    const auto& repfield = this->_internal_delegation_responses(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse)
  return target;
}

::size_t QueryDelegatorDelegationsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cosmos.staking.v1beta1.DelegationResponse delegation_responses = 1 [json_name = "delegationResponses", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  total_size += 1UL * this->_internal_delegation_responses_size();
  for (const auto& msg : this->_internal_delegation_responses()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryDelegatorDelegationsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryDelegatorDelegationsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryDelegatorDelegationsResponse::GetClassData() const { return &_class_data_; }


void QueryDelegatorDelegationsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryDelegatorDelegationsResponse*>(&to_msg);
  auto& from = static_cast<const QueryDelegatorDelegationsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_delegation_responses()->MergeFrom(from._internal_delegation_responses());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::cosmos::base::query::v1beta1::PageResponse::MergeFrom(
        from._internal_pagination());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryDelegatorDelegationsResponse::CopyFrom(const QueryDelegatorDelegationsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDelegatorDelegationsResponse::IsInitialized() const {
  return true;
}

void QueryDelegatorDelegationsResponse::InternalSwap(QueryDelegatorDelegationsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _internal_mutable_delegation_responses()->InternalSwap(other->_internal_mutable_delegation_responses());
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryDelegatorDelegationsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fstaking_2fv1beta1_2fquery_2eproto[13]);
}
// ===================================================================

class QueryDelegatorUnbondingDelegationsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryDelegatorUnbondingDelegationsRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryDelegatorUnbondingDelegationsRequest, _impl_._has_bits_);
  static const ::cosmos::base::query::v1beta1::PageRequest& pagination(const QueryDelegatorUnbondingDelegationsRequest* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::query::v1beta1::PageRequest&
QueryDelegatorUnbondingDelegationsRequest::_Internal::pagination(const QueryDelegatorUnbondingDelegationsRequest* msg) {
  return *msg->_impl_.pagination_;
}
void QueryDelegatorUnbondingDelegationsRequest::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryDelegatorUnbondingDelegationsRequest::QueryDelegatorUnbondingDelegationsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsRequest)
}
QueryDelegatorUnbondingDelegationsRequest::QueryDelegatorUnbondingDelegationsRequest(const QueryDelegatorUnbondingDelegationsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryDelegatorUnbondingDelegationsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.delegator_addr_) {}

    , decltype(_impl_.pagination_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.delegator_addr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.delegator_addr_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_delegator_addr().empty()) {
    _this->_impl_.delegator_addr_.Set(from._internal_delegator_addr(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::cosmos::base::query::v1beta1::PageRequest(*from._impl_.pagination_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsRequest)
}

inline void QueryDelegatorUnbondingDelegationsRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.delegator_addr_) {}

    , decltype(_impl_.pagination_){nullptr}
  };
  _impl_.delegator_addr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.delegator_addr_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryDelegatorUnbondingDelegationsRequest::~QueryDelegatorUnbondingDelegationsRequest() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryDelegatorUnbondingDelegationsRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.delegator_addr_.Destroy();
  if (this != internal_default_instance()) delete _impl_.pagination_;
}

void QueryDelegatorUnbondingDelegationsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryDelegatorUnbondingDelegationsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.delegator_addr_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryDelegatorUnbondingDelegationsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string delegator_addr = 1 [json_name = "delegatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_delegator_addr();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsRequest.delegator_addr"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagination(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryDelegatorUnbondingDelegationsRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string delegator_addr = 1 [json_name = "delegatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_delegator_addr().empty()) {
    const std::string& _s = this->_internal_delegator_addr();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsRequest.delegator_addr");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsRequest)
  return target;
}

::size_t QueryDelegatorUnbondingDelegationsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string delegator_addr = 1 [json_name = "delegatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_delegator_addr().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_delegator_addr());
  }

  // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryDelegatorUnbondingDelegationsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryDelegatorUnbondingDelegationsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryDelegatorUnbondingDelegationsRequest::GetClassData() const { return &_class_data_; }


void QueryDelegatorUnbondingDelegationsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryDelegatorUnbondingDelegationsRequest*>(&to_msg);
  auto& from = static_cast<const QueryDelegatorUnbondingDelegationsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_delegator_addr().empty()) {
    _this->_internal_set_delegator_addr(from._internal_delegator_addr());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::cosmos::base::query::v1beta1::PageRequest::MergeFrom(
        from._internal_pagination());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryDelegatorUnbondingDelegationsRequest::CopyFrom(const QueryDelegatorUnbondingDelegationsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDelegatorUnbondingDelegationsRequest::IsInitialized() const {
  return true;
}

void QueryDelegatorUnbondingDelegationsRequest::InternalSwap(QueryDelegatorUnbondingDelegationsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.delegator_addr_, lhs_arena,
                                       &other->_impl_.delegator_addr_, rhs_arena);
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryDelegatorUnbondingDelegationsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fstaking_2fv1beta1_2fquery_2eproto[14]);
}
// ===================================================================

class QueryDelegatorUnbondingDelegationsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryDelegatorUnbondingDelegationsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryDelegatorUnbondingDelegationsResponse, _impl_._has_bits_);
  static const ::cosmos::base::query::v1beta1::PageResponse& pagination(const QueryDelegatorUnbondingDelegationsResponse* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::query::v1beta1::PageResponse&
QueryDelegatorUnbondingDelegationsResponse::_Internal::pagination(const QueryDelegatorUnbondingDelegationsResponse* msg) {
  return *msg->_impl_.pagination_;
}
void QueryDelegatorUnbondingDelegationsResponse::clear_unbonding_responses() {
  _internal_mutable_unbonding_responses()->Clear();
}
void QueryDelegatorUnbondingDelegationsResponse::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryDelegatorUnbondingDelegationsResponse::QueryDelegatorUnbondingDelegationsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse)
}
QueryDelegatorUnbondingDelegationsResponse::QueryDelegatorUnbondingDelegationsResponse(const QueryDelegatorUnbondingDelegationsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryDelegatorUnbondingDelegationsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.unbonding_responses_){from._impl_.unbonding_responses_}
    , decltype(_impl_.pagination_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::cosmos::base::query::v1beta1::PageResponse(*from._impl_.pagination_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse)
}

inline void QueryDelegatorUnbondingDelegationsResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.unbonding_responses_){arena}
    , decltype(_impl_.pagination_){nullptr}
  };
}

QueryDelegatorUnbondingDelegationsResponse::~QueryDelegatorUnbondingDelegationsResponse() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryDelegatorUnbondingDelegationsResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_unbonding_responses()->~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.pagination_;
}

void QueryDelegatorUnbondingDelegationsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryDelegatorUnbondingDelegationsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_unbonding_responses()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryDelegatorUnbondingDelegationsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .cosmos.staking.v1beta1.UnbondingDelegation unbonding_responses = 1 [json_name = "unbondingResponses", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_unbonding_responses(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagination(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryDelegatorUnbondingDelegationsResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cosmos.staking.v1beta1.UnbondingDelegation unbonding_responses = 1 [json_name = "unbondingResponses", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_unbonding_responses_size()); i < n; i++) {
    const auto& repfield = this->_internal_unbonding_responses(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse)
  return target;
}

::size_t QueryDelegatorUnbondingDelegationsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cosmos.staking.v1beta1.UnbondingDelegation unbonding_responses = 1 [json_name = "unbondingResponses", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  total_size += 1UL * this->_internal_unbonding_responses_size();
  for (const auto& msg : this->_internal_unbonding_responses()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryDelegatorUnbondingDelegationsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryDelegatorUnbondingDelegationsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryDelegatorUnbondingDelegationsResponse::GetClassData() const { return &_class_data_; }


void QueryDelegatorUnbondingDelegationsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryDelegatorUnbondingDelegationsResponse*>(&to_msg);
  auto& from = static_cast<const QueryDelegatorUnbondingDelegationsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_unbonding_responses()->MergeFrom(from._internal_unbonding_responses());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::cosmos::base::query::v1beta1::PageResponse::MergeFrom(
        from._internal_pagination());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryDelegatorUnbondingDelegationsResponse::CopyFrom(const QueryDelegatorUnbondingDelegationsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDelegatorUnbondingDelegationsResponse::IsInitialized() const {
  return true;
}

void QueryDelegatorUnbondingDelegationsResponse::InternalSwap(QueryDelegatorUnbondingDelegationsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _internal_mutable_unbonding_responses()->InternalSwap(other->_internal_mutable_unbonding_responses());
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryDelegatorUnbondingDelegationsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fstaking_2fv1beta1_2fquery_2eproto[15]);
}
// ===================================================================

class QueryRedelegationsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryRedelegationsRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryRedelegationsRequest, _impl_._has_bits_);
  static const ::cosmos::base::query::v1beta1::PageRequest& pagination(const QueryRedelegationsRequest* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::query::v1beta1::PageRequest&
QueryRedelegationsRequest::_Internal::pagination(const QueryRedelegationsRequest* msg) {
  return *msg->_impl_.pagination_;
}
void QueryRedelegationsRequest::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryRedelegationsRequest::QueryRedelegationsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.QueryRedelegationsRequest)
}
QueryRedelegationsRequest::QueryRedelegationsRequest(const QueryRedelegationsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryRedelegationsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.delegator_addr_) {}

    , decltype(_impl_.src_validator_addr_) {}

    , decltype(_impl_.dst_validator_addr_) {}

    , decltype(_impl_.pagination_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.delegator_addr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.delegator_addr_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_delegator_addr().empty()) {
    _this->_impl_.delegator_addr_.Set(from._internal_delegator_addr(), _this->GetArenaForAllocation());
  }
  _impl_.src_validator_addr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.src_validator_addr_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_src_validator_addr().empty()) {
    _this->_impl_.src_validator_addr_.Set(from._internal_src_validator_addr(), _this->GetArenaForAllocation());
  }
  _impl_.dst_validator_addr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.dst_validator_addr_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_dst_validator_addr().empty()) {
    _this->_impl_.dst_validator_addr_.Set(from._internal_dst_validator_addr(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::cosmos::base::query::v1beta1::PageRequest(*from._impl_.pagination_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.QueryRedelegationsRequest)
}

inline void QueryRedelegationsRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.delegator_addr_) {}

    , decltype(_impl_.src_validator_addr_) {}

    , decltype(_impl_.dst_validator_addr_) {}

    , decltype(_impl_.pagination_){nullptr}
  };
  _impl_.delegator_addr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.delegator_addr_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.src_validator_addr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.src_validator_addr_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.dst_validator_addr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.dst_validator_addr_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryRedelegationsRequest::~QueryRedelegationsRequest() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.QueryRedelegationsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryRedelegationsRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.delegator_addr_.Destroy();
  _impl_.src_validator_addr_.Destroy();
  _impl_.dst_validator_addr_.Destroy();
  if (this != internal_default_instance()) delete _impl_.pagination_;
}

void QueryRedelegationsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryRedelegationsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.QueryRedelegationsRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.delegator_addr_.ClearToEmpty();
  _impl_.src_validator_addr_.ClearToEmpty();
  _impl_.dst_validator_addr_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryRedelegationsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string delegator_addr = 1 [json_name = "delegatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_delegator_addr();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.staking.v1beta1.QueryRedelegationsRequest.delegator_addr"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string src_validator_addr = 2 [json_name = "srcValidatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_src_validator_addr();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.staking.v1beta1.QueryRedelegationsRequest.src_validator_addr"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string dst_validator_addr = 3 [json_name = "dstValidatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_dst_validator_addr();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.staking.v1beta1.QueryRedelegationsRequest.dst_validator_addr"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.query.v1beta1.PageRequest pagination = 4 [json_name = "pagination"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagination(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryRedelegationsRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.QueryRedelegationsRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string delegator_addr = 1 [json_name = "delegatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_delegator_addr().empty()) {
    const std::string& _s = this->_internal_delegator_addr();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.QueryRedelegationsRequest.delegator_addr");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string src_validator_addr = 2 [json_name = "srcValidatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_src_validator_addr().empty()) {
    const std::string& _s = this->_internal_src_validator_addr();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.QueryRedelegationsRequest.src_validator_addr");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string dst_validator_addr = 3 [json_name = "dstValidatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_dst_validator_addr().empty()) {
    const std::string& _s = this->_internal_dst_validator_addr();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.QueryRedelegationsRequest.dst_validator_addr");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.query.v1beta1.PageRequest pagination = 4 [json_name = "pagination"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.QueryRedelegationsRequest)
  return target;
}

::size_t QueryRedelegationsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.QueryRedelegationsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string delegator_addr = 1 [json_name = "delegatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_delegator_addr().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_delegator_addr());
  }

  // string src_validator_addr = 2 [json_name = "srcValidatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_src_validator_addr().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_src_validator_addr());
  }

  // string dst_validator_addr = 3 [json_name = "dstValidatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_dst_validator_addr().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_dst_validator_addr());
  }

  // .cosmos.base.query.v1beta1.PageRequest pagination = 4 [json_name = "pagination"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryRedelegationsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryRedelegationsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryRedelegationsRequest::GetClassData() const { return &_class_data_; }


void QueryRedelegationsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryRedelegationsRequest*>(&to_msg);
  auto& from = static_cast<const QueryRedelegationsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.QueryRedelegationsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_delegator_addr().empty()) {
    _this->_internal_set_delegator_addr(from._internal_delegator_addr());
  }
  if (!from._internal_src_validator_addr().empty()) {
    _this->_internal_set_src_validator_addr(from._internal_src_validator_addr());
  }
  if (!from._internal_dst_validator_addr().empty()) {
    _this->_internal_set_dst_validator_addr(from._internal_dst_validator_addr());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::cosmos::base::query::v1beta1::PageRequest::MergeFrom(
        from._internal_pagination());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryRedelegationsRequest::CopyFrom(const QueryRedelegationsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.QueryRedelegationsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryRedelegationsRequest::IsInitialized() const {
  return true;
}

void QueryRedelegationsRequest::InternalSwap(QueryRedelegationsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.delegator_addr_, lhs_arena,
                                       &other->_impl_.delegator_addr_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.src_validator_addr_, lhs_arena,
                                       &other->_impl_.src_validator_addr_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dst_validator_addr_, lhs_arena,
                                       &other->_impl_.dst_validator_addr_, rhs_arena);
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryRedelegationsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fstaking_2fv1beta1_2fquery_2eproto[16]);
}
// ===================================================================

class QueryRedelegationsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryRedelegationsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryRedelegationsResponse, _impl_._has_bits_);
  static const ::cosmos::base::query::v1beta1::PageResponse& pagination(const QueryRedelegationsResponse* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::query::v1beta1::PageResponse&
QueryRedelegationsResponse::_Internal::pagination(const QueryRedelegationsResponse* msg) {
  return *msg->_impl_.pagination_;
}
void QueryRedelegationsResponse::clear_redelegation_responses() {
  _internal_mutable_redelegation_responses()->Clear();
}
void QueryRedelegationsResponse::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryRedelegationsResponse::QueryRedelegationsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.QueryRedelegationsResponse)
}
QueryRedelegationsResponse::QueryRedelegationsResponse(const QueryRedelegationsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryRedelegationsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.redelegation_responses_){from._impl_.redelegation_responses_}
    , decltype(_impl_.pagination_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::cosmos::base::query::v1beta1::PageResponse(*from._impl_.pagination_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.QueryRedelegationsResponse)
}

inline void QueryRedelegationsResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.redelegation_responses_){arena}
    , decltype(_impl_.pagination_){nullptr}
  };
}

QueryRedelegationsResponse::~QueryRedelegationsResponse() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.QueryRedelegationsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryRedelegationsResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_redelegation_responses()->~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.pagination_;
}

void QueryRedelegationsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryRedelegationsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.QueryRedelegationsResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_redelegation_responses()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryRedelegationsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .cosmos.staking.v1beta1.RedelegationResponse redelegation_responses = 1 [json_name = "redelegationResponses", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_redelegation_responses(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagination(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryRedelegationsResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.QueryRedelegationsResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cosmos.staking.v1beta1.RedelegationResponse redelegation_responses = 1 [json_name = "redelegationResponses", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_redelegation_responses_size()); i < n; i++) {
    const auto& repfield = this->_internal_redelegation_responses(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.QueryRedelegationsResponse)
  return target;
}

::size_t QueryRedelegationsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.QueryRedelegationsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cosmos.staking.v1beta1.RedelegationResponse redelegation_responses = 1 [json_name = "redelegationResponses", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  total_size += 1UL * this->_internal_redelegation_responses_size();
  for (const auto& msg : this->_internal_redelegation_responses()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryRedelegationsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryRedelegationsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryRedelegationsResponse::GetClassData() const { return &_class_data_; }


void QueryRedelegationsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryRedelegationsResponse*>(&to_msg);
  auto& from = static_cast<const QueryRedelegationsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.QueryRedelegationsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_redelegation_responses()->MergeFrom(from._internal_redelegation_responses());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::cosmos::base::query::v1beta1::PageResponse::MergeFrom(
        from._internal_pagination());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryRedelegationsResponse::CopyFrom(const QueryRedelegationsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.QueryRedelegationsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryRedelegationsResponse::IsInitialized() const {
  return true;
}

void QueryRedelegationsResponse::InternalSwap(QueryRedelegationsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _internal_mutable_redelegation_responses()->InternalSwap(other->_internal_mutable_redelegation_responses());
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryRedelegationsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fstaking_2fv1beta1_2fquery_2eproto[17]);
}
// ===================================================================

class QueryDelegatorValidatorsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryDelegatorValidatorsRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryDelegatorValidatorsRequest, _impl_._has_bits_);
  static const ::cosmos::base::query::v1beta1::PageRequest& pagination(const QueryDelegatorValidatorsRequest* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::query::v1beta1::PageRequest&
QueryDelegatorValidatorsRequest::_Internal::pagination(const QueryDelegatorValidatorsRequest* msg) {
  return *msg->_impl_.pagination_;
}
void QueryDelegatorValidatorsRequest::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryDelegatorValidatorsRequest::QueryDelegatorValidatorsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.QueryDelegatorValidatorsRequest)
}
QueryDelegatorValidatorsRequest::QueryDelegatorValidatorsRequest(const QueryDelegatorValidatorsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryDelegatorValidatorsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.delegator_addr_) {}

    , decltype(_impl_.pagination_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.delegator_addr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.delegator_addr_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_delegator_addr().empty()) {
    _this->_impl_.delegator_addr_.Set(from._internal_delegator_addr(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::cosmos::base::query::v1beta1::PageRequest(*from._impl_.pagination_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.QueryDelegatorValidatorsRequest)
}

inline void QueryDelegatorValidatorsRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.delegator_addr_) {}

    , decltype(_impl_.pagination_){nullptr}
  };
  _impl_.delegator_addr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.delegator_addr_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryDelegatorValidatorsRequest::~QueryDelegatorValidatorsRequest() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.QueryDelegatorValidatorsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryDelegatorValidatorsRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.delegator_addr_.Destroy();
  if (this != internal_default_instance()) delete _impl_.pagination_;
}

void QueryDelegatorValidatorsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryDelegatorValidatorsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.QueryDelegatorValidatorsRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.delegator_addr_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryDelegatorValidatorsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string delegator_addr = 1 [json_name = "delegatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_delegator_addr();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.staking.v1beta1.QueryDelegatorValidatorsRequest.delegator_addr"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagination(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryDelegatorValidatorsRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.QueryDelegatorValidatorsRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string delegator_addr = 1 [json_name = "delegatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_delegator_addr().empty()) {
    const std::string& _s = this->_internal_delegator_addr();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.QueryDelegatorValidatorsRequest.delegator_addr");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.QueryDelegatorValidatorsRequest)
  return target;
}

::size_t QueryDelegatorValidatorsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.QueryDelegatorValidatorsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string delegator_addr = 1 [json_name = "delegatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_delegator_addr().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_delegator_addr());
  }

  // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryDelegatorValidatorsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryDelegatorValidatorsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryDelegatorValidatorsRequest::GetClassData() const { return &_class_data_; }


void QueryDelegatorValidatorsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryDelegatorValidatorsRequest*>(&to_msg);
  auto& from = static_cast<const QueryDelegatorValidatorsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.QueryDelegatorValidatorsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_delegator_addr().empty()) {
    _this->_internal_set_delegator_addr(from._internal_delegator_addr());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::cosmos::base::query::v1beta1::PageRequest::MergeFrom(
        from._internal_pagination());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryDelegatorValidatorsRequest::CopyFrom(const QueryDelegatorValidatorsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.QueryDelegatorValidatorsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDelegatorValidatorsRequest::IsInitialized() const {
  return true;
}

void QueryDelegatorValidatorsRequest::InternalSwap(QueryDelegatorValidatorsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.delegator_addr_, lhs_arena,
                                       &other->_impl_.delegator_addr_, rhs_arena);
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryDelegatorValidatorsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fstaking_2fv1beta1_2fquery_2eproto[18]);
}
// ===================================================================

class QueryDelegatorValidatorsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryDelegatorValidatorsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryDelegatorValidatorsResponse, _impl_._has_bits_);
  static const ::cosmos::base::query::v1beta1::PageResponse& pagination(const QueryDelegatorValidatorsResponse* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::query::v1beta1::PageResponse&
QueryDelegatorValidatorsResponse::_Internal::pagination(const QueryDelegatorValidatorsResponse* msg) {
  return *msg->_impl_.pagination_;
}
void QueryDelegatorValidatorsResponse::clear_validators() {
  _internal_mutable_validators()->Clear();
}
void QueryDelegatorValidatorsResponse::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryDelegatorValidatorsResponse::QueryDelegatorValidatorsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse)
}
QueryDelegatorValidatorsResponse::QueryDelegatorValidatorsResponse(const QueryDelegatorValidatorsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryDelegatorValidatorsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.validators_){from._impl_.validators_}
    , decltype(_impl_.pagination_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::cosmos::base::query::v1beta1::PageResponse(*from._impl_.pagination_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse)
}

inline void QueryDelegatorValidatorsResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.validators_){arena}
    , decltype(_impl_.pagination_){nullptr}
  };
}

QueryDelegatorValidatorsResponse::~QueryDelegatorValidatorsResponse() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryDelegatorValidatorsResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_validators()->~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.pagination_;
}

void QueryDelegatorValidatorsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryDelegatorValidatorsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_validators()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryDelegatorValidatorsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .cosmos.staking.v1beta1.Validator validators = 1 [json_name = "validators", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_validators(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagination(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryDelegatorValidatorsResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cosmos.staking.v1beta1.Validator validators = 1 [json_name = "validators", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_validators_size()); i < n; i++) {
    const auto& repfield = this->_internal_validators(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse)
  return target;
}

::size_t QueryDelegatorValidatorsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cosmos.staking.v1beta1.Validator validators = 1 [json_name = "validators", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  total_size += 1UL * this->_internal_validators_size();
  for (const auto& msg : this->_internal_validators()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryDelegatorValidatorsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryDelegatorValidatorsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryDelegatorValidatorsResponse::GetClassData() const { return &_class_data_; }


void QueryDelegatorValidatorsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryDelegatorValidatorsResponse*>(&to_msg);
  auto& from = static_cast<const QueryDelegatorValidatorsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_validators()->MergeFrom(from._internal_validators());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::cosmos::base::query::v1beta1::PageResponse::MergeFrom(
        from._internal_pagination());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryDelegatorValidatorsResponse::CopyFrom(const QueryDelegatorValidatorsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDelegatorValidatorsResponse::IsInitialized() const {
  return true;
}

void QueryDelegatorValidatorsResponse::InternalSwap(QueryDelegatorValidatorsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _internal_mutable_validators()->InternalSwap(other->_internal_mutable_validators());
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryDelegatorValidatorsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fstaking_2fv1beta1_2fquery_2eproto[19]);
}
// ===================================================================

class QueryDelegatorValidatorRequest::_Internal {
 public:
};

QueryDelegatorValidatorRequest::QueryDelegatorValidatorRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.QueryDelegatorValidatorRequest)
}
QueryDelegatorValidatorRequest::QueryDelegatorValidatorRequest(const QueryDelegatorValidatorRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryDelegatorValidatorRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.delegator_addr_) {}

    , decltype(_impl_.validator_addr_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.delegator_addr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.delegator_addr_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_delegator_addr().empty()) {
    _this->_impl_.delegator_addr_.Set(from._internal_delegator_addr(), _this->GetArenaForAllocation());
  }
  _impl_.validator_addr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.validator_addr_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_validator_addr().empty()) {
    _this->_impl_.validator_addr_.Set(from._internal_validator_addr(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.QueryDelegatorValidatorRequest)
}

inline void QueryDelegatorValidatorRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.delegator_addr_) {}

    , decltype(_impl_.validator_addr_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.delegator_addr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.delegator_addr_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.validator_addr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.validator_addr_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryDelegatorValidatorRequest::~QueryDelegatorValidatorRequest() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.QueryDelegatorValidatorRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryDelegatorValidatorRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.delegator_addr_.Destroy();
  _impl_.validator_addr_.Destroy();
}

void QueryDelegatorValidatorRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryDelegatorValidatorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.QueryDelegatorValidatorRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.delegator_addr_.ClearToEmpty();
  _impl_.validator_addr_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryDelegatorValidatorRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string delegator_addr = 1 [json_name = "delegatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_delegator_addr();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.staking.v1beta1.QueryDelegatorValidatorRequest.delegator_addr"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string validator_addr = 2 [json_name = "validatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_validator_addr();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.staking.v1beta1.QueryDelegatorValidatorRequest.validator_addr"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryDelegatorValidatorRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.QueryDelegatorValidatorRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string delegator_addr = 1 [json_name = "delegatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_delegator_addr().empty()) {
    const std::string& _s = this->_internal_delegator_addr();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.QueryDelegatorValidatorRequest.delegator_addr");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string validator_addr = 2 [json_name = "validatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_validator_addr().empty()) {
    const std::string& _s = this->_internal_validator_addr();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.QueryDelegatorValidatorRequest.validator_addr");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.QueryDelegatorValidatorRequest)
  return target;
}

::size_t QueryDelegatorValidatorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.QueryDelegatorValidatorRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string delegator_addr = 1 [json_name = "delegatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_delegator_addr().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_delegator_addr());
  }

  // string validator_addr = 2 [json_name = "validatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_validator_addr().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_validator_addr());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryDelegatorValidatorRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryDelegatorValidatorRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryDelegatorValidatorRequest::GetClassData() const { return &_class_data_; }


void QueryDelegatorValidatorRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryDelegatorValidatorRequest*>(&to_msg);
  auto& from = static_cast<const QueryDelegatorValidatorRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.QueryDelegatorValidatorRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_delegator_addr().empty()) {
    _this->_internal_set_delegator_addr(from._internal_delegator_addr());
  }
  if (!from._internal_validator_addr().empty()) {
    _this->_internal_set_validator_addr(from._internal_validator_addr());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryDelegatorValidatorRequest::CopyFrom(const QueryDelegatorValidatorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.QueryDelegatorValidatorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDelegatorValidatorRequest::IsInitialized() const {
  return true;
}

void QueryDelegatorValidatorRequest::InternalSwap(QueryDelegatorValidatorRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.delegator_addr_, lhs_arena,
                                       &other->_impl_.delegator_addr_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.validator_addr_, lhs_arena,
                                       &other->_impl_.validator_addr_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryDelegatorValidatorRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fstaking_2fv1beta1_2fquery_2eproto[20]);
}
// ===================================================================

class QueryDelegatorValidatorResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryDelegatorValidatorResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryDelegatorValidatorResponse, _impl_._has_bits_);
  static const ::cosmos::staking::v1beta1::Validator& validator(const QueryDelegatorValidatorResponse* msg);
  static void set_has_validator(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::staking::v1beta1::Validator&
QueryDelegatorValidatorResponse::_Internal::validator(const QueryDelegatorValidatorResponse* msg) {
  return *msg->_impl_.validator_;
}
void QueryDelegatorValidatorResponse::clear_validator() {
  if (_impl_.validator_ != nullptr) _impl_.validator_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryDelegatorValidatorResponse::QueryDelegatorValidatorResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.QueryDelegatorValidatorResponse)
}
QueryDelegatorValidatorResponse::QueryDelegatorValidatorResponse(const QueryDelegatorValidatorResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryDelegatorValidatorResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.validator_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.validator_ = new ::cosmos::staking::v1beta1::Validator(*from._impl_.validator_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.QueryDelegatorValidatorResponse)
}

inline void QueryDelegatorValidatorResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.validator_){nullptr}
  };
}

QueryDelegatorValidatorResponse::~QueryDelegatorValidatorResponse() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.QueryDelegatorValidatorResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryDelegatorValidatorResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.validator_;
}

void QueryDelegatorValidatorResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryDelegatorValidatorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.QueryDelegatorValidatorResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.validator_ != nullptr);
    _impl_.validator_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryDelegatorValidatorResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cosmos.staking.v1beta1.Validator validator = 1 [json_name = "validator", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_validator(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryDelegatorValidatorResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.QueryDelegatorValidatorResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.staking.v1beta1.Validator validator = 1 [json_name = "validator", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::validator(this),
        _Internal::validator(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.QueryDelegatorValidatorResponse)
  return target;
}

::size_t QueryDelegatorValidatorResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.QueryDelegatorValidatorResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cosmos.staking.v1beta1.Validator validator = 1 [json_name = "validator", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.validator_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryDelegatorValidatorResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryDelegatorValidatorResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryDelegatorValidatorResponse::GetClassData() const { return &_class_data_; }


void QueryDelegatorValidatorResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryDelegatorValidatorResponse*>(&to_msg);
  auto& from = static_cast<const QueryDelegatorValidatorResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.QueryDelegatorValidatorResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_validator()->::cosmos::staking::v1beta1::Validator::MergeFrom(
        from._internal_validator());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryDelegatorValidatorResponse::CopyFrom(const QueryDelegatorValidatorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.QueryDelegatorValidatorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDelegatorValidatorResponse::IsInitialized() const {
  return true;
}

void QueryDelegatorValidatorResponse::InternalSwap(QueryDelegatorValidatorResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.validator_, other->_impl_.validator_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryDelegatorValidatorResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fstaking_2fv1beta1_2fquery_2eproto[21]);
}
// ===================================================================

class QueryHistoricalInfoRequest::_Internal {
 public:
};

QueryHistoricalInfoRequest::QueryHistoricalInfoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.QueryHistoricalInfoRequest)
}
QueryHistoricalInfoRequest::QueryHistoricalInfoRequest(const QueryHistoricalInfoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.QueryHistoricalInfoRequest)
}

inline void QueryHistoricalInfoRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.height_) { ::int64_t{0} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

QueryHistoricalInfoRequest::~QueryHistoricalInfoRequest() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.QueryHistoricalInfoRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryHistoricalInfoRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}

void QueryHistoricalInfoRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryHistoricalInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.QueryHistoricalInfoRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.height_ = ::int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryHistoricalInfoRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 height = 1 [json_name = "height"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryHistoricalInfoRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.QueryHistoricalInfoRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 height = 1 [json_name = "height"];
  if (this->_internal_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        1, this->_internal_height(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.QueryHistoricalInfoRequest)
  return target;
}

::size_t QueryHistoricalInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.QueryHistoricalInfoRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 height = 1 [json_name = "height"];
  if (this->_internal_height() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_height());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryHistoricalInfoRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryHistoricalInfoRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryHistoricalInfoRequest::GetClassData() const { return &_class_data_; }


void QueryHistoricalInfoRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryHistoricalInfoRequest*>(&to_msg);
  auto& from = static_cast<const QueryHistoricalInfoRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.QueryHistoricalInfoRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_height() != 0) {
    _this->_internal_set_height(from._internal_height());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryHistoricalInfoRequest::CopyFrom(const QueryHistoricalInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.QueryHistoricalInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryHistoricalInfoRequest::IsInitialized() const {
  return true;
}

void QueryHistoricalInfoRequest::InternalSwap(QueryHistoricalInfoRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);

  swap(_impl_.height_, other->_impl_.height_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryHistoricalInfoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fstaking_2fv1beta1_2fquery_2eproto[22]);
}
// ===================================================================

class QueryHistoricalInfoResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryHistoricalInfoResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryHistoricalInfoResponse, _impl_._has_bits_);
  static const ::cosmos::staking::v1beta1::HistoricalInfo& hist(const QueryHistoricalInfoResponse* msg);
  static void set_has_hist(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::staking::v1beta1::HistoricalInfo&
QueryHistoricalInfoResponse::_Internal::hist(const QueryHistoricalInfoResponse* msg) {
  return *msg->_impl_.hist_;
}
void QueryHistoricalInfoResponse::clear_hist() {
  if (_impl_.hist_ != nullptr) _impl_.hist_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryHistoricalInfoResponse::QueryHistoricalInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.QueryHistoricalInfoResponse)
}
QueryHistoricalInfoResponse::QueryHistoricalInfoResponse(const QueryHistoricalInfoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryHistoricalInfoResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.hist_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.hist_ = new ::cosmos::staking::v1beta1::HistoricalInfo(*from._impl_.hist_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.QueryHistoricalInfoResponse)
}

inline void QueryHistoricalInfoResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.hist_){nullptr}
  };
}

QueryHistoricalInfoResponse::~QueryHistoricalInfoResponse() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.QueryHistoricalInfoResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryHistoricalInfoResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.hist_;
}

void QueryHistoricalInfoResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryHistoricalInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.QueryHistoricalInfoResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.hist_ != nullptr);
    _impl_.hist_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryHistoricalInfoResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cosmos.staking.v1beta1.HistoricalInfo hist = 1 [json_name = "hist"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_hist(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryHistoricalInfoResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.QueryHistoricalInfoResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.staking.v1beta1.HistoricalInfo hist = 1 [json_name = "hist"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::hist(this),
        _Internal::hist(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.QueryHistoricalInfoResponse)
  return target;
}

::size_t QueryHistoricalInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.QueryHistoricalInfoResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cosmos.staking.v1beta1.HistoricalInfo hist = 1 [json_name = "hist"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.hist_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryHistoricalInfoResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryHistoricalInfoResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryHistoricalInfoResponse::GetClassData() const { return &_class_data_; }


void QueryHistoricalInfoResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryHistoricalInfoResponse*>(&to_msg);
  auto& from = static_cast<const QueryHistoricalInfoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.QueryHistoricalInfoResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_hist()->::cosmos::staking::v1beta1::HistoricalInfo::MergeFrom(
        from._internal_hist());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryHistoricalInfoResponse::CopyFrom(const QueryHistoricalInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.QueryHistoricalInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryHistoricalInfoResponse::IsInitialized() const {
  return true;
}

void QueryHistoricalInfoResponse::InternalSwap(QueryHistoricalInfoResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.hist_, other->_impl_.hist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryHistoricalInfoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fstaking_2fv1beta1_2fquery_2eproto[23]);
}
// ===================================================================

class QueryPoolRequest::_Internal {
 public:
};

QueryPoolRequest::QueryPoolRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.QueryPoolRequest)
}
QueryPoolRequest::QueryPoolRequest(const QueryPoolRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  QueryPoolRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.QueryPoolRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryPoolRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryPoolRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata QueryPoolRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fstaking_2fv1beta1_2fquery_2eproto[24]);
}
// ===================================================================

class QueryPoolResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryPoolResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryPoolResponse, _impl_._has_bits_);
  static const ::cosmos::staking::v1beta1::Pool& pool(const QueryPoolResponse* msg);
  static void set_has_pool(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::staking::v1beta1::Pool&
QueryPoolResponse::_Internal::pool(const QueryPoolResponse* msg) {
  return *msg->_impl_.pool_;
}
void QueryPoolResponse::clear_pool() {
  if (_impl_.pool_ != nullptr) _impl_.pool_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryPoolResponse::QueryPoolResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.QueryPoolResponse)
}
QueryPoolResponse::QueryPoolResponse(const QueryPoolResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryPoolResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.pool_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pool_ = new ::cosmos::staking::v1beta1::Pool(*from._impl_.pool_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.QueryPoolResponse)
}

inline void QueryPoolResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.pool_){nullptr}
  };
}

QueryPoolResponse::~QueryPoolResponse() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.QueryPoolResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryPoolResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.pool_;
}

void QueryPoolResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryPoolResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.QueryPoolResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pool_ != nullptr);
    _impl_.pool_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryPoolResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cosmos.staking.v1beta1.Pool pool = 1 [json_name = "pool", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_pool(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryPoolResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.QueryPoolResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.staking.v1beta1.Pool pool = 1 [json_name = "pool", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::pool(this),
        _Internal::pool(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.QueryPoolResponse)
  return target;
}

::size_t QueryPoolResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.QueryPoolResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cosmos.staking.v1beta1.Pool pool = 1 [json_name = "pool", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pool_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryPoolResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryPoolResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryPoolResponse::GetClassData() const { return &_class_data_; }


void QueryPoolResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryPoolResponse*>(&to_msg);
  auto& from = static_cast<const QueryPoolResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.QueryPoolResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pool()->::cosmos::staking::v1beta1::Pool::MergeFrom(
        from._internal_pool());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryPoolResponse::CopyFrom(const QueryPoolResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.QueryPoolResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryPoolResponse::IsInitialized() const {
  return true;
}

void QueryPoolResponse::InternalSwap(QueryPoolResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.pool_, other->_impl_.pool_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryPoolResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fstaking_2fv1beta1_2fquery_2eproto[25]);
}
// ===================================================================

class QueryParamsRequest::_Internal {
 public:
};

QueryParamsRequest::QueryParamsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.QueryParamsRequest)
}
QueryParamsRequest::QueryParamsRequest(const QueryParamsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  QueryParamsRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.QueryParamsRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryParamsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryParamsRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata QueryParamsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fstaking_2fv1beta1_2fquery_2eproto[26]);
}
// ===================================================================

class QueryParamsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryParamsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryParamsResponse, _impl_._has_bits_);
  static const ::cosmos::staking::v1beta1::Params& params(const QueryParamsResponse* msg);
  static void set_has_params(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::staking::v1beta1::Params&
QueryParamsResponse::_Internal::params(const QueryParamsResponse* msg) {
  return *msg->_impl_.params_;
}
void QueryParamsResponse::clear_params() {
  if (_impl_.params_ != nullptr) _impl_.params_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryParamsResponse::QueryParamsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.QueryParamsResponse)
}
QueryParamsResponse::QueryParamsResponse(const QueryParamsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryParamsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.params_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.params_ = new ::cosmos::staking::v1beta1::Params(*from._impl_.params_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.QueryParamsResponse)
}

inline void QueryParamsResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.params_){nullptr}
  };
}

QueryParamsResponse::~QueryParamsResponse() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.QueryParamsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryParamsResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.params_;
}

void QueryParamsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryParamsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.QueryParamsResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.params_ != nullptr);
    _impl_.params_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryParamsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cosmos.staking.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryParamsResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.QueryParamsResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.staking.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.QueryParamsResponse)
  return target;
}

::size_t QueryParamsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.QueryParamsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cosmos.staking.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryParamsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryParamsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryParamsResponse::GetClassData() const { return &_class_data_; }


void QueryParamsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryParamsResponse*>(&to_msg);
  auto& from = static_cast<const QueryParamsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.QueryParamsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_params()->::cosmos::staking::v1beta1::Params::MergeFrom(
        from._internal_params());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryParamsResponse::CopyFrom(const QueryParamsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.QueryParamsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryParamsResponse::IsInitialized() const {
  return true;
}

void QueryParamsResponse::InternalSwap(QueryParamsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.params_, other->_impl_.params_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryParamsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fstaking_2fv1beta1_2fquery_2eproto[27]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace staking
}  // namespace cosmos
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::cosmos::staking::v1beta1::QueryValidatorsRequest*
Arena::CreateMaybeMessage< ::cosmos::staking::v1beta1::QueryValidatorsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::staking::v1beta1::QueryValidatorsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::staking::v1beta1::QueryValidatorsResponse*
Arena::CreateMaybeMessage< ::cosmos::staking::v1beta1::QueryValidatorsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::staking::v1beta1::QueryValidatorsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::staking::v1beta1::QueryValidatorRequest*
Arena::CreateMaybeMessage< ::cosmos::staking::v1beta1::QueryValidatorRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::staking::v1beta1::QueryValidatorRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::staking::v1beta1::QueryValidatorResponse*
Arena::CreateMaybeMessage< ::cosmos::staking::v1beta1::QueryValidatorResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::staking::v1beta1::QueryValidatorResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::staking::v1beta1::QueryValidatorDelegationsRequest*
Arena::CreateMaybeMessage< ::cosmos::staking::v1beta1::QueryValidatorDelegationsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::staking::v1beta1::QueryValidatorDelegationsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::staking::v1beta1::QueryValidatorDelegationsResponse*
Arena::CreateMaybeMessage< ::cosmos::staking::v1beta1::QueryValidatorDelegationsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::staking::v1beta1::QueryValidatorDelegationsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::staking::v1beta1::QueryValidatorUnbondingDelegationsRequest*
Arena::CreateMaybeMessage< ::cosmos::staking::v1beta1::QueryValidatorUnbondingDelegationsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::staking::v1beta1::QueryValidatorUnbondingDelegationsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::staking::v1beta1::QueryValidatorUnbondingDelegationsResponse*
Arena::CreateMaybeMessage< ::cosmos::staking::v1beta1::QueryValidatorUnbondingDelegationsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::staking::v1beta1::QueryValidatorUnbondingDelegationsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::staking::v1beta1::QueryDelegationRequest*
Arena::CreateMaybeMessage< ::cosmos::staking::v1beta1::QueryDelegationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::staking::v1beta1::QueryDelegationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::staking::v1beta1::QueryDelegationResponse*
Arena::CreateMaybeMessage< ::cosmos::staking::v1beta1::QueryDelegationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::staking::v1beta1::QueryDelegationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::staking::v1beta1::QueryUnbondingDelegationRequest*
Arena::CreateMaybeMessage< ::cosmos::staking::v1beta1::QueryUnbondingDelegationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::staking::v1beta1::QueryUnbondingDelegationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::staking::v1beta1::QueryUnbondingDelegationResponse*
Arena::CreateMaybeMessage< ::cosmos::staking::v1beta1::QueryUnbondingDelegationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::staking::v1beta1::QueryUnbondingDelegationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::staking::v1beta1::QueryDelegatorDelegationsRequest*
Arena::CreateMaybeMessage< ::cosmos::staking::v1beta1::QueryDelegatorDelegationsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::staking::v1beta1::QueryDelegatorDelegationsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::staking::v1beta1::QueryDelegatorDelegationsResponse*
Arena::CreateMaybeMessage< ::cosmos::staking::v1beta1::QueryDelegatorDelegationsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::staking::v1beta1::QueryDelegatorDelegationsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::staking::v1beta1::QueryDelegatorUnbondingDelegationsRequest*
Arena::CreateMaybeMessage< ::cosmos::staking::v1beta1::QueryDelegatorUnbondingDelegationsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::staking::v1beta1::QueryDelegatorUnbondingDelegationsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::staking::v1beta1::QueryDelegatorUnbondingDelegationsResponse*
Arena::CreateMaybeMessage< ::cosmos::staking::v1beta1::QueryDelegatorUnbondingDelegationsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::staking::v1beta1::QueryDelegatorUnbondingDelegationsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::staking::v1beta1::QueryRedelegationsRequest*
Arena::CreateMaybeMessage< ::cosmos::staking::v1beta1::QueryRedelegationsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::staking::v1beta1::QueryRedelegationsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::staking::v1beta1::QueryRedelegationsResponse*
Arena::CreateMaybeMessage< ::cosmos::staking::v1beta1::QueryRedelegationsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::staking::v1beta1::QueryRedelegationsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::staking::v1beta1::QueryDelegatorValidatorsRequest*
Arena::CreateMaybeMessage< ::cosmos::staking::v1beta1::QueryDelegatorValidatorsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::staking::v1beta1::QueryDelegatorValidatorsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::staking::v1beta1::QueryDelegatorValidatorsResponse*
Arena::CreateMaybeMessage< ::cosmos::staking::v1beta1::QueryDelegatorValidatorsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::staking::v1beta1::QueryDelegatorValidatorsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::staking::v1beta1::QueryDelegatorValidatorRequest*
Arena::CreateMaybeMessage< ::cosmos::staking::v1beta1::QueryDelegatorValidatorRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::staking::v1beta1::QueryDelegatorValidatorRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::staking::v1beta1::QueryDelegatorValidatorResponse*
Arena::CreateMaybeMessage< ::cosmos::staking::v1beta1::QueryDelegatorValidatorResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::staking::v1beta1::QueryDelegatorValidatorResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::staking::v1beta1::QueryHistoricalInfoRequest*
Arena::CreateMaybeMessage< ::cosmos::staking::v1beta1::QueryHistoricalInfoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::staking::v1beta1::QueryHistoricalInfoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::staking::v1beta1::QueryHistoricalInfoResponse*
Arena::CreateMaybeMessage< ::cosmos::staking::v1beta1::QueryHistoricalInfoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::staking::v1beta1::QueryHistoricalInfoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::staking::v1beta1::QueryPoolRequest*
Arena::CreateMaybeMessage< ::cosmos::staking::v1beta1::QueryPoolRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::staking::v1beta1::QueryPoolRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::staking::v1beta1::QueryPoolResponse*
Arena::CreateMaybeMessage< ::cosmos::staking::v1beta1::QueryPoolResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::staking::v1beta1::QueryPoolResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::staking::v1beta1::QueryParamsRequest*
Arena::CreateMaybeMessage< ::cosmos::staking::v1beta1::QueryParamsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::staking::v1beta1::QueryParamsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::staking::v1beta1::QueryParamsResponse*
Arena::CreateMaybeMessage< ::cosmos::staking::v1beta1::QueryParamsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::staking::v1beta1::QueryParamsResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
