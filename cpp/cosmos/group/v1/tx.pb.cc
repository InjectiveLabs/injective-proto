// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/group/v1/tx.proto

#include "cosmos/group/v1/tx.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace cosmos {
namespace group {
namespace v1 {
template <typename>
PROTOBUF_CONSTEXPR MsgCreateGroup::MsgCreateGroup(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.members_)*/{}
  , /*decltype(_impl_.admin_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.metadata_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgCreateGroupDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgCreateGroupDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgCreateGroupDefaultTypeInternal() {}
  union {
    MsgCreateGroup _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgCreateGroupDefaultTypeInternal _MsgCreateGroup_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgCreateGroupResponse::MsgCreateGroupResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.group_id_)*/ ::uint64_t{0u}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgCreateGroupResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgCreateGroupResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgCreateGroupResponseDefaultTypeInternal() {}
  union {
    MsgCreateGroupResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgCreateGroupResponseDefaultTypeInternal _MsgCreateGroupResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgUpdateGroupMembers::MsgUpdateGroupMembers(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.member_updates_)*/{}
  , /*decltype(_impl_.admin_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.group_id_)*/ ::uint64_t{0u}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgUpdateGroupMembersDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgUpdateGroupMembersDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgUpdateGroupMembersDefaultTypeInternal() {}
  union {
    MsgUpdateGroupMembers _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgUpdateGroupMembersDefaultTypeInternal _MsgUpdateGroupMembers_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgUpdateGroupMembersResponse::MsgUpdateGroupMembersResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgUpdateGroupMembersResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgUpdateGroupMembersResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgUpdateGroupMembersResponseDefaultTypeInternal() {}
  union {
    MsgUpdateGroupMembersResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgUpdateGroupMembersResponseDefaultTypeInternal _MsgUpdateGroupMembersResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgUpdateGroupAdmin::MsgUpdateGroupAdmin(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.admin_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.new_admin_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.group_id_)*/ ::uint64_t{0u}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgUpdateGroupAdminDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgUpdateGroupAdminDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgUpdateGroupAdminDefaultTypeInternal() {}
  union {
    MsgUpdateGroupAdmin _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgUpdateGroupAdminDefaultTypeInternal _MsgUpdateGroupAdmin_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgUpdateGroupAdminResponse::MsgUpdateGroupAdminResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgUpdateGroupAdminResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgUpdateGroupAdminResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgUpdateGroupAdminResponseDefaultTypeInternal() {}
  union {
    MsgUpdateGroupAdminResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgUpdateGroupAdminResponseDefaultTypeInternal _MsgUpdateGroupAdminResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgUpdateGroupMetadata::MsgUpdateGroupMetadata(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.admin_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.metadata_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.group_id_)*/ ::uint64_t{0u}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgUpdateGroupMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgUpdateGroupMetadataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgUpdateGroupMetadataDefaultTypeInternal() {}
  union {
    MsgUpdateGroupMetadata _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgUpdateGroupMetadataDefaultTypeInternal _MsgUpdateGroupMetadata_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgUpdateGroupMetadataResponse::MsgUpdateGroupMetadataResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgUpdateGroupMetadataResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgUpdateGroupMetadataResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgUpdateGroupMetadataResponseDefaultTypeInternal() {}
  union {
    MsgUpdateGroupMetadataResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgUpdateGroupMetadataResponseDefaultTypeInternal _MsgUpdateGroupMetadataResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgCreateGroupPolicy::MsgCreateGroupPolicy(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.admin_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.metadata_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.decision_policy_)*/nullptr
  , /*decltype(_impl_.group_id_)*/ ::uint64_t{0u}
} {}
struct MsgCreateGroupPolicyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgCreateGroupPolicyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgCreateGroupPolicyDefaultTypeInternal() {}
  union {
    MsgCreateGroupPolicy _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgCreateGroupPolicyDefaultTypeInternal _MsgCreateGroupPolicy_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgCreateGroupPolicyResponse::MsgCreateGroupPolicyResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgCreateGroupPolicyResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgCreateGroupPolicyResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgCreateGroupPolicyResponseDefaultTypeInternal() {}
  union {
    MsgCreateGroupPolicyResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgCreateGroupPolicyResponseDefaultTypeInternal _MsgCreateGroupPolicyResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgUpdateGroupPolicyAdmin::MsgUpdateGroupPolicyAdmin(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.admin_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.group_policy_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.new_admin_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgUpdateGroupPolicyAdminDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgUpdateGroupPolicyAdminDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgUpdateGroupPolicyAdminDefaultTypeInternal() {}
  union {
    MsgUpdateGroupPolicyAdmin _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgUpdateGroupPolicyAdminDefaultTypeInternal _MsgUpdateGroupPolicyAdmin_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgUpdateGroupPolicyAdminResponse::MsgUpdateGroupPolicyAdminResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgUpdateGroupPolicyAdminResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgUpdateGroupPolicyAdminResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgUpdateGroupPolicyAdminResponseDefaultTypeInternal() {}
  union {
    MsgUpdateGroupPolicyAdminResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgUpdateGroupPolicyAdminResponseDefaultTypeInternal _MsgUpdateGroupPolicyAdminResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgCreateGroupWithPolicy::MsgCreateGroupWithPolicy(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.members_)*/{}
  , /*decltype(_impl_.admin_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.group_metadata_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.group_policy_metadata_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.decision_policy_)*/nullptr
  , /*decltype(_impl_.group_policy_as_admin_)*/ false
} {}
struct MsgCreateGroupWithPolicyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgCreateGroupWithPolicyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgCreateGroupWithPolicyDefaultTypeInternal() {}
  union {
    MsgCreateGroupWithPolicy _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgCreateGroupWithPolicyDefaultTypeInternal _MsgCreateGroupWithPolicy_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgCreateGroupWithPolicyResponse::MsgCreateGroupWithPolicyResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.group_policy_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.group_id_)*/ ::uint64_t{0u}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgCreateGroupWithPolicyResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgCreateGroupWithPolicyResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgCreateGroupWithPolicyResponseDefaultTypeInternal() {}
  union {
    MsgCreateGroupWithPolicyResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgCreateGroupWithPolicyResponseDefaultTypeInternal _MsgCreateGroupWithPolicyResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgUpdateGroupPolicyDecisionPolicy::MsgUpdateGroupPolicyDecisionPolicy(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.admin_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.group_policy_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.decision_policy_)*/nullptr} {}
struct MsgUpdateGroupPolicyDecisionPolicyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgUpdateGroupPolicyDecisionPolicyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgUpdateGroupPolicyDecisionPolicyDefaultTypeInternal() {}
  union {
    MsgUpdateGroupPolicyDecisionPolicy _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgUpdateGroupPolicyDecisionPolicyDefaultTypeInternal _MsgUpdateGroupPolicyDecisionPolicy_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgUpdateGroupPolicyDecisionPolicyResponse::MsgUpdateGroupPolicyDecisionPolicyResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgUpdateGroupPolicyDecisionPolicyResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgUpdateGroupPolicyDecisionPolicyResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgUpdateGroupPolicyDecisionPolicyResponseDefaultTypeInternal() {}
  union {
    MsgUpdateGroupPolicyDecisionPolicyResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgUpdateGroupPolicyDecisionPolicyResponseDefaultTypeInternal _MsgUpdateGroupPolicyDecisionPolicyResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgUpdateGroupPolicyMetadata::MsgUpdateGroupPolicyMetadata(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.admin_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.group_policy_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.metadata_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgUpdateGroupPolicyMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgUpdateGroupPolicyMetadataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgUpdateGroupPolicyMetadataDefaultTypeInternal() {}
  union {
    MsgUpdateGroupPolicyMetadata _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgUpdateGroupPolicyMetadataDefaultTypeInternal _MsgUpdateGroupPolicyMetadata_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgUpdateGroupPolicyMetadataResponse::MsgUpdateGroupPolicyMetadataResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgUpdateGroupPolicyMetadataResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgUpdateGroupPolicyMetadataResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgUpdateGroupPolicyMetadataResponseDefaultTypeInternal() {}
  union {
    MsgUpdateGroupPolicyMetadataResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgUpdateGroupPolicyMetadataResponseDefaultTypeInternal _MsgUpdateGroupPolicyMetadataResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgSubmitProposal::MsgSubmitProposal(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.proposers_)*/{}
  , /*decltype(_impl_.messages_)*/{}
  , /*decltype(_impl_.group_policy_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.metadata_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.title_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.summary_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.exec_)*/ 0

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgSubmitProposalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgSubmitProposalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgSubmitProposalDefaultTypeInternal() {}
  union {
    MsgSubmitProposal _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgSubmitProposalDefaultTypeInternal _MsgSubmitProposal_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgSubmitProposalResponse::MsgSubmitProposalResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.proposal_id_)*/ ::uint64_t{0u}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgSubmitProposalResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgSubmitProposalResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgSubmitProposalResponseDefaultTypeInternal() {}
  union {
    MsgSubmitProposalResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgSubmitProposalResponseDefaultTypeInternal _MsgSubmitProposalResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgWithdrawProposal::MsgWithdrawProposal(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.proposal_id_)*/ ::uint64_t{0u}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgWithdrawProposalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgWithdrawProposalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgWithdrawProposalDefaultTypeInternal() {}
  union {
    MsgWithdrawProposal _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgWithdrawProposalDefaultTypeInternal _MsgWithdrawProposal_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgWithdrawProposalResponse::MsgWithdrawProposalResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgWithdrawProposalResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgWithdrawProposalResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgWithdrawProposalResponseDefaultTypeInternal() {}
  union {
    MsgWithdrawProposalResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgWithdrawProposalResponseDefaultTypeInternal _MsgWithdrawProposalResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgVote::MsgVote(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.voter_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.metadata_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.proposal_id_)*/ ::uint64_t{0u}

  , /*decltype(_impl_.option_)*/ 0

  , /*decltype(_impl_.exec_)*/ 0

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgVoteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgVoteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgVoteDefaultTypeInternal() {}
  union {
    MsgVote _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgVoteDefaultTypeInternal _MsgVote_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgVoteResponse::MsgVoteResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgVoteResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgVoteResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgVoteResponseDefaultTypeInternal() {}
  union {
    MsgVoteResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgVoteResponseDefaultTypeInternal _MsgVoteResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgExec::MsgExec(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.executor_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.proposal_id_)*/ ::uint64_t{0u}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgExecDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgExecDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgExecDefaultTypeInternal() {}
  union {
    MsgExec _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgExecDefaultTypeInternal _MsgExec_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgExecResponse::MsgExecResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/ 0

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgExecResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgExecResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgExecResponseDefaultTypeInternal() {}
  union {
    MsgExecResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgExecResponseDefaultTypeInternal _MsgExecResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgLeaveGroup::MsgLeaveGroup(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.group_id_)*/ ::uint64_t{0u}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgLeaveGroupDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgLeaveGroupDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgLeaveGroupDefaultTypeInternal() {}
  union {
    MsgLeaveGroup _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgLeaveGroupDefaultTypeInternal _MsgLeaveGroup_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgLeaveGroupResponse::MsgLeaveGroupResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgLeaveGroupResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgLeaveGroupResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgLeaveGroupResponseDefaultTypeInternal() {}
  union {
    MsgLeaveGroupResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgLeaveGroupResponseDefaultTypeInternal _MsgLeaveGroupResponse_default_instance_;
}  // namespace v1
}  // namespace group
}  // namespace cosmos
static ::_pb::Metadata file_level_metadata_cosmos_2fgroup_2fv1_2ftx_2eproto[28];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_cosmos_2fgroup_2fv1_2ftx_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cosmos_2fgroup_2fv1_2ftx_2eproto = nullptr;
const ::uint32_t TableStruct_cosmos_2fgroup_2fv1_2ftx_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgCreateGroup, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgCreateGroup, _impl_.admin_),
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgCreateGroup, _impl_.members_),
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgCreateGroup, _impl_.metadata_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgCreateGroupResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgCreateGroupResponse, _impl_.group_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgUpdateGroupMembers, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgUpdateGroupMembers, _impl_.admin_),
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgUpdateGroupMembers, _impl_.group_id_),
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgUpdateGroupMembers, _impl_.member_updates_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgUpdateGroupMembersResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgUpdateGroupAdmin, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgUpdateGroupAdmin, _impl_.admin_),
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgUpdateGroupAdmin, _impl_.group_id_),
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgUpdateGroupAdmin, _impl_.new_admin_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgUpdateGroupAdminResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgUpdateGroupMetadata, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgUpdateGroupMetadata, _impl_.admin_),
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgUpdateGroupMetadata, _impl_.group_id_),
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgUpdateGroupMetadata, _impl_.metadata_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgUpdateGroupMetadataResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgCreateGroupPolicy, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgCreateGroupPolicy, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgCreateGroupPolicy, _impl_.admin_),
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgCreateGroupPolicy, _impl_.group_id_),
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgCreateGroupPolicy, _impl_.metadata_),
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgCreateGroupPolicy, _impl_.decision_policy_),
    ~0u,
    ~0u,
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgCreateGroupPolicyResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgCreateGroupPolicyResponse, _impl_.address_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgUpdateGroupPolicyAdmin, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgUpdateGroupPolicyAdmin, _impl_.admin_),
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgUpdateGroupPolicyAdmin, _impl_.group_policy_address_),
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgUpdateGroupPolicyAdmin, _impl_.new_admin_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgUpdateGroupPolicyAdminResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgCreateGroupWithPolicy, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgCreateGroupWithPolicy, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgCreateGroupWithPolicy, _impl_.admin_),
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgCreateGroupWithPolicy, _impl_.members_),
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgCreateGroupWithPolicy, _impl_.group_metadata_),
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgCreateGroupWithPolicy, _impl_.group_policy_metadata_),
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgCreateGroupWithPolicy, _impl_.group_policy_as_admin_),
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgCreateGroupWithPolicy, _impl_.decision_policy_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgCreateGroupWithPolicyResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgCreateGroupWithPolicyResponse, _impl_.group_id_),
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgCreateGroupWithPolicyResponse, _impl_.group_policy_address_),
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgUpdateGroupPolicyDecisionPolicy, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgUpdateGroupPolicyDecisionPolicy, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgUpdateGroupPolicyDecisionPolicy, _impl_.admin_),
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgUpdateGroupPolicyDecisionPolicy, _impl_.group_policy_address_),
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgUpdateGroupPolicyDecisionPolicy, _impl_.decision_policy_),
    ~0u,
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgUpdateGroupPolicyDecisionPolicyResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgUpdateGroupPolicyMetadata, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgUpdateGroupPolicyMetadata, _impl_.admin_),
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgUpdateGroupPolicyMetadata, _impl_.group_policy_address_),
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgUpdateGroupPolicyMetadata, _impl_.metadata_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgUpdateGroupPolicyMetadataResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgSubmitProposal, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgSubmitProposal, _impl_.group_policy_address_),
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgSubmitProposal, _impl_.proposers_),
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgSubmitProposal, _impl_.metadata_),
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgSubmitProposal, _impl_.messages_),
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgSubmitProposal, _impl_.exec_),
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgSubmitProposal, _impl_.title_),
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgSubmitProposal, _impl_.summary_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgSubmitProposalResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgSubmitProposalResponse, _impl_.proposal_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgWithdrawProposal, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgWithdrawProposal, _impl_.proposal_id_),
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgWithdrawProposal, _impl_.address_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgWithdrawProposalResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgVote, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgVote, _impl_.proposal_id_),
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgVote, _impl_.voter_),
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgVote, _impl_.option_),
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgVote, _impl_.metadata_),
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgVote, _impl_.exec_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgVoteResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgExec, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgExec, _impl_.proposal_id_),
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgExec, _impl_.executor_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgExecResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgExecResponse, _impl_.result_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgLeaveGroup, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgLeaveGroup, _impl_.address_),
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgLeaveGroup, _impl_.group_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MsgLeaveGroupResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::cosmos::group::v1::MsgCreateGroup)},
        { 11, -1, -1, sizeof(::cosmos::group::v1::MsgCreateGroupResponse)},
        { 20, -1, -1, sizeof(::cosmos::group::v1::MsgUpdateGroupMembers)},
        { 31, -1, -1, sizeof(::cosmos::group::v1::MsgUpdateGroupMembersResponse)},
        { 39, -1, -1, sizeof(::cosmos::group::v1::MsgUpdateGroupAdmin)},
        { 50, -1, -1, sizeof(::cosmos::group::v1::MsgUpdateGroupAdminResponse)},
        { 58, -1, -1, sizeof(::cosmos::group::v1::MsgUpdateGroupMetadata)},
        { 69, -1, -1, sizeof(::cosmos::group::v1::MsgUpdateGroupMetadataResponse)},
        { 77, 89, -1, sizeof(::cosmos::group::v1::MsgCreateGroupPolicy)},
        { 93, -1, -1, sizeof(::cosmos::group::v1::MsgCreateGroupPolicyResponse)},
        { 102, -1, -1, sizeof(::cosmos::group::v1::MsgUpdateGroupPolicyAdmin)},
        { 113, -1, -1, sizeof(::cosmos::group::v1::MsgUpdateGroupPolicyAdminResponse)},
        { 121, 135, -1, sizeof(::cosmos::group::v1::MsgCreateGroupWithPolicy)},
        { 141, -1, -1, sizeof(::cosmos::group::v1::MsgCreateGroupWithPolicyResponse)},
        { 151, 162, -1, sizeof(::cosmos::group::v1::MsgUpdateGroupPolicyDecisionPolicy)},
        { 165, -1, -1, sizeof(::cosmos::group::v1::MsgUpdateGroupPolicyDecisionPolicyResponse)},
        { 173, -1, -1, sizeof(::cosmos::group::v1::MsgUpdateGroupPolicyMetadata)},
        { 184, -1, -1, sizeof(::cosmos::group::v1::MsgUpdateGroupPolicyMetadataResponse)},
        { 192, -1, -1, sizeof(::cosmos::group::v1::MsgSubmitProposal)},
        { 207, -1, -1, sizeof(::cosmos::group::v1::MsgSubmitProposalResponse)},
        { 216, -1, -1, sizeof(::cosmos::group::v1::MsgWithdrawProposal)},
        { 226, -1, -1, sizeof(::cosmos::group::v1::MsgWithdrawProposalResponse)},
        { 234, -1, -1, sizeof(::cosmos::group::v1::MsgVote)},
        { 247, -1, -1, sizeof(::cosmos::group::v1::MsgVoteResponse)},
        { 255, -1, -1, sizeof(::cosmos::group::v1::MsgExec)},
        { 265, -1, -1, sizeof(::cosmos::group::v1::MsgExecResponse)},
        { 274, -1, -1, sizeof(::cosmos::group::v1::MsgLeaveGroup)},
        { 284, -1, -1, sizeof(::cosmos::group::v1::MsgLeaveGroupResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::cosmos::group::v1::_MsgCreateGroup_default_instance_._instance,
    &::cosmos::group::v1::_MsgCreateGroupResponse_default_instance_._instance,
    &::cosmos::group::v1::_MsgUpdateGroupMembers_default_instance_._instance,
    &::cosmos::group::v1::_MsgUpdateGroupMembersResponse_default_instance_._instance,
    &::cosmos::group::v1::_MsgUpdateGroupAdmin_default_instance_._instance,
    &::cosmos::group::v1::_MsgUpdateGroupAdminResponse_default_instance_._instance,
    &::cosmos::group::v1::_MsgUpdateGroupMetadata_default_instance_._instance,
    &::cosmos::group::v1::_MsgUpdateGroupMetadataResponse_default_instance_._instance,
    &::cosmos::group::v1::_MsgCreateGroupPolicy_default_instance_._instance,
    &::cosmos::group::v1::_MsgCreateGroupPolicyResponse_default_instance_._instance,
    &::cosmos::group::v1::_MsgUpdateGroupPolicyAdmin_default_instance_._instance,
    &::cosmos::group::v1::_MsgUpdateGroupPolicyAdminResponse_default_instance_._instance,
    &::cosmos::group::v1::_MsgCreateGroupWithPolicy_default_instance_._instance,
    &::cosmos::group::v1::_MsgCreateGroupWithPolicyResponse_default_instance_._instance,
    &::cosmos::group::v1::_MsgUpdateGroupPolicyDecisionPolicy_default_instance_._instance,
    &::cosmos::group::v1::_MsgUpdateGroupPolicyDecisionPolicyResponse_default_instance_._instance,
    &::cosmos::group::v1::_MsgUpdateGroupPolicyMetadata_default_instance_._instance,
    &::cosmos::group::v1::_MsgUpdateGroupPolicyMetadataResponse_default_instance_._instance,
    &::cosmos::group::v1::_MsgSubmitProposal_default_instance_._instance,
    &::cosmos::group::v1::_MsgSubmitProposalResponse_default_instance_._instance,
    &::cosmos::group::v1::_MsgWithdrawProposal_default_instance_._instance,
    &::cosmos::group::v1::_MsgWithdrawProposalResponse_default_instance_._instance,
    &::cosmos::group::v1::_MsgVote_default_instance_._instance,
    &::cosmos::group::v1::_MsgVoteResponse_default_instance_._instance,
    &::cosmos::group::v1::_MsgExec_default_instance_._instance,
    &::cosmos::group::v1::_MsgExecResponse_default_instance_._instance,
    &::cosmos::group::v1::_MsgLeaveGroup_default_instance_._instance,
    &::cosmos::group::v1::_MsgLeaveGroupResponse_default_instance_._instance,
};
const char descriptor_table_protodef_cosmos_2fgroup_2fv1_2ftx_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\030cosmos/group/v1/tx.proto\022\017cosmos.group"
    ".v1\032\024gogoproto/gogo.proto\032\031cosmos_proto/"
    "cosmos.proto\032\031google/protobuf/any.proto\032"
    "\033cosmos/group/v1/types.proto\032\027cosmos/msg"
    "/v1/msg.proto\032\021amino/amino.proto\"\313\001\n\016Msg"
    "CreateGroup\022.\n\005admin\030\001 \001(\tB\030\322\264-\024cosmos.A"
    "ddressStringR\005admin\022C\n\007members\030\002 \003(\0132\036.c"
    "osmos.group.v1.MemberRequestB\t\310\336\037\000\250\347\260*\001R"
    "\007members\022\032\n\010metadata\030\003 \001(\tR\010metadata:(\202\347"
    "\260*\005admin\212\347\260*\031cosmos-sdk/MsgCreateGroup\"3"
    "\n\026MsgCreateGroupResponse\022\031\n\010group_id\030\001 \001"
    "(\004R\007groupId\"\345\001\n\025MsgUpdateGroupMembers\022.\n"
    "\005admin\030\001 \001(\tB\030\322\264-\024cosmos.AddressStringR\005"
    "admin\022\031\n\010group_id\030\002 \001(\004R\007groupId\022P\n\016memb"
    "er_updates\030\003 \003(\0132\036.cosmos.group.v1.Membe"
    "rRequestB\t\310\336\037\000\250\347\260*\001R\rmemberUpdates:/\202\347\260*"
    "\005admin\212\347\260* cosmos-sdk/MsgUpdateGroupMemb"
    "ers\"\037\n\035MsgUpdateGroupMembersResponse\"\306\001\n"
    "\023MsgUpdateGroupAdmin\022.\n\005admin\030\001 \001(\tB\030\322\264-"
    "\024cosmos.AddressStringR\005admin\022\031\n\010group_id"
    "\030\002 \001(\004R\007groupId\0225\n\tnew_admin\030\003 \001(\tB\030\322\264-\024"
    "cosmos.AddressStringR\010newAdmin:-\202\347\260*\005adm"
    "in\212\347\260*\036cosmos-sdk/MsgUpdateGroupAdmin\"\035\n"
    "\033MsgUpdateGroupAdminResponse\"\261\001\n\026MsgUpda"
    "teGroupMetadata\022.\n\005admin\030\001 \001(\tB\030\322\264-\024cosm"
    "os.AddressStringR\005admin\022\031\n\010group_id\030\002 \001("
    "\004R\007groupId\022\032\n\010metadata\030\003 \001(\tR\010metadata:0"
    "\202\347\260*\005admin\212\347\260*!cosmos-sdk/MsgUpdateGroup"
    "Metadata\" \n\036MsgUpdateGroupMetadataRespon"
    "se\"\224\002\n\024MsgCreateGroupPolicy\022.\n\005admin\030\001 \001"
    "(\tB\030\322\264-\024cosmos.AddressStringR\005admin\022\031\n\010g"
    "roup_id\030\002 \001(\004R\007groupId\022\032\n\010metadata\030\003 \001(\t"
    "R\010metadata\022a\n\017decision_policy\030\004 \001(\0132\024.go"
    "ogle.protobuf.AnyB\"\312\264-\036cosmos.group.v1.D"
    "ecisionPolicyR\016decisionPolicy:2\210\240\037\000\202\347\260*\005"
    "admin\212\347\260*\037cosmos-sdk/MsgCreateGroupPolic"
    "y\"R\n\034MsgCreateGroupPolicyResponse\0222\n\007add"
    "ress\030\001 \001(\tB\030\322\264-\024cosmos.AddressStringR\007ad"
    "dress\"\203\002\n\031MsgUpdateGroupPolicyAdmin\022.\n\005a"
    "dmin\030\001 \001(\tB\030\322\264-\024cosmos.AddressStringR\005ad"
    "min\022J\n\024group_policy_address\030\002 \001(\tB\030\322\264-\024c"
    "osmos.AddressStringR\022groupPolicyAddress\022"
    "5\n\tnew_admin\030\003 \001(\tB\030\322\264-\024cosmos.AddressSt"
    "ringR\010newAdmin:3\202\347\260*\005admin\212\347\260*$cosmos-sd"
    "k/MsgUpdateGroupPolicyAdmin\"#\n!MsgUpdate"
    "GroupPolicyAdminResponse\"\270\003\n\030MsgCreateGr"
    "oupWithPolicy\022.\n\005admin\030\001 \001(\tB\030\322\264-\024cosmos"
    ".AddressStringR\005admin\022C\n\007members\030\002 \003(\0132\036"
    ".cosmos.group.v1.MemberRequestB\t\310\336\037\000\250\347\260*"
    "\001R\007members\022%\n\016group_metadata\030\003 \001(\tR\rgrou"
    "pMetadata\0222\n\025group_policy_metadata\030\004 \001(\t"
    "R\023groupPolicyMetadata\0221\n\025group_policy_as"
    "_admin\030\005 \001(\010R\022groupPolicyAsAdmin\022a\n\017deci"
    "sion_policy\030\006 \001(\0132\024.google.protobuf.AnyB"
    "\"\312\264-\036cosmos.group.v1.DecisionPolicyR\016dec"
    "isionPolicy:6\210\240\037\000\202\347\260*\005admin\212\347\260*#cosmos-s"
    "dk/MsgCreateGroupWithPolicy\"\211\001\n MsgCreat"
    "eGroupWithPolicyResponse\022\031\n\010group_id\030\001 \001"
    "(\004R\007groupId\022J\n\024group_policy_address\030\002 \001("
    "\tB\030\322\264-\024cosmos.AddressStringR\022groupPolicy"
    "Address\"\277\002\n\"MsgUpdateGroupPolicyDecision"
    "Policy\022.\n\005admin\030\001 \001(\tB\030\322\264-\024cosmos.Addres"
    "sStringR\005admin\022J\n\024group_policy_address\030\002"
    " \001(\tB\030\322\264-\024cosmos.AddressStringR\022groupPol"
    "icyAddress\022a\n\017decision_policy\030\003 \001(\0132\024.go"
    "ogle.protobuf.AnyB\"\312\264-\036cosmos.group.v1.D"
    "ecisionPolicyR\016decisionPolicy::\210\240\037\000\202\347\260*\005"
    "admin\212\347\260*\'cosmos-sdk/MsgUpdateGroupDecis"
    "ionPolicy\",\n*MsgUpdateGroupPolicyDecisio"
    "nPolicyResponse\"\356\001\n\034MsgUpdateGroupPolicy"
    "Metadata\022.\n\005admin\030\001 \001(\tB\030\322\264-\024cosmos.Addr"
    "essStringR\005admin\022J\n\024group_policy_address"
    "\030\002 \001(\tB\030\322\264-\024cosmos.AddressStringR\022groupP"
    "olicyAddress\022\032\n\010metadata\030\003 \001(\tR\010metadata"
    ":6\202\347\260*\005admin\212\347\260*\'cosmos-sdk/MsgUpdateGro"
    "upPolicyMetadata\"&\n$MsgUpdateGroupPolicy"
    "MetadataResponse\"\341\002\n\021MsgSubmitProposal\022J"
    "\n\024group_policy_address\030\001 \001(\tB\030\322\264-\024cosmos"
    ".AddressStringR\022groupPolicyAddress\022\034\n\tpr"
    "oposers\030\002 \003(\tR\tproposers\022\032\n\010metadata\030\003 \001"
    "(\tR\010metadata\0220\n\010messages\030\004 \003(\0132\024.google."
    "protobuf.AnyR\010messages\022)\n\004exec\030\005 \001(\0162\025.c"
    "osmos.group.v1.ExecR\004exec\022\024\n\005title\030\006 \001(\t"
    "R\005title\022\030\n\007summary\030\007 \001(\tR\007summary:9\210\240\037\000\202"
    "\347\260*\tproposers\212\347\260*\"cosmos-sdk/group/MsgSu"
    "bmitProposal\"<\n\031MsgSubmitProposalRespons"
    "e\022\037\n\013proposal_id\030\001 \001(\004R\nproposalId\"\241\001\n\023M"
    "sgWithdrawProposal\022\037\n\013proposal_id\030\001 \001(\004R"
    "\nproposalId\0222\n\007address\030\002 \001(\tB\030\322\264-\024cosmos"
    ".AddressStringR\007address:5\202\347\260*\007address\212\347\260"
    "*$cosmos-sdk/group/MsgWithdrawProposal\"\035"
    "\n\033MsgWithdrawProposalResponse\"\377\001\n\007MsgVot"
    "e\022\037\n\013proposal_id\030\001 \001(\004R\nproposalId\022.\n\005vo"
    "ter\030\002 \001(\tB\030\322\264-\024cosmos.AddressStringR\005vot"
    "er\0223\n\006option\030\003 \001(\0162\033.cosmos.group.v1.Vot"
    "eOptionR\006option\022\032\n\010metadata\030\004 \001(\tR\010metad"
    "ata\022)\n\004exec\030\005 \001(\0162\025.cosmos.group.v1.Exec"
    "R\004exec:\'\202\347\260*\005voter\212\347\260*\030cosmos-sdk/group/"
    "MsgVote\"\021\n\017MsgVoteResponse\"\212\001\n\007MsgExec\022\037"
    "\n\013proposal_id\030\001 \001(\004R\nproposalId\0224\n\010execu"
    "tor\030\002 \001(\tB\030\322\264-\024cosmos.AddressStringR\010exe"
    "cutor:(\202\347\260*\006signer\212\347\260*\030cosmos-sdk/group/"
    "MsgExec\"R\n\017MsgExecResponse\022\?\n\006result\030\002 \001"
    "(\0162\'.cosmos.group.v1.ProposalExecutorRes"
    "ultR\006result\"\217\001\n\rMsgLeaveGroup\0222\n\007address"
    "\030\001 \001(\tB\030\322\264-\024cosmos.AddressStringR\007addres"
    "s\022\031\n\010group_id\030\002 \001(\004R\007groupId:/\202\347\260*\007addre"
    "ss\212\347\260*\036cosmos-sdk/group/MsgLeaveGroup\"\027\n"
    "\025MsgLeaveGroupResponse**\n\004Exec\022\024\n\020EXEC_U"
    "NSPECIFIED\020\000\022\014\n\010EXEC_TRY\020\0012\312\013\n\003Msg\022W\n\013Cr"
    "eateGroup\022\037.cosmos.group.v1.MsgCreateGro"
    "up\032\'.cosmos.group.v1.MsgCreateGroupRespo"
    "nse\022l\n\022UpdateGroupMembers\022&.cosmos.group"
    ".v1.MsgUpdateGroupMembers\032..cosmos.group"
    ".v1.MsgUpdateGroupMembersResponse\022f\n\020Upd"
    "ateGroupAdmin\022$.cosmos.group.v1.MsgUpdat"
    "eGroupAdmin\032,.cosmos.group.v1.MsgUpdateG"
    "roupAdminResponse\022o\n\023UpdateGroupMetadata"
    "\022\'.cosmos.group.v1.MsgUpdateGroupMetadat"
    "a\032/.cosmos.group.v1.MsgUpdateGroupMetada"
    "taResponse\022i\n\021CreateGroupPolicy\022%.cosmos"
    ".group.v1.MsgCreateGroupPolicy\032-.cosmos."
    "group.v1.MsgCreateGroupPolicyResponse\022u\n"
    "\025CreateGroupWithPolicy\022).cosmos.group.v1"
    ".MsgCreateGroupWithPolicy\0321.cosmos.group"
    ".v1.MsgCreateGroupWithPolicyResponse\022x\n\026"
    "UpdateGroupPolicyAdmin\022*.cosmos.group.v1"
    ".MsgUpdateGroupPolicyAdmin\0322.cosmos.grou"
    "p.v1.MsgUpdateGroupPolicyAdminResponse\022\223"
    "\001\n\037UpdateGroupPolicyDecisionPolicy\0223.cos"
    "mos.group.v1.MsgUpdateGroupPolicyDecisio"
    "nPolicy\032;.cosmos.group.v1.MsgUpdateGroup"
    "PolicyDecisionPolicyResponse\022\201\001\n\031UpdateG"
    "roupPolicyMetadata\022-.cosmos.group.v1.Msg"
    "UpdateGroupPolicyMetadata\0325.cosmos.group"
    ".v1.MsgUpdateGroupPolicyMetadataResponse"
    "\022`\n\016SubmitProposal\022\".cosmos.group.v1.Msg"
    "SubmitProposal\032*.cosmos.group.v1.MsgSubm"
    "itProposalResponse\022f\n\020WithdrawProposal\022$"
    ".cosmos.group.v1.MsgWithdrawProposal\032,.c"
    "osmos.group.v1.MsgWithdrawProposalRespon"
    "se\022B\n\004Vote\022\030.cosmos.group.v1.MsgVote\032 .c"
    "osmos.group.v1.MsgVoteResponse\022B\n\004Exec\022\030"
    ".cosmos.group.v1.MsgExec\032 .cosmos.group."
    "v1.MsgExecResponse\022T\n\nLeaveGroup\022\036.cosmo"
    "s.group.v1.MsgLeaveGroup\032&.cosmos.group."
    "v1.MsgLeaveGroupResponse\032\005\200\347\260*\001B\242\001\n\023com."
    "cosmos.group.v1B\007TxProtoP\001Z$github.com/c"
    "osmos/cosmos-sdk/x/group\242\002\003CGX\252\002\017Cosmos."
    "Group.V1\312\002\017Cosmos\\Group\\V1\342\002\033Cosmos\\Grou"
    "p\\V1\\GPBMetadata\352\002\021Cosmos::Group::V1b\006pr"
    "oto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_deps[6] =
    {
        &::descriptor_table_amino_2famino_2eproto,
        &::descriptor_table_cosmos_2fgroup_2fv1_2ftypes_2eproto,
        &::descriptor_table_cosmos_2fmsg_2fv1_2fmsg_2eproto,
        &::descriptor_table_cosmos_5fproto_2fcosmos_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_google_2fprotobuf_2fany_2eproto,
};
static ::absl::once_flag descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto = {
    false,
    false,
    6044,
    descriptor_table_protodef_cosmos_2fgroup_2fv1_2ftx_2eproto,
    "cosmos/group/v1/tx.proto",
    &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_once,
    descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_deps,
    6,
    28,
    schemas,
    file_default_instances,
    TableStruct_cosmos_2fgroup_2fv1_2ftx_2eproto::offsets,
    file_level_metadata_cosmos_2fgroup_2fv1_2ftx_2eproto,
    file_level_enum_descriptors_cosmos_2fgroup_2fv1_2ftx_2eproto,
    file_level_service_descriptors_cosmos_2fgroup_2fv1_2ftx_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_getter() {
  return &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_cosmos_2fgroup_2fv1_2ftx_2eproto(&descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto);
namespace cosmos {
namespace group {
namespace v1 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Exec_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto);
  return file_level_enum_descriptors_cosmos_2fgroup_2fv1_2ftx_2eproto[0];
}
bool Exec_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}
// ===================================================================

class MsgCreateGroup::_Internal {
 public:
};

void MsgCreateGroup::clear_members() {
  _internal_mutable_members()->Clear();
}
MsgCreateGroup::MsgCreateGroup(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.MsgCreateGroup)
}
MsgCreateGroup::MsgCreateGroup(const MsgCreateGroup& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgCreateGroup* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.members_){from._impl_.members_}
    , decltype(_impl_.admin_) {}

    , decltype(_impl_.metadata_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.admin_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.admin_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_admin().empty()) {
    _this->_impl_.admin_.Set(from._internal_admin(), _this->GetArenaForAllocation());
  }
  _impl_.metadata_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.metadata_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_metadata().empty()) {
    _this->_impl_.metadata_.Set(from._internal_metadata(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.MsgCreateGroup)
}

inline void MsgCreateGroup::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.members_){arena}
    , decltype(_impl_.admin_) {}

    , decltype(_impl_.metadata_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.admin_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.admin_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.metadata_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.metadata_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgCreateGroup::~MsgCreateGroup() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.MsgCreateGroup)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgCreateGroup::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_members()->~RepeatedPtrField();
  _impl_.admin_.Destroy();
  _impl_.metadata_.Destroy();
}

void MsgCreateGroup::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgCreateGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.MsgCreateGroup)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_members()->Clear();
  _impl_.admin_.ClearToEmpty();
  _impl_.metadata_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgCreateGroup::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string admin = 1 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_admin();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.group.v1.MsgCreateGroup.admin"));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated .cosmos.group.v1.MemberRequest members = 2 [json_name = "members", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_members(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // string metadata = 3 [json_name = "metadata"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_metadata();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.group.v1.MsgCreateGroup.metadata"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgCreateGroup::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.MsgCreateGroup)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string admin = 1 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_admin().empty()) {
    const std::string& _s = this->_internal_admin();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.MsgCreateGroup.admin");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .cosmos.group.v1.MemberRequest members = 2 [json_name = "members", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_members_size()); i < n; i++) {
    const auto& repfield = this->_internal_members(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string metadata = 3 [json_name = "metadata"];
  if (!this->_internal_metadata().empty()) {
    const std::string& _s = this->_internal_metadata();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.MsgCreateGroup.metadata");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.MsgCreateGroup)
  return target;
}

::size_t MsgCreateGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.MsgCreateGroup)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cosmos.group.v1.MemberRequest members = 2 [json_name = "members", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  total_size += 1UL * this->_internal_members_size();
  for (const auto& msg : this->_internal_members()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string admin = 1 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_admin().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_admin());
  }

  // string metadata = 3 [json_name = "metadata"];
  if (!this->_internal_metadata().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_metadata());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgCreateGroup::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgCreateGroup::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgCreateGroup::GetClassData() const { return &_class_data_; }


void MsgCreateGroup::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgCreateGroup*>(&to_msg);
  auto& from = static_cast<const MsgCreateGroup&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.MsgCreateGroup)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_members()->MergeFrom(from._internal_members());
  if (!from._internal_admin().empty()) {
    _this->_internal_set_admin(from._internal_admin());
  }
  if (!from._internal_metadata().empty()) {
    _this->_internal_set_metadata(from._internal_metadata());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgCreateGroup::CopyFrom(const MsgCreateGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.MsgCreateGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgCreateGroup::IsInitialized() const {
  return true;
}

void MsgCreateGroup::InternalSwap(MsgCreateGroup* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_members()->InternalSwap(other->_internal_mutable_members());
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.admin_, lhs_arena,
                                       &other->_impl_.admin_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.metadata_, lhs_arena,
                                       &other->_impl_.metadata_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgCreateGroup::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fgroup_2fv1_2ftx_2eproto[0]);
}
// ===================================================================

class MsgCreateGroupResponse::_Internal {
 public:
};

MsgCreateGroupResponse::MsgCreateGroupResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.MsgCreateGroupResponse)
}
MsgCreateGroupResponse::MsgCreateGroupResponse(const MsgCreateGroupResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.MsgCreateGroupResponse)
}

inline void MsgCreateGroupResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_) { ::uint64_t{0u} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

MsgCreateGroupResponse::~MsgCreateGroupResponse() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.MsgCreateGroupResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgCreateGroupResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}

void MsgCreateGroupResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgCreateGroupResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.MsgCreateGroupResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.group_id_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgCreateGroupResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 group_id = 1 [json_name = "groupId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgCreateGroupResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.MsgCreateGroupResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 group_id = 1 [json_name = "groupId"];
  if (this->_internal_group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_group_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.MsgCreateGroupResponse)
  return target;
}

::size_t MsgCreateGroupResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.MsgCreateGroupResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 group_id = 1 [json_name = "groupId"];
  if (this->_internal_group_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_group_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgCreateGroupResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgCreateGroupResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgCreateGroupResponse::GetClassData() const { return &_class_data_; }


void MsgCreateGroupResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgCreateGroupResponse*>(&to_msg);
  auto& from = static_cast<const MsgCreateGroupResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.MsgCreateGroupResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_group_id() != 0) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgCreateGroupResponse::CopyFrom(const MsgCreateGroupResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.MsgCreateGroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgCreateGroupResponse::IsInitialized() const {
  return true;
}

void MsgCreateGroupResponse::InternalSwap(MsgCreateGroupResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);

  swap(_impl_.group_id_, other->_impl_.group_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgCreateGroupResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fgroup_2fv1_2ftx_2eproto[1]);
}
// ===================================================================

class MsgUpdateGroupMembers::_Internal {
 public:
};

void MsgUpdateGroupMembers::clear_member_updates() {
  _internal_mutable_member_updates()->Clear();
}
MsgUpdateGroupMembers::MsgUpdateGroupMembers(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.MsgUpdateGroupMembers)
}
MsgUpdateGroupMembers::MsgUpdateGroupMembers(const MsgUpdateGroupMembers& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgUpdateGroupMembers* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.member_updates_){from._impl_.member_updates_}
    , decltype(_impl_.admin_) {}

    , decltype(_impl_.group_id_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.admin_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.admin_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_admin().empty()) {
    _this->_impl_.admin_.Set(from._internal_admin(), _this->GetArenaForAllocation());
  }
  _this->_impl_.group_id_ = from._impl_.group_id_;
  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.MsgUpdateGroupMembers)
}

inline void MsgUpdateGroupMembers::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.member_updates_){arena}
    , decltype(_impl_.admin_) {}

    , decltype(_impl_.group_id_) { ::uint64_t{0u} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.admin_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.admin_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgUpdateGroupMembers::~MsgUpdateGroupMembers() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.MsgUpdateGroupMembers)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgUpdateGroupMembers::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_member_updates()->~RepeatedPtrField();
  _impl_.admin_.Destroy();
}

void MsgUpdateGroupMembers::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgUpdateGroupMembers::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.MsgUpdateGroupMembers)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_member_updates()->Clear();
  _impl_.admin_.ClearToEmpty();
  _impl_.group_id_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgUpdateGroupMembers::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string admin = 1 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_admin();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.group.v1.MsgUpdateGroupMembers.admin"));
        } else {
          goto handle_unusual;
        }
        continue;
      // uint64 group_id = 2 [json_name = "groupId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          _impl_.group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated .cosmos.group.v1.MemberRequest member_updates = 3 [json_name = "memberUpdates", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_member_updates(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgUpdateGroupMembers::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.MsgUpdateGroupMembers)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string admin = 1 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_admin().empty()) {
    const std::string& _s = this->_internal_admin();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.MsgUpdateGroupMembers.admin");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // uint64 group_id = 2 [json_name = "groupId"];
  if (this->_internal_group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_group_id(), target);
  }

  // repeated .cosmos.group.v1.MemberRequest member_updates = 3 [json_name = "memberUpdates", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_member_updates_size()); i < n; i++) {
    const auto& repfield = this->_internal_member_updates(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.MsgUpdateGroupMembers)
  return target;
}

::size_t MsgUpdateGroupMembers::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.MsgUpdateGroupMembers)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cosmos.group.v1.MemberRequest member_updates = 3 [json_name = "memberUpdates", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  total_size += 1UL * this->_internal_member_updates_size();
  for (const auto& msg : this->_internal_member_updates()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string admin = 1 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_admin().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_admin());
  }

  // uint64 group_id = 2 [json_name = "groupId"];
  if (this->_internal_group_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_group_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgUpdateGroupMembers::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgUpdateGroupMembers::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgUpdateGroupMembers::GetClassData() const { return &_class_data_; }


void MsgUpdateGroupMembers::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgUpdateGroupMembers*>(&to_msg);
  auto& from = static_cast<const MsgUpdateGroupMembers&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.MsgUpdateGroupMembers)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_member_updates()->MergeFrom(from._internal_member_updates());
  if (!from._internal_admin().empty()) {
    _this->_internal_set_admin(from._internal_admin());
  }
  if (from._internal_group_id() != 0) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgUpdateGroupMembers::CopyFrom(const MsgUpdateGroupMembers& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.MsgUpdateGroupMembers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgUpdateGroupMembers::IsInitialized() const {
  return true;
}

void MsgUpdateGroupMembers::InternalSwap(MsgUpdateGroupMembers* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_member_updates()->InternalSwap(other->_internal_mutable_member_updates());
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.admin_, lhs_arena,
                                       &other->_impl_.admin_, rhs_arena);

  swap(_impl_.group_id_, other->_impl_.group_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgUpdateGroupMembers::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fgroup_2fv1_2ftx_2eproto[2]);
}
// ===================================================================

class MsgUpdateGroupMembersResponse::_Internal {
 public:
};

MsgUpdateGroupMembersResponse::MsgUpdateGroupMembersResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.MsgUpdateGroupMembersResponse)
}
MsgUpdateGroupMembersResponse::MsgUpdateGroupMembersResponse(const MsgUpdateGroupMembersResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgUpdateGroupMembersResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.MsgUpdateGroupMembersResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgUpdateGroupMembersResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgUpdateGroupMembersResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgUpdateGroupMembersResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fgroup_2fv1_2ftx_2eproto[3]);
}
// ===================================================================

class MsgUpdateGroupAdmin::_Internal {
 public:
};

MsgUpdateGroupAdmin::MsgUpdateGroupAdmin(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.MsgUpdateGroupAdmin)
}
MsgUpdateGroupAdmin::MsgUpdateGroupAdmin(const MsgUpdateGroupAdmin& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgUpdateGroupAdmin* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.admin_) {}

    , decltype(_impl_.new_admin_) {}

    , decltype(_impl_.group_id_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.admin_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.admin_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_admin().empty()) {
    _this->_impl_.admin_.Set(from._internal_admin(), _this->GetArenaForAllocation());
  }
  _impl_.new_admin_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.new_admin_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_new_admin().empty()) {
    _this->_impl_.new_admin_.Set(from._internal_new_admin(), _this->GetArenaForAllocation());
  }
  _this->_impl_.group_id_ = from._impl_.group_id_;
  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.MsgUpdateGroupAdmin)
}

inline void MsgUpdateGroupAdmin::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.admin_) {}

    , decltype(_impl_.new_admin_) {}

    , decltype(_impl_.group_id_) { ::uint64_t{0u} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.admin_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.admin_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.new_admin_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.new_admin_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgUpdateGroupAdmin::~MsgUpdateGroupAdmin() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.MsgUpdateGroupAdmin)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgUpdateGroupAdmin::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.admin_.Destroy();
  _impl_.new_admin_.Destroy();
}

void MsgUpdateGroupAdmin::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgUpdateGroupAdmin::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.MsgUpdateGroupAdmin)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.admin_.ClearToEmpty();
  _impl_.new_admin_.ClearToEmpty();
  _impl_.group_id_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgUpdateGroupAdmin::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string admin = 1 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_admin();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.group.v1.MsgUpdateGroupAdmin.admin"));
        } else {
          goto handle_unusual;
        }
        continue;
      // uint64 group_id = 2 [json_name = "groupId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          _impl_.group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string new_admin = 3 [json_name = "newAdmin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_new_admin();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.group.v1.MsgUpdateGroupAdmin.new_admin"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgUpdateGroupAdmin::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.MsgUpdateGroupAdmin)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string admin = 1 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_admin().empty()) {
    const std::string& _s = this->_internal_admin();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.MsgUpdateGroupAdmin.admin");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // uint64 group_id = 2 [json_name = "groupId"];
  if (this->_internal_group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_group_id(), target);
  }

  // string new_admin = 3 [json_name = "newAdmin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_new_admin().empty()) {
    const std::string& _s = this->_internal_new_admin();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.MsgUpdateGroupAdmin.new_admin");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.MsgUpdateGroupAdmin)
  return target;
}

::size_t MsgUpdateGroupAdmin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.MsgUpdateGroupAdmin)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string admin = 1 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_admin().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_admin());
  }

  // string new_admin = 3 [json_name = "newAdmin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_new_admin().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_new_admin());
  }

  // uint64 group_id = 2 [json_name = "groupId"];
  if (this->_internal_group_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_group_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgUpdateGroupAdmin::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgUpdateGroupAdmin::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgUpdateGroupAdmin::GetClassData() const { return &_class_data_; }


void MsgUpdateGroupAdmin::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgUpdateGroupAdmin*>(&to_msg);
  auto& from = static_cast<const MsgUpdateGroupAdmin&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.MsgUpdateGroupAdmin)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_admin().empty()) {
    _this->_internal_set_admin(from._internal_admin());
  }
  if (!from._internal_new_admin().empty()) {
    _this->_internal_set_new_admin(from._internal_new_admin());
  }
  if (from._internal_group_id() != 0) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgUpdateGroupAdmin::CopyFrom(const MsgUpdateGroupAdmin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.MsgUpdateGroupAdmin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgUpdateGroupAdmin::IsInitialized() const {
  return true;
}

void MsgUpdateGroupAdmin::InternalSwap(MsgUpdateGroupAdmin* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.admin_, lhs_arena,
                                       &other->_impl_.admin_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.new_admin_, lhs_arena,
                                       &other->_impl_.new_admin_, rhs_arena);

  swap(_impl_.group_id_, other->_impl_.group_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgUpdateGroupAdmin::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fgroup_2fv1_2ftx_2eproto[4]);
}
// ===================================================================

class MsgUpdateGroupAdminResponse::_Internal {
 public:
};

MsgUpdateGroupAdminResponse::MsgUpdateGroupAdminResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.MsgUpdateGroupAdminResponse)
}
MsgUpdateGroupAdminResponse::MsgUpdateGroupAdminResponse(const MsgUpdateGroupAdminResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgUpdateGroupAdminResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.MsgUpdateGroupAdminResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgUpdateGroupAdminResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgUpdateGroupAdminResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgUpdateGroupAdminResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fgroup_2fv1_2ftx_2eproto[5]);
}
// ===================================================================

class MsgUpdateGroupMetadata::_Internal {
 public:
};

MsgUpdateGroupMetadata::MsgUpdateGroupMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.MsgUpdateGroupMetadata)
}
MsgUpdateGroupMetadata::MsgUpdateGroupMetadata(const MsgUpdateGroupMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgUpdateGroupMetadata* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.admin_) {}

    , decltype(_impl_.metadata_) {}

    , decltype(_impl_.group_id_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.admin_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.admin_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_admin().empty()) {
    _this->_impl_.admin_.Set(from._internal_admin(), _this->GetArenaForAllocation());
  }
  _impl_.metadata_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.metadata_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_metadata().empty()) {
    _this->_impl_.metadata_.Set(from._internal_metadata(), _this->GetArenaForAllocation());
  }
  _this->_impl_.group_id_ = from._impl_.group_id_;
  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.MsgUpdateGroupMetadata)
}

inline void MsgUpdateGroupMetadata::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.admin_) {}

    , decltype(_impl_.metadata_) {}

    , decltype(_impl_.group_id_) { ::uint64_t{0u} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.admin_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.admin_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.metadata_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.metadata_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgUpdateGroupMetadata::~MsgUpdateGroupMetadata() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.MsgUpdateGroupMetadata)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgUpdateGroupMetadata::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.admin_.Destroy();
  _impl_.metadata_.Destroy();
}

void MsgUpdateGroupMetadata::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgUpdateGroupMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.MsgUpdateGroupMetadata)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.admin_.ClearToEmpty();
  _impl_.metadata_.ClearToEmpty();
  _impl_.group_id_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgUpdateGroupMetadata::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string admin = 1 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_admin();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.group.v1.MsgUpdateGroupMetadata.admin"));
        } else {
          goto handle_unusual;
        }
        continue;
      // uint64 group_id = 2 [json_name = "groupId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          _impl_.group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string metadata = 3 [json_name = "metadata"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_metadata();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.group.v1.MsgUpdateGroupMetadata.metadata"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgUpdateGroupMetadata::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.MsgUpdateGroupMetadata)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string admin = 1 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_admin().empty()) {
    const std::string& _s = this->_internal_admin();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.MsgUpdateGroupMetadata.admin");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // uint64 group_id = 2 [json_name = "groupId"];
  if (this->_internal_group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_group_id(), target);
  }

  // string metadata = 3 [json_name = "metadata"];
  if (!this->_internal_metadata().empty()) {
    const std::string& _s = this->_internal_metadata();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.MsgUpdateGroupMetadata.metadata");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.MsgUpdateGroupMetadata)
  return target;
}

::size_t MsgUpdateGroupMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.MsgUpdateGroupMetadata)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string admin = 1 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_admin().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_admin());
  }

  // string metadata = 3 [json_name = "metadata"];
  if (!this->_internal_metadata().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_metadata());
  }

  // uint64 group_id = 2 [json_name = "groupId"];
  if (this->_internal_group_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_group_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgUpdateGroupMetadata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgUpdateGroupMetadata::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgUpdateGroupMetadata::GetClassData() const { return &_class_data_; }


void MsgUpdateGroupMetadata::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgUpdateGroupMetadata*>(&to_msg);
  auto& from = static_cast<const MsgUpdateGroupMetadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.MsgUpdateGroupMetadata)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_admin().empty()) {
    _this->_internal_set_admin(from._internal_admin());
  }
  if (!from._internal_metadata().empty()) {
    _this->_internal_set_metadata(from._internal_metadata());
  }
  if (from._internal_group_id() != 0) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgUpdateGroupMetadata::CopyFrom(const MsgUpdateGroupMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.MsgUpdateGroupMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgUpdateGroupMetadata::IsInitialized() const {
  return true;
}

void MsgUpdateGroupMetadata::InternalSwap(MsgUpdateGroupMetadata* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.admin_, lhs_arena,
                                       &other->_impl_.admin_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.metadata_, lhs_arena,
                                       &other->_impl_.metadata_, rhs_arena);

  swap(_impl_.group_id_, other->_impl_.group_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgUpdateGroupMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fgroup_2fv1_2ftx_2eproto[6]);
}
// ===================================================================

class MsgUpdateGroupMetadataResponse::_Internal {
 public:
};

MsgUpdateGroupMetadataResponse::MsgUpdateGroupMetadataResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.MsgUpdateGroupMetadataResponse)
}
MsgUpdateGroupMetadataResponse::MsgUpdateGroupMetadataResponse(const MsgUpdateGroupMetadataResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgUpdateGroupMetadataResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.MsgUpdateGroupMetadataResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgUpdateGroupMetadataResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgUpdateGroupMetadataResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgUpdateGroupMetadataResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fgroup_2fv1_2ftx_2eproto[7]);
}
// ===================================================================

class MsgCreateGroupPolicy::_Internal {
 public:
  using HasBits = decltype(std::declval<MsgCreateGroupPolicy>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MsgCreateGroupPolicy, _impl_._has_bits_);
  static const ::PROTOBUF_NAMESPACE_ID::Any& decision_policy(const MsgCreateGroupPolicy* msg);
  static void set_has_decision_policy(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::PROTOBUF_NAMESPACE_ID::Any&
MsgCreateGroupPolicy::_Internal::decision_policy(const MsgCreateGroupPolicy* msg) {
  return *msg->_impl_.decision_policy_;
}
void MsgCreateGroupPolicy::clear_decision_policy() {
  if (_impl_.decision_policy_ != nullptr) _impl_.decision_policy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
MsgCreateGroupPolicy::MsgCreateGroupPolicy(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.MsgCreateGroupPolicy)
}
MsgCreateGroupPolicy::MsgCreateGroupPolicy(const MsgCreateGroupPolicy& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgCreateGroupPolicy* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.admin_) {}

    , decltype(_impl_.metadata_) {}

    , decltype(_impl_.decision_policy_){nullptr}
    , decltype(_impl_.group_id_) {}
  };

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.admin_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.admin_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_admin().empty()) {
    _this->_impl_.admin_.Set(from._internal_admin(), _this->GetArenaForAllocation());
  }
  _impl_.metadata_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.metadata_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_metadata().empty()) {
    _this->_impl_.metadata_.Set(from._internal_metadata(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.decision_policy_ = new ::PROTOBUF_NAMESPACE_ID::Any(*from._impl_.decision_policy_);
  }
  _this->_impl_.group_id_ = from._impl_.group_id_;
  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.MsgCreateGroupPolicy)
}

inline void MsgCreateGroupPolicy::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.admin_) {}

    , decltype(_impl_.metadata_) {}

    , decltype(_impl_.decision_policy_){nullptr}
    , decltype(_impl_.group_id_) { ::uint64_t{0u} }

  };
  _impl_.admin_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.admin_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.metadata_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.metadata_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgCreateGroupPolicy::~MsgCreateGroupPolicy() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.MsgCreateGroupPolicy)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgCreateGroupPolicy::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.admin_.Destroy();
  _impl_.metadata_.Destroy();
  if (this != internal_default_instance()) delete _impl_.decision_policy_;
}

void MsgCreateGroupPolicy::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgCreateGroupPolicy::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.MsgCreateGroupPolicy)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.admin_.ClearToEmpty();
  _impl_.metadata_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.decision_policy_ != nullptr);
    _impl_.decision_policy_->Clear();
  }
  _impl_.group_id_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgCreateGroupPolicy::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string admin = 1 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_admin();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.group.v1.MsgCreateGroupPolicy.admin"));
        } else {
          goto handle_unusual;
        }
        continue;
      // uint64 group_id = 2 [json_name = "groupId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          _impl_.group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string metadata = 3 [json_name = "metadata"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_metadata();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.group.v1.MsgCreateGroupPolicy.metadata"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .google.protobuf.Any decision_policy = 4 [json_name = "decisionPolicy", (.cosmos_proto.accepts_interface) = "cosmos.group.v1.DecisionPolicy"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_decision_policy(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgCreateGroupPolicy::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.MsgCreateGroupPolicy)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string admin = 1 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_admin().empty()) {
    const std::string& _s = this->_internal_admin();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.MsgCreateGroupPolicy.admin");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // uint64 group_id = 2 [json_name = "groupId"];
  if (this->_internal_group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_group_id(), target);
  }

  // string metadata = 3 [json_name = "metadata"];
  if (!this->_internal_metadata().empty()) {
    const std::string& _s = this->_internal_metadata();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.MsgCreateGroupPolicy.metadata");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Any decision_policy = 4 [json_name = "decisionPolicy", (.cosmos_proto.accepts_interface) = "cosmos.group.v1.DecisionPolicy"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::decision_policy(this),
        _Internal::decision_policy(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.MsgCreateGroupPolicy)
  return target;
}

::size_t MsgCreateGroupPolicy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.MsgCreateGroupPolicy)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string admin = 1 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_admin().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_admin());
  }

  // string metadata = 3 [json_name = "metadata"];
  if (!this->_internal_metadata().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_metadata());
  }

  // .google.protobuf.Any decision_policy = 4 [json_name = "decisionPolicy", (.cosmos_proto.accepts_interface) = "cosmos.group.v1.DecisionPolicy"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.decision_policy_);
  }

  // uint64 group_id = 2 [json_name = "groupId"];
  if (this->_internal_group_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_group_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgCreateGroupPolicy::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgCreateGroupPolicy::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgCreateGroupPolicy::GetClassData() const { return &_class_data_; }


void MsgCreateGroupPolicy::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgCreateGroupPolicy*>(&to_msg);
  auto& from = static_cast<const MsgCreateGroupPolicy&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.MsgCreateGroupPolicy)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_admin().empty()) {
    _this->_internal_set_admin(from._internal_admin());
  }
  if (!from._internal_metadata().empty()) {
    _this->_internal_set_metadata(from._internal_metadata());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_decision_policy()->::PROTOBUF_NAMESPACE_ID::Any::MergeFrom(
        from._internal_decision_policy());
  }
  if (from._internal_group_id() != 0) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgCreateGroupPolicy::CopyFrom(const MsgCreateGroupPolicy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.MsgCreateGroupPolicy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgCreateGroupPolicy::IsInitialized() const {
  return true;
}

void MsgCreateGroupPolicy::InternalSwap(MsgCreateGroupPolicy* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.admin_, lhs_arena,
                                       &other->_impl_.admin_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.metadata_, lhs_arena,
                                       &other->_impl_.metadata_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MsgCreateGroupPolicy, _impl_.group_id_)
      + sizeof(MsgCreateGroupPolicy::_impl_.group_id_)
      - PROTOBUF_FIELD_OFFSET(MsgCreateGroupPolicy, _impl_.decision_policy_)>(
          reinterpret_cast<char*>(&_impl_.decision_policy_),
          reinterpret_cast<char*>(&other->_impl_.decision_policy_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgCreateGroupPolicy::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fgroup_2fv1_2ftx_2eproto[8]);
}
// ===================================================================

class MsgCreateGroupPolicyResponse::_Internal {
 public:
};

MsgCreateGroupPolicyResponse::MsgCreateGroupPolicyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.MsgCreateGroupPolicyResponse)
}
MsgCreateGroupPolicyResponse::MsgCreateGroupPolicyResponse(const MsgCreateGroupPolicyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgCreateGroupPolicyResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.address_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_address().empty()) {
    _this->_impl_.address_.Set(from._internal_address(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.MsgCreateGroupPolicyResponse)
}

inline void MsgCreateGroupPolicyResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.address_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgCreateGroupPolicyResponse::~MsgCreateGroupPolicyResponse() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.MsgCreateGroupPolicyResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgCreateGroupPolicyResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.address_.Destroy();
}

void MsgCreateGroupPolicyResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgCreateGroupPolicyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.MsgCreateGroupPolicyResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.address_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgCreateGroupPolicyResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.group.v1.MsgCreateGroupPolicyResponse.address"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgCreateGroupPolicyResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.MsgCreateGroupPolicyResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_address().empty()) {
    const std::string& _s = this->_internal_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.MsgCreateGroupPolicyResponse.address");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.MsgCreateGroupPolicyResponse)
  return target;
}

::size_t MsgCreateGroupPolicyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.MsgCreateGroupPolicyResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgCreateGroupPolicyResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgCreateGroupPolicyResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgCreateGroupPolicyResponse::GetClassData() const { return &_class_data_; }


void MsgCreateGroupPolicyResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgCreateGroupPolicyResponse*>(&to_msg);
  auto& from = static_cast<const MsgCreateGroupPolicyResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.MsgCreateGroupPolicyResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_address().empty()) {
    _this->_internal_set_address(from._internal_address());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgCreateGroupPolicyResponse::CopyFrom(const MsgCreateGroupPolicyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.MsgCreateGroupPolicyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgCreateGroupPolicyResponse::IsInitialized() const {
  return true;
}

void MsgCreateGroupPolicyResponse::InternalSwap(MsgCreateGroupPolicyResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.address_, lhs_arena,
                                       &other->_impl_.address_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgCreateGroupPolicyResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fgroup_2fv1_2ftx_2eproto[9]);
}
// ===================================================================

class MsgUpdateGroupPolicyAdmin::_Internal {
 public:
};

MsgUpdateGroupPolicyAdmin::MsgUpdateGroupPolicyAdmin(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.MsgUpdateGroupPolicyAdmin)
}
MsgUpdateGroupPolicyAdmin::MsgUpdateGroupPolicyAdmin(const MsgUpdateGroupPolicyAdmin& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgUpdateGroupPolicyAdmin* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.admin_) {}

    , decltype(_impl_.group_policy_address_) {}

    , decltype(_impl_.new_admin_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.admin_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.admin_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_admin().empty()) {
    _this->_impl_.admin_.Set(from._internal_admin(), _this->GetArenaForAllocation());
  }
  _impl_.group_policy_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.group_policy_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_group_policy_address().empty()) {
    _this->_impl_.group_policy_address_.Set(from._internal_group_policy_address(), _this->GetArenaForAllocation());
  }
  _impl_.new_admin_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.new_admin_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_new_admin().empty()) {
    _this->_impl_.new_admin_.Set(from._internal_new_admin(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.MsgUpdateGroupPolicyAdmin)
}

inline void MsgUpdateGroupPolicyAdmin::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.admin_) {}

    , decltype(_impl_.group_policy_address_) {}

    , decltype(_impl_.new_admin_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.admin_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.admin_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.group_policy_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.group_policy_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.new_admin_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.new_admin_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgUpdateGroupPolicyAdmin::~MsgUpdateGroupPolicyAdmin() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.MsgUpdateGroupPolicyAdmin)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgUpdateGroupPolicyAdmin::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.admin_.Destroy();
  _impl_.group_policy_address_.Destroy();
  _impl_.new_admin_.Destroy();
}

void MsgUpdateGroupPolicyAdmin::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgUpdateGroupPolicyAdmin::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.MsgUpdateGroupPolicyAdmin)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.admin_.ClearToEmpty();
  _impl_.group_policy_address_.ClearToEmpty();
  _impl_.new_admin_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgUpdateGroupPolicyAdmin::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string admin = 1 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_admin();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.group.v1.MsgUpdateGroupPolicyAdmin.admin"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string group_policy_address = 2 [json_name = "groupPolicyAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_group_policy_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.group.v1.MsgUpdateGroupPolicyAdmin.group_policy_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string new_admin = 3 [json_name = "newAdmin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_new_admin();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.group.v1.MsgUpdateGroupPolicyAdmin.new_admin"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgUpdateGroupPolicyAdmin::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.MsgUpdateGroupPolicyAdmin)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string admin = 1 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_admin().empty()) {
    const std::string& _s = this->_internal_admin();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.MsgUpdateGroupPolicyAdmin.admin");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string group_policy_address = 2 [json_name = "groupPolicyAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_group_policy_address().empty()) {
    const std::string& _s = this->_internal_group_policy_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.MsgUpdateGroupPolicyAdmin.group_policy_address");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string new_admin = 3 [json_name = "newAdmin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_new_admin().empty()) {
    const std::string& _s = this->_internal_new_admin();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.MsgUpdateGroupPolicyAdmin.new_admin");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.MsgUpdateGroupPolicyAdmin)
  return target;
}

::size_t MsgUpdateGroupPolicyAdmin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.MsgUpdateGroupPolicyAdmin)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string admin = 1 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_admin().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_admin());
  }

  // string group_policy_address = 2 [json_name = "groupPolicyAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_group_policy_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_group_policy_address());
  }

  // string new_admin = 3 [json_name = "newAdmin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_new_admin().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_new_admin());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgUpdateGroupPolicyAdmin::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgUpdateGroupPolicyAdmin::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgUpdateGroupPolicyAdmin::GetClassData() const { return &_class_data_; }


void MsgUpdateGroupPolicyAdmin::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgUpdateGroupPolicyAdmin*>(&to_msg);
  auto& from = static_cast<const MsgUpdateGroupPolicyAdmin&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.MsgUpdateGroupPolicyAdmin)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_admin().empty()) {
    _this->_internal_set_admin(from._internal_admin());
  }
  if (!from._internal_group_policy_address().empty()) {
    _this->_internal_set_group_policy_address(from._internal_group_policy_address());
  }
  if (!from._internal_new_admin().empty()) {
    _this->_internal_set_new_admin(from._internal_new_admin());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgUpdateGroupPolicyAdmin::CopyFrom(const MsgUpdateGroupPolicyAdmin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.MsgUpdateGroupPolicyAdmin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgUpdateGroupPolicyAdmin::IsInitialized() const {
  return true;
}

void MsgUpdateGroupPolicyAdmin::InternalSwap(MsgUpdateGroupPolicyAdmin* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.admin_, lhs_arena,
                                       &other->_impl_.admin_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.group_policy_address_, lhs_arena,
                                       &other->_impl_.group_policy_address_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.new_admin_, lhs_arena,
                                       &other->_impl_.new_admin_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgUpdateGroupPolicyAdmin::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fgroup_2fv1_2ftx_2eproto[10]);
}
// ===================================================================

class MsgUpdateGroupPolicyAdminResponse::_Internal {
 public:
};

MsgUpdateGroupPolicyAdminResponse::MsgUpdateGroupPolicyAdminResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.MsgUpdateGroupPolicyAdminResponse)
}
MsgUpdateGroupPolicyAdminResponse::MsgUpdateGroupPolicyAdminResponse(const MsgUpdateGroupPolicyAdminResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgUpdateGroupPolicyAdminResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.MsgUpdateGroupPolicyAdminResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgUpdateGroupPolicyAdminResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgUpdateGroupPolicyAdminResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgUpdateGroupPolicyAdminResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fgroup_2fv1_2ftx_2eproto[11]);
}
// ===================================================================

class MsgCreateGroupWithPolicy::_Internal {
 public:
  using HasBits = decltype(std::declval<MsgCreateGroupWithPolicy>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MsgCreateGroupWithPolicy, _impl_._has_bits_);
  static const ::PROTOBUF_NAMESPACE_ID::Any& decision_policy(const MsgCreateGroupWithPolicy* msg);
  static void set_has_decision_policy(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::PROTOBUF_NAMESPACE_ID::Any&
MsgCreateGroupWithPolicy::_Internal::decision_policy(const MsgCreateGroupWithPolicy* msg) {
  return *msg->_impl_.decision_policy_;
}
void MsgCreateGroupWithPolicy::clear_members() {
  _internal_mutable_members()->Clear();
}
void MsgCreateGroupWithPolicy::clear_decision_policy() {
  if (_impl_.decision_policy_ != nullptr) _impl_.decision_policy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
MsgCreateGroupWithPolicy::MsgCreateGroupWithPolicy(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.MsgCreateGroupWithPolicy)
}
MsgCreateGroupWithPolicy::MsgCreateGroupWithPolicy(const MsgCreateGroupWithPolicy& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgCreateGroupWithPolicy* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.members_){from._impl_.members_}
    , decltype(_impl_.admin_) {}

    , decltype(_impl_.group_metadata_) {}

    , decltype(_impl_.group_policy_metadata_) {}

    , decltype(_impl_.decision_policy_){nullptr}
    , decltype(_impl_.group_policy_as_admin_) {}
  };

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.admin_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.admin_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_admin().empty()) {
    _this->_impl_.admin_.Set(from._internal_admin(), _this->GetArenaForAllocation());
  }
  _impl_.group_metadata_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.group_metadata_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_group_metadata().empty()) {
    _this->_impl_.group_metadata_.Set(from._internal_group_metadata(), _this->GetArenaForAllocation());
  }
  _impl_.group_policy_metadata_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.group_policy_metadata_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_group_policy_metadata().empty()) {
    _this->_impl_.group_policy_metadata_.Set(from._internal_group_policy_metadata(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.decision_policy_ = new ::PROTOBUF_NAMESPACE_ID::Any(*from._impl_.decision_policy_);
  }
  _this->_impl_.group_policy_as_admin_ = from._impl_.group_policy_as_admin_;
  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.MsgCreateGroupWithPolicy)
}

inline void MsgCreateGroupWithPolicy::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.members_){arena}
    , decltype(_impl_.admin_) {}

    , decltype(_impl_.group_metadata_) {}

    , decltype(_impl_.group_policy_metadata_) {}

    , decltype(_impl_.decision_policy_){nullptr}
    , decltype(_impl_.group_policy_as_admin_) { false }

  };
  _impl_.admin_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.admin_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.group_metadata_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.group_metadata_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.group_policy_metadata_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.group_policy_metadata_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgCreateGroupWithPolicy::~MsgCreateGroupWithPolicy() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.MsgCreateGroupWithPolicy)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgCreateGroupWithPolicy::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_members()->~RepeatedPtrField();
  _impl_.admin_.Destroy();
  _impl_.group_metadata_.Destroy();
  _impl_.group_policy_metadata_.Destroy();
  if (this != internal_default_instance()) delete _impl_.decision_policy_;
}

void MsgCreateGroupWithPolicy::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgCreateGroupWithPolicy::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.MsgCreateGroupWithPolicy)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_members()->Clear();
  _impl_.admin_.ClearToEmpty();
  _impl_.group_metadata_.ClearToEmpty();
  _impl_.group_policy_metadata_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.decision_policy_ != nullptr);
    _impl_.decision_policy_->Clear();
  }
  _impl_.group_policy_as_admin_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgCreateGroupWithPolicy::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string admin = 1 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_admin();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.group.v1.MsgCreateGroupWithPolicy.admin"));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated .cosmos.group.v1.MemberRequest members = 2 [json_name = "members", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_members(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // string group_metadata = 3 [json_name = "groupMetadata"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_group_metadata();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.group.v1.MsgCreateGroupWithPolicy.group_metadata"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string group_policy_metadata = 4 [json_name = "groupPolicyMetadata"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_group_policy_metadata();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.group.v1.MsgCreateGroupWithPolicy.group_policy_metadata"));
        } else {
          goto handle_unusual;
        }
        continue;
      // bool group_policy_as_admin = 5 [json_name = "groupPolicyAsAdmin"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 40)) {
          _impl_.group_policy_as_admin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .google.protobuf.Any decision_policy = 6 [json_name = "decisionPolicy", (.cosmos_proto.accepts_interface) = "cosmos.group.v1.DecisionPolicy"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_decision_policy(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgCreateGroupWithPolicy::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.MsgCreateGroupWithPolicy)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string admin = 1 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_admin().empty()) {
    const std::string& _s = this->_internal_admin();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.MsgCreateGroupWithPolicy.admin");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .cosmos.group.v1.MemberRequest members = 2 [json_name = "members", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_members_size()); i < n; i++) {
    const auto& repfield = this->_internal_members(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string group_metadata = 3 [json_name = "groupMetadata"];
  if (!this->_internal_group_metadata().empty()) {
    const std::string& _s = this->_internal_group_metadata();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.MsgCreateGroupWithPolicy.group_metadata");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string group_policy_metadata = 4 [json_name = "groupPolicyMetadata"];
  if (!this->_internal_group_policy_metadata().empty()) {
    const std::string& _s = this->_internal_group_policy_metadata();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.MsgCreateGroupWithPolicy.group_policy_metadata");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // bool group_policy_as_admin = 5 [json_name = "groupPolicyAsAdmin"];
  if (this->_internal_group_policy_as_admin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this->_internal_group_policy_as_admin(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Any decision_policy = 6 [json_name = "decisionPolicy", (.cosmos_proto.accepts_interface) = "cosmos.group.v1.DecisionPolicy"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::decision_policy(this),
        _Internal::decision_policy(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.MsgCreateGroupWithPolicy)
  return target;
}

::size_t MsgCreateGroupWithPolicy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.MsgCreateGroupWithPolicy)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cosmos.group.v1.MemberRequest members = 2 [json_name = "members", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  total_size += 1UL * this->_internal_members_size();
  for (const auto& msg : this->_internal_members()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string admin = 1 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_admin().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_admin());
  }

  // string group_metadata = 3 [json_name = "groupMetadata"];
  if (!this->_internal_group_metadata().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_group_metadata());
  }

  // string group_policy_metadata = 4 [json_name = "groupPolicyMetadata"];
  if (!this->_internal_group_policy_metadata().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_group_policy_metadata());
  }

  // .google.protobuf.Any decision_policy = 6 [json_name = "decisionPolicy", (.cosmos_proto.accepts_interface) = "cosmos.group.v1.DecisionPolicy"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.decision_policy_);
  }

  // bool group_policy_as_admin = 5 [json_name = "groupPolicyAsAdmin"];
  if (this->_internal_group_policy_as_admin() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgCreateGroupWithPolicy::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgCreateGroupWithPolicy::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgCreateGroupWithPolicy::GetClassData() const { return &_class_data_; }


void MsgCreateGroupWithPolicy::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgCreateGroupWithPolicy*>(&to_msg);
  auto& from = static_cast<const MsgCreateGroupWithPolicy&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.MsgCreateGroupWithPolicy)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_members()->MergeFrom(from._internal_members());
  if (!from._internal_admin().empty()) {
    _this->_internal_set_admin(from._internal_admin());
  }
  if (!from._internal_group_metadata().empty()) {
    _this->_internal_set_group_metadata(from._internal_group_metadata());
  }
  if (!from._internal_group_policy_metadata().empty()) {
    _this->_internal_set_group_policy_metadata(from._internal_group_policy_metadata());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_decision_policy()->::PROTOBUF_NAMESPACE_ID::Any::MergeFrom(
        from._internal_decision_policy());
  }
  if (from._internal_group_policy_as_admin() != 0) {
    _this->_internal_set_group_policy_as_admin(from._internal_group_policy_as_admin());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgCreateGroupWithPolicy::CopyFrom(const MsgCreateGroupWithPolicy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.MsgCreateGroupWithPolicy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgCreateGroupWithPolicy::IsInitialized() const {
  return true;
}

void MsgCreateGroupWithPolicy::InternalSwap(MsgCreateGroupWithPolicy* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _internal_mutable_members()->InternalSwap(other->_internal_mutable_members());
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.admin_, lhs_arena,
                                       &other->_impl_.admin_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.group_metadata_, lhs_arena,
                                       &other->_impl_.group_metadata_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.group_policy_metadata_, lhs_arena,
                                       &other->_impl_.group_policy_metadata_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MsgCreateGroupWithPolicy, _impl_.group_policy_as_admin_)
      + sizeof(MsgCreateGroupWithPolicy::_impl_.group_policy_as_admin_)
      - PROTOBUF_FIELD_OFFSET(MsgCreateGroupWithPolicy, _impl_.decision_policy_)>(
          reinterpret_cast<char*>(&_impl_.decision_policy_),
          reinterpret_cast<char*>(&other->_impl_.decision_policy_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgCreateGroupWithPolicy::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fgroup_2fv1_2ftx_2eproto[12]);
}
// ===================================================================

class MsgCreateGroupWithPolicyResponse::_Internal {
 public:
};

MsgCreateGroupWithPolicyResponse::MsgCreateGroupWithPolicyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.MsgCreateGroupWithPolicyResponse)
}
MsgCreateGroupWithPolicyResponse::MsgCreateGroupWithPolicyResponse(const MsgCreateGroupWithPolicyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgCreateGroupWithPolicyResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.group_policy_address_) {}

    , decltype(_impl_.group_id_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.group_policy_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.group_policy_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_group_policy_address().empty()) {
    _this->_impl_.group_policy_address_.Set(from._internal_group_policy_address(), _this->GetArenaForAllocation());
  }
  _this->_impl_.group_id_ = from._impl_.group_id_;
  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.MsgCreateGroupWithPolicyResponse)
}

inline void MsgCreateGroupWithPolicyResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.group_policy_address_) {}

    , decltype(_impl_.group_id_) { ::uint64_t{0u} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.group_policy_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.group_policy_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgCreateGroupWithPolicyResponse::~MsgCreateGroupWithPolicyResponse() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.MsgCreateGroupWithPolicyResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgCreateGroupWithPolicyResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.group_policy_address_.Destroy();
}

void MsgCreateGroupWithPolicyResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgCreateGroupWithPolicyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.MsgCreateGroupWithPolicyResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.group_policy_address_.ClearToEmpty();
  _impl_.group_id_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgCreateGroupWithPolicyResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 group_id = 1 [json_name = "groupId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string group_policy_address = 2 [json_name = "groupPolicyAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_group_policy_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.group.v1.MsgCreateGroupWithPolicyResponse.group_policy_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgCreateGroupWithPolicyResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.MsgCreateGroupWithPolicyResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 group_id = 1 [json_name = "groupId"];
  if (this->_internal_group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_group_id(), target);
  }

  // string group_policy_address = 2 [json_name = "groupPolicyAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_group_policy_address().empty()) {
    const std::string& _s = this->_internal_group_policy_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.MsgCreateGroupWithPolicyResponse.group_policy_address");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.MsgCreateGroupWithPolicyResponse)
  return target;
}

::size_t MsgCreateGroupWithPolicyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.MsgCreateGroupWithPolicyResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string group_policy_address = 2 [json_name = "groupPolicyAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_group_policy_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_group_policy_address());
  }

  // uint64 group_id = 1 [json_name = "groupId"];
  if (this->_internal_group_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_group_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgCreateGroupWithPolicyResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgCreateGroupWithPolicyResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgCreateGroupWithPolicyResponse::GetClassData() const { return &_class_data_; }


void MsgCreateGroupWithPolicyResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgCreateGroupWithPolicyResponse*>(&to_msg);
  auto& from = static_cast<const MsgCreateGroupWithPolicyResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.MsgCreateGroupWithPolicyResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_group_policy_address().empty()) {
    _this->_internal_set_group_policy_address(from._internal_group_policy_address());
  }
  if (from._internal_group_id() != 0) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgCreateGroupWithPolicyResponse::CopyFrom(const MsgCreateGroupWithPolicyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.MsgCreateGroupWithPolicyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgCreateGroupWithPolicyResponse::IsInitialized() const {
  return true;
}

void MsgCreateGroupWithPolicyResponse::InternalSwap(MsgCreateGroupWithPolicyResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.group_policy_address_, lhs_arena,
                                       &other->_impl_.group_policy_address_, rhs_arena);

  swap(_impl_.group_id_, other->_impl_.group_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgCreateGroupWithPolicyResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fgroup_2fv1_2ftx_2eproto[13]);
}
// ===================================================================

class MsgUpdateGroupPolicyDecisionPolicy::_Internal {
 public:
  using HasBits = decltype(std::declval<MsgUpdateGroupPolicyDecisionPolicy>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MsgUpdateGroupPolicyDecisionPolicy, _impl_._has_bits_);
  static const ::PROTOBUF_NAMESPACE_ID::Any& decision_policy(const MsgUpdateGroupPolicyDecisionPolicy* msg);
  static void set_has_decision_policy(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::PROTOBUF_NAMESPACE_ID::Any&
MsgUpdateGroupPolicyDecisionPolicy::_Internal::decision_policy(const MsgUpdateGroupPolicyDecisionPolicy* msg) {
  return *msg->_impl_.decision_policy_;
}
void MsgUpdateGroupPolicyDecisionPolicy::clear_decision_policy() {
  if (_impl_.decision_policy_ != nullptr) _impl_.decision_policy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
MsgUpdateGroupPolicyDecisionPolicy::MsgUpdateGroupPolicyDecisionPolicy(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicy)
}
MsgUpdateGroupPolicyDecisionPolicy::MsgUpdateGroupPolicyDecisionPolicy(const MsgUpdateGroupPolicyDecisionPolicy& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgUpdateGroupPolicyDecisionPolicy* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.admin_) {}

    , decltype(_impl_.group_policy_address_) {}

    , decltype(_impl_.decision_policy_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.admin_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.admin_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_admin().empty()) {
    _this->_impl_.admin_.Set(from._internal_admin(), _this->GetArenaForAllocation());
  }
  _impl_.group_policy_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.group_policy_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_group_policy_address().empty()) {
    _this->_impl_.group_policy_address_.Set(from._internal_group_policy_address(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.decision_policy_ = new ::PROTOBUF_NAMESPACE_ID::Any(*from._impl_.decision_policy_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicy)
}

inline void MsgUpdateGroupPolicyDecisionPolicy::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.admin_) {}

    , decltype(_impl_.group_policy_address_) {}

    , decltype(_impl_.decision_policy_){nullptr}
  };
  _impl_.admin_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.admin_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.group_policy_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.group_policy_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgUpdateGroupPolicyDecisionPolicy::~MsgUpdateGroupPolicyDecisionPolicy() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicy)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgUpdateGroupPolicyDecisionPolicy::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.admin_.Destroy();
  _impl_.group_policy_address_.Destroy();
  if (this != internal_default_instance()) delete _impl_.decision_policy_;
}

void MsgUpdateGroupPolicyDecisionPolicy::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgUpdateGroupPolicyDecisionPolicy::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicy)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.admin_.ClearToEmpty();
  _impl_.group_policy_address_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.decision_policy_ != nullptr);
    _impl_.decision_policy_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgUpdateGroupPolicyDecisionPolicy::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string admin = 1 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_admin();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicy.admin"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string group_policy_address = 2 [json_name = "groupPolicyAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_group_policy_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicy.group_policy_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .google.protobuf.Any decision_policy = 3 [json_name = "decisionPolicy", (.cosmos_proto.accepts_interface) = "cosmos.group.v1.DecisionPolicy"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_decision_policy(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgUpdateGroupPolicyDecisionPolicy::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicy)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string admin = 1 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_admin().empty()) {
    const std::string& _s = this->_internal_admin();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicy.admin");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string group_policy_address = 2 [json_name = "groupPolicyAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_group_policy_address().empty()) {
    const std::string& _s = this->_internal_group_policy_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicy.group_policy_address");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Any decision_policy = 3 [json_name = "decisionPolicy", (.cosmos_proto.accepts_interface) = "cosmos.group.v1.DecisionPolicy"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::decision_policy(this),
        _Internal::decision_policy(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicy)
  return target;
}

::size_t MsgUpdateGroupPolicyDecisionPolicy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicy)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string admin = 1 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_admin().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_admin());
  }

  // string group_policy_address = 2 [json_name = "groupPolicyAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_group_policy_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_group_policy_address());
  }

  // .google.protobuf.Any decision_policy = 3 [json_name = "decisionPolicy", (.cosmos_proto.accepts_interface) = "cosmos.group.v1.DecisionPolicy"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.decision_policy_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgUpdateGroupPolicyDecisionPolicy::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgUpdateGroupPolicyDecisionPolicy::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgUpdateGroupPolicyDecisionPolicy::GetClassData() const { return &_class_data_; }


void MsgUpdateGroupPolicyDecisionPolicy::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgUpdateGroupPolicyDecisionPolicy*>(&to_msg);
  auto& from = static_cast<const MsgUpdateGroupPolicyDecisionPolicy&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicy)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_admin().empty()) {
    _this->_internal_set_admin(from._internal_admin());
  }
  if (!from._internal_group_policy_address().empty()) {
    _this->_internal_set_group_policy_address(from._internal_group_policy_address());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_decision_policy()->::PROTOBUF_NAMESPACE_ID::Any::MergeFrom(
        from._internal_decision_policy());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgUpdateGroupPolicyDecisionPolicy::CopyFrom(const MsgUpdateGroupPolicyDecisionPolicy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgUpdateGroupPolicyDecisionPolicy::IsInitialized() const {
  return true;
}

void MsgUpdateGroupPolicyDecisionPolicy::InternalSwap(MsgUpdateGroupPolicyDecisionPolicy* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.admin_, lhs_arena,
                                       &other->_impl_.admin_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.group_policy_address_, lhs_arena,
                                       &other->_impl_.group_policy_address_, rhs_arena);
  swap(_impl_.decision_policy_, other->_impl_.decision_policy_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgUpdateGroupPolicyDecisionPolicy::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fgroup_2fv1_2ftx_2eproto[14]);
}
// ===================================================================

class MsgUpdateGroupPolicyDecisionPolicyResponse::_Internal {
 public:
};

MsgUpdateGroupPolicyDecisionPolicyResponse::MsgUpdateGroupPolicyDecisionPolicyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicyResponse)
}
MsgUpdateGroupPolicyDecisionPolicyResponse::MsgUpdateGroupPolicyDecisionPolicyResponse(const MsgUpdateGroupPolicyDecisionPolicyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgUpdateGroupPolicyDecisionPolicyResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicyResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgUpdateGroupPolicyDecisionPolicyResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgUpdateGroupPolicyDecisionPolicyResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgUpdateGroupPolicyDecisionPolicyResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fgroup_2fv1_2ftx_2eproto[15]);
}
// ===================================================================

class MsgUpdateGroupPolicyMetadata::_Internal {
 public:
};

MsgUpdateGroupPolicyMetadata::MsgUpdateGroupPolicyMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.MsgUpdateGroupPolicyMetadata)
}
MsgUpdateGroupPolicyMetadata::MsgUpdateGroupPolicyMetadata(const MsgUpdateGroupPolicyMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgUpdateGroupPolicyMetadata* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.admin_) {}

    , decltype(_impl_.group_policy_address_) {}

    , decltype(_impl_.metadata_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.admin_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.admin_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_admin().empty()) {
    _this->_impl_.admin_.Set(from._internal_admin(), _this->GetArenaForAllocation());
  }
  _impl_.group_policy_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.group_policy_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_group_policy_address().empty()) {
    _this->_impl_.group_policy_address_.Set(from._internal_group_policy_address(), _this->GetArenaForAllocation());
  }
  _impl_.metadata_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.metadata_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_metadata().empty()) {
    _this->_impl_.metadata_.Set(from._internal_metadata(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.MsgUpdateGroupPolicyMetadata)
}

inline void MsgUpdateGroupPolicyMetadata::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.admin_) {}

    , decltype(_impl_.group_policy_address_) {}

    , decltype(_impl_.metadata_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.admin_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.admin_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.group_policy_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.group_policy_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.metadata_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.metadata_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgUpdateGroupPolicyMetadata::~MsgUpdateGroupPolicyMetadata() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.MsgUpdateGroupPolicyMetadata)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgUpdateGroupPolicyMetadata::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.admin_.Destroy();
  _impl_.group_policy_address_.Destroy();
  _impl_.metadata_.Destroy();
}

void MsgUpdateGroupPolicyMetadata::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgUpdateGroupPolicyMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.MsgUpdateGroupPolicyMetadata)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.admin_.ClearToEmpty();
  _impl_.group_policy_address_.ClearToEmpty();
  _impl_.metadata_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgUpdateGroupPolicyMetadata::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string admin = 1 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_admin();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.group.v1.MsgUpdateGroupPolicyMetadata.admin"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string group_policy_address = 2 [json_name = "groupPolicyAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_group_policy_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.group.v1.MsgUpdateGroupPolicyMetadata.group_policy_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string metadata = 3 [json_name = "metadata"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_metadata();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.group.v1.MsgUpdateGroupPolicyMetadata.metadata"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgUpdateGroupPolicyMetadata::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.MsgUpdateGroupPolicyMetadata)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string admin = 1 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_admin().empty()) {
    const std::string& _s = this->_internal_admin();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.MsgUpdateGroupPolicyMetadata.admin");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string group_policy_address = 2 [json_name = "groupPolicyAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_group_policy_address().empty()) {
    const std::string& _s = this->_internal_group_policy_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.MsgUpdateGroupPolicyMetadata.group_policy_address");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string metadata = 3 [json_name = "metadata"];
  if (!this->_internal_metadata().empty()) {
    const std::string& _s = this->_internal_metadata();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.MsgUpdateGroupPolicyMetadata.metadata");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.MsgUpdateGroupPolicyMetadata)
  return target;
}

::size_t MsgUpdateGroupPolicyMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.MsgUpdateGroupPolicyMetadata)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string admin = 1 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_admin().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_admin());
  }

  // string group_policy_address = 2 [json_name = "groupPolicyAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_group_policy_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_group_policy_address());
  }

  // string metadata = 3 [json_name = "metadata"];
  if (!this->_internal_metadata().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_metadata());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgUpdateGroupPolicyMetadata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgUpdateGroupPolicyMetadata::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgUpdateGroupPolicyMetadata::GetClassData() const { return &_class_data_; }


void MsgUpdateGroupPolicyMetadata::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgUpdateGroupPolicyMetadata*>(&to_msg);
  auto& from = static_cast<const MsgUpdateGroupPolicyMetadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.MsgUpdateGroupPolicyMetadata)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_admin().empty()) {
    _this->_internal_set_admin(from._internal_admin());
  }
  if (!from._internal_group_policy_address().empty()) {
    _this->_internal_set_group_policy_address(from._internal_group_policy_address());
  }
  if (!from._internal_metadata().empty()) {
    _this->_internal_set_metadata(from._internal_metadata());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgUpdateGroupPolicyMetadata::CopyFrom(const MsgUpdateGroupPolicyMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.MsgUpdateGroupPolicyMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgUpdateGroupPolicyMetadata::IsInitialized() const {
  return true;
}

void MsgUpdateGroupPolicyMetadata::InternalSwap(MsgUpdateGroupPolicyMetadata* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.admin_, lhs_arena,
                                       &other->_impl_.admin_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.group_policy_address_, lhs_arena,
                                       &other->_impl_.group_policy_address_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.metadata_, lhs_arena,
                                       &other->_impl_.metadata_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgUpdateGroupPolicyMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fgroup_2fv1_2ftx_2eproto[16]);
}
// ===================================================================

class MsgUpdateGroupPolicyMetadataResponse::_Internal {
 public:
};

MsgUpdateGroupPolicyMetadataResponse::MsgUpdateGroupPolicyMetadataResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.MsgUpdateGroupPolicyMetadataResponse)
}
MsgUpdateGroupPolicyMetadataResponse::MsgUpdateGroupPolicyMetadataResponse(const MsgUpdateGroupPolicyMetadataResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgUpdateGroupPolicyMetadataResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.MsgUpdateGroupPolicyMetadataResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgUpdateGroupPolicyMetadataResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgUpdateGroupPolicyMetadataResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgUpdateGroupPolicyMetadataResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fgroup_2fv1_2ftx_2eproto[17]);
}
// ===================================================================

class MsgSubmitProposal::_Internal {
 public:
};

void MsgSubmitProposal::clear_messages() {
  _internal_mutable_messages()->Clear();
}
MsgSubmitProposal::MsgSubmitProposal(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.MsgSubmitProposal)
}
MsgSubmitProposal::MsgSubmitProposal(const MsgSubmitProposal& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgSubmitProposal* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.proposers_){from._impl_.proposers_}
    , decltype(_impl_.messages_){from._impl_.messages_}
    , decltype(_impl_.group_policy_address_) {}

    , decltype(_impl_.metadata_) {}

    , decltype(_impl_.title_) {}

    , decltype(_impl_.summary_) {}

    , decltype(_impl_.exec_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.group_policy_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.group_policy_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_group_policy_address().empty()) {
    _this->_impl_.group_policy_address_.Set(from._internal_group_policy_address(), _this->GetArenaForAllocation());
  }
  _impl_.metadata_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.metadata_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_metadata().empty()) {
    _this->_impl_.metadata_.Set(from._internal_metadata(), _this->GetArenaForAllocation());
  }
  _impl_.title_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.title_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_title().empty()) {
    _this->_impl_.title_.Set(from._internal_title(), _this->GetArenaForAllocation());
  }
  _impl_.summary_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.summary_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_summary().empty()) {
    _this->_impl_.summary_.Set(from._internal_summary(), _this->GetArenaForAllocation());
  }
  _this->_impl_.exec_ = from._impl_.exec_;
  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.MsgSubmitProposal)
}

inline void MsgSubmitProposal::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.proposers_){arena}
    , decltype(_impl_.messages_){arena}
    , decltype(_impl_.group_policy_address_) {}

    , decltype(_impl_.metadata_) {}

    , decltype(_impl_.title_) {}

    , decltype(_impl_.summary_) {}

    , decltype(_impl_.exec_) { 0 }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.group_policy_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.group_policy_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.metadata_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.metadata_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.title_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.title_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.summary_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.summary_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgSubmitProposal::~MsgSubmitProposal() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.MsgSubmitProposal)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgSubmitProposal::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_proposers()->~RepeatedPtrField();
  _internal_mutable_messages()->~RepeatedPtrField();
  _impl_.group_policy_address_.Destroy();
  _impl_.metadata_.Destroy();
  _impl_.title_.Destroy();
  _impl_.summary_.Destroy();
}

void MsgSubmitProposal::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgSubmitProposal::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.MsgSubmitProposal)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_proposers()->Clear();
  _internal_mutable_messages()->Clear();
  _impl_.group_policy_address_.ClearToEmpty();
  _impl_.metadata_.ClearToEmpty();
  _impl_.title_.ClearToEmpty();
  _impl_.summary_.ClearToEmpty();
  _impl_.exec_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgSubmitProposal::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string group_policy_address = 1 [json_name = "groupPolicyAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_group_policy_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.group.v1.MsgSubmitProposal.group_policy_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated string proposers = 2 [json_name = "proposers"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_proposers();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "cosmos.group.v1.MsgSubmitProposal.proposers"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // string metadata = 3 [json_name = "metadata"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_metadata();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.group.v1.MsgSubmitProposal.metadata"));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated .google.protobuf.Any messages = 4 [json_name = "messages"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_messages(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.group.v1.Exec exec = 5 [json_name = "exec"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 40)) {
          ::int32_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
          _internal_set_exec(static_cast<::cosmos::group::v1::Exec>(val));
        } else {
          goto handle_unusual;
        }
        continue;
      // string title = 6 [json_name = "title"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_title();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.group.v1.MsgSubmitProposal.title"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string summary = 7 [json_name = "summary"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_summary();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.group.v1.MsgSubmitProposal.summary"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgSubmitProposal::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.MsgSubmitProposal)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string group_policy_address = 1 [json_name = "groupPolicyAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_group_policy_address().empty()) {
    const std::string& _s = this->_internal_group_policy_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.MsgSubmitProposal.group_policy_address");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated string proposers = 2 [json_name = "proposers"];
  for (int i = 0, n = this->_internal_proposers_size(); i < n; ++i) {
    const auto& s = this->_internal_proposers(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.MsgSubmitProposal.proposers");
    target = stream->WriteString(2, s, target);
  }

  // string metadata = 3 [json_name = "metadata"];
  if (!this->_internal_metadata().empty()) {
    const std::string& _s = this->_internal_metadata();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.MsgSubmitProposal.metadata");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // repeated .google.protobuf.Any messages = 4 [json_name = "messages"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_messages_size()); i < n; i++) {
    const auto& repfield = this->_internal_messages(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .cosmos.group.v1.Exec exec = 5 [json_name = "exec"];
  if (this->_internal_exec() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        5, this->_internal_exec(), target);
  }

  // string title = 6 [json_name = "title"];
  if (!this->_internal_title().empty()) {
    const std::string& _s = this->_internal_title();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.MsgSubmitProposal.title");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // string summary = 7 [json_name = "summary"];
  if (!this->_internal_summary().empty()) {
    const std::string& _s = this->_internal_summary();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.MsgSubmitProposal.summary");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.MsgSubmitProposal)
  return target;
}

::size_t MsgSubmitProposal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.MsgSubmitProposal)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string proposers = 2 [json_name = "proposers"];
  total_size += 1 * ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_internal_proposers().size());
  for (int i = 0, n = _internal_proposers().size(); i < n; ++i) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        _internal_proposers().Get(i));
  }

  // repeated .google.protobuf.Any messages = 4 [json_name = "messages"];
  total_size += 1UL * this->_internal_messages_size();
  for (const auto& msg : this->_internal_messages()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string group_policy_address = 1 [json_name = "groupPolicyAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_group_policy_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_group_policy_address());
  }

  // string metadata = 3 [json_name = "metadata"];
  if (!this->_internal_metadata().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_metadata());
  }

  // string title = 6 [json_name = "title"];
  if (!this->_internal_title().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_title());
  }

  // string summary = 7 [json_name = "summary"];
  if (!this->_internal_summary().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_summary());
  }

  // .cosmos.group.v1.Exec exec = 5 [json_name = "exec"];
  if (this->_internal_exec() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_exec());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgSubmitProposal::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgSubmitProposal::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgSubmitProposal::GetClassData() const { return &_class_data_; }


void MsgSubmitProposal::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgSubmitProposal*>(&to_msg);
  auto& from = static_cast<const MsgSubmitProposal&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.MsgSubmitProposal)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_proposers()->MergeFrom(from._internal_proposers());
  _this->_internal_mutable_messages()->MergeFrom(from._internal_messages());
  if (!from._internal_group_policy_address().empty()) {
    _this->_internal_set_group_policy_address(from._internal_group_policy_address());
  }
  if (!from._internal_metadata().empty()) {
    _this->_internal_set_metadata(from._internal_metadata());
  }
  if (!from._internal_title().empty()) {
    _this->_internal_set_title(from._internal_title());
  }
  if (!from._internal_summary().empty()) {
    _this->_internal_set_summary(from._internal_summary());
  }
  if (from._internal_exec() != 0) {
    _this->_internal_set_exec(from._internal_exec());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgSubmitProposal::CopyFrom(const MsgSubmitProposal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.MsgSubmitProposal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSubmitProposal::IsInitialized() const {
  return true;
}

void MsgSubmitProposal::InternalSwap(MsgSubmitProposal* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_proposers()->InternalSwap(
      other->_internal_mutable_proposers());
  _internal_mutable_messages()->InternalSwap(other->_internal_mutable_messages());
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.group_policy_address_, lhs_arena,
                                       &other->_impl_.group_policy_address_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.metadata_, lhs_arena,
                                       &other->_impl_.metadata_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, lhs_arena,
                                       &other->_impl_.title_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.summary_, lhs_arena,
                                       &other->_impl_.summary_, rhs_arena);
  swap(_impl_.exec_, other->_impl_.exec_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgSubmitProposal::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fgroup_2fv1_2ftx_2eproto[18]);
}
// ===================================================================

class MsgSubmitProposalResponse::_Internal {
 public:
};

MsgSubmitProposalResponse::MsgSubmitProposalResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.MsgSubmitProposalResponse)
}
MsgSubmitProposalResponse::MsgSubmitProposalResponse(const MsgSubmitProposalResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.MsgSubmitProposalResponse)
}

inline void MsgSubmitProposalResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.proposal_id_) { ::uint64_t{0u} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

MsgSubmitProposalResponse::~MsgSubmitProposalResponse() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.MsgSubmitProposalResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgSubmitProposalResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}

void MsgSubmitProposalResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgSubmitProposalResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.MsgSubmitProposalResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.proposal_id_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgSubmitProposalResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 proposal_id = 1 [json_name = "proposalId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.proposal_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgSubmitProposalResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.MsgSubmitProposalResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 proposal_id = 1 [json_name = "proposalId"];
  if (this->_internal_proposal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_proposal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.MsgSubmitProposalResponse)
  return target;
}

::size_t MsgSubmitProposalResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.MsgSubmitProposalResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 proposal_id = 1 [json_name = "proposalId"];
  if (this->_internal_proposal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_proposal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgSubmitProposalResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgSubmitProposalResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgSubmitProposalResponse::GetClassData() const { return &_class_data_; }


void MsgSubmitProposalResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgSubmitProposalResponse*>(&to_msg);
  auto& from = static_cast<const MsgSubmitProposalResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.MsgSubmitProposalResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_proposal_id() != 0) {
    _this->_internal_set_proposal_id(from._internal_proposal_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgSubmitProposalResponse::CopyFrom(const MsgSubmitProposalResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.MsgSubmitProposalResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSubmitProposalResponse::IsInitialized() const {
  return true;
}

void MsgSubmitProposalResponse::InternalSwap(MsgSubmitProposalResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);

  swap(_impl_.proposal_id_, other->_impl_.proposal_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgSubmitProposalResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fgroup_2fv1_2ftx_2eproto[19]);
}
// ===================================================================

class MsgWithdrawProposal::_Internal {
 public:
};

MsgWithdrawProposal::MsgWithdrawProposal(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.MsgWithdrawProposal)
}
MsgWithdrawProposal::MsgWithdrawProposal(const MsgWithdrawProposal& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgWithdrawProposal* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.address_) {}

    , decltype(_impl_.proposal_id_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_address().empty()) {
    _this->_impl_.address_.Set(from._internal_address(), _this->GetArenaForAllocation());
  }
  _this->_impl_.proposal_id_ = from._impl_.proposal_id_;
  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.MsgWithdrawProposal)
}

inline void MsgWithdrawProposal::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.address_) {}

    , decltype(_impl_.proposal_id_) { ::uint64_t{0u} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgWithdrawProposal::~MsgWithdrawProposal() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.MsgWithdrawProposal)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgWithdrawProposal::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.address_.Destroy();
}

void MsgWithdrawProposal::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgWithdrawProposal::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.MsgWithdrawProposal)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.address_.ClearToEmpty();
  _impl_.proposal_id_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgWithdrawProposal::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 proposal_id = 1 [json_name = "proposalId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.proposal_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string address = 2 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.group.v1.MsgWithdrawProposal.address"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgWithdrawProposal::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.MsgWithdrawProposal)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 proposal_id = 1 [json_name = "proposalId"];
  if (this->_internal_proposal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_proposal_id(), target);
  }

  // string address = 2 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_address().empty()) {
    const std::string& _s = this->_internal_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.MsgWithdrawProposal.address");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.MsgWithdrawProposal)
  return target;
}

::size_t MsgWithdrawProposal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.MsgWithdrawProposal)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string address = 2 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_address());
  }

  // uint64 proposal_id = 1 [json_name = "proposalId"];
  if (this->_internal_proposal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_proposal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgWithdrawProposal::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgWithdrawProposal::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgWithdrawProposal::GetClassData() const { return &_class_data_; }


void MsgWithdrawProposal::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgWithdrawProposal*>(&to_msg);
  auto& from = static_cast<const MsgWithdrawProposal&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.MsgWithdrawProposal)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_address().empty()) {
    _this->_internal_set_address(from._internal_address());
  }
  if (from._internal_proposal_id() != 0) {
    _this->_internal_set_proposal_id(from._internal_proposal_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgWithdrawProposal::CopyFrom(const MsgWithdrawProposal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.MsgWithdrawProposal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgWithdrawProposal::IsInitialized() const {
  return true;
}

void MsgWithdrawProposal::InternalSwap(MsgWithdrawProposal* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.address_, lhs_arena,
                                       &other->_impl_.address_, rhs_arena);

  swap(_impl_.proposal_id_, other->_impl_.proposal_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgWithdrawProposal::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fgroup_2fv1_2ftx_2eproto[20]);
}
// ===================================================================

class MsgWithdrawProposalResponse::_Internal {
 public:
};

MsgWithdrawProposalResponse::MsgWithdrawProposalResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.MsgWithdrawProposalResponse)
}
MsgWithdrawProposalResponse::MsgWithdrawProposalResponse(const MsgWithdrawProposalResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgWithdrawProposalResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.MsgWithdrawProposalResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgWithdrawProposalResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgWithdrawProposalResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgWithdrawProposalResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fgroup_2fv1_2ftx_2eproto[21]);
}
// ===================================================================

class MsgVote::_Internal {
 public:
};

MsgVote::MsgVote(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.MsgVote)
}
MsgVote::MsgVote(const MsgVote& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgVote* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.voter_) {}

    , decltype(_impl_.metadata_) {}

    , decltype(_impl_.proposal_id_) {}

    , decltype(_impl_.option_) {}

    , decltype(_impl_.exec_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.voter_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.voter_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_voter().empty()) {
    _this->_impl_.voter_.Set(from._internal_voter(), _this->GetArenaForAllocation());
  }
  _impl_.metadata_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.metadata_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_metadata().empty()) {
    _this->_impl_.metadata_.Set(from._internal_metadata(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.proposal_id_, &from._impl_.proposal_id_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.exec_) -
    reinterpret_cast<char*>(&_impl_.proposal_id_)) + sizeof(_impl_.exec_));
  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.MsgVote)
}

inline void MsgVote::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.voter_) {}

    , decltype(_impl_.metadata_) {}

    , decltype(_impl_.proposal_id_) { ::uint64_t{0u} }

    , decltype(_impl_.option_) { 0 }

    , decltype(_impl_.exec_) { 0 }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.voter_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.voter_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.metadata_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.metadata_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgVote::~MsgVote() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.MsgVote)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgVote::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.voter_.Destroy();
  _impl_.metadata_.Destroy();
}

void MsgVote::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgVote::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.MsgVote)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.voter_.ClearToEmpty();
  _impl_.metadata_.ClearToEmpty();
  ::memset(&_impl_.proposal_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.exec_) -
      reinterpret_cast<char*>(&_impl_.proposal_id_)) + sizeof(_impl_.exec_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgVote::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 proposal_id = 1 [json_name = "proposalId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.proposal_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string voter = 2 [json_name = "voter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_voter();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.group.v1.MsgVote.voter"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.group.v1.VoteOption option = 3 [json_name = "option"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 24)) {
          ::int32_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
          _internal_set_option(static_cast<::cosmos::group::v1::VoteOption>(val));
        } else {
          goto handle_unusual;
        }
        continue;
      // string metadata = 4 [json_name = "metadata"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_metadata();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.group.v1.MsgVote.metadata"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.group.v1.Exec exec = 5 [json_name = "exec"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 40)) {
          ::int32_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
          _internal_set_exec(static_cast<::cosmos::group::v1::Exec>(val));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgVote::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.MsgVote)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 proposal_id = 1 [json_name = "proposalId"];
  if (this->_internal_proposal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_proposal_id(), target);
  }

  // string voter = 2 [json_name = "voter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_voter().empty()) {
    const std::string& _s = this->_internal_voter();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.MsgVote.voter");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // .cosmos.group.v1.VoteOption option = 3 [json_name = "option"];
  if (this->_internal_option() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_option(), target);
  }

  // string metadata = 4 [json_name = "metadata"];
  if (!this->_internal_metadata().empty()) {
    const std::string& _s = this->_internal_metadata();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.MsgVote.metadata");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // .cosmos.group.v1.Exec exec = 5 [json_name = "exec"];
  if (this->_internal_exec() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        5, this->_internal_exec(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.MsgVote)
  return target;
}

::size_t MsgVote::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.MsgVote)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string voter = 2 [json_name = "voter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_voter().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_voter());
  }

  // string metadata = 4 [json_name = "metadata"];
  if (!this->_internal_metadata().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_metadata());
  }

  // uint64 proposal_id = 1 [json_name = "proposalId"];
  if (this->_internal_proposal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_proposal_id());
  }

  // .cosmos.group.v1.VoteOption option = 3 [json_name = "option"];
  if (this->_internal_option() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_option());
  }

  // .cosmos.group.v1.Exec exec = 5 [json_name = "exec"];
  if (this->_internal_exec() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_exec());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgVote::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgVote::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgVote::GetClassData() const { return &_class_data_; }


void MsgVote::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgVote*>(&to_msg);
  auto& from = static_cast<const MsgVote&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.MsgVote)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_voter().empty()) {
    _this->_internal_set_voter(from._internal_voter());
  }
  if (!from._internal_metadata().empty()) {
    _this->_internal_set_metadata(from._internal_metadata());
  }
  if (from._internal_proposal_id() != 0) {
    _this->_internal_set_proposal_id(from._internal_proposal_id());
  }
  if (from._internal_option() != 0) {
    _this->_internal_set_option(from._internal_option());
  }
  if (from._internal_exec() != 0) {
    _this->_internal_set_exec(from._internal_exec());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgVote::CopyFrom(const MsgVote& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.MsgVote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgVote::IsInitialized() const {
  return true;
}

void MsgVote::InternalSwap(MsgVote* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.voter_, lhs_arena,
                                       &other->_impl_.voter_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.metadata_, lhs_arena,
                                       &other->_impl_.metadata_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MsgVote, _impl_.exec_)
      + sizeof(MsgVote::_impl_.exec_)
      - PROTOBUF_FIELD_OFFSET(MsgVote, _impl_.proposal_id_)>(
          reinterpret_cast<char*>(&_impl_.proposal_id_),
          reinterpret_cast<char*>(&other->_impl_.proposal_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgVote::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fgroup_2fv1_2ftx_2eproto[22]);
}
// ===================================================================

class MsgVoteResponse::_Internal {
 public:
};

MsgVoteResponse::MsgVoteResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.MsgVoteResponse)
}
MsgVoteResponse::MsgVoteResponse(const MsgVoteResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgVoteResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.MsgVoteResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgVoteResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgVoteResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgVoteResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fgroup_2fv1_2ftx_2eproto[23]);
}
// ===================================================================

class MsgExec::_Internal {
 public:
};

MsgExec::MsgExec(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.MsgExec)
}
MsgExec::MsgExec(const MsgExec& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgExec* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.executor_) {}

    , decltype(_impl_.proposal_id_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.executor_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.executor_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_executor().empty()) {
    _this->_impl_.executor_.Set(from._internal_executor(), _this->GetArenaForAllocation());
  }
  _this->_impl_.proposal_id_ = from._impl_.proposal_id_;
  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.MsgExec)
}

inline void MsgExec::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.executor_) {}

    , decltype(_impl_.proposal_id_) { ::uint64_t{0u} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.executor_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.executor_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgExec::~MsgExec() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.MsgExec)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgExec::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.executor_.Destroy();
}

void MsgExec::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgExec::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.MsgExec)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.executor_.ClearToEmpty();
  _impl_.proposal_id_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgExec::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 proposal_id = 1 [json_name = "proposalId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.proposal_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string executor = 2 [json_name = "executor", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_executor();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.group.v1.MsgExec.executor"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgExec::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.MsgExec)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 proposal_id = 1 [json_name = "proposalId"];
  if (this->_internal_proposal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_proposal_id(), target);
  }

  // string executor = 2 [json_name = "executor", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_executor().empty()) {
    const std::string& _s = this->_internal_executor();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.MsgExec.executor");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.MsgExec)
  return target;
}

::size_t MsgExec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.MsgExec)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string executor = 2 [json_name = "executor", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_executor().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_executor());
  }

  // uint64 proposal_id = 1 [json_name = "proposalId"];
  if (this->_internal_proposal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_proposal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgExec::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgExec::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgExec::GetClassData() const { return &_class_data_; }


void MsgExec::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgExec*>(&to_msg);
  auto& from = static_cast<const MsgExec&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.MsgExec)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_executor().empty()) {
    _this->_internal_set_executor(from._internal_executor());
  }
  if (from._internal_proposal_id() != 0) {
    _this->_internal_set_proposal_id(from._internal_proposal_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgExec::CopyFrom(const MsgExec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.MsgExec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgExec::IsInitialized() const {
  return true;
}

void MsgExec::InternalSwap(MsgExec* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.executor_, lhs_arena,
                                       &other->_impl_.executor_, rhs_arena);

  swap(_impl_.proposal_id_, other->_impl_.proposal_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgExec::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fgroup_2fv1_2ftx_2eproto[24]);
}
// ===================================================================

class MsgExecResponse::_Internal {
 public:
};

MsgExecResponse::MsgExecResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.MsgExecResponse)
}
MsgExecResponse::MsgExecResponse(const MsgExecResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.MsgExecResponse)
}

inline void MsgExecResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.result_) { 0 }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

MsgExecResponse::~MsgExecResponse() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.MsgExecResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgExecResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}

void MsgExecResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgExecResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.MsgExecResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgExecResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cosmos.group.v1.ProposalExecutorResult result = 2 [json_name = "result"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          ::int32_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
          _internal_set_result(static_cast<::cosmos::group::v1::ProposalExecutorResult>(val));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgExecResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.MsgExecResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cosmos.group.v1.ProposalExecutorResult result = 2 [json_name = "result"];
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.MsgExecResponse)
  return target;
}

::size_t MsgExecResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.MsgExecResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cosmos.group.v1.ProposalExecutorResult result = 2 [json_name = "result"];
  if (this->_internal_result() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgExecResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgExecResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgExecResponse::GetClassData() const { return &_class_data_; }


void MsgExecResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgExecResponse*>(&to_msg);
  auto& from = static_cast<const MsgExecResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.MsgExecResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_result() != 0) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgExecResponse::CopyFrom(const MsgExecResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.MsgExecResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgExecResponse::IsInitialized() const {
  return true;
}

void MsgExecResponse::InternalSwap(MsgExecResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgExecResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fgroup_2fv1_2ftx_2eproto[25]);
}
// ===================================================================

class MsgLeaveGroup::_Internal {
 public:
};

MsgLeaveGroup::MsgLeaveGroup(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.MsgLeaveGroup)
}
MsgLeaveGroup::MsgLeaveGroup(const MsgLeaveGroup& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgLeaveGroup* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.address_) {}

    , decltype(_impl_.group_id_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_address().empty()) {
    _this->_impl_.address_.Set(from._internal_address(), _this->GetArenaForAllocation());
  }
  _this->_impl_.group_id_ = from._impl_.group_id_;
  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.MsgLeaveGroup)
}

inline void MsgLeaveGroup::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.address_) {}

    , decltype(_impl_.group_id_) { ::uint64_t{0u} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgLeaveGroup::~MsgLeaveGroup() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.MsgLeaveGroup)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgLeaveGroup::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.address_.Destroy();
}

void MsgLeaveGroup::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgLeaveGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.MsgLeaveGroup)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.address_.ClearToEmpty();
  _impl_.group_id_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgLeaveGroup::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.group.v1.MsgLeaveGroup.address"));
        } else {
          goto handle_unusual;
        }
        continue;
      // uint64 group_id = 2 [json_name = "groupId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          _impl_.group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgLeaveGroup::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.MsgLeaveGroup)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_address().empty()) {
    const std::string& _s = this->_internal_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.MsgLeaveGroup.address");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // uint64 group_id = 2 [json_name = "groupId"];
  if (this->_internal_group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_group_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.MsgLeaveGroup)
  return target;
}

::size_t MsgLeaveGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.MsgLeaveGroup)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_address());
  }

  // uint64 group_id = 2 [json_name = "groupId"];
  if (this->_internal_group_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_group_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgLeaveGroup::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgLeaveGroup::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgLeaveGroup::GetClassData() const { return &_class_data_; }


void MsgLeaveGroup::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgLeaveGroup*>(&to_msg);
  auto& from = static_cast<const MsgLeaveGroup&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.MsgLeaveGroup)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_address().empty()) {
    _this->_internal_set_address(from._internal_address());
  }
  if (from._internal_group_id() != 0) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgLeaveGroup::CopyFrom(const MsgLeaveGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.MsgLeaveGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgLeaveGroup::IsInitialized() const {
  return true;
}

void MsgLeaveGroup::InternalSwap(MsgLeaveGroup* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.address_, lhs_arena,
                                       &other->_impl_.address_, rhs_arena);

  swap(_impl_.group_id_, other->_impl_.group_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgLeaveGroup::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fgroup_2fv1_2ftx_2eproto[26]);
}
// ===================================================================

class MsgLeaveGroupResponse::_Internal {
 public:
};

MsgLeaveGroupResponse::MsgLeaveGroupResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.MsgLeaveGroupResponse)
}
MsgLeaveGroupResponse::MsgLeaveGroupResponse(const MsgLeaveGroupResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgLeaveGroupResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.MsgLeaveGroupResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgLeaveGroupResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgLeaveGroupResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgLeaveGroupResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fgroup_2fv1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fgroup_2fv1_2ftx_2eproto[27]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace group
}  // namespace cosmos
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::cosmos::group::v1::MsgCreateGroup*
Arena::CreateMaybeMessage< ::cosmos::group::v1::MsgCreateGroup >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::group::v1::MsgCreateGroup >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::group::v1::MsgCreateGroupResponse*
Arena::CreateMaybeMessage< ::cosmos::group::v1::MsgCreateGroupResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::group::v1::MsgCreateGroupResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::group::v1::MsgUpdateGroupMembers*
Arena::CreateMaybeMessage< ::cosmos::group::v1::MsgUpdateGroupMembers >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::group::v1::MsgUpdateGroupMembers >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::group::v1::MsgUpdateGroupMembersResponse*
Arena::CreateMaybeMessage< ::cosmos::group::v1::MsgUpdateGroupMembersResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::group::v1::MsgUpdateGroupMembersResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::group::v1::MsgUpdateGroupAdmin*
Arena::CreateMaybeMessage< ::cosmos::group::v1::MsgUpdateGroupAdmin >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::group::v1::MsgUpdateGroupAdmin >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::group::v1::MsgUpdateGroupAdminResponse*
Arena::CreateMaybeMessage< ::cosmos::group::v1::MsgUpdateGroupAdminResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::group::v1::MsgUpdateGroupAdminResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::group::v1::MsgUpdateGroupMetadata*
Arena::CreateMaybeMessage< ::cosmos::group::v1::MsgUpdateGroupMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::group::v1::MsgUpdateGroupMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::group::v1::MsgUpdateGroupMetadataResponse*
Arena::CreateMaybeMessage< ::cosmos::group::v1::MsgUpdateGroupMetadataResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::group::v1::MsgUpdateGroupMetadataResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::group::v1::MsgCreateGroupPolicy*
Arena::CreateMaybeMessage< ::cosmos::group::v1::MsgCreateGroupPolicy >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::group::v1::MsgCreateGroupPolicy >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::group::v1::MsgCreateGroupPolicyResponse*
Arena::CreateMaybeMessage< ::cosmos::group::v1::MsgCreateGroupPolicyResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::group::v1::MsgCreateGroupPolicyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::group::v1::MsgUpdateGroupPolicyAdmin*
Arena::CreateMaybeMessage< ::cosmos::group::v1::MsgUpdateGroupPolicyAdmin >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::group::v1::MsgUpdateGroupPolicyAdmin >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::group::v1::MsgUpdateGroupPolicyAdminResponse*
Arena::CreateMaybeMessage< ::cosmos::group::v1::MsgUpdateGroupPolicyAdminResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::group::v1::MsgUpdateGroupPolicyAdminResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::group::v1::MsgCreateGroupWithPolicy*
Arena::CreateMaybeMessage< ::cosmos::group::v1::MsgCreateGroupWithPolicy >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::group::v1::MsgCreateGroupWithPolicy >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::group::v1::MsgCreateGroupWithPolicyResponse*
Arena::CreateMaybeMessage< ::cosmos::group::v1::MsgCreateGroupWithPolicyResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::group::v1::MsgCreateGroupWithPolicyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::group::v1::MsgUpdateGroupPolicyDecisionPolicy*
Arena::CreateMaybeMessage< ::cosmos::group::v1::MsgUpdateGroupPolicyDecisionPolicy >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::group::v1::MsgUpdateGroupPolicyDecisionPolicy >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::group::v1::MsgUpdateGroupPolicyDecisionPolicyResponse*
Arena::CreateMaybeMessage< ::cosmos::group::v1::MsgUpdateGroupPolicyDecisionPolicyResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::group::v1::MsgUpdateGroupPolicyDecisionPolicyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::group::v1::MsgUpdateGroupPolicyMetadata*
Arena::CreateMaybeMessage< ::cosmos::group::v1::MsgUpdateGroupPolicyMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::group::v1::MsgUpdateGroupPolicyMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::group::v1::MsgUpdateGroupPolicyMetadataResponse*
Arena::CreateMaybeMessage< ::cosmos::group::v1::MsgUpdateGroupPolicyMetadataResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::group::v1::MsgUpdateGroupPolicyMetadataResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::group::v1::MsgSubmitProposal*
Arena::CreateMaybeMessage< ::cosmos::group::v1::MsgSubmitProposal >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::group::v1::MsgSubmitProposal >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::group::v1::MsgSubmitProposalResponse*
Arena::CreateMaybeMessage< ::cosmos::group::v1::MsgSubmitProposalResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::group::v1::MsgSubmitProposalResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::group::v1::MsgWithdrawProposal*
Arena::CreateMaybeMessage< ::cosmos::group::v1::MsgWithdrawProposal >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::group::v1::MsgWithdrawProposal >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::group::v1::MsgWithdrawProposalResponse*
Arena::CreateMaybeMessage< ::cosmos::group::v1::MsgWithdrawProposalResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::group::v1::MsgWithdrawProposalResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::group::v1::MsgVote*
Arena::CreateMaybeMessage< ::cosmos::group::v1::MsgVote >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::group::v1::MsgVote >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::group::v1::MsgVoteResponse*
Arena::CreateMaybeMessage< ::cosmos::group::v1::MsgVoteResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::group::v1::MsgVoteResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::group::v1::MsgExec*
Arena::CreateMaybeMessage< ::cosmos::group::v1::MsgExec >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::group::v1::MsgExec >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::group::v1::MsgExecResponse*
Arena::CreateMaybeMessage< ::cosmos::group::v1::MsgExecResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::group::v1::MsgExecResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::group::v1::MsgLeaveGroup*
Arena::CreateMaybeMessage< ::cosmos::group::v1::MsgLeaveGroup >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::group::v1::MsgLeaveGroup >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::group::v1::MsgLeaveGroupResponse*
Arena::CreateMaybeMessage< ::cosmos::group::v1::MsgLeaveGroupResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::group::v1::MsgLeaveGroupResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
