// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/group/module/v1/module.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_cosmos_2fgroup_2fmodule_2fv1_2fmodule_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_cosmos_2fgroup_2fmodule_2fv1_2fmodule_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4023000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4023004 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "cosmos/app/v1alpha1/module.pb.h"
#include "gogoproto/gogo.pb.h"
#include "google/protobuf/duration.pb.h"
#include "amino/amino.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cosmos_2fgroup_2fmodule_2fv1_2fmodule_2eproto

PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_cosmos_2fgroup_2fmodule_2fv1_2fmodule_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable
    descriptor_table_cosmos_2fgroup_2fmodule_2fv1_2fmodule_2eproto;
namespace cosmos {
namespace group {
namespace module {
namespace v1 {
class Module;
struct ModuleDefaultTypeInternal;
extern ModuleDefaultTypeInternal _Module_default_instance_;
}  // namespace v1
}  // namespace module
}  // namespace group
}  // namespace cosmos
PROTOBUF_NAMESPACE_OPEN
template <>
::cosmos::group::module::v1::Module* Arena::CreateMaybeMessage<::cosmos::group::module::v1::Module>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

namespace cosmos {
namespace group {
namespace module {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class Module final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.group.module.v1.Module) */ {
 public:
  inline Module() : Module(nullptr) {}
  ~Module() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Module(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Module(const Module& from);
  Module(Module&& from) noexcept
    : Module() {
    *this = ::std::move(from);
  }

  inline Module& operator=(const Module& from) {
    CopyFrom(from);
    return *this;
  }
  inline Module& operator=(Module&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Module& default_instance() {
    return *internal_default_instance();
  }
  static inline const Module* internal_default_instance() {
    return reinterpret_cast<const Module*>(
               &_Module_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Module& a, Module& b) {
    a.Swap(&b);
  }
  inline void Swap(Module* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Module* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Module* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Module>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Module& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Module& from) {
    Module::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Module* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.group.module.v1.Module";
  }
  protected:
  explicit Module(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMaxExecutionPeriodFieldNumber = 1,
    kMaxMetadataLenFieldNumber = 2,
  };
  // .google.protobuf.Duration max_execution_period = 1 [json_name = "maxExecutionPeriod", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];
  bool has_max_execution_period() const;
  void clear_max_execution_period() ;
  const ::PROTOBUF_NAMESPACE_ID::Duration& max_execution_period() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Duration* release_max_execution_period();
  ::PROTOBUF_NAMESPACE_ID::Duration* mutable_max_execution_period();
  void set_allocated_max_execution_period(::PROTOBUF_NAMESPACE_ID::Duration* max_execution_period);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Duration& _internal_max_execution_period() const;
  ::PROTOBUF_NAMESPACE_ID::Duration* _internal_mutable_max_execution_period();
  public:
  void unsafe_arena_set_allocated_max_execution_period(
      ::PROTOBUF_NAMESPACE_ID::Duration* max_execution_period);
  ::PROTOBUF_NAMESPACE_ID::Duration* unsafe_arena_release_max_execution_period();
  // uint64 max_metadata_len = 2 [json_name = "maxMetadataLen"];
  void clear_max_metadata_len() ;
  ::uint64_t max_metadata_len() const;
  void set_max_metadata_len(::uint64_t value);

  private:
  ::uint64_t _internal_max_metadata_len() const;
  void _internal_set_max_metadata_len(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.group.module.v1.Module)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::Duration* max_execution_period_;
    ::uint64_t max_metadata_len_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fgroup_2fmodule_2fv1_2fmodule_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Module

// .google.protobuf.Duration max_execution_period = 1 [json_name = "maxExecutionPeriod", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];
inline bool Module::has_max_execution_period() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.max_execution_period_ != nullptr);
  return value;
}
inline const ::PROTOBUF_NAMESPACE_ID::Duration& Module::_internal_max_execution_period() const {
  const ::PROTOBUF_NAMESPACE_ID::Duration* p = _impl_.max_execution_period_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Duration&>(
      ::PROTOBUF_NAMESPACE_ID::_Duration_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Duration& Module::max_execution_period() const {
  // @@protoc_insertion_point(field_get:cosmos.group.module.v1.Module.max_execution_period)
  return _internal_max_execution_period();
}
inline void Module::unsafe_arena_set_allocated_max_execution_period(
    ::PROTOBUF_NAMESPACE_ID::Duration* max_execution_period) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.max_execution_period_);
  }
  _impl_.max_execution_period_ = max_execution_period;
  if (max_execution_period) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.group.module.v1.Module.max_execution_period)
}
inline ::PROTOBUF_NAMESPACE_ID::Duration* Module::release_max_execution_period() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::PROTOBUF_NAMESPACE_ID::Duration* temp = _impl_.max_execution_period_;
  _impl_.max_execution_period_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Duration* Module::unsafe_arena_release_max_execution_period() {
  // @@protoc_insertion_point(field_release:cosmos.group.module.v1.Module.max_execution_period)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::PROTOBUF_NAMESPACE_ID::Duration* temp = _impl_.max_execution_period_;
  _impl_.max_execution_period_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Duration* Module::_internal_mutable_max_execution_period() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.max_execution_period_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Duration>(GetArenaForAllocation());
    _impl_.max_execution_period_ = p;
  }
  return _impl_.max_execution_period_;
}
inline ::PROTOBUF_NAMESPACE_ID::Duration* Module::mutable_max_execution_period() {
  ::PROTOBUF_NAMESPACE_ID::Duration* _msg = _internal_mutable_max_execution_period();
  // @@protoc_insertion_point(field_mutable:cosmos.group.module.v1.Module.max_execution_period)
  return _msg;
}
inline void Module::set_allocated_max_execution_period(::PROTOBUF_NAMESPACE_ID::Duration* max_execution_period) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.max_execution_period_);
  }
  if (max_execution_period) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(max_execution_period));
    if (message_arena != submessage_arena) {
      max_execution_period = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, max_execution_period, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.max_execution_period_ = max_execution_period;
  // @@protoc_insertion_point(field_set_allocated:cosmos.group.module.v1.Module.max_execution_period)
}

// uint64 max_metadata_len = 2 [json_name = "maxMetadataLen"];
inline void Module::clear_max_metadata_len() {
  _impl_.max_metadata_len_ = ::uint64_t{0u};
}
inline ::uint64_t Module::max_metadata_len() const {
  // @@protoc_insertion_point(field_get:cosmos.group.module.v1.Module.max_metadata_len)
  return _internal_max_metadata_len();
}
inline void Module::set_max_metadata_len(::uint64_t value) {
  _internal_set_max_metadata_len(value);
  // @@protoc_insertion_point(field_set:cosmos.group.module.v1.Module.max_metadata_len)
}
inline ::uint64_t Module::_internal_max_metadata_len() const {
  return _impl_.max_metadata_len_;
}
inline void Module::_internal_set_max_metadata_len(::uint64_t value) {
  ;
  _impl_.max_metadata_len_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace module
}  // namespace group
}  // namespace cosmos


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_cosmos_2fgroup_2fmodule_2fv1_2fmodule_2eproto_2epb_2eh
