// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/base/tendermint/v1beta1/query.proto

#include "cosmos/base/tendermint/v1beta1/query.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace cosmos {
namespace base {
namespace tendermint {
namespace v1beta1 {
template <typename>
PROTOBUF_CONSTEXPR GetValidatorSetByHeightRequest::GetValidatorSetByHeightRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.pagination_)*/nullptr
  , /*decltype(_impl_.height_)*/ ::int64_t{0}
} {}
struct GetValidatorSetByHeightRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetValidatorSetByHeightRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetValidatorSetByHeightRequestDefaultTypeInternal() {}
  union {
    GetValidatorSetByHeightRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetValidatorSetByHeightRequestDefaultTypeInternal _GetValidatorSetByHeightRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR GetValidatorSetByHeightResponse::GetValidatorSetByHeightResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.validators_)*/{}
  , /*decltype(_impl_.pagination_)*/nullptr
  , /*decltype(_impl_.block_height_)*/ ::int64_t{0}
} {}
struct GetValidatorSetByHeightResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetValidatorSetByHeightResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetValidatorSetByHeightResponseDefaultTypeInternal() {}
  union {
    GetValidatorSetByHeightResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetValidatorSetByHeightResponseDefaultTypeInternal _GetValidatorSetByHeightResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR GetLatestValidatorSetRequest::GetLatestValidatorSetRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.pagination_)*/nullptr} {}
struct GetLatestValidatorSetRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLatestValidatorSetRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLatestValidatorSetRequestDefaultTypeInternal() {}
  union {
    GetLatestValidatorSetRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLatestValidatorSetRequestDefaultTypeInternal _GetLatestValidatorSetRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR GetLatestValidatorSetResponse::GetLatestValidatorSetResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.validators_)*/{}
  , /*decltype(_impl_.pagination_)*/nullptr
  , /*decltype(_impl_.block_height_)*/ ::int64_t{0}
} {}
struct GetLatestValidatorSetResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLatestValidatorSetResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLatestValidatorSetResponseDefaultTypeInternal() {}
  union {
    GetLatestValidatorSetResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLatestValidatorSetResponseDefaultTypeInternal _GetLatestValidatorSetResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR Validator::Validator(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.pub_key_)*/nullptr
  , /*decltype(_impl_.voting_power_)*/ ::int64_t{0}

  , /*decltype(_impl_.proposer_priority_)*/ ::int64_t{0}
} {}
struct ValidatorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ValidatorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ValidatorDefaultTypeInternal() {}
  union {
    Validator _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ValidatorDefaultTypeInternal _Validator_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR GetBlockByHeightRequest::GetBlockByHeightRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.height_)*/ ::int64_t{0}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetBlockByHeightRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetBlockByHeightRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetBlockByHeightRequestDefaultTypeInternal() {}
  union {
    GetBlockByHeightRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetBlockByHeightRequestDefaultTypeInternal _GetBlockByHeightRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR GetBlockByHeightResponse::GetBlockByHeightResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.block_id_)*/nullptr
  , /*decltype(_impl_.block_)*/nullptr
  , /*decltype(_impl_.sdk_block_)*/nullptr} {}
struct GetBlockByHeightResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetBlockByHeightResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetBlockByHeightResponseDefaultTypeInternal() {}
  union {
    GetBlockByHeightResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetBlockByHeightResponseDefaultTypeInternal _GetBlockByHeightResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR GetLatestBlockRequest::GetLatestBlockRequest(
    ::_pbi::ConstantInitialized) {}
struct GetLatestBlockRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLatestBlockRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLatestBlockRequestDefaultTypeInternal() {}
  union {
    GetLatestBlockRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLatestBlockRequestDefaultTypeInternal _GetLatestBlockRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR GetLatestBlockResponse::GetLatestBlockResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.block_id_)*/nullptr
  , /*decltype(_impl_.block_)*/nullptr
  , /*decltype(_impl_.sdk_block_)*/nullptr} {}
struct GetLatestBlockResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLatestBlockResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLatestBlockResponseDefaultTypeInternal() {}
  union {
    GetLatestBlockResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLatestBlockResponseDefaultTypeInternal _GetLatestBlockResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR GetSyncingRequest::GetSyncingRequest(
    ::_pbi::ConstantInitialized) {}
struct GetSyncingRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSyncingRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSyncingRequestDefaultTypeInternal() {}
  union {
    GetSyncingRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSyncingRequestDefaultTypeInternal _GetSyncingRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR GetSyncingResponse::GetSyncingResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.syncing_)*/ false

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetSyncingResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSyncingResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSyncingResponseDefaultTypeInternal() {}
  union {
    GetSyncingResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSyncingResponseDefaultTypeInternal _GetSyncingResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR GetNodeInfoRequest::GetNodeInfoRequest(
    ::_pbi::ConstantInitialized) {}
struct GetNodeInfoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetNodeInfoRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetNodeInfoRequestDefaultTypeInternal() {}
  union {
    GetNodeInfoRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetNodeInfoRequestDefaultTypeInternal _GetNodeInfoRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR GetNodeInfoResponse::GetNodeInfoResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.default_node_info_)*/nullptr
  , /*decltype(_impl_.application_version_)*/nullptr} {}
struct GetNodeInfoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetNodeInfoResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetNodeInfoResponseDefaultTypeInternal() {}
  union {
    GetNodeInfoResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetNodeInfoResponseDefaultTypeInternal _GetNodeInfoResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR VersionInfo::VersionInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.build_deps_)*/{}
  , /*decltype(_impl_.name_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.app_name_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.version_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.git_commit_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.build_tags_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.go_version_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.cosmos_sdk_version_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct VersionInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VersionInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VersionInfoDefaultTypeInternal() {}
  union {
    VersionInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VersionInfoDefaultTypeInternal _VersionInfo_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR Module::Module(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.path_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.version_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.sum_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ModuleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleDefaultTypeInternal() {}
  union {
    Module _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleDefaultTypeInternal _Module_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR ABCIQueryRequest::ABCIQueryRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.path_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.height_)*/ ::int64_t{0}

  , /*decltype(_impl_.prove_)*/ false

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ABCIQueryRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ABCIQueryRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ABCIQueryRequestDefaultTypeInternal() {}
  union {
    ABCIQueryRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ABCIQueryRequestDefaultTypeInternal _ABCIQueryRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR ABCIQueryResponse::ABCIQueryResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.log_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.info_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.key_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.value_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.codespace_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.proof_ops_)*/nullptr
  , /*decltype(_impl_.index_)*/ ::int64_t{0}

  , /*decltype(_impl_.height_)*/ ::int64_t{0}

  , /*decltype(_impl_.code_)*/ 0u
} {}
struct ABCIQueryResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ABCIQueryResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ABCIQueryResponseDefaultTypeInternal() {}
  union {
    ABCIQueryResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ABCIQueryResponseDefaultTypeInternal _ABCIQueryResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR ProofOp::ProofOp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.type_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.key_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.data_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ProofOpDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProofOpDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProofOpDefaultTypeInternal() {}
  union {
    ProofOp _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProofOpDefaultTypeInternal _ProofOp_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR ProofOps::ProofOps(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ops_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ProofOpsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProofOpsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProofOpsDefaultTypeInternal() {}
  union {
    ProofOps _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProofOpsDefaultTypeInternal _ProofOps_default_instance_;
}  // namespace v1beta1
}  // namespace tendermint
}  // namespace base
}  // namespace cosmos
static ::_pb::Metadata file_level_metadata_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto[19];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto = nullptr;
const ::uint32_t TableStruct_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightRequest, _impl_.height_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightRequest, _impl_.pagination_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightResponse, _impl_.block_height_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightResponse, _impl_.validators_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightResponse, _impl_.pagination_),
    ~0u,
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetRequest, _impl_.pagination_),
    0,
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetResponse, _impl_.block_height_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetResponse, _impl_.validators_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetResponse, _impl_.pagination_),
    ~0u,
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::Validator, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::Validator, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::Validator, _impl_.address_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::Validator, _impl_.pub_key_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::Validator, _impl_.voting_power_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::Validator, _impl_.proposer_priority_),
    ~0u,
    0,
    ~0u,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::GetBlockByHeightRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::GetBlockByHeightRequest, _impl_.height_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::GetBlockByHeightResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::GetBlockByHeightResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::GetBlockByHeightResponse, _impl_.block_id_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::GetBlockByHeightResponse, _impl_.block_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::GetBlockByHeightResponse, _impl_.sdk_block_),
    0,
    1,
    2,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::GetLatestBlockRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::GetLatestBlockResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::GetLatestBlockResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::GetLatestBlockResponse, _impl_.block_id_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::GetLatestBlockResponse, _impl_.block_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::GetLatestBlockResponse, _impl_.sdk_block_),
    0,
    1,
    2,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::GetSyncingRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::GetSyncingResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::GetSyncingResponse, _impl_.syncing_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::GetNodeInfoRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::GetNodeInfoResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::GetNodeInfoResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::GetNodeInfoResponse, _impl_.default_node_info_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::GetNodeInfoResponse, _impl_.application_version_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::VersionInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::VersionInfo, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::VersionInfo, _impl_.app_name_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::VersionInfo, _impl_.version_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::VersionInfo, _impl_.git_commit_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::VersionInfo, _impl_.build_tags_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::VersionInfo, _impl_.go_version_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::VersionInfo, _impl_.build_deps_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::VersionInfo, _impl_.cosmos_sdk_version_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::Module, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::Module, _impl_.path_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::Module, _impl_.version_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::Module, _impl_.sum_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::ABCIQueryRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::ABCIQueryRequest, _impl_.data_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::ABCIQueryRequest, _impl_.path_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::ABCIQueryRequest, _impl_.height_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::ABCIQueryRequest, _impl_.prove_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::ABCIQueryResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::ABCIQueryResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::ABCIQueryResponse, _impl_.code_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::ABCIQueryResponse, _impl_.log_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::ABCIQueryResponse, _impl_.info_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::ABCIQueryResponse, _impl_.index_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::ABCIQueryResponse, _impl_.key_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::ABCIQueryResponse, _impl_.value_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::ABCIQueryResponse, _impl_.proof_ops_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::ABCIQueryResponse, _impl_.height_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::ABCIQueryResponse, _impl_.codespace_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    ~0u,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::ProofOp, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::ProofOp, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::ProofOp, _impl_.key_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::ProofOp, _impl_.data_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::ProofOps, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::base::tendermint::v1beta1::ProofOps, _impl_.ops_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, 10, -1, sizeof(::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightRequest)},
        { 12, 23, -1, sizeof(::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightResponse)},
        { 26, 35, -1, sizeof(::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetRequest)},
        { 36, 47, -1, sizeof(::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetResponse)},
        { 50, 62, -1, sizeof(::cosmos::base::tendermint::v1beta1::Validator)},
        { 66, -1, -1, sizeof(::cosmos::base::tendermint::v1beta1::GetBlockByHeightRequest)},
        { 75, 86, -1, sizeof(::cosmos::base::tendermint::v1beta1::GetBlockByHeightResponse)},
        { 89, -1, -1, sizeof(::cosmos::base::tendermint::v1beta1::GetLatestBlockRequest)},
        { 97, 108, -1, sizeof(::cosmos::base::tendermint::v1beta1::GetLatestBlockResponse)},
        { 111, -1, -1, sizeof(::cosmos::base::tendermint::v1beta1::GetSyncingRequest)},
        { 119, -1, -1, sizeof(::cosmos::base::tendermint::v1beta1::GetSyncingResponse)},
        { 128, -1, -1, sizeof(::cosmos::base::tendermint::v1beta1::GetNodeInfoRequest)},
        { 136, 146, -1, sizeof(::cosmos::base::tendermint::v1beta1::GetNodeInfoResponse)},
        { 148, -1, -1, sizeof(::cosmos::base::tendermint::v1beta1::VersionInfo)},
        { 164, -1, -1, sizeof(::cosmos::base::tendermint::v1beta1::Module)},
        { 175, -1, -1, sizeof(::cosmos::base::tendermint::v1beta1::ABCIQueryRequest)},
        { 187, 204, -1, sizeof(::cosmos::base::tendermint::v1beta1::ABCIQueryResponse)},
        { 213, -1, -1, sizeof(::cosmos::base::tendermint::v1beta1::ProofOp)},
        { 224, -1, -1, sizeof(::cosmos::base::tendermint::v1beta1::ProofOps)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::cosmos::base::tendermint::v1beta1::_GetValidatorSetByHeightRequest_default_instance_._instance,
    &::cosmos::base::tendermint::v1beta1::_GetValidatorSetByHeightResponse_default_instance_._instance,
    &::cosmos::base::tendermint::v1beta1::_GetLatestValidatorSetRequest_default_instance_._instance,
    &::cosmos::base::tendermint::v1beta1::_GetLatestValidatorSetResponse_default_instance_._instance,
    &::cosmos::base::tendermint::v1beta1::_Validator_default_instance_._instance,
    &::cosmos::base::tendermint::v1beta1::_GetBlockByHeightRequest_default_instance_._instance,
    &::cosmos::base::tendermint::v1beta1::_GetBlockByHeightResponse_default_instance_._instance,
    &::cosmos::base::tendermint::v1beta1::_GetLatestBlockRequest_default_instance_._instance,
    &::cosmos::base::tendermint::v1beta1::_GetLatestBlockResponse_default_instance_._instance,
    &::cosmos::base::tendermint::v1beta1::_GetSyncingRequest_default_instance_._instance,
    &::cosmos::base::tendermint::v1beta1::_GetSyncingResponse_default_instance_._instance,
    &::cosmos::base::tendermint::v1beta1::_GetNodeInfoRequest_default_instance_._instance,
    &::cosmos::base::tendermint::v1beta1::_GetNodeInfoResponse_default_instance_._instance,
    &::cosmos::base::tendermint::v1beta1::_VersionInfo_default_instance_._instance,
    &::cosmos::base::tendermint::v1beta1::_Module_default_instance_._instance,
    &::cosmos::base::tendermint::v1beta1::_ABCIQueryRequest_default_instance_._instance,
    &::cosmos::base::tendermint::v1beta1::_ABCIQueryResponse_default_instance_._instance,
    &::cosmos::base::tendermint::v1beta1::_ProofOp_default_instance_._instance,
    &::cosmos::base::tendermint::v1beta1::_ProofOps_default_instance_._instance,
};
const char descriptor_table_protodef_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n*cosmos/base/tendermint/v1beta1/query.p"
    "roto\022\036cosmos.base.tendermint.v1beta1\032\024go"
    "goproto/gogo.proto\032\031google/protobuf/any."
    "proto\032\034google/api/annotations.proto\032\032ten"
    "dermint/p2p/types.proto\032\034tendermint/type"
    "s/types.proto\032*cosmos/base/query/v1beta1"
    "/pagination.proto\032*cosmos/base/tendermin"
    "t/v1beta1/types.proto\032\031cosmos_proto/cosm"
    "os.proto\032\034tendermint/types/block.proto\032\021"
    "amino/amino.proto\"\200\001\n\036GetValidatorSetByH"
    "eightRequest\022\026\n\006height\030\001 \001(\003R\006height\022F\n\n"
    "pagination\030\002 \001(\0132&.cosmos.base.query.v1b"
    "eta1.PageRequestR\npagination\"\330\001\n\037GetVali"
    "datorSetByHeightResponse\022!\n\014block_height"
    "\030\001 \001(\003R\013blockHeight\022I\n\nvalidators\030\002 \003(\0132"
    ").cosmos.base.tendermint.v1beta1.Validat"
    "orR\nvalidators\022G\n\npagination\030\003 \001(\0132\'.cos"
    "mos.base.query.v1beta1.PageResponseR\npag"
    "ination\"f\n\034GetLatestValidatorSetRequest\022"
    "F\n\npagination\030\001 \001(\0132&.cosmos.base.query."
    "v1beta1.PageRequestR\npagination\"\326\001\n\035GetL"
    "atestValidatorSetResponse\022!\n\014block_heigh"
    "t\030\001 \001(\003R\013blockHeight\022I\n\nvalidators\030\002 \003(\013"
    "2).cosmos.base.tendermint.v1beta1.Valida"
    "torR\nvalidators\022G\n\npagination\030\003 \001(\0132\'.co"
    "smos.base.query.v1beta1.PageResponseR\npa"
    "gination\"\276\001\n\tValidator\0222\n\007address\030\001 \001(\tB"
    "\030\322\264-\024cosmos.AddressStringR\007address\022-\n\007pu"
    "b_key\030\002 \001(\0132\024.google.protobuf.AnyR\006pubKe"
    "y\022!\n\014voting_power\030\003 \001(\003R\013votingPower\022+\n\021"
    "proposer_priority\030\004 \001(\003R\020proposerPriorit"
    "y\"1\n\027GetBlockByHeightRequest\022\026\n\006height\030\001"
    " \001(\003R\006height\"\303\001\n\030GetBlockByHeightRespons"
    "e\0224\n\010block_id\030\001 \001(\0132\031.tendermint.types.B"
    "lockIDR\007blockId\022-\n\005block\030\002 \001(\0132\027.tenderm"
    "int.types.BlockR\005block\022B\n\tsdk_block\030\003 \001("
    "\0132%.cosmos.base.tendermint.v1beta1.Block"
    "R\010sdkBlock\"\027\n\025GetLatestBlockRequest\"\301\001\n\026"
    "GetLatestBlockResponse\0224\n\010block_id\030\001 \001(\013"
    "2\031.tendermint.types.BlockIDR\007blockId\022-\n\005"
    "block\030\002 \001(\0132\027.tendermint.types.BlockR\005bl"
    "ock\022B\n\tsdk_block\030\003 \001(\0132%.cosmos.base.ten"
    "dermint.v1beta1.BlockR\010sdkBlock\"\023\n\021GetSy"
    "ncingRequest\".\n\022GetSyncingResponse\022\030\n\007sy"
    "ncing\030\001 \001(\010R\007syncing\"\024\n\022GetNodeInfoReque"
    "st\"\300\001\n\023GetNodeInfoResponse\022K\n\021default_no"
    "de_info\030\001 \001(\0132\037.tendermint.p2p.DefaultNo"
    "deInfoR\017defaultNodeInfo\022\\\n\023application_v"
    "ersion\030\002 \001(\0132+.cosmos.base.tendermint.v1"
    "beta1.VersionInfoR\022applicationVersion\"\250\002"
    "\n\013VersionInfo\022\022\n\004name\030\001 \001(\tR\004name\022\031\n\010app"
    "_name\030\002 \001(\tR\007appName\022\030\n\007version\030\003 \001(\tR\007v"
    "ersion\022\035\n\ngit_commit\030\004 \001(\tR\tgitCommit\022\035\n"
    "\nbuild_tags\030\005 \001(\tR\tbuildTags\022\035\n\ngo_versi"
    "on\030\006 \001(\tR\tgoVersion\022E\n\nbuild_deps\030\007 \003(\0132"
    "&.cosmos.base.tendermint.v1beta1.ModuleR"
    "\tbuildDeps\022,\n\022cosmos_sdk_version\030\010 \001(\tR\020"
    "cosmosSdkVersion\"H\n\006Module\022\022\n\004path\030\001 \001(\t"
    "R\004path\022\030\n\007version\030\002 \001(\tR\007version\022\020\n\003sum\030"
    "\003 \001(\tR\003sum\"h\n\020ABCIQueryRequest\022\022\n\004data\030\001"
    " \001(\014R\004data\022\022\n\004path\030\002 \001(\tR\004path\022\026\n\006height"
    "\030\003 \001(\003R\006height\022\024\n\005prove\030\004 \001(\010R\005prove\"\216\002\n"
    "\021ABCIQueryResponse\022\022\n\004code\030\001 \001(\rR\004code\022\020"
    "\n\003log\030\003 \001(\tR\003log\022\022\n\004info\030\004 \001(\tR\004info\022\024\n\005"
    "index\030\005 \001(\003R\005index\022\020\n\003key\030\006 \001(\014R\003key\022\024\n\005"
    "value\030\007 \001(\014R\005value\022E\n\tproof_ops\030\010 \001(\0132(."
    "cosmos.base.tendermint.v1beta1.ProofOpsR"
    "\010proofOps\022\026\n\006height\030\t \001(\003R\006height\022\034\n\tcod"
    "espace\030\n \001(\tR\tcodespaceJ\004\010\002\020\003\"C\n\007ProofOp"
    "\022\022\n\004type\030\001 \001(\tR\004type\022\020\n\003key\030\002 \001(\014R\003key\022\022"
    "\n\004data\030\003 \001(\014R\004data\"P\n\010ProofOps\022D\n\003ops\030\001 "
    "\003(\0132\'.cosmos.base.tendermint.v1beta1.Pro"
    "ofOpB\t\310\336\037\000\250\347\260*\001R\003ops2\257\n\n\007Service\022\251\001\n\013Get"
    "NodeInfo\0222.cosmos.base.tendermint.v1beta"
    "1.GetNodeInfoRequest\0323.cosmos.base.tende"
    "rmint.v1beta1.GetNodeInfoResponse\"1\202\323\344\223\002"
    "+\022)/cosmos/base/tendermint/v1beta1/node_"
    "info\022\244\001\n\nGetSyncing\0221.cosmos.base.tender"
    "mint.v1beta1.GetSyncingRequest\0322.cosmos."
    "base.tendermint.v1beta1.GetSyncingRespon"
    "se\"/\202\323\344\223\002)\022\'/cosmos/base/tendermint/v1be"
    "ta1/syncing\022\266\001\n\016GetLatestBlock\0225.cosmos."
    "base.tendermint.v1beta1.GetLatestBlockRe"
    "quest\0326.cosmos.base.tendermint.v1beta1.G"
    "etLatestBlockResponse\"5\202\323\344\223\002/\022-/cosmos/b"
    "ase/tendermint/v1beta1/blocks/latest\022\276\001\n"
    "\020GetBlockByHeight\0227.cosmos.base.tendermi"
    "nt.v1beta1.GetBlockByHeightRequest\0328.cos"
    "mos.base.tendermint.v1beta1.GetBlockByHe"
    "ightResponse\"7\202\323\344\223\0021\022//cosmos/base/tende"
    "rmint/v1beta1/blocks/{height}\022\322\001\n\025GetLat"
    "estValidatorSet\022<.cosmos.base.tendermint"
    ".v1beta1.GetLatestValidatorSetRequest\032=."
    "cosmos.base.tendermint.v1beta1.GetLatest"
    "ValidatorSetResponse\"<\202\323\344\223\0026\0224/cosmos/ba"
    "se/tendermint/v1beta1/validatorsets/late"
    "st\022\332\001\n\027GetValidatorSetByHeight\022>.cosmos."
    "base.tendermint.v1beta1.GetValidatorSetB"
    "yHeightRequest\032\?.cosmos.base.tendermint."
    "v1beta1.GetValidatorSetByHeightResponse\""
    ">\202\323\344\223\0028\0226/cosmos/base/tendermint/v1beta1"
    "/validatorsets/{height}\022\244\001\n\tABCIQuery\0220."
    "cosmos.base.tendermint.v1beta1.ABCIQuery"
    "Request\0321.cosmos.base.tendermint.v1beta1"
    ".ABCIQueryResponse\"2\202\323\344\223\002,\022*/cosmos/base"
    "/tendermint/v1beta1/abci_queryB\377\001\n\"com.c"
    "osmos.base.tendermint.v1beta1B\nQueryProt"
    "oP\001Z2github.com/cosmos/cosmos-sdk/client"
    "/grpc/tmservice\242\002\003CBT\252\002\036Cosmos.Base.Tend"
    "ermint.V1beta1\312\002\036Cosmos\\Base\\Tendermint\\"
    "V1beta1\342\002*Cosmos\\Base\\Tendermint\\V1beta1"
    "\\GPBMetadata\352\002!Cosmos::Base::Tendermint:"
    ":V1beta1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto_deps[10] =
    {
        &::descriptor_table_amino_2famino_2eproto,
        &::descriptor_table_cosmos_2fbase_2fquery_2fv1beta1_2fpagination_2eproto,
        &::descriptor_table_cosmos_2fbase_2ftendermint_2fv1beta1_2ftypes_2eproto,
        &::descriptor_table_cosmos_5fproto_2fcosmos_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_google_2fapi_2fannotations_2eproto,
        &::descriptor_table_google_2fprotobuf_2fany_2eproto,
        &::descriptor_table_tendermint_2fp2p_2ftypes_2eproto,
        &::descriptor_table_tendermint_2ftypes_2fblock_2eproto,
        &::descriptor_table_tendermint_2ftypes_2ftypes_2eproto,
};
static ::absl::once_flag descriptor_table_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto = {
    false,
    false,
    4496,
    descriptor_table_protodef_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto,
    "cosmos/base/tendermint/v1beta1/query.proto",
    &descriptor_table_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto_once,
    descriptor_table_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto_deps,
    10,
    19,
    schemas,
    file_default_instances,
    TableStruct_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto::offsets,
    file_level_metadata_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto,
    file_level_enum_descriptors_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto,
    file_level_service_descriptors_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto_getter() {
  return &descriptor_table_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto(&descriptor_table_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto);
namespace cosmos {
namespace base {
namespace tendermint {
namespace v1beta1 {
// ===================================================================

class GetValidatorSetByHeightRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetValidatorSetByHeightRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GetValidatorSetByHeightRequest, _impl_._has_bits_);
  static const ::cosmos::base::query::v1beta1::PageRequest& pagination(const GetValidatorSetByHeightRequest* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::query::v1beta1::PageRequest&
GetValidatorSetByHeightRequest::_Internal::pagination(const GetValidatorSetByHeightRequest* msg) {
  return *msg->_impl_.pagination_;
}
void GetValidatorSetByHeightRequest::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetValidatorSetByHeightRequest::GetValidatorSetByHeightRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightRequest)
}
GetValidatorSetByHeightRequest::GetValidatorSetByHeightRequest(const GetValidatorSetByHeightRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetValidatorSetByHeightRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.pagination_){nullptr}
    , decltype(_impl_.height_) {}
  };

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::cosmos::base::query::v1beta1::PageRequest(*from._impl_.pagination_);
  }
  _this->_impl_.height_ = from._impl_.height_;
  // @@protoc_insertion_point(copy_constructor:cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightRequest)
}

inline void GetValidatorSetByHeightRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.pagination_){nullptr}
    , decltype(_impl_.height_) { ::int64_t{0} }

  };
}

GetValidatorSetByHeightRequest::~GetValidatorSetByHeightRequest() {
  // @@protoc_insertion_point(destructor:cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetValidatorSetByHeightRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.pagination_;
}

void GetValidatorSetByHeightRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetValidatorSetByHeightRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_.height_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetValidatorSetByHeightRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 height = 1 [json_name = "height"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagination(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* GetValidatorSetByHeightRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 height = 1 [json_name = "height"];
  if (this->_internal_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        1, this->_internal_height(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightRequest)
  return target;
}

::size_t GetValidatorSetByHeightRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  // int64 height = 1 [json_name = "height"];
  if (this->_internal_height() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_height());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetValidatorSetByHeightRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetValidatorSetByHeightRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetValidatorSetByHeightRequest::GetClassData() const { return &_class_data_; }


void GetValidatorSetByHeightRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetValidatorSetByHeightRequest*>(&to_msg);
  auto& from = static_cast<const GetValidatorSetByHeightRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::cosmos::base::query::v1beta1::PageRequest::MergeFrom(
        from._internal_pagination());
  }
  if (from._internal_height() != 0) {
    _this->_internal_set_height(from._internal_height());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetValidatorSetByHeightRequest::CopyFrom(const GetValidatorSetByHeightRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetValidatorSetByHeightRequest::IsInitialized() const {
  return true;
}

void GetValidatorSetByHeightRequest::InternalSwap(GetValidatorSetByHeightRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetValidatorSetByHeightRequest, _impl_.height_)
      + sizeof(GetValidatorSetByHeightRequest::_impl_.height_)
      - PROTOBUF_FIELD_OFFSET(GetValidatorSetByHeightRequest, _impl_.pagination_)>(
          reinterpret_cast<char*>(&_impl_.pagination_),
          reinterpret_cast<char*>(&other->_impl_.pagination_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetValidatorSetByHeightRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto[0]);
}
// ===================================================================

class GetValidatorSetByHeightResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GetValidatorSetByHeightResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GetValidatorSetByHeightResponse, _impl_._has_bits_);
  static const ::cosmos::base::query::v1beta1::PageResponse& pagination(const GetValidatorSetByHeightResponse* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::query::v1beta1::PageResponse&
GetValidatorSetByHeightResponse::_Internal::pagination(const GetValidatorSetByHeightResponse* msg) {
  return *msg->_impl_.pagination_;
}
void GetValidatorSetByHeightResponse::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetValidatorSetByHeightResponse::GetValidatorSetByHeightResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse)
}
GetValidatorSetByHeightResponse::GetValidatorSetByHeightResponse(const GetValidatorSetByHeightResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetValidatorSetByHeightResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.validators_){from._impl_.validators_}
    , decltype(_impl_.pagination_){nullptr}
    , decltype(_impl_.block_height_) {}
  };

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::cosmos::base::query::v1beta1::PageResponse(*from._impl_.pagination_);
  }
  _this->_impl_.block_height_ = from._impl_.block_height_;
  // @@protoc_insertion_point(copy_constructor:cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse)
}

inline void GetValidatorSetByHeightResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.validators_){arena}
    , decltype(_impl_.pagination_){nullptr}
    , decltype(_impl_.block_height_) { ::int64_t{0} }

  };
}

GetValidatorSetByHeightResponse::~GetValidatorSetByHeightResponse() {
  // @@protoc_insertion_point(destructor:cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetValidatorSetByHeightResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_validators()->~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.pagination_;
}

void GetValidatorSetByHeightResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetValidatorSetByHeightResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_validators()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_.block_height_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetValidatorSetByHeightResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 block_height = 1 [json_name = "blockHeight"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.block_height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated .cosmos.base.tendermint.v1beta1.Validator validators = 2 [json_name = "validators"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_validators(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.query.v1beta1.PageResponse pagination = 3 [json_name = "pagination"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagination(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* GetValidatorSetByHeightResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 block_height = 1 [json_name = "blockHeight"];
  if (this->_internal_block_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        1, this->_internal_block_height(), target);
  }

  // repeated .cosmos.base.tendermint.v1beta1.Validator validators = 2 [json_name = "validators"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_validators_size()); i < n; i++) {
    const auto& repfield = this->_internal_validators(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.query.v1beta1.PageResponse pagination = 3 [json_name = "pagination"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse)
  return target;
}

::size_t GetValidatorSetByHeightResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cosmos.base.tendermint.v1beta1.Validator validators = 2 [json_name = "validators"];
  total_size += 1UL * this->_internal_validators_size();
  for (const auto& msg : this->_internal_validators()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .cosmos.base.query.v1beta1.PageResponse pagination = 3 [json_name = "pagination"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  // int64 block_height = 1 [json_name = "blockHeight"];
  if (this->_internal_block_height() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_block_height());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetValidatorSetByHeightResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetValidatorSetByHeightResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetValidatorSetByHeightResponse::GetClassData() const { return &_class_data_; }


void GetValidatorSetByHeightResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetValidatorSetByHeightResponse*>(&to_msg);
  auto& from = static_cast<const GetValidatorSetByHeightResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_validators()->MergeFrom(from._internal_validators());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::cosmos::base::query::v1beta1::PageResponse::MergeFrom(
        from._internal_pagination());
  }
  if (from._internal_block_height() != 0) {
    _this->_internal_set_block_height(from._internal_block_height());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetValidatorSetByHeightResponse::CopyFrom(const GetValidatorSetByHeightResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetValidatorSetByHeightResponse::IsInitialized() const {
  return true;
}

void GetValidatorSetByHeightResponse::InternalSwap(GetValidatorSetByHeightResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _internal_mutable_validators()->InternalSwap(other->_internal_mutable_validators());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetValidatorSetByHeightResponse, _impl_.block_height_)
      + sizeof(GetValidatorSetByHeightResponse::_impl_.block_height_)
      - PROTOBUF_FIELD_OFFSET(GetValidatorSetByHeightResponse, _impl_.pagination_)>(
          reinterpret_cast<char*>(&_impl_.pagination_),
          reinterpret_cast<char*>(&other->_impl_.pagination_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetValidatorSetByHeightResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto[1]);
}
// ===================================================================

class GetLatestValidatorSetRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetLatestValidatorSetRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GetLatestValidatorSetRequest, _impl_._has_bits_);
  static const ::cosmos::base::query::v1beta1::PageRequest& pagination(const GetLatestValidatorSetRequest* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::query::v1beta1::PageRequest&
GetLatestValidatorSetRequest::_Internal::pagination(const GetLatestValidatorSetRequest* msg) {
  return *msg->_impl_.pagination_;
}
void GetLatestValidatorSetRequest::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetLatestValidatorSetRequest::GetLatestValidatorSetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.base.tendermint.v1beta1.GetLatestValidatorSetRequest)
}
GetLatestValidatorSetRequest::GetLatestValidatorSetRequest(const GetLatestValidatorSetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetLatestValidatorSetRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.pagination_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::cosmos::base::query::v1beta1::PageRequest(*from._impl_.pagination_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.base.tendermint.v1beta1.GetLatestValidatorSetRequest)
}

inline void GetLatestValidatorSetRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.pagination_){nullptr}
  };
}

GetLatestValidatorSetRequest::~GetLatestValidatorSetRequest() {
  // @@protoc_insertion_point(destructor:cosmos.base.tendermint.v1beta1.GetLatestValidatorSetRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetLatestValidatorSetRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.pagination_;
}

void GetLatestValidatorSetRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetLatestValidatorSetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.base.tendermint.v1beta1.GetLatestValidatorSetRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLatestValidatorSetRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cosmos.base.query.v1beta1.PageRequest pagination = 1 [json_name = "pagination"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagination(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* GetLatestValidatorSetRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.base.tendermint.v1beta1.GetLatestValidatorSetRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.query.v1beta1.PageRequest pagination = 1 [json_name = "pagination"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.base.tendermint.v1beta1.GetLatestValidatorSetRequest)
  return target;
}

::size_t GetLatestValidatorSetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.base.tendermint.v1beta1.GetLatestValidatorSetRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cosmos.base.query.v1beta1.PageRequest pagination = 1 [json_name = "pagination"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetLatestValidatorSetRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetLatestValidatorSetRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetLatestValidatorSetRequest::GetClassData() const { return &_class_data_; }


void GetLatestValidatorSetRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetLatestValidatorSetRequest*>(&to_msg);
  auto& from = static_cast<const GetLatestValidatorSetRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.base.tendermint.v1beta1.GetLatestValidatorSetRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::cosmos::base::query::v1beta1::PageRequest::MergeFrom(
        from._internal_pagination());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetLatestValidatorSetRequest::CopyFrom(const GetLatestValidatorSetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.base.tendermint.v1beta1.GetLatestValidatorSetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLatestValidatorSetRequest::IsInitialized() const {
  return true;
}

void GetLatestValidatorSetRequest::InternalSwap(GetLatestValidatorSetRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLatestValidatorSetRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto[2]);
}
// ===================================================================

class GetLatestValidatorSetResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GetLatestValidatorSetResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GetLatestValidatorSetResponse, _impl_._has_bits_);
  static const ::cosmos::base::query::v1beta1::PageResponse& pagination(const GetLatestValidatorSetResponse* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::query::v1beta1::PageResponse&
GetLatestValidatorSetResponse::_Internal::pagination(const GetLatestValidatorSetResponse* msg) {
  return *msg->_impl_.pagination_;
}
void GetLatestValidatorSetResponse::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetLatestValidatorSetResponse::GetLatestValidatorSetResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse)
}
GetLatestValidatorSetResponse::GetLatestValidatorSetResponse(const GetLatestValidatorSetResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetLatestValidatorSetResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.validators_){from._impl_.validators_}
    , decltype(_impl_.pagination_){nullptr}
    , decltype(_impl_.block_height_) {}
  };

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::cosmos::base::query::v1beta1::PageResponse(*from._impl_.pagination_);
  }
  _this->_impl_.block_height_ = from._impl_.block_height_;
  // @@protoc_insertion_point(copy_constructor:cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse)
}

inline void GetLatestValidatorSetResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.validators_){arena}
    , decltype(_impl_.pagination_){nullptr}
    , decltype(_impl_.block_height_) { ::int64_t{0} }

  };
}

GetLatestValidatorSetResponse::~GetLatestValidatorSetResponse() {
  // @@protoc_insertion_point(destructor:cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetLatestValidatorSetResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_validators()->~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.pagination_;
}

void GetLatestValidatorSetResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetLatestValidatorSetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_validators()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_.block_height_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLatestValidatorSetResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 block_height = 1 [json_name = "blockHeight"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.block_height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated .cosmos.base.tendermint.v1beta1.Validator validators = 2 [json_name = "validators"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_validators(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.query.v1beta1.PageResponse pagination = 3 [json_name = "pagination"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagination(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* GetLatestValidatorSetResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 block_height = 1 [json_name = "blockHeight"];
  if (this->_internal_block_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        1, this->_internal_block_height(), target);
  }

  // repeated .cosmos.base.tendermint.v1beta1.Validator validators = 2 [json_name = "validators"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_validators_size()); i < n; i++) {
    const auto& repfield = this->_internal_validators(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.query.v1beta1.PageResponse pagination = 3 [json_name = "pagination"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse)
  return target;
}

::size_t GetLatestValidatorSetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cosmos.base.tendermint.v1beta1.Validator validators = 2 [json_name = "validators"];
  total_size += 1UL * this->_internal_validators_size();
  for (const auto& msg : this->_internal_validators()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .cosmos.base.query.v1beta1.PageResponse pagination = 3 [json_name = "pagination"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  // int64 block_height = 1 [json_name = "blockHeight"];
  if (this->_internal_block_height() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_block_height());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetLatestValidatorSetResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetLatestValidatorSetResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetLatestValidatorSetResponse::GetClassData() const { return &_class_data_; }


void GetLatestValidatorSetResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetLatestValidatorSetResponse*>(&to_msg);
  auto& from = static_cast<const GetLatestValidatorSetResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_validators()->MergeFrom(from._internal_validators());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::cosmos::base::query::v1beta1::PageResponse::MergeFrom(
        from._internal_pagination());
  }
  if (from._internal_block_height() != 0) {
    _this->_internal_set_block_height(from._internal_block_height());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetLatestValidatorSetResponse::CopyFrom(const GetLatestValidatorSetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLatestValidatorSetResponse::IsInitialized() const {
  return true;
}

void GetLatestValidatorSetResponse::InternalSwap(GetLatestValidatorSetResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _internal_mutable_validators()->InternalSwap(other->_internal_mutable_validators());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetLatestValidatorSetResponse, _impl_.block_height_)
      + sizeof(GetLatestValidatorSetResponse::_impl_.block_height_)
      - PROTOBUF_FIELD_OFFSET(GetLatestValidatorSetResponse, _impl_.pagination_)>(
          reinterpret_cast<char*>(&_impl_.pagination_),
          reinterpret_cast<char*>(&other->_impl_.pagination_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLatestValidatorSetResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto[3]);
}
// ===================================================================

class Validator::_Internal {
 public:
  using HasBits = decltype(std::declval<Validator>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Validator, _impl_._has_bits_);
  static const ::PROTOBUF_NAMESPACE_ID::Any& pub_key(const Validator* msg);
  static void set_has_pub_key(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::PROTOBUF_NAMESPACE_ID::Any&
Validator::_Internal::pub_key(const Validator* msg) {
  return *msg->_impl_.pub_key_;
}
void Validator::clear_pub_key() {
  if (_impl_.pub_key_ != nullptr) _impl_.pub_key_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Validator::Validator(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.base.tendermint.v1beta1.Validator)
}
Validator::Validator(const Validator& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Validator* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.address_) {}

    , decltype(_impl_.pub_key_){nullptr}
    , decltype(_impl_.voting_power_) {}

    , decltype(_impl_.proposer_priority_) {}
  };

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_address().empty()) {
    _this->_impl_.address_.Set(from._internal_address(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pub_key_ = new ::PROTOBUF_NAMESPACE_ID::Any(*from._impl_.pub_key_);
  }
  ::memcpy(&_impl_.voting_power_, &from._impl_.voting_power_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.proposer_priority_) -
    reinterpret_cast<char*>(&_impl_.voting_power_)) + sizeof(_impl_.proposer_priority_));
  // @@protoc_insertion_point(copy_constructor:cosmos.base.tendermint.v1beta1.Validator)
}

inline void Validator::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.address_) {}

    , decltype(_impl_.pub_key_){nullptr}
    , decltype(_impl_.voting_power_) { ::int64_t{0} }

    , decltype(_impl_.proposer_priority_) { ::int64_t{0} }

  };
  _impl_.address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Validator::~Validator() {
  // @@protoc_insertion_point(destructor:cosmos.base.tendermint.v1beta1.Validator)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Validator::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.address_.Destroy();
  if (this != internal_default_instance()) delete _impl_.pub_key_;
}

void Validator::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Validator::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.base.tendermint.v1beta1.Validator)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.address_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pub_key_ != nullptr);
    _impl_.pub_key_->Clear();
  }
  ::memset(&_impl_.voting_power_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.proposer_priority_) -
      reinterpret_cast<char*>(&_impl_.voting_power_)) + sizeof(_impl_.proposer_priority_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Validator::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.base.tendermint.v1beta1.Validator.address"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .google.protobuf.Any pub_key = 2 [json_name = "pubKey"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_pub_key(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // int64 voting_power = 3 [json_name = "votingPower"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 24)) {
          _impl_.voting_power_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // int64 proposer_priority = 4 [json_name = "proposerPriority"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 32)) {
          _impl_.proposer_priority_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* Validator::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.base.tendermint.v1beta1.Validator)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_address().empty()) {
    const std::string& _s = this->_internal_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.base.tendermint.v1beta1.Validator.address");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Any pub_key = 2 [json_name = "pubKey"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::pub_key(this),
        _Internal::pub_key(this).GetCachedSize(), target, stream);
  }

  // int64 voting_power = 3 [json_name = "votingPower"];
  if (this->_internal_voting_power() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        3, this->_internal_voting_power(), target);
  }

  // int64 proposer_priority = 4 [json_name = "proposerPriority"];
  if (this->_internal_proposer_priority() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        4, this->_internal_proposer_priority(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.base.tendermint.v1beta1.Validator)
  return target;
}

::size_t Validator::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.base.tendermint.v1beta1.Validator)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_address());
  }

  // .google.protobuf.Any pub_key = 2 [json_name = "pubKey"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pub_key_);
  }

  // int64 voting_power = 3 [json_name = "votingPower"];
  if (this->_internal_voting_power() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_voting_power());
  }

  // int64 proposer_priority = 4 [json_name = "proposerPriority"];
  if (this->_internal_proposer_priority() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_proposer_priority());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Validator::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Validator::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Validator::GetClassData() const { return &_class_data_; }


void Validator::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Validator*>(&to_msg);
  auto& from = static_cast<const Validator&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.base.tendermint.v1beta1.Validator)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_address().empty()) {
    _this->_internal_set_address(from._internal_address());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pub_key()->::PROTOBUF_NAMESPACE_ID::Any::MergeFrom(
        from._internal_pub_key());
  }
  if (from._internal_voting_power() != 0) {
    _this->_internal_set_voting_power(from._internal_voting_power());
  }
  if (from._internal_proposer_priority() != 0) {
    _this->_internal_set_proposer_priority(from._internal_proposer_priority());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Validator::CopyFrom(const Validator& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.base.tendermint.v1beta1.Validator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Validator::IsInitialized() const {
  return true;
}

void Validator::InternalSwap(Validator* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.address_, lhs_arena,
                                       &other->_impl_.address_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Validator, _impl_.proposer_priority_)
      + sizeof(Validator::_impl_.proposer_priority_)
      - PROTOBUF_FIELD_OFFSET(Validator, _impl_.pub_key_)>(
          reinterpret_cast<char*>(&_impl_.pub_key_),
          reinterpret_cast<char*>(&other->_impl_.pub_key_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Validator::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto[4]);
}
// ===================================================================

class GetBlockByHeightRequest::_Internal {
 public:
};

GetBlockByHeightRequest::GetBlockByHeightRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.base.tendermint.v1beta1.GetBlockByHeightRequest)
}
GetBlockByHeightRequest::GetBlockByHeightRequest(const GetBlockByHeightRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.base.tendermint.v1beta1.GetBlockByHeightRequest)
}

inline void GetBlockByHeightRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.height_) { ::int64_t{0} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetBlockByHeightRequest::~GetBlockByHeightRequest() {
  // @@protoc_insertion_point(destructor:cosmos.base.tendermint.v1beta1.GetBlockByHeightRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetBlockByHeightRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetBlockByHeightRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetBlockByHeightRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.base.tendermint.v1beta1.GetBlockByHeightRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.height_ = ::int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBlockByHeightRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 height = 1 [json_name = "height"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* GetBlockByHeightRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.base.tendermint.v1beta1.GetBlockByHeightRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 height = 1 [json_name = "height"];
  if (this->_internal_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        1, this->_internal_height(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.base.tendermint.v1beta1.GetBlockByHeightRequest)
  return target;
}

::size_t GetBlockByHeightRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.base.tendermint.v1beta1.GetBlockByHeightRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 height = 1 [json_name = "height"];
  if (this->_internal_height() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_height());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetBlockByHeightRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetBlockByHeightRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetBlockByHeightRequest::GetClassData() const { return &_class_data_; }


void GetBlockByHeightRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetBlockByHeightRequest*>(&to_msg);
  auto& from = static_cast<const GetBlockByHeightRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.base.tendermint.v1beta1.GetBlockByHeightRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_height() != 0) {
    _this->_internal_set_height(from._internal_height());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetBlockByHeightRequest::CopyFrom(const GetBlockByHeightRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.base.tendermint.v1beta1.GetBlockByHeightRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBlockByHeightRequest::IsInitialized() const {
  return true;
}

void GetBlockByHeightRequest::InternalSwap(GetBlockByHeightRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);

  swap(_impl_.height_, other->_impl_.height_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBlockByHeightRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto[5]);
}
// ===================================================================

class GetBlockByHeightResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GetBlockByHeightResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GetBlockByHeightResponse, _impl_._has_bits_);
  static const ::tendermint::types::BlockID& block_id(const GetBlockByHeightResponse* msg);
  static void set_has_block_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::tendermint::types::Block& block(const GetBlockByHeightResponse* msg);
  static void set_has_block(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::cosmos::base::tendermint::v1beta1::Block& sdk_block(const GetBlockByHeightResponse* msg);
  static void set_has_sdk_block(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::tendermint::types::BlockID&
GetBlockByHeightResponse::_Internal::block_id(const GetBlockByHeightResponse* msg) {
  return *msg->_impl_.block_id_;
}
const ::tendermint::types::Block&
GetBlockByHeightResponse::_Internal::block(const GetBlockByHeightResponse* msg) {
  return *msg->_impl_.block_;
}
const ::cosmos::base::tendermint::v1beta1::Block&
GetBlockByHeightResponse::_Internal::sdk_block(const GetBlockByHeightResponse* msg) {
  return *msg->_impl_.sdk_block_;
}
void GetBlockByHeightResponse::clear_block_id() {
  if (_impl_.block_id_ != nullptr) _impl_.block_id_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void GetBlockByHeightResponse::clear_block() {
  if (_impl_.block_ != nullptr) _impl_.block_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void GetBlockByHeightResponse::clear_sdk_block() {
  if (_impl_.sdk_block_ != nullptr) _impl_.sdk_block_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
GetBlockByHeightResponse::GetBlockByHeightResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse)
}
GetBlockByHeightResponse::GetBlockByHeightResponse(const GetBlockByHeightResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetBlockByHeightResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.block_id_){nullptr}
    , decltype(_impl_.block_){nullptr}
    , decltype(_impl_.sdk_block_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.block_id_ = new ::tendermint::types::BlockID(*from._impl_.block_id_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.block_ = new ::tendermint::types::Block(*from._impl_.block_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.sdk_block_ = new ::cosmos::base::tendermint::v1beta1::Block(*from._impl_.sdk_block_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse)
}

inline void GetBlockByHeightResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.block_id_){nullptr}
    , decltype(_impl_.block_){nullptr}
    , decltype(_impl_.sdk_block_){nullptr}
  };
}

GetBlockByHeightResponse::~GetBlockByHeightResponse() {
  // @@protoc_insertion_point(destructor:cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetBlockByHeightResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.block_id_;
  if (this != internal_default_instance()) delete _impl_.block_;
  if (this != internal_default_instance()) delete _impl_.sdk_block_;
}

void GetBlockByHeightResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetBlockByHeightResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.block_id_ != nullptr);
      _impl_.block_id_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.block_ != nullptr);
      _impl_.block_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.sdk_block_ != nullptr);
      _impl_.sdk_block_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBlockByHeightResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .tendermint.types.BlockID block_id = 1 [json_name = "blockId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_block_id(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .tendermint.types.Block block = 2 [json_name = "block"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_block(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.tendermint.v1beta1.Block sdk_block = 3 [json_name = "sdkBlock"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_sdk_block(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* GetBlockByHeightResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .tendermint.types.BlockID block_id = 1 [json_name = "blockId"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::block_id(this),
        _Internal::block_id(this).GetCachedSize(), target, stream);
  }

  // .tendermint.types.Block block = 2 [json_name = "block"];
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::block(this),
        _Internal::block(this).GetCachedSize(), target, stream);
  }

  // .cosmos.base.tendermint.v1beta1.Block sdk_block = 3 [json_name = "sdkBlock"];
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::sdk_block(this),
        _Internal::sdk_block(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse)
  return target;
}

::size_t GetBlockByHeightResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // .tendermint.types.BlockID block_id = 1 [json_name = "blockId"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.block_id_);
    }

    // .tendermint.types.Block block = 2 [json_name = "block"];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.block_);
    }

    // .cosmos.base.tendermint.v1beta1.Block sdk_block = 3 [json_name = "sdkBlock"];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.sdk_block_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetBlockByHeightResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetBlockByHeightResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetBlockByHeightResponse::GetClassData() const { return &_class_data_; }


void GetBlockByHeightResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetBlockByHeightResponse*>(&to_msg);
  auto& from = static_cast<const GetBlockByHeightResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_block_id()->::tendermint::types::BlockID::MergeFrom(
          from._internal_block_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_block()->::tendermint::types::Block::MergeFrom(
          from._internal_block());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_sdk_block()->::cosmos::base::tendermint::v1beta1::Block::MergeFrom(
          from._internal_sdk_block());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetBlockByHeightResponse::CopyFrom(const GetBlockByHeightResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBlockByHeightResponse::IsInitialized() const {
  return true;
}

void GetBlockByHeightResponse::InternalSwap(GetBlockByHeightResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetBlockByHeightResponse, _impl_.sdk_block_)
      + sizeof(GetBlockByHeightResponse::_impl_.sdk_block_)
      - PROTOBUF_FIELD_OFFSET(GetBlockByHeightResponse, _impl_.block_id_)>(
          reinterpret_cast<char*>(&_impl_.block_id_),
          reinterpret_cast<char*>(&other->_impl_.block_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBlockByHeightResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto[6]);
}
// ===================================================================

class GetLatestBlockRequest::_Internal {
 public:
};

GetLatestBlockRequest::GetLatestBlockRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cosmos.base.tendermint.v1beta1.GetLatestBlockRequest)
}
GetLatestBlockRequest::GetLatestBlockRequest(const GetLatestBlockRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetLatestBlockRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.base.tendermint.v1beta1.GetLatestBlockRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetLatestBlockRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetLatestBlockRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetLatestBlockRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto[7]);
}
// ===================================================================

class GetLatestBlockResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GetLatestBlockResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GetLatestBlockResponse, _impl_._has_bits_);
  static const ::tendermint::types::BlockID& block_id(const GetLatestBlockResponse* msg);
  static void set_has_block_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::tendermint::types::Block& block(const GetLatestBlockResponse* msg);
  static void set_has_block(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::cosmos::base::tendermint::v1beta1::Block& sdk_block(const GetLatestBlockResponse* msg);
  static void set_has_sdk_block(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::tendermint::types::BlockID&
GetLatestBlockResponse::_Internal::block_id(const GetLatestBlockResponse* msg) {
  return *msg->_impl_.block_id_;
}
const ::tendermint::types::Block&
GetLatestBlockResponse::_Internal::block(const GetLatestBlockResponse* msg) {
  return *msg->_impl_.block_;
}
const ::cosmos::base::tendermint::v1beta1::Block&
GetLatestBlockResponse::_Internal::sdk_block(const GetLatestBlockResponse* msg) {
  return *msg->_impl_.sdk_block_;
}
void GetLatestBlockResponse::clear_block_id() {
  if (_impl_.block_id_ != nullptr) _impl_.block_id_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void GetLatestBlockResponse::clear_block() {
  if (_impl_.block_ != nullptr) _impl_.block_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void GetLatestBlockResponse::clear_sdk_block() {
  if (_impl_.sdk_block_ != nullptr) _impl_.sdk_block_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
GetLatestBlockResponse::GetLatestBlockResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.base.tendermint.v1beta1.GetLatestBlockResponse)
}
GetLatestBlockResponse::GetLatestBlockResponse(const GetLatestBlockResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetLatestBlockResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.block_id_){nullptr}
    , decltype(_impl_.block_){nullptr}
    , decltype(_impl_.sdk_block_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.block_id_ = new ::tendermint::types::BlockID(*from._impl_.block_id_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.block_ = new ::tendermint::types::Block(*from._impl_.block_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.sdk_block_ = new ::cosmos::base::tendermint::v1beta1::Block(*from._impl_.sdk_block_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.base.tendermint.v1beta1.GetLatestBlockResponse)
}

inline void GetLatestBlockResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.block_id_){nullptr}
    , decltype(_impl_.block_){nullptr}
    , decltype(_impl_.sdk_block_){nullptr}
  };
}

GetLatestBlockResponse::~GetLatestBlockResponse() {
  // @@protoc_insertion_point(destructor:cosmos.base.tendermint.v1beta1.GetLatestBlockResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetLatestBlockResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.block_id_;
  if (this != internal_default_instance()) delete _impl_.block_;
  if (this != internal_default_instance()) delete _impl_.sdk_block_;
}

void GetLatestBlockResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetLatestBlockResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.base.tendermint.v1beta1.GetLatestBlockResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.block_id_ != nullptr);
      _impl_.block_id_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.block_ != nullptr);
      _impl_.block_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.sdk_block_ != nullptr);
      _impl_.sdk_block_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLatestBlockResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .tendermint.types.BlockID block_id = 1 [json_name = "blockId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_block_id(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .tendermint.types.Block block = 2 [json_name = "block"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_block(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.tendermint.v1beta1.Block sdk_block = 3 [json_name = "sdkBlock"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_sdk_block(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* GetLatestBlockResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.base.tendermint.v1beta1.GetLatestBlockResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .tendermint.types.BlockID block_id = 1 [json_name = "blockId"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::block_id(this),
        _Internal::block_id(this).GetCachedSize(), target, stream);
  }

  // .tendermint.types.Block block = 2 [json_name = "block"];
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::block(this),
        _Internal::block(this).GetCachedSize(), target, stream);
  }

  // .cosmos.base.tendermint.v1beta1.Block sdk_block = 3 [json_name = "sdkBlock"];
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::sdk_block(this),
        _Internal::sdk_block(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.base.tendermint.v1beta1.GetLatestBlockResponse)
  return target;
}

::size_t GetLatestBlockResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.base.tendermint.v1beta1.GetLatestBlockResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // .tendermint.types.BlockID block_id = 1 [json_name = "blockId"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.block_id_);
    }

    // .tendermint.types.Block block = 2 [json_name = "block"];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.block_);
    }

    // .cosmos.base.tendermint.v1beta1.Block sdk_block = 3 [json_name = "sdkBlock"];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.sdk_block_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetLatestBlockResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetLatestBlockResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetLatestBlockResponse::GetClassData() const { return &_class_data_; }


void GetLatestBlockResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetLatestBlockResponse*>(&to_msg);
  auto& from = static_cast<const GetLatestBlockResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.base.tendermint.v1beta1.GetLatestBlockResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_block_id()->::tendermint::types::BlockID::MergeFrom(
          from._internal_block_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_block()->::tendermint::types::Block::MergeFrom(
          from._internal_block());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_sdk_block()->::cosmos::base::tendermint::v1beta1::Block::MergeFrom(
          from._internal_sdk_block());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetLatestBlockResponse::CopyFrom(const GetLatestBlockResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.base.tendermint.v1beta1.GetLatestBlockResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLatestBlockResponse::IsInitialized() const {
  return true;
}

void GetLatestBlockResponse::InternalSwap(GetLatestBlockResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetLatestBlockResponse, _impl_.sdk_block_)
      + sizeof(GetLatestBlockResponse::_impl_.sdk_block_)
      - PROTOBUF_FIELD_OFFSET(GetLatestBlockResponse, _impl_.block_id_)>(
          reinterpret_cast<char*>(&_impl_.block_id_),
          reinterpret_cast<char*>(&other->_impl_.block_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLatestBlockResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto[8]);
}
// ===================================================================

class GetSyncingRequest::_Internal {
 public:
};

GetSyncingRequest::GetSyncingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cosmos.base.tendermint.v1beta1.GetSyncingRequest)
}
GetSyncingRequest::GetSyncingRequest(const GetSyncingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetSyncingRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.base.tendermint.v1beta1.GetSyncingRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetSyncingRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetSyncingRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetSyncingRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto[9]);
}
// ===================================================================

class GetSyncingResponse::_Internal {
 public:
};

GetSyncingResponse::GetSyncingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.base.tendermint.v1beta1.GetSyncingResponse)
}
GetSyncingResponse::GetSyncingResponse(const GetSyncingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.base.tendermint.v1beta1.GetSyncingResponse)
}

inline void GetSyncingResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.syncing_) { false }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetSyncingResponse::~GetSyncingResponse() {
  // @@protoc_insertion_point(destructor:cosmos.base.tendermint.v1beta1.GetSyncingResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetSyncingResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetSyncingResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetSyncingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.base.tendermint.v1beta1.GetSyncingResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.syncing_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSyncingResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool syncing = 1 [json_name = "syncing"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.syncing_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* GetSyncingResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.base.tendermint.v1beta1.GetSyncingResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool syncing = 1 [json_name = "syncing"];
  if (this->_internal_syncing() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_syncing(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.base.tendermint.v1beta1.GetSyncingResponse)
  return target;
}

::size_t GetSyncingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.base.tendermint.v1beta1.GetSyncingResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool syncing = 1 [json_name = "syncing"];
  if (this->_internal_syncing() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetSyncingResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetSyncingResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetSyncingResponse::GetClassData() const { return &_class_data_; }


void GetSyncingResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetSyncingResponse*>(&to_msg);
  auto& from = static_cast<const GetSyncingResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.base.tendermint.v1beta1.GetSyncingResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_syncing() != 0) {
    _this->_internal_set_syncing(from._internal_syncing());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetSyncingResponse::CopyFrom(const GetSyncingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.base.tendermint.v1beta1.GetSyncingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSyncingResponse::IsInitialized() const {
  return true;
}

void GetSyncingResponse::InternalSwap(GetSyncingResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);

  swap(_impl_.syncing_, other->_impl_.syncing_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSyncingResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto[10]);
}
// ===================================================================

class GetNodeInfoRequest::_Internal {
 public:
};

GetNodeInfoRequest::GetNodeInfoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cosmos.base.tendermint.v1beta1.GetNodeInfoRequest)
}
GetNodeInfoRequest::GetNodeInfoRequest(const GetNodeInfoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetNodeInfoRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.base.tendermint.v1beta1.GetNodeInfoRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetNodeInfoRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetNodeInfoRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetNodeInfoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto[11]);
}
// ===================================================================

class GetNodeInfoResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GetNodeInfoResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GetNodeInfoResponse, _impl_._has_bits_);
  static const ::tendermint::p2p::DefaultNodeInfo& default_node_info(const GetNodeInfoResponse* msg);
  static void set_has_default_node_info(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::cosmos::base::tendermint::v1beta1::VersionInfo& application_version(const GetNodeInfoResponse* msg);
  static void set_has_application_version(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::tendermint::p2p::DefaultNodeInfo&
GetNodeInfoResponse::_Internal::default_node_info(const GetNodeInfoResponse* msg) {
  return *msg->_impl_.default_node_info_;
}
const ::cosmos::base::tendermint::v1beta1::VersionInfo&
GetNodeInfoResponse::_Internal::application_version(const GetNodeInfoResponse* msg) {
  return *msg->_impl_.application_version_;
}
void GetNodeInfoResponse::clear_default_node_info() {
  if (_impl_.default_node_info_ != nullptr) _impl_.default_node_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetNodeInfoResponse::GetNodeInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.base.tendermint.v1beta1.GetNodeInfoResponse)
}
GetNodeInfoResponse::GetNodeInfoResponse(const GetNodeInfoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetNodeInfoResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.default_node_info_){nullptr}
    , decltype(_impl_.application_version_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.default_node_info_ = new ::tendermint::p2p::DefaultNodeInfo(*from._impl_.default_node_info_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.application_version_ = new ::cosmos::base::tendermint::v1beta1::VersionInfo(*from._impl_.application_version_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.base.tendermint.v1beta1.GetNodeInfoResponse)
}

inline void GetNodeInfoResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.default_node_info_){nullptr}
    , decltype(_impl_.application_version_){nullptr}
  };
}

GetNodeInfoResponse::~GetNodeInfoResponse() {
  // @@protoc_insertion_point(destructor:cosmos.base.tendermint.v1beta1.GetNodeInfoResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetNodeInfoResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.default_node_info_;
  if (this != internal_default_instance()) delete _impl_.application_version_;
}

void GetNodeInfoResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetNodeInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.base.tendermint.v1beta1.GetNodeInfoResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.default_node_info_ != nullptr);
      _impl_.default_node_info_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.application_version_ != nullptr);
      _impl_.application_version_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetNodeInfoResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .tendermint.p2p.DefaultNodeInfo default_node_info = 1 [json_name = "defaultNodeInfo"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_node_info(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.tendermint.v1beta1.VersionInfo application_version = 2 [json_name = "applicationVersion"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_application_version(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* GetNodeInfoResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.base.tendermint.v1beta1.GetNodeInfoResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .tendermint.p2p.DefaultNodeInfo default_node_info = 1 [json_name = "defaultNodeInfo"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::default_node_info(this),
        _Internal::default_node_info(this).GetCachedSize(), target, stream);
  }

  // .cosmos.base.tendermint.v1beta1.VersionInfo application_version = 2 [json_name = "applicationVersion"];
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::application_version(this),
        _Internal::application_version(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.base.tendermint.v1beta1.GetNodeInfoResponse)
  return target;
}

::size_t GetNodeInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.base.tendermint.v1beta1.GetNodeInfoResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .tendermint.p2p.DefaultNodeInfo default_node_info = 1 [json_name = "defaultNodeInfo"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_node_info_);
    }

    // .cosmos.base.tendermint.v1beta1.VersionInfo application_version = 2 [json_name = "applicationVersion"];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.application_version_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetNodeInfoResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetNodeInfoResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetNodeInfoResponse::GetClassData() const { return &_class_data_; }


void GetNodeInfoResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetNodeInfoResponse*>(&to_msg);
  auto& from = static_cast<const GetNodeInfoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.base.tendermint.v1beta1.GetNodeInfoResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_default_node_info()->::tendermint::p2p::DefaultNodeInfo::MergeFrom(
          from._internal_default_node_info());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_application_version()->::cosmos::base::tendermint::v1beta1::VersionInfo::MergeFrom(
          from._internal_application_version());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetNodeInfoResponse::CopyFrom(const GetNodeInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.base.tendermint.v1beta1.GetNodeInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNodeInfoResponse::IsInitialized() const {
  return true;
}

void GetNodeInfoResponse::InternalSwap(GetNodeInfoResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetNodeInfoResponse, _impl_.application_version_)
      + sizeof(GetNodeInfoResponse::_impl_.application_version_)
      - PROTOBUF_FIELD_OFFSET(GetNodeInfoResponse, _impl_.default_node_info_)>(
          reinterpret_cast<char*>(&_impl_.default_node_info_),
          reinterpret_cast<char*>(&other->_impl_.default_node_info_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetNodeInfoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto[12]);
}
// ===================================================================

class VersionInfo::_Internal {
 public:
};

VersionInfo::VersionInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.base.tendermint.v1beta1.VersionInfo)
}
VersionInfo::VersionInfo(const VersionInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  VersionInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.build_deps_){from._impl_.build_deps_}
    , decltype(_impl_.name_) {}

    , decltype(_impl_.app_name_) {}

    , decltype(_impl_.version_) {}

    , decltype(_impl_.git_commit_) {}

    , decltype(_impl_.build_tags_) {}

    , decltype(_impl_.go_version_) {}

    , decltype(_impl_.cosmos_sdk_version_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  _impl_.app_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.app_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_app_name().empty()) {
    _this->_impl_.app_name_.Set(from._internal_app_name(), _this->GetArenaForAllocation());
  }
  _impl_.version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.version_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_version().empty()) {
    _this->_impl_.version_.Set(from._internal_version(), _this->GetArenaForAllocation());
  }
  _impl_.git_commit_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.git_commit_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_git_commit().empty()) {
    _this->_impl_.git_commit_.Set(from._internal_git_commit(), _this->GetArenaForAllocation());
  }
  _impl_.build_tags_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.build_tags_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_build_tags().empty()) {
    _this->_impl_.build_tags_.Set(from._internal_build_tags(), _this->GetArenaForAllocation());
  }
  _impl_.go_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.go_version_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_go_version().empty()) {
    _this->_impl_.go_version_.Set(from._internal_go_version(), _this->GetArenaForAllocation());
  }
  _impl_.cosmos_sdk_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.cosmos_sdk_version_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_cosmos_sdk_version().empty()) {
    _this->_impl_.cosmos_sdk_version_.Set(from._internal_cosmos_sdk_version(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.base.tendermint.v1beta1.VersionInfo)
}

inline void VersionInfo::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.build_deps_){arena}
    , decltype(_impl_.name_) {}

    , decltype(_impl_.app_name_) {}

    , decltype(_impl_.version_) {}

    , decltype(_impl_.git_commit_) {}

    , decltype(_impl_.build_tags_) {}

    , decltype(_impl_.go_version_) {}

    , decltype(_impl_.cosmos_sdk_version_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.app_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.app_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.version_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.git_commit_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.git_commit_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.build_tags_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.build_tags_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.go_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.go_version_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.cosmos_sdk_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.cosmos_sdk_version_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

VersionInfo::~VersionInfo() {
  // @@protoc_insertion_point(destructor:cosmos.base.tendermint.v1beta1.VersionInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void VersionInfo::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_build_deps()->~RepeatedPtrField();
  _impl_.name_.Destroy();
  _impl_.app_name_.Destroy();
  _impl_.version_.Destroy();
  _impl_.git_commit_.Destroy();
  _impl_.build_tags_.Destroy();
  _impl_.go_version_.Destroy();
  _impl_.cosmos_sdk_version_.Destroy();
}

void VersionInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void VersionInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.base.tendermint.v1beta1.VersionInfo)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_build_deps()->Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.app_name_.ClearToEmpty();
  _impl_.version_.ClearToEmpty();
  _impl_.git_commit_.ClearToEmpty();
  _impl_.build_tags_.ClearToEmpty();
  _impl_.go_version_.ClearToEmpty();
  _impl_.cosmos_sdk_version_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VersionInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.base.tendermint.v1beta1.VersionInfo.name"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string app_name = 2 [json_name = "appName"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_app_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.base.tendermint.v1beta1.VersionInfo.app_name"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string version = 3 [json_name = "version"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.base.tendermint.v1beta1.VersionInfo.version"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string git_commit = 4 [json_name = "gitCommit"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_git_commit();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.base.tendermint.v1beta1.VersionInfo.git_commit"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string build_tags = 5 [json_name = "buildTags"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_build_tags();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.base.tendermint.v1beta1.VersionInfo.build_tags"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string go_version = 6 [json_name = "goVersion"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_go_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.base.tendermint.v1beta1.VersionInfo.go_version"));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated .cosmos.base.tendermint.v1beta1.Module build_deps = 7 [json_name = "buildDeps"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_build_deps(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // string cosmos_sdk_version = 8 [json_name = "cosmosSdkVersion"];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_cosmos_sdk_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.base.tendermint.v1beta1.VersionInfo.cosmos_sdk_version"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* VersionInfo::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.base.tendermint.v1beta1.VersionInfo)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.base.tendermint.v1beta1.VersionInfo.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string app_name = 2 [json_name = "appName"];
  if (!this->_internal_app_name().empty()) {
    const std::string& _s = this->_internal_app_name();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.base.tendermint.v1beta1.VersionInfo.app_name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string version = 3 [json_name = "version"];
  if (!this->_internal_version().empty()) {
    const std::string& _s = this->_internal_version();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.base.tendermint.v1beta1.VersionInfo.version");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string git_commit = 4 [json_name = "gitCommit"];
  if (!this->_internal_git_commit().empty()) {
    const std::string& _s = this->_internal_git_commit();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.base.tendermint.v1beta1.VersionInfo.git_commit");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string build_tags = 5 [json_name = "buildTags"];
  if (!this->_internal_build_tags().empty()) {
    const std::string& _s = this->_internal_build_tags();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.base.tendermint.v1beta1.VersionInfo.build_tags");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // string go_version = 6 [json_name = "goVersion"];
  if (!this->_internal_go_version().empty()) {
    const std::string& _s = this->_internal_go_version();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.base.tendermint.v1beta1.VersionInfo.go_version");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // repeated .cosmos.base.tendermint.v1beta1.Module build_deps = 7 [json_name = "buildDeps"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_build_deps_size()); i < n; i++) {
    const auto& repfield = this->_internal_build_deps(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(7, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string cosmos_sdk_version = 8 [json_name = "cosmosSdkVersion"];
  if (!this->_internal_cosmos_sdk_version().empty()) {
    const std::string& _s = this->_internal_cosmos_sdk_version();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.base.tendermint.v1beta1.VersionInfo.cosmos_sdk_version");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.base.tendermint.v1beta1.VersionInfo)
  return target;
}

::size_t VersionInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.base.tendermint.v1beta1.VersionInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cosmos.base.tendermint.v1beta1.Module build_deps = 7 [json_name = "buildDeps"];
  total_size += 1UL * this->_internal_build_deps_size();
  for (const auto& msg : this->_internal_build_deps()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string app_name = 2 [json_name = "appName"];
  if (!this->_internal_app_name().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_app_name());
  }

  // string version = 3 [json_name = "version"];
  if (!this->_internal_version().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_version());
  }

  // string git_commit = 4 [json_name = "gitCommit"];
  if (!this->_internal_git_commit().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_git_commit());
  }

  // string build_tags = 5 [json_name = "buildTags"];
  if (!this->_internal_build_tags().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_build_tags());
  }

  // string go_version = 6 [json_name = "goVersion"];
  if (!this->_internal_go_version().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_go_version());
  }

  // string cosmos_sdk_version = 8 [json_name = "cosmosSdkVersion"];
  if (!this->_internal_cosmos_sdk_version().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_cosmos_sdk_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData VersionInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    VersionInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*VersionInfo::GetClassData() const { return &_class_data_; }


void VersionInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<VersionInfo*>(&to_msg);
  auto& from = static_cast<const VersionInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.base.tendermint.v1beta1.VersionInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_build_deps()->MergeFrom(from._internal_build_deps());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_app_name().empty()) {
    _this->_internal_set_app_name(from._internal_app_name());
  }
  if (!from._internal_version().empty()) {
    _this->_internal_set_version(from._internal_version());
  }
  if (!from._internal_git_commit().empty()) {
    _this->_internal_set_git_commit(from._internal_git_commit());
  }
  if (!from._internal_build_tags().empty()) {
    _this->_internal_set_build_tags(from._internal_build_tags());
  }
  if (!from._internal_go_version().empty()) {
    _this->_internal_set_go_version(from._internal_go_version());
  }
  if (!from._internal_cosmos_sdk_version().empty()) {
    _this->_internal_set_cosmos_sdk_version(from._internal_cosmos_sdk_version());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void VersionInfo::CopyFrom(const VersionInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.base.tendermint.v1beta1.VersionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VersionInfo::IsInitialized() const {
  return true;
}

void VersionInfo::InternalSwap(VersionInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_build_deps()->InternalSwap(other->_internal_mutable_build_deps());
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.app_name_, lhs_arena,
                                       &other->_impl_.app_name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.version_, lhs_arena,
                                       &other->_impl_.version_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.git_commit_, lhs_arena,
                                       &other->_impl_.git_commit_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.build_tags_, lhs_arena,
                                       &other->_impl_.build_tags_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.go_version_, lhs_arena,
                                       &other->_impl_.go_version_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cosmos_sdk_version_, lhs_arena,
                                       &other->_impl_.cosmos_sdk_version_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata VersionInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto[13]);
}
// ===================================================================

class Module::_Internal {
 public:
};

Module::Module(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.base.tendermint.v1beta1.Module)
}
Module::Module(const Module& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Module* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.path_) {}

    , decltype(_impl_.version_) {}

    , decltype(_impl_.sum_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.path_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_path().empty()) {
    _this->_impl_.path_.Set(from._internal_path(), _this->GetArenaForAllocation());
  }
  _impl_.version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.version_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_version().empty()) {
    _this->_impl_.version_.Set(from._internal_version(), _this->GetArenaForAllocation());
  }
  _impl_.sum_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sum_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sum().empty()) {
    _this->_impl_.sum_.Set(from._internal_sum(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.base.tendermint.v1beta1.Module)
}

inline void Module::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.path_) {}

    , decltype(_impl_.version_) {}

    , decltype(_impl_.sum_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.path_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.version_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.sum_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sum_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Module::~Module() {
  // @@protoc_insertion_point(destructor:cosmos.base.tendermint.v1beta1.Module)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Module::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.path_.Destroy();
  _impl_.version_.Destroy();
  _impl_.sum_.Destroy();
}

void Module::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Module::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.base.tendermint.v1beta1.Module)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.path_.ClearToEmpty();
  _impl_.version_.ClearToEmpty();
  _impl_.sum_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Module::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string path = 1 [json_name = "path"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.base.tendermint.v1beta1.Module.path"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string version = 2 [json_name = "version"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.base.tendermint.v1beta1.Module.version"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string sum = 3 [json_name = "sum"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_sum();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.base.tendermint.v1beta1.Module.sum"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* Module::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.base.tendermint.v1beta1.Module)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1 [json_name = "path"];
  if (!this->_internal_path().empty()) {
    const std::string& _s = this->_internal_path();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.base.tendermint.v1beta1.Module.path");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string version = 2 [json_name = "version"];
  if (!this->_internal_version().empty()) {
    const std::string& _s = this->_internal_version();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.base.tendermint.v1beta1.Module.version");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string sum = 3 [json_name = "sum"];
  if (!this->_internal_sum().empty()) {
    const std::string& _s = this->_internal_sum();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.base.tendermint.v1beta1.Module.sum");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.base.tendermint.v1beta1.Module)
  return target;
}

::size_t Module::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.base.tendermint.v1beta1.Module)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1 [json_name = "path"];
  if (!this->_internal_path().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_path());
  }

  // string version = 2 [json_name = "version"];
  if (!this->_internal_version().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_version());
  }

  // string sum = 3 [json_name = "sum"];
  if (!this->_internal_sum().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_sum());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Module::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Module::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Module::GetClassData() const { return &_class_data_; }


void Module::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Module*>(&to_msg);
  auto& from = static_cast<const Module&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.base.tendermint.v1beta1.Module)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_path().empty()) {
    _this->_internal_set_path(from._internal_path());
  }
  if (!from._internal_version().empty()) {
    _this->_internal_set_version(from._internal_version());
  }
  if (!from._internal_sum().empty()) {
    _this->_internal_set_sum(from._internal_sum());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Module::CopyFrom(const Module& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.base.tendermint.v1beta1.Module)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Module::IsInitialized() const {
  return true;
}

void Module::InternalSwap(Module* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.path_, lhs_arena,
                                       &other->_impl_.path_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.version_, lhs_arena,
                                       &other->_impl_.version_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sum_, lhs_arena,
                                       &other->_impl_.sum_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata Module::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto[14]);
}
// ===================================================================

class ABCIQueryRequest::_Internal {
 public:
};

ABCIQueryRequest::ABCIQueryRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.base.tendermint.v1beta1.ABCIQueryRequest)
}
ABCIQueryRequest::ABCIQueryRequest(const ABCIQueryRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ABCIQueryRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_) {}

    , decltype(_impl_.path_) {}

    , decltype(_impl_.height_) {}

    , decltype(_impl_.prove_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data().empty()) {
    _this->_impl_.data_.Set(from._internal_data(), _this->GetArenaForAllocation());
  }
  _impl_.path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.path_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_path().empty()) {
    _this->_impl_.path_.Set(from._internal_path(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.height_, &from._impl_.height_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.prove_) -
    reinterpret_cast<char*>(&_impl_.height_)) + sizeof(_impl_.prove_));
  // @@protoc_insertion_point(copy_constructor:cosmos.base.tendermint.v1beta1.ABCIQueryRequest)
}

inline void ABCIQueryRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.data_) {}

    , decltype(_impl_.path_) {}

    , decltype(_impl_.height_) { ::int64_t{0} }

    , decltype(_impl_.prove_) { false }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.path_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ABCIQueryRequest::~ABCIQueryRequest() {
  // @@protoc_insertion_point(destructor:cosmos.base.tendermint.v1beta1.ABCIQueryRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ABCIQueryRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.data_.Destroy();
  _impl_.path_.Destroy();
}

void ABCIQueryRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ABCIQueryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.base.tendermint.v1beta1.ABCIQueryRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.ClearToEmpty();
  _impl_.path_.ClearToEmpty();
  ::memset(&_impl_.height_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.prove_) -
      reinterpret_cast<char*>(&_impl_.height_)) + sizeof(_impl_.prove_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ABCIQueryRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes data = 1 [json_name = "data"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_data();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string path = 2 [json_name = "path"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_path();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.base.tendermint.v1beta1.ABCIQueryRequest.path"));
        } else {
          goto handle_unusual;
        }
        continue;
      // int64 height = 3 [json_name = "height"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 24)) {
          _impl_.height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // bool prove = 4 [json_name = "prove"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 32)) {
          _impl_.prove_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* ABCIQueryRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.base.tendermint.v1beta1.ABCIQueryRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1 [json_name = "data"];
  if (!this->_internal_data().empty()) {
    const std::string& _s = this->_internal_data();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // string path = 2 [json_name = "path"];
  if (!this->_internal_path().empty()) {
    const std::string& _s = this->_internal_path();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.base.tendermint.v1beta1.ABCIQueryRequest.path");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // int64 height = 3 [json_name = "height"];
  if (this->_internal_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        3, this->_internal_height(), target);
  }

  // bool prove = 4 [json_name = "prove"];
  if (this->_internal_prove() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_prove(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.base.tendermint.v1beta1.ABCIQueryRequest)
  return target;
}

::size_t ABCIQueryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.base.tendermint.v1beta1.ABCIQueryRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes data = 1 [json_name = "data"];
  if (!this->_internal_data().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
                                    this->_internal_data());
  }

  // string path = 2 [json_name = "path"];
  if (!this->_internal_path().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_path());
  }

  // int64 height = 3 [json_name = "height"];
  if (this->_internal_height() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_height());
  }

  // bool prove = 4 [json_name = "prove"];
  if (this->_internal_prove() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ABCIQueryRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ABCIQueryRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ABCIQueryRequest::GetClassData() const { return &_class_data_; }


void ABCIQueryRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ABCIQueryRequest*>(&to_msg);
  auto& from = static_cast<const ABCIQueryRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.base.tendermint.v1beta1.ABCIQueryRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  if (!from._internal_path().empty()) {
    _this->_internal_set_path(from._internal_path());
  }
  if (from._internal_height() != 0) {
    _this->_internal_set_height(from._internal_height());
  }
  if (from._internal_prove() != 0) {
    _this->_internal_set_prove(from._internal_prove());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ABCIQueryRequest::CopyFrom(const ABCIQueryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.base.tendermint.v1beta1.ABCIQueryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ABCIQueryRequest::IsInitialized() const {
  return true;
}

void ABCIQueryRequest::InternalSwap(ABCIQueryRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, lhs_arena,
                                       &other->_impl_.data_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.path_, lhs_arena,
                                       &other->_impl_.path_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ABCIQueryRequest, _impl_.prove_)
      + sizeof(ABCIQueryRequest::_impl_.prove_)
      - PROTOBUF_FIELD_OFFSET(ABCIQueryRequest, _impl_.height_)>(
          reinterpret_cast<char*>(&_impl_.height_),
          reinterpret_cast<char*>(&other->_impl_.height_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ABCIQueryRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto[15]);
}
// ===================================================================

class ABCIQueryResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<ABCIQueryResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ABCIQueryResponse, _impl_._has_bits_);
  static const ::cosmos::base::tendermint::v1beta1::ProofOps& proof_ops(const ABCIQueryResponse* msg);
  static void set_has_proof_ops(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::tendermint::v1beta1::ProofOps&
ABCIQueryResponse::_Internal::proof_ops(const ABCIQueryResponse* msg) {
  return *msg->_impl_.proof_ops_;
}
ABCIQueryResponse::ABCIQueryResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.base.tendermint.v1beta1.ABCIQueryResponse)
}
ABCIQueryResponse::ABCIQueryResponse(const ABCIQueryResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ABCIQueryResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.log_) {}

    , decltype(_impl_.info_) {}

    , decltype(_impl_.key_) {}

    , decltype(_impl_.value_) {}

    , decltype(_impl_.codespace_) {}

    , decltype(_impl_.proof_ops_){nullptr}
    , decltype(_impl_.index_) {}

    , decltype(_impl_.height_) {}

    , decltype(_impl_.code_) {}
  };

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.log_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.log_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_log().empty()) {
    _this->_impl_.log_.Set(from._internal_log(), _this->GetArenaForAllocation());
  }
  _impl_.info_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.info_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_info().empty()) {
    _this->_impl_.info_.Set(from._internal_info(), _this->GetArenaForAllocation());
  }
  _impl_.key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.key_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_key().empty()) {
    _this->_impl_.key_.Set(from._internal_key(), _this->GetArenaForAllocation());
  }
  _impl_.value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.value_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_value().empty()) {
    _this->_impl_.value_.Set(from._internal_value(), _this->GetArenaForAllocation());
  }
  _impl_.codespace_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.codespace_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_codespace().empty()) {
    _this->_impl_.codespace_.Set(from._internal_codespace(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.proof_ops_ = new ::cosmos::base::tendermint::v1beta1::ProofOps(*from._impl_.proof_ops_);
  }
  ::memcpy(&_impl_.index_, &from._impl_.index_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.code_) -
    reinterpret_cast<char*>(&_impl_.index_)) + sizeof(_impl_.code_));
  // @@protoc_insertion_point(copy_constructor:cosmos.base.tendermint.v1beta1.ABCIQueryResponse)
}

inline void ABCIQueryResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.log_) {}

    , decltype(_impl_.info_) {}

    , decltype(_impl_.key_) {}

    , decltype(_impl_.value_) {}

    , decltype(_impl_.codespace_) {}

    , decltype(_impl_.proof_ops_){nullptr}
    , decltype(_impl_.index_) { ::int64_t{0} }

    , decltype(_impl_.height_) { ::int64_t{0} }

    , decltype(_impl_.code_) { 0u }

  };
  _impl_.log_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.log_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.info_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.info_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.key_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.value_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.codespace_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.codespace_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ABCIQueryResponse::~ABCIQueryResponse() {
  // @@protoc_insertion_point(destructor:cosmos.base.tendermint.v1beta1.ABCIQueryResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ABCIQueryResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.log_.Destroy();
  _impl_.info_.Destroy();
  _impl_.key_.Destroy();
  _impl_.value_.Destroy();
  _impl_.codespace_.Destroy();
  if (this != internal_default_instance()) delete _impl_.proof_ops_;
}

void ABCIQueryResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ABCIQueryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.base.tendermint.v1beta1.ABCIQueryResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.log_.ClearToEmpty();
  _impl_.info_.ClearToEmpty();
  _impl_.key_.ClearToEmpty();
  _impl_.value_.ClearToEmpty();
  _impl_.codespace_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.proof_ops_ != nullptr);
    _impl_.proof_ops_->Clear();
  }
  ::memset(&_impl_.index_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.code_) -
      reinterpret_cast<char*>(&_impl_.index_)) + sizeof(_impl_.code_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ABCIQueryResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 code = 1 [json_name = "code"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string log = 3 [json_name = "log"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_log();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.base.tendermint.v1beta1.ABCIQueryResponse.log"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string info = 4 [json_name = "info"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_info();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.base.tendermint.v1beta1.ABCIQueryResponse.info"));
        } else {
          goto handle_unusual;
        }
        continue;
      // int64 index = 5 [json_name = "index"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 40)) {
          _impl_.index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // bytes key = 6 [json_name = "key"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_key();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // bytes value = 7 [json_name = "value"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_value();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.tendermint.v1beta1.ProofOps proof_ops = 8 [json_name = "proofOps"];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_proof_ops(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // int64 height = 9 [json_name = "height"];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 72)) {
          _impl_.height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string codespace = 10 [json_name = "codespace"];
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 82)) {
          auto str = _internal_mutable_codespace();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.base.tendermint.v1beta1.ABCIQueryResponse.codespace"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* ABCIQueryResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.base.tendermint.v1beta1.ABCIQueryResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 code = 1 [json_name = "code"];
  if (this->_internal_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_code(), target);
  }

  // string log = 3 [json_name = "log"];
  if (!this->_internal_log().empty()) {
    const std::string& _s = this->_internal_log();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.base.tendermint.v1beta1.ABCIQueryResponse.log");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string info = 4 [json_name = "info"];
  if (!this->_internal_info().empty()) {
    const std::string& _s = this->_internal_info();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.base.tendermint.v1beta1.ABCIQueryResponse.info");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // int64 index = 5 [json_name = "index"];
  if (this->_internal_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        5, this->_internal_index(), target);
  }

  // bytes key = 6 [json_name = "key"];
  if (!this->_internal_key().empty()) {
    const std::string& _s = this->_internal_key();
    target = stream->WriteBytesMaybeAliased(6, _s, target);
  }

  // bytes value = 7 [json_name = "value"];
  if (!this->_internal_value().empty()) {
    const std::string& _s = this->_internal_value();
    target = stream->WriteBytesMaybeAliased(7, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.tendermint.v1beta1.ProofOps proof_ops = 8 [json_name = "proofOps"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::proof_ops(this),
        _Internal::proof_ops(this).GetCachedSize(), target, stream);
  }

  // int64 height = 9 [json_name = "height"];
  if (this->_internal_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        9, this->_internal_height(), target);
  }

  // string codespace = 10 [json_name = "codespace"];
  if (!this->_internal_codespace().empty()) {
    const std::string& _s = this->_internal_codespace();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.base.tendermint.v1beta1.ABCIQueryResponse.codespace");
    target = stream->WriteStringMaybeAliased(10, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.base.tendermint.v1beta1.ABCIQueryResponse)
  return target;
}

::size_t ABCIQueryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.base.tendermint.v1beta1.ABCIQueryResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string log = 3 [json_name = "log"];
  if (!this->_internal_log().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_log());
  }

  // string info = 4 [json_name = "info"];
  if (!this->_internal_info().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_info());
  }

  // bytes key = 6 [json_name = "key"];
  if (!this->_internal_key().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
                                    this->_internal_key());
  }

  // bytes value = 7 [json_name = "value"];
  if (!this->_internal_value().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
                                    this->_internal_value());
  }

  // string codespace = 10 [json_name = "codespace"];
  if (!this->_internal_codespace().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_codespace());
  }

  // .cosmos.base.tendermint.v1beta1.ProofOps proof_ops = 8 [json_name = "proofOps"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.proof_ops_);
  }

  // int64 index = 5 [json_name = "index"];
  if (this->_internal_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_index());
  }

  // int64 height = 9 [json_name = "height"];
  if (this->_internal_height() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_height());
  }

  // uint32 code = 1 [json_name = "code"];
  if (this->_internal_code() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ABCIQueryResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ABCIQueryResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ABCIQueryResponse::GetClassData() const { return &_class_data_; }


void ABCIQueryResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ABCIQueryResponse*>(&to_msg);
  auto& from = static_cast<const ABCIQueryResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.base.tendermint.v1beta1.ABCIQueryResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_log().empty()) {
    _this->_internal_set_log(from._internal_log());
  }
  if (!from._internal_info().empty()) {
    _this->_internal_set_info(from._internal_info());
  }
  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  if (!from._internal_value().empty()) {
    _this->_internal_set_value(from._internal_value());
  }
  if (!from._internal_codespace().empty()) {
    _this->_internal_set_codespace(from._internal_codespace());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_proof_ops()->::cosmos::base::tendermint::v1beta1::ProofOps::MergeFrom(
        from._internal_proof_ops());
  }
  if (from._internal_index() != 0) {
    _this->_internal_set_index(from._internal_index());
  }
  if (from._internal_height() != 0) {
    _this->_internal_set_height(from._internal_height());
  }
  if (from._internal_code() != 0) {
    _this->_internal_set_code(from._internal_code());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ABCIQueryResponse::CopyFrom(const ABCIQueryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.base.tendermint.v1beta1.ABCIQueryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ABCIQueryResponse::IsInitialized() const {
  return true;
}

void ABCIQueryResponse::InternalSwap(ABCIQueryResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.log_, lhs_arena,
                                       &other->_impl_.log_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.info_, lhs_arena,
                                       &other->_impl_.info_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, lhs_arena,
                                       &other->_impl_.key_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, lhs_arena,
                                       &other->_impl_.value_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.codespace_, lhs_arena,
                                       &other->_impl_.codespace_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ABCIQueryResponse, _impl_.code_)
      + sizeof(ABCIQueryResponse::_impl_.code_)
      - PROTOBUF_FIELD_OFFSET(ABCIQueryResponse, _impl_.proof_ops_)>(
          reinterpret_cast<char*>(&_impl_.proof_ops_),
          reinterpret_cast<char*>(&other->_impl_.proof_ops_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ABCIQueryResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto[16]);
}
// ===================================================================

class ProofOp::_Internal {
 public:
};

ProofOp::ProofOp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.base.tendermint.v1beta1.ProofOp)
}
ProofOp::ProofOp(const ProofOp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ProofOp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.type_) {}

    , decltype(_impl_.key_) {}

    , decltype(_impl_.data_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.type_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_type().empty()) {
    _this->_impl_.type_.Set(from._internal_type(), _this->GetArenaForAllocation());
  }
  _impl_.key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.key_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_key().empty()) {
    _this->_impl_.key_.Set(from._internal_key(), _this->GetArenaForAllocation());
  }
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data().empty()) {
    _this->_impl_.data_.Set(from._internal_data(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.base.tendermint.v1beta1.ProofOp)
}

inline void ProofOp::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.type_) {}

    , decltype(_impl_.key_) {}

    , decltype(_impl_.data_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.type_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.key_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ProofOp::~ProofOp() {
  // @@protoc_insertion_point(destructor:cosmos.base.tendermint.v1beta1.ProofOp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ProofOp::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.type_.Destroy();
  _impl_.key_.Destroy();
  _impl_.data_.Destroy();
}

void ProofOp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ProofOp::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.base.tendermint.v1beta1.ProofOp)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.type_.ClearToEmpty();
  _impl_.key_.ClearToEmpty();
  _impl_.data_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProofOp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string type = 1 [json_name = "type"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.base.tendermint.v1beta1.ProofOp.type"));
        } else {
          goto handle_unusual;
        }
        continue;
      // bytes key = 2 [json_name = "key"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_key();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // bytes data = 3 [json_name = "data"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_data();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* ProofOp::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.base.tendermint.v1beta1.ProofOp)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1 [json_name = "type"];
  if (!this->_internal_type().empty()) {
    const std::string& _s = this->_internal_type();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.base.tendermint.v1beta1.ProofOp.type");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // bytes key = 2 [json_name = "key"];
  if (!this->_internal_key().empty()) {
    const std::string& _s = this->_internal_key();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  // bytes data = 3 [json_name = "data"];
  if (!this->_internal_data().empty()) {
    const std::string& _s = this->_internal_data();
    target = stream->WriteBytesMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.base.tendermint.v1beta1.ProofOp)
  return target;
}

::size_t ProofOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.base.tendermint.v1beta1.ProofOp)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string type = 1 [json_name = "type"];
  if (!this->_internal_type().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_type());
  }

  // bytes key = 2 [json_name = "key"];
  if (!this->_internal_key().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
                                    this->_internal_key());
  }

  // bytes data = 3 [json_name = "data"];
  if (!this->_internal_data().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
                                    this->_internal_data());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProofOp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ProofOp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProofOp::GetClassData() const { return &_class_data_; }


void ProofOp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ProofOp*>(&to_msg);
  auto& from = static_cast<const ProofOp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.base.tendermint.v1beta1.ProofOp)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProofOp::CopyFrom(const ProofOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.base.tendermint.v1beta1.ProofOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProofOp::IsInitialized() const {
  return true;
}

void ProofOp::InternalSwap(ProofOp* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, lhs_arena,
                                       &other->_impl_.type_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, lhs_arena,
                                       &other->_impl_.key_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, lhs_arena,
                                       &other->_impl_.data_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProofOp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto[17]);
}
// ===================================================================

class ProofOps::_Internal {
 public:
};

ProofOps::ProofOps(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.base.tendermint.v1beta1.ProofOps)
}
ProofOps::ProofOps(const ProofOps& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ProofOps* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ops_){from._impl_.ops_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.base.tendermint.v1beta1.ProofOps)
}

inline void ProofOps::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.ops_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ProofOps::~ProofOps() {
  // @@protoc_insertion_point(destructor:cosmos.base.tendermint.v1beta1.ProofOps)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ProofOps::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_ops()->~RepeatedPtrField();
}

void ProofOps::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ProofOps::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.base.tendermint.v1beta1.ProofOps)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_ops()->Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProofOps::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .cosmos.base.tendermint.v1beta1.ProofOp ops = 1 [json_name = "ops", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_ops(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* ProofOps::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.base.tendermint.v1beta1.ProofOps)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cosmos.base.tendermint.v1beta1.ProofOp ops = 1 [json_name = "ops", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_ops_size()); i < n; i++) {
    const auto& repfield = this->_internal_ops(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.base.tendermint.v1beta1.ProofOps)
  return target;
}

::size_t ProofOps::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.base.tendermint.v1beta1.ProofOps)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cosmos.base.tendermint.v1beta1.ProofOp ops = 1 [json_name = "ops", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  total_size += 1UL * this->_internal_ops_size();
  for (const auto& msg : this->_internal_ops()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProofOps::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ProofOps::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProofOps::GetClassData() const { return &_class_data_; }


void ProofOps::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ProofOps*>(&to_msg);
  auto& from = static_cast<const ProofOps&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.base.tendermint.v1beta1.ProofOps)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_ops()->MergeFrom(from._internal_ops());
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProofOps::CopyFrom(const ProofOps& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.base.tendermint.v1beta1.ProofOps)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProofOps::IsInitialized() const {
  return true;
}

void ProofOps::InternalSwap(ProofOps* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_ops()->InternalSwap(other->_internal_mutable_ops());
}

::PROTOBUF_NAMESPACE_ID::Metadata ProofOps::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto[18]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace tendermint
}  // namespace base
}  // namespace cosmos
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightRequest*
Arena::CreateMaybeMessage< ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightResponse*
Arena::CreateMaybeMessage< ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetRequest*
Arena::CreateMaybeMessage< ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetResponse*
Arena::CreateMaybeMessage< ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::base::tendermint::v1beta1::Validator*
Arena::CreateMaybeMessage< ::cosmos::base::tendermint::v1beta1::Validator >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::base::tendermint::v1beta1::Validator >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::base::tendermint::v1beta1::GetBlockByHeightRequest*
Arena::CreateMaybeMessage< ::cosmos::base::tendermint::v1beta1::GetBlockByHeightRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::base::tendermint::v1beta1::GetBlockByHeightRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::base::tendermint::v1beta1::GetBlockByHeightResponse*
Arena::CreateMaybeMessage< ::cosmos::base::tendermint::v1beta1::GetBlockByHeightResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::base::tendermint::v1beta1::GetBlockByHeightResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::base::tendermint::v1beta1::GetLatestBlockRequest*
Arena::CreateMaybeMessage< ::cosmos::base::tendermint::v1beta1::GetLatestBlockRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::base::tendermint::v1beta1::GetLatestBlockRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::base::tendermint::v1beta1::GetLatestBlockResponse*
Arena::CreateMaybeMessage< ::cosmos::base::tendermint::v1beta1::GetLatestBlockResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::base::tendermint::v1beta1::GetLatestBlockResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::base::tendermint::v1beta1::GetSyncingRequest*
Arena::CreateMaybeMessage< ::cosmos::base::tendermint::v1beta1::GetSyncingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::base::tendermint::v1beta1::GetSyncingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::base::tendermint::v1beta1::GetSyncingResponse*
Arena::CreateMaybeMessage< ::cosmos::base::tendermint::v1beta1::GetSyncingResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::base::tendermint::v1beta1::GetSyncingResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::base::tendermint::v1beta1::GetNodeInfoRequest*
Arena::CreateMaybeMessage< ::cosmos::base::tendermint::v1beta1::GetNodeInfoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::base::tendermint::v1beta1::GetNodeInfoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::base::tendermint::v1beta1::GetNodeInfoResponse*
Arena::CreateMaybeMessage< ::cosmos::base::tendermint::v1beta1::GetNodeInfoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::base::tendermint::v1beta1::GetNodeInfoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::base::tendermint::v1beta1::VersionInfo*
Arena::CreateMaybeMessage< ::cosmos::base::tendermint::v1beta1::VersionInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::base::tendermint::v1beta1::VersionInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::base::tendermint::v1beta1::Module*
Arena::CreateMaybeMessage< ::cosmos::base::tendermint::v1beta1::Module >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::base::tendermint::v1beta1::Module >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::base::tendermint::v1beta1::ABCIQueryRequest*
Arena::CreateMaybeMessage< ::cosmos::base::tendermint::v1beta1::ABCIQueryRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::base::tendermint::v1beta1::ABCIQueryRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::base::tendermint::v1beta1::ABCIQueryResponse*
Arena::CreateMaybeMessage< ::cosmos::base::tendermint::v1beta1::ABCIQueryResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::base::tendermint::v1beta1::ABCIQueryResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::base::tendermint::v1beta1::ProofOp*
Arena::CreateMaybeMessage< ::cosmos::base::tendermint::v1beta1::ProofOp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::base::tendermint::v1beta1::ProofOp >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::base::tendermint::v1beta1::ProofOps*
Arena::CreateMaybeMessage< ::cosmos::base::tendermint::v1beta1::ProofOps >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::base::tendermint::v1beta1::ProofOps >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
