// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: cosmos/base/tendermint/v1beta1/query.proto
#ifndef GRPC_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto__INCLUDED
#define GRPC_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto__INCLUDED

#include "cosmos/base/tendermint/v1beta1/query.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace cosmos {
namespace base {
namespace tendermint {
namespace v1beta1 {

// Service defines the gRPC querier service for tendermint queries.
class Service final {
 public:
  static constexpr char const* service_full_name() {
    return "cosmos.base.tendermint.v1beta1.Service";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // GetNodeInfo queries the current node info.
    virtual ::grpc::Status GetNodeInfo(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetNodeInfoRequest& request, ::cosmos::base::tendermint::v1beta1::GetNodeInfoResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmos::base::tendermint::v1beta1::GetNodeInfoResponse>> AsyncGetNodeInfo(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetNodeInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmos::base::tendermint::v1beta1::GetNodeInfoResponse>>(AsyncGetNodeInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmos::base::tendermint::v1beta1::GetNodeInfoResponse>> PrepareAsyncGetNodeInfo(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetNodeInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmos::base::tendermint::v1beta1::GetNodeInfoResponse>>(PrepareAsyncGetNodeInfoRaw(context, request, cq));
    }
    // GetSyncing queries node syncing.
    virtual ::grpc::Status GetSyncing(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetSyncingRequest& request, ::cosmos::base::tendermint::v1beta1::GetSyncingResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmos::base::tendermint::v1beta1::GetSyncingResponse>> AsyncGetSyncing(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetSyncingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmos::base::tendermint::v1beta1::GetSyncingResponse>>(AsyncGetSyncingRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmos::base::tendermint::v1beta1::GetSyncingResponse>> PrepareAsyncGetSyncing(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetSyncingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmos::base::tendermint::v1beta1::GetSyncingResponse>>(PrepareAsyncGetSyncingRaw(context, request, cq));
    }
    // GetLatestBlock returns the latest block.
    virtual ::grpc::Status GetLatestBlock(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetLatestBlockRequest& request, ::cosmos::base::tendermint::v1beta1::GetLatestBlockResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmos::base::tendermint::v1beta1::GetLatestBlockResponse>> AsyncGetLatestBlock(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetLatestBlockRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmos::base::tendermint::v1beta1::GetLatestBlockResponse>>(AsyncGetLatestBlockRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmos::base::tendermint::v1beta1::GetLatestBlockResponse>> PrepareAsyncGetLatestBlock(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetLatestBlockRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmos::base::tendermint::v1beta1::GetLatestBlockResponse>>(PrepareAsyncGetLatestBlockRaw(context, request, cq));
    }
    // GetBlockByHeight queries block for given height.
    virtual ::grpc::Status GetBlockByHeight(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetBlockByHeightRequest& request, ::cosmos::base::tendermint::v1beta1::GetBlockByHeightResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmos::base::tendermint::v1beta1::GetBlockByHeightResponse>> AsyncGetBlockByHeight(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetBlockByHeightRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmos::base::tendermint::v1beta1::GetBlockByHeightResponse>>(AsyncGetBlockByHeightRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmos::base::tendermint::v1beta1::GetBlockByHeightResponse>> PrepareAsyncGetBlockByHeight(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetBlockByHeightRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmos::base::tendermint::v1beta1::GetBlockByHeightResponse>>(PrepareAsyncGetBlockByHeightRaw(context, request, cq));
    }
    // GetLatestValidatorSet queries latest validator-set.
    virtual ::grpc::Status GetLatestValidatorSet(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetRequest& request, ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetResponse>> AsyncGetLatestValidatorSet(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetResponse>>(AsyncGetLatestValidatorSetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetResponse>> PrepareAsyncGetLatestValidatorSet(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetResponse>>(PrepareAsyncGetLatestValidatorSetRaw(context, request, cq));
    }
    // GetValidatorSetByHeight queries validator-set at a given height.
    virtual ::grpc::Status GetValidatorSetByHeight(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightRequest& request, ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightResponse>> AsyncGetValidatorSetByHeight(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightResponse>>(AsyncGetValidatorSetByHeightRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightResponse>> PrepareAsyncGetValidatorSetByHeight(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightResponse>>(PrepareAsyncGetValidatorSetByHeightRaw(context, request, cq));
    }
    // ABCIQuery defines a query handler that supports ABCI queries directly to the
    // application, bypassing Tendermint completely. The ABCI query must contain
    // a valid and supported path, including app, custom, p2p, and store.
    //
    // Since: cosmos-sdk 0.46
    virtual ::grpc::Status ABCIQuery(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::ABCIQueryRequest& request, ::cosmos::base::tendermint::v1beta1::ABCIQueryResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmos::base::tendermint::v1beta1::ABCIQueryResponse>> AsyncABCIQuery(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::ABCIQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmos::base::tendermint::v1beta1::ABCIQueryResponse>>(AsyncABCIQueryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmos::base::tendermint::v1beta1::ABCIQueryResponse>> PrepareAsyncABCIQuery(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::ABCIQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmos::base::tendermint::v1beta1::ABCIQueryResponse>>(PrepareAsyncABCIQueryRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // GetNodeInfo queries the current node info.
      virtual void GetNodeInfo(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetNodeInfoRequest* request, ::cosmos::base::tendermint::v1beta1::GetNodeInfoResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetNodeInfo(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetNodeInfoRequest* request, ::cosmos::base::tendermint::v1beta1::GetNodeInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // GetSyncing queries node syncing.
      virtual void GetSyncing(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetSyncingRequest* request, ::cosmos::base::tendermint::v1beta1::GetSyncingResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetSyncing(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetSyncingRequest* request, ::cosmos::base::tendermint::v1beta1::GetSyncingResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // GetLatestBlock returns the latest block.
      virtual void GetLatestBlock(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetLatestBlockRequest* request, ::cosmos::base::tendermint::v1beta1::GetLatestBlockResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetLatestBlock(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetLatestBlockRequest* request, ::cosmos::base::tendermint::v1beta1::GetLatestBlockResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // GetBlockByHeight queries block for given height.
      virtual void GetBlockByHeight(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetBlockByHeightRequest* request, ::cosmos::base::tendermint::v1beta1::GetBlockByHeightResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetBlockByHeight(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetBlockByHeightRequest* request, ::cosmos::base::tendermint::v1beta1::GetBlockByHeightResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // GetLatestValidatorSet queries latest validator-set.
      virtual void GetLatestValidatorSet(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetRequest* request, ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetLatestValidatorSet(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetRequest* request, ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // GetValidatorSetByHeight queries validator-set at a given height.
      virtual void GetValidatorSetByHeight(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightRequest* request, ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetValidatorSetByHeight(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightRequest* request, ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // ABCIQuery defines a query handler that supports ABCI queries directly to the
      // application, bypassing Tendermint completely. The ABCI query must contain
      // a valid and supported path, including app, custom, p2p, and store.
      //
      // Since: cosmos-sdk 0.46
      virtual void ABCIQuery(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::ABCIQueryRequest* request, ::cosmos::base::tendermint::v1beta1::ABCIQueryResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ABCIQuery(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::ABCIQueryRequest* request, ::cosmos::base::tendermint::v1beta1::ABCIQueryResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::cosmos::base::tendermint::v1beta1::GetNodeInfoResponse>* AsyncGetNodeInfoRaw(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetNodeInfoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::cosmos::base::tendermint::v1beta1::GetNodeInfoResponse>* PrepareAsyncGetNodeInfoRaw(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetNodeInfoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::cosmos::base::tendermint::v1beta1::GetSyncingResponse>* AsyncGetSyncingRaw(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetSyncingRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::cosmos::base::tendermint::v1beta1::GetSyncingResponse>* PrepareAsyncGetSyncingRaw(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetSyncingRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::cosmos::base::tendermint::v1beta1::GetLatestBlockResponse>* AsyncGetLatestBlockRaw(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetLatestBlockRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::cosmos::base::tendermint::v1beta1::GetLatestBlockResponse>* PrepareAsyncGetLatestBlockRaw(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetLatestBlockRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::cosmos::base::tendermint::v1beta1::GetBlockByHeightResponse>* AsyncGetBlockByHeightRaw(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetBlockByHeightRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::cosmos::base::tendermint::v1beta1::GetBlockByHeightResponse>* PrepareAsyncGetBlockByHeightRaw(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetBlockByHeightRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetResponse>* AsyncGetLatestValidatorSetRaw(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetResponse>* PrepareAsyncGetLatestValidatorSetRaw(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightResponse>* AsyncGetValidatorSetByHeightRaw(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightResponse>* PrepareAsyncGetValidatorSetByHeightRaw(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::cosmos::base::tendermint::v1beta1::ABCIQueryResponse>* AsyncABCIQueryRaw(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::ABCIQueryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::cosmos::base::tendermint::v1beta1::ABCIQueryResponse>* PrepareAsyncABCIQueryRaw(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::ABCIQueryRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status GetNodeInfo(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetNodeInfoRequest& request, ::cosmos::base::tendermint::v1beta1::GetNodeInfoResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmos::base::tendermint::v1beta1::GetNodeInfoResponse>> AsyncGetNodeInfo(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetNodeInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmos::base::tendermint::v1beta1::GetNodeInfoResponse>>(AsyncGetNodeInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmos::base::tendermint::v1beta1::GetNodeInfoResponse>> PrepareAsyncGetNodeInfo(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetNodeInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmos::base::tendermint::v1beta1::GetNodeInfoResponse>>(PrepareAsyncGetNodeInfoRaw(context, request, cq));
    }
    ::grpc::Status GetSyncing(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetSyncingRequest& request, ::cosmos::base::tendermint::v1beta1::GetSyncingResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmos::base::tendermint::v1beta1::GetSyncingResponse>> AsyncGetSyncing(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetSyncingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmos::base::tendermint::v1beta1::GetSyncingResponse>>(AsyncGetSyncingRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmos::base::tendermint::v1beta1::GetSyncingResponse>> PrepareAsyncGetSyncing(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetSyncingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmos::base::tendermint::v1beta1::GetSyncingResponse>>(PrepareAsyncGetSyncingRaw(context, request, cq));
    }
    ::grpc::Status GetLatestBlock(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetLatestBlockRequest& request, ::cosmos::base::tendermint::v1beta1::GetLatestBlockResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmos::base::tendermint::v1beta1::GetLatestBlockResponse>> AsyncGetLatestBlock(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetLatestBlockRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmos::base::tendermint::v1beta1::GetLatestBlockResponse>>(AsyncGetLatestBlockRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmos::base::tendermint::v1beta1::GetLatestBlockResponse>> PrepareAsyncGetLatestBlock(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetLatestBlockRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmos::base::tendermint::v1beta1::GetLatestBlockResponse>>(PrepareAsyncGetLatestBlockRaw(context, request, cq));
    }
    ::grpc::Status GetBlockByHeight(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetBlockByHeightRequest& request, ::cosmos::base::tendermint::v1beta1::GetBlockByHeightResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmos::base::tendermint::v1beta1::GetBlockByHeightResponse>> AsyncGetBlockByHeight(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetBlockByHeightRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmos::base::tendermint::v1beta1::GetBlockByHeightResponse>>(AsyncGetBlockByHeightRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmos::base::tendermint::v1beta1::GetBlockByHeightResponse>> PrepareAsyncGetBlockByHeight(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetBlockByHeightRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmos::base::tendermint::v1beta1::GetBlockByHeightResponse>>(PrepareAsyncGetBlockByHeightRaw(context, request, cq));
    }
    ::grpc::Status GetLatestValidatorSet(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetRequest& request, ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetResponse>> AsyncGetLatestValidatorSet(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetResponse>>(AsyncGetLatestValidatorSetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetResponse>> PrepareAsyncGetLatestValidatorSet(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetResponse>>(PrepareAsyncGetLatestValidatorSetRaw(context, request, cq));
    }
    ::grpc::Status GetValidatorSetByHeight(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightRequest& request, ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightResponse>> AsyncGetValidatorSetByHeight(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightResponse>>(AsyncGetValidatorSetByHeightRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightResponse>> PrepareAsyncGetValidatorSetByHeight(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightResponse>>(PrepareAsyncGetValidatorSetByHeightRaw(context, request, cq));
    }
    ::grpc::Status ABCIQuery(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::ABCIQueryRequest& request, ::cosmos::base::tendermint::v1beta1::ABCIQueryResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmos::base::tendermint::v1beta1::ABCIQueryResponse>> AsyncABCIQuery(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::ABCIQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmos::base::tendermint::v1beta1::ABCIQueryResponse>>(AsyncABCIQueryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmos::base::tendermint::v1beta1::ABCIQueryResponse>> PrepareAsyncABCIQuery(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::ABCIQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmos::base::tendermint::v1beta1::ABCIQueryResponse>>(PrepareAsyncABCIQueryRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void GetNodeInfo(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetNodeInfoRequest* request, ::cosmos::base::tendermint::v1beta1::GetNodeInfoResponse* response, std::function<void(::grpc::Status)>) override;
      void GetNodeInfo(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetNodeInfoRequest* request, ::cosmos::base::tendermint::v1beta1::GetNodeInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetSyncing(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetSyncingRequest* request, ::cosmos::base::tendermint::v1beta1::GetSyncingResponse* response, std::function<void(::grpc::Status)>) override;
      void GetSyncing(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetSyncingRequest* request, ::cosmos::base::tendermint::v1beta1::GetSyncingResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetLatestBlock(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetLatestBlockRequest* request, ::cosmos::base::tendermint::v1beta1::GetLatestBlockResponse* response, std::function<void(::grpc::Status)>) override;
      void GetLatestBlock(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetLatestBlockRequest* request, ::cosmos::base::tendermint::v1beta1::GetLatestBlockResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetBlockByHeight(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetBlockByHeightRequest* request, ::cosmos::base::tendermint::v1beta1::GetBlockByHeightResponse* response, std::function<void(::grpc::Status)>) override;
      void GetBlockByHeight(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetBlockByHeightRequest* request, ::cosmos::base::tendermint::v1beta1::GetBlockByHeightResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetLatestValidatorSet(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetRequest* request, ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetResponse* response, std::function<void(::grpc::Status)>) override;
      void GetLatestValidatorSet(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetRequest* request, ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetValidatorSetByHeight(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightRequest* request, ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightResponse* response, std::function<void(::grpc::Status)>) override;
      void GetValidatorSetByHeight(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightRequest* request, ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ABCIQuery(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::ABCIQueryRequest* request, ::cosmos::base::tendermint::v1beta1::ABCIQueryResponse* response, std::function<void(::grpc::Status)>) override;
      void ABCIQuery(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::ABCIQueryRequest* request, ::cosmos::base::tendermint::v1beta1::ABCIQueryResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::cosmos::base::tendermint::v1beta1::GetNodeInfoResponse>* AsyncGetNodeInfoRaw(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetNodeInfoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::cosmos::base::tendermint::v1beta1::GetNodeInfoResponse>* PrepareAsyncGetNodeInfoRaw(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetNodeInfoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::cosmos::base::tendermint::v1beta1::GetSyncingResponse>* AsyncGetSyncingRaw(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetSyncingRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::cosmos::base::tendermint::v1beta1::GetSyncingResponse>* PrepareAsyncGetSyncingRaw(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetSyncingRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::cosmos::base::tendermint::v1beta1::GetLatestBlockResponse>* AsyncGetLatestBlockRaw(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetLatestBlockRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::cosmos::base::tendermint::v1beta1::GetLatestBlockResponse>* PrepareAsyncGetLatestBlockRaw(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetLatestBlockRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::cosmos::base::tendermint::v1beta1::GetBlockByHeightResponse>* AsyncGetBlockByHeightRaw(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetBlockByHeightRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::cosmos::base::tendermint::v1beta1::GetBlockByHeightResponse>* PrepareAsyncGetBlockByHeightRaw(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetBlockByHeightRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetResponse>* AsyncGetLatestValidatorSetRaw(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetResponse>* PrepareAsyncGetLatestValidatorSetRaw(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightResponse>* AsyncGetValidatorSetByHeightRaw(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightResponse>* PrepareAsyncGetValidatorSetByHeightRaw(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::cosmos::base::tendermint::v1beta1::ABCIQueryResponse>* AsyncABCIQueryRaw(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::ABCIQueryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::cosmos::base::tendermint::v1beta1::ABCIQueryResponse>* PrepareAsyncABCIQueryRaw(::grpc::ClientContext* context, const ::cosmos::base::tendermint::v1beta1::ABCIQueryRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_GetNodeInfo_;
    const ::grpc::internal::RpcMethod rpcmethod_GetSyncing_;
    const ::grpc::internal::RpcMethod rpcmethod_GetLatestBlock_;
    const ::grpc::internal::RpcMethod rpcmethod_GetBlockByHeight_;
    const ::grpc::internal::RpcMethod rpcmethod_GetLatestValidatorSet_;
    const ::grpc::internal::RpcMethod rpcmethod_GetValidatorSetByHeight_;
    const ::grpc::internal::RpcMethod rpcmethod_ABCIQuery_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // GetNodeInfo queries the current node info.
    virtual ::grpc::Status GetNodeInfo(::grpc::ServerContext* context, const ::cosmos::base::tendermint::v1beta1::GetNodeInfoRequest* request, ::cosmos::base::tendermint::v1beta1::GetNodeInfoResponse* response);
    // GetSyncing queries node syncing.
    virtual ::grpc::Status GetSyncing(::grpc::ServerContext* context, const ::cosmos::base::tendermint::v1beta1::GetSyncingRequest* request, ::cosmos::base::tendermint::v1beta1::GetSyncingResponse* response);
    // GetLatestBlock returns the latest block.
    virtual ::grpc::Status GetLatestBlock(::grpc::ServerContext* context, const ::cosmos::base::tendermint::v1beta1::GetLatestBlockRequest* request, ::cosmos::base::tendermint::v1beta1::GetLatestBlockResponse* response);
    // GetBlockByHeight queries block for given height.
    virtual ::grpc::Status GetBlockByHeight(::grpc::ServerContext* context, const ::cosmos::base::tendermint::v1beta1::GetBlockByHeightRequest* request, ::cosmos::base::tendermint::v1beta1::GetBlockByHeightResponse* response);
    // GetLatestValidatorSet queries latest validator-set.
    virtual ::grpc::Status GetLatestValidatorSet(::grpc::ServerContext* context, const ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetRequest* request, ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetResponse* response);
    // GetValidatorSetByHeight queries validator-set at a given height.
    virtual ::grpc::Status GetValidatorSetByHeight(::grpc::ServerContext* context, const ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightRequest* request, ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightResponse* response);
    // ABCIQuery defines a query handler that supports ABCI queries directly to the
    // application, bypassing Tendermint completely. The ABCI query must contain
    // a valid and supported path, including app, custom, p2p, and store.
    //
    // Since: cosmos-sdk 0.46
    virtual ::grpc::Status ABCIQuery(::grpc::ServerContext* context, const ::cosmos::base::tendermint::v1beta1::ABCIQueryRequest* request, ::cosmos::base::tendermint::v1beta1::ABCIQueryResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_GetNodeInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetNodeInfo() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_GetNodeInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNodeInfo(::grpc::ServerContext* /*context*/, const ::cosmos::base::tendermint::v1beta1::GetNodeInfoRequest* /*request*/, ::cosmos::base::tendermint::v1beta1::GetNodeInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetNodeInfo(::grpc::ServerContext* context, ::cosmos::base::tendermint::v1beta1::GetNodeInfoRequest* request, ::grpc::ServerAsyncResponseWriter< ::cosmos::base::tendermint::v1beta1::GetNodeInfoResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetSyncing : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetSyncing() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_GetSyncing() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSyncing(::grpc::ServerContext* /*context*/, const ::cosmos::base::tendermint::v1beta1::GetSyncingRequest* /*request*/, ::cosmos::base::tendermint::v1beta1::GetSyncingResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSyncing(::grpc::ServerContext* context, ::cosmos::base::tendermint::v1beta1::GetSyncingRequest* request, ::grpc::ServerAsyncResponseWriter< ::cosmos::base::tendermint::v1beta1::GetSyncingResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetLatestBlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetLatestBlock() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_GetLatestBlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLatestBlock(::grpc::ServerContext* /*context*/, const ::cosmos::base::tendermint::v1beta1::GetLatestBlockRequest* /*request*/, ::cosmos::base::tendermint::v1beta1::GetLatestBlockResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetLatestBlock(::grpc::ServerContext* context, ::cosmos::base::tendermint::v1beta1::GetLatestBlockRequest* request, ::grpc::ServerAsyncResponseWriter< ::cosmos::base::tendermint::v1beta1::GetLatestBlockResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetBlockByHeight : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetBlockByHeight() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_GetBlockByHeight() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBlockByHeight(::grpc::ServerContext* /*context*/, const ::cosmos::base::tendermint::v1beta1::GetBlockByHeightRequest* /*request*/, ::cosmos::base::tendermint::v1beta1::GetBlockByHeightResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetBlockByHeight(::grpc::ServerContext* context, ::cosmos::base::tendermint::v1beta1::GetBlockByHeightRequest* request, ::grpc::ServerAsyncResponseWriter< ::cosmos::base::tendermint::v1beta1::GetBlockByHeightResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetLatestValidatorSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetLatestValidatorSet() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_GetLatestValidatorSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLatestValidatorSet(::grpc::ServerContext* /*context*/, const ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetRequest* /*request*/, ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetLatestValidatorSet(::grpc::ServerContext* context, ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetRequest* request, ::grpc::ServerAsyncResponseWriter< ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetValidatorSetByHeight : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetValidatorSetByHeight() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_GetValidatorSetByHeight() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetValidatorSetByHeight(::grpc::ServerContext* /*context*/, const ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightRequest* /*request*/, ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetValidatorSetByHeight(::grpc::ServerContext* context, ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightRequest* request, ::grpc::ServerAsyncResponseWriter< ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ABCIQuery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ABCIQuery() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_ABCIQuery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ABCIQuery(::grpc::ServerContext* /*context*/, const ::cosmos::base::tendermint::v1beta1::ABCIQueryRequest* /*request*/, ::cosmos::base::tendermint::v1beta1::ABCIQueryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestABCIQuery(::grpc::ServerContext* context, ::cosmos::base::tendermint::v1beta1::ABCIQueryRequest* request, ::grpc::ServerAsyncResponseWriter< ::cosmos::base::tendermint::v1beta1::ABCIQueryResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_GetNodeInfo<WithAsyncMethod_GetSyncing<WithAsyncMethod_GetLatestBlock<WithAsyncMethod_GetBlockByHeight<WithAsyncMethod_GetLatestValidatorSet<WithAsyncMethod_GetValidatorSetByHeight<WithAsyncMethod_ABCIQuery<Service > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_GetNodeInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetNodeInfo() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::cosmos::base::tendermint::v1beta1::GetNodeInfoRequest, ::cosmos::base::tendermint::v1beta1::GetNodeInfoResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::cosmos::base::tendermint::v1beta1::GetNodeInfoRequest* request, ::cosmos::base::tendermint::v1beta1::GetNodeInfoResponse* response) { return this->GetNodeInfo(context, request, response); }));}
    void SetMessageAllocatorFor_GetNodeInfo(
        ::grpc::MessageAllocator< ::cosmos::base::tendermint::v1beta1::GetNodeInfoRequest, ::cosmos::base::tendermint::v1beta1::GetNodeInfoResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::cosmos::base::tendermint::v1beta1::GetNodeInfoRequest, ::cosmos::base::tendermint::v1beta1::GetNodeInfoResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetNodeInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNodeInfo(::grpc::ServerContext* /*context*/, const ::cosmos::base::tendermint::v1beta1::GetNodeInfoRequest* /*request*/, ::cosmos::base::tendermint::v1beta1::GetNodeInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetNodeInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::cosmos::base::tendermint::v1beta1::GetNodeInfoRequest* /*request*/, ::cosmos::base::tendermint::v1beta1::GetNodeInfoResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetSyncing : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetSyncing() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::cosmos::base::tendermint::v1beta1::GetSyncingRequest, ::cosmos::base::tendermint::v1beta1::GetSyncingResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::cosmos::base::tendermint::v1beta1::GetSyncingRequest* request, ::cosmos::base::tendermint::v1beta1::GetSyncingResponse* response) { return this->GetSyncing(context, request, response); }));}
    void SetMessageAllocatorFor_GetSyncing(
        ::grpc::MessageAllocator< ::cosmos::base::tendermint::v1beta1::GetSyncingRequest, ::cosmos::base::tendermint::v1beta1::GetSyncingResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::cosmos::base::tendermint::v1beta1::GetSyncingRequest, ::cosmos::base::tendermint::v1beta1::GetSyncingResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetSyncing() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSyncing(::grpc::ServerContext* /*context*/, const ::cosmos::base::tendermint::v1beta1::GetSyncingRequest* /*request*/, ::cosmos::base::tendermint::v1beta1::GetSyncingResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetSyncing(
      ::grpc::CallbackServerContext* /*context*/, const ::cosmos::base::tendermint::v1beta1::GetSyncingRequest* /*request*/, ::cosmos::base::tendermint::v1beta1::GetSyncingResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetLatestBlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetLatestBlock() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::cosmos::base::tendermint::v1beta1::GetLatestBlockRequest, ::cosmos::base::tendermint::v1beta1::GetLatestBlockResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::cosmos::base::tendermint::v1beta1::GetLatestBlockRequest* request, ::cosmos::base::tendermint::v1beta1::GetLatestBlockResponse* response) { return this->GetLatestBlock(context, request, response); }));}
    void SetMessageAllocatorFor_GetLatestBlock(
        ::grpc::MessageAllocator< ::cosmos::base::tendermint::v1beta1::GetLatestBlockRequest, ::cosmos::base::tendermint::v1beta1::GetLatestBlockResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::cosmos::base::tendermint::v1beta1::GetLatestBlockRequest, ::cosmos::base::tendermint::v1beta1::GetLatestBlockResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetLatestBlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLatestBlock(::grpc::ServerContext* /*context*/, const ::cosmos::base::tendermint::v1beta1::GetLatestBlockRequest* /*request*/, ::cosmos::base::tendermint::v1beta1::GetLatestBlockResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetLatestBlock(
      ::grpc::CallbackServerContext* /*context*/, const ::cosmos::base::tendermint::v1beta1::GetLatestBlockRequest* /*request*/, ::cosmos::base::tendermint::v1beta1::GetLatestBlockResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetBlockByHeight : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetBlockByHeight() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::cosmos::base::tendermint::v1beta1::GetBlockByHeightRequest, ::cosmos::base::tendermint::v1beta1::GetBlockByHeightResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::cosmos::base::tendermint::v1beta1::GetBlockByHeightRequest* request, ::cosmos::base::tendermint::v1beta1::GetBlockByHeightResponse* response) { return this->GetBlockByHeight(context, request, response); }));}
    void SetMessageAllocatorFor_GetBlockByHeight(
        ::grpc::MessageAllocator< ::cosmos::base::tendermint::v1beta1::GetBlockByHeightRequest, ::cosmos::base::tendermint::v1beta1::GetBlockByHeightResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::cosmos::base::tendermint::v1beta1::GetBlockByHeightRequest, ::cosmos::base::tendermint::v1beta1::GetBlockByHeightResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetBlockByHeight() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBlockByHeight(::grpc::ServerContext* /*context*/, const ::cosmos::base::tendermint::v1beta1::GetBlockByHeightRequest* /*request*/, ::cosmos::base::tendermint::v1beta1::GetBlockByHeightResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetBlockByHeight(
      ::grpc::CallbackServerContext* /*context*/, const ::cosmos::base::tendermint::v1beta1::GetBlockByHeightRequest* /*request*/, ::cosmos::base::tendermint::v1beta1::GetBlockByHeightResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetLatestValidatorSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetLatestValidatorSet() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetRequest, ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetRequest* request, ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetResponse* response) { return this->GetLatestValidatorSet(context, request, response); }));}
    void SetMessageAllocatorFor_GetLatestValidatorSet(
        ::grpc::MessageAllocator< ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetRequest, ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetRequest, ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetLatestValidatorSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLatestValidatorSet(::grpc::ServerContext* /*context*/, const ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetRequest* /*request*/, ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetLatestValidatorSet(
      ::grpc::CallbackServerContext* /*context*/, const ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetRequest* /*request*/, ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetValidatorSetByHeight : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetValidatorSetByHeight() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightRequest, ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightRequest* request, ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightResponse* response) { return this->GetValidatorSetByHeight(context, request, response); }));}
    void SetMessageAllocatorFor_GetValidatorSetByHeight(
        ::grpc::MessageAllocator< ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightRequest, ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightRequest, ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetValidatorSetByHeight() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetValidatorSetByHeight(::grpc::ServerContext* /*context*/, const ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightRequest* /*request*/, ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetValidatorSetByHeight(
      ::grpc::CallbackServerContext* /*context*/, const ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightRequest* /*request*/, ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ABCIQuery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ABCIQuery() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::cosmos::base::tendermint::v1beta1::ABCIQueryRequest, ::cosmos::base::tendermint::v1beta1::ABCIQueryResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::cosmos::base::tendermint::v1beta1::ABCIQueryRequest* request, ::cosmos::base::tendermint::v1beta1::ABCIQueryResponse* response) { return this->ABCIQuery(context, request, response); }));}
    void SetMessageAllocatorFor_ABCIQuery(
        ::grpc::MessageAllocator< ::cosmos::base::tendermint::v1beta1::ABCIQueryRequest, ::cosmos::base::tendermint::v1beta1::ABCIQueryResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::cosmos::base::tendermint::v1beta1::ABCIQueryRequest, ::cosmos::base::tendermint::v1beta1::ABCIQueryResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ABCIQuery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ABCIQuery(::grpc::ServerContext* /*context*/, const ::cosmos::base::tendermint::v1beta1::ABCIQueryRequest* /*request*/, ::cosmos::base::tendermint::v1beta1::ABCIQueryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ABCIQuery(
      ::grpc::CallbackServerContext* /*context*/, const ::cosmos::base::tendermint::v1beta1::ABCIQueryRequest* /*request*/, ::cosmos::base::tendermint::v1beta1::ABCIQueryResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_GetNodeInfo<WithCallbackMethod_GetSyncing<WithCallbackMethod_GetLatestBlock<WithCallbackMethod_GetBlockByHeight<WithCallbackMethod_GetLatestValidatorSet<WithCallbackMethod_GetValidatorSetByHeight<WithCallbackMethod_ABCIQuery<Service > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_GetNodeInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetNodeInfo() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_GetNodeInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNodeInfo(::grpc::ServerContext* /*context*/, const ::cosmos::base::tendermint::v1beta1::GetNodeInfoRequest* /*request*/, ::cosmos::base::tendermint::v1beta1::GetNodeInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetSyncing : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetSyncing() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_GetSyncing() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSyncing(::grpc::ServerContext* /*context*/, const ::cosmos::base::tendermint::v1beta1::GetSyncingRequest* /*request*/, ::cosmos::base::tendermint::v1beta1::GetSyncingResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetLatestBlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetLatestBlock() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_GetLatestBlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLatestBlock(::grpc::ServerContext* /*context*/, const ::cosmos::base::tendermint::v1beta1::GetLatestBlockRequest* /*request*/, ::cosmos::base::tendermint::v1beta1::GetLatestBlockResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetBlockByHeight : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetBlockByHeight() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_GetBlockByHeight() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBlockByHeight(::grpc::ServerContext* /*context*/, const ::cosmos::base::tendermint::v1beta1::GetBlockByHeightRequest* /*request*/, ::cosmos::base::tendermint::v1beta1::GetBlockByHeightResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetLatestValidatorSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetLatestValidatorSet() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_GetLatestValidatorSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLatestValidatorSet(::grpc::ServerContext* /*context*/, const ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetRequest* /*request*/, ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetValidatorSetByHeight : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetValidatorSetByHeight() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_GetValidatorSetByHeight() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetValidatorSetByHeight(::grpc::ServerContext* /*context*/, const ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightRequest* /*request*/, ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ABCIQuery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ABCIQuery() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_ABCIQuery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ABCIQuery(::grpc::ServerContext* /*context*/, const ::cosmos::base::tendermint::v1beta1::ABCIQueryRequest* /*request*/, ::cosmos::base::tendermint::v1beta1::ABCIQueryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetNodeInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetNodeInfo() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_GetNodeInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNodeInfo(::grpc::ServerContext* /*context*/, const ::cosmos::base::tendermint::v1beta1::GetNodeInfoRequest* /*request*/, ::cosmos::base::tendermint::v1beta1::GetNodeInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetNodeInfo(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetSyncing : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetSyncing() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_GetSyncing() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSyncing(::grpc::ServerContext* /*context*/, const ::cosmos::base::tendermint::v1beta1::GetSyncingRequest* /*request*/, ::cosmos::base::tendermint::v1beta1::GetSyncingResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSyncing(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetLatestBlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetLatestBlock() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_GetLatestBlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLatestBlock(::grpc::ServerContext* /*context*/, const ::cosmos::base::tendermint::v1beta1::GetLatestBlockRequest* /*request*/, ::cosmos::base::tendermint::v1beta1::GetLatestBlockResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetLatestBlock(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetBlockByHeight : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetBlockByHeight() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_GetBlockByHeight() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBlockByHeight(::grpc::ServerContext* /*context*/, const ::cosmos::base::tendermint::v1beta1::GetBlockByHeightRequest* /*request*/, ::cosmos::base::tendermint::v1beta1::GetBlockByHeightResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetBlockByHeight(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetLatestValidatorSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetLatestValidatorSet() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_GetLatestValidatorSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLatestValidatorSet(::grpc::ServerContext* /*context*/, const ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetRequest* /*request*/, ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetLatestValidatorSet(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetValidatorSetByHeight : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetValidatorSetByHeight() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_GetValidatorSetByHeight() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetValidatorSetByHeight(::grpc::ServerContext* /*context*/, const ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightRequest* /*request*/, ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetValidatorSetByHeight(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ABCIQuery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ABCIQuery() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_ABCIQuery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ABCIQuery(::grpc::ServerContext* /*context*/, const ::cosmos::base::tendermint::v1beta1::ABCIQueryRequest* /*request*/, ::cosmos::base::tendermint::v1beta1::ABCIQueryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestABCIQuery(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetNodeInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetNodeInfo() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetNodeInfo(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetNodeInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNodeInfo(::grpc::ServerContext* /*context*/, const ::cosmos::base::tendermint::v1beta1::GetNodeInfoRequest* /*request*/, ::cosmos::base::tendermint::v1beta1::GetNodeInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetNodeInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetSyncing : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetSyncing() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetSyncing(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetSyncing() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSyncing(::grpc::ServerContext* /*context*/, const ::cosmos::base::tendermint::v1beta1::GetSyncingRequest* /*request*/, ::cosmos::base::tendermint::v1beta1::GetSyncingResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetSyncing(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetLatestBlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetLatestBlock() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetLatestBlock(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetLatestBlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLatestBlock(::grpc::ServerContext* /*context*/, const ::cosmos::base::tendermint::v1beta1::GetLatestBlockRequest* /*request*/, ::cosmos::base::tendermint::v1beta1::GetLatestBlockResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetLatestBlock(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetBlockByHeight : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetBlockByHeight() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetBlockByHeight(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetBlockByHeight() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBlockByHeight(::grpc::ServerContext* /*context*/, const ::cosmos::base::tendermint::v1beta1::GetBlockByHeightRequest* /*request*/, ::cosmos::base::tendermint::v1beta1::GetBlockByHeightResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetBlockByHeight(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetLatestValidatorSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetLatestValidatorSet() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetLatestValidatorSet(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetLatestValidatorSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLatestValidatorSet(::grpc::ServerContext* /*context*/, const ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetRequest* /*request*/, ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetLatestValidatorSet(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetValidatorSetByHeight : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetValidatorSetByHeight() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetValidatorSetByHeight(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetValidatorSetByHeight() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetValidatorSetByHeight(::grpc::ServerContext* /*context*/, const ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightRequest* /*request*/, ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetValidatorSetByHeight(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ABCIQuery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ABCIQuery() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ABCIQuery(context, request, response); }));
    }
    ~WithRawCallbackMethod_ABCIQuery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ABCIQuery(::grpc::ServerContext* /*context*/, const ::cosmos::base::tendermint::v1beta1::ABCIQueryRequest* /*request*/, ::cosmos::base::tendermint::v1beta1::ABCIQueryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ABCIQuery(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetNodeInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetNodeInfo() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::cosmos::base::tendermint::v1beta1::GetNodeInfoRequest, ::cosmos::base::tendermint::v1beta1::GetNodeInfoResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::cosmos::base::tendermint::v1beta1::GetNodeInfoRequest, ::cosmos::base::tendermint::v1beta1::GetNodeInfoResponse>* streamer) {
                       return this->StreamedGetNodeInfo(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetNodeInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetNodeInfo(::grpc::ServerContext* /*context*/, const ::cosmos::base::tendermint::v1beta1::GetNodeInfoRequest* /*request*/, ::cosmos::base::tendermint::v1beta1::GetNodeInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetNodeInfo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::cosmos::base::tendermint::v1beta1::GetNodeInfoRequest,::cosmos::base::tendermint::v1beta1::GetNodeInfoResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetSyncing : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetSyncing() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::cosmos::base::tendermint::v1beta1::GetSyncingRequest, ::cosmos::base::tendermint::v1beta1::GetSyncingResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::cosmos::base::tendermint::v1beta1::GetSyncingRequest, ::cosmos::base::tendermint::v1beta1::GetSyncingResponse>* streamer) {
                       return this->StreamedGetSyncing(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetSyncing() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetSyncing(::grpc::ServerContext* /*context*/, const ::cosmos::base::tendermint::v1beta1::GetSyncingRequest* /*request*/, ::cosmos::base::tendermint::v1beta1::GetSyncingResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetSyncing(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::cosmos::base::tendermint::v1beta1::GetSyncingRequest,::cosmos::base::tendermint::v1beta1::GetSyncingResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetLatestBlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetLatestBlock() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::cosmos::base::tendermint::v1beta1::GetLatestBlockRequest, ::cosmos::base::tendermint::v1beta1::GetLatestBlockResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::cosmos::base::tendermint::v1beta1::GetLatestBlockRequest, ::cosmos::base::tendermint::v1beta1::GetLatestBlockResponse>* streamer) {
                       return this->StreamedGetLatestBlock(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetLatestBlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetLatestBlock(::grpc::ServerContext* /*context*/, const ::cosmos::base::tendermint::v1beta1::GetLatestBlockRequest* /*request*/, ::cosmos::base::tendermint::v1beta1::GetLatestBlockResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetLatestBlock(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::cosmos::base::tendermint::v1beta1::GetLatestBlockRequest,::cosmos::base::tendermint::v1beta1::GetLatestBlockResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetBlockByHeight : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetBlockByHeight() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::cosmos::base::tendermint::v1beta1::GetBlockByHeightRequest, ::cosmos::base::tendermint::v1beta1::GetBlockByHeightResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::cosmos::base::tendermint::v1beta1::GetBlockByHeightRequest, ::cosmos::base::tendermint::v1beta1::GetBlockByHeightResponse>* streamer) {
                       return this->StreamedGetBlockByHeight(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetBlockByHeight() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetBlockByHeight(::grpc::ServerContext* /*context*/, const ::cosmos::base::tendermint::v1beta1::GetBlockByHeightRequest* /*request*/, ::cosmos::base::tendermint::v1beta1::GetBlockByHeightResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetBlockByHeight(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::cosmos::base::tendermint::v1beta1::GetBlockByHeightRequest,::cosmos::base::tendermint::v1beta1::GetBlockByHeightResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetLatestValidatorSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetLatestValidatorSet() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetRequest, ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetRequest, ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetResponse>* streamer) {
                       return this->StreamedGetLatestValidatorSet(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetLatestValidatorSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetLatestValidatorSet(::grpc::ServerContext* /*context*/, const ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetRequest* /*request*/, ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetLatestValidatorSet(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetRequest,::cosmos::base::tendermint::v1beta1::GetLatestValidatorSetResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetValidatorSetByHeight : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetValidatorSetByHeight() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightRequest, ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightRequest, ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightResponse>* streamer) {
                       return this->StreamedGetValidatorSetByHeight(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetValidatorSetByHeight() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetValidatorSetByHeight(::grpc::ServerContext* /*context*/, const ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightRequest* /*request*/, ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetValidatorSetByHeight(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightRequest,::cosmos::base::tendermint::v1beta1::GetValidatorSetByHeightResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ABCIQuery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ABCIQuery() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::cosmos::base::tendermint::v1beta1::ABCIQueryRequest, ::cosmos::base::tendermint::v1beta1::ABCIQueryResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::cosmos::base::tendermint::v1beta1::ABCIQueryRequest, ::cosmos::base::tendermint::v1beta1::ABCIQueryResponse>* streamer) {
                       return this->StreamedABCIQuery(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ABCIQuery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ABCIQuery(::grpc::ServerContext* /*context*/, const ::cosmos::base::tendermint::v1beta1::ABCIQueryRequest* /*request*/, ::cosmos::base::tendermint::v1beta1::ABCIQueryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedABCIQuery(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::cosmos::base::tendermint::v1beta1::ABCIQueryRequest,::cosmos::base::tendermint::v1beta1::ABCIQueryResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_GetNodeInfo<WithStreamedUnaryMethod_GetSyncing<WithStreamedUnaryMethod_GetLatestBlock<WithStreamedUnaryMethod_GetBlockByHeight<WithStreamedUnaryMethod_GetLatestValidatorSet<WithStreamedUnaryMethod_GetValidatorSetByHeight<WithStreamedUnaryMethod_ABCIQuery<Service > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_GetNodeInfo<WithStreamedUnaryMethod_GetSyncing<WithStreamedUnaryMethod_GetLatestBlock<WithStreamedUnaryMethod_GetBlockByHeight<WithStreamedUnaryMethod_GetLatestValidatorSet<WithStreamedUnaryMethod_GetValidatorSetByHeight<WithStreamedUnaryMethod_ABCIQuery<Service > > > > > > > StreamedService;
};

}  // namespace v1beta1
}  // namespace tendermint
}  // namespace base
}  // namespace cosmos


#endif  // GRPC_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto__INCLUDED
