// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/base/reflection/v2alpha1/reflection.proto

#include "cosmos/base/reflection/v2alpha1/reflection.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace cosmos {
namespace base {
namespace reflection {
namespace v2alpha1 {
template <typename>
PROTOBUF_CONSTEXPR AppDescriptor::AppDescriptor(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.authn_)*/nullptr
  , /*decltype(_impl_.chain_)*/nullptr
  , /*decltype(_impl_.codec_)*/nullptr
  , /*decltype(_impl_.configuration_)*/nullptr
  , /*decltype(_impl_.query_services_)*/nullptr
  , /*decltype(_impl_.tx_)*/nullptr} {}
struct AppDescriptorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppDescriptorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppDescriptorDefaultTypeInternal() {}
  union {
    AppDescriptor _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppDescriptorDefaultTypeInternal _AppDescriptor_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR TxDescriptor::TxDescriptor(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.msgs_)*/{}
  , /*decltype(_impl_.fullname_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TxDescriptorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TxDescriptorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TxDescriptorDefaultTypeInternal() {}
  union {
    TxDescriptor _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TxDescriptorDefaultTypeInternal _TxDescriptor_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR AuthnDescriptor::AuthnDescriptor(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.sign_modes_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AuthnDescriptorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AuthnDescriptorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AuthnDescriptorDefaultTypeInternal() {}
  union {
    AuthnDescriptor _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AuthnDescriptorDefaultTypeInternal _AuthnDescriptor_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR SigningModeDescriptor::SigningModeDescriptor(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.authn_info_provider_method_fullname_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.number_)*/ 0

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SigningModeDescriptorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SigningModeDescriptorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SigningModeDescriptorDefaultTypeInternal() {}
  union {
    SigningModeDescriptor _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SigningModeDescriptorDefaultTypeInternal _SigningModeDescriptor_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR ChainDescriptor::ChainDescriptor(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ChainDescriptorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChainDescriptorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChainDescriptorDefaultTypeInternal() {}
  union {
    ChainDescriptor _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChainDescriptorDefaultTypeInternal _ChainDescriptor_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR CodecDescriptor::CodecDescriptor(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.interfaces_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CodecDescriptorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CodecDescriptorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CodecDescriptorDefaultTypeInternal() {}
  union {
    CodecDescriptor _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CodecDescriptorDefaultTypeInternal _CodecDescriptor_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR InterfaceDescriptor::InterfaceDescriptor(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.interface_accepting_messages_)*/{}
  , /*decltype(_impl_.interface_implementers_)*/{}
  , /*decltype(_impl_.fullname_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct InterfaceDescriptorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InterfaceDescriptorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InterfaceDescriptorDefaultTypeInternal() {}
  union {
    InterfaceDescriptor _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InterfaceDescriptorDefaultTypeInternal _InterfaceDescriptor_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR InterfaceImplementerDescriptor::InterfaceImplementerDescriptor(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.fullname_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.type_url_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct InterfaceImplementerDescriptorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InterfaceImplementerDescriptorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InterfaceImplementerDescriptorDefaultTypeInternal() {}
  union {
    InterfaceImplementerDescriptor _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InterfaceImplementerDescriptorDefaultTypeInternal _InterfaceImplementerDescriptor_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR InterfaceAcceptingMessageDescriptor::InterfaceAcceptingMessageDescriptor(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.field_descriptor_names_)*/{}
  , /*decltype(_impl_.fullname_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct InterfaceAcceptingMessageDescriptorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InterfaceAcceptingMessageDescriptorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InterfaceAcceptingMessageDescriptorDefaultTypeInternal() {}
  union {
    InterfaceAcceptingMessageDescriptor _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InterfaceAcceptingMessageDescriptorDefaultTypeInternal _InterfaceAcceptingMessageDescriptor_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR ConfigurationDescriptor::ConfigurationDescriptor(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.bech32_account_address_prefix_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ConfigurationDescriptorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConfigurationDescriptorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConfigurationDescriptorDefaultTypeInternal() {}
  union {
    ConfigurationDescriptor _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConfigurationDescriptorDefaultTypeInternal _ConfigurationDescriptor_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgDescriptor::MsgDescriptor(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.msg_type_url_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgDescriptorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgDescriptorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgDescriptorDefaultTypeInternal() {}
  union {
    MsgDescriptor _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgDescriptorDefaultTypeInternal _MsgDescriptor_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR GetAuthnDescriptorRequest::GetAuthnDescriptorRequest(
    ::_pbi::ConstantInitialized) {}
struct GetAuthnDescriptorRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAuthnDescriptorRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAuthnDescriptorRequestDefaultTypeInternal() {}
  union {
    GetAuthnDescriptorRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAuthnDescriptorRequestDefaultTypeInternal _GetAuthnDescriptorRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR GetAuthnDescriptorResponse::GetAuthnDescriptorResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.authn_)*/nullptr} {}
struct GetAuthnDescriptorResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAuthnDescriptorResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAuthnDescriptorResponseDefaultTypeInternal() {}
  union {
    GetAuthnDescriptorResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAuthnDescriptorResponseDefaultTypeInternal _GetAuthnDescriptorResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR GetChainDescriptorRequest::GetChainDescriptorRequest(
    ::_pbi::ConstantInitialized) {}
struct GetChainDescriptorRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetChainDescriptorRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetChainDescriptorRequestDefaultTypeInternal() {}
  union {
    GetChainDescriptorRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetChainDescriptorRequestDefaultTypeInternal _GetChainDescriptorRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR GetChainDescriptorResponse::GetChainDescriptorResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.chain_)*/nullptr} {}
struct GetChainDescriptorResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetChainDescriptorResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetChainDescriptorResponseDefaultTypeInternal() {}
  union {
    GetChainDescriptorResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetChainDescriptorResponseDefaultTypeInternal _GetChainDescriptorResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR GetCodecDescriptorRequest::GetCodecDescriptorRequest(
    ::_pbi::ConstantInitialized) {}
struct GetCodecDescriptorRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetCodecDescriptorRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetCodecDescriptorRequestDefaultTypeInternal() {}
  union {
    GetCodecDescriptorRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetCodecDescriptorRequestDefaultTypeInternal _GetCodecDescriptorRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR GetCodecDescriptorResponse::GetCodecDescriptorResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.codec_)*/nullptr} {}
struct GetCodecDescriptorResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetCodecDescriptorResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetCodecDescriptorResponseDefaultTypeInternal() {}
  union {
    GetCodecDescriptorResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetCodecDescriptorResponseDefaultTypeInternal _GetCodecDescriptorResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR GetConfigurationDescriptorRequest::GetConfigurationDescriptorRequest(
    ::_pbi::ConstantInitialized) {}
struct GetConfigurationDescriptorRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetConfigurationDescriptorRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetConfigurationDescriptorRequestDefaultTypeInternal() {}
  union {
    GetConfigurationDescriptorRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetConfigurationDescriptorRequestDefaultTypeInternal _GetConfigurationDescriptorRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR GetConfigurationDescriptorResponse::GetConfigurationDescriptorResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.config_)*/nullptr} {}
struct GetConfigurationDescriptorResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetConfigurationDescriptorResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetConfigurationDescriptorResponseDefaultTypeInternal() {}
  union {
    GetConfigurationDescriptorResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetConfigurationDescriptorResponseDefaultTypeInternal _GetConfigurationDescriptorResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR GetQueryServicesDescriptorRequest::GetQueryServicesDescriptorRequest(
    ::_pbi::ConstantInitialized) {}
struct GetQueryServicesDescriptorRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetQueryServicesDescriptorRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetQueryServicesDescriptorRequestDefaultTypeInternal() {}
  union {
    GetQueryServicesDescriptorRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetQueryServicesDescriptorRequestDefaultTypeInternal _GetQueryServicesDescriptorRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR GetQueryServicesDescriptorResponse::GetQueryServicesDescriptorResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.queries_)*/nullptr} {}
struct GetQueryServicesDescriptorResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetQueryServicesDescriptorResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetQueryServicesDescriptorResponseDefaultTypeInternal() {}
  union {
    GetQueryServicesDescriptorResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetQueryServicesDescriptorResponseDefaultTypeInternal _GetQueryServicesDescriptorResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR GetTxDescriptorRequest::GetTxDescriptorRequest(
    ::_pbi::ConstantInitialized) {}
struct GetTxDescriptorRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetTxDescriptorRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetTxDescriptorRequestDefaultTypeInternal() {}
  union {
    GetTxDescriptorRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetTxDescriptorRequestDefaultTypeInternal _GetTxDescriptorRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR GetTxDescriptorResponse::GetTxDescriptorResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.tx_)*/nullptr} {}
struct GetTxDescriptorResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetTxDescriptorResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetTxDescriptorResponseDefaultTypeInternal() {}
  union {
    GetTxDescriptorResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetTxDescriptorResponseDefaultTypeInternal _GetTxDescriptorResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryServicesDescriptor::QueryServicesDescriptor(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.query_services_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryServicesDescriptorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryServicesDescriptorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryServicesDescriptorDefaultTypeInternal() {}
  union {
    QueryServicesDescriptor _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryServicesDescriptorDefaultTypeInternal _QueryServicesDescriptor_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryServiceDescriptor::QueryServiceDescriptor(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.methods_)*/{}
  , /*decltype(_impl_.fullname_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.is_module_)*/ false

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryServiceDescriptorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryServiceDescriptorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryServiceDescriptorDefaultTypeInternal() {}
  union {
    QueryServiceDescriptor _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryServiceDescriptorDefaultTypeInternal _QueryServiceDescriptor_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryMethodDescriptor::QueryMethodDescriptor(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.full_query_path_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryMethodDescriptorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryMethodDescriptorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryMethodDescriptorDefaultTypeInternal() {}
  union {
    QueryMethodDescriptor _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryMethodDescriptorDefaultTypeInternal _QueryMethodDescriptor_default_instance_;
}  // namespace v2alpha1
}  // namespace reflection
}  // namespace base
}  // namespace cosmos
static ::_pb::Metadata file_level_metadata_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto[26];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto = nullptr;
const ::uint32_t TableStruct_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::AppDescriptor, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::AppDescriptor, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::AppDescriptor, _impl_.authn_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::AppDescriptor, _impl_.chain_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::AppDescriptor, _impl_.codec_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::AppDescriptor, _impl_.configuration_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::AppDescriptor, _impl_.query_services_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::AppDescriptor, _impl_.tx_),
    0,
    1,
    2,
    3,
    4,
    5,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::TxDescriptor, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::TxDescriptor, _impl_.fullname_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::TxDescriptor, _impl_.msgs_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::AuthnDescriptor, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::AuthnDescriptor, _impl_.sign_modes_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::SigningModeDescriptor, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::SigningModeDescriptor, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::SigningModeDescriptor, _impl_.number_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::SigningModeDescriptor, _impl_.authn_info_provider_method_fullname_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::ChainDescriptor, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::ChainDescriptor, _impl_.id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::CodecDescriptor, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::CodecDescriptor, _impl_.interfaces_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::InterfaceDescriptor, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::InterfaceDescriptor, _impl_.fullname_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::InterfaceDescriptor, _impl_.interface_accepting_messages_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::InterfaceDescriptor, _impl_.interface_implementers_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::InterfaceImplementerDescriptor, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::InterfaceImplementerDescriptor, _impl_.fullname_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::InterfaceImplementerDescriptor, _impl_.type_url_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::InterfaceAcceptingMessageDescriptor, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::InterfaceAcceptingMessageDescriptor, _impl_.fullname_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::InterfaceAcceptingMessageDescriptor, _impl_.field_descriptor_names_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor, _impl_.bech32_account_address_prefix_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::MsgDescriptor, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::MsgDescriptor, _impl_.msg_type_url_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::GetAuthnDescriptorRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::GetAuthnDescriptorResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::GetAuthnDescriptorResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::GetAuthnDescriptorResponse, _impl_.authn_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::GetChainDescriptorRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::GetChainDescriptorResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::GetChainDescriptorResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::GetChainDescriptorResponse, _impl_.chain_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::GetCodecDescriptorRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::GetCodecDescriptorResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::GetCodecDescriptorResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::GetCodecDescriptorResponse, _impl_.codec_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::GetConfigurationDescriptorRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::GetConfigurationDescriptorResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::GetConfigurationDescriptorResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::GetConfigurationDescriptorResponse, _impl_.config_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::GetQueryServicesDescriptorRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::GetQueryServicesDescriptorResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::GetQueryServicesDescriptorResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::GetQueryServicesDescriptorResponse, _impl_.queries_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::GetTxDescriptorRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::GetTxDescriptorResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::GetTxDescriptorResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::GetTxDescriptorResponse, _impl_.tx_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor, _impl_.query_services_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::QueryServiceDescriptor, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::QueryServiceDescriptor, _impl_.fullname_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::QueryServiceDescriptor, _impl_.is_module_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::QueryServiceDescriptor, _impl_.methods_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::QueryMethodDescriptor, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::QueryMethodDescriptor, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::cosmos::base::reflection::v2alpha1::QueryMethodDescriptor, _impl_.full_query_path_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, 14, -1, sizeof(::cosmos::base::reflection::v2alpha1::AppDescriptor)},
        { 20, -1, -1, sizeof(::cosmos::base::reflection::v2alpha1::TxDescriptor)},
        { 30, -1, -1, sizeof(::cosmos::base::reflection::v2alpha1::AuthnDescriptor)},
        { 39, -1, -1, sizeof(::cosmos::base::reflection::v2alpha1::SigningModeDescriptor)},
        { 50, -1, -1, sizeof(::cosmos::base::reflection::v2alpha1::ChainDescriptor)},
        { 59, -1, -1, sizeof(::cosmos::base::reflection::v2alpha1::CodecDescriptor)},
        { 68, -1, -1, sizeof(::cosmos::base::reflection::v2alpha1::InterfaceDescriptor)},
        { 79, -1, -1, sizeof(::cosmos::base::reflection::v2alpha1::InterfaceImplementerDescriptor)},
        { 89, -1, -1, sizeof(::cosmos::base::reflection::v2alpha1::InterfaceAcceptingMessageDescriptor)},
        { 99, -1, -1, sizeof(::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor)},
        { 108, -1, -1, sizeof(::cosmos::base::reflection::v2alpha1::MsgDescriptor)},
        { 117, -1, -1, sizeof(::cosmos::base::reflection::v2alpha1::GetAuthnDescriptorRequest)},
        { 125, 134, -1, sizeof(::cosmos::base::reflection::v2alpha1::GetAuthnDescriptorResponse)},
        { 135, -1, -1, sizeof(::cosmos::base::reflection::v2alpha1::GetChainDescriptorRequest)},
        { 143, 152, -1, sizeof(::cosmos::base::reflection::v2alpha1::GetChainDescriptorResponse)},
        { 153, -1, -1, sizeof(::cosmos::base::reflection::v2alpha1::GetCodecDescriptorRequest)},
        { 161, 170, -1, sizeof(::cosmos::base::reflection::v2alpha1::GetCodecDescriptorResponse)},
        { 171, -1, -1, sizeof(::cosmos::base::reflection::v2alpha1::GetConfigurationDescriptorRequest)},
        { 179, 188, -1, sizeof(::cosmos::base::reflection::v2alpha1::GetConfigurationDescriptorResponse)},
        { 189, -1, -1, sizeof(::cosmos::base::reflection::v2alpha1::GetQueryServicesDescriptorRequest)},
        { 197, 206, -1, sizeof(::cosmos::base::reflection::v2alpha1::GetQueryServicesDescriptorResponse)},
        { 207, -1, -1, sizeof(::cosmos::base::reflection::v2alpha1::GetTxDescriptorRequest)},
        { 215, 224, -1, sizeof(::cosmos::base::reflection::v2alpha1::GetTxDescriptorResponse)},
        { 225, -1, -1, sizeof(::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor)},
        { 234, -1, -1, sizeof(::cosmos::base::reflection::v2alpha1::QueryServiceDescriptor)},
        { 245, -1, -1, sizeof(::cosmos::base::reflection::v2alpha1::QueryMethodDescriptor)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::cosmos::base::reflection::v2alpha1::_AppDescriptor_default_instance_._instance,
    &::cosmos::base::reflection::v2alpha1::_TxDescriptor_default_instance_._instance,
    &::cosmos::base::reflection::v2alpha1::_AuthnDescriptor_default_instance_._instance,
    &::cosmos::base::reflection::v2alpha1::_SigningModeDescriptor_default_instance_._instance,
    &::cosmos::base::reflection::v2alpha1::_ChainDescriptor_default_instance_._instance,
    &::cosmos::base::reflection::v2alpha1::_CodecDescriptor_default_instance_._instance,
    &::cosmos::base::reflection::v2alpha1::_InterfaceDescriptor_default_instance_._instance,
    &::cosmos::base::reflection::v2alpha1::_InterfaceImplementerDescriptor_default_instance_._instance,
    &::cosmos::base::reflection::v2alpha1::_InterfaceAcceptingMessageDescriptor_default_instance_._instance,
    &::cosmos::base::reflection::v2alpha1::_ConfigurationDescriptor_default_instance_._instance,
    &::cosmos::base::reflection::v2alpha1::_MsgDescriptor_default_instance_._instance,
    &::cosmos::base::reflection::v2alpha1::_GetAuthnDescriptorRequest_default_instance_._instance,
    &::cosmos::base::reflection::v2alpha1::_GetAuthnDescriptorResponse_default_instance_._instance,
    &::cosmos::base::reflection::v2alpha1::_GetChainDescriptorRequest_default_instance_._instance,
    &::cosmos::base::reflection::v2alpha1::_GetChainDescriptorResponse_default_instance_._instance,
    &::cosmos::base::reflection::v2alpha1::_GetCodecDescriptorRequest_default_instance_._instance,
    &::cosmos::base::reflection::v2alpha1::_GetCodecDescriptorResponse_default_instance_._instance,
    &::cosmos::base::reflection::v2alpha1::_GetConfigurationDescriptorRequest_default_instance_._instance,
    &::cosmos::base::reflection::v2alpha1::_GetConfigurationDescriptorResponse_default_instance_._instance,
    &::cosmos::base::reflection::v2alpha1::_GetQueryServicesDescriptorRequest_default_instance_._instance,
    &::cosmos::base::reflection::v2alpha1::_GetQueryServicesDescriptorResponse_default_instance_._instance,
    &::cosmos::base::reflection::v2alpha1::_GetTxDescriptorRequest_default_instance_._instance,
    &::cosmos::base::reflection::v2alpha1::_GetTxDescriptorResponse_default_instance_._instance,
    &::cosmos::base::reflection::v2alpha1::_QueryServicesDescriptor_default_instance_._instance,
    &::cosmos::base::reflection::v2alpha1::_QueryServiceDescriptor_default_instance_._instance,
    &::cosmos::base::reflection::v2alpha1::_QueryMethodDescriptor_default_instance_._instance,
};
const char descriptor_table_protodef_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n0cosmos/base/reflection/v2alpha1/reflec"
    "tion.proto\022\037cosmos.base.reflection.v2alp"
    "ha1\032\034google/api/annotations.proto\"\347\003\n\rAp"
    "pDescriptor\022F\n\005authn\030\001 \001(\01320.cosmos.base"
    ".reflection.v2alpha1.AuthnDescriptorR\005au"
    "thn\022F\n\005chain\030\002 \001(\01320.cosmos.base.reflect"
    "ion.v2alpha1.ChainDescriptorR\005chain\022F\n\005c"
    "odec\030\003 \001(\01320.cosmos.base.reflection.v2al"
    "pha1.CodecDescriptorR\005codec\022^\n\rconfigura"
    "tion\030\004 \001(\01328.cosmos.base.reflection.v2al"
    "pha1.ConfigurationDescriptorR\rconfigurat"
    "ion\022_\n\016query_services\030\005 \001(\01328.cosmos.bas"
    "e.reflection.v2alpha1.QueryServicesDescr"
    "iptorR\rqueryServices\022=\n\002tx\030\006 \001(\0132-.cosmo"
    "s.base.reflection.v2alpha1.TxDescriptorR"
    "\002tx\"n\n\014TxDescriptor\022\032\n\010fullname\030\001 \001(\tR\010f"
    "ullname\022B\n\004msgs\030\002 \003(\0132..cosmos.base.refl"
    "ection.v2alpha1.MsgDescriptorR\004msgs\"h\n\017A"
    "uthnDescriptor\022U\n\nsign_modes\030\001 \003(\01326.cos"
    "mos.base.reflection.v2alpha1.SigningMode"
    "DescriptorR\tsignModes\"\221\001\n\025SigningModeDes"
    "criptor\022\022\n\004name\030\001 \001(\tR\004name\022\026\n\006number\030\002 "
    "\001(\005R\006number\022L\n#authn_info_provider_metho"
    "d_fullname\030\003 \001(\tR\037authnInfoProviderMetho"
    "dFullname\"!\n\017ChainDescriptor\022\016\n\002id\030\001 \001(\t"
    "R\002id\"g\n\017CodecDescriptor\022T\n\ninterfaces\030\001 "
    "\003(\01324.cosmos.base.reflection.v2alpha1.In"
    "terfaceDescriptorR\ninterfaces\"\262\002\n\023Interf"
    "aceDescriptor\022\032\n\010fullname\030\001 \001(\tR\010fullnam"
    "e\022\206\001\n\034interface_accepting_messages\030\002 \003(\013"
    "2D.cosmos.base.reflection.v2alpha1.Inter"
    "faceAcceptingMessageDescriptorR\032interfac"
    "eAcceptingMessages\022v\n\026interface_implemen"
    "ters\030\003 \003(\0132\?.cosmos.base.reflection.v2al"
    "pha1.InterfaceImplementerDescriptorR\025int"
    "erfaceImplementers\"W\n\036InterfaceImplement"
    "erDescriptor\022\032\n\010fullname\030\001 \001(\tR\010fullname"
    "\022\031\n\010type_url\030\002 \001(\tR\007typeUrl\"w\n#Interface"
    "AcceptingMessageDescriptor\022\032\n\010fullname\030\001"
    " \001(\tR\010fullname\0224\n\026field_descriptor_names"
    "\030\002 \003(\tR\024fieldDescriptorNames\"\\\n\027Configur"
    "ationDescriptor\022A\n\035bech32_account_addres"
    "s_prefix\030\001 \001(\tR\032bech32AccountAddressPref"
    "ix\"1\n\rMsgDescriptor\022 \n\014msg_type_url\030\001 \001("
    "\tR\nmsgTypeUrl\"\033\n\031GetAuthnDescriptorReque"
    "st\"d\n\032GetAuthnDescriptorResponse\022F\n\005auth"
    "n\030\001 \001(\01320.cosmos.base.reflection.v2alpha"
    "1.AuthnDescriptorR\005authn\"\033\n\031GetChainDesc"
    "riptorRequest\"d\n\032GetChainDescriptorRespo"
    "nse\022F\n\005chain\030\001 \001(\01320.cosmos.base.reflect"
    "ion.v2alpha1.ChainDescriptorR\005chain\"\033\n\031G"
    "etCodecDescriptorRequest\"d\n\032GetCodecDesc"
    "riptorResponse\022F\n\005codec\030\001 \001(\01320.cosmos.b"
    "ase.reflection.v2alpha1.CodecDescriptorR"
    "\005codec\"#\n!GetConfigurationDescriptorRequ"
    "est\"v\n\"GetConfigurationDescriptorRespons"
    "e\022P\n\006config\030\001 \001(\01328.cosmos.base.reflecti"
    "on.v2alpha1.ConfigurationDescriptorR\006con"
    "fig\"#\n!GetQueryServicesDescriptorRequest"
    "\"x\n\"GetQueryServicesDescriptorResponse\022R"
    "\n\007queries\030\001 \001(\01328.cosmos.base.reflection"
    ".v2alpha1.QueryServicesDescriptorR\007queri"
    "es\"\030\n\026GetTxDescriptorRequest\"X\n\027GetTxDes"
    "criptorResponse\022=\n\002tx\030\001 \001(\0132-.cosmos.bas"
    "e.reflection.v2alpha1.TxDescriptorR\002tx\"y"
    "\n\027QueryServicesDescriptor\022^\n\016query_servi"
    "ces\030\001 \003(\01327.cosmos.base.reflection.v2alp"
    "ha1.QueryServiceDescriptorR\rqueryService"
    "s\"\243\001\n\026QueryServiceDescriptor\022\032\n\010fullname"
    "\030\001 \001(\tR\010fullname\022\033\n\tis_module\030\002 \001(\010R\010isM"
    "odule\022P\n\007methods\030\003 \003(\01326.cosmos.base.ref"
    "lection.v2alpha1.QueryMethodDescriptorR\007"
    "methods\"S\n\025QueryMethodDescriptor\022\022\n\004name"
    "\030\001 \001(\tR\004name\022&\n\017full_query_path\030\002 \001(\tR\rf"
    "ullQueryPath2\247\n\n\021ReflectionService\022\313\001\n\022G"
    "etAuthnDescriptor\022:.cosmos.base.reflecti"
    "on.v2alpha1.GetAuthnDescriptorRequest\032;."
    "cosmos.base.reflection.v2alpha1.GetAuthn"
    "DescriptorResponse\"<\202\323\344\223\0026\0224/cosmos/base"
    "/reflection/v1beta1/app_descriptor/authn"
    "\022\313\001\n\022GetChainDescriptor\022:.cosmos.base.re"
    "flection.v2alpha1.GetChainDescriptorRequ"
    "est\032;.cosmos.base.reflection.v2alpha1.Ge"
    "tChainDescriptorResponse\"<\202\323\344\223\0026\0224/cosmo"
    "s/base/reflection/v1beta1/app_descriptor"
    "/chain\022\313\001\n\022GetCodecDescriptor\022:.cosmos.b"
    "ase.reflection.v2alpha1.GetCodecDescript"
    "orRequest\032;.cosmos.base.reflection.v2alp"
    "ha1.GetCodecDescriptorResponse\"<\202\323\344\223\0026\0224"
    "/cosmos/base/reflection/v1beta1/app_desc"
    "riptor/codec\022\353\001\n\032GetConfigurationDescrip"
    "tor\022B.cosmos.base.reflection.v2alpha1.Ge"
    "tConfigurationDescriptorRequest\032C.cosmos"
    ".base.reflection.v2alpha1.GetConfigurati"
    "onDescriptorResponse\"D\202\323\344\223\002>\022</cosmos/ba"
    "se/reflection/v1beta1/app_descriptor/con"
    "figuration\022\354\001\n\032GetQueryServicesDescripto"
    "r\022B.cosmos.base.reflection.v2alpha1.GetQ"
    "ueryServicesDescriptorRequest\032C.cosmos.b"
    "ase.reflection.v2alpha1.GetQueryServices"
    "DescriptorResponse\"E\202\323\344\223\002\?\022=/cosmos/base"
    "/reflection/v1beta1/app_descriptor/query"
    "_services\022\312\001\n\017GetTxDescriptor\0227.cosmos.b"
    "ase.reflection.v2alpha1.GetTxDescriptorR"
    "equest\0328.cosmos.base.reflection.v2alpha1"
    ".GetTxDescriptorResponse\"D\202\323\344\223\002>\022</cosmo"
    "s/base/reflection/v1beta1/app_descriptor"
    "/tx_descriptorB\223\002\n#com.cosmos.base.refle"
    "ction.v2alpha1B\017ReflectionProtoP\001Z<githu"
    "b.com/cosmos/cosmos-sdk/server/grpc/refl"
    "ection/v2alpha1\242\002\003CBR\252\002\037Cosmos.Base.Refl"
    "ection.V2alpha1\312\002\037Cosmos\\Base\\Reflection"
    "\\V2alpha1\342\002+Cosmos\\Base\\Reflection\\V2alp"
    "ha1\\GPBMetadata\352\002\"Cosmos::Base::Reflecti"
    "on::V2alpha1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_deps[1] =
    {
        &::descriptor_table_google_2fapi_2fannotations_2eproto,
};
static ::absl::once_flag descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto = {
    false,
    false,
    4580,
    descriptor_table_protodef_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto,
    "cosmos/base/reflection/v2alpha1/reflection.proto",
    &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_once,
    descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_deps,
    1,
    26,
    schemas,
    file_default_instances,
    TableStruct_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto::offsets,
    file_level_metadata_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto,
    file_level_enum_descriptors_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto,
    file_level_service_descriptors_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_getter() {
  return &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto(&descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto);
namespace cosmos {
namespace base {
namespace reflection {
namespace v2alpha1 {
// ===================================================================

class AppDescriptor::_Internal {
 public:
  using HasBits = decltype(std::declval<AppDescriptor>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AppDescriptor, _impl_._has_bits_);
  static const ::cosmos::base::reflection::v2alpha1::AuthnDescriptor& authn(const AppDescriptor* msg);
  static void set_has_authn(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::cosmos::base::reflection::v2alpha1::ChainDescriptor& chain(const AppDescriptor* msg);
  static void set_has_chain(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::cosmos::base::reflection::v2alpha1::CodecDescriptor& codec(const AppDescriptor* msg);
  static void set_has_codec(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor& configuration(const AppDescriptor* msg);
  static void set_has_configuration(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor& query_services(const AppDescriptor* msg);
  static void set_has_query_services(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::cosmos::base::reflection::v2alpha1::TxDescriptor& tx(const AppDescriptor* msg);
  static void set_has_tx(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

const ::cosmos::base::reflection::v2alpha1::AuthnDescriptor&
AppDescriptor::_Internal::authn(const AppDescriptor* msg) {
  return *msg->_impl_.authn_;
}
const ::cosmos::base::reflection::v2alpha1::ChainDescriptor&
AppDescriptor::_Internal::chain(const AppDescriptor* msg) {
  return *msg->_impl_.chain_;
}
const ::cosmos::base::reflection::v2alpha1::CodecDescriptor&
AppDescriptor::_Internal::codec(const AppDescriptor* msg) {
  return *msg->_impl_.codec_;
}
const ::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor&
AppDescriptor::_Internal::configuration(const AppDescriptor* msg) {
  return *msg->_impl_.configuration_;
}
const ::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor&
AppDescriptor::_Internal::query_services(const AppDescriptor* msg) {
  return *msg->_impl_.query_services_;
}
const ::cosmos::base::reflection::v2alpha1::TxDescriptor&
AppDescriptor::_Internal::tx(const AppDescriptor* msg) {
  return *msg->_impl_.tx_;
}
AppDescriptor::AppDescriptor(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.base.reflection.v2alpha1.AppDescriptor)
}
AppDescriptor::AppDescriptor(const AppDescriptor& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AppDescriptor* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.authn_){nullptr}
    , decltype(_impl_.chain_){nullptr}
    , decltype(_impl_.codec_){nullptr}
    , decltype(_impl_.configuration_){nullptr}
    , decltype(_impl_.query_services_){nullptr}
    , decltype(_impl_.tx_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.authn_ = new ::cosmos::base::reflection::v2alpha1::AuthnDescriptor(*from._impl_.authn_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.chain_ = new ::cosmos::base::reflection::v2alpha1::ChainDescriptor(*from._impl_.chain_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.codec_ = new ::cosmos::base::reflection::v2alpha1::CodecDescriptor(*from._impl_.codec_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000008u) != 0) {
    _this->_impl_.configuration_ = new ::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor(*from._impl_.configuration_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000010u) != 0) {
    _this->_impl_.query_services_ = new ::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor(*from._impl_.query_services_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000020u) != 0) {
    _this->_impl_.tx_ = new ::cosmos::base::reflection::v2alpha1::TxDescriptor(*from._impl_.tx_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.base.reflection.v2alpha1.AppDescriptor)
}

inline void AppDescriptor::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.authn_){nullptr}
    , decltype(_impl_.chain_){nullptr}
    , decltype(_impl_.codec_){nullptr}
    , decltype(_impl_.configuration_){nullptr}
    , decltype(_impl_.query_services_){nullptr}
    , decltype(_impl_.tx_){nullptr}
  };
}

AppDescriptor::~AppDescriptor() {
  // @@protoc_insertion_point(destructor:cosmos.base.reflection.v2alpha1.AppDescriptor)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AppDescriptor::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.authn_;
  if (this != internal_default_instance()) delete _impl_.chain_;
  if (this != internal_default_instance()) delete _impl_.codec_;
  if (this != internal_default_instance()) delete _impl_.configuration_;
  if (this != internal_default_instance()) delete _impl_.query_services_;
  if (this != internal_default_instance()) delete _impl_.tx_;
}

void AppDescriptor::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AppDescriptor::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.base.reflection.v2alpha1.AppDescriptor)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.authn_ != nullptr);
      _impl_.authn_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.chain_ != nullptr);
      _impl_.chain_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.codec_ != nullptr);
      _impl_.codec_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.configuration_ != nullptr);
      _impl_.configuration_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.query_services_ != nullptr);
      _impl_.query_services_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.tx_ != nullptr);
      _impl_.tx_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AppDescriptor::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cosmos.base.reflection.v2alpha1.AuthnDescriptor authn = 1 [json_name = "authn"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_authn(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.reflection.v2alpha1.ChainDescriptor chain = 2 [json_name = "chain"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_chain(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.reflection.v2alpha1.CodecDescriptor codec = 3 [json_name = "codec"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_codec(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.reflection.v2alpha1.ConfigurationDescriptor configuration = 4 [json_name = "configuration"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_configuration(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.reflection.v2alpha1.QueryServicesDescriptor query_services = 5 [json_name = "queryServices"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_query_services(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.reflection.v2alpha1.TxDescriptor tx = 6 [json_name = "tx"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_tx(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* AppDescriptor::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.base.reflection.v2alpha1.AppDescriptor)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.reflection.v2alpha1.AuthnDescriptor authn = 1 [json_name = "authn"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::authn(this),
        _Internal::authn(this).GetCachedSize(), target, stream);
  }

  // .cosmos.base.reflection.v2alpha1.ChainDescriptor chain = 2 [json_name = "chain"];
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::chain(this),
        _Internal::chain(this).GetCachedSize(), target, stream);
  }

  // .cosmos.base.reflection.v2alpha1.CodecDescriptor codec = 3 [json_name = "codec"];
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::codec(this),
        _Internal::codec(this).GetCachedSize(), target, stream);
  }

  // .cosmos.base.reflection.v2alpha1.ConfigurationDescriptor configuration = 4 [json_name = "configuration"];
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::configuration(this),
        _Internal::configuration(this).GetCachedSize(), target, stream);
  }

  // .cosmos.base.reflection.v2alpha1.QueryServicesDescriptor query_services = 5 [json_name = "queryServices"];
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::query_services(this),
        _Internal::query_services(this).GetCachedSize(), target, stream);
  }

  // .cosmos.base.reflection.v2alpha1.TxDescriptor tx = 6 [json_name = "tx"];
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::tx(this),
        _Internal::tx(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.base.reflection.v2alpha1.AppDescriptor)
  return target;
}

::size_t AppDescriptor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.base.reflection.v2alpha1.AppDescriptor)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // .cosmos.base.reflection.v2alpha1.AuthnDescriptor authn = 1 [json_name = "authn"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.authn_);
    }

    // .cosmos.base.reflection.v2alpha1.ChainDescriptor chain = 2 [json_name = "chain"];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.chain_);
    }

    // .cosmos.base.reflection.v2alpha1.CodecDescriptor codec = 3 [json_name = "codec"];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.codec_);
    }

    // .cosmos.base.reflection.v2alpha1.ConfigurationDescriptor configuration = 4 [json_name = "configuration"];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.configuration_);
    }

    // .cosmos.base.reflection.v2alpha1.QueryServicesDescriptor query_services = 5 [json_name = "queryServices"];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.query_services_);
    }

    // .cosmos.base.reflection.v2alpha1.TxDescriptor tx = 6 [json_name = "tx"];
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.tx_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AppDescriptor::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AppDescriptor::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AppDescriptor::GetClassData() const { return &_class_data_; }


void AppDescriptor::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AppDescriptor*>(&to_msg);
  auto& from = static_cast<const AppDescriptor&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.base.reflection.v2alpha1.AppDescriptor)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_authn()->::cosmos::base::reflection::v2alpha1::AuthnDescriptor::MergeFrom(
          from._internal_authn());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_chain()->::cosmos::base::reflection::v2alpha1::ChainDescriptor::MergeFrom(
          from._internal_chain());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_codec()->::cosmos::base::reflection::v2alpha1::CodecDescriptor::MergeFrom(
          from._internal_codec());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_configuration()->::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor::MergeFrom(
          from._internal_configuration());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_query_services()->::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor::MergeFrom(
          from._internal_query_services());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_tx()->::cosmos::base::reflection::v2alpha1::TxDescriptor::MergeFrom(
          from._internal_tx());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AppDescriptor::CopyFrom(const AppDescriptor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.base.reflection.v2alpha1.AppDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppDescriptor::IsInitialized() const {
  return true;
}

void AppDescriptor::InternalSwap(AppDescriptor* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AppDescriptor, _impl_.tx_)
      + sizeof(AppDescriptor::_impl_.tx_)
      - PROTOBUF_FIELD_OFFSET(AppDescriptor, _impl_.authn_)>(
          reinterpret_cast<char*>(&_impl_.authn_),
          reinterpret_cast<char*>(&other->_impl_.authn_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AppDescriptor::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_getter, &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_once,
      file_level_metadata_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto[0]);
}
// ===================================================================

class TxDescriptor::_Internal {
 public:
};

TxDescriptor::TxDescriptor(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.base.reflection.v2alpha1.TxDescriptor)
}
TxDescriptor::TxDescriptor(const TxDescriptor& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TxDescriptor* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.msgs_){from._impl_.msgs_}
    , decltype(_impl_.fullname_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.fullname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.fullname_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_fullname().empty()) {
    _this->_impl_.fullname_.Set(from._internal_fullname(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.base.reflection.v2alpha1.TxDescriptor)
}

inline void TxDescriptor::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.msgs_){arena}
    , decltype(_impl_.fullname_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.fullname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.fullname_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

TxDescriptor::~TxDescriptor() {
  // @@protoc_insertion_point(destructor:cosmos.base.reflection.v2alpha1.TxDescriptor)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TxDescriptor::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_msgs()->~RepeatedPtrField();
  _impl_.fullname_.Destroy();
}

void TxDescriptor::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TxDescriptor::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.base.reflection.v2alpha1.TxDescriptor)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_msgs()->Clear();
  _impl_.fullname_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TxDescriptor::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string fullname = 1 [json_name = "fullname"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_fullname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.base.reflection.v2alpha1.TxDescriptor.fullname"));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated .cosmos.base.reflection.v2alpha1.MsgDescriptor msgs = 2 [json_name = "msgs"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_msgs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* TxDescriptor::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.base.reflection.v2alpha1.TxDescriptor)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string fullname = 1 [json_name = "fullname"];
  if (!this->_internal_fullname().empty()) {
    const std::string& _s = this->_internal_fullname();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.base.reflection.v2alpha1.TxDescriptor.fullname");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .cosmos.base.reflection.v2alpha1.MsgDescriptor msgs = 2 [json_name = "msgs"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_msgs_size()); i < n; i++) {
    const auto& repfield = this->_internal_msgs(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.base.reflection.v2alpha1.TxDescriptor)
  return target;
}

::size_t TxDescriptor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.base.reflection.v2alpha1.TxDescriptor)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cosmos.base.reflection.v2alpha1.MsgDescriptor msgs = 2 [json_name = "msgs"];
  total_size += 1UL * this->_internal_msgs_size();
  for (const auto& msg : this->_internal_msgs()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string fullname = 1 [json_name = "fullname"];
  if (!this->_internal_fullname().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_fullname());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TxDescriptor::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TxDescriptor::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TxDescriptor::GetClassData() const { return &_class_data_; }


void TxDescriptor::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TxDescriptor*>(&to_msg);
  auto& from = static_cast<const TxDescriptor&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.base.reflection.v2alpha1.TxDescriptor)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_msgs()->MergeFrom(from._internal_msgs());
  if (!from._internal_fullname().empty()) {
    _this->_internal_set_fullname(from._internal_fullname());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TxDescriptor::CopyFrom(const TxDescriptor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.base.reflection.v2alpha1.TxDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TxDescriptor::IsInitialized() const {
  return true;
}

void TxDescriptor::InternalSwap(TxDescriptor* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_msgs()->InternalSwap(other->_internal_mutable_msgs());
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.fullname_, lhs_arena,
                                       &other->_impl_.fullname_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata TxDescriptor::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_getter, &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_once,
      file_level_metadata_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto[1]);
}
// ===================================================================

class AuthnDescriptor::_Internal {
 public:
};

AuthnDescriptor::AuthnDescriptor(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.base.reflection.v2alpha1.AuthnDescriptor)
}
AuthnDescriptor::AuthnDescriptor(const AuthnDescriptor& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AuthnDescriptor* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.sign_modes_){from._impl_.sign_modes_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.base.reflection.v2alpha1.AuthnDescriptor)
}

inline void AuthnDescriptor::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.sign_modes_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AuthnDescriptor::~AuthnDescriptor() {
  // @@protoc_insertion_point(destructor:cosmos.base.reflection.v2alpha1.AuthnDescriptor)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AuthnDescriptor::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_sign_modes()->~RepeatedPtrField();
}

void AuthnDescriptor::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AuthnDescriptor::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.base.reflection.v2alpha1.AuthnDescriptor)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_sign_modes()->Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AuthnDescriptor::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .cosmos.base.reflection.v2alpha1.SigningModeDescriptor sign_modes = 1 [json_name = "signModes"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_sign_modes(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* AuthnDescriptor::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.base.reflection.v2alpha1.AuthnDescriptor)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cosmos.base.reflection.v2alpha1.SigningModeDescriptor sign_modes = 1 [json_name = "signModes"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_sign_modes_size()); i < n; i++) {
    const auto& repfield = this->_internal_sign_modes(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.base.reflection.v2alpha1.AuthnDescriptor)
  return target;
}

::size_t AuthnDescriptor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.base.reflection.v2alpha1.AuthnDescriptor)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cosmos.base.reflection.v2alpha1.SigningModeDescriptor sign_modes = 1 [json_name = "signModes"];
  total_size += 1UL * this->_internal_sign_modes_size();
  for (const auto& msg : this->_internal_sign_modes()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AuthnDescriptor::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AuthnDescriptor::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AuthnDescriptor::GetClassData() const { return &_class_data_; }


void AuthnDescriptor::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AuthnDescriptor*>(&to_msg);
  auto& from = static_cast<const AuthnDescriptor&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.base.reflection.v2alpha1.AuthnDescriptor)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_sign_modes()->MergeFrom(from._internal_sign_modes());
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AuthnDescriptor::CopyFrom(const AuthnDescriptor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.base.reflection.v2alpha1.AuthnDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthnDescriptor::IsInitialized() const {
  return true;
}

void AuthnDescriptor::InternalSwap(AuthnDescriptor* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_sign_modes()->InternalSwap(other->_internal_mutable_sign_modes());
}

::PROTOBUF_NAMESPACE_ID::Metadata AuthnDescriptor::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_getter, &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_once,
      file_level_metadata_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto[2]);
}
// ===================================================================

class SigningModeDescriptor::_Internal {
 public:
};

SigningModeDescriptor::SigningModeDescriptor(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.base.reflection.v2alpha1.SigningModeDescriptor)
}
SigningModeDescriptor::SigningModeDescriptor(const SigningModeDescriptor& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SigningModeDescriptor* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_) {}

    , decltype(_impl_.authn_info_provider_method_fullname_) {}

    , decltype(_impl_.number_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  _impl_.authn_info_provider_method_fullname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.authn_info_provider_method_fullname_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_authn_info_provider_method_fullname().empty()) {
    _this->_impl_.authn_info_provider_method_fullname_.Set(from._internal_authn_info_provider_method_fullname(), _this->GetArenaForAllocation());
  }
  _this->_impl_.number_ = from._impl_.number_;
  // @@protoc_insertion_point(copy_constructor:cosmos.base.reflection.v2alpha1.SigningModeDescriptor)
}

inline void SigningModeDescriptor::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.name_) {}

    , decltype(_impl_.authn_info_provider_method_fullname_) {}

    , decltype(_impl_.number_) { 0 }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.authn_info_provider_method_fullname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.authn_info_provider_method_fullname_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SigningModeDescriptor::~SigningModeDescriptor() {
  // @@protoc_insertion_point(destructor:cosmos.base.reflection.v2alpha1.SigningModeDescriptor)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SigningModeDescriptor::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.authn_info_provider_method_fullname_.Destroy();
}

void SigningModeDescriptor::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SigningModeDescriptor::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.base.reflection.v2alpha1.SigningModeDescriptor)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.authn_info_provider_method_fullname_.ClearToEmpty();
  _impl_.number_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SigningModeDescriptor::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.base.reflection.v2alpha1.SigningModeDescriptor.name"));
        } else {
          goto handle_unusual;
        }
        continue;
      // int32 number = 2 [json_name = "number"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          _impl_.number_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string authn_info_provider_method_fullname = 3 [json_name = "authnInfoProviderMethodFullname"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_authn_info_provider_method_fullname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.base.reflection.v2alpha1.SigningModeDescriptor.authn_info_provider_method_fullname"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* SigningModeDescriptor::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.base.reflection.v2alpha1.SigningModeDescriptor)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.base.reflection.v2alpha1.SigningModeDescriptor.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int32 number = 2 [json_name = "number"];
  if (this->_internal_number() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        2, this->_internal_number(), target);
  }

  // string authn_info_provider_method_fullname = 3 [json_name = "authnInfoProviderMethodFullname"];
  if (!this->_internal_authn_info_provider_method_fullname().empty()) {
    const std::string& _s = this->_internal_authn_info_provider_method_fullname();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.base.reflection.v2alpha1.SigningModeDescriptor.authn_info_provider_method_fullname");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.base.reflection.v2alpha1.SigningModeDescriptor)
  return target;
}

::size_t SigningModeDescriptor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.base.reflection.v2alpha1.SigningModeDescriptor)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string authn_info_provider_method_fullname = 3 [json_name = "authnInfoProviderMethodFullname"];
  if (!this->_internal_authn_info_provider_method_fullname().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_authn_info_provider_method_fullname());
  }

  // int32 number = 2 [json_name = "number"];
  if (this->_internal_number() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_number());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SigningModeDescriptor::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SigningModeDescriptor::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SigningModeDescriptor::GetClassData() const { return &_class_data_; }


void SigningModeDescriptor::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SigningModeDescriptor*>(&to_msg);
  auto& from = static_cast<const SigningModeDescriptor&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.base.reflection.v2alpha1.SigningModeDescriptor)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_authn_info_provider_method_fullname().empty()) {
    _this->_internal_set_authn_info_provider_method_fullname(from._internal_authn_info_provider_method_fullname());
  }
  if (from._internal_number() != 0) {
    _this->_internal_set_number(from._internal_number());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SigningModeDescriptor::CopyFrom(const SigningModeDescriptor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.base.reflection.v2alpha1.SigningModeDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SigningModeDescriptor::IsInitialized() const {
  return true;
}

void SigningModeDescriptor::InternalSwap(SigningModeDescriptor* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.authn_info_provider_method_fullname_, lhs_arena,
                                       &other->_impl_.authn_info_provider_method_fullname_, rhs_arena);

  swap(_impl_.number_, other->_impl_.number_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SigningModeDescriptor::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_getter, &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_once,
      file_level_metadata_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto[3]);
}
// ===================================================================

class ChainDescriptor::_Internal {
 public:
};

ChainDescriptor::ChainDescriptor(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.base.reflection.v2alpha1.ChainDescriptor)
}
ChainDescriptor::ChainDescriptor(const ChainDescriptor& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ChainDescriptor* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.base.reflection.v2alpha1.ChainDescriptor)
}

inline void ChainDescriptor::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.id_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ChainDescriptor::~ChainDescriptor() {
  // @@protoc_insertion_point(destructor:cosmos.base.reflection.v2alpha1.ChainDescriptor)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ChainDescriptor::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.id_.Destroy();
}

void ChainDescriptor::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ChainDescriptor::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.base.reflection.v2alpha1.ChainDescriptor)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChainDescriptor::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.base.reflection.v2alpha1.ChainDescriptor.id"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* ChainDescriptor::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.base.reflection.v2alpha1.ChainDescriptor)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    const std::string& _s = this->_internal_id();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.base.reflection.v2alpha1.ChainDescriptor.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.base.reflection.v2alpha1.ChainDescriptor)
  return target;
}

::size_t ChainDescriptor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.base.reflection.v2alpha1.ChainDescriptor)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ChainDescriptor::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ChainDescriptor::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ChainDescriptor::GetClassData() const { return &_class_data_; }


void ChainDescriptor::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ChainDescriptor*>(&to_msg);
  auto& from = static_cast<const ChainDescriptor&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.base.reflection.v2alpha1.ChainDescriptor)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ChainDescriptor::CopyFrom(const ChainDescriptor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.base.reflection.v2alpha1.ChainDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChainDescriptor::IsInitialized() const {
  return true;
}

void ChainDescriptor::InternalSwap(ChainDescriptor* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, lhs_arena,
                                       &other->_impl_.id_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata ChainDescriptor::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_getter, &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_once,
      file_level_metadata_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto[4]);
}
// ===================================================================

class CodecDescriptor::_Internal {
 public:
};

CodecDescriptor::CodecDescriptor(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.base.reflection.v2alpha1.CodecDescriptor)
}
CodecDescriptor::CodecDescriptor(const CodecDescriptor& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CodecDescriptor* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.interfaces_){from._impl_.interfaces_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.base.reflection.v2alpha1.CodecDescriptor)
}

inline void CodecDescriptor::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.interfaces_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CodecDescriptor::~CodecDescriptor() {
  // @@protoc_insertion_point(destructor:cosmos.base.reflection.v2alpha1.CodecDescriptor)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CodecDescriptor::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_interfaces()->~RepeatedPtrField();
}

void CodecDescriptor::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CodecDescriptor::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.base.reflection.v2alpha1.CodecDescriptor)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_interfaces()->Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CodecDescriptor::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .cosmos.base.reflection.v2alpha1.InterfaceDescriptor interfaces = 1 [json_name = "interfaces"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_interfaces(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* CodecDescriptor::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.base.reflection.v2alpha1.CodecDescriptor)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cosmos.base.reflection.v2alpha1.InterfaceDescriptor interfaces = 1 [json_name = "interfaces"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_interfaces_size()); i < n; i++) {
    const auto& repfield = this->_internal_interfaces(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.base.reflection.v2alpha1.CodecDescriptor)
  return target;
}

::size_t CodecDescriptor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.base.reflection.v2alpha1.CodecDescriptor)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cosmos.base.reflection.v2alpha1.InterfaceDescriptor interfaces = 1 [json_name = "interfaces"];
  total_size += 1UL * this->_internal_interfaces_size();
  for (const auto& msg : this->_internal_interfaces()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CodecDescriptor::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CodecDescriptor::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CodecDescriptor::GetClassData() const { return &_class_data_; }


void CodecDescriptor::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CodecDescriptor*>(&to_msg);
  auto& from = static_cast<const CodecDescriptor&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.base.reflection.v2alpha1.CodecDescriptor)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_interfaces()->MergeFrom(from._internal_interfaces());
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CodecDescriptor::CopyFrom(const CodecDescriptor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.base.reflection.v2alpha1.CodecDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CodecDescriptor::IsInitialized() const {
  return true;
}

void CodecDescriptor::InternalSwap(CodecDescriptor* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_interfaces()->InternalSwap(other->_internal_mutable_interfaces());
}

::PROTOBUF_NAMESPACE_ID::Metadata CodecDescriptor::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_getter, &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_once,
      file_level_metadata_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto[5]);
}
// ===================================================================

class InterfaceDescriptor::_Internal {
 public:
};

InterfaceDescriptor::InterfaceDescriptor(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.base.reflection.v2alpha1.InterfaceDescriptor)
}
InterfaceDescriptor::InterfaceDescriptor(const InterfaceDescriptor& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  InterfaceDescriptor* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.interface_accepting_messages_){from._impl_.interface_accepting_messages_}
    , decltype(_impl_.interface_implementers_){from._impl_.interface_implementers_}
    , decltype(_impl_.fullname_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.fullname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.fullname_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_fullname().empty()) {
    _this->_impl_.fullname_.Set(from._internal_fullname(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.base.reflection.v2alpha1.InterfaceDescriptor)
}

inline void InterfaceDescriptor::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.interface_accepting_messages_){arena}
    , decltype(_impl_.interface_implementers_){arena}
    , decltype(_impl_.fullname_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.fullname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.fullname_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

InterfaceDescriptor::~InterfaceDescriptor() {
  // @@protoc_insertion_point(destructor:cosmos.base.reflection.v2alpha1.InterfaceDescriptor)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InterfaceDescriptor::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_interface_accepting_messages()->~RepeatedPtrField();
  _internal_mutable_interface_implementers()->~RepeatedPtrField();
  _impl_.fullname_.Destroy();
}

void InterfaceDescriptor::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void InterfaceDescriptor::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.base.reflection.v2alpha1.InterfaceDescriptor)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_interface_accepting_messages()->Clear();
  _internal_mutable_interface_implementers()->Clear();
  _impl_.fullname_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InterfaceDescriptor::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string fullname = 1 [json_name = "fullname"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_fullname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.base.reflection.v2alpha1.InterfaceDescriptor.fullname"));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated .cosmos.base.reflection.v2alpha1.InterfaceAcceptingMessageDescriptor interface_accepting_messages = 2 [json_name = "interfaceAcceptingMessages"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_interface_accepting_messages(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated .cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor interface_implementers = 3 [json_name = "interfaceImplementers"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_interface_implementers(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* InterfaceDescriptor::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.base.reflection.v2alpha1.InterfaceDescriptor)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string fullname = 1 [json_name = "fullname"];
  if (!this->_internal_fullname().empty()) {
    const std::string& _s = this->_internal_fullname();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.base.reflection.v2alpha1.InterfaceDescriptor.fullname");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .cosmos.base.reflection.v2alpha1.InterfaceAcceptingMessageDescriptor interface_accepting_messages = 2 [json_name = "interfaceAcceptingMessages"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_interface_accepting_messages_size()); i < n; i++) {
    const auto& repfield = this->_internal_interface_accepting_messages(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor interface_implementers = 3 [json_name = "interfaceImplementers"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_interface_implementers_size()); i < n; i++) {
    const auto& repfield = this->_internal_interface_implementers(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.base.reflection.v2alpha1.InterfaceDescriptor)
  return target;
}

::size_t InterfaceDescriptor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.base.reflection.v2alpha1.InterfaceDescriptor)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cosmos.base.reflection.v2alpha1.InterfaceAcceptingMessageDescriptor interface_accepting_messages = 2 [json_name = "interfaceAcceptingMessages"];
  total_size += 1UL * this->_internal_interface_accepting_messages_size();
  for (const auto& msg : this->_internal_interface_accepting_messages()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor interface_implementers = 3 [json_name = "interfaceImplementers"];
  total_size += 1UL * this->_internal_interface_implementers_size();
  for (const auto& msg : this->_internal_interface_implementers()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string fullname = 1 [json_name = "fullname"];
  if (!this->_internal_fullname().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_fullname());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InterfaceDescriptor::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    InterfaceDescriptor::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InterfaceDescriptor::GetClassData() const { return &_class_data_; }


void InterfaceDescriptor::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<InterfaceDescriptor*>(&to_msg);
  auto& from = static_cast<const InterfaceDescriptor&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.base.reflection.v2alpha1.InterfaceDescriptor)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_interface_accepting_messages()->MergeFrom(from._internal_interface_accepting_messages());
  _this->_internal_mutable_interface_implementers()->MergeFrom(from._internal_interface_implementers());
  if (!from._internal_fullname().empty()) {
    _this->_internal_set_fullname(from._internal_fullname());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InterfaceDescriptor::CopyFrom(const InterfaceDescriptor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.base.reflection.v2alpha1.InterfaceDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InterfaceDescriptor::IsInitialized() const {
  return true;
}

void InterfaceDescriptor::InternalSwap(InterfaceDescriptor* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_interface_accepting_messages()->InternalSwap(other->_internal_mutable_interface_accepting_messages());
  _internal_mutable_interface_implementers()->InternalSwap(other->_internal_mutable_interface_implementers());
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.fullname_, lhs_arena,
                                       &other->_impl_.fullname_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata InterfaceDescriptor::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_getter, &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_once,
      file_level_metadata_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto[6]);
}
// ===================================================================

class InterfaceImplementerDescriptor::_Internal {
 public:
};

InterfaceImplementerDescriptor::InterfaceImplementerDescriptor(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor)
}
InterfaceImplementerDescriptor::InterfaceImplementerDescriptor(const InterfaceImplementerDescriptor& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  InterfaceImplementerDescriptor* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.fullname_) {}

    , decltype(_impl_.type_url_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.fullname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.fullname_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_fullname().empty()) {
    _this->_impl_.fullname_.Set(from._internal_fullname(), _this->GetArenaForAllocation());
  }
  _impl_.type_url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.type_url_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_type_url().empty()) {
    _this->_impl_.type_url_.Set(from._internal_type_url(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor)
}

inline void InterfaceImplementerDescriptor::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.fullname_) {}

    , decltype(_impl_.type_url_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.fullname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.fullname_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.type_url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.type_url_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

InterfaceImplementerDescriptor::~InterfaceImplementerDescriptor() {
  // @@protoc_insertion_point(destructor:cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InterfaceImplementerDescriptor::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.fullname_.Destroy();
  _impl_.type_url_.Destroy();
}

void InterfaceImplementerDescriptor::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void InterfaceImplementerDescriptor::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.fullname_.ClearToEmpty();
  _impl_.type_url_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InterfaceImplementerDescriptor::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string fullname = 1 [json_name = "fullname"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_fullname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor.fullname"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string type_url = 2 [json_name = "typeUrl"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_type_url();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor.type_url"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* InterfaceImplementerDescriptor::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string fullname = 1 [json_name = "fullname"];
  if (!this->_internal_fullname().empty()) {
    const std::string& _s = this->_internal_fullname();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor.fullname");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string type_url = 2 [json_name = "typeUrl"];
  if (!this->_internal_type_url().empty()) {
    const std::string& _s = this->_internal_type_url();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor.type_url");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor)
  return target;
}

::size_t InterfaceImplementerDescriptor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string fullname = 1 [json_name = "fullname"];
  if (!this->_internal_fullname().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_fullname());
  }

  // string type_url = 2 [json_name = "typeUrl"];
  if (!this->_internal_type_url().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_type_url());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InterfaceImplementerDescriptor::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    InterfaceImplementerDescriptor::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InterfaceImplementerDescriptor::GetClassData() const { return &_class_data_; }


void InterfaceImplementerDescriptor::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<InterfaceImplementerDescriptor*>(&to_msg);
  auto& from = static_cast<const InterfaceImplementerDescriptor&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_fullname().empty()) {
    _this->_internal_set_fullname(from._internal_fullname());
  }
  if (!from._internal_type_url().empty()) {
    _this->_internal_set_type_url(from._internal_type_url());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InterfaceImplementerDescriptor::CopyFrom(const InterfaceImplementerDescriptor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InterfaceImplementerDescriptor::IsInitialized() const {
  return true;
}

void InterfaceImplementerDescriptor::InternalSwap(InterfaceImplementerDescriptor* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.fullname_, lhs_arena,
                                       &other->_impl_.fullname_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_url_, lhs_arena,
                                       &other->_impl_.type_url_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata InterfaceImplementerDescriptor::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_getter, &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_once,
      file_level_metadata_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto[7]);
}
// ===================================================================

class InterfaceAcceptingMessageDescriptor::_Internal {
 public:
};

InterfaceAcceptingMessageDescriptor::InterfaceAcceptingMessageDescriptor(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.base.reflection.v2alpha1.InterfaceAcceptingMessageDescriptor)
}
InterfaceAcceptingMessageDescriptor::InterfaceAcceptingMessageDescriptor(const InterfaceAcceptingMessageDescriptor& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  InterfaceAcceptingMessageDescriptor* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.field_descriptor_names_){from._impl_.field_descriptor_names_}
    , decltype(_impl_.fullname_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.fullname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.fullname_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_fullname().empty()) {
    _this->_impl_.fullname_.Set(from._internal_fullname(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.base.reflection.v2alpha1.InterfaceAcceptingMessageDescriptor)
}

inline void InterfaceAcceptingMessageDescriptor::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.field_descriptor_names_){arena}
    , decltype(_impl_.fullname_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.fullname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.fullname_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

InterfaceAcceptingMessageDescriptor::~InterfaceAcceptingMessageDescriptor() {
  // @@protoc_insertion_point(destructor:cosmos.base.reflection.v2alpha1.InterfaceAcceptingMessageDescriptor)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InterfaceAcceptingMessageDescriptor::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_field_descriptor_names()->~RepeatedPtrField();
  _impl_.fullname_.Destroy();
}

void InterfaceAcceptingMessageDescriptor::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void InterfaceAcceptingMessageDescriptor::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.base.reflection.v2alpha1.InterfaceAcceptingMessageDescriptor)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_field_descriptor_names()->Clear();
  _impl_.fullname_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InterfaceAcceptingMessageDescriptor::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string fullname = 1 [json_name = "fullname"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_fullname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.base.reflection.v2alpha1.InterfaceAcceptingMessageDescriptor.fullname"));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated string field_descriptor_names = 2 [json_name = "fieldDescriptorNames"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_field_descriptor_names();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "cosmos.base.reflection.v2alpha1.InterfaceAcceptingMessageDescriptor.field_descriptor_names"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* InterfaceAcceptingMessageDescriptor::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.base.reflection.v2alpha1.InterfaceAcceptingMessageDescriptor)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string fullname = 1 [json_name = "fullname"];
  if (!this->_internal_fullname().empty()) {
    const std::string& _s = this->_internal_fullname();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.base.reflection.v2alpha1.InterfaceAcceptingMessageDescriptor.fullname");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated string field_descriptor_names = 2 [json_name = "fieldDescriptorNames"];
  for (int i = 0, n = this->_internal_field_descriptor_names_size(); i < n; ++i) {
    const auto& s = this->_internal_field_descriptor_names(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.base.reflection.v2alpha1.InterfaceAcceptingMessageDescriptor.field_descriptor_names");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.base.reflection.v2alpha1.InterfaceAcceptingMessageDescriptor)
  return target;
}

::size_t InterfaceAcceptingMessageDescriptor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.base.reflection.v2alpha1.InterfaceAcceptingMessageDescriptor)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string field_descriptor_names = 2 [json_name = "fieldDescriptorNames"];
  total_size += 1 * ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_internal_field_descriptor_names().size());
  for (int i = 0, n = _internal_field_descriptor_names().size(); i < n; ++i) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        _internal_field_descriptor_names().Get(i));
  }

  // string fullname = 1 [json_name = "fullname"];
  if (!this->_internal_fullname().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_fullname());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InterfaceAcceptingMessageDescriptor::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    InterfaceAcceptingMessageDescriptor::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InterfaceAcceptingMessageDescriptor::GetClassData() const { return &_class_data_; }


void InterfaceAcceptingMessageDescriptor::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<InterfaceAcceptingMessageDescriptor*>(&to_msg);
  auto& from = static_cast<const InterfaceAcceptingMessageDescriptor&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.base.reflection.v2alpha1.InterfaceAcceptingMessageDescriptor)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_field_descriptor_names()->MergeFrom(from._internal_field_descriptor_names());
  if (!from._internal_fullname().empty()) {
    _this->_internal_set_fullname(from._internal_fullname());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InterfaceAcceptingMessageDescriptor::CopyFrom(const InterfaceAcceptingMessageDescriptor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.base.reflection.v2alpha1.InterfaceAcceptingMessageDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InterfaceAcceptingMessageDescriptor::IsInitialized() const {
  return true;
}

void InterfaceAcceptingMessageDescriptor::InternalSwap(InterfaceAcceptingMessageDescriptor* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_field_descriptor_names()->InternalSwap(
      other->_internal_mutable_field_descriptor_names());
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.fullname_, lhs_arena,
                                       &other->_impl_.fullname_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata InterfaceAcceptingMessageDescriptor::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_getter, &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_once,
      file_level_metadata_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto[8]);
}
// ===================================================================

class ConfigurationDescriptor::_Internal {
 public:
};

ConfigurationDescriptor::ConfigurationDescriptor(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.base.reflection.v2alpha1.ConfigurationDescriptor)
}
ConfigurationDescriptor::ConfigurationDescriptor(const ConfigurationDescriptor& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ConfigurationDescriptor* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.bech32_account_address_prefix_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.bech32_account_address_prefix_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.bech32_account_address_prefix_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_bech32_account_address_prefix().empty()) {
    _this->_impl_.bech32_account_address_prefix_.Set(from._internal_bech32_account_address_prefix(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.base.reflection.v2alpha1.ConfigurationDescriptor)
}

inline void ConfigurationDescriptor::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.bech32_account_address_prefix_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.bech32_account_address_prefix_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.bech32_account_address_prefix_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ConfigurationDescriptor::~ConfigurationDescriptor() {
  // @@protoc_insertion_point(destructor:cosmos.base.reflection.v2alpha1.ConfigurationDescriptor)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ConfigurationDescriptor::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.bech32_account_address_prefix_.Destroy();
}

void ConfigurationDescriptor::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ConfigurationDescriptor::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.base.reflection.v2alpha1.ConfigurationDescriptor)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bech32_account_address_prefix_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ConfigurationDescriptor::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string bech32_account_address_prefix = 1 [json_name = "bech32AccountAddressPrefix"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_bech32_account_address_prefix();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.base.reflection.v2alpha1.ConfigurationDescriptor.bech32_account_address_prefix"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* ConfigurationDescriptor::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.base.reflection.v2alpha1.ConfigurationDescriptor)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string bech32_account_address_prefix = 1 [json_name = "bech32AccountAddressPrefix"];
  if (!this->_internal_bech32_account_address_prefix().empty()) {
    const std::string& _s = this->_internal_bech32_account_address_prefix();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.base.reflection.v2alpha1.ConfigurationDescriptor.bech32_account_address_prefix");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.base.reflection.v2alpha1.ConfigurationDescriptor)
  return target;
}

::size_t ConfigurationDescriptor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.base.reflection.v2alpha1.ConfigurationDescriptor)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string bech32_account_address_prefix = 1 [json_name = "bech32AccountAddressPrefix"];
  if (!this->_internal_bech32_account_address_prefix().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_bech32_account_address_prefix());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ConfigurationDescriptor::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ConfigurationDescriptor::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ConfigurationDescriptor::GetClassData() const { return &_class_data_; }


void ConfigurationDescriptor::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ConfigurationDescriptor*>(&to_msg);
  auto& from = static_cast<const ConfigurationDescriptor&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.base.reflection.v2alpha1.ConfigurationDescriptor)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_bech32_account_address_prefix().empty()) {
    _this->_internal_set_bech32_account_address_prefix(from._internal_bech32_account_address_prefix());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ConfigurationDescriptor::CopyFrom(const ConfigurationDescriptor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.base.reflection.v2alpha1.ConfigurationDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigurationDescriptor::IsInitialized() const {
  return true;
}

void ConfigurationDescriptor::InternalSwap(ConfigurationDescriptor* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.bech32_account_address_prefix_, lhs_arena,
                                       &other->_impl_.bech32_account_address_prefix_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata ConfigurationDescriptor::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_getter, &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_once,
      file_level_metadata_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto[9]);
}
// ===================================================================

class MsgDescriptor::_Internal {
 public:
};

MsgDescriptor::MsgDescriptor(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.base.reflection.v2alpha1.MsgDescriptor)
}
MsgDescriptor::MsgDescriptor(const MsgDescriptor& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgDescriptor* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.msg_type_url_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.msg_type_url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.msg_type_url_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_msg_type_url().empty()) {
    _this->_impl_.msg_type_url_.Set(from._internal_msg_type_url(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.base.reflection.v2alpha1.MsgDescriptor)
}

inline void MsgDescriptor::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.msg_type_url_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.msg_type_url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.msg_type_url_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgDescriptor::~MsgDescriptor() {
  // @@protoc_insertion_point(destructor:cosmos.base.reflection.v2alpha1.MsgDescriptor)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgDescriptor::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.msg_type_url_.Destroy();
}

void MsgDescriptor::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgDescriptor::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.base.reflection.v2alpha1.MsgDescriptor)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.msg_type_url_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgDescriptor::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string msg_type_url = 1 [json_name = "msgTypeUrl"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_msg_type_url();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.base.reflection.v2alpha1.MsgDescriptor.msg_type_url"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgDescriptor::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.base.reflection.v2alpha1.MsgDescriptor)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg_type_url = 1 [json_name = "msgTypeUrl"];
  if (!this->_internal_msg_type_url().empty()) {
    const std::string& _s = this->_internal_msg_type_url();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.base.reflection.v2alpha1.MsgDescriptor.msg_type_url");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.base.reflection.v2alpha1.MsgDescriptor)
  return target;
}

::size_t MsgDescriptor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.base.reflection.v2alpha1.MsgDescriptor)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg_type_url = 1 [json_name = "msgTypeUrl"];
  if (!this->_internal_msg_type_url().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_msg_type_url());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgDescriptor::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgDescriptor::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgDescriptor::GetClassData() const { return &_class_data_; }


void MsgDescriptor::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgDescriptor*>(&to_msg);
  auto& from = static_cast<const MsgDescriptor&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.base.reflection.v2alpha1.MsgDescriptor)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_msg_type_url().empty()) {
    _this->_internal_set_msg_type_url(from._internal_msg_type_url());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgDescriptor::CopyFrom(const MsgDescriptor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.base.reflection.v2alpha1.MsgDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDescriptor::IsInitialized() const {
  return true;
}

void MsgDescriptor::InternalSwap(MsgDescriptor* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.msg_type_url_, lhs_arena,
                                       &other->_impl_.msg_type_url_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgDescriptor::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_getter, &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_once,
      file_level_metadata_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto[10]);
}
// ===================================================================

class GetAuthnDescriptorRequest::_Internal {
 public:
};

GetAuthnDescriptorRequest::GetAuthnDescriptorRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cosmos.base.reflection.v2alpha1.GetAuthnDescriptorRequest)
}
GetAuthnDescriptorRequest::GetAuthnDescriptorRequest(const GetAuthnDescriptorRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetAuthnDescriptorRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.base.reflection.v2alpha1.GetAuthnDescriptorRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetAuthnDescriptorRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetAuthnDescriptorRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetAuthnDescriptorRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_getter, &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_once,
      file_level_metadata_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto[11]);
}
// ===================================================================

class GetAuthnDescriptorResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GetAuthnDescriptorResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GetAuthnDescriptorResponse, _impl_._has_bits_);
  static const ::cosmos::base::reflection::v2alpha1::AuthnDescriptor& authn(const GetAuthnDescriptorResponse* msg);
  static void set_has_authn(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::reflection::v2alpha1::AuthnDescriptor&
GetAuthnDescriptorResponse::_Internal::authn(const GetAuthnDescriptorResponse* msg) {
  return *msg->_impl_.authn_;
}
GetAuthnDescriptorResponse::GetAuthnDescriptorResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.base.reflection.v2alpha1.GetAuthnDescriptorResponse)
}
GetAuthnDescriptorResponse::GetAuthnDescriptorResponse(const GetAuthnDescriptorResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetAuthnDescriptorResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.authn_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.authn_ = new ::cosmos::base::reflection::v2alpha1::AuthnDescriptor(*from._impl_.authn_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.base.reflection.v2alpha1.GetAuthnDescriptorResponse)
}

inline void GetAuthnDescriptorResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.authn_){nullptr}
  };
}

GetAuthnDescriptorResponse::~GetAuthnDescriptorResponse() {
  // @@protoc_insertion_point(destructor:cosmos.base.reflection.v2alpha1.GetAuthnDescriptorResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetAuthnDescriptorResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.authn_;
}

void GetAuthnDescriptorResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetAuthnDescriptorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.base.reflection.v2alpha1.GetAuthnDescriptorResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.authn_ != nullptr);
    _impl_.authn_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAuthnDescriptorResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cosmos.base.reflection.v2alpha1.AuthnDescriptor authn = 1 [json_name = "authn"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_authn(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* GetAuthnDescriptorResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.base.reflection.v2alpha1.GetAuthnDescriptorResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.reflection.v2alpha1.AuthnDescriptor authn = 1 [json_name = "authn"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::authn(this),
        _Internal::authn(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.base.reflection.v2alpha1.GetAuthnDescriptorResponse)
  return target;
}

::size_t GetAuthnDescriptorResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.base.reflection.v2alpha1.GetAuthnDescriptorResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cosmos.base.reflection.v2alpha1.AuthnDescriptor authn = 1 [json_name = "authn"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.authn_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetAuthnDescriptorResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetAuthnDescriptorResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetAuthnDescriptorResponse::GetClassData() const { return &_class_data_; }


void GetAuthnDescriptorResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetAuthnDescriptorResponse*>(&to_msg);
  auto& from = static_cast<const GetAuthnDescriptorResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.base.reflection.v2alpha1.GetAuthnDescriptorResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_authn()->::cosmos::base::reflection::v2alpha1::AuthnDescriptor::MergeFrom(
        from._internal_authn());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetAuthnDescriptorResponse::CopyFrom(const GetAuthnDescriptorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.base.reflection.v2alpha1.GetAuthnDescriptorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAuthnDescriptorResponse::IsInitialized() const {
  return true;
}

void GetAuthnDescriptorResponse::InternalSwap(GetAuthnDescriptorResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.authn_, other->_impl_.authn_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAuthnDescriptorResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_getter, &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_once,
      file_level_metadata_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto[12]);
}
// ===================================================================

class GetChainDescriptorRequest::_Internal {
 public:
};

GetChainDescriptorRequest::GetChainDescriptorRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cosmos.base.reflection.v2alpha1.GetChainDescriptorRequest)
}
GetChainDescriptorRequest::GetChainDescriptorRequest(const GetChainDescriptorRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetChainDescriptorRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.base.reflection.v2alpha1.GetChainDescriptorRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetChainDescriptorRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetChainDescriptorRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetChainDescriptorRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_getter, &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_once,
      file_level_metadata_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto[13]);
}
// ===================================================================

class GetChainDescriptorResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GetChainDescriptorResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GetChainDescriptorResponse, _impl_._has_bits_);
  static const ::cosmos::base::reflection::v2alpha1::ChainDescriptor& chain(const GetChainDescriptorResponse* msg);
  static void set_has_chain(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::reflection::v2alpha1::ChainDescriptor&
GetChainDescriptorResponse::_Internal::chain(const GetChainDescriptorResponse* msg) {
  return *msg->_impl_.chain_;
}
GetChainDescriptorResponse::GetChainDescriptorResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.base.reflection.v2alpha1.GetChainDescriptorResponse)
}
GetChainDescriptorResponse::GetChainDescriptorResponse(const GetChainDescriptorResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetChainDescriptorResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.chain_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.chain_ = new ::cosmos::base::reflection::v2alpha1::ChainDescriptor(*from._impl_.chain_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.base.reflection.v2alpha1.GetChainDescriptorResponse)
}

inline void GetChainDescriptorResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.chain_){nullptr}
  };
}

GetChainDescriptorResponse::~GetChainDescriptorResponse() {
  // @@protoc_insertion_point(destructor:cosmos.base.reflection.v2alpha1.GetChainDescriptorResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetChainDescriptorResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.chain_;
}

void GetChainDescriptorResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetChainDescriptorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.base.reflection.v2alpha1.GetChainDescriptorResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.chain_ != nullptr);
    _impl_.chain_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetChainDescriptorResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cosmos.base.reflection.v2alpha1.ChainDescriptor chain = 1 [json_name = "chain"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_chain(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* GetChainDescriptorResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.base.reflection.v2alpha1.GetChainDescriptorResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.reflection.v2alpha1.ChainDescriptor chain = 1 [json_name = "chain"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::chain(this),
        _Internal::chain(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.base.reflection.v2alpha1.GetChainDescriptorResponse)
  return target;
}

::size_t GetChainDescriptorResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.base.reflection.v2alpha1.GetChainDescriptorResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cosmos.base.reflection.v2alpha1.ChainDescriptor chain = 1 [json_name = "chain"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.chain_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetChainDescriptorResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetChainDescriptorResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetChainDescriptorResponse::GetClassData() const { return &_class_data_; }


void GetChainDescriptorResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetChainDescriptorResponse*>(&to_msg);
  auto& from = static_cast<const GetChainDescriptorResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.base.reflection.v2alpha1.GetChainDescriptorResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_chain()->::cosmos::base::reflection::v2alpha1::ChainDescriptor::MergeFrom(
        from._internal_chain());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetChainDescriptorResponse::CopyFrom(const GetChainDescriptorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.base.reflection.v2alpha1.GetChainDescriptorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetChainDescriptorResponse::IsInitialized() const {
  return true;
}

void GetChainDescriptorResponse::InternalSwap(GetChainDescriptorResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.chain_, other->_impl_.chain_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetChainDescriptorResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_getter, &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_once,
      file_level_metadata_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto[14]);
}
// ===================================================================

class GetCodecDescriptorRequest::_Internal {
 public:
};

GetCodecDescriptorRequest::GetCodecDescriptorRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cosmos.base.reflection.v2alpha1.GetCodecDescriptorRequest)
}
GetCodecDescriptorRequest::GetCodecDescriptorRequest(const GetCodecDescriptorRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetCodecDescriptorRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.base.reflection.v2alpha1.GetCodecDescriptorRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetCodecDescriptorRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetCodecDescriptorRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetCodecDescriptorRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_getter, &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_once,
      file_level_metadata_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto[15]);
}
// ===================================================================

class GetCodecDescriptorResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GetCodecDescriptorResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GetCodecDescriptorResponse, _impl_._has_bits_);
  static const ::cosmos::base::reflection::v2alpha1::CodecDescriptor& codec(const GetCodecDescriptorResponse* msg);
  static void set_has_codec(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::reflection::v2alpha1::CodecDescriptor&
GetCodecDescriptorResponse::_Internal::codec(const GetCodecDescriptorResponse* msg) {
  return *msg->_impl_.codec_;
}
GetCodecDescriptorResponse::GetCodecDescriptorResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.base.reflection.v2alpha1.GetCodecDescriptorResponse)
}
GetCodecDescriptorResponse::GetCodecDescriptorResponse(const GetCodecDescriptorResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetCodecDescriptorResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.codec_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.codec_ = new ::cosmos::base::reflection::v2alpha1::CodecDescriptor(*from._impl_.codec_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.base.reflection.v2alpha1.GetCodecDescriptorResponse)
}

inline void GetCodecDescriptorResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.codec_){nullptr}
  };
}

GetCodecDescriptorResponse::~GetCodecDescriptorResponse() {
  // @@protoc_insertion_point(destructor:cosmos.base.reflection.v2alpha1.GetCodecDescriptorResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetCodecDescriptorResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.codec_;
}

void GetCodecDescriptorResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetCodecDescriptorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.base.reflection.v2alpha1.GetCodecDescriptorResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.codec_ != nullptr);
    _impl_.codec_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetCodecDescriptorResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cosmos.base.reflection.v2alpha1.CodecDescriptor codec = 1 [json_name = "codec"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_codec(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* GetCodecDescriptorResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.base.reflection.v2alpha1.GetCodecDescriptorResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.reflection.v2alpha1.CodecDescriptor codec = 1 [json_name = "codec"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::codec(this),
        _Internal::codec(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.base.reflection.v2alpha1.GetCodecDescriptorResponse)
  return target;
}

::size_t GetCodecDescriptorResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.base.reflection.v2alpha1.GetCodecDescriptorResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cosmos.base.reflection.v2alpha1.CodecDescriptor codec = 1 [json_name = "codec"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.codec_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetCodecDescriptorResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetCodecDescriptorResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetCodecDescriptorResponse::GetClassData() const { return &_class_data_; }


void GetCodecDescriptorResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetCodecDescriptorResponse*>(&to_msg);
  auto& from = static_cast<const GetCodecDescriptorResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.base.reflection.v2alpha1.GetCodecDescriptorResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_codec()->::cosmos::base::reflection::v2alpha1::CodecDescriptor::MergeFrom(
        from._internal_codec());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetCodecDescriptorResponse::CopyFrom(const GetCodecDescriptorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.base.reflection.v2alpha1.GetCodecDescriptorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCodecDescriptorResponse::IsInitialized() const {
  return true;
}

void GetCodecDescriptorResponse::InternalSwap(GetCodecDescriptorResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.codec_, other->_impl_.codec_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCodecDescriptorResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_getter, &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_once,
      file_level_metadata_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto[16]);
}
// ===================================================================

class GetConfigurationDescriptorRequest::_Internal {
 public:
};

GetConfigurationDescriptorRequest::GetConfigurationDescriptorRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cosmos.base.reflection.v2alpha1.GetConfigurationDescriptorRequest)
}
GetConfigurationDescriptorRequest::GetConfigurationDescriptorRequest(const GetConfigurationDescriptorRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetConfigurationDescriptorRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.base.reflection.v2alpha1.GetConfigurationDescriptorRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetConfigurationDescriptorRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetConfigurationDescriptorRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetConfigurationDescriptorRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_getter, &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_once,
      file_level_metadata_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto[17]);
}
// ===================================================================

class GetConfigurationDescriptorResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GetConfigurationDescriptorResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GetConfigurationDescriptorResponse, _impl_._has_bits_);
  static const ::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor& config(const GetConfigurationDescriptorResponse* msg);
  static void set_has_config(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor&
GetConfigurationDescriptorResponse::_Internal::config(const GetConfigurationDescriptorResponse* msg) {
  return *msg->_impl_.config_;
}
GetConfigurationDescriptorResponse::GetConfigurationDescriptorResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.base.reflection.v2alpha1.GetConfigurationDescriptorResponse)
}
GetConfigurationDescriptorResponse::GetConfigurationDescriptorResponse(const GetConfigurationDescriptorResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetConfigurationDescriptorResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.config_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.config_ = new ::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor(*from._impl_.config_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.base.reflection.v2alpha1.GetConfigurationDescriptorResponse)
}

inline void GetConfigurationDescriptorResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.config_){nullptr}
  };
}

GetConfigurationDescriptorResponse::~GetConfigurationDescriptorResponse() {
  // @@protoc_insertion_point(destructor:cosmos.base.reflection.v2alpha1.GetConfigurationDescriptorResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetConfigurationDescriptorResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.config_;
}

void GetConfigurationDescriptorResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetConfigurationDescriptorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.base.reflection.v2alpha1.GetConfigurationDescriptorResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.config_ != nullptr);
    _impl_.config_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetConfigurationDescriptorResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cosmos.base.reflection.v2alpha1.ConfigurationDescriptor config = 1 [json_name = "config"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_config(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* GetConfigurationDescriptorResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.base.reflection.v2alpha1.GetConfigurationDescriptorResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.reflection.v2alpha1.ConfigurationDescriptor config = 1 [json_name = "config"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::config(this),
        _Internal::config(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.base.reflection.v2alpha1.GetConfigurationDescriptorResponse)
  return target;
}

::size_t GetConfigurationDescriptorResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.base.reflection.v2alpha1.GetConfigurationDescriptorResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cosmos.base.reflection.v2alpha1.ConfigurationDescriptor config = 1 [json_name = "config"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.config_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetConfigurationDescriptorResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetConfigurationDescriptorResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetConfigurationDescriptorResponse::GetClassData() const { return &_class_data_; }


void GetConfigurationDescriptorResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetConfigurationDescriptorResponse*>(&to_msg);
  auto& from = static_cast<const GetConfigurationDescriptorResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.base.reflection.v2alpha1.GetConfigurationDescriptorResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_config()->::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor::MergeFrom(
        from._internal_config());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetConfigurationDescriptorResponse::CopyFrom(const GetConfigurationDescriptorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.base.reflection.v2alpha1.GetConfigurationDescriptorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetConfigurationDescriptorResponse::IsInitialized() const {
  return true;
}

void GetConfigurationDescriptorResponse::InternalSwap(GetConfigurationDescriptorResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.config_, other->_impl_.config_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetConfigurationDescriptorResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_getter, &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_once,
      file_level_metadata_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto[18]);
}
// ===================================================================

class GetQueryServicesDescriptorRequest::_Internal {
 public:
};

GetQueryServicesDescriptorRequest::GetQueryServicesDescriptorRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cosmos.base.reflection.v2alpha1.GetQueryServicesDescriptorRequest)
}
GetQueryServicesDescriptorRequest::GetQueryServicesDescriptorRequest(const GetQueryServicesDescriptorRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetQueryServicesDescriptorRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.base.reflection.v2alpha1.GetQueryServicesDescriptorRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetQueryServicesDescriptorRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetQueryServicesDescriptorRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetQueryServicesDescriptorRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_getter, &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_once,
      file_level_metadata_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto[19]);
}
// ===================================================================

class GetQueryServicesDescriptorResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GetQueryServicesDescriptorResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GetQueryServicesDescriptorResponse, _impl_._has_bits_);
  static const ::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor& queries(const GetQueryServicesDescriptorResponse* msg);
  static void set_has_queries(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor&
GetQueryServicesDescriptorResponse::_Internal::queries(const GetQueryServicesDescriptorResponse* msg) {
  return *msg->_impl_.queries_;
}
GetQueryServicesDescriptorResponse::GetQueryServicesDescriptorResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.base.reflection.v2alpha1.GetQueryServicesDescriptorResponse)
}
GetQueryServicesDescriptorResponse::GetQueryServicesDescriptorResponse(const GetQueryServicesDescriptorResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetQueryServicesDescriptorResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.queries_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.queries_ = new ::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor(*from._impl_.queries_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.base.reflection.v2alpha1.GetQueryServicesDescriptorResponse)
}

inline void GetQueryServicesDescriptorResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.queries_){nullptr}
  };
}

GetQueryServicesDescriptorResponse::~GetQueryServicesDescriptorResponse() {
  // @@protoc_insertion_point(destructor:cosmos.base.reflection.v2alpha1.GetQueryServicesDescriptorResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetQueryServicesDescriptorResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.queries_;
}

void GetQueryServicesDescriptorResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetQueryServicesDescriptorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.base.reflection.v2alpha1.GetQueryServicesDescriptorResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.queries_ != nullptr);
    _impl_.queries_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetQueryServicesDescriptorResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cosmos.base.reflection.v2alpha1.QueryServicesDescriptor queries = 1 [json_name = "queries"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_queries(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* GetQueryServicesDescriptorResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.base.reflection.v2alpha1.GetQueryServicesDescriptorResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.reflection.v2alpha1.QueryServicesDescriptor queries = 1 [json_name = "queries"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::queries(this),
        _Internal::queries(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.base.reflection.v2alpha1.GetQueryServicesDescriptorResponse)
  return target;
}

::size_t GetQueryServicesDescriptorResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.base.reflection.v2alpha1.GetQueryServicesDescriptorResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cosmos.base.reflection.v2alpha1.QueryServicesDescriptor queries = 1 [json_name = "queries"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.queries_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetQueryServicesDescriptorResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetQueryServicesDescriptorResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetQueryServicesDescriptorResponse::GetClassData() const { return &_class_data_; }


void GetQueryServicesDescriptorResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetQueryServicesDescriptorResponse*>(&to_msg);
  auto& from = static_cast<const GetQueryServicesDescriptorResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.base.reflection.v2alpha1.GetQueryServicesDescriptorResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_queries()->::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor::MergeFrom(
        from._internal_queries());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetQueryServicesDescriptorResponse::CopyFrom(const GetQueryServicesDescriptorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.base.reflection.v2alpha1.GetQueryServicesDescriptorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetQueryServicesDescriptorResponse::IsInitialized() const {
  return true;
}

void GetQueryServicesDescriptorResponse::InternalSwap(GetQueryServicesDescriptorResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.queries_, other->_impl_.queries_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetQueryServicesDescriptorResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_getter, &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_once,
      file_level_metadata_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto[20]);
}
// ===================================================================

class GetTxDescriptorRequest::_Internal {
 public:
};

GetTxDescriptorRequest::GetTxDescriptorRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cosmos.base.reflection.v2alpha1.GetTxDescriptorRequest)
}
GetTxDescriptorRequest::GetTxDescriptorRequest(const GetTxDescriptorRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetTxDescriptorRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.base.reflection.v2alpha1.GetTxDescriptorRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetTxDescriptorRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetTxDescriptorRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetTxDescriptorRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_getter, &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_once,
      file_level_metadata_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto[21]);
}
// ===================================================================

class GetTxDescriptorResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GetTxDescriptorResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GetTxDescriptorResponse, _impl_._has_bits_);
  static const ::cosmos::base::reflection::v2alpha1::TxDescriptor& tx(const GetTxDescriptorResponse* msg);
  static void set_has_tx(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::reflection::v2alpha1::TxDescriptor&
GetTxDescriptorResponse::_Internal::tx(const GetTxDescriptorResponse* msg) {
  return *msg->_impl_.tx_;
}
GetTxDescriptorResponse::GetTxDescriptorResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.base.reflection.v2alpha1.GetTxDescriptorResponse)
}
GetTxDescriptorResponse::GetTxDescriptorResponse(const GetTxDescriptorResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetTxDescriptorResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.tx_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.tx_ = new ::cosmos::base::reflection::v2alpha1::TxDescriptor(*from._impl_.tx_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.base.reflection.v2alpha1.GetTxDescriptorResponse)
}

inline void GetTxDescriptorResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.tx_){nullptr}
  };
}

GetTxDescriptorResponse::~GetTxDescriptorResponse() {
  // @@protoc_insertion_point(destructor:cosmos.base.reflection.v2alpha1.GetTxDescriptorResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetTxDescriptorResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.tx_;
}

void GetTxDescriptorResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetTxDescriptorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.base.reflection.v2alpha1.GetTxDescriptorResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.tx_ != nullptr);
    _impl_.tx_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetTxDescriptorResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cosmos.base.reflection.v2alpha1.TxDescriptor tx = 1 [json_name = "tx"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_tx(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* GetTxDescriptorResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.base.reflection.v2alpha1.GetTxDescriptorResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.reflection.v2alpha1.TxDescriptor tx = 1 [json_name = "tx"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::tx(this),
        _Internal::tx(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.base.reflection.v2alpha1.GetTxDescriptorResponse)
  return target;
}

::size_t GetTxDescriptorResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.base.reflection.v2alpha1.GetTxDescriptorResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cosmos.base.reflection.v2alpha1.TxDescriptor tx = 1 [json_name = "tx"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.tx_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetTxDescriptorResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetTxDescriptorResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetTxDescriptorResponse::GetClassData() const { return &_class_data_; }


void GetTxDescriptorResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetTxDescriptorResponse*>(&to_msg);
  auto& from = static_cast<const GetTxDescriptorResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.base.reflection.v2alpha1.GetTxDescriptorResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_tx()->::cosmos::base::reflection::v2alpha1::TxDescriptor::MergeFrom(
        from._internal_tx());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetTxDescriptorResponse::CopyFrom(const GetTxDescriptorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.base.reflection.v2alpha1.GetTxDescriptorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTxDescriptorResponse::IsInitialized() const {
  return true;
}

void GetTxDescriptorResponse::InternalSwap(GetTxDescriptorResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.tx_, other->_impl_.tx_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetTxDescriptorResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_getter, &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_once,
      file_level_metadata_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto[22]);
}
// ===================================================================

class QueryServicesDescriptor::_Internal {
 public:
};

QueryServicesDescriptor::QueryServicesDescriptor(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.base.reflection.v2alpha1.QueryServicesDescriptor)
}
QueryServicesDescriptor::QueryServicesDescriptor(const QueryServicesDescriptor& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryServicesDescriptor* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.query_services_){from._impl_.query_services_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.base.reflection.v2alpha1.QueryServicesDescriptor)
}

inline void QueryServicesDescriptor::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.query_services_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

QueryServicesDescriptor::~QueryServicesDescriptor() {
  // @@protoc_insertion_point(destructor:cosmos.base.reflection.v2alpha1.QueryServicesDescriptor)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryServicesDescriptor::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_query_services()->~RepeatedPtrField();
}

void QueryServicesDescriptor::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryServicesDescriptor::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.base.reflection.v2alpha1.QueryServicesDescriptor)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_query_services()->Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryServicesDescriptor::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .cosmos.base.reflection.v2alpha1.QueryServiceDescriptor query_services = 1 [json_name = "queryServices"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_query_services(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryServicesDescriptor::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.base.reflection.v2alpha1.QueryServicesDescriptor)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cosmos.base.reflection.v2alpha1.QueryServiceDescriptor query_services = 1 [json_name = "queryServices"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_query_services_size()); i < n; i++) {
    const auto& repfield = this->_internal_query_services(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.base.reflection.v2alpha1.QueryServicesDescriptor)
  return target;
}

::size_t QueryServicesDescriptor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.base.reflection.v2alpha1.QueryServicesDescriptor)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cosmos.base.reflection.v2alpha1.QueryServiceDescriptor query_services = 1 [json_name = "queryServices"];
  total_size += 1UL * this->_internal_query_services_size();
  for (const auto& msg : this->_internal_query_services()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryServicesDescriptor::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryServicesDescriptor::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryServicesDescriptor::GetClassData() const { return &_class_data_; }


void QueryServicesDescriptor::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryServicesDescriptor*>(&to_msg);
  auto& from = static_cast<const QueryServicesDescriptor&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.base.reflection.v2alpha1.QueryServicesDescriptor)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_query_services()->MergeFrom(from._internal_query_services());
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryServicesDescriptor::CopyFrom(const QueryServicesDescriptor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.base.reflection.v2alpha1.QueryServicesDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryServicesDescriptor::IsInitialized() const {
  return true;
}

void QueryServicesDescriptor::InternalSwap(QueryServicesDescriptor* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_query_services()->InternalSwap(other->_internal_mutable_query_services());
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryServicesDescriptor::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_getter, &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_once,
      file_level_metadata_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto[23]);
}
// ===================================================================

class QueryServiceDescriptor::_Internal {
 public:
};

QueryServiceDescriptor::QueryServiceDescriptor(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.base.reflection.v2alpha1.QueryServiceDescriptor)
}
QueryServiceDescriptor::QueryServiceDescriptor(const QueryServiceDescriptor& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryServiceDescriptor* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.methods_){from._impl_.methods_}
    , decltype(_impl_.fullname_) {}

    , decltype(_impl_.is_module_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.fullname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.fullname_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_fullname().empty()) {
    _this->_impl_.fullname_.Set(from._internal_fullname(), _this->GetArenaForAllocation());
  }
  _this->_impl_.is_module_ = from._impl_.is_module_;
  // @@protoc_insertion_point(copy_constructor:cosmos.base.reflection.v2alpha1.QueryServiceDescriptor)
}

inline void QueryServiceDescriptor::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.methods_){arena}
    , decltype(_impl_.fullname_) {}

    , decltype(_impl_.is_module_) { false }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.fullname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.fullname_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryServiceDescriptor::~QueryServiceDescriptor() {
  // @@protoc_insertion_point(destructor:cosmos.base.reflection.v2alpha1.QueryServiceDescriptor)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryServiceDescriptor::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_methods()->~RepeatedPtrField();
  _impl_.fullname_.Destroy();
}

void QueryServiceDescriptor::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryServiceDescriptor::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.base.reflection.v2alpha1.QueryServiceDescriptor)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_methods()->Clear();
  _impl_.fullname_.ClearToEmpty();
  _impl_.is_module_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryServiceDescriptor::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string fullname = 1 [json_name = "fullname"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_fullname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.base.reflection.v2alpha1.QueryServiceDescriptor.fullname"));
        } else {
          goto handle_unusual;
        }
        continue;
      // bool is_module = 2 [json_name = "isModule"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          _impl_.is_module_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated .cosmos.base.reflection.v2alpha1.QueryMethodDescriptor methods = 3 [json_name = "methods"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_methods(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryServiceDescriptor::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.base.reflection.v2alpha1.QueryServiceDescriptor)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string fullname = 1 [json_name = "fullname"];
  if (!this->_internal_fullname().empty()) {
    const std::string& _s = this->_internal_fullname();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.base.reflection.v2alpha1.QueryServiceDescriptor.fullname");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // bool is_module = 2 [json_name = "isModule"];
  if (this->_internal_is_module() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_is_module(), target);
  }

  // repeated .cosmos.base.reflection.v2alpha1.QueryMethodDescriptor methods = 3 [json_name = "methods"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_methods_size()); i < n; i++) {
    const auto& repfield = this->_internal_methods(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.base.reflection.v2alpha1.QueryServiceDescriptor)
  return target;
}

::size_t QueryServiceDescriptor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.base.reflection.v2alpha1.QueryServiceDescriptor)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cosmos.base.reflection.v2alpha1.QueryMethodDescriptor methods = 3 [json_name = "methods"];
  total_size += 1UL * this->_internal_methods_size();
  for (const auto& msg : this->_internal_methods()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string fullname = 1 [json_name = "fullname"];
  if (!this->_internal_fullname().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_fullname());
  }

  // bool is_module = 2 [json_name = "isModule"];
  if (this->_internal_is_module() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryServiceDescriptor::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryServiceDescriptor::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryServiceDescriptor::GetClassData() const { return &_class_data_; }


void QueryServiceDescriptor::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryServiceDescriptor*>(&to_msg);
  auto& from = static_cast<const QueryServiceDescriptor&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.base.reflection.v2alpha1.QueryServiceDescriptor)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_methods()->MergeFrom(from._internal_methods());
  if (!from._internal_fullname().empty()) {
    _this->_internal_set_fullname(from._internal_fullname());
  }
  if (from._internal_is_module() != 0) {
    _this->_internal_set_is_module(from._internal_is_module());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryServiceDescriptor::CopyFrom(const QueryServiceDescriptor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.base.reflection.v2alpha1.QueryServiceDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryServiceDescriptor::IsInitialized() const {
  return true;
}

void QueryServiceDescriptor::InternalSwap(QueryServiceDescriptor* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_methods()->InternalSwap(other->_internal_mutable_methods());
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.fullname_, lhs_arena,
                                       &other->_impl_.fullname_, rhs_arena);

  swap(_impl_.is_module_, other->_impl_.is_module_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryServiceDescriptor::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_getter, &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_once,
      file_level_metadata_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto[24]);
}
// ===================================================================

class QueryMethodDescriptor::_Internal {
 public:
};

QueryMethodDescriptor::QueryMethodDescriptor(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.base.reflection.v2alpha1.QueryMethodDescriptor)
}
QueryMethodDescriptor::QueryMethodDescriptor(const QueryMethodDescriptor& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryMethodDescriptor* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_) {}

    , decltype(_impl_.full_query_path_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  _impl_.full_query_path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.full_query_path_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_full_query_path().empty()) {
    _this->_impl_.full_query_path_.Set(from._internal_full_query_path(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.base.reflection.v2alpha1.QueryMethodDescriptor)
}

inline void QueryMethodDescriptor::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.name_) {}

    , decltype(_impl_.full_query_path_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.full_query_path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.full_query_path_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryMethodDescriptor::~QueryMethodDescriptor() {
  // @@protoc_insertion_point(destructor:cosmos.base.reflection.v2alpha1.QueryMethodDescriptor)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryMethodDescriptor::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.full_query_path_.Destroy();
}

void QueryMethodDescriptor::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryMethodDescriptor::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.base.reflection.v2alpha1.QueryMethodDescriptor)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.full_query_path_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryMethodDescriptor::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.base.reflection.v2alpha1.QueryMethodDescriptor.name"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string full_query_path = 2 [json_name = "fullQueryPath"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_full_query_path();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.base.reflection.v2alpha1.QueryMethodDescriptor.full_query_path"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryMethodDescriptor::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.base.reflection.v2alpha1.QueryMethodDescriptor)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.base.reflection.v2alpha1.QueryMethodDescriptor.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string full_query_path = 2 [json_name = "fullQueryPath"];
  if (!this->_internal_full_query_path().empty()) {
    const std::string& _s = this->_internal_full_query_path();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.base.reflection.v2alpha1.QueryMethodDescriptor.full_query_path");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.base.reflection.v2alpha1.QueryMethodDescriptor)
  return target;
}

::size_t QueryMethodDescriptor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.base.reflection.v2alpha1.QueryMethodDescriptor)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string full_query_path = 2 [json_name = "fullQueryPath"];
  if (!this->_internal_full_query_path().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_full_query_path());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryMethodDescriptor::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryMethodDescriptor::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryMethodDescriptor::GetClassData() const { return &_class_data_; }


void QueryMethodDescriptor::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryMethodDescriptor*>(&to_msg);
  auto& from = static_cast<const QueryMethodDescriptor&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.base.reflection.v2alpha1.QueryMethodDescriptor)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_full_query_path().empty()) {
    _this->_internal_set_full_query_path(from._internal_full_query_path());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryMethodDescriptor::CopyFrom(const QueryMethodDescriptor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.base.reflection.v2alpha1.QueryMethodDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryMethodDescriptor::IsInitialized() const {
  return true;
}

void QueryMethodDescriptor::InternalSwap(QueryMethodDescriptor* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.full_query_path_, lhs_arena,
                                       &other->_impl_.full_query_path_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryMethodDescriptor::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_getter, &descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_once,
      file_level_metadata_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto[25]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v2alpha1
}  // namespace reflection
}  // namespace base
}  // namespace cosmos
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::cosmos::base::reflection::v2alpha1::AppDescriptor*
Arena::CreateMaybeMessage< ::cosmos::base::reflection::v2alpha1::AppDescriptor >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::base::reflection::v2alpha1::AppDescriptor >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::base::reflection::v2alpha1::TxDescriptor*
Arena::CreateMaybeMessage< ::cosmos::base::reflection::v2alpha1::TxDescriptor >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::base::reflection::v2alpha1::TxDescriptor >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::base::reflection::v2alpha1::AuthnDescriptor*
Arena::CreateMaybeMessage< ::cosmos::base::reflection::v2alpha1::AuthnDescriptor >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::base::reflection::v2alpha1::AuthnDescriptor >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::base::reflection::v2alpha1::SigningModeDescriptor*
Arena::CreateMaybeMessage< ::cosmos::base::reflection::v2alpha1::SigningModeDescriptor >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::base::reflection::v2alpha1::SigningModeDescriptor >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::base::reflection::v2alpha1::ChainDescriptor*
Arena::CreateMaybeMessage< ::cosmos::base::reflection::v2alpha1::ChainDescriptor >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::base::reflection::v2alpha1::ChainDescriptor >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::base::reflection::v2alpha1::CodecDescriptor*
Arena::CreateMaybeMessage< ::cosmos::base::reflection::v2alpha1::CodecDescriptor >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::base::reflection::v2alpha1::CodecDescriptor >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::base::reflection::v2alpha1::InterfaceDescriptor*
Arena::CreateMaybeMessage< ::cosmos::base::reflection::v2alpha1::InterfaceDescriptor >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::base::reflection::v2alpha1::InterfaceDescriptor >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::base::reflection::v2alpha1::InterfaceImplementerDescriptor*
Arena::CreateMaybeMessage< ::cosmos::base::reflection::v2alpha1::InterfaceImplementerDescriptor >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::base::reflection::v2alpha1::InterfaceImplementerDescriptor >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::base::reflection::v2alpha1::InterfaceAcceptingMessageDescriptor*
Arena::CreateMaybeMessage< ::cosmos::base::reflection::v2alpha1::InterfaceAcceptingMessageDescriptor >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::base::reflection::v2alpha1::InterfaceAcceptingMessageDescriptor >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor*
Arena::CreateMaybeMessage< ::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::base::reflection::v2alpha1::MsgDescriptor*
Arena::CreateMaybeMessage< ::cosmos::base::reflection::v2alpha1::MsgDescriptor >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::base::reflection::v2alpha1::MsgDescriptor >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::base::reflection::v2alpha1::GetAuthnDescriptorRequest*
Arena::CreateMaybeMessage< ::cosmos::base::reflection::v2alpha1::GetAuthnDescriptorRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::base::reflection::v2alpha1::GetAuthnDescriptorRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::base::reflection::v2alpha1::GetAuthnDescriptorResponse*
Arena::CreateMaybeMessage< ::cosmos::base::reflection::v2alpha1::GetAuthnDescriptorResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::base::reflection::v2alpha1::GetAuthnDescriptorResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::base::reflection::v2alpha1::GetChainDescriptorRequest*
Arena::CreateMaybeMessage< ::cosmos::base::reflection::v2alpha1::GetChainDescriptorRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::base::reflection::v2alpha1::GetChainDescriptorRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::base::reflection::v2alpha1::GetChainDescriptorResponse*
Arena::CreateMaybeMessage< ::cosmos::base::reflection::v2alpha1::GetChainDescriptorResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::base::reflection::v2alpha1::GetChainDescriptorResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::base::reflection::v2alpha1::GetCodecDescriptorRequest*
Arena::CreateMaybeMessage< ::cosmos::base::reflection::v2alpha1::GetCodecDescriptorRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::base::reflection::v2alpha1::GetCodecDescriptorRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::base::reflection::v2alpha1::GetCodecDescriptorResponse*
Arena::CreateMaybeMessage< ::cosmos::base::reflection::v2alpha1::GetCodecDescriptorResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::base::reflection::v2alpha1::GetCodecDescriptorResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::base::reflection::v2alpha1::GetConfigurationDescriptorRequest*
Arena::CreateMaybeMessage< ::cosmos::base::reflection::v2alpha1::GetConfigurationDescriptorRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::base::reflection::v2alpha1::GetConfigurationDescriptorRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::base::reflection::v2alpha1::GetConfigurationDescriptorResponse*
Arena::CreateMaybeMessage< ::cosmos::base::reflection::v2alpha1::GetConfigurationDescriptorResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::base::reflection::v2alpha1::GetConfigurationDescriptorResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::base::reflection::v2alpha1::GetQueryServicesDescriptorRequest*
Arena::CreateMaybeMessage< ::cosmos::base::reflection::v2alpha1::GetQueryServicesDescriptorRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::base::reflection::v2alpha1::GetQueryServicesDescriptorRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::base::reflection::v2alpha1::GetQueryServicesDescriptorResponse*
Arena::CreateMaybeMessage< ::cosmos::base::reflection::v2alpha1::GetQueryServicesDescriptorResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::base::reflection::v2alpha1::GetQueryServicesDescriptorResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::base::reflection::v2alpha1::GetTxDescriptorRequest*
Arena::CreateMaybeMessage< ::cosmos::base::reflection::v2alpha1::GetTxDescriptorRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::base::reflection::v2alpha1::GetTxDescriptorRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::base::reflection::v2alpha1::GetTxDescriptorResponse*
Arena::CreateMaybeMessage< ::cosmos::base::reflection::v2alpha1::GetTxDescriptorResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::base::reflection::v2alpha1::GetTxDescriptorResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor*
Arena::CreateMaybeMessage< ::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::base::reflection::v2alpha1::QueryServiceDescriptor*
Arena::CreateMaybeMessage< ::cosmos::base::reflection::v2alpha1::QueryServiceDescriptor >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::base::reflection::v2alpha1::QueryServiceDescriptor >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::base::reflection::v2alpha1::QueryMethodDescriptor*
Arena::CreateMaybeMessage< ::cosmos::base::reflection::v2alpha1::QueryMethodDescriptor >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::base::reflection::v2alpha1::QueryMethodDescriptor >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
