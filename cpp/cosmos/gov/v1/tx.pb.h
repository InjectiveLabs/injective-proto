// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/gov/v1/tx.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_cosmos_2fgov_2fv1_2ftx_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_cosmos_2fgov_2fv1_2ftx_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4023000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4023004 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "cosmos/base/v1beta1/coin.pb.h"
#include "cosmos/gov/v1/gov.pb.h"
#include "gogoproto/gogo.pb.h"
#include "cosmos_proto/cosmos.pb.h"
#include "google/protobuf/any.pb.h"
#include "cosmos/msg/v1/msg.pb.h"
#include "amino/amino.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cosmos_2fgov_2fv1_2ftx_2eproto

PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_cosmos_2fgov_2fv1_2ftx_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable
    descriptor_table_cosmos_2fgov_2fv1_2ftx_2eproto;
namespace cosmos {
namespace gov {
namespace v1 {
class MsgDeposit;
struct MsgDepositDefaultTypeInternal;
extern MsgDepositDefaultTypeInternal _MsgDeposit_default_instance_;
class MsgDepositResponse;
struct MsgDepositResponseDefaultTypeInternal;
extern MsgDepositResponseDefaultTypeInternal _MsgDepositResponse_default_instance_;
class MsgExecLegacyContent;
struct MsgExecLegacyContentDefaultTypeInternal;
extern MsgExecLegacyContentDefaultTypeInternal _MsgExecLegacyContent_default_instance_;
class MsgExecLegacyContentResponse;
struct MsgExecLegacyContentResponseDefaultTypeInternal;
extern MsgExecLegacyContentResponseDefaultTypeInternal _MsgExecLegacyContentResponse_default_instance_;
class MsgSubmitProposal;
struct MsgSubmitProposalDefaultTypeInternal;
extern MsgSubmitProposalDefaultTypeInternal _MsgSubmitProposal_default_instance_;
class MsgSubmitProposalResponse;
struct MsgSubmitProposalResponseDefaultTypeInternal;
extern MsgSubmitProposalResponseDefaultTypeInternal _MsgSubmitProposalResponse_default_instance_;
class MsgUpdateParams;
struct MsgUpdateParamsDefaultTypeInternal;
extern MsgUpdateParamsDefaultTypeInternal _MsgUpdateParams_default_instance_;
class MsgUpdateParamsResponse;
struct MsgUpdateParamsResponseDefaultTypeInternal;
extern MsgUpdateParamsResponseDefaultTypeInternal _MsgUpdateParamsResponse_default_instance_;
class MsgVote;
struct MsgVoteDefaultTypeInternal;
extern MsgVoteDefaultTypeInternal _MsgVote_default_instance_;
class MsgVoteResponse;
struct MsgVoteResponseDefaultTypeInternal;
extern MsgVoteResponseDefaultTypeInternal _MsgVoteResponse_default_instance_;
class MsgVoteWeighted;
struct MsgVoteWeightedDefaultTypeInternal;
extern MsgVoteWeightedDefaultTypeInternal _MsgVoteWeighted_default_instance_;
class MsgVoteWeightedResponse;
struct MsgVoteWeightedResponseDefaultTypeInternal;
extern MsgVoteWeightedResponseDefaultTypeInternal _MsgVoteWeightedResponse_default_instance_;
}  // namespace v1
}  // namespace gov
}  // namespace cosmos
PROTOBUF_NAMESPACE_OPEN
template <>
::cosmos::gov::v1::MsgDeposit* Arena::CreateMaybeMessage<::cosmos::gov::v1::MsgDeposit>(Arena*);
template <>
::cosmos::gov::v1::MsgDepositResponse* Arena::CreateMaybeMessage<::cosmos::gov::v1::MsgDepositResponse>(Arena*);
template <>
::cosmos::gov::v1::MsgExecLegacyContent* Arena::CreateMaybeMessage<::cosmos::gov::v1::MsgExecLegacyContent>(Arena*);
template <>
::cosmos::gov::v1::MsgExecLegacyContentResponse* Arena::CreateMaybeMessage<::cosmos::gov::v1::MsgExecLegacyContentResponse>(Arena*);
template <>
::cosmos::gov::v1::MsgSubmitProposal* Arena::CreateMaybeMessage<::cosmos::gov::v1::MsgSubmitProposal>(Arena*);
template <>
::cosmos::gov::v1::MsgSubmitProposalResponse* Arena::CreateMaybeMessage<::cosmos::gov::v1::MsgSubmitProposalResponse>(Arena*);
template <>
::cosmos::gov::v1::MsgUpdateParams* Arena::CreateMaybeMessage<::cosmos::gov::v1::MsgUpdateParams>(Arena*);
template <>
::cosmos::gov::v1::MsgUpdateParamsResponse* Arena::CreateMaybeMessage<::cosmos::gov::v1::MsgUpdateParamsResponse>(Arena*);
template <>
::cosmos::gov::v1::MsgVote* Arena::CreateMaybeMessage<::cosmos::gov::v1::MsgVote>(Arena*);
template <>
::cosmos::gov::v1::MsgVoteResponse* Arena::CreateMaybeMessage<::cosmos::gov::v1::MsgVoteResponse>(Arena*);
template <>
::cosmos::gov::v1::MsgVoteWeighted* Arena::CreateMaybeMessage<::cosmos::gov::v1::MsgVoteWeighted>(Arena*);
template <>
::cosmos::gov::v1::MsgVoteWeightedResponse* Arena::CreateMaybeMessage<::cosmos::gov::v1::MsgVoteWeightedResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

namespace cosmos {
namespace gov {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class MsgSubmitProposal final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.gov.v1.MsgSubmitProposal) */ {
 public:
  inline MsgSubmitProposal() : MsgSubmitProposal(nullptr) {}
  ~MsgSubmitProposal() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgSubmitProposal(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgSubmitProposal(const MsgSubmitProposal& from);
  MsgSubmitProposal(MsgSubmitProposal&& from) noexcept
    : MsgSubmitProposal() {
    *this = ::std::move(from);
  }

  inline MsgSubmitProposal& operator=(const MsgSubmitProposal& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgSubmitProposal& operator=(MsgSubmitProposal&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgSubmitProposal& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgSubmitProposal* internal_default_instance() {
    return reinterpret_cast<const MsgSubmitProposal*>(
               &_MsgSubmitProposal_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MsgSubmitProposal& a, MsgSubmitProposal& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgSubmitProposal* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgSubmitProposal* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgSubmitProposal* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgSubmitProposal>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgSubmitProposal& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgSubmitProposal& from) {
    MsgSubmitProposal::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSubmitProposal* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.gov.v1.MsgSubmitProposal";
  }
  protected:
  explicit MsgSubmitProposal(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessagesFieldNumber = 1,
    kInitialDepositFieldNumber = 2,
    kProposerFieldNumber = 3,
    kMetadataFieldNumber = 4,
    kTitleFieldNumber = 5,
    kSummaryFieldNumber = 6,
  };
  // repeated .google.protobuf.Any messages = 1 [json_name = "messages"];
  int messages_size() const;
  private:
  int _internal_messages_size() const;

  public:
  void clear_messages() ;
  ::PROTOBUF_NAMESPACE_ID::Any* mutable_messages(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::Any >*
      mutable_messages();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Any& _internal_messages(int index) const;
  ::PROTOBUF_NAMESPACE_ID::Any* _internal_add_messages();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::PROTOBUF_NAMESPACE_ID::Any>& _internal_messages() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::PROTOBUF_NAMESPACE_ID::Any>* _internal_mutable_messages();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Any& messages(int index) const;
  ::PROTOBUF_NAMESPACE_ID::Any* add_messages();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::Any >&
      messages() const;
  // repeated .cosmos.base.v1beta1.Coin initial_deposit = 2 [json_name = "initialDeposit", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  int initial_deposit_size() const;
  private:
  int _internal_initial_deposit_size() const;

  public:
  void clear_initial_deposit() ;
  ::cosmos::base::v1beta1::Coin* mutable_initial_deposit(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin >*
      mutable_initial_deposit();
  private:
  const ::cosmos::base::v1beta1::Coin& _internal_initial_deposit(int index) const;
  ::cosmos::base::v1beta1::Coin* _internal_add_initial_deposit();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::Coin>& _internal_initial_deposit() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::Coin>* _internal_mutable_initial_deposit();
  public:
  const ::cosmos::base::v1beta1::Coin& initial_deposit(int index) const;
  ::cosmos::base::v1beta1::Coin* add_initial_deposit();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin >&
      initial_deposit() const;
  // string proposer = 3 [json_name = "proposer", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_proposer() ;
  const std::string& proposer() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_proposer(Arg_&& arg, Args_... args);
  std::string* mutable_proposer();
  PROTOBUF_NODISCARD std::string* release_proposer();
  void set_allocated_proposer(std::string* ptr);

  private:
  const std::string& _internal_proposer() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_proposer(
      const std::string& value);
  std::string* _internal_mutable_proposer();

  public:
  // string metadata = 4 [json_name = "metadata"];
  void clear_metadata() ;
  const std::string& metadata() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_metadata(Arg_&& arg, Args_... args);
  std::string* mutable_metadata();
  PROTOBUF_NODISCARD std::string* release_metadata();
  void set_allocated_metadata(std::string* ptr);

  private:
  const std::string& _internal_metadata() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_metadata(
      const std::string& value);
  std::string* _internal_mutable_metadata();

  public:
  // string title = 5 [json_name = "title"];
  void clear_title() ;
  const std::string& title() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_title(Arg_&& arg, Args_... args);
  std::string* mutable_title();
  PROTOBUF_NODISCARD std::string* release_title();
  void set_allocated_title(std::string* ptr);

  private:
  const std::string& _internal_title() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_title(
      const std::string& value);
  std::string* _internal_mutable_title();

  public:
  // string summary = 6 [json_name = "summary"];
  void clear_summary() ;
  const std::string& summary() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_summary(Arg_&& arg, Args_... args);
  std::string* mutable_summary();
  PROTOBUF_NODISCARD std::string* release_summary();
  void set_allocated_summary(std::string* ptr);

  private:
  const std::string& _internal_summary() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_summary(
      const std::string& value);
  std::string* _internal_mutable_summary();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.gov.v1.MsgSubmitProposal)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::Any > messages_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin > initial_deposit_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr proposer_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr metadata_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr title_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr summary_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fgov_2fv1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgSubmitProposalResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.gov.v1.MsgSubmitProposalResponse) */ {
 public:
  inline MsgSubmitProposalResponse() : MsgSubmitProposalResponse(nullptr) {}
  ~MsgSubmitProposalResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgSubmitProposalResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgSubmitProposalResponse(const MsgSubmitProposalResponse& from);
  MsgSubmitProposalResponse(MsgSubmitProposalResponse&& from) noexcept
    : MsgSubmitProposalResponse() {
    *this = ::std::move(from);
  }

  inline MsgSubmitProposalResponse& operator=(const MsgSubmitProposalResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgSubmitProposalResponse& operator=(MsgSubmitProposalResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgSubmitProposalResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgSubmitProposalResponse* internal_default_instance() {
    return reinterpret_cast<const MsgSubmitProposalResponse*>(
               &_MsgSubmitProposalResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(MsgSubmitProposalResponse& a, MsgSubmitProposalResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgSubmitProposalResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgSubmitProposalResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgSubmitProposalResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgSubmitProposalResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgSubmitProposalResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgSubmitProposalResponse& from) {
    MsgSubmitProposalResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSubmitProposalResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.gov.v1.MsgSubmitProposalResponse";
  }
  protected:
  explicit MsgSubmitProposalResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kProposalIdFieldNumber = 1,
  };
  // uint64 proposal_id = 1 [json_name = "proposalId"];
  void clear_proposal_id() ;
  ::uint64_t proposal_id() const;
  void set_proposal_id(::uint64_t value);

  private:
  ::uint64_t _internal_proposal_id() const;
  void _internal_set_proposal_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.gov.v1.MsgSubmitProposalResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::uint64_t proposal_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fgov_2fv1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgExecLegacyContent final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.gov.v1.MsgExecLegacyContent) */ {
 public:
  inline MsgExecLegacyContent() : MsgExecLegacyContent(nullptr) {}
  ~MsgExecLegacyContent() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgExecLegacyContent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgExecLegacyContent(const MsgExecLegacyContent& from);
  MsgExecLegacyContent(MsgExecLegacyContent&& from) noexcept
    : MsgExecLegacyContent() {
    *this = ::std::move(from);
  }

  inline MsgExecLegacyContent& operator=(const MsgExecLegacyContent& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgExecLegacyContent& operator=(MsgExecLegacyContent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgExecLegacyContent& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgExecLegacyContent* internal_default_instance() {
    return reinterpret_cast<const MsgExecLegacyContent*>(
               &_MsgExecLegacyContent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(MsgExecLegacyContent& a, MsgExecLegacyContent& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgExecLegacyContent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgExecLegacyContent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgExecLegacyContent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgExecLegacyContent>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgExecLegacyContent& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgExecLegacyContent& from) {
    MsgExecLegacyContent::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgExecLegacyContent* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.gov.v1.MsgExecLegacyContent";
  }
  protected:
  explicit MsgExecLegacyContent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAuthorityFieldNumber = 2,
    kContentFieldNumber = 1,
  };
  // string authority = 2 [json_name = "authority"];
  void clear_authority() ;
  const std::string& authority() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_authority(Arg_&& arg, Args_... args);
  std::string* mutable_authority();
  PROTOBUF_NODISCARD std::string* release_authority();
  void set_allocated_authority(std::string* ptr);

  private:
  const std::string& _internal_authority() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_authority(
      const std::string& value);
  std::string* _internal_mutable_authority();

  public:
  // .google.protobuf.Any content = 1 [json_name = "content", (.cosmos_proto.accepts_interface) = "cosmos.gov.v1beta1.Content"];
  bool has_content() const;
  void clear_content() ;
  const ::PROTOBUF_NAMESPACE_ID::Any& content() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Any* release_content();
  ::PROTOBUF_NAMESPACE_ID::Any* mutable_content();
  void set_allocated_content(::PROTOBUF_NAMESPACE_ID::Any* content);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Any& _internal_content() const;
  ::PROTOBUF_NAMESPACE_ID::Any* _internal_mutable_content();
  public:
  void unsafe_arena_set_allocated_content(
      ::PROTOBUF_NAMESPACE_ID::Any* content);
  ::PROTOBUF_NAMESPACE_ID::Any* unsafe_arena_release_content();
  // @@protoc_insertion_point(class_scope:cosmos.gov.v1.MsgExecLegacyContent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr authority_;
    ::PROTOBUF_NAMESPACE_ID::Any* content_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fgov_2fv1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgExecLegacyContentResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:cosmos.gov.v1.MsgExecLegacyContentResponse) */ {
 public:
  inline MsgExecLegacyContentResponse() : MsgExecLegacyContentResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgExecLegacyContentResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgExecLegacyContentResponse(const MsgExecLegacyContentResponse& from);
  MsgExecLegacyContentResponse(MsgExecLegacyContentResponse&& from) noexcept
    : MsgExecLegacyContentResponse() {
    *this = ::std::move(from);
  }

  inline MsgExecLegacyContentResponse& operator=(const MsgExecLegacyContentResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgExecLegacyContentResponse& operator=(MsgExecLegacyContentResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgExecLegacyContentResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgExecLegacyContentResponse* internal_default_instance() {
    return reinterpret_cast<const MsgExecLegacyContentResponse*>(
               &_MsgExecLegacyContentResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(MsgExecLegacyContentResponse& a, MsgExecLegacyContentResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgExecLegacyContentResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgExecLegacyContentResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgExecLegacyContentResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgExecLegacyContentResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgExecLegacyContentResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgExecLegacyContentResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.gov.v1.MsgExecLegacyContentResponse";
  }
  protected:
  explicit MsgExecLegacyContentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:cosmos.gov.v1.MsgExecLegacyContentResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_cosmos_2fgov_2fv1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgVote final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.gov.v1.MsgVote) */ {
 public:
  inline MsgVote() : MsgVote(nullptr) {}
  ~MsgVote() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgVote(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgVote(const MsgVote& from);
  MsgVote(MsgVote&& from) noexcept
    : MsgVote() {
    *this = ::std::move(from);
  }

  inline MsgVote& operator=(const MsgVote& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgVote& operator=(MsgVote&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgVote& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgVote* internal_default_instance() {
    return reinterpret_cast<const MsgVote*>(
               &_MsgVote_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(MsgVote& a, MsgVote& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgVote* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgVote* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgVote* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgVote>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgVote& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgVote& from) {
    MsgVote::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgVote* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.gov.v1.MsgVote";
  }
  protected:
  explicit MsgVote(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVoterFieldNumber = 2,
    kMetadataFieldNumber = 4,
    kProposalIdFieldNumber = 1,
    kOptionFieldNumber = 3,
  };
  // string voter = 2 [json_name = "voter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_voter() ;
  const std::string& voter() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_voter(Arg_&& arg, Args_... args);
  std::string* mutable_voter();
  PROTOBUF_NODISCARD std::string* release_voter();
  void set_allocated_voter(std::string* ptr);

  private:
  const std::string& _internal_voter() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_voter(
      const std::string& value);
  std::string* _internal_mutable_voter();

  public:
  // string metadata = 4 [json_name = "metadata"];
  void clear_metadata() ;
  const std::string& metadata() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_metadata(Arg_&& arg, Args_... args);
  std::string* mutable_metadata();
  PROTOBUF_NODISCARD std::string* release_metadata();
  void set_allocated_metadata(std::string* ptr);

  private:
  const std::string& _internal_metadata() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_metadata(
      const std::string& value);
  std::string* _internal_mutable_metadata();

  public:
  // uint64 proposal_id = 1 [json_name = "proposalId", (.gogoproto.jsontag) = "proposal_id", (.amino.dont_omitempty) = true];
  void clear_proposal_id() ;
  ::uint64_t proposal_id() const;
  void set_proposal_id(::uint64_t value);

  private:
  ::uint64_t _internal_proposal_id() const;
  void _internal_set_proposal_id(::uint64_t value);

  public:
  // .cosmos.gov.v1.VoteOption option = 3 [json_name = "option"];
  void clear_option() ;
  ::cosmos::gov::v1::VoteOption option() const;
  void set_option(::cosmos::gov::v1::VoteOption value);

  private:
  ::cosmos::gov::v1::VoteOption _internal_option() const;
  void _internal_set_option(::cosmos::gov::v1::VoteOption value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.gov.v1.MsgVote)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr voter_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr metadata_;
    ::uint64_t proposal_id_;
    int option_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fgov_2fv1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgVoteResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:cosmos.gov.v1.MsgVoteResponse) */ {
 public:
  inline MsgVoteResponse() : MsgVoteResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgVoteResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgVoteResponse(const MsgVoteResponse& from);
  MsgVoteResponse(MsgVoteResponse&& from) noexcept
    : MsgVoteResponse() {
    *this = ::std::move(from);
  }

  inline MsgVoteResponse& operator=(const MsgVoteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgVoteResponse& operator=(MsgVoteResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgVoteResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgVoteResponse* internal_default_instance() {
    return reinterpret_cast<const MsgVoteResponse*>(
               &_MsgVoteResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(MsgVoteResponse& a, MsgVoteResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgVoteResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgVoteResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgVoteResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgVoteResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgVoteResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgVoteResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.gov.v1.MsgVoteResponse";
  }
  protected:
  explicit MsgVoteResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:cosmos.gov.v1.MsgVoteResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_cosmos_2fgov_2fv1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgVoteWeighted final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.gov.v1.MsgVoteWeighted) */ {
 public:
  inline MsgVoteWeighted() : MsgVoteWeighted(nullptr) {}
  ~MsgVoteWeighted() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgVoteWeighted(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgVoteWeighted(const MsgVoteWeighted& from);
  MsgVoteWeighted(MsgVoteWeighted&& from) noexcept
    : MsgVoteWeighted() {
    *this = ::std::move(from);
  }

  inline MsgVoteWeighted& operator=(const MsgVoteWeighted& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgVoteWeighted& operator=(MsgVoteWeighted&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgVoteWeighted& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgVoteWeighted* internal_default_instance() {
    return reinterpret_cast<const MsgVoteWeighted*>(
               &_MsgVoteWeighted_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(MsgVoteWeighted& a, MsgVoteWeighted& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgVoteWeighted* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgVoteWeighted* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgVoteWeighted* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgVoteWeighted>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgVoteWeighted& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgVoteWeighted& from) {
    MsgVoteWeighted::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgVoteWeighted* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.gov.v1.MsgVoteWeighted";
  }
  protected:
  explicit MsgVoteWeighted(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOptionsFieldNumber = 3,
    kVoterFieldNumber = 2,
    kMetadataFieldNumber = 4,
    kProposalIdFieldNumber = 1,
  };
  // repeated .cosmos.gov.v1.WeightedVoteOption options = 3 [json_name = "options"];
  int options_size() const;
  private:
  int _internal_options_size() const;

  public:
  void clear_options() ;
  ::cosmos::gov::v1::WeightedVoteOption* mutable_options(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::gov::v1::WeightedVoteOption >*
      mutable_options();
  private:
  const ::cosmos::gov::v1::WeightedVoteOption& _internal_options(int index) const;
  ::cosmos::gov::v1::WeightedVoteOption* _internal_add_options();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::gov::v1::WeightedVoteOption>& _internal_options() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::gov::v1::WeightedVoteOption>* _internal_mutable_options();
  public:
  const ::cosmos::gov::v1::WeightedVoteOption& options(int index) const;
  ::cosmos::gov::v1::WeightedVoteOption* add_options();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::gov::v1::WeightedVoteOption >&
      options() const;
  // string voter = 2 [json_name = "voter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_voter() ;
  const std::string& voter() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_voter(Arg_&& arg, Args_... args);
  std::string* mutable_voter();
  PROTOBUF_NODISCARD std::string* release_voter();
  void set_allocated_voter(std::string* ptr);

  private:
  const std::string& _internal_voter() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_voter(
      const std::string& value);
  std::string* _internal_mutable_voter();

  public:
  // string metadata = 4 [json_name = "metadata"];
  void clear_metadata() ;
  const std::string& metadata() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_metadata(Arg_&& arg, Args_... args);
  std::string* mutable_metadata();
  PROTOBUF_NODISCARD std::string* release_metadata();
  void set_allocated_metadata(std::string* ptr);

  private:
  const std::string& _internal_metadata() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_metadata(
      const std::string& value);
  std::string* _internal_mutable_metadata();

  public:
  // uint64 proposal_id = 1 [json_name = "proposalId", (.gogoproto.jsontag) = "proposal_id", (.amino.dont_omitempty) = true];
  void clear_proposal_id() ;
  ::uint64_t proposal_id() const;
  void set_proposal_id(::uint64_t value);

  private:
  ::uint64_t _internal_proposal_id() const;
  void _internal_set_proposal_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.gov.v1.MsgVoteWeighted)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::gov::v1::WeightedVoteOption > options_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr voter_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr metadata_;
    ::uint64_t proposal_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fgov_2fv1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgVoteWeightedResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:cosmos.gov.v1.MsgVoteWeightedResponse) */ {
 public:
  inline MsgVoteWeightedResponse() : MsgVoteWeightedResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgVoteWeightedResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgVoteWeightedResponse(const MsgVoteWeightedResponse& from);
  MsgVoteWeightedResponse(MsgVoteWeightedResponse&& from) noexcept
    : MsgVoteWeightedResponse() {
    *this = ::std::move(from);
  }

  inline MsgVoteWeightedResponse& operator=(const MsgVoteWeightedResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgVoteWeightedResponse& operator=(MsgVoteWeightedResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgVoteWeightedResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgVoteWeightedResponse* internal_default_instance() {
    return reinterpret_cast<const MsgVoteWeightedResponse*>(
               &_MsgVoteWeightedResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(MsgVoteWeightedResponse& a, MsgVoteWeightedResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgVoteWeightedResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgVoteWeightedResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgVoteWeightedResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgVoteWeightedResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgVoteWeightedResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgVoteWeightedResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.gov.v1.MsgVoteWeightedResponse";
  }
  protected:
  explicit MsgVoteWeightedResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:cosmos.gov.v1.MsgVoteWeightedResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_cosmos_2fgov_2fv1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgDeposit final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.gov.v1.MsgDeposit) */ {
 public:
  inline MsgDeposit() : MsgDeposit(nullptr) {}
  ~MsgDeposit() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgDeposit(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgDeposit(const MsgDeposit& from);
  MsgDeposit(MsgDeposit&& from) noexcept
    : MsgDeposit() {
    *this = ::std::move(from);
  }

  inline MsgDeposit& operator=(const MsgDeposit& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgDeposit& operator=(MsgDeposit&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgDeposit& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgDeposit* internal_default_instance() {
    return reinterpret_cast<const MsgDeposit*>(
               &_MsgDeposit_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(MsgDeposit& a, MsgDeposit& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgDeposit* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgDeposit* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgDeposit* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgDeposit>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgDeposit& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgDeposit& from) {
    MsgDeposit::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgDeposit* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.gov.v1.MsgDeposit";
  }
  protected:
  explicit MsgDeposit(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAmountFieldNumber = 3,
    kDepositorFieldNumber = 2,
    kProposalIdFieldNumber = 1,
  };
  // repeated .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  int amount_size() const;
  private:
  int _internal_amount_size() const;

  public:
  void clear_amount() ;
  ::cosmos::base::v1beta1::Coin* mutable_amount(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin >*
      mutable_amount();
  private:
  const ::cosmos::base::v1beta1::Coin& _internal_amount(int index) const;
  ::cosmos::base::v1beta1::Coin* _internal_add_amount();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::Coin>& _internal_amount() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::Coin>* _internal_mutable_amount();
  public:
  const ::cosmos::base::v1beta1::Coin& amount(int index) const;
  ::cosmos::base::v1beta1::Coin* add_amount();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin >&
      amount() const;
  // string depositor = 2 [json_name = "depositor", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_depositor() ;
  const std::string& depositor() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_depositor(Arg_&& arg, Args_... args);
  std::string* mutable_depositor();
  PROTOBUF_NODISCARD std::string* release_depositor();
  void set_allocated_depositor(std::string* ptr);

  private:
  const std::string& _internal_depositor() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_depositor(
      const std::string& value);
  std::string* _internal_mutable_depositor();

  public:
  // uint64 proposal_id = 1 [json_name = "proposalId", (.gogoproto.jsontag) = "proposal_id", (.amino.dont_omitempty) = true];
  void clear_proposal_id() ;
  ::uint64_t proposal_id() const;
  void set_proposal_id(::uint64_t value);

  private:
  ::uint64_t _internal_proposal_id() const;
  void _internal_set_proposal_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.gov.v1.MsgDeposit)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin > amount_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr depositor_;
    ::uint64_t proposal_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fgov_2fv1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgDepositResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:cosmos.gov.v1.MsgDepositResponse) */ {
 public:
  inline MsgDepositResponse() : MsgDepositResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgDepositResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgDepositResponse(const MsgDepositResponse& from);
  MsgDepositResponse(MsgDepositResponse&& from) noexcept
    : MsgDepositResponse() {
    *this = ::std::move(from);
  }

  inline MsgDepositResponse& operator=(const MsgDepositResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgDepositResponse& operator=(MsgDepositResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgDepositResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgDepositResponse* internal_default_instance() {
    return reinterpret_cast<const MsgDepositResponse*>(
               &_MsgDepositResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(MsgDepositResponse& a, MsgDepositResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgDepositResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgDepositResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgDepositResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgDepositResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgDepositResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgDepositResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.gov.v1.MsgDepositResponse";
  }
  protected:
  explicit MsgDepositResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:cosmos.gov.v1.MsgDepositResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_cosmos_2fgov_2fv1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgUpdateParams final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.gov.v1.MsgUpdateParams) */ {
 public:
  inline MsgUpdateParams() : MsgUpdateParams(nullptr) {}
  ~MsgUpdateParams() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUpdateParams(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgUpdateParams(const MsgUpdateParams& from);
  MsgUpdateParams(MsgUpdateParams&& from) noexcept
    : MsgUpdateParams() {
    *this = ::std::move(from);
  }

  inline MsgUpdateParams& operator=(const MsgUpdateParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateParams& operator=(MsgUpdateParams&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUpdateParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUpdateParams* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateParams*>(
               &_MsgUpdateParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(MsgUpdateParams& a, MsgUpdateParams& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgUpdateParams* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateParams* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUpdateParams* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgUpdateParams>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgUpdateParams& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgUpdateParams& from) {
    MsgUpdateParams::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgUpdateParams* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.gov.v1.MsgUpdateParams";
  }
  protected:
  explicit MsgUpdateParams(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAuthorityFieldNumber = 1,
    kParamsFieldNumber = 2,
  };
  // string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_authority() ;
  const std::string& authority() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_authority(Arg_&& arg, Args_... args);
  std::string* mutable_authority();
  PROTOBUF_NODISCARD std::string* release_authority();
  void set_allocated_authority(std::string* ptr);

  private:
  const std::string& _internal_authority() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_authority(
      const std::string& value);
  std::string* _internal_mutable_authority();

  public:
  // .cosmos.gov.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  bool has_params() const;
  void clear_params() ;
  const ::cosmos::gov::v1::Params& params() const;
  PROTOBUF_NODISCARD ::cosmos::gov::v1::Params* release_params();
  ::cosmos::gov::v1::Params* mutable_params();
  void set_allocated_params(::cosmos::gov::v1::Params* params);
  private:
  const ::cosmos::gov::v1::Params& _internal_params() const;
  ::cosmos::gov::v1::Params* _internal_mutable_params();
  public:
  void unsafe_arena_set_allocated_params(
      ::cosmos::gov::v1::Params* params);
  ::cosmos::gov::v1::Params* unsafe_arena_release_params();
  // @@protoc_insertion_point(class_scope:cosmos.gov.v1.MsgUpdateParams)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr authority_;
    ::cosmos::gov::v1::Params* params_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fgov_2fv1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgUpdateParamsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:cosmos.gov.v1.MsgUpdateParamsResponse) */ {
 public:
  inline MsgUpdateParamsResponse() : MsgUpdateParamsResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUpdateParamsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgUpdateParamsResponse(const MsgUpdateParamsResponse& from);
  MsgUpdateParamsResponse(MsgUpdateParamsResponse&& from) noexcept
    : MsgUpdateParamsResponse() {
    *this = ::std::move(from);
  }

  inline MsgUpdateParamsResponse& operator=(const MsgUpdateParamsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateParamsResponse& operator=(MsgUpdateParamsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUpdateParamsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUpdateParamsResponse* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateParamsResponse*>(
               &_MsgUpdateParamsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(MsgUpdateParamsResponse& a, MsgUpdateParamsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgUpdateParamsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateParamsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUpdateParamsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgUpdateParamsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgUpdateParamsResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgUpdateParamsResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.gov.v1.MsgUpdateParamsResponse";
  }
  protected:
  explicit MsgUpdateParamsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:cosmos.gov.v1.MsgUpdateParamsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_cosmos_2fgov_2fv1_2ftx_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// MsgSubmitProposal

// repeated .google.protobuf.Any messages = 1 [json_name = "messages"];
inline int MsgSubmitProposal::_internal_messages_size() const {
  return _impl_.messages_.size();
}
inline int MsgSubmitProposal::messages_size() const {
  return _internal_messages_size();
}
inline ::PROTOBUF_NAMESPACE_ID::Any* MsgSubmitProposal::mutable_messages(int index) {
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.MsgSubmitProposal.messages)
  return _internal_mutable_messages()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::Any >*
MsgSubmitProposal::mutable_messages() {
  // @@protoc_insertion_point(field_mutable_list:cosmos.gov.v1.MsgSubmitProposal.messages)
  return _internal_mutable_messages();
}
inline const ::PROTOBUF_NAMESPACE_ID::Any& MsgSubmitProposal::_internal_messages(int index) const {
  return _internal_messages().Get(index);
}
inline const ::PROTOBUF_NAMESPACE_ID::Any& MsgSubmitProposal::messages(int index) const {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.MsgSubmitProposal.messages)
  return _internal_messages(index);
}
inline ::PROTOBUF_NAMESPACE_ID::Any* MsgSubmitProposal::_internal_add_messages() {
  return _internal_mutable_messages()->Add();
}
inline ::PROTOBUF_NAMESPACE_ID::Any* MsgSubmitProposal::add_messages() {
  ::PROTOBUF_NAMESPACE_ID::Any* _add = _internal_add_messages();
  // @@protoc_insertion_point(field_add:cosmos.gov.v1.MsgSubmitProposal.messages)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::Any >&
MsgSubmitProposal::messages() const {
  // @@protoc_insertion_point(field_list:cosmos.gov.v1.MsgSubmitProposal.messages)
  return _internal_messages();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::PROTOBUF_NAMESPACE_ID::Any>&
MsgSubmitProposal::_internal_messages() const {
  return _impl_.messages_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::PROTOBUF_NAMESPACE_ID::Any>*
MsgSubmitProposal::_internal_mutable_messages() {
  return &_impl_.messages_;
}

// repeated .cosmos.base.v1beta1.Coin initial_deposit = 2 [json_name = "initialDeposit", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline int MsgSubmitProposal::_internal_initial_deposit_size() const {
  return _impl_.initial_deposit_.size();
}
inline int MsgSubmitProposal::initial_deposit_size() const {
  return _internal_initial_deposit_size();
}
inline ::cosmos::base::v1beta1::Coin* MsgSubmitProposal::mutable_initial_deposit(int index) {
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.MsgSubmitProposal.initial_deposit)
  return _internal_mutable_initial_deposit()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin >*
MsgSubmitProposal::mutable_initial_deposit() {
  // @@protoc_insertion_point(field_mutable_list:cosmos.gov.v1.MsgSubmitProposal.initial_deposit)
  return _internal_mutable_initial_deposit();
}
inline const ::cosmos::base::v1beta1::Coin& MsgSubmitProposal::_internal_initial_deposit(int index) const {
  return _internal_initial_deposit().Get(index);
}
inline const ::cosmos::base::v1beta1::Coin& MsgSubmitProposal::initial_deposit(int index) const {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.MsgSubmitProposal.initial_deposit)
  return _internal_initial_deposit(index);
}
inline ::cosmos::base::v1beta1::Coin* MsgSubmitProposal::_internal_add_initial_deposit() {
  return _internal_mutable_initial_deposit()->Add();
}
inline ::cosmos::base::v1beta1::Coin* MsgSubmitProposal::add_initial_deposit() {
  ::cosmos::base::v1beta1::Coin* _add = _internal_add_initial_deposit();
  // @@protoc_insertion_point(field_add:cosmos.gov.v1.MsgSubmitProposal.initial_deposit)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin >&
MsgSubmitProposal::initial_deposit() const {
  // @@protoc_insertion_point(field_list:cosmos.gov.v1.MsgSubmitProposal.initial_deposit)
  return _internal_initial_deposit();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::Coin>&
MsgSubmitProposal::_internal_initial_deposit() const {
  return _impl_.initial_deposit_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::Coin>*
MsgSubmitProposal::_internal_mutable_initial_deposit() {
  return &_impl_.initial_deposit_;
}

// string proposer = 3 [json_name = "proposer", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgSubmitProposal::clear_proposer() {
  _impl_.proposer_.ClearToEmpty();
}
inline const std::string& MsgSubmitProposal::proposer() const {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.MsgSubmitProposal.proposer)
  return _internal_proposer();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgSubmitProposal::set_proposer(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.proposer_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmos.gov.v1.MsgSubmitProposal.proposer)
}
inline std::string* MsgSubmitProposal::mutable_proposer() {
  std::string* _s = _internal_mutable_proposer();
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.MsgSubmitProposal.proposer)
  return _s;
}
inline const std::string& MsgSubmitProposal::_internal_proposer() const {
  return _impl_.proposer_.Get();
}
inline void MsgSubmitProposal::_internal_set_proposer(const std::string& value) {
  ;


  _impl_.proposer_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgSubmitProposal::_internal_mutable_proposer() {
  ;
  return _impl_.proposer_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgSubmitProposal::release_proposer() {
  // @@protoc_insertion_point(field_release:cosmos.gov.v1.MsgSubmitProposal.proposer)
  return _impl_.proposer_.Release();
}
inline void MsgSubmitProposal::set_allocated_proposer(std::string* value) {
  _impl_.proposer_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.proposer_.IsDefault()) {
          _impl_.proposer_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmos.gov.v1.MsgSubmitProposal.proposer)
}

// string metadata = 4 [json_name = "metadata"];
inline void MsgSubmitProposal::clear_metadata() {
  _impl_.metadata_.ClearToEmpty();
}
inline const std::string& MsgSubmitProposal::metadata() const {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.MsgSubmitProposal.metadata)
  return _internal_metadata();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgSubmitProposal::set_metadata(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.metadata_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmos.gov.v1.MsgSubmitProposal.metadata)
}
inline std::string* MsgSubmitProposal::mutable_metadata() {
  std::string* _s = _internal_mutable_metadata();
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.MsgSubmitProposal.metadata)
  return _s;
}
inline const std::string& MsgSubmitProposal::_internal_metadata() const {
  return _impl_.metadata_.Get();
}
inline void MsgSubmitProposal::_internal_set_metadata(const std::string& value) {
  ;


  _impl_.metadata_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgSubmitProposal::_internal_mutable_metadata() {
  ;
  return _impl_.metadata_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgSubmitProposal::release_metadata() {
  // @@protoc_insertion_point(field_release:cosmos.gov.v1.MsgSubmitProposal.metadata)
  return _impl_.metadata_.Release();
}
inline void MsgSubmitProposal::set_allocated_metadata(std::string* value) {
  _impl_.metadata_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.metadata_.IsDefault()) {
          _impl_.metadata_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmos.gov.v1.MsgSubmitProposal.metadata)
}

// string title = 5 [json_name = "title"];
inline void MsgSubmitProposal::clear_title() {
  _impl_.title_.ClearToEmpty();
}
inline const std::string& MsgSubmitProposal::title() const {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.MsgSubmitProposal.title)
  return _internal_title();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgSubmitProposal::set_title(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.title_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmos.gov.v1.MsgSubmitProposal.title)
}
inline std::string* MsgSubmitProposal::mutable_title() {
  std::string* _s = _internal_mutable_title();
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.MsgSubmitProposal.title)
  return _s;
}
inline const std::string& MsgSubmitProposal::_internal_title() const {
  return _impl_.title_.Get();
}
inline void MsgSubmitProposal::_internal_set_title(const std::string& value) {
  ;


  _impl_.title_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgSubmitProposal::_internal_mutable_title() {
  ;
  return _impl_.title_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgSubmitProposal::release_title() {
  // @@protoc_insertion_point(field_release:cosmos.gov.v1.MsgSubmitProposal.title)
  return _impl_.title_.Release();
}
inline void MsgSubmitProposal::set_allocated_title(std::string* value) {
  _impl_.title_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.title_.IsDefault()) {
          _impl_.title_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmos.gov.v1.MsgSubmitProposal.title)
}

// string summary = 6 [json_name = "summary"];
inline void MsgSubmitProposal::clear_summary() {
  _impl_.summary_.ClearToEmpty();
}
inline const std::string& MsgSubmitProposal::summary() const {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.MsgSubmitProposal.summary)
  return _internal_summary();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgSubmitProposal::set_summary(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.summary_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmos.gov.v1.MsgSubmitProposal.summary)
}
inline std::string* MsgSubmitProposal::mutable_summary() {
  std::string* _s = _internal_mutable_summary();
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.MsgSubmitProposal.summary)
  return _s;
}
inline const std::string& MsgSubmitProposal::_internal_summary() const {
  return _impl_.summary_.Get();
}
inline void MsgSubmitProposal::_internal_set_summary(const std::string& value) {
  ;


  _impl_.summary_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgSubmitProposal::_internal_mutable_summary() {
  ;
  return _impl_.summary_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgSubmitProposal::release_summary() {
  // @@protoc_insertion_point(field_release:cosmos.gov.v1.MsgSubmitProposal.summary)
  return _impl_.summary_.Release();
}
inline void MsgSubmitProposal::set_allocated_summary(std::string* value) {
  _impl_.summary_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.summary_.IsDefault()) {
          _impl_.summary_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmos.gov.v1.MsgSubmitProposal.summary)
}

// -------------------------------------------------------------------

// MsgSubmitProposalResponse

// uint64 proposal_id = 1 [json_name = "proposalId"];
inline void MsgSubmitProposalResponse::clear_proposal_id() {
  _impl_.proposal_id_ = ::uint64_t{0u};
}
inline ::uint64_t MsgSubmitProposalResponse::proposal_id() const {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.MsgSubmitProposalResponse.proposal_id)
  return _internal_proposal_id();
}
inline void MsgSubmitProposalResponse::set_proposal_id(::uint64_t value) {
  _internal_set_proposal_id(value);
  // @@protoc_insertion_point(field_set:cosmos.gov.v1.MsgSubmitProposalResponse.proposal_id)
}
inline ::uint64_t MsgSubmitProposalResponse::_internal_proposal_id() const {
  return _impl_.proposal_id_;
}
inline void MsgSubmitProposalResponse::_internal_set_proposal_id(::uint64_t value) {
  ;
  _impl_.proposal_id_ = value;
}

// -------------------------------------------------------------------

// MsgExecLegacyContent

// .google.protobuf.Any content = 1 [json_name = "content", (.cosmos_proto.accepts_interface) = "cosmos.gov.v1beta1.Content"];
inline bool MsgExecLegacyContent::has_content() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.content_ != nullptr);
  return value;
}
inline const ::PROTOBUF_NAMESPACE_ID::Any& MsgExecLegacyContent::_internal_content() const {
  const ::PROTOBUF_NAMESPACE_ID::Any* p = _impl_.content_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Any&>(
      ::PROTOBUF_NAMESPACE_ID::_Any_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Any& MsgExecLegacyContent::content() const {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.MsgExecLegacyContent.content)
  return _internal_content();
}
inline void MsgExecLegacyContent::unsafe_arena_set_allocated_content(
    ::PROTOBUF_NAMESPACE_ID::Any* content) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.content_);
  }
  _impl_.content_ = content;
  if (content) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.gov.v1.MsgExecLegacyContent.content)
}
inline ::PROTOBUF_NAMESPACE_ID::Any* MsgExecLegacyContent::release_content() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::PROTOBUF_NAMESPACE_ID::Any* temp = _impl_.content_;
  _impl_.content_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Any* MsgExecLegacyContent::unsafe_arena_release_content() {
  // @@protoc_insertion_point(field_release:cosmos.gov.v1.MsgExecLegacyContent.content)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::PROTOBUF_NAMESPACE_ID::Any* temp = _impl_.content_;
  _impl_.content_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Any* MsgExecLegacyContent::_internal_mutable_content() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.content_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Any>(GetArenaForAllocation());
    _impl_.content_ = p;
  }
  return _impl_.content_;
}
inline ::PROTOBUF_NAMESPACE_ID::Any* MsgExecLegacyContent::mutable_content() {
  ::PROTOBUF_NAMESPACE_ID::Any* _msg = _internal_mutable_content();
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.MsgExecLegacyContent.content)
  return _msg;
}
inline void MsgExecLegacyContent::set_allocated_content(::PROTOBUF_NAMESPACE_ID::Any* content) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.content_);
  }
  if (content) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(content));
    if (message_arena != submessage_arena) {
      content = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, content, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.content_ = content;
  // @@protoc_insertion_point(field_set_allocated:cosmos.gov.v1.MsgExecLegacyContent.content)
}

// string authority = 2 [json_name = "authority"];
inline void MsgExecLegacyContent::clear_authority() {
  _impl_.authority_.ClearToEmpty();
}
inline const std::string& MsgExecLegacyContent::authority() const {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.MsgExecLegacyContent.authority)
  return _internal_authority();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgExecLegacyContent::set_authority(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.authority_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmos.gov.v1.MsgExecLegacyContent.authority)
}
inline std::string* MsgExecLegacyContent::mutable_authority() {
  std::string* _s = _internal_mutable_authority();
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.MsgExecLegacyContent.authority)
  return _s;
}
inline const std::string& MsgExecLegacyContent::_internal_authority() const {
  return _impl_.authority_.Get();
}
inline void MsgExecLegacyContent::_internal_set_authority(const std::string& value) {
  ;


  _impl_.authority_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgExecLegacyContent::_internal_mutable_authority() {
  ;
  return _impl_.authority_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgExecLegacyContent::release_authority() {
  // @@protoc_insertion_point(field_release:cosmos.gov.v1.MsgExecLegacyContent.authority)
  return _impl_.authority_.Release();
}
inline void MsgExecLegacyContent::set_allocated_authority(std::string* value) {
  _impl_.authority_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.authority_.IsDefault()) {
          _impl_.authority_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmos.gov.v1.MsgExecLegacyContent.authority)
}

// -------------------------------------------------------------------

// MsgExecLegacyContentResponse

// -------------------------------------------------------------------

// MsgVote

// uint64 proposal_id = 1 [json_name = "proposalId", (.gogoproto.jsontag) = "proposal_id", (.amino.dont_omitempty) = true];
inline void MsgVote::clear_proposal_id() {
  _impl_.proposal_id_ = ::uint64_t{0u};
}
inline ::uint64_t MsgVote::proposal_id() const {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.MsgVote.proposal_id)
  return _internal_proposal_id();
}
inline void MsgVote::set_proposal_id(::uint64_t value) {
  _internal_set_proposal_id(value);
  // @@protoc_insertion_point(field_set:cosmos.gov.v1.MsgVote.proposal_id)
}
inline ::uint64_t MsgVote::_internal_proposal_id() const {
  return _impl_.proposal_id_;
}
inline void MsgVote::_internal_set_proposal_id(::uint64_t value) {
  ;
  _impl_.proposal_id_ = value;
}

// string voter = 2 [json_name = "voter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgVote::clear_voter() {
  _impl_.voter_.ClearToEmpty();
}
inline const std::string& MsgVote::voter() const {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.MsgVote.voter)
  return _internal_voter();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgVote::set_voter(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.voter_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmos.gov.v1.MsgVote.voter)
}
inline std::string* MsgVote::mutable_voter() {
  std::string* _s = _internal_mutable_voter();
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.MsgVote.voter)
  return _s;
}
inline const std::string& MsgVote::_internal_voter() const {
  return _impl_.voter_.Get();
}
inline void MsgVote::_internal_set_voter(const std::string& value) {
  ;


  _impl_.voter_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgVote::_internal_mutable_voter() {
  ;
  return _impl_.voter_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgVote::release_voter() {
  // @@protoc_insertion_point(field_release:cosmos.gov.v1.MsgVote.voter)
  return _impl_.voter_.Release();
}
inline void MsgVote::set_allocated_voter(std::string* value) {
  _impl_.voter_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.voter_.IsDefault()) {
          _impl_.voter_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmos.gov.v1.MsgVote.voter)
}

// .cosmos.gov.v1.VoteOption option = 3 [json_name = "option"];
inline void MsgVote::clear_option() {
  _impl_.option_ = 0;
}
inline ::cosmos::gov::v1::VoteOption MsgVote::option() const {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.MsgVote.option)
  return _internal_option();
}
inline void MsgVote::set_option(::cosmos::gov::v1::VoteOption value) {
   _internal_set_option(value);
  // @@protoc_insertion_point(field_set:cosmos.gov.v1.MsgVote.option)
}
inline ::cosmos::gov::v1::VoteOption MsgVote::_internal_option() const {
  return static_cast<::cosmos::gov::v1::VoteOption>(_impl_.option_);
}
inline void MsgVote::_internal_set_option(::cosmos::gov::v1::VoteOption value) {
  ;
  _impl_.option_ = value;
}

// string metadata = 4 [json_name = "metadata"];
inline void MsgVote::clear_metadata() {
  _impl_.metadata_.ClearToEmpty();
}
inline const std::string& MsgVote::metadata() const {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.MsgVote.metadata)
  return _internal_metadata();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgVote::set_metadata(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.metadata_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmos.gov.v1.MsgVote.metadata)
}
inline std::string* MsgVote::mutable_metadata() {
  std::string* _s = _internal_mutable_metadata();
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.MsgVote.metadata)
  return _s;
}
inline const std::string& MsgVote::_internal_metadata() const {
  return _impl_.metadata_.Get();
}
inline void MsgVote::_internal_set_metadata(const std::string& value) {
  ;


  _impl_.metadata_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgVote::_internal_mutable_metadata() {
  ;
  return _impl_.metadata_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgVote::release_metadata() {
  // @@protoc_insertion_point(field_release:cosmos.gov.v1.MsgVote.metadata)
  return _impl_.metadata_.Release();
}
inline void MsgVote::set_allocated_metadata(std::string* value) {
  _impl_.metadata_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.metadata_.IsDefault()) {
          _impl_.metadata_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmos.gov.v1.MsgVote.metadata)
}

// -------------------------------------------------------------------

// MsgVoteResponse

// -------------------------------------------------------------------

// MsgVoteWeighted

// uint64 proposal_id = 1 [json_name = "proposalId", (.gogoproto.jsontag) = "proposal_id", (.amino.dont_omitempty) = true];
inline void MsgVoteWeighted::clear_proposal_id() {
  _impl_.proposal_id_ = ::uint64_t{0u};
}
inline ::uint64_t MsgVoteWeighted::proposal_id() const {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.MsgVoteWeighted.proposal_id)
  return _internal_proposal_id();
}
inline void MsgVoteWeighted::set_proposal_id(::uint64_t value) {
  _internal_set_proposal_id(value);
  // @@protoc_insertion_point(field_set:cosmos.gov.v1.MsgVoteWeighted.proposal_id)
}
inline ::uint64_t MsgVoteWeighted::_internal_proposal_id() const {
  return _impl_.proposal_id_;
}
inline void MsgVoteWeighted::_internal_set_proposal_id(::uint64_t value) {
  ;
  _impl_.proposal_id_ = value;
}

// string voter = 2 [json_name = "voter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgVoteWeighted::clear_voter() {
  _impl_.voter_.ClearToEmpty();
}
inline const std::string& MsgVoteWeighted::voter() const {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.MsgVoteWeighted.voter)
  return _internal_voter();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgVoteWeighted::set_voter(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.voter_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmos.gov.v1.MsgVoteWeighted.voter)
}
inline std::string* MsgVoteWeighted::mutable_voter() {
  std::string* _s = _internal_mutable_voter();
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.MsgVoteWeighted.voter)
  return _s;
}
inline const std::string& MsgVoteWeighted::_internal_voter() const {
  return _impl_.voter_.Get();
}
inline void MsgVoteWeighted::_internal_set_voter(const std::string& value) {
  ;


  _impl_.voter_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgVoteWeighted::_internal_mutable_voter() {
  ;
  return _impl_.voter_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgVoteWeighted::release_voter() {
  // @@protoc_insertion_point(field_release:cosmos.gov.v1.MsgVoteWeighted.voter)
  return _impl_.voter_.Release();
}
inline void MsgVoteWeighted::set_allocated_voter(std::string* value) {
  _impl_.voter_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.voter_.IsDefault()) {
          _impl_.voter_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmos.gov.v1.MsgVoteWeighted.voter)
}

// repeated .cosmos.gov.v1.WeightedVoteOption options = 3 [json_name = "options"];
inline int MsgVoteWeighted::_internal_options_size() const {
  return _impl_.options_.size();
}
inline int MsgVoteWeighted::options_size() const {
  return _internal_options_size();
}
inline ::cosmos::gov::v1::WeightedVoteOption* MsgVoteWeighted::mutable_options(int index) {
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.MsgVoteWeighted.options)
  return _internal_mutable_options()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::gov::v1::WeightedVoteOption >*
MsgVoteWeighted::mutable_options() {
  // @@protoc_insertion_point(field_mutable_list:cosmos.gov.v1.MsgVoteWeighted.options)
  return _internal_mutable_options();
}
inline const ::cosmos::gov::v1::WeightedVoteOption& MsgVoteWeighted::_internal_options(int index) const {
  return _internal_options().Get(index);
}
inline const ::cosmos::gov::v1::WeightedVoteOption& MsgVoteWeighted::options(int index) const {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.MsgVoteWeighted.options)
  return _internal_options(index);
}
inline ::cosmos::gov::v1::WeightedVoteOption* MsgVoteWeighted::_internal_add_options() {
  return _internal_mutable_options()->Add();
}
inline ::cosmos::gov::v1::WeightedVoteOption* MsgVoteWeighted::add_options() {
  ::cosmos::gov::v1::WeightedVoteOption* _add = _internal_add_options();
  // @@protoc_insertion_point(field_add:cosmos.gov.v1.MsgVoteWeighted.options)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::gov::v1::WeightedVoteOption >&
MsgVoteWeighted::options() const {
  // @@protoc_insertion_point(field_list:cosmos.gov.v1.MsgVoteWeighted.options)
  return _internal_options();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::gov::v1::WeightedVoteOption>&
MsgVoteWeighted::_internal_options() const {
  return _impl_.options_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::gov::v1::WeightedVoteOption>*
MsgVoteWeighted::_internal_mutable_options() {
  return &_impl_.options_;
}

// string metadata = 4 [json_name = "metadata"];
inline void MsgVoteWeighted::clear_metadata() {
  _impl_.metadata_.ClearToEmpty();
}
inline const std::string& MsgVoteWeighted::metadata() const {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.MsgVoteWeighted.metadata)
  return _internal_metadata();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgVoteWeighted::set_metadata(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.metadata_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmos.gov.v1.MsgVoteWeighted.metadata)
}
inline std::string* MsgVoteWeighted::mutable_metadata() {
  std::string* _s = _internal_mutable_metadata();
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.MsgVoteWeighted.metadata)
  return _s;
}
inline const std::string& MsgVoteWeighted::_internal_metadata() const {
  return _impl_.metadata_.Get();
}
inline void MsgVoteWeighted::_internal_set_metadata(const std::string& value) {
  ;


  _impl_.metadata_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgVoteWeighted::_internal_mutable_metadata() {
  ;
  return _impl_.metadata_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgVoteWeighted::release_metadata() {
  // @@protoc_insertion_point(field_release:cosmos.gov.v1.MsgVoteWeighted.metadata)
  return _impl_.metadata_.Release();
}
inline void MsgVoteWeighted::set_allocated_metadata(std::string* value) {
  _impl_.metadata_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.metadata_.IsDefault()) {
          _impl_.metadata_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmos.gov.v1.MsgVoteWeighted.metadata)
}

// -------------------------------------------------------------------

// MsgVoteWeightedResponse

// -------------------------------------------------------------------

// MsgDeposit

// uint64 proposal_id = 1 [json_name = "proposalId", (.gogoproto.jsontag) = "proposal_id", (.amino.dont_omitempty) = true];
inline void MsgDeposit::clear_proposal_id() {
  _impl_.proposal_id_ = ::uint64_t{0u};
}
inline ::uint64_t MsgDeposit::proposal_id() const {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.MsgDeposit.proposal_id)
  return _internal_proposal_id();
}
inline void MsgDeposit::set_proposal_id(::uint64_t value) {
  _internal_set_proposal_id(value);
  // @@protoc_insertion_point(field_set:cosmos.gov.v1.MsgDeposit.proposal_id)
}
inline ::uint64_t MsgDeposit::_internal_proposal_id() const {
  return _impl_.proposal_id_;
}
inline void MsgDeposit::_internal_set_proposal_id(::uint64_t value) {
  ;
  _impl_.proposal_id_ = value;
}

// string depositor = 2 [json_name = "depositor", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgDeposit::clear_depositor() {
  _impl_.depositor_.ClearToEmpty();
}
inline const std::string& MsgDeposit::depositor() const {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.MsgDeposit.depositor)
  return _internal_depositor();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgDeposit::set_depositor(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.depositor_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmos.gov.v1.MsgDeposit.depositor)
}
inline std::string* MsgDeposit::mutable_depositor() {
  std::string* _s = _internal_mutable_depositor();
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.MsgDeposit.depositor)
  return _s;
}
inline const std::string& MsgDeposit::_internal_depositor() const {
  return _impl_.depositor_.Get();
}
inline void MsgDeposit::_internal_set_depositor(const std::string& value) {
  ;


  _impl_.depositor_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgDeposit::_internal_mutable_depositor() {
  ;
  return _impl_.depositor_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgDeposit::release_depositor() {
  // @@protoc_insertion_point(field_release:cosmos.gov.v1.MsgDeposit.depositor)
  return _impl_.depositor_.Release();
}
inline void MsgDeposit::set_allocated_depositor(std::string* value) {
  _impl_.depositor_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.depositor_.IsDefault()) {
          _impl_.depositor_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmos.gov.v1.MsgDeposit.depositor)
}

// repeated .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline int MsgDeposit::_internal_amount_size() const {
  return _impl_.amount_.size();
}
inline int MsgDeposit::amount_size() const {
  return _internal_amount_size();
}
inline ::cosmos::base::v1beta1::Coin* MsgDeposit::mutable_amount(int index) {
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.MsgDeposit.amount)
  return _internal_mutable_amount()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin >*
MsgDeposit::mutable_amount() {
  // @@protoc_insertion_point(field_mutable_list:cosmos.gov.v1.MsgDeposit.amount)
  return _internal_mutable_amount();
}
inline const ::cosmos::base::v1beta1::Coin& MsgDeposit::_internal_amount(int index) const {
  return _internal_amount().Get(index);
}
inline const ::cosmos::base::v1beta1::Coin& MsgDeposit::amount(int index) const {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.MsgDeposit.amount)
  return _internal_amount(index);
}
inline ::cosmos::base::v1beta1::Coin* MsgDeposit::_internal_add_amount() {
  return _internal_mutable_amount()->Add();
}
inline ::cosmos::base::v1beta1::Coin* MsgDeposit::add_amount() {
  ::cosmos::base::v1beta1::Coin* _add = _internal_add_amount();
  // @@protoc_insertion_point(field_add:cosmos.gov.v1.MsgDeposit.amount)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin >&
MsgDeposit::amount() const {
  // @@protoc_insertion_point(field_list:cosmos.gov.v1.MsgDeposit.amount)
  return _internal_amount();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::Coin>&
MsgDeposit::_internal_amount() const {
  return _impl_.amount_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::Coin>*
MsgDeposit::_internal_mutable_amount() {
  return &_impl_.amount_;
}

// -------------------------------------------------------------------

// MsgDepositResponse

// -------------------------------------------------------------------

// MsgUpdateParams

// string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgUpdateParams::clear_authority() {
  _impl_.authority_.ClearToEmpty();
}
inline const std::string& MsgUpdateParams::authority() const {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.MsgUpdateParams.authority)
  return _internal_authority();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgUpdateParams::set_authority(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.authority_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmos.gov.v1.MsgUpdateParams.authority)
}
inline std::string* MsgUpdateParams::mutable_authority() {
  std::string* _s = _internal_mutable_authority();
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.MsgUpdateParams.authority)
  return _s;
}
inline const std::string& MsgUpdateParams::_internal_authority() const {
  return _impl_.authority_.Get();
}
inline void MsgUpdateParams::_internal_set_authority(const std::string& value) {
  ;


  _impl_.authority_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgUpdateParams::_internal_mutable_authority() {
  ;
  return _impl_.authority_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgUpdateParams::release_authority() {
  // @@protoc_insertion_point(field_release:cosmos.gov.v1.MsgUpdateParams.authority)
  return _impl_.authority_.Release();
}
inline void MsgUpdateParams::set_allocated_authority(std::string* value) {
  _impl_.authority_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.authority_.IsDefault()) {
          _impl_.authority_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmos.gov.v1.MsgUpdateParams.authority)
}

// .cosmos.gov.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline bool MsgUpdateParams::has_params() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.params_ != nullptr);
  return value;
}
inline const ::cosmos::gov::v1::Params& MsgUpdateParams::_internal_params() const {
  const ::cosmos::gov::v1::Params* p = _impl_.params_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::gov::v1::Params&>(
      ::cosmos::gov::v1::_Params_default_instance_);
}
inline const ::cosmos::gov::v1::Params& MsgUpdateParams::params() const {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.MsgUpdateParams.params)
  return _internal_params();
}
inline void MsgUpdateParams::unsafe_arena_set_allocated_params(
    ::cosmos::gov::v1::Params* params) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.params_);
  }
  _impl_.params_ = params;
  if (params) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.gov.v1.MsgUpdateParams.params)
}
inline ::cosmos::gov::v1::Params* MsgUpdateParams::release_params() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::gov::v1::Params* temp = _impl_.params_;
  _impl_.params_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::cosmos::gov::v1::Params* MsgUpdateParams::unsafe_arena_release_params() {
  // @@protoc_insertion_point(field_release:cosmos.gov.v1.MsgUpdateParams.params)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::gov::v1::Params* temp = _impl_.params_;
  _impl_.params_ = nullptr;
  return temp;
}
inline ::cosmos::gov::v1::Params* MsgUpdateParams::_internal_mutable_params() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.params_ == nullptr) {
    auto* p = CreateMaybeMessage<::cosmos::gov::v1::Params>(GetArenaForAllocation());
    _impl_.params_ = p;
  }
  return _impl_.params_;
}
inline ::cosmos::gov::v1::Params* MsgUpdateParams::mutable_params() {
  ::cosmos::gov::v1::Params* _msg = _internal_mutable_params();
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.MsgUpdateParams.params)
  return _msg;
}
inline void MsgUpdateParams::set_allocated_params(::cosmos::gov::v1::Params* params) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.params_);
  }
  if (params) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(params));
    if (message_arena != submessage_arena) {
      params = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, params, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.params_ = params;
  // @@protoc_insertion_point(field_set_allocated:cosmos.gov.v1.MsgUpdateParams.params)
}

// -------------------------------------------------------------------

// MsgUpdateParamsResponse

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace gov
}  // namespace cosmos


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_cosmos_2fgov_2fv1_2ftx_2eproto_2epb_2eh
