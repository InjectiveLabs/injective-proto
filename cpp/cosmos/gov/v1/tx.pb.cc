// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/gov/v1/tx.proto

#include "cosmos/gov/v1/tx.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace cosmos {
namespace gov {
namespace v1 {
template <typename>
PROTOBUF_CONSTEXPR MsgSubmitProposal::MsgSubmitProposal(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.messages_)*/{}
  , /*decltype(_impl_.initial_deposit_)*/{}
  , /*decltype(_impl_.proposer_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.metadata_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.title_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.summary_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgSubmitProposalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgSubmitProposalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgSubmitProposalDefaultTypeInternal() {}
  union {
    MsgSubmitProposal _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgSubmitProposalDefaultTypeInternal _MsgSubmitProposal_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgSubmitProposalResponse::MsgSubmitProposalResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.proposal_id_)*/ ::uint64_t{0u}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgSubmitProposalResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgSubmitProposalResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgSubmitProposalResponseDefaultTypeInternal() {}
  union {
    MsgSubmitProposalResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgSubmitProposalResponseDefaultTypeInternal _MsgSubmitProposalResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgExecLegacyContent::MsgExecLegacyContent(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.authority_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.content_)*/nullptr} {}
struct MsgExecLegacyContentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgExecLegacyContentDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgExecLegacyContentDefaultTypeInternal() {}
  union {
    MsgExecLegacyContent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgExecLegacyContentDefaultTypeInternal _MsgExecLegacyContent_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgExecLegacyContentResponse::MsgExecLegacyContentResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgExecLegacyContentResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgExecLegacyContentResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgExecLegacyContentResponseDefaultTypeInternal() {}
  union {
    MsgExecLegacyContentResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgExecLegacyContentResponseDefaultTypeInternal _MsgExecLegacyContentResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgVote::MsgVote(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.voter_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.metadata_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.proposal_id_)*/ ::uint64_t{0u}

  , /*decltype(_impl_.option_)*/ 0

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgVoteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgVoteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgVoteDefaultTypeInternal() {}
  union {
    MsgVote _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgVoteDefaultTypeInternal _MsgVote_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgVoteResponse::MsgVoteResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgVoteResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgVoteResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgVoteResponseDefaultTypeInternal() {}
  union {
    MsgVoteResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgVoteResponseDefaultTypeInternal _MsgVoteResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgVoteWeighted::MsgVoteWeighted(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.options_)*/{}
  , /*decltype(_impl_.voter_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.metadata_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.proposal_id_)*/ ::uint64_t{0u}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgVoteWeightedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgVoteWeightedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgVoteWeightedDefaultTypeInternal() {}
  union {
    MsgVoteWeighted _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgVoteWeightedDefaultTypeInternal _MsgVoteWeighted_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgVoteWeightedResponse::MsgVoteWeightedResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgVoteWeightedResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgVoteWeightedResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgVoteWeightedResponseDefaultTypeInternal() {}
  union {
    MsgVoteWeightedResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgVoteWeightedResponseDefaultTypeInternal _MsgVoteWeightedResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgDeposit::MsgDeposit(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.amount_)*/{}
  , /*decltype(_impl_.depositor_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.proposal_id_)*/ ::uint64_t{0u}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgDepositDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgDepositDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgDepositDefaultTypeInternal() {}
  union {
    MsgDeposit _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgDepositDefaultTypeInternal _MsgDeposit_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgDepositResponse::MsgDepositResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgDepositResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgDepositResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgDepositResponseDefaultTypeInternal() {}
  union {
    MsgDepositResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgDepositResponseDefaultTypeInternal _MsgDepositResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgUpdateParams::MsgUpdateParams(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.authority_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.params_)*/nullptr} {}
struct MsgUpdateParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgUpdateParamsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgUpdateParamsDefaultTypeInternal() {}
  union {
    MsgUpdateParams _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgUpdateParamsDefaultTypeInternal _MsgUpdateParams_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgUpdateParamsResponse::MsgUpdateParamsResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgUpdateParamsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgUpdateParamsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgUpdateParamsResponseDefaultTypeInternal() {}
  union {
    MsgUpdateParamsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgUpdateParamsResponseDefaultTypeInternal _MsgUpdateParamsResponse_default_instance_;
}  // namespace v1
}  // namespace gov
}  // namespace cosmos
static ::_pb::Metadata file_level_metadata_cosmos_2fgov_2fv1_2ftx_2eproto[12];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_cosmos_2fgov_2fv1_2ftx_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cosmos_2fgov_2fv1_2ftx_2eproto = nullptr;
const ::uint32_t TableStruct_cosmos_2fgov_2fv1_2ftx_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::MsgSubmitProposal, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::MsgSubmitProposal, _impl_.messages_),
    PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::MsgSubmitProposal, _impl_.initial_deposit_),
    PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::MsgSubmitProposal, _impl_.proposer_),
    PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::MsgSubmitProposal, _impl_.metadata_),
    PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::MsgSubmitProposal, _impl_.title_),
    PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::MsgSubmitProposal, _impl_.summary_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::MsgSubmitProposalResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::MsgSubmitProposalResponse, _impl_.proposal_id_),
    PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::MsgExecLegacyContent, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::MsgExecLegacyContent, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::MsgExecLegacyContent, _impl_.content_),
    PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::MsgExecLegacyContent, _impl_.authority_),
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::MsgExecLegacyContentResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::MsgVote, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::MsgVote, _impl_.proposal_id_),
    PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::MsgVote, _impl_.voter_),
    PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::MsgVote, _impl_.option_),
    PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::MsgVote, _impl_.metadata_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::MsgVoteResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::MsgVoteWeighted, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::MsgVoteWeighted, _impl_.proposal_id_),
    PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::MsgVoteWeighted, _impl_.voter_),
    PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::MsgVoteWeighted, _impl_.options_),
    PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::MsgVoteWeighted, _impl_.metadata_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::MsgVoteWeightedResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::MsgDeposit, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::MsgDeposit, _impl_.proposal_id_),
    PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::MsgDeposit, _impl_.depositor_),
    PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::MsgDeposit, _impl_.amount_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::MsgDepositResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::MsgUpdateParams, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::MsgUpdateParams, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::MsgUpdateParams, _impl_.authority_),
    PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::MsgUpdateParams, _impl_.params_),
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::MsgUpdateParamsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::cosmos::gov::v1::MsgSubmitProposal)},
        { 14, -1, -1, sizeof(::cosmos::gov::v1::MsgSubmitProposalResponse)},
        { 23, 33, -1, sizeof(::cosmos::gov::v1::MsgExecLegacyContent)},
        { 35, -1, -1, sizeof(::cosmos::gov::v1::MsgExecLegacyContentResponse)},
        { 43, -1, -1, sizeof(::cosmos::gov::v1::MsgVote)},
        { 55, -1, -1, sizeof(::cosmos::gov::v1::MsgVoteResponse)},
        { 63, -1, -1, sizeof(::cosmos::gov::v1::MsgVoteWeighted)},
        { 75, -1, -1, sizeof(::cosmos::gov::v1::MsgVoteWeightedResponse)},
        { 83, -1, -1, sizeof(::cosmos::gov::v1::MsgDeposit)},
        { 94, -1, -1, sizeof(::cosmos::gov::v1::MsgDepositResponse)},
        { 102, 112, -1, sizeof(::cosmos::gov::v1::MsgUpdateParams)},
        { 114, -1, -1, sizeof(::cosmos::gov::v1::MsgUpdateParamsResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::cosmos::gov::v1::_MsgSubmitProposal_default_instance_._instance,
    &::cosmos::gov::v1::_MsgSubmitProposalResponse_default_instance_._instance,
    &::cosmos::gov::v1::_MsgExecLegacyContent_default_instance_._instance,
    &::cosmos::gov::v1::_MsgExecLegacyContentResponse_default_instance_._instance,
    &::cosmos::gov::v1::_MsgVote_default_instance_._instance,
    &::cosmos::gov::v1::_MsgVoteResponse_default_instance_._instance,
    &::cosmos::gov::v1::_MsgVoteWeighted_default_instance_._instance,
    &::cosmos::gov::v1::_MsgVoteWeightedResponse_default_instance_._instance,
    &::cosmos::gov::v1::_MsgDeposit_default_instance_._instance,
    &::cosmos::gov::v1::_MsgDepositResponse_default_instance_._instance,
    &::cosmos::gov::v1::_MsgUpdateParams_default_instance_._instance,
    &::cosmos::gov::v1::_MsgUpdateParamsResponse_default_instance_._instance,
};
const char descriptor_table_protodef_cosmos_2fgov_2fv1_2ftx_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\026cosmos/gov/v1/tx.proto\022\rcosmos.gov.v1\032"
    "\036cosmos/base/v1beta1/coin.proto\032\027cosmos/"
    "gov/v1/gov.proto\032\024gogoproto/gogo.proto\032\031"
    "cosmos_proto/cosmos.proto\032\031google/protob"
    "uf/any.proto\032\027cosmos/msg/v1/msg.proto\032\021a"
    "mino/amino.proto\"\311\002\n\021MsgSubmitProposal\0220"
    "\n\010messages\030\001 \003(\0132\024.google.protobuf.AnyR\010"
    "messages\022M\n\017initial_deposit\030\002 \003(\0132\031.cosm"
    "os.base.v1beta1.CoinB\t\310\336\037\000\250\347\260*\001R\016initial"
    "Deposit\0224\n\010proposer\030\003 \001(\tB\030\322\264-\024cosmos.Ad"
    "dressStringR\010proposer\022\032\n\010metadata\030\004 \001(\tR"
    "\010metadata\022\024\n\005title\030\005 \001(\tR\005title\022\030\n\007summa"
    "ry\030\006 \001(\tR\007summary:1\202\347\260*\010proposer\212\347\260*\037cos"
    "mos-sdk/v1/MsgSubmitProposal\"<\n\031MsgSubmi"
    "tProposalResponse\022\037\n\013proposal_id\030\001 \001(\004R\n"
    "proposalId\"\273\001\n\024MsgExecLegacyContent\022N\n\007c"
    "ontent\030\001 \001(\0132\024.google.protobuf.AnyB\036\312\264-\032"
    "cosmos.gov.v1beta1.ContentR\007content\022\034\n\ta"
    "uthority\030\002 \001(\tR\tauthority:5\202\347\260*\tauthorit"
    "y\212\347\260*\"cosmos-sdk/v1/MsgExecLegacyContent"
    "\"\036\n\034MsgExecLegacyContentResponse\"\345\001\n\007Msg"
    "Vote\0225\n\013proposal_id\030\001 \001(\004B\024\352\336\037\013proposal_"
    "id\250\347\260*\001R\nproposalId\022.\n\005voter\030\002 \001(\tB\030\322\264-\024"
    "cosmos.AddressStringR\005voter\0221\n\006option\030\003 "
    "\001(\0162\031.cosmos.gov.v1.VoteOptionR\006option\022\032"
    "\n\010metadata\030\004 \001(\tR\010metadata:$\202\347\260*\005voter\212\347"
    "\260*\025cosmos-sdk/v1/MsgVote\"\021\n\017MsgVoteRespo"
    "nse\"\377\001\n\017MsgVoteWeighted\0225\n\013proposal_id\030\001"
    " \001(\004B\024\352\336\037\013proposal_id\250\347\260*\001R\nproposalId\022."
    "\n\005voter\030\002 \001(\tB\030\322\264-\024cosmos.AddressStringR"
    "\005voter\022;\n\007options\030\003 \003(\0132!.cosmos.gov.v1."
    "WeightedVoteOptionR\007options\022\032\n\010metadata\030"
    "\004 \001(\tR\010metadata:,\202\347\260*\005voter\212\347\260*\035cosmos-s"
    "dk/v1/MsgVoteWeighted\"\031\n\027MsgVoteWeighted"
    "Response\"\346\001\n\nMsgDeposit\0225\n\013proposal_id\030\001"
    " \001(\004B\024\352\336\037\013proposal_id\250\347\260*\001R\nproposalId\0226"
    "\n\tdepositor\030\002 \001(\tB\030\322\264-\024cosmos.AddressStr"
    "ingR\tdepositor\022<\n\006amount\030\003 \003(\0132\031.cosmos."
    "base.v1beta1.CoinB\t\310\336\037\000\250\347\260*\001R\006amount:+\202\347"
    "\260*\tdepositor\212\347\260*\030cosmos-sdk/v1/MsgDeposi"
    "t\"\024\n\022MsgDepositResponse\"\273\001\n\017MsgUpdatePar"
    "ams\0226\n\tauthority\030\001 \001(\tB\030\322\264-\024cosmos.Addre"
    "ssStringR\tauthority\0228\n\006params\030\002 \001(\0132\025.co"
    "smos.gov.v1.ParamsB\t\310\336\037\000\250\347\260*\001R\006params:6\202"
    "\347\260*\tauthority\212\347\260*#cosmos-sdk/x/gov/v1/Ms"
    "gUpdateParams\"\031\n\027MsgUpdateParamsResponse"
    "2\212\004\n\003Msg\022\\\n\016SubmitProposal\022 .cosmos.gov."
    "v1.MsgSubmitProposal\032(.cosmos.gov.v1.Msg"
    "SubmitProposalResponse\022e\n\021ExecLegacyCont"
    "ent\022#.cosmos.gov.v1.MsgExecLegacyContent"
    "\032+.cosmos.gov.v1.MsgExecLegacyContentRes"
    "ponse\022>\n\004Vote\022\026.cosmos.gov.v1.MsgVote\032\036."
    "cosmos.gov.v1.MsgVoteResponse\022V\n\014VoteWei"
    "ghted\022\036.cosmos.gov.v1.MsgVoteWeighted\032&."
    "cosmos.gov.v1.MsgVoteWeightedResponse\022G\n"
    "\007Deposit\022\031.cosmos.gov.v1.MsgDeposit\032!.co"
    "smos.gov.v1.MsgDepositResponse\022V\n\014Update"
    "Params\022\036.cosmos.gov.v1.MsgUpdateParams\032&"
    ".cosmos.gov.v1.MsgUpdateParamsResponse\032\005"
    "\200\347\260*\001B\237\001\n\021com.cosmos.gov.v1B\007TxProtoP\001Z+"
    "github.com/cosmos/cosmos-sdk/x/gov/types"
    "/v1\242\002\003CGX\252\002\rCosmos.Gov.V1\312\002\rCosmos\\Gov\\V"
    "1\342\002\031Cosmos\\Gov\\V1\\GPBMetadata\352\002\017Cosmos::"
    "Gov::V1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_cosmos_2fgov_2fv1_2ftx_2eproto_deps[7] =
    {
        &::descriptor_table_amino_2famino_2eproto,
        &::descriptor_table_cosmos_2fbase_2fv1beta1_2fcoin_2eproto,
        &::descriptor_table_cosmos_2fgov_2fv1_2fgov_2eproto,
        &::descriptor_table_cosmos_2fmsg_2fv1_2fmsg_2eproto,
        &::descriptor_table_cosmos_5fproto_2fcosmos_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_google_2fprotobuf_2fany_2eproto,
};
static ::absl::once_flag descriptor_table_cosmos_2fgov_2fv1_2ftx_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_cosmos_2fgov_2fv1_2ftx_2eproto = {
    false,
    false,
    2535,
    descriptor_table_protodef_cosmos_2fgov_2fv1_2ftx_2eproto,
    "cosmos/gov/v1/tx.proto",
    &descriptor_table_cosmos_2fgov_2fv1_2ftx_2eproto_once,
    descriptor_table_cosmos_2fgov_2fv1_2ftx_2eproto_deps,
    7,
    12,
    schemas,
    file_default_instances,
    TableStruct_cosmos_2fgov_2fv1_2ftx_2eproto::offsets,
    file_level_metadata_cosmos_2fgov_2fv1_2ftx_2eproto,
    file_level_enum_descriptors_cosmos_2fgov_2fv1_2ftx_2eproto,
    file_level_service_descriptors_cosmos_2fgov_2fv1_2ftx_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_cosmos_2fgov_2fv1_2ftx_2eproto_getter() {
  return &descriptor_table_cosmos_2fgov_2fv1_2ftx_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_cosmos_2fgov_2fv1_2ftx_2eproto(&descriptor_table_cosmos_2fgov_2fv1_2ftx_2eproto);
namespace cosmos {
namespace gov {
namespace v1 {
// ===================================================================

class MsgSubmitProposal::_Internal {
 public:
};

void MsgSubmitProposal::clear_messages() {
  _internal_mutable_messages()->Clear();
}
void MsgSubmitProposal::clear_initial_deposit() {
  _internal_mutable_initial_deposit()->Clear();
}
MsgSubmitProposal::MsgSubmitProposal(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.gov.v1.MsgSubmitProposal)
}
MsgSubmitProposal::MsgSubmitProposal(const MsgSubmitProposal& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgSubmitProposal* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.messages_){from._impl_.messages_}
    , decltype(_impl_.initial_deposit_){from._impl_.initial_deposit_}
    , decltype(_impl_.proposer_) {}

    , decltype(_impl_.metadata_) {}

    , decltype(_impl_.title_) {}

    , decltype(_impl_.summary_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.proposer_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.proposer_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_proposer().empty()) {
    _this->_impl_.proposer_.Set(from._internal_proposer(), _this->GetArenaForAllocation());
  }
  _impl_.metadata_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.metadata_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_metadata().empty()) {
    _this->_impl_.metadata_.Set(from._internal_metadata(), _this->GetArenaForAllocation());
  }
  _impl_.title_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.title_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_title().empty()) {
    _this->_impl_.title_.Set(from._internal_title(), _this->GetArenaForAllocation());
  }
  _impl_.summary_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.summary_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_summary().empty()) {
    _this->_impl_.summary_.Set(from._internal_summary(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.gov.v1.MsgSubmitProposal)
}

inline void MsgSubmitProposal::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.messages_){arena}
    , decltype(_impl_.initial_deposit_){arena}
    , decltype(_impl_.proposer_) {}

    , decltype(_impl_.metadata_) {}

    , decltype(_impl_.title_) {}

    , decltype(_impl_.summary_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.proposer_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.proposer_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.metadata_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.metadata_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.title_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.title_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.summary_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.summary_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgSubmitProposal::~MsgSubmitProposal() {
  // @@protoc_insertion_point(destructor:cosmos.gov.v1.MsgSubmitProposal)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgSubmitProposal::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_messages()->~RepeatedPtrField();
  _internal_mutable_initial_deposit()->~RepeatedPtrField();
  _impl_.proposer_.Destroy();
  _impl_.metadata_.Destroy();
  _impl_.title_.Destroy();
  _impl_.summary_.Destroy();
}

void MsgSubmitProposal::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgSubmitProposal::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.gov.v1.MsgSubmitProposal)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_messages()->Clear();
  _internal_mutable_initial_deposit()->Clear();
  _impl_.proposer_.ClearToEmpty();
  _impl_.metadata_.ClearToEmpty();
  _impl_.title_.ClearToEmpty();
  _impl_.summary_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgSubmitProposal::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .google.protobuf.Any messages = 1 [json_name = "messages"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_messages(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated .cosmos.base.v1beta1.Coin initial_deposit = 2 [json_name = "initialDeposit", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_initial_deposit(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // string proposer = 3 [json_name = "proposer", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_proposer();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.gov.v1.MsgSubmitProposal.proposer"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string metadata = 4 [json_name = "metadata"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_metadata();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.gov.v1.MsgSubmitProposal.metadata"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string title = 5 [json_name = "title"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_title();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.gov.v1.MsgSubmitProposal.title"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string summary = 6 [json_name = "summary"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_summary();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.gov.v1.MsgSubmitProposal.summary"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgSubmitProposal::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.gov.v1.MsgSubmitProposal)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.protobuf.Any messages = 1 [json_name = "messages"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_messages_size()); i < n; i++) {
    const auto& repfield = this->_internal_messages(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .cosmos.base.v1beta1.Coin initial_deposit = 2 [json_name = "initialDeposit", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_initial_deposit_size()); i < n; i++) {
    const auto& repfield = this->_internal_initial_deposit(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string proposer = 3 [json_name = "proposer", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_proposer().empty()) {
    const std::string& _s = this->_internal_proposer();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.gov.v1.MsgSubmitProposal.proposer");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string metadata = 4 [json_name = "metadata"];
  if (!this->_internal_metadata().empty()) {
    const std::string& _s = this->_internal_metadata();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.gov.v1.MsgSubmitProposal.metadata");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string title = 5 [json_name = "title"];
  if (!this->_internal_title().empty()) {
    const std::string& _s = this->_internal_title();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.gov.v1.MsgSubmitProposal.title");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // string summary = 6 [json_name = "summary"];
  if (!this->_internal_summary().empty()) {
    const std::string& _s = this->_internal_summary();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.gov.v1.MsgSubmitProposal.summary");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.gov.v1.MsgSubmitProposal)
  return target;
}

::size_t MsgSubmitProposal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.gov.v1.MsgSubmitProposal)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.protobuf.Any messages = 1 [json_name = "messages"];
  total_size += 1UL * this->_internal_messages_size();
  for (const auto& msg : this->_internal_messages()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .cosmos.base.v1beta1.Coin initial_deposit = 2 [json_name = "initialDeposit", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  total_size += 1UL * this->_internal_initial_deposit_size();
  for (const auto& msg : this->_internal_initial_deposit()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string proposer = 3 [json_name = "proposer", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_proposer().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_proposer());
  }

  // string metadata = 4 [json_name = "metadata"];
  if (!this->_internal_metadata().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_metadata());
  }

  // string title = 5 [json_name = "title"];
  if (!this->_internal_title().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_title());
  }

  // string summary = 6 [json_name = "summary"];
  if (!this->_internal_summary().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_summary());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgSubmitProposal::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgSubmitProposal::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgSubmitProposal::GetClassData() const { return &_class_data_; }


void MsgSubmitProposal::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgSubmitProposal*>(&to_msg);
  auto& from = static_cast<const MsgSubmitProposal&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.gov.v1.MsgSubmitProposal)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_messages()->MergeFrom(from._internal_messages());
  _this->_internal_mutable_initial_deposit()->MergeFrom(from._internal_initial_deposit());
  if (!from._internal_proposer().empty()) {
    _this->_internal_set_proposer(from._internal_proposer());
  }
  if (!from._internal_metadata().empty()) {
    _this->_internal_set_metadata(from._internal_metadata());
  }
  if (!from._internal_title().empty()) {
    _this->_internal_set_title(from._internal_title());
  }
  if (!from._internal_summary().empty()) {
    _this->_internal_set_summary(from._internal_summary());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgSubmitProposal::CopyFrom(const MsgSubmitProposal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.gov.v1.MsgSubmitProposal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSubmitProposal::IsInitialized() const {
  return true;
}

void MsgSubmitProposal::InternalSwap(MsgSubmitProposal* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_messages()->InternalSwap(other->_internal_mutable_messages());
  _internal_mutable_initial_deposit()->InternalSwap(other->_internal_mutable_initial_deposit());
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.proposer_, lhs_arena,
                                       &other->_impl_.proposer_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.metadata_, lhs_arena,
                                       &other->_impl_.metadata_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, lhs_arena,
                                       &other->_impl_.title_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.summary_, lhs_arena,
                                       &other->_impl_.summary_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgSubmitProposal::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fgov_2fv1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fgov_2fv1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fgov_2fv1_2ftx_2eproto[0]);
}
// ===================================================================

class MsgSubmitProposalResponse::_Internal {
 public:
};

MsgSubmitProposalResponse::MsgSubmitProposalResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.gov.v1.MsgSubmitProposalResponse)
}
MsgSubmitProposalResponse::MsgSubmitProposalResponse(const MsgSubmitProposalResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.gov.v1.MsgSubmitProposalResponse)
}

inline void MsgSubmitProposalResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.proposal_id_) { ::uint64_t{0u} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

MsgSubmitProposalResponse::~MsgSubmitProposalResponse() {
  // @@protoc_insertion_point(destructor:cosmos.gov.v1.MsgSubmitProposalResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgSubmitProposalResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}

void MsgSubmitProposalResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgSubmitProposalResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.gov.v1.MsgSubmitProposalResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.proposal_id_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgSubmitProposalResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 proposal_id = 1 [json_name = "proposalId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.proposal_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgSubmitProposalResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.gov.v1.MsgSubmitProposalResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 proposal_id = 1 [json_name = "proposalId"];
  if (this->_internal_proposal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_proposal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.gov.v1.MsgSubmitProposalResponse)
  return target;
}

::size_t MsgSubmitProposalResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.gov.v1.MsgSubmitProposalResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 proposal_id = 1 [json_name = "proposalId"];
  if (this->_internal_proposal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_proposal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgSubmitProposalResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgSubmitProposalResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgSubmitProposalResponse::GetClassData() const { return &_class_data_; }


void MsgSubmitProposalResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgSubmitProposalResponse*>(&to_msg);
  auto& from = static_cast<const MsgSubmitProposalResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.gov.v1.MsgSubmitProposalResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_proposal_id() != 0) {
    _this->_internal_set_proposal_id(from._internal_proposal_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgSubmitProposalResponse::CopyFrom(const MsgSubmitProposalResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.gov.v1.MsgSubmitProposalResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSubmitProposalResponse::IsInitialized() const {
  return true;
}

void MsgSubmitProposalResponse::InternalSwap(MsgSubmitProposalResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);

  swap(_impl_.proposal_id_, other->_impl_.proposal_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgSubmitProposalResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fgov_2fv1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fgov_2fv1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fgov_2fv1_2ftx_2eproto[1]);
}
// ===================================================================

class MsgExecLegacyContent::_Internal {
 public:
  using HasBits = decltype(std::declval<MsgExecLegacyContent>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MsgExecLegacyContent, _impl_._has_bits_);
  static const ::PROTOBUF_NAMESPACE_ID::Any& content(const MsgExecLegacyContent* msg);
  static void set_has_content(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::PROTOBUF_NAMESPACE_ID::Any&
MsgExecLegacyContent::_Internal::content(const MsgExecLegacyContent* msg) {
  return *msg->_impl_.content_;
}
void MsgExecLegacyContent::clear_content() {
  if (_impl_.content_ != nullptr) _impl_.content_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
MsgExecLegacyContent::MsgExecLegacyContent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.gov.v1.MsgExecLegacyContent)
}
MsgExecLegacyContent::MsgExecLegacyContent(const MsgExecLegacyContent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgExecLegacyContent* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.authority_) {}

    , decltype(_impl_.content_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.authority_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.authority_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_authority().empty()) {
    _this->_impl_.authority_.Set(from._internal_authority(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.content_ = new ::PROTOBUF_NAMESPACE_ID::Any(*from._impl_.content_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.gov.v1.MsgExecLegacyContent)
}

inline void MsgExecLegacyContent::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.authority_) {}

    , decltype(_impl_.content_){nullptr}
  };
  _impl_.authority_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.authority_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgExecLegacyContent::~MsgExecLegacyContent() {
  // @@protoc_insertion_point(destructor:cosmos.gov.v1.MsgExecLegacyContent)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgExecLegacyContent::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.authority_.Destroy();
  if (this != internal_default_instance()) delete _impl_.content_;
}

void MsgExecLegacyContent::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgExecLegacyContent::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.gov.v1.MsgExecLegacyContent)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.authority_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.content_ != nullptr);
    _impl_.content_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgExecLegacyContent::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.protobuf.Any content = 1 [json_name = "content", (.cosmos_proto.accepts_interface) = "cosmos.gov.v1beta1.Content"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_content(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string authority = 2 [json_name = "authority"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_authority();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.gov.v1.MsgExecLegacyContent.authority"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgExecLegacyContent::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.gov.v1.MsgExecLegacyContent)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Any content = 1 [json_name = "content", (.cosmos_proto.accepts_interface) = "cosmos.gov.v1beta1.Content"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::content(this),
        _Internal::content(this).GetCachedSize(), target, stream);
  }

  // string authority = 2 [json_name = "authority"];
  if (!this->_internal_authority().empty()) {
    const std::string& _s = this->_internal_authority();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.gov.v1.MsgExecLegacyContent.authority");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.gov.v1.MsgExecLegacyContent)
  return target;
}

::size_t MsgExecLegacyContent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.gov.v1.MsgExecLegacyContent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string authority = 2 [json_name = "authority"];
  if (!this->_internal_authority().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_authority());
  }

  // .google.protobuf.Any content = 1 [json_name = "content", (.cosmos_proto.accepts_interface) = "cosmos.gov.v1beta1.Content"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.content_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgExecLegacyContent::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgExecLegacyContent::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgExecLegacyContent::GetClassData() const { return &_class_data_; }


void MsgExecLegacyContent::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgExecLegacyContent*>(&to_msg);
  auto& from = static_cast<const MsgExecLegacyContent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.gov.v1.MsgExecLegacyContent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_authority().empty()) {
    _this->_internal_set_authority(from._internal_authority());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_content()->::PROTOBUF_NAMESPACE_ID::Any::MergeFrom(
        from._internal_content());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgExecLegacyContent::CopyFrom(const MsgExecLegacyContent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.gov.v1.MsgExecLegacyContent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgExecLegacyContent::IsInitialized() const {
  return true;
}

void MsgExecLegacyContent::InternalSwap(MsgExecLegacyContent* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.authority_, lhs_arena,
                                       &other->_impl_.authority_, rhs_arena);
  swap(_impl_.content_, other->_impl_.content_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgExecLegacyContent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fgov_2fv1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fgov_2fv1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fgov_2fv1_2ftx_2eproto[2]);
}
// ===================================================================

class MsgExecLegacyContentResponse::_Internal {
 public:
};

MsgExecLegacyContentResponse::MsgExecLegacyContentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cosmos.gov.v1.MsgExecLegacyContentResponse)
}
MsgExecLegacyContentResponse::MsgExecLegacyContentResponse(const MsgExecLegacyContentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgExecLegacyContentResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.gov.v1.MsgExecLegacyContentResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgExecLegacyContentResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgExecLegacyContentResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgExecLegacyContentResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fgov_2fv1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fgov_2fv1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fgov_2fv1_2ftx_2eproto[3]);
}
// ===================================================================

class MsgVote::_Internal {
 public:
};

MsgVote::MsgVote(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.gov.v1.MsgVote)
}
MsgVote::MsgVote(const MsgVote& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgVote* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.voter_) {}

    , decltype(_impl_.metadata_) {}

    , decltype(_impl_.proposal_id_) {}

    , decltype(_impl_.option_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.voter_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.voter_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_voter().empty()) {
    _this->_impl_.voter_.Set(from._internal_voter(), _this->GetArenaForAllocation());
  }
  _impl_.metadata_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.metadata_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_metadata().empty()) {
    _this->_impl_.metadata_.Set(from._internal_metadata(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.proposal_id_, &from._impl_.proposal_id_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.option_) -
    reinterpret_cast<char*>(&_impl_.proposal_id_)) + sizeof(_impl_.option_));
  // @@protoc_insertion_point(copy_constructor:cosmos.gov.v1.MsgVote)
}

inline void MsgVote::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.voter_) {}

    , decltype(_impl_.metadata_) {}

    , decltype(_impl_.proposal_id_) { ::uint64_t{0u} }

    , decltype(_impl_.option_) { 0 }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.voter_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.voter_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.metadata_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.metadata_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgVote::~MsgVote() {
  // @@protoc_insertion_point(destructor:cosmos.gov.v1.MsgVote)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgVote::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.voter_.Destroy();
  _impl_.metadata_.Destroy();
}

void MsgVote::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgVote::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.gov.v1.MsgVote)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.voter_.ClearToEmpty();
  _impl_.metadata_.ClearToEmpty();
  ::memset(&_impl_.proposal_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.option_) -
      reinterpret_cast<char*>(&_impl_.proposal_id_)) + sizeof(_impl_.option_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgVote::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 proposal_id = 1 [json_name = "proposalId", (.gogoproto.jsontag) = "proposal_id", (.amino.dont_omitempty) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.proposal_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string voter = 2 [json_name = "voter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_voter();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.gov.v1.MsgVote.voter"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.gov.v1.VoteOption option = 3 [json_name = "option"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 24)) {
          ::int32_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
          _internal_set_option(static_cast<::cosmos::gov::v1::VoteOption>(val));
        } else {
          goto handle_unusual;
        }
        continue;
      // string metadata = 4 [json_name = "metadata"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_metadata();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.gov.v1.MsgVote.metadata"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgVote::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.gov.v1.MsgVote)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 proposal_id = 1 [json_name = "proposalId", (.gogoproto.jsontag) = "proposal_id", (.amino.dont_omitempty) = true];
  if (this->_internal_proposal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_proposal_id(), target);
  }

  // string voter = 2 [json_name = "voter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_voter().empty()) {
    const std::string& _s = this->_internal_voter();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.gov.v1.MsgVote.voter");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // .cosmos.gov.v1.VoteOption option = 3 [json_name = "option"];
  if (this->_internal_option() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_option(), target);
  }

  // string metadata = 4 [json_name = "metadata"];
  if (!this->_internal_metadata().empty()) {
    const std::string& _s = this->_internal_metadata();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.gov.v1.MsgVote.metadata");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.gov.v1.MsgVote)
  return target;
}

::size_t MsgVote::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.gov.v1.MsgVote)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string voter = 2 [json_name = "voter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_voter().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_voter());
  }

  // string metadata = 4 [json_name = "metadata"];
  if (!this->_internal_metadata().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_metadata());
  }

  // uint64 proposal_id = 1 [json_name = "proposalId", (.gogoproto.jsontag) = "proposal_id", (.amino.dont_omitempty) = true];
  if (this->_internal_proposal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_proposal_id());
  }

  // .cosmos.gov.v1.VoteOption option = 3 [json_name = "option"];
  if (this->_internal_option() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_option());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgVote::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgVote::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgVote::GetClassData() const { return &_class_data_; }


void MsgVote::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgVote*>(&to_msg);
  auto& from = static_cast<const MsgVote&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.gov.v1.MsgVote)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_voter().empty()) {
    _this->_internal_set_voter(from._internal_voter());
  }
  if (!from._internal_metadata().empty()) {
    _this->_internal_set_metadata(from._internal_metadata());
  }
  if (from._internal_proposal_id() != 0) {
    _this->_internal_set_proposal_id(from._internal_proposal_id());
  }
  if (from._internal_option() != 0) {
    _this->_internal_set_option(from._internal_option());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgVote::CopyFrom(const MsgVote& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.gov.v1.MsgVote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgVote::IsInitialized() const {
  return true;
}

void MsgVote::InternalSwap(MsgVote* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.voter_, lhs_arena,
                                       &other->_impl_.voter_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.metadata_, lhs_arena,
                                       &other->_impl_.metadata_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MsgVote, _impl_.option_)
      + sizeof(MsgVote::_impl_.option_)
      - PROTOBUF_FIELD_OFFSET(MsgVote, _impl_.proposal_id_)>(
          reinterpret_cast<char*>(&_impl_.proposal_id_),
          reinterpret_cast<char*>(&other->_impl_.proposal_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgVote::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fgov_2fv1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fgov_2fv1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fgov_2fv1_2ftx_2eproto[4]);
}
// ===================================================================

class MsgVoteResponse::_Internal {
 public:
};

MsgVoteResponse::MsgVoteResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cosmos.gov.v1.MsgVoteResponse)
}
MsgVoteResponse::MsgVoteResponse(const MsgVoteResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgVoteResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.gov.v1.MsgVoteResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgVoteResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgVoteResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgVoteResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fgov_2fv1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fgov_2fv1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fgov_2fv1_2ftx_2eproto[5]);
}
// ===================================================================

class MsgVoteWeighted::_Internal {
 public:
};

void MsgVoteWeighted::clear_options() {
  _internal_mutable_options()->Clear();
}
MsgVoteWeighted::MsgVoteWeighted(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.gov.v1.MsgVoteWeighted)
}
MsgVoteWeighted::MsgVoteWeighted(const MsgVoteWeighted& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgVoteWeighted* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.options_){from._impl_.options_}
    , decltype(_impl_.voter_) {}

    , decltype(_impl_.metadata_) {}

    , decltype(_impl_.proposal_id_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.voter_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.voter_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_voter().empty()) {
    _this->_impl_.voter_.Set(from._internal_voter(), _this->GetArenaForAllocation());
  }
  _impl_.metadata_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.metadata_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_metadata().empty()) {
    _this->_impl_.metadata_.Set(from._internal_metadata(), _this->GetArenaForAllocation());
  }
  _this->_impl_.proposal_id_ = from._impl_.proposal_id_;
  // @@protoc_insertion_point(copy_constructor:cosmos.gov.v1.MsgVoteWeighted)
}

inline void MsgVoteWeighted::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.options_){arena}
    , decltype(_impl_.voter_) {}

    , decltype(_impl_.metadata_) {}

    , decltype(_impl_.proposal_id_) { ::uint64_t{0u} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.voter_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.voter_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.metadata_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.metadata_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgVoteWeighted::~MsgVoteWeighted() {
  // @@protoc_insertion_point(destructor:cosmos.gov.v1.MsgVoteWeighted)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgVoteWeighted::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_options()->~RepeatedPtrField();
  _impl_.voter_.Destroy();
  _impl_.metadata_.Destroy();
}

void MsgVoteWeighted::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgVoteWeighted::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.gov.v1.MsgVoteWeighted)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_options()->Clear();
  _impl_.voter_.ClearToEmpty();
  _impl_.metadata_.ClearToEmpty();
  _impl_.proposal_id_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgVoteWeighted::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 proposal_id = 1 [json_name = "proposalId", (.gogoproto.jsontag) = "proposal_id", (.amino.dont_omitempty) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.proposal_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string voter = 2 [json_name = "voter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_voter();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.gov.v1.MsgVoteWeighted.voter"));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated .cosmos.gov.v1.WeightedVoteOption options = 3 [json_name = "options"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_options(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // string metadata = 4 [json_name = "metadata"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_metadata();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.gov.v1.MsgVoteWeighted.metadata"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgVoteWeighted::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.gov.v1.MsgVoteWeighted)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 proposal_id = 1 [json_name = "proposalId", (.gogoproto.jsontag) = "proposal_id", (.amino.dont_omitempty) = true];
  if (this->_internal_proposal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_proposal_id(), target);
  }

  // string voter = 2 [json_name = "voter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_voter().empty()) {
    const std::string& _s = this->_internal_voter();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.gov.v1.MsgVoteWeighted.voter");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // repeated .cosmos.gov.v1.WeightedVoteOption options = 3 [json_name = "options"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_options_size()); i < n; i++) {
    const auto& repfield = this->_internal_options(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string metadata = 4 [json_name = "metadata"];
  if (!this->_internal_metadata().empty()) {
    const std::string& _s = this->_internal_metadata();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.gov.v1.MsgVoteWeighted.metadata");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.gov.v1.MsgVoteWeighted)
  return target;
}

::size_t MsgVoteWeighted::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.gov.v1.MsgVoteWeighted)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cosmos.gov.v1.WeightedVoteOption options = 3 [json_name = "options"];
  total_size += 1UL * this->_internal_options_size();
  for (const auto& msg : this->_internal_options()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string voter = 2 [json_name = "voter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_voter().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_voter());
  }

  // string metadata = 4 [json_name = "metadata"];
  if (!this->_internal_metadata().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_metadata());
  }

  // uint64 proposal_id = 1 [json_name = "proposalId", (.gogoproto.jsontag) = "proposal_id", (.amino.dont_omitempty) = true];
  if (this->_internal_proposal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_proposal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgVoteWeighted::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgVoteWeighted::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgVoteWeighted::GetClassData() const { return &_class_data_; }


void MsgVoteWeighted::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgVoteWeighted*>(&to_msg);
  auto& from = static_cast<const MsgVoteWeighted&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.gov.v1.MsgVoteWeighted)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_options()->MergeFrom(from._internal_options());
  if (!from._internal_voter().empty()) {
    _this->_internal_set_voter(from._internal_voter());
  }
  if (!from._internal_metadata().empty()) {
    _this->_internal_set_metadata(from._internal_metadata());
  }
  if (from._internal_proposal_id() != 0) {
    _this->_internal_set_proposal_id(from._internal_proposal_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgVoteWeighted::CopyFrom(const MsgVoteWeighted& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.gov.v1.MsgVoteWeighted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgVoteWeighted::IsInitialized() const {
  return true;
}

void MsgVoteWeighted::InternalSwap(MsgVoteWeighted* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_options()->InternalSwap(other->_internal_mutable_options());
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.voter_, lhs_arena,
                                       &other->_impl_.voter_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.metadata_, lhs_arena,
                                       &other->_impl_.metadata_, rhs_arena);

  swap(_impl_.proposal_id_, other->_impl_.proposal_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgVoteWeighted::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fgov_2fv1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fgov_2fv1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fgov_2fv1_2ftx_2eproto[6]);
}
// ===================================================================

class MsgVoteWeightedResponse::_Internal {
 public:
};

MsgVoteWeightedResponse::MsgVoteWeightedResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cosmos.gov.v1.MsgVoteWeightedResponse)
}
MsgVoteWeightedResponse::MsgVoteWeightedResponse(const MsgVoteWeightedResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgVoteWeightedResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.gov.v1.MsgVoteWeightedResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgVoteWeightedResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgVoteWeightedResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgVoteWeightedResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fgov_2fv1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fgov_2fv1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fgov_2fv1_2ftx_2eproto[7]);
}
// ===================================================================

class MsgDeposit::_Internal {
 public:
};

void MsgDeposit::clear_amount() {
  _internal_mutable_amount()->Clear();
}
MsgDeposit::MsgDeposit(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.gov.v1.MsgDeposit)
}
MsgDeposit::MsgDeposit(const MsgDeposit& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgDeposit* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.amount_){from._impl_.amount_}
    , decltype(_impl_.depositor_) {}

    , decltype(_impl_.proposal_id_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.depositor_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.depositor_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_depositor().empty()) {
    _this->_impl_.depositor_.Set(from._internal_depositor(), _this->GetArenaForAllocation());
  }
  _this->_impl_.proposal_id_ = from._impl_.proposal_id_;
  // @@protoc_insertion_point(copy_constructor:cosmos.gov.v1.MsgDeposit)
}

inline void MsgDeposit::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.amount_){arena}
    , decltype(_impl_.depositor_) {}

    , decltype(_impl_.proposal_id_) { ::uint64_t{0u} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.depositor_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.depositor_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgDeposit::~MsgDeposit() {
  // @@protoc_insertion_point(destructor:cosmos.gov.v1.MsgDeposit)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgDeposit::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_amount()->~RepeatedPtrField();
  _impl_.depositor_.Destroy();
}

void MsgDeposit::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgDeposit::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.gov.v1.MsgDeposit)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_amount()->Clear();
  _impl_.depositor_.ClearToEmpty();
  _impl_.proposal_id_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgDeposit::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 proposal_id = 1 [json_name = "proposalId", (.gogoproto.jsontag) = "proposal_id", (.amino.dont_omitempty) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.proposal_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string depositor = 2 [json_name = "depositor", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_depositor();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.gov.v1.MsgDeposit.depositor"));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_amount(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgDeposit::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.gov.v1.MsgDeposit)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 proposal_id = 1 [json_name = "proposalId", (.gogoproto.jsontag) = "proposal_id", (.amino.dont_omitempty) = true];
  if (this->_internal_proposal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_proposal_id(), target);
  }

  // string depositor = 2 [json_name = "depositor", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_depositor().empty()) {
    const std::string& _s = this->_internal_depositor();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.gov.v1.MsgDeposit.depositor");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // repeated .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_amount_size()); i < n; i++) {
    const auto& repfield = this->_internal_amount(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.gov.v1.MsgDeposit)
  return target;
}

::size_t MsgDeposit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.gov.v1.MsgDeposit)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  total_size += 1UL * this->_internal_amount_size();
  for (const auto& msg : this->_internal_amount()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string depositor = 2 [json_name = "depositor", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_depositor().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_depositor());
  }

  // uint64 proposal_id = 1 [json_name = "proposalId", (.gogoproto.jsontag) = "proposal_id", (.amino.dont_omitempty) = true];
  if (this->_internal_proposal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_proposal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgDeposit::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgDeposit::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgDeposit::GetClassData() const { return &_class_data_; }


void MsgDeposit::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgDeposit*>(&to_msg);
  auto& from = static_cast<const MsgDeposit&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.gov.v1.MsgDeposit)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_amount()->MergeFrom(from._internal_amount());
  if (!from._internal_depositor().empty()) {
    _this->_internal_set_depositor(from._internal_depositor());
  }
  if (from._internal_proposal_id() != 0) {
    _this->_internal_set_proposal_id(from._internal_proposal_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgDeposit::CopyFrom(const MsgDeposit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.gov.v1.MsgDeposit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDeposit::IsInitialized() const {
  return true;
}

void MsgDeposit::InternalSwap(MsgDeposit* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_amount()->InternalSwap(other->_internal_mutable_amount());
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.depositor_, lhs_arena,
                                       &other->_impl_.depositor_, rhs_arena);

  swap(_impl_.proposal_id_, other->_impl_.proposal_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgDeposit::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fgov_2fv1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fgov_2fv1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fgov_2fv1_2ftx_2eproto[8]);
}
// ===================================================================

class MsgDepositResponse::_Internal {
 public:
};

MsgDepositResponse::MsgDepositResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cosmos.gov.v1.MsgDepositResponse)
}
MsgDepositResponse::MsgDepositResponse(const MsgDepositResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgDepositResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.gov.v1.MsgDepositResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgDepositResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgDepositResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgDepositResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fgov_2fv1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fgov_2fv1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fgov_2fv1_2ftx_2eproto[9]);
}
// ===================================================================

class MsgUpdateParams::_Internal {
 public:
  using HasBits = decltype(std::declval<MsgUpdateParams>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MsgUpdateParams, _impl_._has_bits_);
  static const ::cosmos::gov::v1::Params& params(const MsgUpdateParams* msg);
  static void set_has_params(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::gov::v1::Params&
MsgUpdateParams::_Internal::params(const MsgUpdateParams* msg) {
  return *msg->_impl_.params_;
}
void MsgUpdateParams::clear_params() {
  if (_impl_.params_ != nullptr) _impl_.params_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
MsgUpdateParams::MsgUpdateParams(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.gov.v1.MsgUpdateParams)
}
MsgUpdateParams::MsgUpdateParams(const MsgUpdateParams& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgUpdateParams* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.authority_) {}

    , decltype(_impl_.params_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.authority_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.authority_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_authority().empty()) {
    _this->_impl_.authority_.Set(from._internal_authority(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.params_ = new ::cosmos::gov::v1::Params(*from._impl_.params_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.gov.v1.MsgUpdateParams)
}

inline void MsgUpdateParams::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.authority_) {}

    , decltype(_impl_.params_){nullptr}
  };
  _impl_.authority_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.authority_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgUpdateParams::~MsgUpdateParams() {
  // @@protoc_insertion_point(destructor:cosmos.gov.v1.MsgUpdateParams)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgUpdateParams::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.authority_.Destroy();
  if (this != internal_default_instance()) delete _impl_.params_;
}

void MsgUpdateParams::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgUpdateParams::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.gov.v1.MsgUpdateParams)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.authority_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.params_ != nullptr);
    _impl_.params_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgUpdateParams::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_authority();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.gov.v1.MsgUpdateParams.authority"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.gov.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgUpdateParams::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.gov.v1.MsgUpdateParams)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_authority().empty()) {
    const std::string& _s = this->_internal_authority();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.gov.v1.MsgUpdateParams.authority");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.gov.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.gov.v1.MsgUpdateParams)
  return target;
}

::size_t MsgUpdateParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.gov.v1.MsgUpdateParams)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_authority().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_authority());
  }

  // .cosmos.gov.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgUpdateParams::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgUpdateParams::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgUpdateParams::GetClassData() const { return &_class_data_; }


void MsgUpdateParams::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgUpdateParams*>(&to_msg);
  auto& from = static_cast<const MsgUpdateParams&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.gov.v1.MsgUpdateParams)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_authority().empty()) {
    _this->_internal_set_authority(from._internal_authority());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_params()->::cosmos::gov::v1::Params::MergeFrom(
        from._internal_params());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgUpdateParams::CopyFrom(const MsgUpdateParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.gov.v1.MsgUpdateParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgUpdateParams::IsInitialized() const {
  return true;
}

void MsgUpdateParams::InternalSwap(MsgUpdateParams* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.authority_, lhs_arena,
                                       &other->_impl_.authority_, rhs_arena);
  swap(_impl_.params_, other->_impl_.params_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgUpdateParams::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fgov_2fv1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fgov_2fv1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fgov_2fv1_2ftx_2eproto[10]);
}
// ===================================================================

class MsgUpdateParamsResponse::_Internal {
 public:
};

MsgUpdateParamsResponse::MsgUpdateParamsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cosmos.gov.v1.MsgUpdateParamsResponse)
}
MsgUpdateParamsResponse::MsgUpdateParamsResponse(const MsgUpdateParamsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgUpdateParamsResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.gov.v1.MsgUpdateParamsResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgUpdateParamsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgUpdateParamsResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgUpdateParamsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fgov_2fv1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fgov_2fv1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fgov_2fv1_2ftx_2eproto[11]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace gov
}  // namespace cosmos
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::cosmos::gov::v1::MsgSubmitProposal*
Arena::CreateMaybeMessage< ::cosmos::gov::v1::MsgSubmitProposal >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::gov::v1::MsgSubmitProposal >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::gov::v1::MsgSubmitProposalResponse*
Arena::CreateMaybeMessage< ::cosmos::gov::v1::MsgSubmitProposalResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::gov::v1::MsgSubmitProposalResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::gov::v1::MsgExecLegacyContent*
Arena::CreateMaybeMessage< ::cosmos::gov::v1::MsgExecLegacyContent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::gov::v1::MsgExecLegacyContent >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::gov::v1::MsgExecLegacyContentResponse*
Arena::CreateMaybeMessage< ::cosmos::gov::v1::MsgExecLegacyContentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::gov::v1::MsgExecLegacyContentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::gov::v1::MsgVote*
Arena::CreateMaybeMessage< ::cosmos::gov::v1::MsgVote >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::gov::v1::MsgVote >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::gov::v1::MsgVoteResponse*
Arena::CreateMaybeMessage< ::cosmos::gov::v1::MsgVoteResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::gov::v1::MsgVoteResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::gov::v1::MsgVoteWeighted*
Arena::CreateMaybeMessage< ::cosmos::gov::v1::MsgVoteWeighted >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::gov::v1::MsgVoteWeighted >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::gov::v1::MsgVoteWeightedResponse*
Arena::CreateMaybeMessage< ::cosmos::gov::v1::MsgVoteWeightedResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::gov::v1::MsgVoteWeightedResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::gov::v1::MsgDeposit*
Arena::CreateMaybeMessage< ::cosmos::gov::v1::MsgDeposit >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::gov::v1::MsgDeposit >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::gov::v1::MsgDepositResponse*
Arena::CreateMaybeMessage< ::cosmos::gov::v1::MsgDepositResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::gov::v1::MsgDepositResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::gov::v1::MsgUpdateParams*
Arena::CreateMaybeMessage< ::cosmos::gov::v1::MsgUpdateParams >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::gov::v1::MsgUpdateParams >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::gov::v1::MsgUpdateParamsResponse*
Arena::CreateMaybeMessage< ::cosmos::gov::v1::MsgUpdateParamsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::gov::v1::MsgUpdateParamsResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
