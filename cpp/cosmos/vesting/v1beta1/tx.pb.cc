// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/vesting/v1beta1/tx.proto

#include "cosmos/vesting/v1beta1/tx.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace cosmos {
namespace vesting {
namespace v1beta1 {
template <typename>
PROTOBUF_CONSTEXPR MsgCreateVestingAccount::MsgCreateVestingAccount(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.amount_)*/{}
  , /*decltype(_impl_.from_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.to_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.end_time_)*/ ::int64_t{0}

  , /*decltype(_impl_.delayed_)*/ false

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgCreateVestingAccountDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgCreateVestingAccountDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgCreateVestingAccountDefaultTypeInternal() {}
  union {
    MsgCreateVestingAccount _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgCreateVestingAccountDefaultTypeInternal _MsgCreateVestingAccount_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgCreateVestingAccountResponse::MsgCreateVestingAccountResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgCreateVestingAccountResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgCreateVestingAccountResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgCreateVestingAccountResponseDefaultTypeInternal() {}
  union {
    MsgCreateVestingAccountResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgCreateVestingAccountResponseDefaultTypeInternal _MsgCreateVestingAccountResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgCreatePermanentLockedAccount::MsgCreatePermanentLockedAccount(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.amount_)*/{}
  , /*decltype(_impl_.from_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.to_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgCreatePermanentLockedAccountDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgCreatePermanentLockedAccountDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgCreatePermanentLockedAccountDefaultTypeInternal() {}
  union {
    MsgCreatePermanentLockedAccount _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgCreatePermanentLockedAccountDefaultTypeInternal _MsgCreatePermanentLockedAccount_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgCreatePermanentLockedAccountResponse::MsgCreatePermanentLockedAccountResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgCreatePermanentLockedAccountResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgCreatePermanentLockedAccountResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgCreatePermanentLockedAccountResponseDefaultTypeInternal() {}
  union {
    MsgCreatePermanentLockedAccountResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgCreatePermanentLockedAccountResponseDefaultTypeInternal _MsgCreatePermanentLockedAccountResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgCreatePeriodicVestingAccount::MsgCreatePeriodicVestingAccount(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.vesting_periods_)*/{}
  , /*decltype(_impl_.from_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.to_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.start_time_)*/ ::int64_t{0}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgCreatePeriodicVestingAccountDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgCreatePeriodicVestingAccountDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgCreatePeriodicVestingAccountDefaultTypeInternal() {}
  union {
    MsgCreatePeriodicVestingAccount _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgCreatePeriodicVestingAccountDefaultTypeInternal _MsgCreatePeriodicVestingAccount_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgCreatePeriodicVestingAccountResponse::MsgCreatePeriodicVestingAccountResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgCreatePeriodicVestingAccountResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgCreatePeriodicVestingAccountResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgCreatePeriodicVestingAccountResponseDefaultTypeInternal() {}
  union {
    MsgCreatePeriodicVestingAccountResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgCreatePeriodicVestingAccountResponseDefaultTypeInternal _MsgCreatePeriodicVestingAccountResponse_default_instance_;
}  // namespace v1beta1
}  // namespace vesting
}  // namespace cosmos
static ::_pb::Metadata file_level_metadata_cosmos_2fvesting_2fv1beta1_2ftx_2eproto[6];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_cosmos_2fvesting_2fv1beta1_2ftx_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cosmos_2fvesting_2fv1beta1_2ftx_2eproto = nullptr;
const ::uint32_t TableStruct_cosmos_2fvesting_2fv1beta1_2ftx_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::vesting::v1beta1::MsgCreateVestingAccount, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::vesting::v1beta1::MsgCreateVestingAccount, _impl_.from_address_),
    PROTOBUF_FIELD_OFFSET(::cosmos::vesting::v1beta1::MsgCreateVestingAccount, _impl_.to_address_),
    PROTOBUF_FIELD_OFFSET(::cosmos::vesting::v1beta1::MsgCreateVestingAccount, _impl_.amount_),
    PROTOBUF_FIELD_OFFSET(::cosmos::vesting::v1beta1::MsgCreateVestingAccount, _impl_.end_time_),
    PROTOBUF_FIELD_OFFSET(::cosmos::vesting::v1beta1::MsgCreateVestingAccount, _impl_.delayed_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::vesting::v1beta1::MsgCreateVestingAccountResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::vesting::v1beta1::MsgCreatePermanentLockedAccount, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::vesting::v1beta1::MsgCreatePermanentLockedAccount, _impl_.from_address_),
    PROTOBUF_FIELD_OFFSET(::cosmos::vesting::v1beta1::MsgCreatePermanentLockedAccount, _impl_.to_address_),
    PROTOBUF_FIELD_OFFSET(::cosmos::vesting::v1beta1::MsgCreatePermanentLockedAccount, _impl_.amount_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::vesting::v1beta1::MsgCreatePermanentLockedAccountResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::vesting::v1beta1::MsgCreatePeriodicVestingAccount, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::vesting::v1beta1::MsgCreatePeriodicVestingAccount, _impl_.from_address_),
    PROTOBUF_FIELD_OFFSET(::cosmos::vesting::v1beta1::MsgCreatePeriodicVestingAccount, _impl_.to_address_),
    PROTOBUF_FIELD_OFFSET(::cosmos::vesting::v1beta1::MsgCreatePeriodicVestingAccount, _impl_.start_time_),
    PROTOBUF_FIELD_OFFSET(::cosmos::vesting::v1beta1::MsgCreatePeriodicVestingAccount, _impl_.vesting_periods_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::vesting::v1beta1::MsgCreatePeriodicVestingAccountResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::cosmos::vesting::v1beta1::MsgCreateVestingAccount)},
        { 13, -1, -1, sizeof(::cosmos::vesting::v1beta1::MsgCreateVestingAccountResponse)},
        { 21, -1, -1, sizeof(::cosmos::vesting::v1beta1::MsgCreatePermanentLockedAccount)},
        { 32, -1, -1, sizeof(::cosmos::vesting::v1beta1::MsgCreatePermanentLockedAccountResponse)},
        { 40, -1, -1, sizeof(::cosmos::vesting::v1beta1::MsgCreatePeriodicVestingAccount)},
        { 52, -1, -1, sizeof(::cosmos::vesting::v1beta1::MsgCreatePeriodicVestingAccountResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::cosmos::vesting::v1beta1::_MsgCreateVestingAccount_default_instance_._instance,
    &::cosmos::vesting::v1beta1::_MsgCreateVestingAccountResponse_default_instance_._instance,
    &::cosmos::vesting::v1beta1::_MsgCreatePermanentLockedAccount_default_instance_._instance,
    &::cosmos::vesting::v1beta1::_MsgCreatePermanentLockedAccountResponse_default_instance_._instance,
    &::cosmos::vesting::v1beta1::_MsgCreatePeriodicVestingAccount_default_instance_._instance,
    &::cosmos::vesting::v1beta1::_MsgCreatePeriodicVestingAccountResponse_default_instance_._instance,
};
const char descriptor_table_protodef_cosmos_2fvesting_2fv1beta1_2ftx_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\037cosmos/vesting/v1beta1/tx.proto\022\026cosmo"
    "s.vesting.v1beta1\032\024gogoproto/gogo.proto\032"
    "\036cosmos/base/v1beta1/coin.proto\032\031cosmos_"
    "proto/cosmos.proto\032$cosmos/vesting/v1bet"
    "a1/vesting.proto\032\027cosmos/msg/v1/msg.prot"
    "o\032\021amino/amino.proto\"\354\002\n\027MsgCreateVestin"
    "gAccount\022;\n\014from_address\030\001 \001(\tB\030\322\264-\024cosm"
    "os.AddressStringR\013fromAddress\0227\n\nto_addr"
    "ess\030\002 \001(\tB\030\322\264-\024cosmos.AddressStringR\ttoA"
    "ddress\022h\n\006amount\030\003 \003(\0132\031.cosmos.base.v1b"
    "eta1.CoinB5\310\336\037\000\252\337\037(github.com/cosmos/cos"
    "mos-sdk/types.Coins\250\347\260*\001R\006amount\022\031\n\010end_"
    "time\030\004 \001(\003R\007endTime\022\030\n\007delayed\030\005 \001(\010R\007de"
    "layed:<\350\240\037\001\202\347\260*\014from_address\212\347\260*\"cosmos-"
    "sdk/MsgCreateVestingAccount\"!\n\037MsgCreate"
    "VestingAccountResponse\"\276\002\n\037MsgCreatePerm"
    "anentLockedAccount\022:\n\014from_address\030\001 \001(\t"
    "B\027\362\336\037\023yaml:\"from_address\"R\013fromAddress\0224"
    "\n\nto_address\030\002 \001(\tB\025\362\336\037\021yaml:\"to_address"
    "\"R\ttoAddress\022h\n\006amount\030\003 \003(\0132\031.cosmos.ba"
    "se.v1beta1.CoinB5\310\336\037\000\252\337\037(github.com/cosm"
    "os/cosmos-sdk/types.Coins\250\347\260*\001R\006amount:\?"
    "\350\240\037\001\202\347\260*\014from_address\212\347\260*%cosmos-sdk/Msg"
    "CreatePermLockedAccount\")\n\'MsgCreatePerm"
    "anentLockedAccountResponse\"\234\002\n\037MsgCreate"
    "PeriodicVestingAccount\022!\n\014from_address\030\001"
    " \001(\tR\013fromAddress\022\035\n\nto_address\030\002 \001(\tR\tt"
    "oAddress\022\035\n\nstart_time\030\003 \001(\003R\tstartTime\022"
    "R\n\017vesting_periods\030\004 \003(\0132\036.cosmos.vestin"
    "g.v1beta1.PeriodB\t\310\336\037\000\250\347\260*\001R\016vestingPeri"
    "ods:D\350\240\037\000\202\347\260*\014from_address\212\347\260**cosmos-sd"
    "k/MsgCreatePeriodicVestingAccount\")\n\'Msg"
    "CreatePeriodicVestingAccountResponse2\305\003\n"
    "\003Msg\022\200\001\n\024CreateVestingAccount\022/.cosmos.v"
    "esting.v1beta1.MsgCreateVestingAccount\0327"
    ".cosmos.vesting.v1beta1.MsgCreateVesting"
    "AccountResponse\022\230\001\n\034CreatePermanentLocke"
    "dAccount\0227.cosmos.vesting.v1beta1.MsgCre"
    "atePermanentLockedAccount\032\?.cosmos.vesti"
    "ng.v1beta1.MsgCreatePermanentLockedAccou"
    "ntResponse\022\230\001\n\034CreatePeriodicVestingAcco"
    "unt\0227.cosmos.vesting.v1beta1.MsgCreatePe"
    "riodicVestingAccount\032\?.cosmos.vesting.v1"
    "beta1.MsgCreatePeriodicVestingAccountRes"
    "ponse\032\005\200\347\260*\001B\322\001\n\032com.cosmos.vesting.v1be"
    "ta1B\007TxProtoP\001Z1github.com/cosmos/cosmos"
    "-sdk/x/auth/vesting/types\242\002\003CVX\252\002\026Cosmos"
    ".Vesting.V1beta1\312\002\026Cosmos\\Vesting\\V1beta"
    "1\342\002\"Cosmos\\Vesting\\V1beta1\\GPBMetadata\352\002"
    "\030Cosmos::Vesting::V1beta1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_cosmos_2fvesting_2fv1beta1_2ftx_2eproto_deps[6] =
    {
        &::descriptor_table_amino_2famino_2eproto,
        &::descriptor_table_cosmos_2fbase_2fv1beta1_2fcoin_2eproto,
        &::descriptor_table_cosmos_2fmsg_2fv1_2fmsg_2eproto,
        &::descriptor_table_cosmos_2fvesting_2fv1beta1_2fvesting_2eproto,
        &::descriptor_table_cosmos_5fproto_2fcosmos_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
};
static ::absl::once_flag descriptor_table_cosmos_2fvesting_2fv1beta1_2ftx_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_cosmos_2fvesting_2fv1beta1_2ftx_2eproto = {
    false,
    false,
    1993,
    descriptor_table_protodef_cosmos_2fvesting_2fv1beta1_2ftx_2eproto,
    "cosmos/vesting/v1beta1/tx.proto",
    &descriptor_table_cosmos_2fvesting_2fv1beta1_2ftx_2eproto_once,
    descriptor_table_cosmos_2fvesting_2fv1beta1_2ftx_2eproto_deps,
    6,
    6,
    schemas,
    file_default_instances,
    TableStruct_cosmos_2fvesting_2fv1beta1_2ftx_2eproto::offsets,
    file_level_metadata_cosmos_2fvesting_2fv1beta1_2ftx_2eproto,
    file_level_enum_descriptors_cosmos_2fvesting_2fv1beta1_2ftx_2eproto,
    file_level_service_descriptors_cosmos_2fvesting_2fv1beta1_2ftx_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_cosmos_2fvesting_2fv1beta1_2ftx_2eproto_getter() {
  return &descriptor_table_cosmos_2fvesting_2fv1beta1_2ftx_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_cosmos_2fvesting_2fv1beta1_2ftx_2eproto(&descriptor_table_cosmos_2fvesting_2fv1beta1_2ftx_2eproto);
namespace cosmos {
namespace vesting {
namespace v1beta1 {
// ===================================================================

class MsgCreateVestingAccount::_Internal {
 public:
};

void MsgCreateVestingAccount::clear_amount() {
  _internal_mutable_amount()->Clear();
}
MsgCreateVestingAccount::MsgCreateVestingAccount(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.vesting.v1beta1.MsgCreateVestingAccount)
}
MsgCreateVestingAccount::MsgCreateVestingAccount(const MsgCreateVestingAccount& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgCreateVestingAccount* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.amount_){from._impl_.amount_}
    , decltype(_impl_.from_address_) {}

    , decltype(_impl_.to_address_) {}

    , decltype(_impl_.end_time_) {}

    , decltype(_impl_.delayed_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.from_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.from_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_from_address().empty()) {
    _this->_impl_.from_address_.Set(from._internal_from_address(), _this->GetArenaForAllocation());
  }
  _impl_.to_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.to_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_to_address().empty()) {
    _this->_impl_.to_address_.Set(from._internal_to_address(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.end_time_, &from._impl_.end_time_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.delayed_) -
    reinterpret_cast<char*>(&_impl_.end_time_)) + sizeof(_impl_.delayed_));
  // @@protoc_insertion_point(copy_constructor:cosmos.vesting.v1beta1.MsgCreateVestingAccount)
}

inline void MsgCreateVestingAccount::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.amount_){arena}
    , decltype(_impl_.from_address_) {}

    , decltype(_impl_.to_address_) {}

    , decltype(_impl_.end_time_) { ::int64_t{0} }

    , decltype(_impl_.delayed_) { false }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.from_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.from_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.to_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.to_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgCreateVestingAccount::~MsgCreateVestingAccount() {
  // @@protoc_insertion_point(destructor:cosmos.vesting.v1beta1.MsgCreateVestingAccount)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgCreateVestingAccount::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_amount()->~RepeatedPtrField();
  _impl_.from_address_.Destroy();
  _impl_.to_address_.Destroy();
}

void MsgCreateVestingAccount::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgCreateVestingAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.vesting.v1beta1.MsgCreateVestingAccount)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_amount()->Clear();
  _impl_.from_address_.ClearToEmpty();
  _impl_.to_address_.ClearToEmpty();
  ::memset(&_impl_.end_time_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.delayed_) -
      reinterpret_cast<char*>(&_impl_.end_time_)) + sizeof(_impl_.delayed_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgCreateVestingAccount::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string from_address = 1 [json_name = "fromAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_from_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.vesting.v1beta1.MsgCreateVestingAccount.from_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string to_address = 2 [json_name = "toAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_to_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.vesting.v1beta1.MsgCreateVestingAccount.to_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_amount(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // int64 end_time = 4 [json_name = "endTime"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 32)) {
          _impl_.end_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // bool delayed = 5 [json_name = "delayed"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 40)) {
          _impl_.delayed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgCreateVestingAccount::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.vesting.v1beta1.MsgCreateVestingAccount)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string from_address = 1 [json_name = "fromAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_from_address().empty()) {
    const std::string& _s = this->_internal_from_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.vesting.v1beta1.MsgCreateVestingAccount.from_address");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string to_address = 2 [json_name = "toAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_to_address().empty()) {
    const std::string& _s = this->_internal_to_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.vesting.v1beta1.MsgCreateVestingAccount.to_address");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // repeated .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_amount_size()); i < n; i++) {
    const auto& repfield = this->_internal_amount(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // int64 end_time = 4 [json_name = "endTime"];
  if (this->_internal_end_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        4, this->_internal_end_time(), target);
  }

  // bool delayed = 5 [json_name = "delayed"];
  if (this->_internal_delayed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this->_internal_delayed(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.vesting.v1beta1.MsgCreateVestingAccount)
  return target;
}

::size_t MsgCreateVestingAccount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.vesting.v1beta1.MsgCreateVestingAccount)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];
  total_size += 1UL * this->_internal_amount_size();
  for (const auto& msg : this->_internal_amount()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string from_address = 1 [json_name = "fromAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_from_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_from_address());
  }

  // string to_address = 2 [json_name = "toAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_to_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_to_address());
  }

  // int64 end_time = 4 [json_name = "endTime"];
  if (this->_internal_end_time() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_end_time());
  }

  // bool delayed = 5 [json_name = "delayed"];
  if (this->_internal_delayed() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgCreateVestingAccount::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgCreateVestingAccount::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgCreateVestingAccount::GetClassData() const { return &_class_data_; }


void MsgCreateVestingAccount::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgCreateVestingAccount*>(&to_msg);
  auto& from = static_cast<const MsgCreateVestingAccount&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.vesting.v1beta1.MsgCreateVestingAccount)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_amount()->MergeFrom(from._internal_amount());
  if (!from._internal_from_address().empty()) {
    _this->_internal_set_from_address(from._internal_from_address());
  }
  if (!from._internal_to_address().empty()) {
    _this->_internal_set_to_address(from._internal_to_address());
  }
  if (from._internal_end_time() != 0) {
    _this->_internal_set_end_time(from._internal_end_time());
  }
  if (from._internal_delayed() != 0) {
    _this->_internal_set_delayed(from._internal_delayed());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgCreateVestingAccount::CopyFrom(const MsgCreateVestingAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.vesting.v1beta1.MsgCreateVestingAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgCreateVestingAccount::IsInitialized() const {
  return true;
}

void MsgCreateVestingAccount::InternalSwap(MsgCreateVestingAccount* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_amount()->InternalSwap(other->_internal_mutable_amount());
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.from_address_, lhs_arena,
                                       &other->_impl_.from_address_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.to_address_, lhs_arena,
                                       &other->_impl_.to_address_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MsgCreateVestingAccount, _impl_.delayed_)
      + sizeof(MsgCreateVestingAccount::_impl_.delayed_)
      - PROTOBUF_FIELD_OFFSET(MsgCreateVestingAccount, _impl_.end_time_)>(
          reinterpret_cast<char*>(&_impl_.end_time_),
          reinterpret_cast<char*>(&other->_impl_.end_time_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgCreateVestingAccount::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fvesting_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fvesting_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fvesting_2fv1beta1_2ftx_2eproto[0]);
}
// ===================================================================

class MsgCreateVestingAccountResponse::_Internal {
 public:
};

MsgCreateVestingAccountResponse::MsgCreateVestingAccountResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cosmos.vesting.v1beta1.MsgCreateVestingAccountResponse)
}
MsgCreateVestingAccountResponse::MsgCreateVestingAccountResponse(const MsgCreateVestingAccountResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgCreateVestingAccountResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.vesting.v1beta1.MsgCreateVestingAccountResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgCreateVestingAccountResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgCreateVestingAccountResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgCreateVestingAccountResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fvesting_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fvesting_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fvesting_2fv1beta1_2ftx_2eproto[1]);
}
// ===================================================================

class MsgCreatePermanentLockedAccount::_Internal {
 public:
};

void MsgCreatePermanentLockedAccount::clear_amount() {
  _internal_mutable_amount()->Clear();
}
MsgCreatePermanentLockedAccount::MsgCreatePermanentLockedAccount(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount)
}
MsgCreatePermanentLockedAccount::MsgCreatePermanentLockedAccount(const MsgCreatePermanentLockedAccount& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgCreatePermanentLockedAccount* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.amount_){from._impl_.amount_}
    , decltype(_impl_.from_address_) {}

    , decltype(_impl_.to_address_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.from_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.from_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_from_address().empty()) {
    _this->_impl_.from_address_.Set(from._internal_from_address(), _this->GetArenaForAllocation());
  }
  _impl_.to_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.to_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_to_address().empty()) {
    _this->_impl_.to_address_.Set(from._internal_to_address(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount)
}

inline void MsgCreatePermanentLockedAccount::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.amount_){arena}
    , decltype(_impl_.from_address_) {}

    , decltype(_impl_.to_address_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.from_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.from_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.to_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.to_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgCreatePermanentLockedAccount::~MsgCreatePermanentLockedAccount() {
  // @@protoc_insertion_point(destructor:cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgCreatePermanentLockedAccount::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_amount()->~RepeatedPtrField();
  _impl_.from_address_.Destroy();
  _impl_.to_address_.Destroy();
}

void MsgCreatePermanentLockedAccount::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgCreatePermanentLockedAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_amount()->Clear();
  _impl_.from_address_.ClearToEmpty();
  _impl_.to_address_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgCreatePermanentLockedAccount::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string from_address = 1 [json_name = "fromAddress", (.gogoproto.moretags) = "yaml:\"from_address\""];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_from_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount.from_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string to_address = 2 [json_name = "toAddress", (.gogoproto.moretags) = "yaml:\"to_address\""];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_to_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount.to_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_amount(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgCreatePermanentLockedAccount::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string from_address = 1 [json_name = "fromAddress", (.gogoproto.moretags) = "yaml:\"from_address\""];
  if (!this->_internal_from_address().empty()) {
    const std::string& _s = this->_internal_from_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount.from_address");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string to_address = 2 [json_name = "toAddress", (.gogoproto.moretags) = "yaml:\"to_address\""];
  if (!this->_internal_to_address().empty()) {
    const std::string& _s = this->_internal_to_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount.to_address");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // repeated .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_amount_size()); i < n; i++) {
    const auto& repfield = this->_internal_amount(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount)
  return target;
}

::size_t MsgCreatePermanentLockedAccount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];
  total_size += 1UL * this->_internal_amount_size();
  for (const auto& msg : this->_internal_amount()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string from_address = 1 [json_name = "fromAddress", (.gogoproto.moretags) = "yaml:\"from_address\""];
  if (!this->_internal_from_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_from_address());
  }

  // string to_address = 2 [json_name = "toAddress", (.gogoproto.moretags) = "yaml:\"to_address\""];
  if (!this->_internal_to_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_to_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgCreatePermanentLockedAccount::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgCreatePermanentLockedAccount::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgCreatePermanentLockedAccount::GetClassData() const { return &_class_data_; }


void MsgCreatePermanentLockedAccount::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgCreatePermanentLockedAccount*>(&to_msg);
  auto& from = static_cast<const MsgCreatePermanentLockedAccount&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_amount()->MergeFrom(from._internal_amount());
  if (!from._internal_from_address().empty()) {
    _this->_internal_set_from_address(from._internal_from_address());
  }
  if (!from._internal_to_address().empty()) {
    _this->_internal_set_to_address(from._internal_to_address());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgCreatePermanentLockedAccount::CopyFrom(const MsgCreatePermanentLockedAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgCreatePermanentLockedAccount::IsInitialized() const {
  return true;
}

void MsgCreatePermanentLockedAccount::InternalSwap(MsgCreatePermanentLockedAccount* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_amount()->InternalSwap(other->_internal_mutable_amount());
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.from_address_, lhs_arena,
                                       &other->_impl_.from_address_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.to_address_, lhs_arena,
                                       &other->_impl_.to_address_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgCreatePermanentLockedAccount::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fvesting_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fvesting_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fvesting_2fv1beta1_2ftx_2eproto[2]);
}
// ===================================================================

class MsgCreatePermanentLockedAccountResponse::_Internal {
 public:
};

MsgCreatePermanentLockedAccountResponse::MsgCreatePermanentLockedAccountResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccountResponse)
}
MsgCreatePermanentLockedAccountResponse::MsgCreatePermanentLockedAccountResponse(const MsgCreatePermanentLockedAccountResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgCreatePermanentLockedAccountResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccountResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgCreatePermanentLockedAccountResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgCreatePermanentLockedAccountResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgCreatePermanentLockedAccountResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fvesting_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fvesting_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fvesting_2fv1beta1_2ftx_2eproto[3]);
}
// ===================================================================

class MsgCreatePeriodicVestingAccount::_Internal {
 public:
};

void MsgCreatePeriodicVestingAccount::clear_vesting_periods() {
  _internal_mutable_vesting_periods()->Clear();
}
MsgCreatePeriodicVestingAccount::MsgCreatePeriodicVestingAccount(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount)
}
MsgCreatePeriodicVestingAccount::MsgCreatePeriodicVestingAccount(const MsgCreatePeriodicVestingAccount& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgCreatePeriodicVestingAccount* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.vesting_periods_){from._impl_.vesting_periods_}
    , decltype(_impl_.from_address_) {}

    , decltype(_impl_.to_address_) {}

    , decltype(_impl_.start_time_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.from_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.from_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_from_address().empty()) {
    _this->_impl_.from_address_.Set(from._internal_from_address(), _this->GetArenaForAllocation());
  }
  _impl_.to_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.to_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_to_address().empty()) {
    _this->_impl_.to_address_.Set(from._internal_to_address(), _this->GetArenaForAllocation());
  }
  _this->_impl_.start_time_ = from._impl_.start_time_;
  // @@protoc_insertion_point(copy_constructor:cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount)
}

inline void MsgCreatePeriodicVestingAccount::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.vesting_periods_){arena}
    , decltype(_impl_.from_address_) {}

    , decltype(_impl_.to_address_) {}

    , decltype(_impl_.start_time_) { ::int64_t{0} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.from_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.from_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.to_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.to_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgCreatePeriodicVestingAccount::~MsgCreatePeriodicVestingAccount() {
  // @@protoc_insertion_point(destructor:cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgCreatePeriodicVestingAccount::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_vesting_periods()->~RepeatedPtrField();
  _impl_.from_address_.Destroy();
  _impl_.to_address_.Destroy();
}

void MsgCreatePeriodicVestingAccount::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgCreatePeriodicVestingAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_vesting_periods()->Clear();
  _impl_.from_address_.ClearToEmpty();
  _impl_.to_address_.ClearToEmpty();
  _impl_.start_time_ = ::int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgCreatePeriodicVestingAccount::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string from_address = 1 [json_name = "fromAddress"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_from_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount.from_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string to_address = 2 [json_name = "toAddress"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_to_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount.to_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      // int64 start_time = 3 [json_name = "startTime"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 24)) {
          _impl_.start_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated .cosmos.vesting.v1beta1.Period vesting_periods = 4 [json_name = "vestingPeriods", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_vesting_periods(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgCreatePeriodicVestingAccount::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string from_address = 1 [json_name = "fromAddress"];
  if (!this->_internal_from_address().empty()) {
    const std::string& _s = this->_internal_from_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount.from_address");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string to_address = 2 [json_name = "toAddress"];
  if (!this->_internal_to_address().empty()) {
    const std::string& _s = this->_internal_to_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount.to_address");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // int64 start_time = 3 [json_name = "startTime"];
  if (this->_internal_start_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        3, this->_internal_start_time(), target);
  }

  // repeated .cosmos.vesting.v1beta1.Period vesting_periods = 4 [json_name = "vestingPeriods", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_vesting_periods_size()); i < n; i++) {
    const auto& repfield = this->_internal_vesting_periods(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount)
  return target;
}

::size_t MsgCreatePeriodicVestingAccount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cosmos.vesting.v1beta1.Period vesting_periods = 4 [json_name = "vestingPeriods", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  total_size += 1UL * this->_internal_vesting_periods_size();
  for (const auto& msg : this->_internal_vesting_periods()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string from_address = 1 [json_name = "fromAddress"];
  if (!this->_internal_from_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_from_address());
  }

  // string to_address = 2 [json_name = "toAddress"];
  if (!this->_internal_to_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_to_address());
  }

  // int64 start_time = 3 [json_name = "startTime"];
  if (this->_internal_start_time() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_start_time());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgCreatePeriodicVestingAccount::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgCreatePeriodicVestingAccount::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgCreatePeriodicVestingAccount::GetClassData() const { return &_class_data_; }


void MsgCreatePeriodicVestingAccount::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgCreatePeriodicVestingAccount*>(&to_msg);
  auto& from = static_cast<const MsgCreatePeriodicVestingAccount&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_vesting_periods()->MergeFrom(from._internal_vesting_periods());
  if (!from._internal_from_address().empty()) {
    _this->_internal_set_from_address(from._internal_from_address());
  }
  if (!from._internal_to_address().empty()) {
    _this->_internal_set_to_address(from._internal_to_address());
  }
  if (from._internal_start_time() != 0) {
    _this->_internal_set_start_time(from._internal_start_time());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgCreatePeriodicVestingAccount::CopyFrom(const MsgCreatePeriodicVestingAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgCreatePeriodicVestingAccount::IsInitialized() const {
  return true;
}

void MsgCreatePeriodicVestingAccount::InternalSwap(MsgCreatePeriodicVestingAccount* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_vesting_periods()->InternalSwap(other->_internal_mutable_vesting_periods());
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.from_address_, lhs_arena,
                                       &other->_impl_.from_address_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.to_address_, lhs_arena,
                                       &other->_impl_.to_address_, rhs_arena);

  swap(_impl_.start_time_, other->_impl_.start_time_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgCreatePeriodicVestingAccount::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fvesting_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fvesting_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fvesting_2fv1beta1_2ftx_2eproto[4]);
}
// ===================================================================

class MsgCreatePeriodicVestingAccountResponse::_Internal {
 public:
};

MsgCreatePeriodicVestingAccountResponse::MsgCreatePeriodicVestingAccountResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccountResponse)
}
MsgCreatePeriodicVestingAccountResponse::MsgCreatePeriodicVestingAccountResponse(const MsgCreatePeriodicVestingAccountResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgCreatePeriodicVestingAccountResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccountResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgCreatePeriodicVestingAccountResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgCreatePeriodicVestingAccountResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgCreatePeriodicVestingAccountResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fvesting_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_cosmos_2fvesting_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_cosmos_2fvesting_2fv1beta1_2ftx_2eproto[5]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace vesting
}  // namespace cosmos
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::cosmos::vesting::v1beta1::MsgCreateVestingAccount*
Arena::CreateMaybeMessage< ::cosmos::vesting::v1beta1::MsgCreateVestingAccount >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::vesting::v1beta1::MsgCreateVestingAccount >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::vesting::v1beta1::MsgCreateVestingAccountResponse*
Arena::CreateMaybeMessage< ::cosmos::vesting::v1beta1::MsgCreateVestingAccountResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::vesting::v1beta1::MsgCreateVestingAccountResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::vesting::v1beta1::MsgCreatePermanentLockedAccount*
Arena::CreateMaybeMessage< ::cosmos::vesting::v1beta1::MsgCreatePermanentLockedAccount >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::vesting::v1beta1::MsgCreatePermanentLockedAccount >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::vesting::v1beta1::MsgCreatePermanentLockedAccountResponse*
Arena::CreateMaybeMessage< ::cosmos::vesting::v1beta1::MsgCreatePermanentLockedAccountResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::vesting::v1beta1::MsgCreatePermanentLockedAccountResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::vesting::v1beta1::MsgCreatePeriodicVestingAccount*
Arena::CreateMaybeMessage< ::cosmos::vesting::v1beta1::MsgCreatePeriodicVestingAccount >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::vesting::v1beta1::MsgCreatePeriodicVestingAccount >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::vesting::v1beta1::MsgCreatePeriodicVestingAccountResponse*
Arena::CreateMaybeMessage< ::cosmos::vesting::v1beta1::MsgCreatePeriodicVestingAccountResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::vesting::v1beta1::MsgCreatePeriodicVestingAccountResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
