// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/upgrade/v1beta1/query.proto

#include "cosmos/upgrade/v1beta1/query.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace cosmos {
namespace upgrade {
namespace v1beta1 {
template <typename>
PROTOBUF_CONSTEXPR QueryCurrentPlanRequest::QueryCurrentPlanRequest(
    ::_pbi::ConstantInitialized) {}
struct QueryCurrentPlanRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryCurrentPlanRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryCurrentPlanRequestDefaultTypeInternal() {}
  union {
    QueryCurrentPlanRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryCurrentPlanRequestDefaultTypeInternal _QueryCurrentPlanRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryCurrentPlanResponse::QueryCurrentPlanResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.plan_)*/nullptr} {}
struct QueryCurrentPlanResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryCurrentPlanResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryCurrentPlanResponseDefaultTypeInternal() {}
  union {
    QueryCurrentPlanResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryCurrentPlanResponseDefaultTypeInternal _QueryCurrentPlanResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryAppliedPlanRequest::QueryAppliedPlanRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryAppliedPlanRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryAppliedPlanRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryAppliedPlanRequestDefaultTypeInternal() {}
  union {
    QueryAppliedPlanRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryAppliedPlanRequestDefaultTypeInternal _QueryAppliedPlanRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryAppliedPlanResponse::QueryAppliedPlanResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.height_)*/ ::int64_t{0}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryAppliedPlanResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryAppliedPlanResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryAppliedPlanResponseDefaultTypeInternal() {}
  union {
    QueryAppliedPlanResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryAppliedPlanResponseDefaultTypeInternal _QueryAppliedPlanResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryUpgradedConsensusStateRequest::QueryUpgradedConsensusStateRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.last_height_)*/ ::int64_t{0}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryUpgradedConsensusStateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryUpgradedConsensusStateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryUpgradedConsensusStateRequestDefaultTypeInternal() {}
  union {
    QueryUpgradedConsensusStateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryUpgradedConsensusStateRequestDefaultTypeInternal _QueryUpgradedConsensusStateRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryUpgradedConsensusStateResponse::QueryUpgradedConsensusStateResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.upgraded_consensus_state_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryUpgradedConsensusStateResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryUpgradedConsensusStateResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryUpgradedConsensusStateResponseDefaultTypeInternal() {}
  union {
    QueryUpgradedConsensusStateResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryUpgradedConsensusStateResponseDefaultTypeInternal _QueryUpgradedConsensusStateResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryModuleVersionsRequest::QueryModuleVersionsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.module_name_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryModuleVersionsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryModuleVersionsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryModuleVersionsRequestDefaultTypeInternal() {}
  union {
    QueryModuleVersionsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryModuleVersionsRequestDefaultTypeInternal _QueryModuleVersionsRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryModuleVersionsResponse::QueryModuleVersionsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.module_versions_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryModuleVersionsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryModuleVersionsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryModuleVersionsResponseDefaultTypeInternal() {}
  union {
    QueryModuleVersionsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryModuleVersionsResponseDefaultTypeInternal _QueryModuleVersionsResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryAuthorityRequest::QueryAuthorityRequest(
    ::_pbi::ConstantInitialized) {}
struct QueryAuthorityRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryAuthorityRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryAuthorityRequestDefaultTypeInternal() {}
  union {
    QueryAuthorityRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryAuthorityRequestDefaultTypeInternal _QueryAuthorityRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryAuthorityResponse::QueryAuthorityResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryAuthorityResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryAuthorityResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryAuthorityResponseDefaultTypeInternal() {}
  union {
    QueryAuthorityResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryAuthorityResponseDefaultTypeInternal _QueryAuthorityResponse_default_instance_;
}  // namespace v1beta1
}  // namespace upgrade
}  // namespace cosmos
static ::_pb::Metadata file_level_metadata_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto[10];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto = nullptr;
const ::uint32_t TableStruct_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::upgrade::v1beta1::QueryCurrentPlanRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::upgrade::v1beta1::QueryCurrentPlanResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::upgrade::v1beta1::QueryCurrentPlanResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::upgrade::v1beta1::QueryCurrentPlanResponse, _impl_.plan_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::upgrade::v1beta1::QueryAppliedPlanRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::upgrade::v1beta1::QueryAppliedPlanRequest, _impl_.name_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::upgrade::v1beta1::QueryAppliedPlanResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::upgrade::v1beta1::QueryAppliedPlanResponse, _impl_.height_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::upgrade::v1beta1::QueryUpgradedConsensusStateRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::upgrade::v1beta1::QueryUpgradedConsensusStateRequest, _impl_.last_height_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::upgrade::v1beta1::QueryUpgradedConsensusStateResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::upgrade::v1beta1::QueryUpgradedConsensusStateResponse, _impl_.upgraded_consensus_state_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::upgrade::v1beta1::QueryModuleVersionsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::upgrade::v1beta1::QueryModuleVersionsRequest, _impl_.module_name_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::upgrade::v1beta1::QueryModuleVersionsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::upgrade::v1beta1::QueryModuleVersionsResponse, _impl_.module_versions_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::upgrade::v1beta1::QueryAuthorityRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::upgrade::v1beta1::QueryAuthorityResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::upgrade::v1beta1::QueryAuthorityResponse, _impl_.address_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::cosmos::upgrade::v1beta1::QueryCurrentPlanRequest)},
        { 8, 17, -1, sizeof(::cosmos::upgrade::v1beta1::QueryCurrentPlanResponse)},
        { 18, -1, -1, sizeof(::cosmos::upgrade::v1beta1::QueryAppliedPlanRequest)},
        { 27, -1, -1, sizeof(::cosmos::upgrade::v1beta1::QueryAppliedPlanResponse)},
        { 36, -1, -1, sizeof(::cosmos::upgrade::v1beta1::QueryUpgradedConsensusStateRequest)},
        { 45, -1, -1, sizeof(::cosmos::upgrade::v1beta1::QueryUpgradedConsensusStateResponse)},
        { 54, -1, -1, sizeof(::cosmos::upgrade::v1beta1::QueryModuleVersionsRequest)},
        { 63, -1, -1, sizeof(::cosmos::upgrade::v1beta1::QueryModuleVersionsResponse)},
        { 72, -1, -1, sizeof(::cosmos::upgrade::v1beta1::QueryAuthorityRequest)},
        { 80, -1, -1, sizeof(::cosmos::upgrade::v1beta1::QueryAuthorityResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::cosmos::upgrade::v1beta1::_QueryCurrentPlanRequest_default_instance_._instance,
    &::cosmos::upgrade::v1beta1::_QueryCurrentPlanResponse_default_instance_._instance,
    &::cosmos::upgrade::v1beta1::_QueryAppliedPlanRequest_default_instance_._instance,
    &::cosmos::upgrade::v1beta1::_QueryAppliedPlanResponse_default_instance_._instance,
    &::cosmos::upgrade::v1beta1::_QueryUpgradedConsensusStateRequest_default_instance_._instance,
    &::cosmos::upgrade::v1beta1::_QueryUpgradedConsensusStateResponse_default_instance_._instance,
    &::cosmos::upgrade::v1beta1::_QueryModuleVersionsRequest_default_instance_._instance,
    &::cosmos::upgrade::v1beta1::_QueryModuleVersionsResponse_default_instance_._instance,
    &::cosmos::upgrade::v1beta1::_QueryAuthorityRequest_default_instance_._instance,
    &::cosmos::upgrade::v1beta1::_QueryAuthorityResponse_default_instance_._instance,
};
const char descriptor_table_protodef_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\"cosmos/upgrade/v1beta1/query.proto\022\026co"
    "smos.upgrade.v1beta1\032\034google/api/annotat"
    "ions.proto\032$cosmos/upgrade/v1beta1/upgra"
    "de.proto\"\031\n\027QueryCurrentPlanRequest\"L\n\030Q"
    "ueryCurrentPlanResponse\0220\n\004plan\030\001 \001(\0132\034."
    "cosmos.upgrade.v1beta1.PlanR\004plan\"-\n\027Que"
    "ryAppliedPlanRequest\022\022\n\004name\030\001 \001(\tR\004name"
    "\"2\n\030QueryAppliedPlanResponse\022\026\n\006height\030\001"
    " \001(\003R\006height\"I\n\"QueryUpgradedConsensusSt"
    "ateRequest\022\037\n\013last_height\030\001 \001(\003R\nlastHei"
    "ght:\002\030\001\"i\n#QueryUpgradedConsensusStateRe"
    "sponse\0228\n\030upgraded_consensus_state\030\002 \001(\014"
    "R\026upgradedConsensusState:\002\030\001J\004\010\001\020\002\"=\n\032Qu"
    "eryModuleVersionsRequest\022\037\n\013module_name\030"
    "\001 \001(\tR\nmoduleName\"m\n\033QueryModuleVersions"
    "Response\022N\n\017module_versions\030\001 \003(\0132%.cosm"
    "os.upgrade.v1beta1.ModuleVersionR\016module"
    "Versions\"\027\n\025QueryAuthorityRequest\"2\n\026Que"
    "ryAuthorityResponse\022\030\n\007address\030\001 \001(\tR\007ad"
    "dress2\364\006\n\005Query\022\236\001\n\013CurrentPlan\022/.cosmos"
    ".upgrade.v1beta1.QueryCurrentPlanRequest"
    "\0320.cosmos.upgrade.v1beta1.QueryCurrentPl"
    "anResponse\",\202\323\344\223\002&\022$/cosmos/upgrade/v1be"
    "ta1/current_plan\022\245\001\n\013AppliedPlan\022/.cosmo"
    "s.upgrade.v1beta1.QueryAppliedPlanReques"
    "t\0320.cosmos.upgrade.v1beta1.QueryAppliedP"
    "lanResponse\"3\202\323\344\223\002-\022+/cosmos/upgrade/v1b"
    "eta1/applied_plan/{name}\022\334\001\n\026UpgradedCon"
    "sensusState\022:.cosmos.upgrade.v1beta1.Que"
    "ryUpgradedConsensusStateRequest\032;.cosmos"
    ".upgrade.v1beta1.QueryUpgradedConsensusS"
    "tateResponse\"I\210\002\001\202\323\344\223\002@\022>/cosmos/upgrade"
    "/v1beta1/upgraded_consensus_state/{last_"
    "height}\022\252\001\n\016ModuleVersions\0222.cosmos.upgr"
    "ade.v1beta1.QueryModuleVersionsRequest\0323"
    ".cosmos.upgrade.v1beta1.QueryModuleVersi"
    "onsResponse\"/\202\323\344\223\002)\022\'/cosmos/upgrade/v1b"
    "eta1/module_versions\022\225\001\n\tAuthority\022-.cos"
    "mos.upgrade.v1beta1.QueryAuthorityReques"
    "t\032..cosmos.upgrade.v1beta1.QueryAuthorit"
    "yResponse\")\202\323\344\223\002#\022!/cosmos/upgrade/v1bet"
    "a1/authorityB\320\001\n\032com.cosmos.upgrade.v1be"
    "ta1B\nQueryProtoP\001Z,github.com/cosmos/cos"
    "mos-sdk/x/upgrade/types\242\002\003CUX\252\002\026Cosmos.U"
    "pgrade.V1beta1\312\002\026Cosmos\\Upgrade\\V1beta1\342"
    "\002\"Cosmos\\Upgrade\\V1beta1\\GPBMetadata\352\002\030C"
    "osmos::Upgrade::V1beta1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto_deps[2] =
    {
        &::descriptor_table_cosmos_2fupgrade_2fv1beta1_2fupgrade_2eproto,
        &::descriptor_table_google_2fapi_2fannotations_2eproto,
};
static ::absl::once_flag descriptor_table_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto = {
    false,
    false,
    1871,
    descriptor_table_protodef_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto,
    "cosmos/upgrade/v1beta1/query.proto",
    &descriptor_table_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto_once,
    descriptor_table_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto_deps,
    2,
    10,
    schemas,
    file_default_instances,
    TableStruct_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto::offsets,
    file_level_metadata_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto,
    file_level_enum_descriptors_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto,
    file_level_service_descriptors_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto_getter() {
  return &descriptor_table_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto(&descriptor_table_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto);
namespace cosmos {
namespace upgrade {
namespace v1beta1 {
// ===================================================================

class QueryCurrentPlanRequest::_Internal {
 public:
};

QueryCurrentPlanRequest::QueryCurrentPlanRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cosmos.upgrade.v1beta1.QueryCurrentPlanRequest)
}
QueryCurrentPlanRequest::QueryCurrentPlanRequest(const QueryCurrentPlanRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  QueryCurrentPlanRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.upgrade.v1beta1.QueryCurrentPlanRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryCurrentPlanRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryCurrentPlanRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata QueryCurrentPlanRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto[0]);
}
// ===================================================================

class QueryCurrentPlanResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryCurrentPlanResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryCurrentPlanResponse, _impl_._has_bits_);
  static const ::cosmos::upgrade::v1beta1::Plan& plan(const QueryCurrentPlanResponse* msg);
  static void set_has_plan(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::upgrade::v1beta1::Plan&
QueryCurrentPlanResponse::_Internal::plan(const QueryCurrentPlanResponse* msg) {
  return *msg->_impl_.plan_;
}
void QueryCurrentPlanResponse::clear_plan() {
  if (_impl_.plan_ != nullptr) _impl_.plan_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryCurrentPlanResponse::QueryCurrentPlanResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.upgrade.v1beta1.QueryCurrentPlanResponse)
}
QueryCurrentPlanResponse::QueryCurrentPlanResponse(const QueryCurrentPlanResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryCurrentPlanResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.plan_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.plan_ = new ::cosmos::upgrade::v1beta1::Plan(*from._impl_.plan_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.upgrade.v1beta1.QueryCurrentPlanResponse)
}

inline void QueryCurrentPlanResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.plan_){nullptr}
  };
}

QueryCurrentPlanResponse::~QueryCurrentPlanResponse() {
  // @@protoc_insertion_point(destructor:cosmos.upgrade.v1beta1.QueryCurrentPlanResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryCurrentPlanResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.plan_;
}

void QueryCurrentPlanResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryCurrentPlanResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.upgrade.v1beta1.QueryCurrentPlanResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.plan_ != nullptr);
    _impl_.plan_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryCurrentPlanResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cosmos.upgrade.v1beta1.Plan plan = 1 [json_name = "plan"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_plan(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryCurrentPlanResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.upgrade.v1beta1.QueryCurrentPlanResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.upgrade.v1beta1.Plan plan = 1 [json_name = "plan"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::plan(this),
        _Internal::plan(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.upgrade.v1beta1.QueryCurrentPlanResponse)
  return target;
}

::size_t QueryCurrentPlanResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.upgrade.v1beta1.QueryCurrentPlanResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cosmos.upgrade.v1beta1.Plan plan = 1 [json_name = "plan"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.plan_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryCurrentPlanResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryCurrentPlanResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryCurrentPlanResponse::GetClassData() const { return &_class_data_; }


void QueryCurrentPlanResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryCurrentPlanResponse*>(&to_msg);
  auto& from = static_cast<const QueryCurrentPlanResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.upgrade.v1beta1.QueryCurrentPlanResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_plan()->::cosmos::upgrade::v1beta1::Plan::MergeFrom(
        from._internal_plan());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryCurrentPlanResponse::CopyFrom(const QueryCurrentPlanResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.upgrade.v1beta1.QueryCurrentPlanResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryCurrentPlanResponse::IsInitialized() const {
  return true;
}

void QueryCurrentPlanResponse::InternalSwap(QueryCurrentPlanResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.plan_, other->_impl_.plan_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryCurrentPlanResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto[1]);
}
// ===================================================================

class QueryAppliedPlanRequest::_Internal {
 public:
};

QueryAppliedPlanRequest::QueryAppliedPlanRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.upgrade.v1beta1.QueryAppliedPlanRequest)
}
QueryAppliedPlanRequest::QueryAppliedPlanRequest(const QueryAppliedPlanRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryAppliedPlanRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.upgrade.v1beta1.QueryAppliedPlanRequest)
}

inline void QueryAppliedPlanRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.name_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryAppliedPlanRequest::~QueryAppliedPlanRequest() {
  // @@protoc_insertion_point(destructor:cosmos.upgrade.v1beta1.QueryAppliedPlanRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryAppliedPlanRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void QueryAppliedPlanRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryAppliedPlanRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.upgrade.v1beta1.QueryAppliedPlanRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryAppliedPlanRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.upgrade.v1beta1.QueryAppliedPlanRequest.name"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryAppliedPlanRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.upgrade.v1beta1.QueryAppliedPlanRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.upgrade.v1beta1.QueryAppliedPlanRequest.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.upgrade.v1beta1.QueryAppliedPlanRequest)
  return target;
}

::size_t QueryAppliedPlanRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.upgrade.v1beta1.QueryAppliedPlanRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryAppliedPlanRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryAppliedPlanRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryAppliedPlanRequest::GetClassData() const { return &_class_data_; }


void QueryAppliedPlanRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryAppliedPlanRequest*>(&to_msg);
  auto& from = static_cast<const QueryAppliedPlanRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.upgrade.v1beta1.QueryAppliedPlanRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryAppliedPlanRequest::CopyFrom(const QueryAppliedPlanRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.upgrade.v1beta1.QueryAppliedPlanRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryAppliedPlanRequest::IsInitialized() const {
  return true;
}

void QueryAppliedPlanRequest::InternalSwap(QueryAppliedPlanRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryAppliedPlanRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto[2]);
}
// ===================================================================

class QueryAppliedPlanResponse::_Internal {
 public:
};

QueryAppliedPlanResponse::QueryAppliedPlanResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.upgrade.v1beta1.QueryAppliedPlanResponse)
}
QueryAppliedPlanResponse::QueryAppliedPlanResponse(const QueryAppliedPlanResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.upgrade.v1beta1.QueryAppliedPlanResponse)
}

inline void QueryAppliedPlanResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.height_) { ::int64_t{0} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

QueryAppliedPlanResponse::~QueryAppliedPlanResponse() {
  // @@protoc_insertion_point(destructor:cosmos.upgrade.v1beta1.QueryAppliedPlanResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryAppliedPlanResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}

void QueryAppliedPlanResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryAppliedPlanResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.upgrade.v1beta1.QueryAppliedPlanResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.height_ = ::int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryAppliedPlanResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 height = 1 [json_name = "height"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryAppliedPlanResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.upgrade.v1beta1.QueryAppliedPlanResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 height = 1 [json_name = "height"];
  if (this->_internal_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        1, this->_internal_height(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.upgrade.v1beta1.QueryAppliedPlanResponse)
  return target;
}

::size_t QueryAppliedPlanResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.upgrade.v1beta1.QueryAppliedPlanResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 height = 1 [json_name = "height"];
  if (this->_internal_height() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_height());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryAppliedPlanResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryAppliedPlanResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryAppliedPlanResponse::GetClassData() const { return &_class_data_; }


void QueryAppliedPlanResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryAppliedPlanResponse*>(&to_msg);
  auto& from = static_cast<const QueryAppliedPlanResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.upgrade.v1beta1.QueryAppliedPlanResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_height() != 0) {
    _this->_internal_set_height(from._internal_height());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryAppliedPlanResponse::CopyFrom(const QueryAppliedPlanResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.upgrade.v1beta1.QueryAppliedPlanResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryAppliedPlanResponse::IsInitialized() const {
  return true;
}

void QueryAppliedPlanResponse::InternalSwap(QueryAppliedPlanResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);

  swap(_impl_.height_, other->_impl_.height_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryAppliedPlanResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto[3]);
}
// ===================================================================

class QueryUpgradedConsensusStateRequest::_Internal {
 public:
};

QueryUpgradedConsensusStateRequest::QueryUpgradedConsensusStateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateRequest)
}
QueryUpgradedConsensusStateRequest::QueryUpgradedConsensusStateRequest(const QueryUpgradedConsensusStateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateRequest)
}

inline void QueryUpgradedConsensusStateRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.last_height_) { ::int64_t{0} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

QueryUpgradedConsensusStateRequest::~QueryUpgradedConsensusStateRequest() {
  // @@protoc_insertion_point(destructor:cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryUpgradedConsensusStateRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}

void QueryUpgradedConsensusStateRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryUpgradedConsensusStateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.last_height_ = ::int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryUpgradedConsensusStateRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 last_height = 1 [json_name = "lastHeight"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.last_height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryUpgradedConsensusStateRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 last_height = 1 [json_name = "lastHeight"];
  if (this->_internal_last_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        1, this->_internal_last_height(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateRequest)
  return target;
}

::size_t QueryUpgradedConsensusStateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 last_height = 1 [json_name = "lastHeight"];
  if (this->_internal_last_height() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_last_height());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryUpgradedConsensusStateRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryUpgradedConsensusStateRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryUpgradedConsensusStateRequest::GetClassData() const { return &_class_data_; }


void QueryUpgradedConsensusStateRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryUpgradedConsensusStateRequest*>(&to_msg);
  auto& from = static_cast<const QueryUpgradedConsensusStateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_last_height() != 0) {
    _this->_internal_set_last_height(from._internal_last_height());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryUpgradedConsensusStateRequest::CopyFrom(const QueryUpgradedConsensusStateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryUpgradedConsensusStateRequest::IsInitialized() const {
  return true;
}

void QueryUpgradedConsensusStateRequest::InternalSwap(QueryUpgradedConsensusStateRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);

  swap(_impl_.last_height_, other->_impl_.last_height_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryUpgradedConsensusStateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto[4]);
}
// ===================================================================

class QueryUpgradedConsensusStateResponse::_Internal {
 public:
};

QueryUpgradedConsensusStateResponse::QueryUpgradedConsensusStateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse)
}
QueryUpgradedConsensusStateResponse::QueryUpgradedConsensusStateResponse(const QueryUpgradedConsensusStateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryUpgradedConsensusStateResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.upgraded_consensus_state_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.upgraded_consensus_state_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.upgraded_consensus_state_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_upgraded_consensus_state().empty()) {
    _this->_impl_.upgraded_consensus_state_.Set(from._internal_upgraded_consensus_state(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse)
}

inline void QueryUpgradedConsensusStateResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.upgraded_consensus_state_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.upgraded_consensus_state_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.upgraded_consensus_state_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryUpgradedConsensusStateResponse::~QueryUpgradedConsensusStateResponse() {
  // @@protoc_insertion_point(destructor:cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryUpgradedConsensusStateResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.upgraded_consensus_state_.Destroy();
}

void QueryUpgradedConsensusStateResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryUpgradedConsensusStateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.upgraded_consensus_state_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryUpgradedConsensusStateResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes upgraded_consensus_state = 2 [json_name = "upgradedConsensusState"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_upgraded_consensus_state();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryUpgradedConsensusStateResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes upgraded_consensus_state = 2 [json_name = "upgradedConsensusState"];
  if (!this->_internal_upgraded_consensus_state().empty()) {
    const std::string& _s = this->_internal_upgraded_consensus_state();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse)
  return target;
}

::size_t QueryUpgradedConsensusStateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes upgraded_consensus_state = 2 [json_name = "upgradedConsensusState"];
  if (!this->_internal_upgraded_consensus_state().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
                                    this->_internal_upgraded_consensus_state());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryUpgradedConsensusStateResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryUpgradedConsensusStateResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryUpgradedConsensusStateResponse::GetClassData() const { return &_class_data_; }


void QueryUpgradedConsensusStateResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryUpgradedConsensusStateResponse*>(&to_msg);
  auto& from = static_cast<const QueryUpgradedConsensusStateResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_upgraded_consensus_state().empty()) {
    _this->_internal_set_upgraded_consensus_state(from._internal_upgraded_consensus_state());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryUpgradedConsensusStateResponse::CopyFrom(const QueryUpgradedConsensusStateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryUpgradedConsensusStateResponse::IsInitialized() const {
  return true;
}

void QueryUpgradedConsensusStateResponse::InternalSwap(QueryUpgradedConsensusStateResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.upgraded_consensus_state_, lhs_arena,
                                       &other->_impl_.upgraded_consensus_state_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryUpgradedConsensusStateResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto[5]);
}
// ===================================================================

class QueryModuleVersionsRequest::_Internal {
 public:
};

QueryModuleVersionsRequest::QueryModuleVersionsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.upgrade.v1beta1.QueryModuleVersionsRequest)
}
QueryModuleVersionsRequest::QueryModuleVersionsRequest(const QueryModuleVersionsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryModuleVersionsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.module_name_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.module_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.module_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_module_name().empty()) {
    _this->_impl_.module_name_.Set(from._internal_module_name(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.upgrade.v1beta1.QueryModuleVersionsRequest)
}

inline void QueryModuleVersionsRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.module_name_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.module_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.module_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryModuleVersionsRequest::~QueryModuleVersionsRequest() {
  // @@protoc_insertion_point(destructor:cosmos.upgrade.v1beta1.QueryModuleVersionsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryModuleVersionsRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.module_name_.Destroy();
}

void QueryModuleVersionsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryModuleVersionsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.upgrade.v1beta1.QueryModuleVersionsRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.module_name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryModuleVersionsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string module_name = 1 [json_name = "moduleName"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_module_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.upgrade.v1beta1.QueryModuleVersionsRequest.module_name"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryModuleVersionsRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.upgrade.v1beta1.QueryModuleVersionsRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string module_name = 1 [json_name = "moduleName"];
  if (!this->_internal_module_name().empty()) {
    const std::string& _s = this->_internal_module_name();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.upgrade.v1beta1.QueryModuleVersionsRequest.module_name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.upgrade.v1beta1.QueryModuleVersionsRequest)
  return target;
}

::size_t QueryModuleVersionsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.upgrade.v1beta1.QueryModuleVersionsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string module_name = 1 [json_name = "moduleName"];
  if (!this->_internal_module_name().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_module_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryModuleVersionsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryModuleVersionsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryModuleVersionsRequest::GetClassData() const { return &_class_data_; }


void QueryModuleVersionsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryModuleVersionsRequest*>(&to_msg);
  auto& from = static_cast<const QueryModuleVersionsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.upgrade.v1beta1.QueryModuleVersionsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_module_name().empty()) {
    _this->_internal_set_module_name(from._internal_module_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryModuleVersionsRequest::CopyFrom(const QueryModuleVersionsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.upgrade.v1beta1.QueryModuleVersionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryModuleVersionsRequest::IsInitialized() const {
  return true;
}

void QueryModuleVersionsRequest::InternalSwap(QueryModuleVersionsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.module_name_, lhs_arena,
                                       &other->_impl_.module_name_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryModuleVersionsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto[6]);
}
// ===================================================================

class QueryModuleVersionsResponse::_Internal {
 public:
};

void QueryModuleVersionsResponse::clear_module_versions() {
  _internal_mutable_module_versions()->Clear();
}
QueryModuleVersionsResponse::QueryModuleVersionsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.upgrade.v1beta1.QueryModuleVersionsResponse)
}
QueryModuleVersionsResponse::QueryModuleVersionsResponse(const QueryModuleVersionsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryModuleVersionsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.module_versions_){from._impl_.module_versions_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.upgrade.v1beta1.QueryModuleVersionsResponse)
}

inline void QueryModuleVersionsResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.module_versions_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

QueryModuleVersionsResponse::~QueryModuleVersionsResponse() {
  // @@protoc_insertion_point(destructor:cosmos.upgrade.v1beta1.QueryModuleVersionsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryModuleVersionsResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_module_versions()->~RepeatedPtrField();
}

void QueryModuleVersionsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryModuleVersionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.upgrade.v1beta1.QueryModuleVersionsResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_module_versions()->Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryModuleVersionsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .cosmos.upgrade.v1beta1.ModuleVersion module_versions = 1 [json_name = "moduleVersions"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_module_versions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryModuleVersionsResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.upgrade.v1beta1.QueryModuleVersionsResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cosmos.upgrade.v1beta1.ModuleVersion module_versions = 1 [json_name = "moduleVersions"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_module_versions_size()); i < n; i++) {
    const auto& repfield = this->_internal_module_versions(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.upgrade.v1beta1.QueryModuleVersionsResponse)
  return target;
}

::size_t QueryModuleVersionsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.upgrade.v1beta1.QueryModuleVersionsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cosmos.upgrade.v1beta1.ModuleVersion module_versions = 1 [json_name = "moduleVersions"];
  total_size += 1UL * this->_internal_module_versions_size();
  for (const auto& msg : this->_internal_module_versions()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryModuleVersionsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryModuleVersionsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryModuleVersionsResponse::GetClassData() const { return &_class_data_; }


void QueryModuleVersionsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryModuleVersionsResponse*>(&to_msg);
  auto& from = static_cast<const QueryModuleVersionsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.upgrade.v1beta1.QueryModuleVersionsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_module_versions()->MergeFrom(from._internal_module_versions());
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryModuleVersionsResponse::CopyFrom(const QueryModuleVersionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.upgrade.v1beta1.QueryModuleVersionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryModuleVersionsResponse::IsInitialized() const {
  return true;
}

void QueryModuleVersionsResponse::InternalSwap(QueryModuleVersionsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_module_versions()->InternalSwap(other->_internal_mutable_module_versions());
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryModuleVersionsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto[7]);
}
// ===================================================================

class QueryAuthorityRequest::_Internal {
 public:
};

QueryAuthorityRequest::QueryAuthorityRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cosmos.upgrade.v1beta1.QueryAuthorityRequest)
}
QueryAuthorityRequest::QueryAuthorityRequest(const QueryAuthorityRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  QueryAuthorityRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.upgrade.v1beta1.QueryAuthorityRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryAuthorityRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryAuthorityRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata QueryAuthorityRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto[8]);
}
// ===================================================================

class QueryAuthorityResponse::_Internal {
 public:
};

QueryAuthorityResponse::QueryAuthorityResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.upgrade.v1beta1.QueryAuthorityResponse)
}
QueryAuthorityResponse::QueryAuthorityResponse(const QueryAuthorityResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryAuthorityResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.address_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_address().empty()) {
    _this->_impl_.address_.Set(from._internal_address(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.upgrade.v1beta1.QueryAuthorityResponse)
}

inline void QueryAuthorityResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.address_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryAuthorityResponse::~QueryAuthorityResponse() {
  // @@protoc_insertion_point(destructor:cosmos.upgrade.v1beta1.QueryAuthorityResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryAuthorityResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.address_.Destroy();
}

void QueryAuthorityResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryAuthorityResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.upgrade.v1beta1.QueryAuthorityResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.address_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryAuthorityResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string address = 1 [json_name = "address"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.upgrade.v1beta1.QueryAuthorityResponse.address"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryAuthorityResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.upgrade.v1beta1.QueryAuthorityResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1 [json_name = "address"];
  if (!this->_internal_address().empty()) {
    const std::string& _s = this->_internal_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.upgrade.v1beta1.QueryAuthorityResponse.address");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.upgrade.v1beta1.QueryAuthorityResponse)
  return target;
}

::size_t QueryAuthorityResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.upgrade.v1beta1.QueryAuthorityResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string address = 1 [json_name = "address"];
  if (!this->_internal_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryAuthorityResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryAuthorityResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryAuthorityResponse::GetClassData() const { return &_class_data_; }


void QueryAuthorityResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryAuthorityResponse*>(&to_msg);
  auto& from = static_cast<const QueryAuthorityResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.upgrade.v1beta1.QueryAuthorityResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_address().empty()) {
    _this->_internal_set_address(from._internal_address());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryAuthorityResponse::CopyFrom(const QueryAuthorityResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.upgrade.v1beta1.QueryAuthorityResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryAuthorityResponse::IsInitialized() const {
  return true;
}

void QueryAuthorityResponse::InternalSwap(QueryAuthorityResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.address_, lhs_arena,
                                       &other->_impl_.address_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryAuthorityResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto[9]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace upgrade
}  // namespace cosmos
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::cosmos::upgrade::v1beta1::QueryCurrentPlanRequest*
Arena::CreateMaybeMessage< ::cosmos::upgrade::v1beta1::QueryCurrentPlanRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::upgrade::v1beta1::QueryCurrentPlanRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::upgrade::v1beta1::QueryCurrentPlanResponse*
Arena::CreateMaybeMessage< ::cosmos::upgrade::v1beta1::QueryCurrentPlanResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::upgrade::v1beta1::QueryCurrentPlanResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::upgrade::v1beta1::QueryAppliedPlanRequest*
Arena::CreateMaybeMessage< ::cosmos::upgrade::v1beta1::QueryAppliedPlanRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::upgrade::v1beta1::QueryAppliedPlanRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::upgrade::v1beta1::QueryAppliedPlanResponse*
Arena::CreateMaybeMessage< ::cosmos::upgrade::v1beta1::QueryAppliedPlanResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::upgrade::v1beta1::QueryAppliedPlanResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::upgrade::v1beta1::QueryUpgradedConsensusStateRequest*
Arena::CreateMaybeMessage< ::cosmos::upgrade::v1beta1::QueryUpgradedConsensusStateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::upgrade::v1beta1::QueryUpgradedConsensusStateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::upgrade::v1beta1::QueryUpgradedConsensusStateResponse*
Arena::CreateMaybeMessage< ::cosmos::upgrade::v1beta1::QueryUpgradedConsensusStateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::upgrade::v1beta1::QueryUpgradedConsensusStateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::upgrade::v1beta1::QueryModuleVersionsRequest*
Arena::CreateMaybeMessage< ::cosmos::upgrade::v1beta1::QueryModuleVersionsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::upgrade::v1beta1::QueryModuleVersionsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::upgrade::v1beta1::QueryModuleVersionsResponse*
Arena::CreateMaybeMessage< ::cosmos::upgrade::v1beta1::QueryModuleVersionsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::upgrade::v1beta1::QueryModuleVersionsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::upgrade::v1beta1::QueryAuthorityRequest*
Arena::CreateMaybeMessage< ::cosmos::upgrade::v1beta1::QueryAuthorityRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::upgrade::v1beta1::QueryAuthorityRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::upgrade::v1beta1::QueryAuthorityResponse*
Arena::CreateMaybeMessage< ::cosmos::upgrade::v1beta1::QueryAuthorityResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::upgrade::v1beta1::QueryAuthorityResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
