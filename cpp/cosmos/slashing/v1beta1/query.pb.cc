// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/slashing/v1beta1/query.proto

#include "cosmos/slashing/v1beta1/query.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace cosmos {
namespace slashing {
namespace v1beta1 {
template <typename>
PROTOBUF_CONSTEXPR QueryParamsRequest::QueryParamsRequest(
    ::_pbi::ConstantInitialized) {}
struct QueryParamsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryParamsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryParamsRequestDefaultTypeInternal() {}
  union {
    QueryParamsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryParamsRequestDefaultTypeInternal _QueryParamsRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryParamsResponse::QueryParamsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.params_)*/nullptr} {}
struct QueryParamsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryParamsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryParamsResponseDefaultTypeInternal() {}
  union {
    QueryParamsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryParamsResponseDefaultTypeInternal _QueryParamsResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QuerySigningInfoRequest::QuerySigningInfoRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.cons_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QuerySigningInfoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QuerySigningInfoRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QuerySigningInfoRequestDefaultTypeInternal() {}
  union {
    QuerySigningInfoRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QuerySigningInfoRequestDefaultTypeInternal _QuerySigningInfoRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QuerySigningInfoResponse::QuerySigningInfoResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.val_signing_info_)*/nullptr} {}
struct QuerySigningInfoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QuerySigningInfoResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QuerySigningInfoResponseDefaultTypeInternal() {}
  union {
    QuerySigningInfoResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QuerySigningInfoResponseDefaultTypeInternal _QuerySigningInfoResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QuerySigningInfosRequest::QuerySigningInfosRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.pagination_)*/nullptr} {}
struct QuerySigningInfosRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QuerySigningInfosRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QuerySigningInfosRequestDefaultTypeInternal() {}
  union {
    QuerySigningInfosRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QuerySigningInfosRequestDefaultTypeInternal _QuerySigningInfosRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QuerySigningInfosResponse::QuerySigningInfosResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.info_)*/{}
  , /*decltype(_impl_.pagination_)*/nullptr} {}
struct QuerySigningInfosResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QuerySigningInfosResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QuerySigningInfosResponseDefaultTypeInternal() {}
  union {
    QuerySigningInfosResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QuerySigningInfosResponseDefaultTypeInternal _QuerySigningInfosResponse_default_instance_;
}  // namespace v1beta1
}  // namespace slashing
}  // namespace cosmos
static ::_pb::Metadata file_level_metadata_cosmos_2fslashing_2fv1beta1_2fquery_2eproto[6];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_cosmos_2fslashing_2fv1beta1_2fquery_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cosmos_2fslashing_2fv1beta1_2fquery_2eproto = nullptr;
const ::uint32_t TableStruct_cosmos_2fslashing_2fv1beta1_2fquery_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::slashing::v1beta1::QueryParamsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::slashing::v1beta1::QueryParamsResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::slashing::v1beta1::QueryParamsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::slashing::v1beta1::QueryParamsResponse, _impl_.params_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::slashing::v1beta1::QuerySigningInfoRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::slashing::v1beta1::QuerySigningInfoRequest, _impl_.cons_address_),
    PROTOBUF_FIELD_OFFSET(::cosmos::slashing::v1beta1::QuerySigningInfoResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::slashing::v1beta1::QuerySigningInfoResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::slashing::v1beta1::QuerySigningInfoResponse, _impl_.val_signing_info_),
    0,
    PROTOBUF_FIELD_OFFSET(::cosmos::slashing::v1beta1::QuerySigningInfosRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::slashing::v1beta1::QuerySigningInfosRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::slashing::v1beta1::QuerySigningInfosRequest, _impl_.pagination_),
    0,
    PROTOBUF_FIELD_OFFSET(::cosmos::slashing::v1beta1::QuerySigningInfosResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::slashing::v1beta1::QuerySigningInfosResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::slashing::v1beta1::QuerySigningInfosResponse, _impl_.info_),
    PROTOBUF_FIELD_OFFSET(::cosmos::slashing::v1beta1::QuerySigningInfosResponse, _impl_.pagination_),
    ~0u,
    0,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::cosmos::slashing::v1beta1::QueryParamsRequest)},
        { 8, 17, -1, sizeof(::cosmos::slashing::v1beta1::QueryParamsResponse)},
        { 18, -1, -1, sizeof(::cosmos::slashing::v1beta1::QuerySigningInfoRequest)},
        { 27, 36, -1, sizeof(::cosmos::slashing::v1beta1::QuerySigningInfoResponse)},
        { 37, 46, -1, sizeof(::cosmos::slashing::v1beta1::QuerySigningInfosRequest)},
        { 47, 57, -1, sizeof(::cosmos::slashing::v1beta1::QuerySigningInfosResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::cosmos::slashing::v1beta1::_QueryParamsRequest_default_instance_._instance,
    &::cosmos::slashing::v1beta1::_QueryParamsResponse_default_instance_._instance,
    &::cosmos::slashing::v1beta1::_QuerySigningInfoRequest_default_instance_._instance,
    &::cosmos::slashing::v1beta1::_QuerySigningInfoResponse_default_instance_._instance,
    &::cosmos::slashing::v1beta1::_QuerySigningInfosRequest_default_instance_._instance,
    &::cosmos::slashing::v1beta1::_QuerySigningInfosResponse_default_instance_._instance,
};
const char descriptor_table_protodef_cosmos_2fslashing_2fv1beta1_2fquery_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n#cosmos/slashing/v1beta1/query.proto\022\027c"
    "osmos.slashing.v1beta1\032*cosmos/base/quer"
    "y/v1beta1/pagination.proto\032\024gogoproto/go"
    "go.proto\032\034google/api/annotations.proto\032&"
    "cosmos/slashing/v1beta1/slashing.proto\032\031"
    "cosmos_proto/cosmos.proto\032\021amino/amino.p"
    "roto\"\024\n\022QueryParamsRequest\"Y\n\023QueryParam"
    "sResponse\022B\n\006params\030\001 \001(\0132\037.cosmos.slash"
    "ing.v1beta1.ParamsB\t\310\336\037\000\250\347\260*\001R\006params\"V\n"
    "\027QuerySigningInfoRequest\022;\n\014cons_address"
    "\030\001 \001(\tB\030\322\264-\024cosmos.AddressStringR\013consAd"
    "dress\"~\n\030QuerySigningInfoResponse\022b\n\020val"
    "_signing_info\030\001 \001(\0132-.cosmos.slashing.v1"
    "beta1.ValidatorSigningInfoB\t\310\336\037\000\250\347\260*\001R\016v"
    "alSigningInfo\"b\n\030QuerySigningInfosReques"
    "t\022F\n\npagination\030\001 \001(\0132&.cosmos.base.quer"
    "y.v1beta1.PageRequestR\npagination\"\262\001\n\031Qu"
    "erySigningInfosResponse\022L\n\004info\030\001 \003(\0132-."
    "cosmos.slashing.v1beta1.ValidatorSigning"
    "InfoB\t\310\336\037\000\250\347\260*\001R\004info\022G\n\npagination\030\002 \001("
    "\0132\'.cosmos.base.query.v1beta1.PageRespon"
    "seR\npagination2\362\003\n\005Query\022\214\001\n\006Params\022+.co"
    "smos.slashing.v1beta1.QueryParamsRequest"
    "\032,.cosmos.slashing.v1beta1.QueryParamsRe"
    "sponse\"\'\202\323\344\223\002!\022\037/cosmos/slashing/v1beta1"
    "/params\022\261\001\n\013SigningInfo\0220.cosmos.slashin"
    "g.v1beta1.QuerySigningInfoRequest\0321.cosm"
    "os.slashing.v1beta1.QuerySigningInfoResp"
    "onse\"=\202\323\344\223\0027\0225/cosmos/slashing/v1beta1/s"
    "igning_infos/{cons_address}\022\245\001\n\014SigningI"
    "nfos\0221.cosmos.slashing.v1beta1.QuerySign"
    "ingInfosRequest\0322.cosmos.slashing.v1beta"
    "1.QuerySigningInfosResponse\".\202\323\344\223\002(\022&/co"
    "smos/slashing/v1beta1/signing_infosB\326\001\n\033"
    "com.cosmos.slashing.v1beta1B\nQueryProtoP"
    "\001Z-github.com/cosmos/cosmos-sdk/x/slashi"
    "ng/types\242\002\003CSX\252\002\027Cosmos.Slashing.V1beta1"
    "\312\002\027Cosmos\\Slashing\\V1beta1\342\002#Cosmos\\Slas"
    "hing\\V1beta1\\GPBMetadata\352\002\031Cosmos::Slash"
    "ing::V1beta1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_cosmos_2fslashing_2fv1beta1_2fquery_2eproto_deps[6] =
    {
        &::descriptor_table_amino_2famino_2eproto,
        &::descriptor_table_cosmos_2fbase_2fquery_2fv1beta1_2fpagination_2eproto,
        &::descriptor_table_cosmos_2fslashing_2fv1beta1_2fslashing_2eproto,
        &::descriptor_table_cosmos_5fproto_2fcosmos_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_google_2fapi_2fannotations_2eproto,
};
static ::absl::once_flag descriptor_table_cosmos_2fslashing_2fv1beta1_2fquery_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_cosmos_2fslashing_2fv1beta1_2fquery_2eproto = {
    false,
    false,
    1580,
    descriptor_table_protodef_cosmos_2fslashing_2fv1beta1_2fquery_2eproto,
    "cosmos/slashing/v1beta1/query.proto",
    &descriptor_table_cosmos_2fslashing_2fv1beta1_2fquery_2eproto_once,
    descriptor_table_cosmos_2fslashing_2fv1beta1_2fquery_2eproto_deps,
    6,
    6,
    schemas,
    file_default_instances,
    TableStruct_cosmos_2fslashing_2fv1beta1_2fquery_2eproto::offsets,
    file_level_metadata_cosmos_2fslashing_2fv1beta1_2fquery_2eproto,
    file_level_enum_descriptors_cosmos_2fslashing_2fv1beta1_2fquery_2eproto,
    file_level_service_descriptors_cosmos_2fslashing_2fv1beta1_2fquery_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_cosmos_2fslashing_2fv1beta1_2fquery_2eproto_getter() {
  return &descriptor_table_cosmos_2fslashing_2fv1beta1_2fquery_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_cosmos_2fslashing_2fv1beta1_2fquery_2eproto(&descriptor_table_cosmos_2fslashing_2fv1beta1_2fquery_2eproto);
namespace cosmos {
namespace slashing {
namespace v1beta1 {
// ===================================================================

class QueryParamsRequest::_Internal {
 public:
};

QueryParamsRequest::QueryParamsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cosmos.slashing.v1beta1.QueryParamsRequest)
}
QueryParamsRequest::QueryParamsRequest(const QueryParamsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  QueryParamsRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.slashing.v1beta1.QueryParamsRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryParamsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryParamsRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata QueryParamsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fslashing_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fslashing_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fslashing_2fv1beta1_2fquery_2eproto[0]);
}
// ===================================================================

class QueryParamsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryParamsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryParamsResponse, _impl_._has_bits_);
  static const ::cosmos::slashing::v1beta1::Params& params(const QueryParamsResponse* msg);
  static void set_has_params(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::slashing::v1beta1::Params&
QueryParamsResponse::_Internal::params(const QueryParamsResponse* msg) {
  return *msg->_impl_.params_;
}
void QueryParamsResponse::clear_params() {
  if (_impl_.params_ != nullptr) _impl_.params_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryParamsResponse::QueryParamsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.slashing.v1beta1.QueryParamsResponse)
}
QueryParamsResponse::QueryParamsResponse(const QueryParamsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryParamsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.params_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.params_ = new ::cosmos::slashing::v1beta1::Params(*from._impl_.params_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.slashing.v1beta1.QueryParamsResponse)
}

inline void QueryParamsResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.params_){nullptr}
  };
}

QueryParamsResponse::~QueryParamsResponse() {
  // @@protoc_insertion_point(destructor:cosmos.slashing.v1beta1.QueryParamsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryParamsResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.params_;
}

void QueryParamsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryParamsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.slashing.v1beta1.QueryParamsResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.params_ != nullptr);
    _impl_.params_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryParamsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cosmos.slashing.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryParamsResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.slashing.v1beta1.QueryParamsResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.slashing.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.slashing.v1beta1.QueryParamsResponse)
  return target;
}

::size_t QueryParamsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.slashing.v1beta1.QueryParamsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cosmos.slashing.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryParamsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryParamsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryParamsResponse::GetClassData() const { return &_class_data_; }


void QueryParamsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryParamsResponse*>(&to_msg);
  auto& from = static_cast<const QueryParamsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.slashing.v1beta1.QueryParamsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_params()->::cosmos::slashing::v1beta1::Params::MergeFrom(
        from._internal_params());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryParamsResponse::CopyFrom(const QueryParamsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.slashing.v1beta1.QueryParamsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryParamsResponse::IsInitialized() const {
  return true;
}

void QueryParamsResponse::InternalSwap(QueryParamsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.params_, other->_impl_.params_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryParamsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fslashing_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fslashing_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fslashing_2fv1beta1_2fquery_2eproto[1]);
}
// ===================================================================

class QuerySigningInfoRequest::_Internal {
 public:
};

QuerySigningInfoRequest::QuerySigningInfoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.slashing.v1beta1.QuerySigningInfoRequest)
}
QuerySigningInfoRequest::QuerySigningInfoRequest(const QuerySigningInfoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QuerySigningInfoRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.cons_address_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.cons_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.cons_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_cons_address().empty()) {
    _this->_impl_.cons_address_.Set(from._internal_cons_address(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.slashing.v1beta1.QuerySigningInfoRequest)
}

inline void QuerySigningInfoRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.cons_address_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.cons_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.cons_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QuerySigningInfoRequest::~QuerySigningInfoRequest() {
  // @@protoc_insertion_point(destructor:cosmos.slashing.v1beta1.QuerySigningInfoRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QuerySigningInfoRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.cons_address_.Destroy();
}

void QuerySigningInfoRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QuerySigningInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.slashing.v1beta1.QuerySigningInfoRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.cons_address_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QuerySigningInfoRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string cons_address = 1 [json_name = "consAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_cons_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.slashing.v1beta1.QuerySigningInfoRequest.cons_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QuerySigningInfoRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.slashing.v1beta1.QuerySigningInfoRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string cons_address = 1 [json_name = "consAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_cons_address().empty()) {
    const std::string& _s = this->_internal_cons_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.slashing.v1beta1.QuerySigningInfoRequest.cons_address");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.slashing.v1beta1.QuerySigningInfoRequest)
  return target;
}

::size_t QuerySigningInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.slashing.v1beta1.QuerySigningInfoRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string cons_address = 1 [json_name = "consAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_cons_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_cons_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QuerySigningInfoRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QuerySigningInfoRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QuerySigningInfoRequest::GetClassData() const { return &_class_data_; }


void QuerySigningInfoRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QuerySigningInfoRequest*>(&to_msg);
  auto& from = static_cast<const QuerySigningInfoRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.slashing.v1beta1.QuerySigningInfoRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_cons_address().empty()) {
    _this->_internal_set_cons_address(from._internal_cons_address());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QuerySigningInfoRequest::CopyFrom(const QuerySigningInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.slashing.v1beta1.QuerySigningInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuerySigningInfoRequest::IsInitialized() const {
  return true;
}

void QuerySigningInfoRequest::InternalSwap(QuerySigningInfoRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cons_address_, lhs_arena,
                                       &other->_impl_.cons_address_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QuerySigningInfoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fslashing_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fslashing_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fslashing_2fv1beta1_2fquery_2eproto[2]);
}
// ===================================================================

class QuerySigningInfoResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QuerySigningInfoResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QuerySigningInfoResponse, _impl_._has_bits_);
  static const ::cosmos::slashing::v1beta1::ValidatorSigningInfo& val_signing_info(const QuerySigningInfoResponse* msg);
  static void set_has_val_signing_info(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::slashing::v1beta1::ValidatorSigningInfo&
QuerySigningInfoResponse::_Internal::val_signing_info(const QuerySigningInfoResponse* msg) {
  return *msg->_impl_.val_signing_info_;
}
void QuerySigningInfoResponse::clear_val_signing_info() {
  if (_impl_.val_signing_info_ != nullptr) _impl_.val_signing_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QuerySigningInfoResponse::QuerySigningInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.slashing.v1beta1.QuerySigningInfoResponse)
}
QuerySigningInfoResponse::QuerySigningInfoResponse(const QuerySigningInfoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QuerySigningInfoResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.val_signing_info_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.val_signing_info_ = new ::cosmos::slashing::v1beta1::ValidatorSigningInfo(*from._impl_.val_signing_info_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.slashing.v1beta1.QuerySigningInfoResponse)
}

inline void QuerySigningInfoResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.val_signing_info_){nullptr}
  };
}

QuerySigningInfoResponse::~QuerySigningInfoResponse() {
  // @@protoc_insertion_point(destructor:cosmos.slashing.v1beta1.QuerySigningInfoResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QuerySigningInfoResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.val_signing_info_;
}

void QuerySigningInfoResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QuerySigningInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.slashing.v1beta1.QuerySigningInfoResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.val_signing_info_ != nullptr);
    _impl_.val_signing_info_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QuerySigningInfoResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cosmos.slashing.v1beta1.ValidatorSigningInfo val_signing_info = 1 [json_name = "valSigningInfo", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_val_signing_info(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QuerySigningInfoResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.slashing.v1beta1.QuerySigningInfoResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.slashing.v1beta1.ValidatorSigningInfo val_signing_info = 1 [json_name = "valSigningInfo", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::val_signing_info(this),
        _Internal::val_signing_info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.slashing.v1beta1.QuerySigningInfoResponse)
  return target;
}

::size_t QuerySigningInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.slashing.v1beta1.QuerySigningInfoResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cosmos.slashing.v1beta1.ValidatorSigningInfo val_signing_info = 1 [json_name = "valSigningInfo", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.val_signing_info_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QuerySigningInfoResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QuerySigningInfoResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QuerySigningInfoResponse::GetClassData() const { return &_class_data_; }


void QuerySigningInfoResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QuerySigningInfoResponse*>(&to_msg);
  auto& from = static_cast<const QuerySigningInfoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.slashing.v1beta1.QuerySigningInfoResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_val_signing_info()->::cosmos::slashing::v1beta1::ValidatorSigningInfo::MergeFrom(
        from._internal_val_signing_info());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QuerySigningInfoResponse::CopyFrom(const QuerySigningInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.slashing.v1beta1.QuerySigningInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuerySigningInfoResponse::IsInitialized() const {
  return true;
}

void QuerySigningInfoResponse::InternalSwap(QuerySigningInfoResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.val_signing_info_, other->_impl_.val_signing_info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QuerySigningInfoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fslashing_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fslashing_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fslashing_2fv1beta1_2fquery_2eproto[3]);
}
// ===================================================================

class QuerySigningInfosRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<QuerySigningInfosRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QuerySigningInfosRequest, _impl_._has_bits_);
  static const ::cosmos::base::query::v1beta1::PageRequest& pagination(const QuerySigningInfosRequest* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::query::v1beta1::PageRequest&
QuerySigningInfosRequest::_Internal::pagination(const QuerySigningInfosRequest* msg) {
  return *msg->_impl_.pagination_;
}
void QuerySigningInfosRequest::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QuerySigningInfosRequest::QuerySigningInfosRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.slashing.v1beta1.QuerySigningInfosRequest)
}
QuerySigningInfosRequest::QuerySigningInfosRequest(const QuerySigningInfosRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QuerySigningInfosRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.pagination_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::cosmos::base::query::v1beta1::PageRequest(*from._impl_.pagination_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.slashing.v1beta1.QuerySigningInfosRequest)
}

inline void QuerySigningInfosRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.pagination_){nullptr}
  };
}

QuerySigningInfosRequest::~QuerySigningInfosRequest() {
  // @@protoc_insertion_point(destructor:cosmos.slashing.v1beta1.QuerySigningInfosRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QuerySigningInfosRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.pagination_;
}

void QuerySigningInfosRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QuerySigningInfosRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.slashing.v1beta1.QuerySigningInfosRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QuerySigningInfosRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cosmos.base.query.v1beta1.PageRequest pagination = 1 [json_name = "pagination"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagination(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QuerySigningInfosRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.slashing.v1beta1.QuerySigningInfosRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.query.v1beta1.PageRequest pagination = 1 [json_name = "pagination"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.slashing.v1beta1.QuerySigningInfosRequest)
  return target;
}

::size_t QuerySigningInfosRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.slashing.v1beta1.QuerySigningInfosRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cosmos.base.query.v1beta1.PageRequest pagination = 1 [json_name = "pagination"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QuerySigningInfosRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QuerySigningInfosRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QuerySigningInfosRequest::GetClassData() const { return &_class_data_; }


void QuerySigningInfosRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QuerySigningInfosRequest*>(&to_msg);
  auto& from = static_cast<const QuerySigningInfosRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.slashing.v1beta1.QuerySigningInfosRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::cosmos::base::query::v1beta1::PageRequest::MergeFrom(
        from._internal_pagination());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QuerySigningInfosRequest::CopyFrom(const QuerySigningInfosRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.slashing.v1beta1.QuerySigningInfosRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuerySigningInfosRequest::IsInitialized() const {
  return true;
}

void QuerySigningInfosRequest::InternalSwap(QuerySigningInfosRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QuerySigningInfosRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fslashing_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fslashing_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fslashing_2fv1beta1_2fquery_2eproto[4]);
}
// ===================================================================

class QuerySigningInfosResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QuerySigningInfosResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QuerySigningInfosResponse, _impl_._has_bits_);
  static const ::cosmos::base::query::v1beta1::PageResponse& pagination(const QuerySigningInfosResponse* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::query::v1beta1::PageResponse&
QuerySigningInfosResponse::_Internal::pagination(const QuerySigningInfosResponse* msg) {
  return *msg->_impl_.pagination_;
}
void QuerySigningInfosResponse::clear_info() {
  _internal_mutable_info()->Clear();
}
void QuerySigningInfosResponse::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QuerySigningInfosResponse::QuerySigningInfosResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.slashing.v1beta1.QuerySigningInfosResponse)
}
QuerySigningInfosResponse::QuerySigningInfosResponse(const QuerySigningInfosResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QuerySigningInfosResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.info_){from._impl_.info_}
    , decltype(_impl_.pagination_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::cosmos::base::query::v1beta1::PageResponse(*from._impl_.pagination_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.slashing.v1beta1.QuerySigningInfosResponse)
}

inline void QuerySigningInfosResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.info_){arena}
    , decltype(_impl_.pagination_){nullptr}
  };
}

QuerySigningInfosResponse::~QuerySigningInfosResponse() {
  // @@protoc_insertion_point(destructor:cosmos.slashing.v1beta1.QuerySigningInfosResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QuerySigningInfosResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_info()->~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.pagination_;
}

void QuerySigningInfosResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QuerySigningInfosResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.slashing.v1beta1.QuerySigningInfosResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_info()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QuerySigningInfosResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .cosmos.slashing.v1beta1.ValidatorSigningInfo info = 1 [json_name = "info", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_info(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagination(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QuerySigningInfosResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.slashing.v1beta1.QuerySigningInfosResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cosmos.slashing.v1beta1.ValidatorSigningInfo info = 1 [json_name = "info", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_info_size()); i < n; i++) {
    const auto& repfield = this->_internal_info(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.slashing.v1beta1.QuerySigningInfosResponse)
  return target;
}

::size_t QuerySigningInfosResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.slashing.v1beta1.QuerySigningInfosResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cosmos.slashing.v1beta1.ValidatorSigningInfo info = 1 [json_name = "info", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  total_size += 1UL * this->_internal_info_size();
  for (const auto& msg : this->_internal_info()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QuerySigningInfosResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QuerySigningInfosResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QuerySigningInfosResponse::GetClassData() const { return &_class_data_; }


void QuerySigningInfosResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QuerySigningInfosResponse*>(&to_msg);
  auto& from = static_cast<const QuerySigningInfosResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.slashing.v1beta1.QuerySigningInfosResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_info()->MergeFrom(from._internal_info());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::cosmos::base::query::v1beta1::PageResponse::MergeFrom(
        from._internal_pagination());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QuerySigningInfosResponse::CopyFrom(const QuerySigningInfosResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.slashing.v1beta1.QuerySigningInfosResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuerySigningInfosResponse::IsInitialized() const {
  return true;
}

void QuerySigningInfosResponse::InternalSwap(QuerySigningInfosResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _internal_mutable_info()->InternalSwap(other->_internal_mutable_info());
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QuerySigningInfosResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fslashing_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fslashing_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fslashing_2fv1beta1_2fquery_2eproto[5]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace slashing
}  // namespace cosmos
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::cosmos::slashing::v1beta1::QueryParamsRequest*
Arena::CreateMaybeMessage< ::cosmos::slashing::v1beta1::QueryParamsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::slashing::v1beta1::QueryParamsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::slashing::v1beta1::QueryParamsResponse*
Arena::CreateMaybeMessage< ::cosmos::slashing::v1beta1::QueryParamsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::slashing::v1beta1::QueryParamsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::slashing::v1beta1::QuerySigningInfoRequest*
Arena::CreateMaybeMessage< ::cosmos::slashing::v1beta1::QuerySigningInfoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::slashing::v1beta1::QuerySigningInfoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::slashing::v1beta1::QuerySigningInfoResponse*
Arena::CreateMaybeMessage< ::cosmos::slashing::v1beta1::QuerySigningInfoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::slashing::v1beta1::QuerySigningInfoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::slashing::v1beta1::QuerySigningInfosRequest*
Arena::CreateMaybeMessage< ::cosmos::slashing::v1beta1::QuerySigningInfosRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::slashing::v1beta1::QuerySigningInfosRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::slashing::v1beta1::QuerySigningInfosResponse*
Arena::CreateMaybeMessage< ::cosmos::slashing::v1beta1::QuerySigningInfosResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::slashing::v1beta1::QuerySigningInfosResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
