// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/feegrant/v1beta1/query.proto

#include "cosmos/feegrant/v1beta1/query.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace cosmos {
namespace feegrant {
namespace v1beta1 {
template <typename>
PROTOBUF_CONSTEXPR QueryAllowanceRequest::QueryAllowanceRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.granter_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.grantee_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryAllowanceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryAllowanceRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryAllowanceRequestDefaultTypeInternal() {}
  union {
    QueryAllowanceRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryAllowanceRequestDefaultTypeInternal _QueryAllowanceRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryAllowanceResponse::QueryAllowanceResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.allowance_)*/nullptr} {}
struct QueryAllowanceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryAllowanceResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryAllowanceResponseDefaultTypeInternal() {}
  union {
    QueryAllowanceResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryAllowanceResponseDefaultTypeInternal _QueryAllowanceResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryAllowancesRequest::QueryAllowancesRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.grantee_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.pagination_)*/nullptr} {}
struct QueryAllowancesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryAllowancesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryAllowancesRequestDefaultTypeInternal() {}
  union {
    QueryAllowancesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryAllowancesRequestDefaultTypeInternal _QueryAllowancesRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryAllowancesResponse::QueryAllowancesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.allowances_)*/{}
  , /*decltype(_impl_.pagination_)*/nullptr} {}
struct QueryAllowancesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryAllowancesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryAllowancesResponseDefaultTypeInternal() {}
  union {
    QueryAllowancesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryAllowancesResponseDefaultTypeInternal _QueryAllowancesResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryAllowancesByGranterRequest::QueryAllowancesByGranterRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.granter_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.pagination_)*/nullptr} {}
struct QueryAllowancesByGranterRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryAllowancesByGranterRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryAllowancesByGranterRequestDefaultTypeInternal() {}
  union {
    QueryAllowancesByGranterRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryAllowancesByGranterRequestDefaultTypeInternal _QueryAllowancesByGranterRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryAllowancesByGranterResponse::QueryAllowancesByGranterResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.allowances_)*/{}
  , /*decltype(_impl_.pagination_)*/nullptr} {}
struct QueryAllowancesByGranterResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryAllowancesByGranterResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryAllowancesByGranterResponseDefaultTypeInternal() {}
  union {
    QueryAllowancesByGranterResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryAllowancesByGranterResponseDefaultTypeInternal _QueryAllowancesByGranterResponse_default_instance_;
}  // namespace v1beta1
}  // namespace feegrant
}  // namespace cosmos
static ::_pb::Metadata file_level_metadata_cosmos_2ffeegrant_2fv1beta1_2fquery_2eproto[6];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_cosmos_2ffeegrant_2fv1beta1_2fquery_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cosmos_2ffeegrant_2fv1beta1_2fquery_2eproto = nullptr;
const ::uint32_t TableStruct_cosmos_2ffeegrant_2fv1beta1_2fquery_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::feegrant::v1beta1::QueryAllowanceRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::feegrant::v1beta1::QueryAllowanceRequest, _impl_.granter_),
    PROTOBUF_FIELD_OFFSET(::cosmos::feegrant::v1beta1::QueryAllowanceRequest, _impl_.grantee_),
    PROTOBUF_FIELD_OFFSET(::cosmos::feegrant::v1beta1::QueryAllowanceResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::feegrant::v1beta1::QueryAllowanceResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::feegrant::v1beta1::QueryAllowanceResponse, _impl_.allowance_),
    0,
    PROTOBUF_FIELD_OFFSET(::cosmos::feegrant::v1beta1::QueryAllowancesRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::feegrant::v1beta1::QueryAllowancesRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::feegrant::v1beta1::QueryAllowancesRequest, _impl_.grantee_),
    PROTOBUF_FIELD_OFFSET(::cosmos::feegrant::v1beta1::QueryAllowancesRequest, _impl_.pagination_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::cosmos::feegrant::v1beta1::QueryAllowancesResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::feegrant::v1beta1::QueryAllowancesResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::feegrant::v1beta1::QueryAllowancesResponse, _impl_.allowances_),
    PROTOBUF_FIELD_OFFSET(::cosmos::feegrant::v1beta1::QueryAllowancesResponse, _impl_.pagination_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::cosmos::feegrant::v1beta1::QueryAllowancesByGranterRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::feegrant::v1beta1::QueryAllowancesByGranterRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::feegrant::v1beta1::QueryAllowancesByGranterRequest, _impl_.granter_),
    PROTOBUF_FIELD_OFFSET(::cosmos::feegrant::v1beta1::QueryAllowancesByGranterRequest, _impl_.pagination_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::cosmos::feegrant::v1beta1::QueryAllowancesByGranterResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::feegrant::v1beta1::QueryAllowancesByGranterResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::feegrant::v1beta1::QueryAllowancesByGranterResponse, _impl_.allowances_),
    PROTOBUF_FIELD_OFFSET(::cosmos::feegrant::v1beta1::QueryAllowancesByGranterResponse, _impl_.pagination_),
    ~0u,
    0,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::cosmos::feegrant::v1beta1::QueryAllowanceRequest)},
        { 10, 19, -1, sizeof(::cosmos::feegrant::v1beta1::QueryAllowanceResponse)},
        { 20, 30, -1, sizeof(::cosmos::feegrant::v1beta1::QueryAllowancesRequest)},
        { 32, 42, -1, sizeof(::cosmos::feegrant::v1beta1::QueryAllowancesResponse)},
        { 44, 54, -1, sizeof(::cosmos::feegrant::v1beta1::QueryAllowancesByGranterRequest)},
        { 56, 66, -1, sizeof(::cosmos::feegrant::v1beta1::QueryAllowancesByGranterResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::cosmos::feegrant::v1beta1::_QueryAllowanceRequest_default_instance_._instance,
    &::cosmos::feegrant::v1beta1::_QueryAllowanceResponse_default_instance_._instance,
    &::cosmos::feegrant::v1beta1::_QueryAllowancesRequest_default_instance_._instance,
    &::cosmos::feegrant::v1beta1::_QueryAllowancesResponse_default_instance_._instance,
    &::cosmos::feegrant::v1beta1::_QueryAllowancesByGranterRequest_default_instance_._instance,
    &::cosmos::feegrant::v1beta1::_QueryAllowancesByGranterResponse_default_instance_._instance,
};
const char descriptor_table_protodef_cosmos_2ffeegrant_2fv1beta1_2fquery_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n#cosmos/feegrant/v1beta1/query.proto\022\027c"
    "osmos.feegrant.v1beta1\032&cosmos/feegrant/"
    "v1beta1/feegrant.proto\032*cosmos/base/quer"
    "y/v1beta1/pagination.proto\032\034google/api/a"
    "nnotations.proto\032\031cosmos_proto/cosmos.pr"
    "oto\"\177\n\025QueryAllowanceRequest\0222\n\007granter\030"
    "\001 \001(\tB\030\322\264-\024cosmos.AddressStringR\007granter"
    "\0222\n\007grantee\030\002 \001(\tB\030\322\264-\024cosmos.AddressStr"
    "ingR\007grantee\"V\n\026QueryAllowanceResponse\022<"
    "\n\tallowance\030\001 \001(\0132\036.cosmos.feegrant.v1be"
    "ta1.GrantR\tallowance\"\224\001\n\026QueryAllowances"
    "Request\0222\n\007grantee\030\001 \001(\tB\030\322\264-\024cosmos.Add"
    "ressStringR\007grantee\022F\n\npagination\030\002 \001(\0132"
    "&.cosmos.base.query.v1beta1.PageRequestR"
    "\npagination\"\242\001\n\027QueryAllowancesResponse\022"
    ">\n\nallowances\030\001 \003(\0132\036.cosmos.feegrant.v1"
    "beta1.GrantR\nallowances\022G\n\npagination\030\002 "
    "\001(\0132\'.cosmos.base.query.v1beta1.PageResp"
    "onseR\npagination\"\235\001\n\037QueryAllowancesByGr"
    "anterRequest\0222\n\007granter\030\001 \001(\tB\030\322\264-\024cosmo"
    "s.AddressStringR\007granter\022F\n\npagination\030\002"
    " \001(\0132&.cosmos.base.query.v1beta1.PageReq"
    "uestR\npagination\"\253\001\n QueryAllowancesByGr"
    "anterResponse\022>\n\nallowances\030\001 \003(\0132\036.cosm"
    "os.feegrant.v1beta1.GrantR\nallowances\022G\n"
    "\npagination\030\002 \001(\0132\'.cosmos.base.query.v1"
    "beta1.PageResponseR\npagination2\237\004\n\005Query"
    "\022\254\001\n\tAllowance\022..cosmos.feegrant.v1beta1"
    ".QueryAllowanceRequest\032/.cosmos.feegrant"
    ".v1beta1.QueryAllowanceResponse\">\202\323\344\223\0028\022"
    "6/cosmos/feegrant/v1beta1/allowance/{gra"
    "nter}/{grantee}\022\246\001\n\nAllowances\022/.cosmos."
    "feegrant.v1beta1.QueryAllowancesRequest\032"
    "0.cosmos.feegrant.v1beta1.QueryAllowance"
    "sResponse\"5\202\323\344\223\002/\022-/cosmos/feegrant/v1be"
    "ta1/allowances/{grantee}\022\275\001\n\023AllowancesB"
    "yGranter\0228.cosmos.feegrant.v1beta1.Query"
    "AllowancesByGranterRequest\0329.cosmos.feeg"
    "rant.v1beta1.QueryAllowancesByGranterRes"
    "ponse\"1\202\323\344\223\002+\022)/cosmos/feegrant/v1beta1/"
    "issued/{granter}B\320\001\n\033com.cosmos.feegrant"
    ".v1beta1B\nQueryProtoP\001Z\'github.com/cosmo"
    "s/cosmos-sdk/x/feegrant\242\002\003CFX\252\002\027Cosmos.F"
    "eegrant.V1beta1\312\002\027Cosmos\\Feegrant\\V1beta"
    "1\342\002#Cosmos\\Feegrant\\V1beta1\\GPBMetadata\352"
    "\002\031Cosmos::Feegrant::V1beta1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_cosmos_2ffeegrant_2fv1beta1_2fquery_2eproto_deps[4] =
    {
        &::descriptor_table_cosmos_2fbase_2fquery_2fv1beta1_2fpagination_2eproto,
        &::descriptor_table_cosmos_2ffeegrant_2fv1beta1_2ffeegrant_2eproto,
        &::descriptor_table_cosmos_5fproto_2fcosmos_2eproto,
        &::descriptor_table_google_2fapi_2fannotations_2eproto,
};
static ::absl::once_flag descriptor_table_cosmos_2ffeegrant_2fv1beta1_2fquery_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_cosmos_2ffeegrant_2fv1beta1_2fquery_2eproto = {
    false,
    false,
    1835,
    descriptor_table_protodef_cosmos_2ffeegrant_2fv1beta1_2fquery_2eproto,
    "cosmos/feegrant/v1beta1/query.proto",
    &descriptor_table_cosmos_2ffeegrant_2fv1beta1_2fquery_2eproto_once,
    descriptor_table_cosmos_2ffeegrant_2fv1beta1_2fquery_2eproto_deps,
    4,
    6,
    schemas,
    file_default_instances,
    TableStruct_cosmos_2ffeegrant_2fv1beta1_2fquery_2eproto::offsets,
    file_level_metadata_cosmos_2ffeegrant_2fv1beta1_2fquery_2eproto,
    file_level_enum_descriptors_cosmos_2ffeegrant_2fv1beta1_2fquery_2eproto,
    file_level_service_descriptors_cosmos_2ffeegrant_2fv1beta1_2fquery_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_cosmos_2ffeegrant_2fv1beta1_2fquery_2eproto_getter() {
  return &descriptor_table_cosmos_2ffeegrant_2fv1beta1_2fquery_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_cosmos_2ffeegrant_2fv1beta1_2fquery_2eproto(&descriptor_table_cosmos_2ffeegrant_2fv1beta1_2fquery_2eproto);
namespace cosmos {
namespace feegrant {
namespace v1beta1 {
// ===================================================================

class QueryAllowanceRequest::_Internal {
 public:
};

QueryAllowanceRequest::QueryAllowanceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.feegrant.v1beta1.QueryAllowanceRequest)
}
QueryAllowanceRequest::QueryAllowanceRequest(const QueryAllowanceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryAllowanceRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.granter_) {}

    , decltype(_impl_.grantee_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.granter_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.granter_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_granter().empty()) {
    _this->_impl_.granter_.Set(from._internal_granter(), _this->GetArenaForAllocation());
  }
  _impl_.grantee_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.grantee_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_grantee().empty()) {
    _this->_impl_.grantee_.Set(from._internal_grantee(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.feegrant.v1beta1.QueryAllowanceRequest)
}

inline void QueryAllowanceRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.granter_) {}

    , decltype(_impl_.grantee_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.granter_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.granter_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.grantee_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.grantee_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryAllowanceRequest::~QueryAllowanceRequest() {
  // @@protoc_insertion_point(destructor:cosmos.feegrant.v1beta1.QueryAllowanceRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryAllowanceRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.granter_.Destroy();
  _impl_.grantee_.Destroy();
}

void QueryAllowanceRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryAllowanceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.feegrant.v1beta1.QueryAllowanceRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.granter_.ClearToEmpty();
  _impl_.grantee_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryAllowanceRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string granter = 1 [json_name = "granter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_granter();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.feegrant.v1beta1.QueryAllowanceRequest.granter"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string grantee = 2 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_grantee();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.feegrant.v1beta1.QueryAllowanceRequest.grantee"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryAllowanceRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.feegrant.v1beta1.QueryAllowanceRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string granter = 1 [json_name = "granter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_granter().empty()) {
    const std::string& _s = this->_internal_granter();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.feegrant.v1beta1.QueryAllowanceRequest.granter");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string grantee = 2 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_grantee().empty()) {
    const std::string& _s = this->_internal_grantee();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.feegrant.v1beta1.QueryAllowanceRequest.grantee");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.feegrant.v1beta1.QueryAllowanceRequest)
  return target;
}

::size_t QueryAllowanceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.feegrant.v1beta1.QueryAllowanceRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string granter = 1 [json_name = "granter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_granter().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_granter());
  }

  // string grantee = 2 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_grantee().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_grantee());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryAllowanceRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryAllowanceRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryAllowanceRequest::GetClassData() const { return &_class_data_; }


void QueryAllowanceRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryAllowanceRequest*>(&to_msg);
  auto& from = static_cast<const QueryAllowanceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.feegrant.v1beta1.QueryAllowanceRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_granter().empty()) {
    _this->_internal_set_granter(from._internal_granter());
  }
  if (!from._internal_grantee().empty()) {
    _this->_internal_set_grantee(from._internal_grantee());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryAllowanceRequest::CopyFrom(const QueryAllowanceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.feegrant.v1beta1.QueryAllowanceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryAllowanceRequest::IsInitialized() const {
  return true;
}

void QueryAllowanceRequest::InternalSwap(QueryAllowanceRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.granter_, lhs_arena,
                                       &other->_impl_.granter_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.grantee_, lhs_arena,
                                       &other->_impl_.grantee_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryAllowanceRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2ffeegrant_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2ffeegrant_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2ffeegrant_2fv1beta1_2fquery_2eproto[0]);
}
// ===================================================================

class QueryAllowanceResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryAllowanceResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryAllowanceResponse, _impl_._has_bits_);
  static const ::cosmos::feegrant::v1beta1::Grant& allowance(const QueryAllowanceResponse* msg);
  static void set_has_allowance(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::feegrant::v1beta1::Grant&
QueryAllowanceResponse::_Internal::allowance(const QueryAllowanceResponse* msg) {
  return *msg->_impl_.allowance_;
}
void QueryAllowanceResponse::clear_allowance() {
  if (_impl_.allowance_ != nullptr) _impl_.allowance_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryAllowanceResponse::QueryAllowanceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.feegrant.v1beta1.QueryAllowanceResponse)
}
QueryAllowanceResponse::QueryAllowanceResponse(const QueryAllowanceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryAllowanceResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.allowance_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.allowance_ = new ::cosmos::feegrant::v1beta1::Grant(*from._impl_.allowance_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.feegrant.v1beta1.QueryAllowanceResponse)
}

inline void QueryAllowanceResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.allowance_){nullptr}
  };
}

QueryAllowanceResponse::~QueryAllowanceResponse() {
  // @@protoc_insertion_point(destructor:cosmos.feegrant.v1beta1.QueryAllowanceResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryAllowanceResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.allowance_;
}

void QueryAllowanceResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryAllowanceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.feegrant.v1beta1.QueryAllowanceResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.allowance_ != nullptr);
    _impl_.allowance_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryAllowanceResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cosmos.feegrant.v1beta1.Grant allowance = 1 [json_name = "allowance"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_allowance(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryAllowanceResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.feegrant.v1beta1.QueryAllowanceResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.feegrant.v1beta1.Grant allowance = 1 [json_name = "allowance"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::allowance(this),
        _Internal::allowance(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.feegrant.v1beta1.QueryAllowanceResponse)
  return target;
}

::size_t QueryAllowanceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.feegrant.v1beta1.QueryAllowanceResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cosmos.feegrant.v1beta1.Grant allowance = 1 [json_name = "allowance"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.allowance_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryAllowanceResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryAllowanceResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryAllowanceResponse::GetClassData() const { return &_class_data_; }


void QueryAllowanceResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryAllowanceResponse*>(&to_msg);
  auto& from = static_cast<const QueryAllowanceResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.feegrant.v1beta1.QueryAllowanceResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_allowance()->::cosmos::feegrant::v1beta1::Grant::MergeFrom(
        from._internal_allowance());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryAllowanceResponse::CopyFrom(const QueryAllowanceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.feegrant.v1beta1.QueryAllowanceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryAllowanceResponse::IsInitialized() const {
  return true;
}

void QueryAllowanceResponse::InternalSwap(QueryAllowanceResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.allowance_, other->_impl_.allowance_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryAllowanceResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2ffeegrant_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2ffeegrant_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2ffeegrant_2fv1beta1_2fquery_2eproto[1]);
}
// ===================================================================

class QueryAllowancesRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryAllowancesRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryAllowancesRequest, _impl_._has_bits_);
  static const ::cosmos::base::query::v1beta1::PageRequest& pagination(const QueryAllowancesRequest* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::query::v1beta1::PageRequest&
QueryAllowancesRequest::_Internal::pagination(const QueryAllowancesRequest* msg) {
  return *msg->_impl_.pagination_;
}
void QueryAllowancesRequest::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryAllowancesRequest::QueryAllowancesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.feegrant.v1beta1.QueryAllowancesRequest)
}
QueryAllowancesRequest::QueryAllowancesRequest(const QueryAllowancesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryAllowancesRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.grantee_) {}

    , decltype(_impl_.pagination_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.grantee_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.grantee_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_grantee().empty()) {
    _this->_impl_.grantee_.Set(from._internal_grantee(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::cosmos::base::query::v1beta1::PageRequest(*from._impl_.pagination_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.feegrant.v1beta1.QueryAllowancesRequest)
}

inline void QueryAllowancesRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.grantee_) {}

    , decltype(_impl_.pagination_){nullptr}
  };
  _impl_.grantee_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.grantee_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryAllowancesRequest::~QueryAllowancesRequest() {
  // @@protoc_insertion_point(destructor:cosmos.feegrant.v1beta1.QueryAllowancesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryAllowancesRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.grantee_.Destroy();
  if (this != internal_default_instance()) delete _impl_.pagination_;
}

void QueryAllowancesRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryAllowancesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.feegrant.v1beta1.QueryAllowancesRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.grantee_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryAllowancesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string grantee = 1 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_grantee();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.feegrant.v1beta1.QueryAllowancesRequest.grantee"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagination(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryAllowancesRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.feegrant.v1beta1.QueryAllowancesRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string grantee = 1 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_grantee().empty()) {
    const std::string& _s = this->_internal_grantee();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.feegrant.v1beta1.QueryAllowancesRequest.grantee");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.feegrant.v1beta1.QueryAllowancesRequest)
  return target;
}

::size_t QueryAllowancesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.feegrant.v1beta1.QueryAllowancesRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string grantee = 1 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_grantee().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_grantee());
  }

  // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryAllowancesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryAllowancesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryAllowancesRequest::GetClassData() const { return &_class_data_; }


void QueryAllowancesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryAllowancesRequest*>(&to_msg);
  auto& from = static_cast<const QueryAllowancesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.feegrant.v1beta1.QueryAllowancesRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_grantee().empty()) {
    _this->_internal_set_grantee(from._internal_grantee());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::cosmos::base::query::v1beta1::PageRequest::MergeFrom(
        from._internal_pagination());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryAllowancesRequest::CopyFrom(const QueryAllowancesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.feegrant.v1beta1.QueryAllowancesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryAllowancesRequest::IsInitialized() const {
  return true;
}

void QueryAllowancesRequest::InternalSwap(QueryAllowancesRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.grantee_, lhs_arena,
                                       &other->_impl_.grantee_, rhs_arena);
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryAllowancesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2ffeegrant_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2ffeegrant_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2ffeegrant_2fv1beta1_2fquery_2eproto[2]);
}
// ===================================================================

class QueryAllowancesResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryAllowancesResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryAllowancesResponse, _impl_._has_bits_);
  static const ::cosmos::base::query::v1beta1::PageResponse& pagination(const QueryAllowancesResponse* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::query::v1beta1::PageResponse&
QueryAllowancesResponse::_Internal::pagination(const QueryAllowancesResponse* msg) {
  return *msg->_impl_.pagination_;
}
void QueryAllowancesResponse::clear_allowances() {
  _internal_mutable_allowances()->Clear();
}
void QueryAllowancesResponse::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryAllowancesResponse::QueryAllowancesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.feegrant.v1beta1.QueryAllowancesResponse)
}
QueryAllowancesResponse::QueryAllowancesResponse(const QueryAllowancesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryAllowancesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.allowances_){from._impl_.allowances_}
    , decltype(_impl_.pagination_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::cosmos::base::query::v1beta1::PageResponse(*from._impl_.pagination_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.feegrant.v1beta1.QueryAllowancesResponse)
}

inline void QueryAllowancesResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.allowances_){arena}
    , decltype(_impl_.pagination_){nullptr}
  };
}

QueryAllowancesResponse::~QueryAllowancesResponse() {
  // @@protoc_insertion_point(destructor:cosmos.feegrant.v1beta1.QueryAllowancesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryAllowancesResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_allowances()->~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.pagination_;
}

void QueryAllowancesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryAllowancesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.feegrant.v1beta1.QueryAllowancesResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_allowances()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryAllowancesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .cosmos.feegrant.v1beta1.Grant allowances = 1 [json_name = "allowances"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_allowances(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagination(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryAllowancesResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.feegrant.v1beta1.QueryAllowancesResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cosmos.feegrant.v1beta1.Grant allowances = 1 [json_name = "allowances"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_allowances_size()); i < n; i++) {
    const auto& repfield = this->_internal_allowances(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.feegrant.v1beta1.QueryAllowancesResponse)
  return target;
}

::size_t QueryAllowancesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.feegrant.v1beta1.QueryAllowancesResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cosmos.feegrant.v1beta1.Grant allowances = 1 [json_name = "allowances"];
  total_size += 1UL * this->_internal_allowances_size();
  for (const auto& msg : this->_internal_allowances()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryAllowancesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryAllowancesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryAllowancesResponse::GetClassData() const { return &_class_data_; }


void QueryAllowancesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryAllowancesResponse*>(&to_msg);
  auto& from = static_cast<const QueryAllowancesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.feegrant.v1beta1.QueryAllowancesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_allowances()->MergeFrom(from._internal_allowances());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::cosmos::base::query::v1beta1::PageResponse::MergeFrom(
        from._internal_pagination());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryAllowancesResponse::CopyFrom(const QueryAllowancesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.feegrant.v1beta1.QueryAllowancesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryAllowancesResponse::IsInitialized() const {
  return true;
}

void QueryAllowancesResponse::InternalSwap(QueryAllowancesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _internal_mutable_allowances()->InternalSwap(other->_internal_mutable_allowances());
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryAllowancesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2ffeegrant_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2ffeegrant_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2ffeegrant_2fv1beta1_2fquery_2eproto[3]);
}
// ===================================================================

class QueryAllowancesByGranterRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryAllowancesByGranterRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryAllowancesByGranterRequest, _impl_._has_bits_);
  static const ::cosmos::base::query::v1beta1::PageRequest& pagination(const QueryAllowancesByGranterRequest* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::query::v1beta1::PageRequest&
QueryAllowancesByGranterRequest::_Internal::pagination(const QueryAllowancesByGranterRequest* msg) {
  return *msg->_impl_.pagination_;
}
void QueryAllowancesByGranterRequest::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryAllowancesByGranterRequest::QueryAllowancesByGranterRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.feegrant.v1beta1.QueryAllowancesByGranterRequest)
}
QueryAllowancesByGranterRequest::QueryAllowancesByGranterRequest(const QueryAllowancesByGranterRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryAllowancesByGranterRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.granter_) {}

    , decltype(_impl_.pagination_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.granter_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.granter_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_granter().empty()) {
    _this->_impl_.granter_.Set(from._internal_granter(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::cosmos::base::query::v1beta1::PageRequest(*from._impl_.pagination_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.feegrant.v1beta1.QueryAllowancesByGranterRequest)
}

inline void QueryAllowancesByGranterRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.granter_) {}

    , decltype(_impl_.pagination_){nullptr}
  };
  _impl_.granter_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.granter_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryAllowancesByGranterRequest::~QueryAllowancesByGranterRequest() {
  // @@protoc_insertion_point(destructor:cosmos.feegrant.v1beta1.QueryAllowancesByGranterRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryAllowancesByGranterRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.granter_.Destroy();
  if (this != internal_default_instance()) delete _impl_.pagination_;
}

void QueryAllowancesByGranterRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryAllowancesByGranterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.feegrant.v1beta1.QueryAllowancesByGranterRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.granter_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryAllowancesByGranterRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string granter = 1 [json_name = "granter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_granter();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.feegrant.v1beta1.QueryAllowancesByGranterRequest.granter"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagination(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryAllowancesByGranterRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.feegrant.v1beta1.QueryAllowancesByGranterRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string granter = 1 [json_name = "granter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_granter().empty()) {
    const std::string& _s = this->_internal_granter();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.feegrant.v1beta1.QueryAllowancesByGranterRequest.granter");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.feegrant.v1beta1.QueryAllowancesByGranterRequest)
  return target;
}

::size_t QueryAllowancesByGranterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.feegrant.v1beta1.QueryAllowancesByGranterRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string granter = 1 [json_name = "granter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_granter().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_granter());
  }

  // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryAllowancesByGranterRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryAllowancesByGranterRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryAllowancesByGranterRequest::GetClassData() const { return &_class_data_; }


void QueryAllowancesByGranterRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryAllowancesByGranterRequest*>(&to_msg);
  auto& from = static_cast<const QueryAllowancesByGranterRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.feegrant.v1beta1.QueryAllowancesByGranterRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_granter().empty()) {
    _this->_internal_set_granter(from._internal_granter());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::cosmos::base::query::v1beta1::PageRequest::MergeFrom(
        from._internal_pagination());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryAllowancesByGranterRequest::CopyFrom(const QueryAllowancesByGranterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.feegrant.v1beta1.QueryAllowancesByGranterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryAllowancesByGranterRequest::IsInitialized() const {
  return true;
}

void QueryAllowancesByGranterRequest::InternalSwap(QueryAllowancesByGranterRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.granter_, lhs_arena,
                                       &other->_impl_.granter_, rhs_arena);
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryAllowancesByGranterRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2ffeegrant_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2ffeegrant_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2ffeegrant_2fv1beta1_2fquery_2eproto[4]);
}
// ===================================================================

class QueryAllowancesByGranterResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryAllowancesByGranterResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryAllowancesByGranterResponse, _impl_._has_bits_);
  static const ::cosmos::base::query::v1beta1::PageResponse& pagination(const QueryAllowancesByGranterResponse* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::query::v1beta1::PageResponse&
QueryAllowancesByGranterResponse::_Internal::pagination(const QueryAllowancesByGranterResponse* msg) {
  return *msg->_impl_.pagination_;
}
void QueryAllowancesByGranterResponse::clear_allowances() {
  _internal_mutable_allowances()->Clear();
}
void QueryAllowancesByGranterResponse::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryAllowancesByGranterResponse::QueryAllowancesByGranterResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.feegrant.v1beta1.QueryAllowancesByGranterResponse)
}
QueryAllowancesByGranterResponse::QueryAllowancesByGranterResponse(const QueryAllowancesByGranterResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryAllowancesByGranterResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.allowances_){from._impl_.allowances_}
    , decltype(_impl_.pagination_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::cosmos::base::query::v1beta1::PageResponse(*from._impl_.pagination_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.feegrant.v1beta1.QueryAllowancesByGranterResponse)
}

inline void QueryAllowancesByGranterResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.allowances_){arena}
    , decltype(_impl_.pagination_){nullptr}
  };
}

QueryAllowancesByGranterResponse::~QueryAllowancesByGranterResponse() {
  // @@protoc_insertion_point(destructor:cosmos.feegrant.v1beta1.QueryAllowancesByGranterResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryAllowancesByGranterResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_allowances()->~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.pagination_;
}

void QueryAllowancesByGranterResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryAllowancesByGranterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.feegrant.v1beta1.QueryAllowancesByGranterResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_allowances()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryAllowancesByGranterResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .cosmos.feegrant.v1beta1.Grant allowances = 1 [json_name = "allowances"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_allowances(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagination(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryAllowancesByGranterResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.feegrant.v1beta1.QueryAllowancesByGranterResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cosmos.feegrant.v1beta1.Grant allowances = 1 [json_name = "allowances"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_allowances_size()); i < n; i++) {
    const auto& repfield = this->_internal_allowances(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.feegrant.v1beta1.QueryAllowancesByGranterResponse)
  return target;
}

::size_t QueryAllowancesByGranterResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.feegrant.v1beta1.QueryAllowancesByGranterResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cosmos.feegrant.v1beta1.Grant allowances = 1 [json_name = "allowances"];
  total_size += 1UL * this->_internal_allowances_size();
  for (const auto& msg : this->_internal_allowances()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryAllowancesByGranterResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryAllowancesByGranterResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryAllowancesByGranterResponse::GetClassData() const { return &_class_data_; }


void QueryAllowancesByGranterResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryAllowancesByGranterResponse*>(&to_msg);
  auto& from = static_cast<const QueryAllowancesByGranterResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.feegrant.v1beta1.QueryAllowancesByGranterResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_allowances()->MergeFrom(from._internal_allowances());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::cosmos::base::query::v1beta1::PageResponse::MergeFrom(
        from._internal_pagination());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryAllowancesByGranterResponse::CopyFrom(const QueryAllowancesByGranterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.feegrant.v1beta1.QueryAllowancesByGranterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryAllowancesByGranterResponse::IsInitialized() const {
  return true;
}

void QueryAllowancesByGranterResponse::InternalSwap(QueryAllowancesByGranterResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _internal_mutable_allowances()->InternalSwap(other->_internal_mutable_allowances());
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryAllowancesByGranterResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2ffeegrant_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2ffeegrant_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2ffeegrant_2fv1beta1_2fquery_2eproto[5]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace feegrant
}  // namespace cosmos
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::cosmos::feegrant::v1beta1::QueryAllowanceRequest*
Arena::CreateMaybeMessage< ::cosmos::feegrant::v1beta1::QueryAllowanceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::feegrant::v1beta1::QueryAllowanceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::feegrant::v1beta1::QueryAllowanceResponse*
Arena::CreateMaybeMessage< ::cosmos::feegrant::v1beta1::QueryAllowanceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::feegrant::v1beta1::QueryAllowanceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::feegrant::v1beta1::QueryAllowancesRequest*
Arena::CreateMaybeMessage< ::cosmos::feegrant::v1beta1::QueryAllowancesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::feegrant::v1beta1::QueryAllowancesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::feegrant::v1beta1::QueryAllowancesResponse*
Arena::CreateMaybeMessage< ::cosmos::feegrant::v1beta1::QueryAllowancesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::feegrant::v1beta1::QueryAllowancesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::feegrant::v1beta1::QueryAllowancesByGranterRequest*
Arena::CreateMaybeMessage< ::cosmos::feegrant::v1beta1::QueryAllowancesByGranterRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::feegrant::v1beta1::QueryAllowancesByGranterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::feegrant::v1beta1::QueryAllowancesByGranterResponse*
Arena::CreateMaybeMessage< ::cosmos::feegrant::v1beta1::QueryAllowancesByGranterResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::feegrant::v1beta1::QueryAllowancesByGranterResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
