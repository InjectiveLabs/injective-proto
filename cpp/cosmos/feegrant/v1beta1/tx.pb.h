// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/feegrant/v1beta1/tx.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_cosmos_2ffeegrant_2fv1beta1_2ftx_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_cosmos_2ffeegrant_2fv1beta1_2ftx_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4023000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4023004 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/any.pb.h"
#include "cosmos_proto/cosmos.pb.h"
#include "cosmos/msg/v1/msg.pb.h"
#include "amino/amino.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cosmos_2ffeegrant_2fv1beta1_2ftx_2eproto

PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_cosmos_2ffeegrant_2fv1beta1_2ftx_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable
    descriptor_table_cosmos_2ffeegrant_2fv1beta1_2ftx_2eproto;
namespace cosmos {
namespace feegrant {
namespace v1beta1 {
class MsgGrantAllowance;
struct MsgGrantAllowanceDefaultTypeInternal;
extern MsgGrantAllowanceDefaultTypeInternal _MsgGrantAllowance_default_instance_;
class MsgGrantAllowanceResponse;
struct MsgGrantAllowanceResponseDefaultTypeInternal;
extern MsgGrantAllowanceResponseDefaultTypeInternal _MsgGrantAllowanceResponse_default_instance_;
class MsgRevokeAllowance;
struct MsgRevokeAllowanceDefaultTypeInternal;
extern MsgRevokeAllowanceDefaultTypeInternal _MsgRevokeAllowance_default_instance_;
class MsgRevokeAllowanceResponse;
struct MsgRevokeAllowanceResponseDefaultTypeInternal;
extern MsgRevokeAllowanceResponseDefaultTypeInternal _MsgRevokeAllowanceResponse_default_instance_;
}  // namespace v1beta1
}  // namespace feegrant
}  // namespace cosmos
PROTOBUF_NAMESPACE_OPEN
template <>
::cosmos::feegrant::v1beta1::MsgGrantAllowance* Arena::CreateMaybeMessage<::cosmos::feegrant::v1beta1::MsgGrantAllowance>(Arena*);
template <>
::cosmos::feegrant::v1beta1::MsgGrantAllowanceResponse* Arena::CreateMaybeMessage<::cosmos::feegrant::v1beta1::MsgGrantAllowanceResponse>(Arena*);
template <>
::cosmos::feegrant::v1beta1::MsgRevokeAllowance* Arena::CreateMaybeMessage<::cosmos::feegrant::v1beta1::MsgRevokeAllowance>(Arena*);
template <>
::cosmos::feegrant::v1beta1::MsgRevokeAllowanceResponse* Arena::CreateMaybeMessage<::cosmos::feegrant::v1beta1::MsgRevokeAllowanceResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

namespace cosmos {
namespace feegrant {
namespace v1beta1 {

// ===================================================================


// -------------------------------------------------------------------

class MsgGrantAllowance final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.feegrant.v1beta1.MsgGrantAllowance) */ {
 public:
  inline MsgGrantAllowance() : MsgGrantAllowance(nullptr) {}
  ~MsgGrantAllowance() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgGrantAllowance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgGrantAllowance(const MsgGrantAllowance& from);
  MsgGrantAllowance(MsgGrantAllowance&& from) noexcept
    : MsgGrantAllowance() {
    *this = ::std::move(from);
  }

  inline MsgGrantAllowance& operator=(const MsgGrantAllowance& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgGrantAllowance& operator=(MsgGrantAllowance&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgGrantAllowance& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgGrantAllowance* internal_default_instance() {
    return reinterpret_cast<const MsgGrantAllowance*>(
               &_MsgGrantAllowance_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MsgGrantAllowance& a, MsgGrantAllowance& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgGrantAllowance* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgGrantAllowance* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgGrantAllowance* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgGrantAllowance>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgGrantAllowance& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgGrantAllowance& from) {
    MsgGrantAllowance::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgGrantAllowance* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.feegrant.v1beta1.MsgGrantAllowance";
  }
  protected:
  explicit MsgGrantAllowance(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGranterFieldNumber = 1,
    kGranteeFieldNumber = 2,
    kAllowanceFieldNumber = 3,
  };
  // string granter = 1 [json_name = "granter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_granter() ;
  const std::string& granter() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_granter(Arg_&& arg, Args_... args);
  std::string* mutable_granter();
  PROTOBUF_NODISCARD std::string* release_granter();
  void set_allocated_granter(std::string* ptr);

  private:
  const std::string& _internal_granter() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_granter(
      const std::string& value);
  std::string* _internal_mutable_granter();

  public:
  // string grantee = 2 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_grantee() ;
  const std::string& grantee() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_grantee(Arg_&& arg, Args_... args);
  std::string* mutable_grantee();
  PROTOBUF_NODISCARD std::string* release_grantee();
  void set_allocated_grantee(std::string* ptr);

  private:
  const std::string& _internal_grantee() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_grantee(
      const std::string& value);
  std::string* _internal_mutable_grantee();

  public:
  // .google.protobuf.Any allowance = 3 [json_name = "allowance", (.cosmos_proto.accepts_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI"];
  bool has_allowance() const;
  void clear_allowance() ;
  const ::PROTOBUF_NAMESPACE_ID::Any& allowance() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Any* release_allowance();
  ::PROTOBUF_NAMESPACE_ID::Any* mutable_allowance();
  void set_allocated_allowance(::PROTOBUF_NAMESPACE_ID::Any* allowance);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Any& _internal_allowance() const;
  ::PROTOBUF_NAMESPACE_ID::Any* _internal_mutable_allowance();
  public:
  void unsafe_arena_set_allocated_allowance(
      ::PROTOBUF_NAMESPACE_ID::Any* allowance);
  ::PROTOBUF_NAMESPACE_ID::Any* unsafe_arena_release_allowance();
  // @@protoc_insertion_point(class_scope:cosmos.feegrant.v1beta1.MsgGrantAllowance)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr granter_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr grantee_;
    ::PROTOBUF_NAMESPACE_ID::Any* allowance_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2ffeegrant_2fv1beta1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgGrantAllowanceResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:cosmos.feegrant.v1beta1.MsgGrantAllowanceResponse) */ {
 public:
  inline MsgGrantAllowanceResponse() : MsgGrantAllowanceResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgGrantAllowanceResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgGrantAllowanceResponse(const MsgGrantAllowanceResponse& from);
  MsgGrantAllowanceResponse(MsgGrantAllowanceResponse&& from) noexcept
    : MsgGrantAllowanceResponse() {
    *this = ::std::move(from);
  }

  inline MsgGrantAllowanceResponse& operator=(const MsgGrantAllowanceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgGrantAllowanceResponse& operator=(MsgGrantAllowanceResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgGrantAllowanceResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgGrantAllowanceResponse* internal_default_instance() {
    return reinterpret_cast<const MsgGrantAllowanceResponse*>(
               &_MsgGrantAllowanceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(MsgGrantAllowanceResponse& a, MsgGrantAllowanceResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgGrantAllowanceResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgGrantAllowanceResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgGrantAllowanceResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgGrantAllowanceResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgGrantAllowanceResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgGrantAllowanceResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.feegrant.v1beta1.MsgGrantAllowanceResponse";
  }
  protected:
  explicit MsgGrantAllowanceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:cosmos.feegrant.v1beta1.MsgGrantAllowanceResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_cosmos_2ffeegrant_2fv1beta1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgRevokeAllowance final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.feegrant.v1beta1.MsgRevokeAllowance) */ {
 public:
  inline MsgRevokeAllowance() : MsgRevokeAllowance(nullptr) {}
  ~MsgRevokeAllowance() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgRevokeAllowance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgRevokeAllowance(const MsgRevokeAllowance& from);
  MsgRevokeAllowance(MsgRevokeAllowance&& from) noexcept
    : MsgRevokeAllowance() {
    *this = ::std::move(from);
  }

  inline MsgRevokeAllowance& operator=(const MsgRevokeAllowance& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgRevokeAllowance& operator=(MsgRevokeAllowance&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgRevokeAllowance& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgRevokeAllowance* internal_default_instance() {
    return reinterpret_cast<const MsgRevokeAllowance*>(
               &_MsgRevokeAllowance_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(MsgRevokeAllowance& a, MsgRevokeAllowance& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgRevokeAllowance* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgRevokeAllowance* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgRevokeAllowance* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgRevokeAllowance>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgRevokeAllowance& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgRevokeAllowance& from) {
    MsgRevokeAllowance::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgRevokeAllowance* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.feegrant.v1beta1.MsgRevokeAllowance";
  }
  protected:
  explicit MsgRevokeAllowance(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGranterFieldNumber = 1,
    kGranteeFieldNumber = 2,
  };
  // string granter = 1 [json_name = "granter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_granter() ;
  const std::string& granter() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_granter(Arg_&& arg, Args_... args);
  std::string* mutable_granter();
  PROTOBUF_NODISCARD std::string* release_granter();
  void set_allocated_granter(std::string* ptr);

  private:
  const std::string& _internal_granter() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_granter(
      const std::string& value);
  std::string* _internal_mutable_granter();

  public:
  // string grantee = 2 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_grantee() ;
  const std::string& grantee() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_grantee(Arg_&& arg, Args_... args);
  std::string* mutable_grantee();
  PROTOBUF_NODISCARD std::string* release_grantee();
  void set_allocated_grantee(std::string* ptr);

  private:
  const std::string& _internal_grantee() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_grantee(
      const std::string& value);
  std::string* _internal_mutable_grantee();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.feegrant.v1beta1.MsgRevokeAllowance)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr granter_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr grantee_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2ffeegrant_2fv1beta1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgRevokeAllowanceResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:cosmos.feegrant.v1beta1.MsgRevokeAllowanceResponse) */ {
 public:
  inline MsgRevokeAllowanceResponse() : MsgRevokeAllowanceResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgRevokeAllowanceResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgRevokeAllowanceResponse(const MsgRevokeAllowanceResponse& from);
  MsgRevokeAllowanceResponse(MsgRevokeAllowanceResponse&& from) noexcept
    : MsgRevokeAllowanceResponse() {
    *this = ::std::move(from);
  }

  inline MsgRevokeAllowanceResponse& operator=(const MsgRevokeAllowanceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgRevokeAllowanceResponse& operator=(MsgRevokeAllowanceResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgRevokeAllowanceResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgRevokeAllowanceResponse* internal_default_instance() {
    return reinterpret_cast<const MsgRevokeAllowanceResponse*>(
               &_MsgRevokeAllowanceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(MsgRevokeAllowanceResponse& a, MsgRevokeAllowanceResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgRevokeAllowanceResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgRevokeAllowanceResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgRevokeAllowanceResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgRevokeAllowanceResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgRevokeAllowanceResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgRevokeAllowanceResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.feegrant.v1beta1.MsgRevokeAllowanceResponse";
  }
  protected:
  explicit MsgRevokeAllowanceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:cosmos.feegrant.v1beta1.MsgRevokeAllowanceResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_cosmos_2ffeegrant_2fv1beta1_2ftx_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// MsgGrantAllowance

// string granter = 1 [json_name = "granter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgGrantAllowance::clear_granter() {
  _impl_.granter_.ClearToEmpty();
}
inline const std::string& MsgGrantAllowance::granter() const {
  // @@protoc_insertion_point(field_get:cosmos.feegrant.v1beta1.MsgGrantAllowance.granter)
  return _internal_granter();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgGrantAllowance::set_granter(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.granter_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmos.feegrant.v1beta1.MsgGrantAllowance.granter)
}
inline std::string* MsgGrantAllowance::mutable_granter() {
  std::string* _s = _internal_mutable_granter();
  // @@protoc_insertion_point(field_mutable:cosmos.feegrant.v1beta1.MsgGrantAllowance.granter)
  return _s;
}
inline const std::string& MsgGrantAllowance::_internal_granter() const {
  return _impl_.granter_.Get();
}
inline void MsgGrantAllowance::_internal_set_granter(const std::string& value) {
  ;


  _impl_.granter_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgGrantAllowance::_internal_mutable_granter() {
  ;
  return _impl_.granter_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgGrantAllowance::release_granter() {
  // @@protoc_insertion_point(field_release:cosmos.feegrant.v1beta1.MsgGrantAllowance.granter)
  return _impl_.granter_.Release();
}
inline void MsgGrantAllowance::set_allocated_granter(std::string* value) {
  _impl_.granter_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.granter_.IsDefault()) {
          _impl_.granter_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmos.feegrant.v1beta1.MsgGrantAllowance.granter)
}

// string grantee = 2 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgGrantAllowance::clear_grantee() {
  _impl_.grantee_.ClearToEmpty();
}
inline const std::string& MsgGrantAllowance::grantee() const {
  // @@protoc_insertion_point(field_get:cosmos.feegrant.v1beta1.MsgGrantAllowance.grantee)
  return _internal_grantee();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgGrantAllowance::set_grantee(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.grantee_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmos.feegrant.v1beta1.MsgGrantAllowance.grantee)
}
inline std::string* MsgGrantAllowance::mutable_grantee() {
  std::string* _s = _internal_mutable_grantee();
  // @@protoc_insertion_point(field_mutable:cosmos.feegrant.v1beta1.MsgGrantAllowance.grantee)
  return _s;
}
inline const std::string& MsgGrantAllowance::_internal_grantee() const {
  return _impl_.grantee_.Get();
}
inline void MsgGrantAllowance::_internal_set_grantee(const std::string& value) {
  ;


  _impl_.grantee_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgGrantAllowance::_internal_mutable_grantee() {
  ;
  return _impl_.grantee_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgGrantAllowance::release_grantee() {
  // @@protoc_insertion_point(field_release:cosmos.feegrant.v1beta1.MsgGrantAllowance.grantee)
  return _impl_.grantee_.Release();
}
inline void MsgGrantAllowance::set_allocated_grantee(std::string* value) {
  _impl_.grantee_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.grantee_.IsDefault()) {
          _impl_.grantee_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmos.feegrant.v1beta1.MsgGrantAllowance.grantee)
}

// .google.protobuf.Any allowance = 3 [json_name = "allowance", (.cosmos_proto.accepts_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI"];
inline bool MsgGrantAllowance::has_allowance() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.allowance_ != nullptr);
  return value;
}
inline const ::PROTOBUF_NAMESPACE_ID::Any& MsgGrantAllowance::_internal_allowance() const {
  const ::PROTOBUF_NAMESPACE_ID::Any* p = _impl_.allowance_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Any&>(
      ::PROTOBUF_NAMESPACE_ID::_Any_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Any& MsgGrantAllowance::allowance() const {
  // @@protoc_insertion_point(field_get:cosmos.feegrant.v1beta1.MsgGrantAllowance.allowance)
  return _internal_allowance();
}
inline void MsgGrantAllowance::unsafe_arena_set_allocated_allowance(
    ::PROTOBUF_NAMESPACE_ID::Any* allowance) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.allowance_);
  }
  _impl_.allowance_ = allowance;
  if (allowance) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.feegrant.v1beta1.MsgGrantAllowance.allowance)
}
inline ::PROTOBUF_NAMESPACE_ID::Any* MsgGrantAllowance::release_allowance() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::PROTOBUF_NAMESPACE_ID::Any* temp = _impl_.allowance_;
  _impl_.allowance_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Any* MsgGrantAllowance::unsafe_arena_release_allowance() {
  // @@protoc_insertion_point(field_release:cosmos.feegrant.v1beta1.MsgGrantAllowance.allowance)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::PROTOBUF_NAMESPACE_ID::Any* temp = _impl_.allowance_;
  _impl_.allowance_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Any* MsgGrantAllowance::_internal_mutable_allowance() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.allowance_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Any>(GetArenaForAllocation());
    _impl_.allowance_ = p;
  }
  return _impl_.allowance_;
}
inline ::PROTOBUF_NAMESPACE_ID::Any* MsgGrantAllowance::mutable_allowance() {
  ::PROTOBUF_NAMESPACE_ID::Any* _msg = _internal_mutable_allowance();
  // @@protoc_insertion_point(field_mutable:cosmos.feegrant.v1beta1.MsgGrantAllowance.allowance)
  return _msg;
}
inline void MsgGrantAllowance::set_allocated_allowance(::PROTOBUF_NAMESPACE_ID::Any* allowance) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.allowance_);
  }
  if (allowance) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(allowance));
    if (message_arena != submessage_arena) {
      allowance = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, allowance, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.allowance_ = allowance;
  // @@protoc_insertion_point(field_set_allocated:cosmos.feegrant.v1beta1.MsgGrantAllowance.allowance)
}

// -------------------------------------------------------------------

// MsgGrantAllowanceResponse

// -------------------------------------------------------------------

// MsgRevokeAllowance

// string granter = 1 [json_name = "granter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgRevokeAllowance::clear_granter() {
  _impl_.granter_.ClearToEmpty();
}
inline const std::string& MsgRevokeAllowance::granter() const {
  // @@protoc_insertion_point(field_get:cosmos.feegrant.v1beta1.MsgRevokeAllowance.granter)
  return _internal_granter();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgRevokeAllowance::set_granter(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.granter_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmos.feegrant.v1beta1.MsgRevokeAllowance.granter)
}
inline std::string* MsgRevokeAllowance::mutable_granter() {
  std::string* _s = _internal_mutable_granter();
  // @@protoc_insertion_point(field_mutable:cosmos.feegrant.v1beta1.MsgRevokeAllowance.granter)
  return _s;
}
inline const std::string& MsgRevokeAllowance::_internal_granter() const {
  return _impl_.granter_.Get();
}
inline void MsgRevokeAllowance::_internal_set_granter(const std::string& value) {
  ;


  _impl_.granter_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgRevokeAllowance::_internal_mutable_granter() {
  ;
  return _impl_.granter_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgRevokeAllowance::release_granter() {
  // @@protoc_insertion_point(field_release:cosmos.feegrant.v1beta1.MsgRevokeAllowance.granter)
  return _impl_.granter_.Release();
}
inline void MsgRevokeAllowance::set_allocated_granter(std::string* value) {
  _impl_.granter_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.granter_.IsDefault()) {
          _impl_.granter_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmos.feegrant.v1beta1.MsgRevokeAllowance.granter)
}

// string grantee = 2 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgRevokeAllowance::clear_grantee() {
  _impl_.grantee_.ClearToEmpty();
}
inline const std::string& MsgRevokeAllowance::grantee() const {
  // @@protoc_insertion_point(field_get:cosmos.feegrant.v1beta1.MsgRevokeAllowance.grantee)
  return _internal_grantee();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgRevokeAllowance::set_grantee(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.grantee_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmos.feegrant.v1beta1.MsgRevokeAllowance.grantee)
}
inline std::string* MsgRevokeAllowance::mutable_grantee() {
  std::string* _s = _internal_mutable_grantee();
  // @@protoc_insertion_point(field_mutable:cosmos.feegrant.v1beta1.MsgRevokeAllowance.grantee)
  return _s;
}
inline const std::string& MsgRevokeAllowance::_internal_grantee() const {
  return _impl_.grantee_.Get();
}
inline void MsgRevokeAllowance::_internal_set_grantee(const std::string& value) {
  ;


  _impl_.grantee_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgRevokeAllowance::_internal_mutable_grantee() {
  ;
  return _impl_.grantee_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgRevokeAllowance::release_grantee() {
  // @@protoc_insertion_point(field_release:cosmos.feegrant.v1beta1.MsgRevokeAllowance.grantee)
  return _impl_.grantee_.Release();
}
inline void MsgRevokeAllowance::set_allocated_grantee(std::string* value) {
  _impl_.grantee_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.grantee_.IsDefault()) {
          _impl_.grantee_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmos.feegrant.v1beta1.MsgRevokeAllowance.grantee)
}

// -------------------------------------------------------------------

// MsgRevokeAllowanceResponse

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace feegrant
}  // namespace cosmos


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_cosmos_2ffeegrant_2fv1beta1_2ftx_2eproto_2epb_2eh
