// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/bank/v1beta1/tx.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_cosmos_2fbank_2fv1beta1_2ftx_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_cosmos_2fbank_2fv1beta1_2ftx_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4023000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4023004 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "gogoproto/gogo.pb.h"
#include "cosmos/base/v1beta1/coin.pb.h"
#include "cosmos/bank/v1beta1/bank.pb.h"
#include "cosmos_proto/cosmos.pb.h"
#include "cosmos/msg/v1/msg.pb.h"
#include "amino/amino.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cosmos_2fbank_2fv1beta1_2ftx_2eproto

PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_cosmos_2fbank_2fv1beta1_2ftx_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable
    descriptor_table_cosmos_2fbank_2fv1beta1_2ftx_2eproto;
namespace cosmos {
namespace bank {
namespace v1beta1 {
class MsgMultiSend;
struct MsgMultiSendDefaultTypeInternal;
extern MsgMultiSendDefaultTypeInternal _MsgMultiSend_default_instance_;
class MsgMultiSendResponse;
struct MsgMultiSendResponseDefaultTypeInternal;
extern MsgMultiSendResponseDefaultTypeInternal _MsgMultiSendResponse_default_instance_;
class MsgSend;
struct MsgSendDefaultTypeInternal;
extern MsgSendDefaultTypeInternal _MsgSend_default_instance_;
class MsgSendResponse;
struct MsgSendResponseDefaultTypeInternal;
extern MsgSendResponseDefaultTypeInternal _MsgSendResponse_default_instance_;
class MsgSetSendEnabled;
struct MsgSetSendEnabledDefaultTypeInternal;
extern MsgSetSendEnabledDefaultTypeInternal _MsgSetSendEnabled_default_instance_;
class MsgSetSendEnabledResponse;
struct MsgSetSendEnabledResponseDefaultTypeInternal;
extern MsgSetSendEnabledResponseDefaultTypeInternal _MsgSetSendEnabledResponse_default_instance_;
class MsgUpdateParams;
struct MsgUpdateParamsDefaultTypeInternal;
extern MsgUpdateParamsDefaultTypeInternal _MsgUpdateParams_default_instance_;
class MsgUpdateParamsResponse;
struct MsgUpdateParamsResponseDefaultTypeInternal;
extern MsgUpdateParamsResponseDefaultTypeInternal _MsgUpdateParamsResponse_default_instance_;
}  // namespace v1beta1
}  // namespace bank
}  // namespace cosmos
PROTOBUF_NAMESPACE_OPEN
template <>
::cosmos::bank::v1beta1::MsgMultiSend* Arena::CreateMaybeMessage<::cosmos::bank::v1beta1::MsgMultiSend>(Arena*);
template <>
::cosmos::bank::v1beta1::MsgMultiSendResponse* Arena::CreateMaybeMessage<::cosmos::bank::v1beta1::MsgMultiSendResponse>(Arena*);
template <>
::cosmos::bank::v1beta1::MsgSend* Arena::CreateMaybeMessage<::cosmos::bank::v1beta1::MsgSend>(Arena*);
template <>
::cosmos::bank::v1beta1::MsgSendResponse* Arena::CreateMaybeMessage<::cosmos::bank::v1beta1::MsgSendResponse>(Arena*);
template <>
::cosmos::bank::v1beta1::MsgSetSendEnabled* Arena::CreateMaybeMessage<::cosmos::bank::v1beta1::MsgSetSendEnabled>(Arena*);
template <>
::cosmos::bank::v1beta1::MsgSetSendEnabledResponse* Arena::CreateMaybeMessage<::cosmos::bank::v1beta1::MsgSetSendEnabledResponse>(Arena*);
template <>
::cosmos::bank::v1beta1::MsgUpdateParams* Arena::CreateMaybeMessage<::cosmos::bank::v1beta1::MsgUpdateParams>(Arena*);
template <>
::cosmos::bank::v1beta1::MsgUpdateParamsResponse* Arena::CreateMaybeMessage<::cosmos::bank::v1beta1::MsgUpdateParamsResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

namespace cosmos {
namespace bank {
namespace v1beta1 {

// ===================================================================


// -------------------------------------------------------------------

class MsgSend final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.bank.v1beta1.MsgSend) */ {
 public:
  inline MsgSend() : MsgSend(nullptr) {}
  ~MsgSend() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgSend(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgSend(const MsgSend& from);
  MsgSend(MsgSend&& from) noexcept
    : MsgSend() {
    *this = ::std::move(from);
  }

  inline MsgSend& operator=(const MsgSend& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgSend& operator=(MsgSend&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgSend& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgSend* internal_default_instance() {
    return reinterpret_cast<const MsgSend*>(
               &_MsgSend_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MsgSend& a, MsgSend& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgSend* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgSend* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgSend* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgSend>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgSend& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgSend& from) {
    MsgSend::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSend* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.bank.v1beta1.MsgSend";
  }
  protected:
  explicit MsgSend(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAmountFieldNumber = 3,
    kFromAddressFieldNumber = 1,
    kToAddressFieldNumber = 2,
  };
  // repeated .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];
  int amount_size() const;
  private:
  int _internal_amount_size() const;

  public:
  void clear_amount() ;
  ::cosmos::base::v1beta1::Coin* mutable_amount(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin >*
      mutable_amount();
  private:
  const ::cosmos::base::v1beta1::Coin& _internal_amount(int index) const;
  ::cosmos::base::v1beta1::Coin* _internal_add_amount();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::Coin>& _internal_amount() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::Coin>* _internal_mutable_amount();
  public:
  const ::cosmos::base::v1beta1::Coin& amount(int index) const;
  ::cosmos::base::v1beta1::Coin* add_amount();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin >&
      amount() const;
  // string from_address = 1 [json_name = "fromAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_from_address() ;
  const std::string& from_address() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_from_address(Arg_&& arg, Args_... args);
  std::string* mutable_from_address();
  PROTOBUF_NODISCARD std::string* release_from_address();
  void set_allocated_from_address(std::string* ptr);

  private:
  const std::string& _internal_from_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_from_address(
      const std::string& value);
  std::string* _internal_mutable_from_address();

  public:
  // string to_address = 2 [json_name = "toAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_to_address() ;
  const std::string& to_address() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_to_address(Arg_&& arg, Args_... args);
  std::string* mutable_to_address();
  PROTOBUF_NODISCARD std::string* release_to_address();
  void set_allocated_to_address(std::string* ptr);

  private:
  const std::string& _internal_to_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_to_address(
      const std::string& value);
  std::string* _internal_mutable_to_address();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.bank.v1beta1.MsgSend)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin > amount_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr from_address_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr to_address_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fbank_2fv1beta1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgSendResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:cosmos.bank.v1beta1.MsgSendResponse) */ {
 public:
  inline MsgSendResponse() : MsgSendResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgSendResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgSendResponse(const MsgSendResponse& from);
  MsgSendResponse(MsgSendResponse&& from) noexcept
    : MsgSendResponse() {
    *this = ::std::move(from);
  }

  inline MsgSendResponse& operator=(const MsgSendResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgSendResponse& operator=(MsgSendResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgSendResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgSendResponse* internal_default_instance() {
    return reinterpret_cast<const MsgSendResponse*>(
               &_MsgSendResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(MsgSendResponse& a, MsgSendResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgSendResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgSendResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgSendResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgSendResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgSendResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgSendResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.bank.v1beta1.MsgSendResponse";
  }
  protected:
  explicit MsgSendResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:cosmos.bank.v1beta1.MsgSendResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_cosmos_2fbank_2fv1beta1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgMultiSend final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.bank.v1beta1.MsgMultiSend) */ {
 public:
  inline MsgMultiSend() : MsgMultiSend(nullptr) {}
  ~MsgMultiSend() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgMultiSend(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgMultiSend(const MsgMultiSend& from);
  MsgMultiSend(MsgMultiSend&& from) noexcept
    : MsgMultiSend() {
    *this = ::std::move(from);
  }

  inline MsgMultiSend& operator=(const MsgMultiSend& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgMultiSend& operator=(MsgMultiSend&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgMultiSend& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgMultiSend* internal_default_instance() {
    return reinterpret_cast<const MsgMultiSend*>(
               &_MsgMultiSend_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(MsgMultiSend& a, MsgMultiSend& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgMultiSend* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgMultiSend* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgMultiSend* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgMultiSend>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgMultiSend& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgMultiSend& from) {
    MsgMultiSend::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgMultiSend* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.bank.v1beta1.MsgMultiSend";
  }
  protected:
  explicit MsgMultiSend(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInputsFieldNumber = 1,
    kOutputsFieldNumber = 2,
  };
  // repeated .cosmos.bank.v1beta1.Input inputs = 1 [json_name = "inputs", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  int inputs_size() const;
  private:
  int _internal_inputs_size() const;

  public:
  void clear_inputs() ;
  ::cosmos::bank::v1beta1::Input* mutable_inputs(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::bank::v1beta1::Input >*
      mutable_inputs();
  private:
  const ::cosmos::bank::v1beta1::Input& _internal_inputs(int index) const;
  ::cosmos::bank::v1beta1::Input* _internal_add_inputs();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::bank::v1beta1::Input>& _internal_inputs() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::bank::v1beta1::Input>* _internal_mutable_inputs();
  public:
  const ::cosmos::bank::v1beta1::Input& inputs(int index) const;
  ::cosmos::bank::v1beta1::Input* add_inputs();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::bank::v1beta1::Input >&
      inputs() const;
  // repeated .cosmos.bank.v1beta1.Output outputs = 2 [json_name = "outputs", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  int outputs_size() const;
  private:
  int _internal_outputs_size() const;

  public:
  void clear_outputs() ;
  ::cosmos::bank::v1beta1::Output* mutable_outputs(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::bank::v1beta1::Output >*
      mutable_outputs();
  private:
  const ::cosmos::bank::v1beta1::Output& _internal_outputs(int index) const;
  ::cosmos::bank::v1beta1::Output* _internal_add_outputs();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::bank::v1beta1::Output>& _internal_outputs() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::bank::v1beta1::Output>* _internal_mutable_outputs();
  public:
  const ::cosmos::bank::v1beta1::Output& outputs(int index) const;
  ::cosmos::bank::v1beta1::Output* add_outputs();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::bank::v1beta1::Output >&
      outputs() const;
  // @@protoc_insertion_point(class_scope:cosmos.bank.v1beta1.MsgMultiSend)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::bank::v1beta1::Input > inputs_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::bank::v1beta1::Output > outputs_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fbank_2fv1beta1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgMultiSendResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:cosmos.bank.v1beta1.MsgMultiSendResponse) */ {
 public:
  inline MsgMultiSendResponse() : MsgMultiSendResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgMultiSendResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgMultiSendResponse(const MsgMultiSendResponse& from);
  MsgMultiSendResponse(MsgMultiSendResponse&& from) noexcept
    : MsgMultiSendResponse() {
    *this = ::std::move(from);
  }

  inline MsgMultiSendResponse& operator=(const MsgMultiSendResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgMultiSendResponse& operator=(MsgMultiSendResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgMultiSendResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgMultiSendResponse* internal_default_instance() {
    return reinterpret_cast<const MsgMultiSendResponse*>(
               &_MsgMultiSendResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(MsgMultiSendResponse& a, MsgMultiSendResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgMultiSendResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgMultiSendResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgMultiSendResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgMultiSendResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgMultiSendResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgMultiSendResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.bank.v1beta1.MsgMultiSendResponse";
  }
  protected:
  explicit MsgMultiSendResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:cosmos.bank.v1beta1.MsgMultiSendResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_cosmos_2fbank_2fv1beta1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgUpdateParams final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.bank.v1beta1.MsgUpdateParams) */ {
 public:
  inline MsgUpdateParams() : MsgUpdateParams(nullptr) {}
  ~MsgUpdateParams() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUpdateParams(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgUpdateParams(const MsgUpdateParams& from);
  MsgUpdateParams(MsgUpdateParams&& from) noexcept
    : MsgUpdateParams() {
    *this = ::std::move(from);
  }

  inline MsgUpdateParams& operator=(const MsgUpdateParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateParams& operator=(MsgUpdateParams&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUpdateParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUpdateParams* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateParams*>(
               &_MsgUpdateParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(MsgUpdateParams& a, MsgUpdateParams& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgUpdateParams* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateParams* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUpdateParams* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgUpdateParams>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgUpdateParams& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgUpdateParams& from) {
    MsgUpdateParams::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgUpdateParams* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.bank.v1beta1.MsgUpdateParams";
  }
  protected:
  explicit MsgUpdateParams(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAuthorityFieldNumber = 1,
    kParamsFieldNumber = 2,
  };
  // string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_authority() ;
  const std::string& authority() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_authority(Arg_&& arg, Args_... args);
  std::string* mutable_authority();
  PROTOBUF_NODISCARD std::string* release_authority();
  void set_allocated_authority(std::string* ptr);

  private:
  const std::string& _internal_authority() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_authority(
      const std::string& value);
  std::string* _internal_mutable_authority();

  public:
  // .cosmos.bank.v1beta1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  bool has_params() const;
  void clear_params() ;
  const ::cosmos::bank::v1beta1::Params& params() const;
  PROTOBUF_NODISCARD ::cosmos::bank::v1beta1::Params* release_params();
  ::cosmos::bank::v1beta1::Params* mutable_params();
  void set_allocated_params(::cosmos::bank::v1beta1::Params* params);
  private:
  const ::cosmos::bank::v1beta1::Params& _internal_params() const;
  ::cosmos::bank::v1beta1::Params* _internal_mutable_params();
  public:
  void unsafe_arena_set_allocated_params(
      ::cosmos::bank::v1beta1::Params* params);
  ::cosmos::bank::v1beta1::Params* unsafe_arena_release_params();
  // @@protoc_insertion_point(class_scope:cosmos.bank.v1beta1.MsgUpdateParams)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr authority_;
    ::cosmos::bank::v1beta1::Params* params_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fbank_2fv1beta1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgUpdateParamsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:cosmos.bank.v1beta1.MsgUpdateParamsResponse) */ {
 public:
  inline MsgUpdateParamsResponse() : MsgUpdateParamsResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUpdateParamsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgUpdateParamsResponse(const MsgUpdateParamsResponse& from);
  MsgUpdateParamsResponse(MsgUpdateParamsResponse&& from) noexcept
    : MsgUpdateParamsResponse() {
    *this = ::std::move(from);
  }

  inline MsgUpdateParamsResponse& operator=(const MsgUpdateParamsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateParamsResponse& operator=(MsgUpdateParamsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUpdateParamsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUpdateParamsResponse* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateParamsResponse*>(
               &_MsgUpdateParamsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(MsgUpdateParamsResponse& a, MsgUpdateParamsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgUpdateParamsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateParamsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUpdateParamsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgUpdateParamsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgUpdateParamsResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgUpdateParamsResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.bank.v1beta1.MsgUpdateParamsResponse";
  }
  protected:
  explicit MsgUpdateParamsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:cosmos.bank.v1beta1.MsgUpdateParamsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_cosmos_2fbank_2fv1beta1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgSetSendEnabled final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.bank.v1beta1.MsgSetSendEnabled) */ {
 public:
  inline MsgSetSendEnabled() : MsgSetSendEnabled(nullptr) {}
  ~MsgSetSendEnabled() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgSetSendEnabled(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgSetSendEnabled(const MsgSetSendEnabled& from);
  MsgSetSendEnabled(MsgSetSendEnabled&& from) noexcept
    : MsgSetSendEnabled() {
    *this = ::std::move(from);
  }

  inline MsgSetSendEnabled& operator=(const MsgSetSendEnabled& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgSetSendEnabled& operator=(MsgSetSendEnabled&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgSetSendEnabled& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgSetSendEnabled* internal_default_instance() {
    return reinterpret_cast<const MsgSetSendEnabled*>(
               &_MsgSetSendEnabled_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(MsgSetSendEnabled& a, MsgSetSendEnabled& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgSetSendEnabled* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgSetSendEnabled* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgSetSendEnabled* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgSetSendEnabled>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgSetSendEnabled& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgSetSendEnabled& from) {
    MsgSetSendEnabled::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSetSendEnabled* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.bank.v1beta1.MsgSetSendEnabled";
  }
  protected:
  explicit MsgSetSendEnabled(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSendEnabledFieldNumber = 2,
    kUseDefaultForFieldNumber = 3,
    kAuthorityFieldNumber = 1,
  };
  // repeated .cosmos.bank.v1beta1.SendEnabled send_enabled = 2 [json_name = "sendEnabled"];
  int send_enabled_size() const;
  private:
  int _internal_send_enabled_size() const;

  public:
  void clear_send_enabled() ;
  ::cosmos::bank::v1beta1::SendEnabled* mutable_send_enabled(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::bank::v1beta1::SendEnabled >*
      mutable_send_enabled();
  private:
  const ::cosmos::bank::v1beta1::SendEnabled& _internal_send_enabled(int index) const;
  ::cosmos::bank::v1beta1::SendEnabled* _internal_add_send_enabled();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::bank::v1beta1::SendEnabled>& _internal_send_enabled() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::bank::v1beta1::SendEnabled>* _internal_mutable_send_enabled();
  public:
  const ::cosmos::bank::v1beta1::SendEnabled& send_enabled(int index) const;
  ::cosmos::bank::v1beta1::SendEnabled* add_send_enabled();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::bank::v1beta1::SendEnabled >&
      send_enabled() const;
  // repeated string use_default_for = 3 [json_name = "useDefaultFor"];
  int use_default_for_size() const;
  private:
  int _internal_use_default_for_size() const;

  public:
  void clear_use_default_for() ;
  const std::string& use_default_for(int index) const;
  std::string* mutable_use_default_for(int index);
  void set_use_default_for(int index, const std::string& value);
  void set_use_default_for(int index, std::string&& value);
  void set_use_default_for(int index, const char* value);
  void set_use_default_for(int index, const char* value, std::size_t size);
  void set_use_default_for(int index, absl::string_view value);
  std::string* add_use_default_for();
  void add_use_default_for(const std::string& value);
  void add_use_default_for(std::string&& value);
  void add_use_default_for(const char* value);
  void add_use_default_for(const char* value, std::size_t size);
  void add_use_default_for(absl::string_view value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& use_default_for() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_use_default_for();

  private:
  const std::string& _internal_use_default_for(int index) const;
  std::string* _internal_add_use_default_for();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& _internal_use_default_for() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* _internal_mutable_use_default_for();

  public:
  // string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_authority() ;
  const std::string& authority() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_authority(Arg_&& arg, Args_... args);
  std::string* mutable_authority();
  PROTOBUF_NODISCARD std::string* release_authority();
  void set_allocated_authority(std::string* ptr);

  private:
  const std::string& _internal_authority() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_authority(
      const std::string& value);
  std::string* _internal_mutable_authority();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.bank.v1beta1.MsgSetSendEnabled)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::bank::v1beta1::SendEnabled > send_enabled_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> use_default_for_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr authority_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fbank_2fv1beta1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgSetSendEnabledResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:cosmos.bank.v1beta1.MsgSetSendEnabledResponse) */ {
 public:
  inline MsgSetSendEnabledResponse() : MsgSetSendEnabledResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgSetSendEnabledResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgSetSendEnabledResponse(const MsgSetSendEnabledResponse& from);
  MsgSetSendEnabledResponse(MsgSetSendEnabledResponse&& from) noexcept
    : MsgSetSendEnabledResponse() {
    *this = ::std::move(from);
  }

  inline MsgSetSendEnabledResponse& operator=(const MsgSetSendEnabledResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgSetSendEnabledResponse& operator=(MsgSetSendEnabledResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgSetSendEnabledResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgSetSendEnabledResponse* internal_default_instance() {
    return reinterpret_cast<const MsgSetSendEnabledResponse*>(
               &_MsgSetSendEnabledResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(MsgSetSendEnabledResponse& a, MsgSetSendEnabledResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgSetSendEnabledResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgSetSendEnabledResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgSetSendEnabledResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgSetSendEnabledResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgSetSendEnabledResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgSetSendEnabledResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.bank.v1beta1.MsgSetSendEnabledResponse";
  }
  protected:
  explicit MsgSetSendEnabledResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:cosmos.bank.v1beta1.MsgSetSendEnabledResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_cosmos_2fbank_2fv1beta1_2ftx_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// MsgSend

// string from_address = 1 [json_name = "fromAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgSend::clear_from_address() {
  _impl_.from_address_.ClearToEmpty();
}
inline const std::string& MsgSend::from_address() const {
  // @@protoc_insertion_point(field_get:cosmos.bank.v1beta1.MsgSend.from_address)
  return _internal_from_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgSend::set_from_address(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.from_address_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmos.bank.v1beta1.MsgSend.from_address)
}
inline std::string* MsgSend::mutable_from_address() {
  std::string* _s = _internal_mutable_from_address();
  // @@protoc_insertion_point(field_mutable:cosmos.bank.v1beta1.MsgSend.from_address)
  return _s;
}
inline const std::string& MsgSend::_internal_from_address() const {
  return _impl_.from_address_.Get();
}
inline void MsgSend::_internal_set_from_address(const std::string& value) {
  ;


  _impl_.from_address_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgSend::_internal_mutable_from_address() {
  ;
  return _impl_.from_address_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgSend::release_from_address() {
  // @@protoc_insertion_point(field_release:cosmos.bank.v1beta1.MsgSend.from_address)
  return _impl_.from_address_.Release();
}
inline void MsgSend::set_allocated_from_address(std::string* value) {
  _impl_.from_address_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.from_address_.IsDefault()) {
          _impl_.from_address_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmos.bank.v1beta1.MsgSend.from_address)
}

// string to_address = 2 [json_name = "toAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgSend::clear_to_address() {
  _impl_.to_address_.ClearToEmpty();
}
inline const std::string& MsgSend::to_address() const {
  // @@protoc_insertion_point(field_get:cosmos.bank.v1beta1.MsgSend.to_address)
  return _internal_to_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgSend::set_to_address(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.to_address_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmos.bank.v1beta1.MsgSend.to_address)
}
inline std::string* MsgSend::mutable_to_address() {
  std::string* _s = _internal_mutable_to_address();
  // @@protoc_insertion_point(field_mutable:cosmos.bank.v1beta1.MsgSend.to_address)
  return _s;
}
inline const std::string& MsgSend::_internal_to_address() const {
  return _impl_.to_address_.Get();
}
inline void MsgSend::_internal_set_to_address(const std::string& value) {
  ;


  _impl_.to_address_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgSend::_internal_mutable_to_address() {
  ;
  return _impl_.to_address_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgSend::release_to_address() {
  // @@protoc_insertion_point(field_release:cosmos.bank.v1beta1.MsgSend.to_address)
  return _impl_.to_address_.Release();
}
inline void MsgSend::set_allocated_to_address(std::string* value) {
  _impl_.to_address_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.to_address_.IsDefault()) {
          _impl_.to_address_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmos.bank.v1beta1.MsgSend.to_address)
}

// repeated .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];
inline int MsgSend::_internal_amount_size() const {
  return _impl_.amount_.size();
}
inline int MsgSend::amount_size() const {
  return _internal_amount_size();
}
inline ::cosmos::base::v1beta1::Coin* MsgSend::mutable_amount(int index) {
  // @@protoc_insertion_point(field_mutable:cosmos.bank.v1beta1.MsgSend.amount)
  return _internal_mutable_amount()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin >*
MsgSend::mutable_amount() {
  // @@protoc_insertion_point(field_mutable_list:cosmos.bank.v1beta1.MsgSend.amount)
  return _internal_mutable_amount();
}
inline const ::cosmos::base::v1beta1::Coin& MsgSend::_internal_amount(int index) const {
  return _internal_amount().Get(index);
}
inline const ::cosmos::base::v1beta1::Coin& MsgSend::amount(int index) const {
  // @@protoc_insertion_point(field_get:cosmos.bank.v1beta1.MsgSend.amount)
  return _internal_amount(index);
}
inline ::cosmos::base::v1beta1::Coin* MsgSend::_internal_add_amount() {
  return _internal_mutable_amount()->Add();
}
inline ::cosmos::base::v1beta1::Coin* MsgSend::add_amount() {
  ::cosmos::base::v1beta1::Coin* _add = _internal_add_amount();
  // @@protoc_insertion_point(field_add:cosmos.bank.v1beta1.MsgSend.amount)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin >&
MsgSend::amount() const {
  // @@protoc_insertion_point(field_list:cosmos.bank.v1beta1.MsgSend.amount)
  return _internal_amount();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::Coin>&
MsgSend::_internal_amount() const {
  return _impl_.amount_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::Coin>*
MsgSend::_internal_mutable_amount() {
  return &_impl_.amount_;
}

// -------------------------------------------------------------------

// MsgSendResponse

// -------------------------------------------------------------------

// MsgMultiSend

// repeated .cosmos.bank.v1beta1.Input inputs = 1 [json_name = "inputs", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline int MsgMultiSend::_internal_inputs_size() const {
  return _impl_.inputs_.size();
}
inline int MsgMultiSend::inputs_size() const {
  return _internal_inputs_size();
}
inline ::cosmos::bank::v1beta1::Input* MsgMultiSend::mutable_inputs(int index) {
  // @@protoc_insertion_point(field_mutable:cosmos.bank.v1beta1.MsgMultiSend.inputs)
  return _internal_mutable_inputs()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::bank::v1beta1::Input >*
MsgMultiSend::mutable_inputs() {
  // @@protoc_insertion_point(field_mutable_list:cosmos.bank.v1beta1.MsgMultiSend.inputs)
  return _internal_mutable_inputs();
}
inline const ::cosmos::bank::v1beta1::Input& MsgMultiSend::_internal_inputs(int index) const {
  return _internal_inputs().Get(index);
}
inline const ::cosmos::bank::v1beta1::Input& MsgMultiSend::inputs(int index) const {
  // @@protoc_insertion_point(field_get:cosmos.bank.v1beta1.MsgMultiSend.inputs)
  return _internal_inputs(index);
}
inline ::cosmos::bank::v1beta1::Input* MsgMultiSend::_internal_add_inputs() {
  return _internal_mutable_inputs()->Add();
}
inline ::cosmos::bank::v1beta1::Input* MsgMultiSend::add_inputs() {
  ::cosmos::bank::v1beta1::Input* _add = _internal_add_inputs();
  // @@protoc_insertion_point(field_add:cosmos.bank.v1beta1.MsgMultiSend.inputs)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::bank::v1beta1::Input >&
MsgMultiSend::inputs() const {
  // @@protoc_insertion_point(field_list:cosmos.bank.v1beta1.MsgMultiSend.inputs)
  return _internal_inputs();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::bank::v1beta1::Input>&
MsgMultiSend::_internal_inputs() const {
  return _impl_.inputs_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::bank::v1beta1::Input>*
MsgMultiSend::_internal_mutable_inputs() {
  return &_impl_.inputs_;
}

// repeated .cosmos.bank.v1beta1.Output outputs = 2 [json_name = "outputs", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline int MsgMultiSend::_internal_outputs_size() const {
  return _impl_.outputs_.size();
}
inline int MsgMultiSend::outputs_size() const {
  return _internal_outputs_size();
}
inline ::cosmos::bank::v1beta1::Output* MsgMultiSend::mutable_outputs(int index) {
  // @@protoc_insertion_point(field_mutable:cosmos.bank.v1beta1.MsgMultiSend.outputs)
  return _internal_mutable_outputs()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::bank::v1beta1::Output >*
MsgMultiSend::mutable_outputs() {
  // @@protoc_insertion_point(field_mutable_list:cosmos.bank.v1beta1.MsgMultiSend.outputs)
  return _internal_mutable_outputs();
}
inline const ::cosmos::bank::v1beta1::Output& MsgMultiSend::_internal_outputs(int index) const {
  return _internal_outputs().Get(index);
}
inline const ::cosmos::bank::v1beta1::Output& MsgMultiSend::outputs(int index) const {
  // @@protoc_insertion_point(field_get:cosmos.bank.v1beta1.MsgMultiSend.outputs)
  return _internal_outputs(index);
}
inline ::cosmos::bank::v1beta1::Output* MsgMultiSend::_internal_add_outputs() {
  return _internal_mutable_outputs()->Add();
}
inline ::cosmos::bank::v1beta1::Output* MsgMultiSend::add_outputs() {
  ::cosmos::bank::v1beta1::Output* _add = _internal_add_outputs();
  // @@protoc_insertion_point(field_add:cosmos.bank.v1beta1.MsgMultiSend.outputs)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::bank::v1beta1::Output >&
MsgMultiSend::outputs() const {
  // @@protoc_insertion_point(field_list:cosmos.bank.v1beta1.MsgMultiSend.outputs)
  return _internal_outputs();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::bank::v1beta1::Output>&
MsgMultiSend::_internal_outputs() const {
  return _impl_.outputs_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::bank::v1beta1::Output>*
MsgMultiSend::_internal_mutable_outputs() {
  return &_impl_.outputs_;
}

// -------------------------------------------------------------------

// MsgMultiSendResponse

// -------------------------------------------------------------------

// MsgUpdateParams

// string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgUpdateParams::clear_authority() {
  _impl_.authority_.ClearToEmpty();
}
inline const std::string& MsgUpdateParams::authority() const {
  // @@protoc_insertion_point(field_get:cosmos.bank.v1beta1.MsgUpdateParams.authority)
  return _internal_authority();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgUpdateParams::set_authority(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.authority_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmos.bank.v1beta1.MsgUpdateParams.authority)
}
inline std::string* MsgUpdateParams::mutable_authority() {
  std::string* _s = _internal_mutable_authority();
  // @@protoc_insertion_point(field_mutable:cosmos.bank.v1beta1.MsgUpdateParams.authority)
  return _s;
}
inline const std::string& MsgUpdateParams::_internal_authority() const {
  return _impl_.authority_.Get();
}
inline void MsgUpdateParams::_internal_set_authority(const std::string& value) {
  ;


  _impl_.authority_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgUpdateParams::_internal_mutable_authority() {
  ;
  return _impl_.authority_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgUpdateParams::release_authority() {
  // @@protoc_insertion_point(field_release:cosmos.bank.v1beta1.MsgUpdateParams.authority)
  return _impl_.authority_.Release();
}
inline void MsgUpdateParams::set_allocated_authority(std::string* value) {
  _impl_.authority_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.authority_.IsDefault()) {
          _impl_.authority_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmos.bank.v1beta1.MsgUpdateParams.authority)
}

// .cosmos.bank.v1beta1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline bool MsgUpdateParams::has_params() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.params_ != nullptr);
  return value;
}
inline const ::cosmos::bank::v1beta1::Params& MsgUpdateParams::_internal_params() const {
  const ::cosmos::bank::v1beta1::Params* p = _impl_.params_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::bank::v1beta1::Params&>(
      ::cosmos::bank::v1beta1::_Params_default_instance_);
}
inline const ::cosmos::bank::v1beta1::Params& MsgUpdateParams::params() const {
  // @@protoc_insertion_point(field_get:cosmos.bank.v1beta1.MsgUpdateParams.params)
  return _internal_params();
}
inline void MsgUpdateParams::unsafe_arena_set_allocated_params(
    ::cosmos::bank::v1beta1::Params* params) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.params_);
  }
  _impl_.params_ = params;
  if (params) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.bank.v1beta1.MsgUpdateParams.params)
}
inline ::cosmos::bank::v1beta1::Params* MsgUpdateParams::release_params() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::bank::v1beta1::Params* temp = _impl_.params_;
  _impl_.params_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::cosmos::bank::v1beta1::Params* MsgUpdateParams::unsafe_arena_release_params() {
  // @@protoc_insertion_point(field_release:cosmos.bank.v1beta1.MsgUpdateParams.params)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::bank::v1beta1::Params* temp = _impl_.params_;
  _impl_.params_ = nullptr;
  return temp;
}
inline ::cosmos::bank::v1beta1::Params* MsgUpdateParams::_internal_mutable_params() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.params_ == nullptr) {
    auto* p = CreateMaybeMessage<::cosmos::bank::v1beta1::Params>(GetArenaForAllocation());
    _impl_.params_ = p;
  }
  return _impl_.params_;
}
inline ::cosmos::bank::v1beta1::Params* MsgUpdateParams::mutable_params() {
  ::cosmos::bank::v1beta1::Params* _msg = _internal_mutable_params();
  // @@protoc_insertion_point(field_mutable:cosmos.bank.v1beta1.MsgUpdateParams.params)
  return _msg;
}
inline void MsgUpdateParams::set_allocated_params(::cosmos::bank::v1beta1::Params* params) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.params_);
  }
  if (params) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(params));
    if (message_arena != submessage_arena) {
      params = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, params, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.params_ = params;
  // @@protoc_insertion_point(field_set_allocated:cosmos.bank.v1beta1.MsgUpdateParams.params)
}

// -------------------------------------------------------------------

// MsgUpdateParamsResponse

// -------------------------------------------------------------------

// MsgSetSendEnabled

// string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgSetSendEnabled::clear_authority() {
  _impl_.authority_.ClearToEmpty();
}
inline const std::string& MsgSetSendEnabled::authority() const {
  // @@protoc_insertion_point(field_get:cosmos.bank.v1beta1.MsgSetSendEnabled.authority)
  return _internal_authority();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgSetSendEnabled::set_authority(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.authority_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmos.bank.v1beta1.MsgSetSendEnabled.authority)
}
inline std::string* MsgSetSendEnabled::mutable_authority() {
  std::string* _s = _internal_mutable_authority();
  // @@protoc_insertion_point(field_mutable:cosmos.bank.v1beta1.MsgSetSendEnabled.authority)
  return _s;
}
inline const std::string& MsgSetSendEnabled::_internal_authority() const {
  return _impl_.authority_.Get();
}
inline void MsgSetSendEnabled::_internal_set_authority(const std::string& value) {
  ;


  _impl_.authority_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgSetSendEnabled::_internal_mutable_authority() {
  ;
  return _impl_.authority_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgSetSendEnabled::release_authority() {
  // @@protoc_insertion_point(field_release:cosmos.bank.v1beta1.MsgSetSendEnabled.authority)
  return _impl_.authority_.Release();
}
inline void MsgSetSendEnabled::set_allocated_authority(std::string* value) {
  _impl_.authority_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.authority_.IsDefault()) {
          _impl_.authority_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmos.bank.v1beta1.MsgSetSendEnabled.authority)
}

// repeated .cosmos.bank.v1beta1.SendEnabled send_enabled = 2 [json_name = "sendEnabled"];
inline int MsgSetSendEnabled::_internal_send_enabled_size() const {
  return _impl_.send_enabled_.size();
}
inline int MsgSetSendEnabled::send_enabled_size() const {
  return _internal_send_enabled_size();
}
inline ::cosmos::bank::v1beta1::SendEnabled* MsgSetSendEnabled::mutable_send_enabled(int index) {
  // @@protoc_insertion_point(field_mutable:cosmos.bank.v1beta1.MsgSetSendEnabled.send_enabled)
  return _internal_mutable_send_enabled()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::bank::v1beta1::SendEnabled >*
MsgSetSendEnabled::mutable_send_enabled() {
  // @@protoc_insertion_point(field_mutable_list:cosmos.bank.v1beta1.MsgSetSendEnabled.send_enabled)
  return _internal_mutable_send_enabled();
}
inline const ::cosmos::bank::v1beta1::SendEnabled& MsgSetSendEnabled::_internal_send_enabled(int index) const {
  return _internal_send_enabled().Get(index);
}
inline const ::cosmos::bank::v1beta1::SendEnabled& MsgSetSendEnabled::send_enabled(int index) const {
  // @@protoc_insertion_point(field_get:cosmos.bank.v1beta1.MsgSetSendEnabled.send_enabled)
  return _internal_send_enabled(index);
}
inline ::cosmos::bank::v1beta1::SendEnabled* MsgSetSendEnabled::_internal_add_send_enabled() {
  return _internal_mutable_send_enabled()->Add();
}
inline ::cosmos::bank::v1beta1::SendEnabled* MsgSetSendEnabled::add_send_enabled() {
  ::cosmos::bank::v1beta1::SendEnabled* _add = _internal_add_send_enabled();
  // @@protoc_insertion_point(field_add:cosmos.bank.v1beta1.MsgSetSendEnabled.send_enabled)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::bank::v1beta1::SendEnabled >&
MsgSetSendEnabled::send_enabled() const {
  // @@protoc_insertion_point(field_list:cosmos.bank.v1beta1.MsgSetSendEnabled.send_enabled)
  return _internal_send_enabled();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::bank::v1beta1::SendEnabled>&
MsgSetSendEnabled::_internal_send_enabled() const {
  return _impl_.send_enabled_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::bank::v1beta1::SendEnabled>*
MsgSetSendEnabled::_internal_mutable_send_enabled() {
  return &_impl_.send_enabled_;
}

// repeated string use_default_for = 3 [json_name = "useDefaultFor"];
inline int MsgSetSendEnabled::_internal_use_default_for_size() const {
  return _impl_.use_default_for_.size();
}
inline int MsgSetSendEnabled::use_default_for_size() const {
  return _internal_use_default_for_size();
}
inline void MsgSetSendEnabled::clear_use_default_for() {
  _internal_mutable_use_default_for()->Clear();
}
inline std::string* MsgSetSendEnabled::add_use_default_for() {
  std::string* _s = _internal_add_use_default_for();
  // @@protoc_insertion_point(field_add_mutable:cosmos.bank.v1beta1.MsgSetSendEnabled.use_default_for)
  return _s;
}
inline const std::string& MsgSetSendEnabled::use_default_for(int index) const {
  // @@protoc_insertion_point(field_get:cosmos.bank.v1beta1.MsgSetSendEnabled.use_default_for)
  return _internal_use_default_for(index);
}
inline std::string* MsgSetSendEnabled::mutable_use_default_for(int index) {
  // @@protoc_insertion_point(field_mutable:cosmos.bank.v1beta1.MsgSetSendEnabled.use_default_for)
  return _internal_mutable_use_default_for()->Mutable(index);
}
inline void MsgSetSendEnabled::set_use_default_for(int index, const std::string& value) {
  _internal_mutable_use_default_for()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:cosmos.bank.v1beta1.MsgSetSendEnabled.use_default_for)
}
inline void MsgSetSendEnabled::set_use_default_for(int index, std::string&& value) {
  _internal_mutable_use_default_for()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:cosmos.bank.v1beta1.MsgSetSendEnabled.use_default_for)
}
inline void MsgSetSendEnabled::set_use_default_for(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_use_default_for()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:cosmos.bank.v1beta1.MsgSetSendEnabled.use_default_for)
}
inline void MsgSetSendEnabled::set_use_default_for(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_use_default_for()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:cosmos.bank.v1beta1.MsgSetSendEnabled.use_default_for)
}
inline void MsgSetSendEnabled::set_use_default_for(int index, absl::string_view value) {
  _internal_mutable_use_default_for()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:cosmos.bank.v1beta1.MsgSetSendEnabled.use_default_for)
}
inline void MsgSetSendEnabled::add_use_default_for(const std::string& value) {
  _internal_mutable_use_default_for()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:cosmos.bank.v1beta1.MsgSetSendEnabled.use_default_for)
}
inline void MsgSetSendEnabled::add_use_default_for(std::string&& value) {
  _internal_mutable_use_default_for()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:cosmos.bank.v1beta1.MsgSetSendEnabled.use_default_for)
}
inline void MsgSetSendEnabled::add_use_default_for(const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_use_default_for()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:cosmos.bank.v1beta1.MsgSetSendEnabled.use_default_for)
}
inline void MsgSetSendEnabled::add_use_default_for(const char* value, std::size_t size) {
  _internal_mutable_use_default_for()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:cosmos.bank.v1beta1.MsgSetSendEnabled.use_default_for)
}
inline void MsgSetSendEnabled::add_use_default_for(absl::string_view value) {
  _internal_mutable_use_default_for()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:cosmos.bank.v1beta1.MsgSetSendEnabled.use_default_for)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
MsgSetSendEnabled::use_default_for() const {
  // @@protoc_insertion_point(field_list:cosmos.bank.v1beta1.MsgSetSendEnabled.use_default_for)
  return _internal_use_default_for();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* MsgSetSendEnabled::mutable_use_default_for() {
  // @@protoc_insertion_point(field_mutable_list:cosmos.bank.v1beta1.MsgSetSendEnabled.use_default_for)
  return _internal_mutable_use_default_for();
}
inline const std::string& MsgSetSendEnabled::_internal_use_default_for(int index) const {
  return _internal_use_default_for().Get(index);
}
inline std::string* MsgSetSendEnabled::_internal_add_use_default_for() {
  return _internal_mutable_use_default_for()->Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
MsgSetSendEnabled::_internal_use_default_for() const {
  return _impl_.use_default_for_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
MsgSetSendEnabled::_internal_mutable_use_default_for() {
  return &_impl_.use_default_for_;
}

// -------------------------------------------------------------------

// MsgSetSendEnabledResponse

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace bank
}  // namespace cosmos


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_cosmos_2fbank_2fv1beta1_2ftx_2eproto_2epb_2eh
