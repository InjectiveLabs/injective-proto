// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/params/v1beta1/params.proto

#include "cosmos/params/v1beta1/params.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace cosmos {
namespace params {
namespace v1beta1 {
template <typename>
PROTOBUF_CONSTEXPR ParameterChangeProposal::ParameterChangeProposal(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.changes_)*/{}
  , /*decltype(_impl_.title_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.description_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ParameterChangeProposalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ParameterChangeProposalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ParameterChangeProposalDefaultTypeInternal() {}
  union {
    ParameterChangeProposal _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ParameterChangeProposalDefaultTypeInternal _ParameterChangeProposal_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR ParamChange::ParamChange(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.subspace_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.key_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.value_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ParamChangeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ParamChangeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ParamChangeDefaultTypeInternal() {}
  union {
    ParamChange _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ParamChangeDefaultTypeInternal _ParamChange_default_instance_;
}  // namespace v1beta1
}  // namespace params
}  // namespace cosmos
static ::_pb::Metadata file_level_metadata_cosmos_2fparams_2fv1beta1_2fparams_2eproto[2];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_cosmos_2fparams_2fv1beta1_2fparams_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cosmos_2fparams_2fv1beta1_2fparams_2eproto = nullptr;
const ::uint32_t TableStruct_cosmos_2fparams_2fv1beta1_2fparams_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::params::v1beta1::ParameterChangeProposal, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::params::v1beta1::ParameterChangeProposal, _impl_.title_),
    PROTOBUF_FIELD_OFFSET(::cosmos::params::v1beta1::ParameterChangeProposal, _impl_.description_),
    PROTOBUF_FIELD_OFFSET(::cosmos::params::v1beta1::ParameterChangeProposal, _impl_.changes_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::params::v1beta1::ParamChange, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::params::v1beta1::ParamChange, _impl_.subspace_),
    PROTOBUF_FIELD_OFFSET(::cosmos::params::v1beta1::ParamChange, _impl_.key_),
    PROTOBUF_FIELD_OFFSET(::cosmos::params::v1beta1::ParamChange, _impl_.value_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::cosmos::params::v1beta1::ParameterChangeProposal)},
        { 11, -1, -1, sizeof(::cosmos::params::v1beta1::ParamChange)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::cosmos::params::v1beta1::_ParameterChangeProposal_default_instance_._instance,
    &::cosmos::params::v1beta1::_ParamChange_default_instance_._instance,
};
const char descriptor_table_protodef_cosmos_2fparams_2fv1beta1_2fparams_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\"cosmos/params/v1beta1/params.proto\022\025co"
    "smos.params.v1beta1\032\024gogoproto/gogo.prot"
    "o\032\031cosmos_proto/cosmos.proto\032\021amino/amin"
    "o.proto\"\351\001\n\027ParameterChangeProposal\022\024\n\005t"
    "itle\030\001 \001(\tR\005title\022 \n\013description\030\002 \001(\tR\013"
    "description\022G\n\007changes\030\003 \003(\0132\".cosmos.pa"
    "rams.v1beta1.ParamChangeB\t\310\336\037\000\250\347\260*\001R\007cha"
    "nges:M\210\240\037\000\230\240\037\000\312\264-\032cosmos.gov.v1beta1.Con"
    "tent\212\347\260*\"cosmos-sdk/ParameterChangePropo"
    "sal\"W\n\013ParamChange\022\032\n\010subspace\030\001 \001(\tR\010su"
    "bspace\022\020\n\003key\030\002 \001(\tR\003key\022\024\n\005value\030\003 \001(\tR"
    "\005value:\004\230\240\037\000B\330\001\n\031com.cosmos.params.v1bet"
    "a1B\013ParamsProtoP\001Z4github.com/cosmos/cos"
    "mos-sdk/x/params/types/proposal\242\002\003CPX\252\002\025"
    "Cosmos.Params.V1beta1\312\002\025Cosmos\\Params\\V1"
    "beta1\342\002!Cosmos\\Params\\V1beta1\\GPBMetadat"
    "a\352\002\027Cosmos::Params::V1beta1\250\342\036\001b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_cosmos_2fparams_2fv1beta1_2fparams_2eproto_deps[3] =
    {
        &::descriptor_table_amino_2famino_2eproto,
        &::descriptor_table_cosmos_5fproto_2fcosmos_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
};
static ::absl::once_flag descriptor_table_cosmos_2fparams_2fv1beta1_2fparams_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_cosmos_2fparams_2fv1beta1_2fparams_2eproto = {
    false,
    false,
    679,
    descriptor_table_protodef_cosmos_2fparams_2fv1beta1_2fparams_2eproto,
    "cosmos/params/v1beta1/params.proto",
    &descriptor_table_cosmos_2fparams_2fv1beta1_2fparams_2eproto_once,
    descriptor_table_cosmos_2fparams_2fv1beta1_2fparams_2eproto_deps,
    3,
    2,
    schemas,
    file_default_instances,
    TableStruct_cosmos_2fparams_2fv1beta1_2fparams_2eproto::offsets,
    file_level_metadata_cosmos_2fparams_2fv1beta1_2fparams_2eproto,
    file_level_enum_descriptors_cosmos_2fparams_2fv1beta1_2fparams_2eproto,
    file_level_service_descriptors_cosmos_2fparams_2fv1beta1_2fparams_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_cosmos_2fparams_2fv1beta1_2fparams_2eproto_getter() {
  return &descriptor_table_cosmos_2fparams_2fv1beta1_2fparams_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_cosmos_2fparams_2fv1beta1_2fparams_2eproto(&descriptor_table_cosmos_2fparams_2fv1beta1_2fparams_2eproto);
namespace cosmos {
namespace params {
namespace v1beta1 {
// ===================================================================

class ParameterChangeProposal::_Internal {
 public:
};

ParameterChangeProposal::ParameterChangeProposal(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.params.v1beta1.ParameterChangeProposal)
}
ParameterChangeProposal::ParameterChangeProposal(const ParameterChangeProposal& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ParameterChangeProposal* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.changes_){from._impl_.changes_}
    , decltype(_impl_.title_) {}

    , decltype(_impl_.description_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.title_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.title_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_title().empty()) {
    _this->_impl_.title_.Set(from._internal_title(), _this->GetArenaForAllocation());
  }
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.description_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    _this->_impl_.description_.Set(from._internal_description(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.params.v1beta1.ParameterChangeProposal)
}

inline void ParameterChangeProposal::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.changes_){arena}
    , decltype(_impl_.title_) {}

    , decltype(_impl_.description_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.title_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.title_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.description_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ParameterChangeProposal::~ParameterChangeProposal() {
  // @@protoc_insertion_point(destructor:cosmos.params.v1beta1.ParameterChangeProposal)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ParameterChangeProposal::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_changes()->~RepeatedPtrField();
  _impl_.title_.Destroy();
  _impl_.description_.Destroy();
}

void ParameterChangeProposal::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ParameterChangeProposal::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.params.v1beta1.ParameterChangeProposal)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_changes()->Clear();
  _impl_.title_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ParameterChangeProposal::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string title = 1 [json_name = "title"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_title();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.params.v1beta1.ParameterChangeProposal.title"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string description = 2 [json_name = "description"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.params.v1beta1.ParameterChangeProposal.description"));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated .cosmos.params.v1beta1.ParamChange changes = 3 [json_name = "changes", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_changes(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* ParameterChangeProposal::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.params.v1beta1.ParameterChangeProposal)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string title = 1 [json_name = "title"];
  if (!this->_internal_title().empty()) {
    const std::string& _s = this->_internal_title();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.params.v1beta1.ParameterChangeProposal.title");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string description = 2 [json_name = "description"];
  if (!this->_internal_description().empty()) {
    const std::string& _s = this->_internal_description();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.params.v1beta1.ParameterChangeProposal.description");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // repeated .cosmos.params.v1beta1.ParamChange changes = 3 [json_name = "changes", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_changes_size()); i < n; i++) {
    const auto& repfield = this->_internal_changes(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.params.v1beta1.ParameterChangeProposal)
  return target;
}

::size_t ParameterChangeProposal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.params.v1beta1.ParameterChangeProposal)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cosmos.params.v1beta1.ParamChange changes = 3 [json_name = "changes", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  total_size += 1UL * this->_internal_changes_size();
  for (const auto& msg : this->_internal_changes()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string title = 1 [json_name = "title"];
  if (!this->_internal_title().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_title());
  }

  // string description = 2 [json_name = "description"];
  if (!this->_internal_description().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_description());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ParameterChangeProposal::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ParameterChangeProposal::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ParameterChangeProposal::GetClassData() const { return &_class_data_; }


void ParameterChangeProposal::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ParameterChangeProposal*>(&to_msg);
  auto& from = static_cast<const ParameterChangeProposal&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.params.v1beta1.ParameterChangeProposal)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_changes()->MergeFrom(from._internal_changes());
  if (!from._internal_title().empty()) {
    _this->_internal_set_title(from._internal_title());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ParameterChangeProposal::CopyFrom(const ParameterChangeProposal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.params.v1beta1.ParameterChangeProposal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParameterChangeProposal::IsInitialized() const {
  return true;
}

void ParameterChangeProposal::InternalSwap(ParameterChangeProposal* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_changes()->InternalSwap(other->_internal_mutable_changes());
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, lhs_arena,
                                       &other->_impl_.title_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, lhs_arena,
                                       &other->_impl_.description_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata ParameterChangeProposal::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fparams_2fv1beta1_2fparams_2eproto_getter, &descriptor_table_cosmos_2fparams_2fv1beta1_2fparams_2eproto_once,
      file_level_metadata_cosmos_2fparams_2fv1beta1_2fparams_2eproto[0]);
}
// ===================================================================

class ParamChange::_Internal {
 public:
};

ParamChange::ParamChange(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.params.v1beta1.ParamChange)
}
ParamChange::ParamChange(const ParamChange& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ParamChange* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.subspace_) {}

    , decltype(_impl_.key_) {}

    , decltype(_impl_.value_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.subspace_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.subspace_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_subspace().empty()) {
    _this->_impl_.subspace_.Set(from._internal_subspace(), _this->GetArenaForAllocation());
  }
  _impl_.key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.key_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_key().empty()) {
    _this->_impl_.key_.Set(from._internal_key(), _this->GetArenaForAllocation());
  }
  _impl_.value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.value_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_value().empty()) {
    _this->_impl_.value_.Set(from._internal_value(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.params.v1beta1.ParamChange)
}

inline void ParamChange::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.subspace_) {}

    , decltype(_impl_.key_) {}

    , decltype(_impl_.value_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.subspace_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.subspace_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.key_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.value_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ParamChange::~ParamChange() {
  // @@protoc_insertion_point(destructor:cosmos.params.v1beta1.ParamChange)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ParamChange::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.subspace_.Destroy();
  _impl_.key_.Destroy();
  _impl_.value_.Destroy();
}

void ParamChange::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ParamChange::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.params.v1beta1.ParamChange)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.subspace_.ClearToEmpty();
  _impl_.key_.ClearToEmpty();
  _impl_.value_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ParamChange::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string subspace = 1 [json_name = "subspace"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_subspace();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.params.v1beta1.ParamChange.subspace"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string key = 2 [json_name = "key"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_key();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.params.v1beta1.ParamChange.key"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string value = 3 [json_name = "value"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_value();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.params.v1beta1.ParamChange.value"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* ParamChange::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.params.v1beta1.ParamChange)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string subspace = 1 [json_name = "subspace"];
  if (!this->_internal_subspace().empty()) {
    const std::string& _s = this->_internal_subspace();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.params.v1beta1.ParamChange.subspace");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string key = 2 [json_name = "key"];
  if (!this->_internal_key().empty()) {
    const std::string& _s = this->_internal_key();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.params.v1beta1.ParamChange.key");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string value = 3 [json_name = "value"];
  if (!this->_internal_value().empty()) {
    const std::string& _s = this->_internal_value();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.params.v1beta1.ParamChange.value");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.params.v1beta1.ParamChange)
  return target;
}

::size_t ParamChange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.params.v1beta1.ParamChange)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string subspace = 1 [json_name = "subspace"];
  if (!this->_internal_subspace().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_subspace());
  }

  // string key = 2 [json_name = "key"];
  if (!this->_internal_key().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_key());
  }

  // string value = 3 [json_name = "value"];
  if (!this->_internal_value().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ParamChange::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ParamChange::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ParamChange::GetClassData() const { return &_class_data_; }


void ParamChange::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ParamChange*>(&to_msg);
  auto& from = static_cast<const ParamChange&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.params.v1beta1.ParamChange)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_subspace().empty()) {
    _this->_internal_set_subspace(from._internal_subspace());
  }
  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  if (!from._internal_value().empty()) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ParamChange::CopyFrom(const ParamChange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.params.v1beta1.ParamChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParamChange::IsInitialized() const {
  return true;
}

void ParamChange::InternalSwap(ParamChange* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.subspace_, lhs_arena,
                                       &other->_impl_.subspace_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, lhs_arena,
                                       &other->_impl_.key_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, lhs_arena,
                                       &other->_impl_.value_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata ParamChange::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fparams_2fv1beta1_2fparams_2eproto_getter, &descriptor_table_cosmos_2fparams_2fv1beta1_2fparams_2eproto_once,
      file_level_metadata_cosmos_2fparams_2fv1beta1_2fparams_2eproto[1]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace params
}  // namespace cosmos
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::cosmos::params::v1beta1::ParameterChangeProposal*
Arena::CreateMaybeMessage< ::cosmos::params::v1beta1::ParameterChangeProposal >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::params::v1beta1::ParameterChangeProposal >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::params::v1beta1::ParamChange*
Arena::CreateMaybeMessage< ::cosmos::params::v1beta1::ParamChange >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::params::v1beta1::ParamChange >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
