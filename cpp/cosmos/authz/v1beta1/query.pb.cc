// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/authz/v1beta1/query.proto

#include "cosmos/authz/v1beta1/query.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace cosmos {
namespace authz {
namespace v1beta1 {
template <typename>
PROTOBUF_CONSTEXPR QueryGrantsRequest::QueryGrantsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.granter_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.grantee_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.msg_type_url_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.pagination_)*/nullptr} {}
struct QueryGrantsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryGrantsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryGrantsRequestDefaultTypeInternal() {}
  union {
    QueryGrantsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryGrantsRequestDefaultTypeInternal _QueryGrantsRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryGrantsResponse::QueryGrantsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.grants_)*/{}
  , /*decltype(_impl_.pagination_)*/nullptr} {}
struct QueryGrantsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryGrantsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryGrantsResponseDefaultTypeInternal() {}
  union {
    QueryGrantsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryGrantsResponseDefaultTypeInternal _QueryGrantsResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryGranterGrantsRequest::QueryGranterGrantsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.granter_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.pagination_)*/nullptr} {}
struct QueryGranterGrantsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryGranterGrantsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryGranterGrantsRequestDefaultTypeInternal() {}
  union {
    QueryGranterGrantsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryGranterGrantsRequestDefaultTypeInternal _QueryGranterGrantsRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryGranterGrantsResponse::QueryGranterGrantsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.grants_)*/{}
  , /*decltype(_impl_.pagination_)*/nullptr} {}
struct QueryGranterGrantsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryGranterGrantsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryGranterGrantsResponseDefaultTypeInternal() {}
  union {
    QueryGranterGrantsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryGranterGrantsResponseDefaultTypeInternal _QueryGranterGrantsResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryGranteeGrantsRequest::QueryGranteeGrantsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.grantee_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.pagination_)*/nullptr} {}
struct QueryGranteeGrantsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryGranteeGrantsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryGranteeGrantsRequestDefaultTypeInternal() {}
  union {
    QueryGranteeGrantsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryGranteeGrantsRequestDefaultTypeInternal _QueryGranteeGrantsRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryGranteeGrantsResponse::QueryGranteeGrantsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.grants_)*/{}
  , /*decltype(_impl_.pagination_)*/nullptr} {}
struct QueryGranteeGrantsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryGranteeGrantsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryGranteeGrantsResponseDefaultTypeInternal() {}
  union {
    QueryGranteeGrantsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryGranteeGrantsResponseDefaultTypeInternal _QueryGranteeGrantsResponse_default_instance_;
}  // namespace v1beta1
}  // namespace authz
}  // namespace cosmos
static ::_pb::Metadata file_level_metadata_cosmos_2fauthz_2fv1beta1_2fquery_2eproto[6];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_cosmos_2fauthz_2fv1beta1_2fquery_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cosmos_2fauthz_2fv1beta1_2fquery_2eproto = nullptr;
const ::uint32_t TableStruct_cosmos_2fauthz_2fv1beta1_2fquery_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::QueryGrantsRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::QueryGrantsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::QueryGrantsRequest, _impl_.granter_),
    PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::QueryGrantsRequest, _impl_.grantee_),
    PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::QueryGrantsRequest, _impl_.msg_type_url_),
    PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::QueryGrantsRequest, _impl_.pagination_),
    ~0u,
    ~0u,
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::QueryGrantsResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::QueryGrantsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::QueryGrantsResponse, _impl_.grants_),
    PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::QueryGrantsResponse, _impl_.pagination_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::QueryGranterGrantsRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::QueryGranterGrantsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::QueryGranterGrantsRequest, _impl_.granter_),
    PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::QueryGranterGrantsRequest, _impl_.pagination_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::QueryGranterGrantsResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::QueryGranterGrantsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::QueryGranterGrantsResponse, _impl_.grants_),
    PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::QueryGranterGrantsResponse, _impl_.pagination_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::QueryGranteeGrantsRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::QueryGranteeGrantsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::QueryGranteeGrantsRequest, _impl_.grantee_),
    PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::QueryGranteeGrantsRequest, _impl_.pagination_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::QueryGranteeGrantsResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::QueryGranteeGrantsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::QueryGranteeGrantsResponse, _impl_.grants_),
    PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::QueryGranteeGrantsResponse, _impl_.pagination_),
    ~0u,
    0,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, 12, -1, sizeof(::cosmos::authz::v1beta1::QueryGrantsRequest)},
        { 16, 26, -1, sizeof(::cosmos::authz::v1beta1::QueryGrantsResponse)},
        { 28, 38, -1, sizeof(::cosmos::authz::v1beta1::QueryGranterGrantsRequest)},
        { 40, 50, -1, sizeof(::cosmos::authz::v1beta1::QueryGranterGrantsResponse)},
        { 52, 62, -1, sizeof(::cosmos::authz::v1beta1::QueryGranteeGrantsRequest)},
        { 64, 74, -1, sizeof(::cosmos::authz::v1beta1::QueryGranteeGrantsResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::cosmos::authz::v1beta1::_QueryGrantsRequest_default_instance_._instance,
    &::cosmos::authz::v1beta1::_QueryGrantsResponse_default_instance_._instance,
    &::cosmos::authz::v1beta1::_QueryGranterGrantsRequest_default_instance_._instance,
    &::cosmos::authz::v1beta1::_QueryGranterGrantsResponse_default_instance_._instance,
    &::cosmos::authz::v1beta1::_QueryGranteeGrantsRequest_default_instance_._instance,
    &::cosmos::authz::v1beta1::_QueryGranteeGrantsResponse_default_instance_._instance,
};
const char descriptor_table_protodef_cosmos_2fauthz_2fv1beta1_2fquery_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n cosmos/authz/v1beta1/query.proto\022\024cosm"
    "os.authz.v1beta1\032\034google/api/annotations"
    ".proto\032*cosmos/base/query/v1beta1/pagina"
    "tion.proto\032 cosmos/authz/v1beta1/authz.p"
    "roto\032\031cosmos_proto/cosmos.proto\"\346\001\n\022Quer"
    "yGrantsRequest\0222\n\007granter\030\001 \001(\tB\030\322\264-\024cos"
    "mos.AddressStringR\007granter\0222\n\007grantee\030\002 "
    "\001(\tB\030\322\264-\024cosmos.AddressStringR\007grantee\022 "
    "\n\014msg_type_url\030\003 \001(\tR\nmsgTypeUrl\022F\n\npagi"
    "nation\030\004 \001(\0132&.cosmos.base.query.v1beta1"
    ".PageRequestR\npagination\"\223\001\n\023QueryGrants"
    "Response\0223\n\006grants\030\001 \003(\0132\033.cosmos.authz."
    "v1beta1.GrantR\006grants\022G\n\npagination\030\002 \001("
    "\0132\'.cosmos.base.query.v1beta1.PageRespon"
    "seR\npagination\"\227\001\n\031QueryGranterGrantsReq"
    "uest\0222\n\007granter\030\001 \001(\tB\030\322\264-\024cosmos.Addres"
    "sStringR\007granter\022F\n\npagination\030\002 \001(\0132&.c"
    "osmos.base.query.v1beta1.PageRequestR\npa"
    "gination\"\247\001\n\032QueryGranterGrantsResponse\022"
    "@\n\006grants\030\001 \003(\0132(.cosmos.authz.v1beta1.G"
    "rantAuthorizationR\006grants\022G\n\npagination\030"
    "\002 \001(\0132\'.cosmos.base.query.v1beta1.PageRe"
    "sponseR\npagination\"\227\001\n\031QueryGranteeGrant"
    "sRequest\0222\n\007grantee\030\001 \001(\tB\030\322\264-\024cosmos.Ad"
    "dressStringR\007grantee\022F\n\npagination\030\002 \001(\013"
    "2&.cosmos.base.query.v1beta1.PageRequest"
    "R\npagination\"\247\001\n\032QueryGranteeGrantsRespo"
    "nse\022@\n\006grants\030\001 \003(\0132(.cosmos.authz.v1bet"
    "a1.GrantAuthorizationR\006grants\022G\n\npaginat"
    "ion\030\002 \001(\0132\'.cosmos.base.query.v1beta1.Pa"
    "geResponseR\npagination2\347\003\n\005Query\022\203\001\n\006Gra"
    "nts\022(.cosmos.authz.v1beta1.QueryGrantsRe"
    "quest\032).cosmos.authz.v1beta1.QueryGrants"
    "Response\"$\202\323\344\223\002\036\022\034/cosmos/authz/v1beta1/"
    "grants\022\252\001\n\rGranterGrants\022/.cosmos.authz."
    "v1beta1.QueryGranterGrantsRequest\0320.cosm"
    "os.authz.v1beta1.QueryGranterGrantsRespo"
    "nse\"6\202\323\344\223\0020\022./cosmos/authz/v1beta1/grant"
    "s/granter/{granter}\022\252\001\n\rGranteeGrants\022/."
    "cosmos.authz.v1beta1.QueryGranteeGrantsR"
    "equest\0320.cosmos.authz.v1beta1.QueryGrant"
    "eeGrantsResponse\"6\202\323\344\223\0020\022./cosmos/authz/"
    "v1beta1/grants/grantee/{grantee}B\276\001\n\030com"
    ".cosmos.authz.v1beta1B\nQueryProtoP\001Z$git"
    "hub.com/cosmos/cosmos-sdk/x/authz\242\002\003CAX\252"
    "\002\024Cosmos.Authz.V1beta1\312\002\024Cosmos\\Authz\\V1"
    "beta1\342\002 Cosmos\\Authz\\V1beta1\\GPBMetadata"
    "\352\002\026Cosmos::Authz::V1beta1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_cosmos_2fauthz_2fv1beta1_2fquery_2eproto_deps[4] =
    {
        &::descriptor_table_cosmos_2fauthz_2fv1beta1_2fauthz_2eproto,
        &::descriptor_table_cosmos_2fbase_2fquery_2fv1beta1_2fpagination_2eproto,
        &::descriptor_table_cosmos_5fproto_2fcosmos_2eproto,
        &::descriptor_table_google_2fapi_2fannotations_2eproto,
};
static ::absl::once_flag descriptor_table_cosmos_2fauthz_2fv1beta1_2fquery_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_cosmos_2fauthz_2fv1beta1_2fquery_2eproto = {
    false,
    false,
    1913,
    descriptor_table_protodef_cosmos_2fauthz_2fv1beta1_2fquery_2eproto,
    "cosmos/authz/v1beta1/query.proto",
    &descriptor_table_cosmos_2fauthz_2fv1beta1_2fquery_2eproto_once,
    descriptor_table_cosmos_2fauthz_2fv1beta1_2fquery_2eproto_deps,
    4,
    6,
    schemas,
    file_default_instances,
    TableStruct_cosmos_2fauthz_2fv1beta1_2fquery_2eproto::offsets,
    file_level_metadata_cosmos_2fauthz_2fv1beta1_2fquery_2eproto,
    file_level_enum_descriptors_cosmos_2fauthz_2fv1beta1_2fquery_2eproto,
    file_level_service_descriptors_cosmos_2fauthz_2fv1beta1_2fquery_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_cosmos_2fauthz_2fv1beta1_2fquery_2eproto_getter() {
  return &descriptor_table_cosmos_2fauthz_2fv1beta1_2fquery_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_cosmos_2fauthz_2fv1beta1_2fquery_2eproto(&descriptor_table_cosmos_2fauthz_2fv1beta1_2fquery_2eproto);
namespace cosmos {
namespace authz {
namespace v1beta1 {
// ===================================================================

class QueryGrantsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryGrantsRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryGrantsRequest, _impl_._has_bits_);
  static const ::cosmos::base::query::v1beta1::PageRequest& pagination(const QueryGrantsRequest* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::query::v1beta1::PageRequest&
QueryGrantsRequest::_Internal::pagination(const QueryGrantsRequest* msg) {
  return *msg->_impl_.pagination_;
}
void QueryGrantsRequest::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryGrantsRequest::QueryGrantsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.authz.v1beta1.QueryGrantsRequest)
}
QueryGrantsRequest::QueryGrantsRequest(const QueryGrantsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryGrantsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.granter_) {}

    , decltype(_impl_.grantee_) {}

    , decltype(_impl_.msg_type_url_) {}

    , decltype(_impl_.pagination_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.granter_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.granter_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_granter().empty()) {
    _this->_impl_.granter_.Set(from._internal_granter(), _this->GetArenaForAllocation());
  }
  _impl_.grantee_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.grantee_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_grantee().empty()) {
    _this->_impl_.grantee_.Set(from._internal_grantee(), _this->GetArenaForAllocation());
  }
  _impl_.msg_type_url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.msg_type_url_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_msg_type_url().empty()) {
    _this->_impl_.msg_type_url_.Set(from._internal_msg_type_url(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::cosmos::base::query::v1beta1::PageRequest(*from._impl_.pagination_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.authz.v1beta1.QueryGrantsRequest)
}

inline void QueryGrantsRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.granter_) {}

    , decltype(_impl_.grantee_) {}

    , decltype(_impl_.msg_type_url_) {}

    , decltype(_impl_.pagination_){nullptr}
  };
  _impl_.granter_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.granter_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.grantee_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.grantee_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.msg_type_url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.msg_type_url_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryGrantsRequest::~QueryGrantsRequest() {
  // @@protoc_insertion_point(destructor:cosmos.authz.v1beta1.QueryGrantsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryGrantsRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.granter_.Destroy();
  _impl_.grantee_.Destroy();
  _impl_.msg_type_url_.Destroy();
  if (this != internal_default_instance()) delete _impl_.pagination_;
}

void QueryGrantsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryGrantsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.authz.v1beta1.QueryGrantsRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.granter_.ClearToEmpty();
  _impl_.grantee_.ClearToEmpty();
  _impl_.msg_type_url_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryGrantsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string granter = 1 [json_name = "granter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_granter();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.authz.v1beta1.QueryGrantsRequest.granter"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string grantee = 2 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_grantee();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.authz.v1beta1.QueryGrantsRequest.grantee"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string msg_type_url = 3 [json_name = "msgTypeUrl"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_msg_type_url();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.authz.v1beta1.QueryGrantsRequest.msg_type_url"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.query.v1beta1.PageRequest pagination = 4 [json_name = "pagination"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagination(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryGrantsRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.authz.v1beta1.QueryGrantsRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string granter = 1 [json_name = "granter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_granter().empty()) {
    const std::string& _s = this->_internal_granter();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.authz.v1beta1.QueryGrantsRequest.granter");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string grantee = 2 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_grantee().empty()) {
    const std::string& _s = this->_internal_grantee();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.authz.v1beta1.QueryGrantsRequest.grantee");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string msg_type_url = 3 [json_name = "msgTypeUrl"];
  if (!this->_internal_msg_type_url().empty()) {
    const std::string& _s = this->_internal_msg_type_url();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.authz.v1beta1.QueryGrantsRequest.msg_type_url");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.query.v1beta1.PageRequest pagination = 4 [json_name = "pagination"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.authz.v1beta1.QueryGrantsRequest)
  return target;
}

::size_t QueryGrantsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.authz.v1beta1.QueryGrantsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string granter = 1 [json_name = "granter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_granter().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_granter());
  }

  // string grantee = 2 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_grantee().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_grantee());
  }

  // string msg_type_url = 3 [json_name = "msgTypeUrl"];
  if (!this->_internal_msg_type_url().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_msg_type_url());
  }

  // .cosmos.base.query.v1beta1.PageRequest pagination = 4 [json_name = "pagination"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryGrantsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryGrantsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryGrantsRequest::GetClassData() const { return &_class_data_; }


void QueryGrantsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryGrantsRequest*>(&to_msg);
  auto& from = static_cast<const QueryGrantsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.authz.v1beta1.QueryGrantsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_granter().empty()) {
    _this->_internal_set_granter(from._internal_granter());
  }
  if (!from._internal_grantee().empty()) {
    _this->_internal_set_grantee(from._internal_grantee());
  }
  if (!from._internal_msg_type_url().empty()) {
    _this->_internal_set_msg_type_url(from._internal_msg_type_url());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::cosmos::base::query::v1beta1::PageRequest::MergeFrom(
        from._internal_pagination());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryGrantsRequest::CopyFrom(const QueryGrantsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.authz.v1beta1.QueryGrantsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryGrantsRequest::IsInitialized() const {
  return true;
}

void QueryGrantsRequest::InternalSwap(QueryGrantsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.granter_, lhs_arena,
                                       &other->_impl_.granter_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.grantee_, lhs_arena,
                                       &other->_impl_.grantee_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.msg_type_url_, lhs_arena,
                                       &other->_impl_.msg_type_url_, rhs_arena);
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryGrantsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fauthz_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fauthz_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fauthz_2fv1beta1_2fquery_2eproto[0]);
}
// ===================================================================

class QueryGrantsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryGrantsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryGrantsResponse, _impl_._has_bits_);
  static const ::cosmos::base::query::v1beta1::PageResponse& pagination(const QueryGrantsResponse* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::query::v1beta1::PageResponse&
QueryGrantsResponse::_Internal::pagination(const QueryGrantsResponse* msg) {
  return *msg->_impl_.pagination_;
}
void QueryGrantsResponse::clear_grants() {
  _internal_mutable_grants()->Clear();
}
void QueryGrantsResponse::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryGrantsResponse::QueryGrantsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.authz.v1beta1.QueryGrantsResponse)
}
QueryGrantsResponse::QueryGrantsResponse(const QueryGrantsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryGrantsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.grants_){from._impl_.grants_}
    , decltype(_impl_.pagination_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::cosmos::base::query::v1beta1::PageResponse(*from._impl_.pagination_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.authz.v1beta1.QueryGrantsResponse)
}

inline void QueryGrantsResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.grants_){arena}
    , decltype(_impl_.pagination_){nullptr}
  };
}

QueryGrantsResponse::~QueryGrantsResponse() {
  // @@protoc_insertion_point(destructor:cosmos.authz.v1beta1.QueryGrantsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryGrantsResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_grants()->~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.pagination_;
}

void QueryGrantsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryGrantsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.authz.v1beta1.QueryGrantsResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_grants()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryGrantsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .cosmos.authz.v1beta1.Grant grants = 1 [json_name = "grants"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_grants(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagination(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryGrantsResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.authz.v1beta1.QueryGrantsResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cosmos.authz.v1beta1.Grant grants = 1 [json_name = "grants"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_grants_size()); i < n; i++) {
    const auto& repfield = this->_internal_grants(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.authz.v1beta1.QueryGrantsResponse)
  return target;
}

::size_t QueryGrantsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.authz.v1beta1.QueryGrantsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cosmos.authz.v1beta1.Grant grants = 1 [json_name = "grants"];
  total_size += 1UL * this->_internal_grants_size();
  for (const auto& msg : this->_internal_grants()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryGrantsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryGrantsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryGrantsResponse::GetClassData() const { return &_class_data_; }


void QueryGrantsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryGrantsResponse*>(&to_msg);
  auto& from = static_cast<const QueryGrantsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.authz.v1beta1.QueryGrantsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_grants()->MergeFrom(from._internal_grants());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::cosmos::base::query::v1beta1::PageResponse::MergeFrom(
        from._internal_pagination());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryGrantsResponse::CopyFrom(const QueryGrantsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.authz.v1beta1.QueryGrantsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryGrantsResponse::IsInitialized() const {
  return true;
}

void QueryGrantsResponse::InternalSwap(QueryGrantsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _internal_mutable_grants()->InternalSwap(other->_internal_mutable_grants());
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryGrantsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fauthz_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fauthz_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fauthz_2fv1beta1_2fquery_2eproto[1]);
}
// ===================================================================

class QueryGranterGrantsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryGranterGrantsRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryGranterGrantsRequest, _impl_._has_bits_);
  static const ::cosmos::base::query::v1beta1::PageRequest& pagination(const QueryGranterGrantsRequest* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::query::v1beta1::PageRequest&
QueryGranterGrantsRequest::_Internal::pagination(const QueryGranterGrantsRequest* msg) {
  return *msg->_impl_.pagination_;
}
void QueryGranterGrantsRequest::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryGranterGrantsRequest::QueryGranterGrantsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.authz.v1beta1.QueryGranterGrantsRequest)
}
QueryGranterGrantsRequest::QueryGranterGrantsRequest(const QueryGranterGrantsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryGranterGrantsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.granter_) {}

    , decltype(_impl_.pagination_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.granter_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.granter_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_granter().empty()) {
    _this->_impl_.granter_.Set(from._internal_granter(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::cosmos::base::query::v1beta1::PageRequest(*from._impl_.pagination_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.authz.v1beta1.QueryGranterGrantsRequest)
}

inline void QueryGranterGrantsRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.granter_) {}

    , decltype(_impl_.pagination_){nullptr}
  };
  _impl_.granter_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.granter_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryGranterGrantsRequest::~QueryGranterGrantsRequest() {
  // @@protoc_insertion_point(destructor:cosmos.authz.v1beta1.QueryGranterGrantsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryGranterGrantsRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.granter_.Destroy();
  if (this != internal_default_instance()) delete _impl_.pagination_;
}

void QueryGranterGrantsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryGranterGrantsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.authz.v1beta1.QueryGranterGrantsRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.granter_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryGranterGrantsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string granter = 1 [json_name = "granter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_granter();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.authz.v1beta1.QueryGranterGrantsRequest.granter"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagination(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryGranterGrantsRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.authz.v1beta1.QueryGranterGrantsRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string granter = 1 [json_name = "granter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_granter().empty()) {
    const std::string& _s = this->_internal_granter();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.authz.v1beta1.QueryGranterGrantsRequest.granter");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.authz.v1beta1.QueryGranterGrantsRequest)
  return target;
}

::size_t QueryGranterGrantsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.authz.v1beta1.QueryGranterGrantsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string granter = 1 [json_name = "granter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_granter().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_granter());
  }

  // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryGranterGrantsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryGranterGrantsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryGranterGrantsRequest::GetClassData() const { return &_class_data_; }


void QueryGranterGrantsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryGranterGrantsRequest*>(&to_msg);
  auto& from = static_cast<const QueryGranterGrantsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.authz.v1beta1.QueryGranterGrantsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_granter().empty()) {
    _this->_internal_set_granter(from._internal_granter());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::cosmos::base::query::v1beta1::PageRequest::MergeFrom(
        from._internal_pagination());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryGranterGrantsRequest::CopyFrom(const QueryGranterGrantsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.authz.v1beta1.QueryGranterGrantsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryGranterGrantsRequest::IsInitialized() const {
  return true;
}

void QueryGranterGrantsRequest::InternalSwap(QueryGranterGrantsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.granter_, lhs_arena,
                                       &other->_impl_.granter_, rhs_arena);
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryGranterGrantsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fauthz_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fauthz_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fauthz_2fv1beta1_2fquery_2eproto[2]);
}
// ===================================================================

class QueryGranterGrantsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryGranterGrantsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryGranterGrantsResponse, _impl_._has_bits_);
  static const ::cosmos::base::query::v1beta1::PageResponse& pagination(const QueryGranterGrantsResponse* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::query::v1beta1::PageResponse&
QueryGranterGrantsResponse::_Internal::pagination(const QueryGranterGrantsResponse* msg) {
  return *msg->_impl_.pagination_;
}
void QueryGranterGrantsResponse::clear_grants() {
  _internal_mutable_grants()->Clear();
}
void QueryGranterGrantsResponse::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryGranterGrantsResponse::QueryGranterGrantsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.authz.v1beta1.QueryGranterGrantsResponse)
}
QueryGranterGrantsResponse::QueryGranterGrantsResponse(const QueryGranterGrantsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryGranterGrantsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.grants_){from._impl_.grants_}
    , decltype(_impl_.pagination_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::cosmos::base::query::v1beta1::PageResponse(*from._impl_.pagination_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.authz.v1beta1.QueryGranterGrantsResponse)
}

inline void QueryGranterGrantsResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.grants_){arena}
    , decltype(_impl_.pagination_){nullptr}
  };
}

QueryGranterGrantsResponse::~QueryGranterGrantsResponse() {
  // @@protoc_insertion_point(destructor:cosmos.authz.v1beta1.QueryGranterGrantsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryGranterGrantsResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_grants()->~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.pagination_;
}

void QueryGranterGrantsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryGranterGrantsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.authz.v1beta1.QueryGranterGrantsResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_grants()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryGranterGrantsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .cosmos.authz.v1beta1.GrantAuthorization grants = 1 [json_name = "grants"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_grants(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagination(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryGranterGrantsResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.authz.v1beta1.QueryGranterGrantsResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cosmos.authz.v1beta1.GrantAuthorization grants = 1 [json_name = "grants"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_grants_size()); i < n; i++) {
    const auto& repfield = this->_internal_grants(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.authz.v1beta1.QueryGranterGrantsResponse)
  return target;
}

::size_t QueryGranterGrantsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.authz.v1beta1.QueryGranterGrantsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cosmos.authz.v1beta1.GrantAuthorization grants = 1 [json_name = "grants"];
  total_size += 1UL * this->_internal_grants_size();
  for (const auto& msg : this->_internal_grants()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryGranterGrantsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryGranterGrantsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryGranterGrantsResponse::GetClassData() const { return &_class_data_; }


void QueryGranterGrantsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryGranterGrantsResponse*>(&to_msg);
  auto& from = static_cast<const QueryGranterGrantsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.authz.v1beta1.QueryGranterGrantsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_grants()->MergeFrom(from._internal_grants());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::cosmos::base::query::v1beta1::PageResponse::MergeFrom(
        from._internal_pagination());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryGranterGrantsResponse::CopyFrom(const QueryGranterGrantsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.authz.v1beta1.QueryGranterGrantsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryGranterGrantsResponse::IsInitialized() const {
  return true;
}

void QueryGranterGrantsResponse::InternalSwap(QueryGranterGrantsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _internal_mutable_grants()->InternalSwap(other->_internal_mutable_grants());
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryGranterGrantsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fauthz_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fauthz_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fauthz_2fv1beta1_2fquery_2eproto[3]);
}
// ===================================================================

class QueryGranteeGrantsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryGranteeGrantsRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryGranteeGrantsRequest, _impl_._has_bits_);
  static const ::cosmos::base::query::v1beta1::PageRequest& pagination(const QueryGranteeGrantsRequest* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::query::v1beta1::PageRequest&
QueryGranteeGrantsRequest::_Internal::pagination(const QueryGranteeGrantsRequest* msg) {
  return *msg->_impl_.pagination_;
}
void QueryGranteeGrantsRequest::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryGranteeGrantsRequest::QueryGranteeGrantsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.authz.v1beta1.QueryGranteeGrantsRequest)
}
QueryGranteeGrantsRequest::QueryGranteeGrantsRequest(const QueryGranteeGrantsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryGranteeGrantsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.grantee_) {}

    , decltype(_impl_.pagination_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.grantee_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.grantee_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_grantee().empty()) {
    _this->_impl_.grantee_.Set(from._internal_grantee(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::cosmos::base::query::v1beta1::PageRequest(*from._impl_.pagination_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.authz.v1beta1.QueryGranteeGrantsRequest)
}

inline void QueryGranteeGrantsRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.grantee_) {}

    , decltype(_impl_.pagination_){nullptr}
  };
  _impl_.grantee_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.grantee_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryGranteeGrantsRequest::~QueryGranteeGrantsRequest() {
  // @@protoc_insertion_point(destructor:cosmos.authz.v1beta1.QueryGranteeGrantsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryGranteeGrantsRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.grantee_.Destroy();
  if (this != internal_default_instance()) delete _impl_.pagination_;
}

void QueryGranteeGrantsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryGranteeGrantsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.authz.v1beta1.QueryGranteeGrantsRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.grantee_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryGranteeGrantsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string grantee = 1 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_grantee();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.authz.v1beta1.QueryGranteeGrantsRequest.grantee"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagination(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryGranteeGrantsRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.authz.v1beta1.QueryGranteeGrantsRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string grantee = 1 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_grantee().empty()) {
    const std::string& _s = this->_internal_grantee();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.authz.v1beta1.QueryGranteeGrantsRequest.grantee");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.authz.v1beta1.QueryGranteeGrantsRequest)
  return target;
}

::size_t QueryGranteeGrantsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.authz.v1beta1.QueryGranteeGrantsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string grantee = 1 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_grantee().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_grantee());
  }

  // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryGranteeGrantsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryGranteeGrantsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryGranteeGrantsRequest::GetClassData() const { return &_class_data_; }


void QueryGranteeGrantsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryGranteeGrantsRequest*>(&to_msg);
  auto& from = static_cast<const QueryGranteeGrantsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.authz.v1beta1.QueryGranteeGrantsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_grantee().empty()) {
    _this->_internal_set_grantee(from._internal_grantee());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::cosmos::base::query::v1beta1::PageRequest::MergeFrom(
        from._internal_pagination());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryGranteeGrantsRequest::CopyFrom(const QueryGranteeGrantsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.authz.v1beta1.QueryGranteeGrantsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryGranteeGrantsRequest::IsInitialized() const {
  return true;
}

void QueryGranteeGrantsRequest::InternalSwap(QueryGranteeGrantsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.grantee_, lhs_arena,
                                       &other->_impl_.grantee_, rhs_arena);
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryGranteeGrantsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fauthz_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fauthz_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fauthz_2fv1beta1_2fquery_2eproto[4]);
}
// ===================================================================

class QueryGranteeGrantsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryGranteeGrantsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryGranteeGrantsResponse, _impl_._has_bits_);
  static const ::cosmos::base::query::v1beta1::PageResponse& pagination(const QueryGranteeGrantsResponse* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::query::v1beta1::PageResponse&
QueryGranteeGrantsResponse::_Internal::pagination(const QueryGranteeGrantsResponse* msg) {
  return *msg->_impl_.pagination_;
}
void QueryGranteeGrantsResponse::clear_grants() {
  _internal_mutable_grants()->Clear();
}
void QueryGranteeGrantsResponse::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryGranteeGrantsResponse::QueryGranteeGrantsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.authz.v1beta1.QueryGranteeGrantsResponse)
}
QueryGranteeGrantsResponse::QueryGranteeGrantsResponse(const QueryGranteeGrantsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryGranteeGrantsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.grants_){from._impl_.grants_}
    , decltype(_impl_.pagination_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::cosmos::base::query::v1beta1::PageResponse(*from._impl_.pagination_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.authz.v1beta1.QueryGranteeGrantsResponse)
}

inline void QueryGranteeGrantsResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.grants_){arena}
    , decltype(_impl_.pagination_){nullptr}
  };
}

QueryGranteeGrantsResponse::~QueryGranteeGrantsResponse() {
  // @@protoc_insertion_point(destructor:cosmos.authz.v1beta1.QueryGranteeGrantsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryGranteeGrantsResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_grants()->~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.pagination_;
}

void QueryGranteeGrantsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryGranteeGrantsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.authz.v1beta1.QueryGranteeGrantsResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_grants()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryGranteeGrantsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .cosmos.authz.v1beta1.GrantAuthorization grants = 1 [json_name = "grants"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_grants(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagination(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryGranteeGrantsResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.authz.v1beta1.QueryGranteeGrantsResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cosmos.authz.v1beta1.GrantAuthorization grants = 1 [json_name = "grants"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_grants_size()); i < n; i++) {
    const auto& repfield = this->_internal_grants(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.authz.v1beta1.QueryGranteeGrantsResponse)
  return target;
}

::size_t QueryGranteeGrantsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.authz.v1beta1.QueryGranteeGrantsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cosmos.authz.v1beta1.GrantAuthorization grants = 1 [json_name = "grants"];
  total_size += 1UL * this->_internal_grants_size();
  for (const auto& msg : this->_internal_grants()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryGranteeGrantsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryGranteeGrantsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryGranteeGrantsResponse::GetClassData() const { return &_class_data_; }


void QueryGranteeGrantsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryGranteeGrantsResponse*>(&to_msg);
  auto& from = static_cast<const QueryGranteeGrantsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.authz.v1beta1.QueryGranteeGrantsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_grants()->MergeFrom(from._internal_grants());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::cosmos::base::query::v1beta1::PageResponse::MergeFrom(
        from._internal_pagination());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryGranteeGrantsResponse::CopyFrom(const QueryGranteeGrantsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.authz.v1beta1.QueryGranteeGrantsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryGranteeGrantsResponse::IsInitialized() const {
  return true;
}

void QueryGranteeGrantsResponse::InternalSwap(QueryGranteeGrantsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _internal_mutable_grants()->InternalSwap(other->_internal_mutable_grants());
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryGranteeGrantsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fauthz_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fauthz_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fauthz_2fv1beta1_2fquery_2eproto[5]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace authz
}  // namespace cosmos
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::cosmos::authz::v1beta1::QueryGrantsRequest*
Arena::CreateMaybeMessage< ::cosmos::authz::v1beta1::QueryGrantsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::authz::v1beta1::QueryGrantsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::authz::v1beta1::QueryGrantsResponse*
Arena::CreateMaybeMessage< ::cosmos::authz::v1beta1::QueryGrantsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::authz::v1beta1::QueryGrantsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::authz::v1beta1::QueryGranterGrantsRequest*
Arena::CreateMaybeMessage< ::cosmos::authz::v1beta1::QueryGranterGrantsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::authz::v1beta1::QueryGranterGrantsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::authz::v1beta1::QueryGranterGrantsResponse*
Arena::CreateMaybeMessage< ::cosmos::authz::v1beta1::QueryGranterGrantsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::authz::v1beta1::QueryGranterGrantsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::authz::v1beta1::QueryGranteeGrantsRequest*
Arena::CreateMaybeMessage< ::cosmos::authz::v1beta1::QueryGranteeGrantsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::authz::v1beta1::QueryGranteeGrantsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::authz::v1beta1::QueryGranteeGrantsResponse*
Arena::CreateMaybeMessage< ::cosmos::authz::v1beta1::QueryGranteeGrantsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::authz::v1beta1::QueryGranteeGrantsResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
