// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/authz/v1beta1/event.proto

#include "cosmos/authz/v1beta1/event.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace cosmos {
namespace authz {
namespace v1beta1 {
template <typename>
PROTOBUF_CONSTEXPR EventGrant::EventGrant(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.msg_type_url_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.granter_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.grantee_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct EventGrantDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EventGrantDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EventGrantDefaultTypeInternal() {}
  union {
    EventGrant _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EventGrantDefaultTypeInternal _EventGrant_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR EventRevoke::EventRevoke(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.msg_type_url_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.granter_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.grantee_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct EventRevokeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EventRevokeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EventRevokeDefaultTypeInternal() {}
  union {
    EventRevoke _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EventRevokeDefaultTypeInternal _EventRevoke_default_instance_;
}  // namespace v1beta1
}  // namespace authz
}  // namespace cosmos
static ::_pb::Metadata file_level_metadata_cosmos_2fauthz_2fv1beta1_2fevent_2eproto[2];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_cosmos_2fauthz_2fv1beta1_2fevent_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cosmos_2fauthz_2fv1beta1_2fevent_2eproto = nullptr;
const ::uint32_t TableStruct_cosmos_2fauthz_2fv1beta1_2fevent_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::EventGrant, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::EventGrant, _impl_.msg_type_url_),
    PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::EventGrant, _impl_.granter_),
    PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::EventGrant, _impl_.grantee_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::EventRevoke, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::EventRevoke, _impl_.msg_type_url_),
    PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::EventRevoke, _impl_.granter_),
    PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::EventRevoke, _impl_.grantee_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::cosmos::authz::v1beta1::EventGrant)},
        { 11, -1, -1, sizeof(::cosmos::authz::v1beta1::EventRevoke)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::cosmos::authz::v1beta1::_EventGrant_default_instance_._instance,
    &::cosmos::authz::v1beta1::_EventRevoke_default_instance_._instance,
};
const char descriptor_table_protodef_cosmos_2fauthz_2fv1beta1_2fevent_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n cosmos/authz/v1beta1/event.proto\022\024cosm"
    "os.authz.v1beta1\032\031cosmos_proto/cosmos.pr"
    "oto\"\226\001\n\nEventGrant\022 \n\014msg_type_url\030\002 \001(\t"
    "R\nmsgTypeUrl\0222\n\007granter\030\003 \001(\tB\030\322\264-\024cosmo"
    "s.AddressStringR\007granter\0222\n\007grantee\030\004 \001("
    "\tB\030\322\264-\024cosmos.AddressStringR\007grantee\"\227\001\n"
    "\013EventRevoke\022 \n\014msg_type_url\030\002 \001(\tR\nmsgT"
    "ypeUrl\0222\n\007granter\030\003 \001(\tB\030\322\264-\024cosmos.Addr"
    "essStringR\007granter\0222\n\007grantee\030\004 \001(\tB\030\322\264-"
    "\024cosmos.AddressStringR\007granteeB\276\001\n\030com.c"
    "osmos.authz.v1beta1B\nEventProtoP\001Z$githu"
    "b.com/cosmos/cosmos-sdk/x/authz\242\002\003CAX\252\002\024"
    "Cosmos.Authz.V1beta1\312\002\024Cosmos\\Authz\\V1be"
    "ta1\342\002 Cosmos\\Authz\\V1beta1\\GPBMetadata\352\002"
    "\026Cosmos::Authz::V1beta1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_cosmos_2fauthz_2fv1beta1_2fevent_2eproto_deps[1] =
    {
        &::descriptor_table_cosmos_5fproto_2fcosmos_2eproto,
};
static ::absl::once_flag descriptor_table_cosmos_2fauthz_2fv1beta1_2fevent_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_cosmos_2fauthz_2fv1beta1_2fevent_2eproto = {
    false,
    false,
    591,
    descriptor_table_protodef_cosmos_2fauthz_2fv1beta1_2fevent_2eproto,
    "cosmos/authz/v1beta1/event.proto",
    &descriptor_table_cosmos_2fauthz_2fv1beta1_2fevent_2eproto_once,
    descriptor_table_cosmos_2fauthz_2fv1beta1_2fevent_2eproto_deps,
    1,
    2,
    schemas,
    file_default_instances,
    TableStruct_cosmos_2fauthz_2fv1beta1_2fevent_2eproto::offsets,
    file_level_metadata_cosmos_2fauthz_2fv1beta1_2fevent_2eproto,
    file_level_enum_descriptors_cosmos_2fauthz_2fv1beta1_2fevent_2eproto,
    file_level_service_descriptors_cosmos_2fauthz_2fv1beta1_2fevent_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_cosmos_2fauthz_2fv1beta1_2fevent_2eproto_getter() {
  return &descriptor_table_cosmos_2fauthz_2fv1beta1_2fevent_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_cosmos_2fauthz_2fv1beta1_2fevent_2eproto(&descriptor_table_cosmos_2fauthz_2fv1beta1_2fevent_2eproto);
namespace cosmos {
namespace authz {
namespace v1beta1 {
// ===================================================================

class EventGrant::_Internal {
 public:
};

EventGrant::EventGrant(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.authz.v1beta1.EventGrant)
}
EventGrant::EventGrant(const EventGrant& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  EventGrant* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.msg_type_url_) {}

    , decltype(_impl_.granter_) {}

    , decltype(_impl_.grantee_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.msg_type_url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.msg_type_url_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_msg_type_url().empty()) {
    _this->_impl_.msg_type_url_.Set(from._internal_msg_type_url(), _this->GetArenaForAllocation());
  }
  _impl_.granter_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.granter_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_granter().empty()) {
    _this->_impl_.granter_.Set(from._internal_granter(), _this->GetArenaForAllocation());
  }
  _impl_.grantee_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.grantee_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_grantee().empty()) {
    _this->_impl_.grantee_.Set(from._internal_grantee(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.authz.v1beta1.EventGrant)
}

inline void EventGrant::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.msg_type_url_) {}

    , decltype(_impl_.granter_) {}

    , decltype(_impl_.grantee_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.msg_type_url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.msg_type_url_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.granter_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.granter_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.grantee_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.grantee_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

EventGrant::~EventGrant() {
  // @@protoc_insertion_point(destructor:cosmos.authz.v1beta1.EventGrant)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EventGrant::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.msg_type_url_.Destroy();
  _impl_.granter_.Destroy();
  _impl_.grantee_.Destroy();
}

void EventGrant::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void EventGrant::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.authz.v1beta1.EventGrant)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.msg_type_url_.ClearToEmpty();
  _impl_.granter_.ClearToEmpty();
  _impl_.grantee_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EventGrant::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string msg_type_url = 2 [json_name = "msgTypeUrl"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_msg_type_url();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.authz.v1beta1.EventGrant.msg_type_url"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string granter = 3 [json_name = "granter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_granter();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.authz.v1beta1.EventGrant.granter"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string grantee = 4 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_grantee();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.authz.v1beta1.EventGrant.grantee"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* EventGrant::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.authz.v1beta1.EventGrant)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg_type_url = 2 [json_name = "msgTypeUrl"];
  if (!this->_internal_msg_type_url().empty()) {
    const std::string& _s = this->_internal_msg_type_url();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.authz.v1beta1.EventGrant.msg_type_url");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string granter = 3 [json_name = "granter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_granter().empty()) {
    const std::string& _s = this->_internal_granter();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.authz.v1beta1.EventGrant.granter");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string grantee = 4 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_grantee().empty()) {
    const std::string& _s = this->_internal_grantee();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.authz.v1beta1.EventGrant.grantee");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.authz.v1beta1.EventGrant)
  return target;
}

::size_t EventGrant::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.authz.v1beta1.EventGrant)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg_type_url = 2 [json_name = "msgTypeUrl"];
  if (!this->_internal_msg_type_url().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_msg_type_url());
  }

  // string granter = 3 [json_name = "granter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_granter().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_granter());
  }

  // string grantee = 4 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_grantee().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_grantee());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EventGrant::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    EventGrant::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EventGrant::GetClassData() const { return &_class_data_; }


void EventGrant::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<EventGrant*>(&to_msg);
  auto& from = static_cast<const EventGrant&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.authz.v1beta1.EventGrant)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_msg_type_url().empty()) {
    _this->_internal_set_msg_type_url(from._internal_msg_type_url());
  }
  if (!from._internal_granter().empty()) {
    _this->_internal_set_granter(from._internal_granter());
  }
  if (!from._internal_grantee().empty()) {
    _this->_internal_set_grantee(from._internal_grantee());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EventGrant::CopyFrom(const EventGrant& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.authz.v1beta1.EventGrant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventGrant::IsInitialized() const {
  return true;
}

void EventGrant::InternalSwap(EventGrant* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.msg_type_url_, lhs_arena,
                                       &other->_impl_.msg_type_url_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.granter_, lhs_arena,
                                       &other->_impl_.granter_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.grantee_, lhs_arena,
                                       &other->_impl_.grantee_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata EventGrant::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fauthz_2fv1beta1_2fevent_2eproto_getter, &descriptor_table_cosmos_2fauthz_2fv1beta1_2fevent_2eproto_once,
      file_level_metadata_cosmos_2fauthz_2fv1beta1_2fevent_2eproto[0]);
}
// ===================================================================

class EventRevoke::_Internal {
 public:
};

EventRevoke::EventRevoke(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.authz.v1beta1.EventRevoke)
}
EventRevoke::EventRevoke(const EventRevoke& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  EventRevoke* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.msg_type_url_) {}

    , decltype(_impl_.granter_) {}

    , decltype(_impl_.grantee_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.msg_type_url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.msg_type_url_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_msg_type_url().empty()) {
    _this->_impl_.msg_type_url_.Set(from._internal_msg_type_url(), _this->GetArenaForAllocation());
  }
  _impl_.granter_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.granter_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_granter().empty()) {
    _this->_impl_.granter_.Set(from._internal_granter(), _this->GetArenaForAllocation());
  }
  _impl_.grantee_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.grantee_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_grantee().empty()) {
    _this->_impl_.grantee_.Set(from._internal_grantee(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.authz.v1beta1.EventRevoke)
}

inline void EventRevoke::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.msg_type_url_) {}

    , decltype(_impl_.granter_) {}

    , decltype(_impl_.grantee_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.msg_type_url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.msg_type_url_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.granter_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.granter_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.grantee_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.grantee_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

EventRevoke::~EventRevoke() {
  // @@protoc_insertion_point(destructor:cosmos.authz.v1beta1.EventRevoke)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EventRevoke::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.msg_type_url_.Destroy();
  _impl_.granter_.Destroy();
  _impl_.grantee_.Destroy();
}

void EventRevoke::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void EventRevoke::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.authz.v1beta1.EventRevoke)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.msg_type_url_.ClearToEmpty();
  _impl_.granter_.ClearToEmpty();
  _impl_.grantee_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EventRevoke::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string msg_type_url = 2 [json_name = "msgTypeUrl"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_msg_type_url();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.authz.v1beta1.EventRevoke.msg_type_url"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string granter = 3 [json_name = "granter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_granter();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.authz.v1beta1.EventRevoke.granter"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string grantee = 4 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_grantee();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.authz.v1beta1.EventRevoke.grantee"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* EventRevoke::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.authz.v1beta1.EventRevoke)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg_type_url = 2 [json_name = "msgTypeUrl"];
  if (!this->_internal_msg_type_url().empty()) {
    const std::string& _s = this->_internal_msg_type_url();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.authz.v1beta1.EventRevoke.msg_type_url");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string granter = 3 [json_name = "granter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_granter().empty()) {
    const std::string& _s = this->_internal_granter();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.authz.v1beta1.EventRevoke.granter");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string grantee = 4 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_grantee().empty()) {
    const std::string& _s = this->_internal_grantee();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.authz.v1beta1.EventRevoke.grantee");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.authz.v1beta1.EventRevoke)
  return target;
}

::size_t EventRevoke::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.authz.v1beta1.EventRevoke)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg_type_url = 2 [json_name = "msgTypeUrl"];
  if (!this->_internal_msg_type_url().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_msg_type_url());
  }

  // string granter = 3 [json_name = "granter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_granter().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_granter());
  }

  // string grantee = 4 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_grantee().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_grantee());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EventRevoke::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    EventRevoke::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EventRevoke::GetClassData() const { return &_class_data_; }


void EventRevoke::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<EventRevoke*>(&to_msg);
  auto& from = static_cast<const EventRevoke&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.authz.v1beta1.EventRevoke)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_msg_type_url().empty()) {
    _this->_internal_set_msg_type_url(from._internal_msg_type_url());
  }
  if (!from._internal_granter().empty()) {
    _this->_internal_set_granter(from._internal_granter());
  }
  if (!from._internal_grantee().empty()) {
    _this->_internal_set_grantee(from._internal_grantee());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EventRevoke::CopyFrom(const EventRevoke& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.authz.v1beta1.EventRevoke)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventRevoke::IsInitialized() const {
  return true;
}

void EventRevoke::InternalSwap(EventRevoke* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.msg_type_url_, lhs_arena,
                                       &other->_impl_.msg_type_url_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.granter_, lhs_arena,
                                       &other->_impl_.granter_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.grantee_, lhs_arena,
                                       &other->_impl_.grantee_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata EventRevoke::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fauthz_2fv1beta1_2fevent_2eproto_getter, &descriptor_table_cosmos_2fauthz_2fv1beta1_2fevent_2eproto_once,
      file_level_metadata_cosmos_2fauthz_2fv1beta1_2fevent_2eproto[1]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace authz
}  // namespace cosmos
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::cosmos::authz::v1beta1::EventGrant*
Arena::CreateMaybeMessage< ::cosmos::authz::v1beta1::EventGrant >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::authz::v1beta1::EventGrant >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::authz::v1beta1::EventRevoke*
Arena::CreateMaybeMessage< ::cosmos::authz::v1beta1::EventRevoke >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::authz::v1beta1::EventRevoke >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
