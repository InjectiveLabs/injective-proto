// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/authz/v1beta1/tx.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_cosmos_2fauthz_2fv1beta1_2ftx_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_cosmos_2fauthz_2fv1beta1_2ftx_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4023000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4023004 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "cosmos_proto/cosmos.pb.h"
#include "gogoproto/gogo.pb.h"
#include "google/protobuf/any.pb.h"
#include "cosmos/authz/v1beta1/authz.pb.h"
#include "cosmos/msg/v1/msg.pb.h"
#include "amino/amino.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cosmos_2fauthz_2fv1beta1_2ftx_2eproto

PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_cosmos_2fauthz_2fv1beta1_2ftx_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable
    descriptor_table_cosmos_2fauthz_2fv1beta1_2ftx_2eproto;
namespace cosmos {
namespace authz {
namespace v1beta1 {
class MsgExec;
struct MsgExecDefaultTypeInternal;
extern MsgExecDefaultTypeInternal _MsgExec_default_instance_;
class MsgExecResponse;
struct MsgExecResponseDefaultTypeInternal;
extern MsgExecResponseDefaultTypeInternal _MsgExecResponse_default_instance_;
class MsgGrant;
struct MsgGrantDefaultTypeInternal;
extern MsgGrantDefaultTypeInternal _MsgGrant_default_instance_;
class MsgGrantResponse;
struct MsgGrantResponseDefaultTypeInternal;
extern MsgGrantResponseDefaultTypeInternal _MsgGrantResponse_default_instance_;
class MsgRevoke;
struct MsgRevokeDefaultTypeInternal;
extern MsgRevokeDefaultTypeInternal _MsgRevoke_default_instance_;
class MsgRevokeResponse;
struct MsgRevokeResponseDefaultTypeInternal;
extern MsgRevokeResponseDefaultTypeInternal _MsgRevokeResponse_default_instance_;
}  // namespace v1beta1
}  // namespace authz
}  // namespace cosmos
PROTOBUF_NAMESPACE_OPEN
template <>
::cosmos::authz::v1beta1::MsgExec* Arena::CreateMaybeMessage<::cosmos::authz::v1beta1::MsgExec>(Arena*);
template <>
::cosmos::authz::v1beta1::MsgExecResponse* Arena::CreateMaybeMessage<::cosmos::authz::v1beta1::MsgExecResponse>(Arena*);
template <>
::cosmos::authz::v1beta1::MsgGrant* Arena::CreateMaybeMessage<::cosmos::authz::v1beta1::MsgGrant>(Arena*);
template <>
::cosmos::authz::v1beta1::MsgGrantResponse* Arena::CreateMaybeMessage<::cosmos::authz::v1beta1::MsgGrantResponse>(Arena*);
template <>
::cosmos::authz::v1beta1::MsgRevoke* Arena::CreateMaybeMessage<::cosmos::authz::v1beta1::MsgRevoke>(Arena*);
template <>
::cosmos::authz::v1beta1::MsgRevokeResponse* Arena::CreateMaybeMessage<::cosmos::authz::v1beta1::MsgRevokeResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

namespace cosmos {
namespace authz {
namespace v1beta1 {

// ===================================================================


// -------------------------------------------------------------------

class MsgGrant final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.authz.v1beta1.MsgGrant) */ {
 public:
  inline MsgGrant() : MsgGrant(nullptr) {}
  ~MsgGrant() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgGrant(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgGrant(const MsgGrant& from);
  MsgGrant(MsgGrant&& from) noexcept
    : MsgGrant() {
    *this = ::std::move(from);
  }

  inline MsgGrant& operator=(const MsgGrant& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgGrant& operator=(MsgGrant&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgGrant& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgGrant* internal_default_instance() {
    return reinterpret_cast<const MsgGrant*>(
               &_MsgGrant_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MsgGrant& a, MsgGrant& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgGrant* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgGrant* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgGrant* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgGrant>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgGrant& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgGrant& from) {
    MsgGrant::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgGrant* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.authz.v1beta1.MsgGrant";
  }
  protected:
  explicit MsgGrant(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGranterFieldNumber = 1,
    kGranteeFieldNumber = 2,
    kGrantFieldNumber = 3,
  };
  // string granter = 1 [json_name = "granter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_granter() ;
  const std::string& granter() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_granter(Arg_&& arg, Args_... args);
  std::string* mutable_granter();
  PROTOBUF_NODISCARD std::string* release_granter();
  void set_allocated_granter(std::string* ptr);

  private:
  const std::string& _internal_granter() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_granter(
      const std::string& value);
  std::string* _internal_mutable_granter();

  public:
  // string grantee = 2 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_grantee() ;
  const std::string& grantee() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_grantee(Arg_&& arg, Args_... args);
  std::string* mutable_grantee();
  PROTOBUF_NODISCARD std::string* release_grantee();
  void set_allocated_grantee(std::string* ptr);

  private:
  const std::string& _internal_grantee() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_grantee(
      const std::string& value);
  std::string* _internal_mutable_grantee();

  public:
  // .cosmos.authz.v1beta1.Grant grant = 3 [json_name = "grant", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  bool has_grant() const;
  void clear_grant() ;
  const ::cosmos::authz::v1beta1::Grant& grant() const;
  PROTOBUF_NODISCARD ::cosmos::authz::v1beta1::Grant* release_grant();
  ::cosmos::authz::v1beta1::Grant* mutable_grant();
  void set_allocated_grant(::cosmos::authz::v1beta1::Grant* grant);
  private:
  const ::cosmos::authz::v1beta1::Grant& _internal_grant() const;
  ::cosmos::authz::v1beta1::Grant* _internal_mutable_grant();
  public:
  void unsafe_arena_set_allocated_grant(
      ::cosmos::authz::v1beta1::Grant* grant);
  ::cosmos::authz::v1beta1::Grant* unsafe_arena_release_grant();
  // @@protoc_insertion_point(class_scope:cosmos.authz.v1beta1.MsgGrant)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr granter_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr grantee_;
    ::cosmos::authz::v1beta1::Grant* grant_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fauthz_2fv1beta1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgExecResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.authz.v1beta1.MsgExecResponse) */ {
 public:
  inline MsgExecResponse() : MsgExecResponse(nullptr) {}
  ~MsgExecResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgExecResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgExecResponse(const MsgExecResponse& from);
  MsgExecResponse(MsgExecResponse&& from) noexcept
    : MsgExecResponse() {
    *this = ::std::move(from);
  }

  inline MsgExecResponse& operator=(const MsgExecResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgExecResponse& operator=(MsgExecResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgExecResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgExecResponse* internal_default_instance() {
    return reinterpret_cast<const MsgExecResponse*>(
               &_MsgExecResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(MsgExecResponse& a, MsgExecResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgExecResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgExecResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgExecResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgExecResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgExecResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgExecResponse& from) {
    MsgExecResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgExecResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.authz.v1beta1.MsgExecResponse";
  }
  protected:
  explicit MsgExecResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultsFieldNumber = 1,
  };
  // repeated bytes results = 1 [json_name = "results"];
  int results_size() const;
  private:
  int _internal_results_size() const;

  public:
  void clear_results() ;
  const std::string& results(int index) const;
  std::string* mutable_results(int index);
  void set_results(int index, const std::string& value);
  void set_results(int index, std::string&& value);
  void set_results(int index, const char* value);
  void set_results(int index, const void* value, std::size_t size);
  void set_results(int index, absl::string_view value);
  std::string* add_results();
  void add_results(const std::string& value);
  void add_results(std::string&& value);
  void add_results(const char* value);
  void add_results(const void* value, std::size_t size);
  void add_results(absl::string_view value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& results() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_results();

  private:
  const std::string& _internal_results(int index) const;
  std::string* _internal_add_results();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& _internal_results() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* _internal_mutable_results();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.authz.v1beta1.MsgExecResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> results_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fauthz_2fv1beta1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgExec final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.authz.v1beta1.MsgExec) */ {
 public:
  inline MsgExec() : MsgExec(nullptr) {}
  ~MsgExec() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgExec(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgExec(const MsgExec& from);
  MsgExec(MsgExec&& from) noexcept
    : MsgExec() {
    *this = ::std::move(from);
  }

  inline MsgExec& operator=(const MsgExec& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgExec& operator=(MsgExec&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgExec& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgExec* internal_default_instance() {
    return reinterpret_cast<const MsgExec*>(
               &_MsgExec_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(MsgExec& a, MsgExec& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgExec* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgExec* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgExec* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgExec>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgExec& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgExec& from) {
    MsgExec::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgExec* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.authz.v1beta1.MsgExec";
  }
  protected:
  explicit MsgExec(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgsFieldNumber = 2,
    kGranteeFieldNumber = 1,
  };
  // repeated .google.protobuf.Any msgs = 2 [json_name = "msgs", (.cosmos_proto.accepts_interface) = "cosmos.base.v1beta1.Msg"];
  int msgs_size() const;
  private:
  int _internal_msgs_size() const;

  public:
  void clear_msgs() ;
  ::PROTOBUF_NAMESPACE_ID::Any* mutable_msgs(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::Any >*
      mutable_msgs();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Any& _internal_msgs(int index) const;
  ::PROTOBUF_NAMESPACE_ID::Any* _internal_add_msgs();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::PROTOBUF_NAMESPACE_ID::Any>& _internal_msgs() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::PROTOBUF_NAMESPACE_ID::Any>* _internal_mutable_msgs();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Any& msgs(int index) const;
  ::PROTOBUF_NAMESPACE_ID::Any* add_msgs();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::Any >&
      msgs() const;
  // string grantee = 1 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_grantee() ;
  const std::string& grantee() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_grantee(Arg_&& arg, Args_... args);
  std::string* mutable_grantee();
  PROTOBUF_NODISCARD std::string* release_grantee();
  void set_allocated_grantee(std::string* ptr);

  private:
  const std::string& _internal_grantee() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_grantee(
      const std::string& value);
  std::string* _internal_mutable_grantee();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.authz.v1beta1.MsgExec)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::Any > msgs_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr grantee_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fauthz_2fv1beta1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgGrantResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:cosmos.authz.v1beta1.MsgGrantResponse) */ {
 public:
  inline MsgGrantResponse() : MsgGrantResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgGrantResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgGrantResponse(const MsgGrantResponse& from);
  MsgGrantResponse(MsgGrantResponse&& from) noexcept
    : MsgGrantResponse() {
    *this = ::std::move(from);
  }

  inline MsgGrantResponse& operator=(const MsgGrantResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgGrantResponse& operator=(MsgGrantResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgGrantResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgGrantResponse* internal_default_instance() {
    return reinterpret_cast<const MsgGrantResponse*>(
               &_MsgGrantResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(MsgGrantResponse& a, MsgGrantResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgGrantResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgGrantResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgGrantResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgGrantResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgGrantResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgGrantResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.authz.v1beta1.MsgGrantResponse";
  }
  protected:
  explicit MsgGrantResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:cosmos.authz.v1beta1.MsgGrantResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_cosmos_2fauthz_2fv1beta1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgRevoke final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.authz.v1beta1.MsgRevoke) */ {
 public:
  inline MsgRevoke() : MsgRevoke(nullptr) {}
  ~MsgRevoke() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgRevoke(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgRevoke(const MsgRevoke& from);
  MsgRevoke(MsgRevoke&& from) noexcept
    : MsgRevoke() {
    *this = ::std::move(from);
  }

  inline MsgRevoke& operator=(const MsgRevoke& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgRevoke& operator=(MsgRevoke&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgRevoke& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgRevoke* internal_default_instance() {
    return reinterpret_cast<const MsgRevoke*>(
               &_MsgRevoke_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(MsgRevoke& a, MsgRevoke& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgRevoke* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgRevoke* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgRevoke* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgRevoke>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgRevoke& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgRevoke& from) {
    MsgRevoke::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgRevoke* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.authz.v1beta1.MsgRevoke";
  }
  protected:
  explicit MsgRevoke(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGranterFieldNumber = 1,
    kGranteeFieldNumber = 2,
    kMsgTypeUrlFieldNumber = 3,
  };
  // string granter = 1 [json_name = "granter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_granter() ;
  const std::string& granter() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_granter(Arg_&& arg, Args_... args);
  std::string* mutable_granter();
  PROTOBUF_NODISCARD std::string* release_granter();
  void set_allocated_granter(std::string* ptr);

  private:
  const std::string& _internal_granter() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_granter(
      const std::string& value);
  std::string* _internal_mutable_granter();

  public:
  // string grantee = 2 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_grantee() ;
  const std::string& grantee() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_grantee(Arg_&& arg, Args_... args);
  std::string* mutable_grantee();
  PROTOBUF_NODISCARD std::string* release_grantee();
  void set_allocated_grantee(std::string* ptr);

  private:
  const std::string& _internal_grantee() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_grantee(
      const std::string& value);
  std::string* _internal_mutable_grantee();

  public:
  // string msg_type_url = 3 [json_name = "msgTypeUrl"];
  void clear_msg_type_url() ;
  const std::string& msg_type_url() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg_type_url(Arg_&& arg, Args_... args);
  std::string* mutable_msg_type_url();
  PROTOBUF_NODISCARD std::string* release_msg_type_url();
  void set_allocated_msg_type_url(std::string* ptr);

  private:
  const std::string& _internal_msg_type_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg_type_url(
      const std::string& value);
  std::string* _internal_mutable_msg_type_url();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.authz.v1beta1.MsgRevoke)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr granter_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr grantee_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr msg_type_url_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fauthz_2fv1beta1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgRevokeResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:cosmos.authz.v1beta1.MsgRevokeResponse) */ {
 public:
  inline MsgRevokeResponse() : MsgRevokeResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgRevokeResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgRevokeResponse(const MsgRevokeResponse& from);
  MsgRevokeResponse(MsgRevokeResponse&& from) noexcept
    : MsgRevokeResponse() {
    *this = ::std::move(from);
  }

  inline MsgRevokeResponse& operator=(const MsgRevokeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgRevokeResponse& operator=(MsgRevokeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgRevokeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgRevokeResponse* internal_default_instance() {
    return reinterpret_cast<const MsgRevokeResponse*>(
               &_MsgRevokeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(MsgRevokeResponse& a, MsgRevokeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgRevokeResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgRevokeResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgRevokeResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgRevokeResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgRevokeResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgRevokeResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.authz.v1beta1.MsgRevokeResponse";
  }
  protected:
  explicit MsgRevokeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:cosmos.authz.v1beta1.MsgRevokeResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_cosmos_2fauthz_2fv1beta1_2ftx_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// MsgGrant

// string granter = 1 [json_name = "granter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgGrant::clear_granter() {
  _impl_.granter_.ClearToEmpty();
}
inline const std::string& MsgGrant::granter() const {
  // @@protoc_insertion_point(field_get:cosmos.authz.v1beta1.MsgGrant.granter)
  return _internal_granter();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgGrant::set_granter(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.granter_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmos.authz.v1beta1.MsgGrant.granter)
}
inline std::string* MsgGrant::mutable_granter() {
  std::string* _s = _internal_mutable_granter();
  // @@protoc_insertion_point(field_mutable:cosmos.authz.v1beta1.MsgGrant.granter)
  return _s;
}
inline const std::string& MsgGrant::_internal_granter() const {
  return _impl_.granter_.Get();
}
inline void MsgGrant::_internal_set_granter(const std::string& value) {
  ;


  _impl_.granter_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgGrant::_internal_mutable_granter() {
  ;
  return _impl_.granter_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgGrant::release_granter() {
  // @@protoc_insertion_point(field_release:cosmos.authz.v1beta1.MsgGrant.granter)
  return _impl_.granter_.Release();
}
inline void MsgGrant::set_allocated_granter(std::string* value) {
  _impl_.granter_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.granter_.IsDefault()) {
          _impl_.granter_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmos.authz.v1beta1.MsgGrant.granter)
}

// string grantee = 2 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgGrant::clear_grantee() {
  _impl_.grantee_.ClearToEmpty();
}
inline const std::string& MsgGrant::grantee() const {
  // @@protoc_insertion_point(field_get:cosmos.authz.v1beta1.MsgGrant.grantee)
  return _internal_grantee();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgGrant::set_grantee(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.grantee_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmos.authz.v1beta1.MsgGrant.grantee)
}
inline std::string* MsgGrant::mutable_grantee() {
  std::string* _s = _internal_mutable_grantee();
  // @@protoc_insertion_point(field_mutable:cosmos.authz.v1beta1.MsgGrant.grantee)
  return _s;
}
inline const std::string& MsgGrant::_internal_grantee() const {
  return _impl_.grantee_.Get();
}
inline void MsgGrant::_internal_set_grantee(const std::string& value) {
  ;


  _impl_.grantee_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgGrant::_internal_mutable_grantee() {
  ;
  return _impl_.grantee_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgGrant::release_grantee() {
  // @@protoc_insertion_point(field_release:cosmos.authz.v1beta1.MsgGrant.grantee)
  return _impl_.grantee_.Release();
}
inline void MsgGrant::set_allocated_grantee(std::string* value) {
  _impl_.grantee_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.grantee_.IsDefault()) {
          _impl_.grantee_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmos.authz.v1beta1.MsgGrant.grantee)
}

// .cosmos.authz.v1beta1.Grant grant = 3 [json_name = "grant", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline bool MsgGrant::has_grant() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.grant_ != nullptr);
  return value;
}
inline const ::cosmos::authz::v1beta1::Grant& MsgGrant::_internal_grant() const {
  const ::cosmos::authz::v1beta1::Grant* p = _impl_.grant_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::authz::v1beta1::Grant&>(
      ::cosmos::authz::v1beta1::_Grant_default_instance_);
}
inline const ::cosmos::authz::v1beta1::Grant& MsgGrant::grant() const {
  // @@protoc_insertion_point(field_get:cosmos.authz.v1beta1.MsgGrant.grant)
  return _internal_grant();
}
inline void MsgGrant::unsafe_arena_set_allocated_grant(
    ::cosmos::authz::v1beta1::Grant* grant) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.grant_);
  }
  _impl_.grant_ = grant;
  if (grant) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.authz.v1beta1.MsgGrant.grant)
}
inline ::cosmos::authz::v1beta1::Grant* MsgGrant::release_grant() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::authz::v1beta1::Grant* temp = _impl_.grant_;
  _impl_.grant_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::cosmos::authz::v1beta1::Grant* MsgGrant::unsafe_arena_release_grant() {
  // @@protoc_insertion_point(field_release:cosmos.authz.v1beta1.MsgGrant.grant)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::authz::v1beta1::Grant* temp = _impl_.grant_;
  _impl_.grant_ = nullptr;
  return temp;
}
inline ::cosmos::authz::v1beta1::Grant* MsgGrant::_internal_mutable_grant() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.grant_ == nullptr) {
    auto* p = CreateMaybeMessage<::cosmos::authz::v1beta1::Grant>(GetArenaForAllocation());
    _impl_.grant_ = p;
  }
  return _impl_.grant_;
}
inline ::cosmos::authz::v1beta1::Grant* MsgGrant::mutable_grant() {
  ::cosmos::authz::v1beta1::Grant* _msg = _internal_mutable_grant();
  // @@protoc_insertion_point(field_mutable:cosmos.authz.v1beta1.MsgGrant.grant)
  return _msg;
}
inline void MsgGrant::set_allocated_grant(::cosmos::authz::v1beta1::Grant* grant) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.grant_);
  }
  if (grant) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(grant));
    if (message_arena != submessage_arena) {
      grant = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, grant, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.grant_ = grant;
  // @@protoc_insertion_point(field_set_allocated:cosmos.authz.v1beta1.MsgGrant.grant)
}

// -------------------------------------------------------------------

// MsgExecResponse

// repeated bytes results = 1 [json_name = "results"];
inline int MsgExecResponse::_internal_results_size() const {
  return _impl_.results_.size();
}
inline int MsgExecResponse::results_size() const {
  return _internal_results_size();
}
inline void MsgExecResponse::clear_results() {
  _internal_mutable_results()->Clear();
}
inline std::string* MsgExecResponse::add_results() {
  std::string* _s = _internal_add_results();
  // @@protoc_insertion_point(field_add_mutable:cosmos.authz.v1beta1.MsgExecResponse.results)
  return _s;
}
inline const std::string& MsgExecResponse::results(int index) const {
  // @@protoc_insertion_point(field_get:cosmos.authz.v1beta1.MsgExecResponse.results)
  return _internal_results(index);
}
inline std::string* MsgExecResponse::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:cosmos.authz.v1beta1.MsgExecResponse.results)
  return _internal_mutable_results()->Mutable(index);
}
inline void MsgExecResponse::set_results(int index, const std::string& value) {
  _internal_mutable_results()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:cosmos.authz.v1beta1.MsgExecResponse.results)
}
inline void MsgExecResponse::set_results(int index, std::string&& value) {
  _internal_mutable_results()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:cosmos.authz.v1beta1.MsgExecResponse.results)
}
inline void MsgExecResponse::set_results(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_results()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:cosmos.authz.v1beta1.MsgExecResponse.results)
}
inline void MsgExecResponse::set_results(int index, const void* value,
                              std::size_t size) {
  _internal_mutable_results()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:cosmos.authz.v1beta1.MsgExecResponse.results)
}
inline void MsgExecResponse::set_results(int index, absl::string_view value) {
  _internal_mutable_results()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:cosmos.authz.v1beta1.MsgExecResponse.results)
}
inline void MsgExecResponse::add_results(const std::string& value) {
  _internal_mutable_results()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:cosmos.authz.v1beta1.MsgExecResponse.results)
}
inline void MsgExecResponse::add_results(std::string&& value) {
  _internal_mutable_results()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:cosmos.authz.v1beta1.MsgExecResponse.results)
}
inline void MsgExecResponse::add_results(const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_results()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:cosmos.authz.v1beta1.MsgExecResponse.results)
}
inline void MsgExecResponse::add_results(const void* value, std::size_t size) {
  _internal_mutable_results()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:cosmos.authz.v1beta1.MsgExecResponse.results)
}
inline void MsgExecResponse::add_results(absl::string_view value) {
  _internal_mutable_results()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:cosmos.authz.v1beta1.MsgExecResponse.results)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
MsgExecResponse::results() const {
  // @@protoc_insertion_point(field_list:cosmos.authz.v1beta1.MsgExecResponse.results)
  return _internal_results();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* MsgExecResponse::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:cosmos.authz.v1beta1.MsgExecResponse.results)
  return _internal_mutable_results();
}
inline const std::string& MsgExecResponse::_internal_results(int index) const {
  return _internal_results().Get(index);
}
inline std::string* MsgExecResponse::_internal_add_results() {
  return _internal_mutable_results()->Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
MsgExecResponse::_internal_results() const {
  return _impl_.results_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
MsgExecResponse::_internal_mutable_results() {
  return &_impl_.results_;
}

// -------------------------------------------------------------------

// MsgExec

// string grantee = 1 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgExec::clear_grantee() {
  _impl_.grantee_.ClearToEmpty();
}
inline const std::string& MsgExec::grantee() const {
  // @@protoc_insertion_point(field_get:cosmos.authz.v1beta1.MsgExec.grantee)
  return _internal_grantee();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgExec::set_grantee(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.grantee_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmos.authz.v1beta1.MsgExec.grantee)
}
inline std::string* MsgExec::mutable_grantee() {
  std::string* _s = _internal_mutable_grantee();
  // @@protoc_insertion_point(field_mutable:cosmos.authz.v1beta1.MsgExec.grantee)
  return _s;
}
inline const std::string& MsgExec::_internal_grantee() const {
  return _impl_.grantee_.Get();
}
inline void MsgExec::_internal_set_grantee(const std::string& value) {
  ;


  _impl_.grantee_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgExec::_internal_mutable_grantee() {
  ;
  return _impl_.grantee_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgExec::release_grantee() {
  // @@protoc_insertion_point(field_release:cosmos.authz.v1beta1.MsgExec.grantee)
  return _impl_.grantee_.Release();
}
inline void MsgExec::set_allocated_grantee(std::string* value) {
  _impl_.grantee_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.grantee_.IsDefault()) {
          _impl_.grantee_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmos.authz.v1beta1.MsgExec.grantee)
}

// repeated .google.protobuf.Any msgs = 2 [json_name = "msgs", (.cosmos_proto.accepts_interface) = "cosmos.base.v1beta1.Msg"];
inline int MsgExec::_internal_msgs_size() const {
  return _impl_.msgs_.size();
}
inline int MsgExec::msgs_size() const {
  return _internal_msgs_size();
}
inline ::PROTOBUF_NAMESPACE_ID::Any* MsgExec::mutable_msgs(int index) {
  // @@protoc_insertion_point(field_mutable:cosmos.authz.v1beta1.MsgExec.msgs)
  return _internal_mutable_msgs()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::Any >*
MsgExec::mutable_msgs() {
  // @@protoc_insertion_point(field_mutable_list:cosmos.authz.v1beta1.MsgExec.msgs)
  return _internal_mutable_msgs();
}
inline const ::PROTOBUF_NAMESPACE_ID::Any& MsgExec::_internal_msgs(int index) const {
  return _internal_msgs().Get(index);
}
inline const ::PROTOBUF_NAMESPACE_ID::Any& MsgExec::msgs(int index) const {
  // @@protoc_insertion_point(field_get:cosmos.authz.v1beta1.MsgExec.msgs)
  return _internal_msgs(index);
}
inline ::PROTOBUF_NAMESPACE_ID::Any* MsgExec::_internal_add_msgs() {
  return _internal_mutable_msgs()->Add();
}
inline ::PROTOBUF_NAMESPACE_ID::Any* MsgExec::add_msgs() {
  ::PROTOBUF_NAMESPACE_ID::Any* _add = _internal_add_msgs();
  // @@protoc_insertion_point(field_add:cosmos.authz.v1beta1.MsgExec.msgs)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::Any >&
MsgExec::msgs() const {
  // @@protoc_insertion_point(field_list:cosmos.authz.v1beta1.MsgExec.msgs)
  return _internal_msgs();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::PROTOBUF_NAMESPACE_ID::Any>&
MsgExec::_internal_msgs() const {
  return _impl_.msgs_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::PROTOBUF_NAMESPACE_ID::Any>*
MsgExec::_internal_mutable_msgs() {
  return &_impl_.msgs_;
}

// -------------------------------------------------------------------

// MsgGrantResponse

// -------------------------------------------------------------------

// MsgRevoke

// string granter = 1 [json_name = "granter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgRevoke::clear_granter() {
  _impl_.granter_.ClearToEmpty();
}
inline const std::string& MsgRevoke::granter() const {
  // @@protoc_insertion_point(field_get:cosmos.authz.v1beta1.MsgRevoke.granter)
  return _internal_granter();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgRevoke::set_granter(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.granter_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmos.authz.v1beta1.MsgRevoke.granter)
}
inline std::string* MsgRevoke::mutable_granter() {
  std::string* _s = _internal_mutable_granter();
  // @@protoc_insertion_point(field_mutable:cosmos.authz.v1beta1.MsgRevoke.granter)
  return _s;
}
inline const std::string& MsgRevoke::_internal_granter() const {
  return _impl_.granter_.Get();
}
inline void MsgRevoke::_internal_set_granter(const std::string& value) {
  ;


  _impl_.granter_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgRevoke::_internal_mutable_granter() {
  ;
  return _impl_.granter_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgRevoke::release_granter() {
  // @@protoc_insertion_point(field_release:cosmos.authz.v1beta1.MsgRevoke.granter)
  return _impl_.granter_.Release();
}
inline void MsgRevoke::set_allocated_granter(std::string* value) {
  _impl_.granter_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.granter_.IsDefault()) {
          _impl_.granter_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmos.authz.v1beta1.MsgRevoke.granter)
}

// string grantee = 2 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgRevoke::clear_grantee() {
  _impl_.grantee_.ClearToEmpty();
}
inline const std::string& MsgRevoke::grantee() const {
  // @@protoc_insertion_point(field_get:cosmos.authz.v1beta1.MsgRevoke.grantee)
  return _internal_grantee();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgRevoke::set_grantee(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.grantee_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmos.authz.v1beta1.MsgRevoke.grantee)
}
inline std::string* MsgRevoke::mutable_grantee() {
  std::string* _s = _internal_mutable_grantee();
  // @@protoc_insertion_point(field_mutable:cosmos.authz.v1beta1.MsgRevoke.grantee)
  return _s;
}
inline const std::string& MsgRevoke::_internal_grantee() const {
  return _impl_.grantee_.Get();
}
inline void MsgRevoke::_internal_set_grantee(const std::string& value) {
  ;


  _impl_.grantee_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgRevoke::_internal_mutable_grantee() {
  ;
  return _impl_.grantee_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgRevoke::release_grantee() {
  // @@protoc_insertion_point(field_release:cosmos.authz.v1beta1.MsgRevoke.grantee)
  return _impl_.grantee_.Release();
}
inline void MsgRevoke::set_allocated_grantee(std::string* value) {
  _impl_.grantee_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.grantee_.IsDefault()) {
          _impl_.grantee_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmos.authz.v1beta1.MsgRevoke.grantee)
}

// string msg_type_url = 3 [json_name = "msgTypeUrl"];
inline void MsgRevoke::clear_msg_type_url() {
  _impl_.msg_type_url_.ClearToEmpty();
}
inline const std::string& MsgRevoke::msg_type_url() const {
  // @@protoc_insertion_point(field_get:cosmos.authz.v1beta1.MsgRevoke.msg_type_url)
  return _internal_msg_type_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgRevoke::set_msg_type_url(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.msg_type_url_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmos.authz.v1beta1.MsgRevoke.msg_type_url)
}
inline std::string* MsgRevoke::mutable_msg_type_url() {
  std::string* _s = _internal_mutable_msg_type_url();
  // @@protoc_insertion_point(field_mutable:cosmos.authz.v1beta1.MsgRevoke.msg_type_url)
  return _s;
}
inline const std::string& MsgRevoke::_internal_msg_type_url() const {
  return _impl_.msg_type_url_.Get();
}
inline void MsgRevoke::_internal_set_msg_type_url(const std::string& value) {
  ;


  _impl_.msg_type_url_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgRevoke::_internal_mutable_msg_type_url() {
  ;
  return _impl_.msg_type_url_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgRevoke::release_msg_type_url() {
  // @@protoc_insertion_point(field_release:cosmos.authz.v1beta1.MsgRevoke.msg_type_url)
  return _impl_.msg_type_url_.Release();
}
inline void MsgRevoke::set_allocated_msg_type_url(std::string* value) {
  _impl_.msg_type_url_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_type_url_.IsDefault()) {
          _impl_.msg_type_url_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmos.authz.v1beta1.MsgRevoke.msg_type_url)
}

// -------------------------------------------------------------------

// MsgRevokeResponse

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace authz
}  // namespace cosmos


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_cosmos_2fauthz_2fv1beta1_2ftx_2eproto_2epb_2eh
