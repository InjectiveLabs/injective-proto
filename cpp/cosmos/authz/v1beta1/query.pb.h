// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/authz/v1beta1/query.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_cosmos_2fauthz_2fv1beta1_2fquery_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_cosmos_2fauthz_2fv1beta1_2fquery_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4023000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4023004 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "google/api/annotations.pb.h"
#include "cosmos/base/query/v1beta1/pagination.pb.h"
#include "cosmos/authz/v1beta1/authz.pb.h"
#include "cosmos_proto/cosmos.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cosmos_2fauthz_2fv1beta1_2fquery_2eproto

PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_cosmos_2fauthz_2fv1beta1_2fquery_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable
    descriptor_table_cosmos_2fauthz_2fv1beta1_2fquery_2eproto;
namespace cosmos {
namespace authz {
namespace v1beta1 {
class QueryGranteeGrantsRequest;
struct QueryGranteeGrantsRequestDefaultTypeInternal;
extern QueryGranteeGrantsRequestDefaultTypeInternal _QueryGranteeGrantsRequest_default_instance_;
class QueryGranteeGrantsResponse;
struct QueryGranteeGrantsResponseDefaultTypeInternal;
extern QueryGranteeGrantsResponseDefaultTypeInternal _QueryGranteeGrantsResponse_default_instance_;
class QueryGranterGrantsRequest;
struct QueryGranterGrantsRequestDefaultTypeInternal;
extern QueryGranterGrantsRequestDefaultTypeInternal _QueryGranterGrantsRequest_default_instance_;
class QueryGranterGrantsResponse;
struct QueryGranterGrantsResponseDefaultTypeInternal;
extern QueryGranterGrantsResponseDefaultTypeInternal _QueryGranterGrantsResponse_default_instance_;
class QueryGrantsRequest;
struct QueryGrantsRequestDefaultTypeInternal;
extern QueryGrantsRequestDefaultTypeInternal _QueryGrantsRequest_default_instance_;
class QueryGrantsResponse;
struct QueryGrantsResponseDefaultTypeInternal;
extern QueryGrantsResponseDefaultTypeInternal _QueryGrantsResponse_default_instance_;
}  // namespace v1beta1
}  // namespace authz
}  // namespace cosmos
PROTOBUF_NAMESPACE_OPEN
template <>
::cosmos::authz::v1beta1::QueryGranteeGrantsRequest* Arena::CreateMaybeMessage<::cosmos::authz::v1beta1::QueryGranteeGrantsRequest>(Arena*);
template <>
::cosmos::authz::v1beta1::QueryGranteeGrantsResponse* Arena::CreateMaybeMessage<::cosmos::authz::v1beta1::QueryGranteeGrantsResponse>(Arena*);
template <>
::cosmos::authz::v1beta1::QueryGranterGrantsRequest* Arena::CreateMaybeMessage<::cosmos::authz::v1beta1::QueryGranterGrantsRequest>(Arena*);
template <>
::cosmos::authz::v1beta1::QueryGranterGrantsResponse* Arena::CreateMaybeMessage<::cosmos::authz::v1beta1::QueryGranterGrantsResponse>(Arena*);
template <>
::cosmos::authz::v1beta1::QueryGrantsRequest* Arena::CreateMaybeMessage<::cosmos::authz::v1beta1::QueryGrantsRequest>(Arena*);
template <>
::cosmos::authz::v1beta1::QueryGrantsResponse* Arena::CreateMaybeMessage<::cosmos::authz::v1beta1::QueryGrantsResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

namespace cosmos {
namespace authz {
namespace v1beta1 {

// ===================================================================


// -------------------------------------------------------------------

class QueryGrantsRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.authz.v1beta1.QueryGrantsRequest) */ {
 public:
  inline QueryGrantsRequest() : QueryGrantsRequest(nullptr) {}
  ~QueryGrantsRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryGrantsRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QueryGrantsRequest(const QueryGrantsRequest& from);
  QueryGrantsRequest(QueryGrantsRequest&& from) noexcept
    : QueryGrantsRequest() {
    *this = ::std::move(from);
  }

  inline QueryGrantsRequest& operator=(const QueryGrantsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryGrantsRequest& operator=(QueryGrantsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryGrantsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryGrantsRequest* internal_default_instance() {
    return reinterpret_cast<const QueryGrantsRequest*>(
               &_QueryGrantsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(QueryGrantsRequest& a, QueryGrantsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryGrantsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryGrantsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryGrantsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryGrantsRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const QueryGrantsRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const QueryGrantsRequest& from) {
    QueryGrantsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryGrantsRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.authz.v1beta1.QueryGrantsRequest";
  }
  protected:
  explicit QueryGrantsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGranterFieldNumber = 1,
    kGranteeFieldNumber = 2,
    kMsgTypeUrlFieldNumber = 3,
    kPaginationFieldNumber = 4,
  };
  // string granter = 1 [json_name = "granter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_granter() ;
  const std::string& granter() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_granter(Arg_&& arg, Args_... args);
  std::string* mutable_granter();
  PROTOBUF_NODISCARD std::string* release_granter();
  void set_allocated_granter(std::string* ptr);

  private:
  const std::string& _internal_granter() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_granter(
      const std::string& value);
  std::string* _internal_mutable_granter();

  public:
  // string grantee = 2 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_grantee() ;
  const std::string& grantee() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_grantee(Arg_&& arg, Args_... args);
  std::string* mutable_grantee();
  PROTOBUF_NODISCARD std::string* release_grantee();
  void set_allocated_grantee(std::string* ptr);

  private:
  const std::string& _internal_grantee() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_grantee(
      const std::string& value);
  std::string* _internal_mutable_grantee();

  public:
  // string msg_type_url = 3 [json_name = "msgTypeUrl"];
  void clear_msg_type_url() ;
  const std::string& msg_type_url() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg_type_url(Arg_&& arg, Args_... args);
  std::string* mutable_msg_type_url();
  PROTOBUF_NODISCARD std::string* release_msg_type_url();
  void set_allocated_msg_type_url(std::string* ptr);

  private:
  const std::string& _internal_msg_type_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg_type_url(
      const std::string& value);
  std::string* _internal_mutable_msg_type_url();

  public:
  // .cosmos.base.query.v1beta1.PageRequest pagination = 4 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageRequest& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageRequest* release_pagination();
  ::cosmos::base::query::v1beta1::PageRequest* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* pagination);
  private:
  const ::cosmos::base::query::v1beta1::PageRequest& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageRequest* _internal_mutable_pagination();
  public:
  void unsafe_arena_set_allocated_pagination(
      ::cosmos::base::query::v1beta1::PageRequest* pagination);
  ::cosmos::base::query::v1beta1::PageRequest* unsafe_arena_release_pagination();
  // @@protoc_insertion_point(class_scope:cosmos.authz.v1beta1.QueryGrantsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr granter_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr grantee_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr msg_type_url_;
    ::cosmos::base::query::v1beta1::PageRequest* pagination_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fauthz_2fv1beta1_2fquery_2eproto;
};// -------------------------------------------------------------------

class QueryGrantsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.authz.v1beta1.QueryGrantsResponse) */ {
 public:
  inline QueryGrantsResponse() : QueryGrantsResponse(nullptr) {}
  ~QueryGrantsResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryGrantsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QueryGrantsResponse(const QueryGrantsResponse& from);
  QueryGrantsResponse(QueryGrantsResponse&& from) noexcept
    : QueryGrantsResponse() {
    *this = ::std::move(from);
  }

  inline QueryGrantsResponse& operator=(const QueryGrantsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryGrantsResponse& operator=(QueryGrantsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryGrantsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryGrantsResponse* internal_default_instance() {
    return reinterpret_cast<const QueryGrantsResponse*>(
               &_QueryGrantsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(QueryGrantsResponse& a, QueryGrantsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryGrantsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryGrantsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryGrantsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryGrantsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const QueryGrantsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const QueryGrantsResponse& from) {
    QueryGrantsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryGrantsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.authz.v1beta1.QueryGrantsResponse";
  }
  protected:
  explicit QueryGrantsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGrantsFieldNumber = 1,
    kPaginationFieldNumber = 2,
  };
  // repeated .cosmos.authz.v1beta1.Grant grants = 1 [json_name = "grants"];
  int grants_size() const;
  private:
  int _internal_grants_size() const;

  public:
  void clear_grants() ;
  ::cosmos::authz::v1beta1::Grant* mutable_grants(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::authz::v1beta1::Grant >*
      mutable_grants();
  private:
  const ::cosmos::authz::v1beta1::Grant& _internal_grants(int index) const;
  ::cosmos::authz::v1beta1::Grant* _internal_add_grants();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::authz::v1beta1::Grant>& _internal_grants() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::authz::v1beta1::Grant>* _internal_mutable_grants();
  public:
  const ::cosmos::authz::v1beta1::Grant& grants(int index) const;
  ::cosmos::authz::v1beta1::Grant* add_grants();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::authz::v1beta1::Grant >&
      grants() const;
  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageResponse& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageResponse* release_pagination();
  ::cosmos::base::query::v1beta1::PageResponse* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* pagination);
  private:
  const ::cosmos::base::query::v1beta1::PageResponse& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageResponse* _internal_mutable_pagination();
  public:
  void unsafe_arena_set_allocated_pagination(
      ::cosmos::base::query::v1beta1::PageResponse* pagination);
  ::cosmos::base::query::v1beta1::PageResponse* unsafe_arena_release_pagination();
  // @@protoc_insertion_point(class_scope:cosmos.authz.v1beta1.QueryGrantsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::authz::v1beta1::Grant > grants_;
    ::cosmos::base::query::v1beta1::PageResponse* pagination_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fauthz_2fv1beta1_2fquery_2eproto;
};// -------------------------------------------------------------------

class QueryGranterGrantsRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.authz.v1beta1.QueryGranterGrantsRequest) */ {
 public:
  inline QueryGranterGrantsRequest() : QueryGranterGrantsRequest(nullptr) {}
  ~QueryGranterGrantsRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryGranterGrantsRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QueryGranterGrantsRequest(const QueryGranterGrantsRequest& from);
  QueryGranterGrantsRequest(QueryGranterGrantsRequest&& from) noexcept
    : QueryGranterGrantsRequest() {
    *this = ::std::move(from);
  }

  inline QueryGranterGrantsRequest& operator=(const QueryGranterGrantsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryGranterGrantsRequest& operator=(QueryGranterGrantsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryGranterGrantsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryGranterGrantsRequest* internal_default_instance() {
    return reinterpret_cast<const QueryGranterGrantsRequest*>(
               &_QueryGranterGrantsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(QueryGranterGrantsRequest& a, QueryGranterGrantsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryGranterGrantsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryGranterGrantsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryGranterGrantsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryGranterGrantsRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const QueryGranterGrantsRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const QueryGranterGrantsRequest& from) {
    QueryGranterGrantsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryGranterGrantsRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.authz.v1beta1.QueryGranterGrantsRequest";
  }
  protected:
  explicit QueryGranterGrantsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGranterFieldNumber = 1,
    kPaginationFieldNumber = 2,
  };
  // string granter = 1 [json_name = "granter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_granter() ;
  const std::string& granter() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_granter(Arg_&& arg, Args_... args);
  std::string* mutable_granter();
  PROTOBUF_NODISCARD std::string* release_granter();
  void set_allocated_granter(std::string* ptr);

  private:
  const std::string& _internal_granter() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_granter(
      const std::string& value);
  std::string* _internal_mutable_granter();

  public:
  // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageRequest& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageRequest* release_pagination();
  ::cosmos::base::query::v1beta1::PageRequest* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* pagination);
  private:
  const ::cosmos::base::query::v1beta1::PageRequest& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageRequest* _internal_mutable_pagination();
  public:
  void unsafe_arena_set_allocated_pagination(
      ::cosmos::base::query::v1beta1::PageRequest* pagination);
  ::cosmos::base::query::v1beta1::PageRequest* unsafe_arena_release_pagination();
  // @@protoc_insertion_point(class_scope:cosmos.authz.v1beta1.QueryGranterGrantsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr granter_;
    ::cosmos::base::query::v1beta1::PageRequest* pagination_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fauthz_2fv1beta1_2fquery_2eproto;
};// -------------------------------------------------------------------

class QueryGranterGrantsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.authz.v1beta1.QueryGranterGrantsResponse) */ {
 public:
  inline QueryGranterGrantsResponse() : QueryGranterGrantsResponse(nullptr) {}
  ~QueryGranterGrantsResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryGranterGrantsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QueryGranterGrantsResponse(const QueryGranterGrantsResponse& from);
  QueryGranterGrantsResponse(QueryGranterGrantsResponse&& from) noexcept
    : QueryGranterGrantsResponse() {
    *this = ::std::move(from);
  }

  inline QueryGranterGrantsResponse& operator=(const QueryGranterGrantsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryGranterGrantsResponse& operator=(QueryGranterGrantsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryGranterGrantsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryGranterGrantsResponse* internal_default_instance() {
    return reinterpret_cast<const QueryGranterGrantsResponse*>(
               &_QueryGranterGrantsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(QueryGranterGrantsResponse& a, QueryGranterGrantsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryGranterGrantsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryGranterGrantsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryGranterGrantsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryGranterGrantsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const QueryGranterGrantsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const QueryGranterGrantsResponse& from) {
    QueryGranterGrantsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryGranterGrantsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.authz.v1beta1.QueryGranterGrantsResponse";
  }
  protected:
  explicit QueryGranterGrantsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGrantsFieldNumber = 1,
    kPaginationFieldNumber = 2,
  };
  // repeated .cosmos.authz.v1beta1.GrantAuthorization grants = 1 [json_name = "grants"];
  int grants_size() const;
  private:
  int _internal_grants_size() const;

  public:
  void clear_grants() ;
  ::cosmos::authz::v1beta1::GrantAuthorization* mutable_grants(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::authz::v1beta1::GrantAuthorization >*
      mutable_grants();
  private:
  const ::cosmos::authz::v1beta1::GrantAuthorization& _internal_grants(int index) const;
  ::cosmos::authz::v1beta1::GrantAuthorization* _internal_add_grants();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::authz::v1beta1::GrantAuthorization>& _internal_grants() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::authz::v1beta1::GrantAuthorization>* _internal_mutable_grants();
  public:
  const ::cosmos::authz::v1beta1::GrantAuthorization& grants(int index) const;
  ::cosmos::authz::v1beta1::GrantAuthorization* add_grants();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::authz::v1beta1::GrantAuthorization >&
      grants() const;
  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageResponse& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageResponse* release_pagination();
  ::cosmos::base::query::v1beta1::PageResponse* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* pagination);
  private:
  const ::cosmos::base::query::v1beta1::PageResponse& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageResponse* _internal_mutable_pagination();
  public:
  void unsafe_arena_set_allocated_pagination(
      ::cosmos::base::query::v1beta1::PageResponse* pagination);
  ::cosmos::base::query::v1beta1::PageResponse* unsafe_arena_release_pagination();
  // @@protoc_insertion_point(class_scope:cosmos.authz.v1beta1.QueryGranterGrantsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::authz::v1beta1::GrantAuthorization > grants_;
    ::cosmos::base::query::v1beta1::PageResponse* pagination_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fauthz_2fv1beta1_2fquery_2eproto;
};// -------------------------------------------------------------------

class QueryGranteeGrantsRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.authz.v1beta1.QueryGranteeGrantsRequest) */ {
 public:
  inline QueryGranteeGrantsRequest() : QueryGranteeGrantsRequest(nullptr) {}
  ~QueryGranteeGrantsRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryGranteeGrantsRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QueryGranteeGrantsRequest(const QueryGranteeGrantsRequest& from);
  QueryGranteeGrantsRequest(QueryGranteeGrantsRequest&& from) noexcept
    : QueryGranteeGrantsRequest() {
    *this = ::std::move(from);
  }

  inline QueryGranteeGrantsRequest& operator=(const QueryGranteeGrantsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryGranteeGrantsRequest& operator=(QueryGranteeGrantsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryGranteeGrantsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryGranteeGrantsRequest* internal_default_instance() {
    return reinterpret_cast<const QueryGranteeGrantsRequest*>(
               &_QueryGranteeGrantsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(QueryGranteeGrantsRequest& a, QueryGranteeGrantsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryGranteeGrantsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryGranteeGrantsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryGranteeGrantsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryGranteeGrantsRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const QueryGranteeGrantsRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const QueryGranteeGrantsRequest& from) {
    QueryGranteeGrantsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryGranteeGrantsRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.authz.v1beta1.QueryGranteeGrantsRequest";
  }
  protected:
  explicit QueryGranteeGrantsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGranteeFieldNumber = 1,
    kPaginationFieldNumber = 2,
  };
  // string grantee = 1 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_grantee() ;
  const std::string& grantee() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_grantee(Arg_&& arg, Args_... args);
  std::string* mutable_grantee();
  PROTOBUF_NODISCARD std::string* release_grantee();
  void set_allocated_grantee(std::string* ptr);

  private:
  const std::string& _internal_grantee() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_grantee(
      const std::string& value);
  std::string* _internal_mutable_grantee();

  public:
  // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageRequest& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageRequest* release_pagination();
  ::cosmos::base::query::v1beta1::PageRequest* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* pagination);
  private:
  const ::cosmos::base::query::v1beta1::PageRequest& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageRequest* _internal_mutable_pagination();
  public:
  void unsafe_arena_set_allocated_pagination(
      ::cosmos::base::query::v1beta1::PageRequest* pagination);
  ::cosmos::base::query::v1beta1::PageRequest* unsafe_arena_release_pagination();
  // @@protoc_insertion_point(class_scope:cosmos.authz.v1beta1.QueryGranteeGrantsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr grantee_;
    ::cosmos::base::query::v1beta1::PageRequest* pagination_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fauthz_2fv1beta1_2fquery_2eproto;
};// -------------------------------------------------------------------

class QueryGranteeGrantsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.authz.v1beta1.QueryGranteeGrantsResponse) */ {
 public:
  inline QueryGranteeGrantsResponse() : QueryGranteeGrantsResponse(nullptr) {}
  ~QueryGranteeGrantsResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryGranteeGrantsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QueryGranteeGrantsResponse(const QueryGranteeGrantsResponse& from);
  QueryGranteeGrantsResponse(QueryGranteeGrantsResponse&& from) noexcept
    : QueryGranteeGrantsResponse() {
    *this = ::std::move(from);
  }

  inline QueryGranteeGrantsResponse& operator=(const QueryGranteeGrantsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryGranteeGrantsResponse& operator=(QueryGranteeGrantsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryGranteeGrantsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryGranteeGrantsResponse* internal_default_instance() {
    return reinterpret_cast<const QueryGranteeGrantsResponse*>(
               &_QueryGranteeGrantsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(QueryGranteeGrantsResponse& a, QueryGranteeGrantsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryGranteeGrantsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryGranteeGrantsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryGranteeGrantsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryGranteeGrantsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const QueryGranteeGrantsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const QueryGranteeGrantsResponse& from) {
    QueryGranteeGrantsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryGranteeGrantsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.authz.v1beta1.QueryGranteeGrantsResponse";
  }
  protected:
  explicit QueryGranteeGrantsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGrantsFieldNumber = 1,
    kPaginationFieldNumber = 2,
  };
  // repeated .cosmos.authz.v1beta1.GrantAuthorization grants = 1 [json_name = "grants"];
  int grants_size() const;
  private:
  int _internal_grants_size() const;

  public:
  void clear_grants() ;
  ::cosmos::authz::v1beta1::GrantAuthorization* mutable_grants(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::authz::v1beta1::GrantAuthorization >*
      mutable_grants();
  private:
  const ::cosmos::authz::v1beta1::GrantAuthorization& _internal_grants(int index) const;
  ::cosmos::authz::v1beta1::GrantAuthorization* _internal_add_grants();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::authz::v1beta1::GrantAuthorization>& _internal_grants() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::authz::v1beta1::GrantAuthorization>* _internal_mutable_grants();
  public:
  const ::cosmos::authz::v1beta1::GrantAuthorization& grants(int index) const;
  ::cosmos::authz::v1beta1::GrantAuthorization* add_grants();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::authz::v1beta1::GrantAuthorization >&
      grants() const;
  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageResponse& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageResponse* release_pagination();
  ::cosmos::base::query::v1beta1::PageResponse* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* pagination);
  private:
  const ::cosmos::base::query::v1beta1::PageResponse& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageResponse* _internal_mutable_pagination();
  public:
  void unsafe_arena_set_allocated_pagination(
      ::cosmos::base::query::v1beta1::PageResponse* pagination);
  ::cosmos::base::query::v1beta1::PageResponse* unsafe_arena_release_pagination();
  // @@protoc_insertion_point(class_scope:cosmos.authz.v1beta1.QueryGranteeGrantsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::authz::v1beta1::GrantAuthorization > grants_;
    ::cosmos::base::query::v1beta1::PageResponse* pagination_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fauthz_2fv1beta1_2fquery_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// QueryGrantsRequest

// string granter = 1 [json_name = "granter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void QueryGrantsRequest::clear_granter() {
  _impl_.granter_.ClearToEmpty();
}
inline const std::string& QueryGrantsRequest::granter() const {
  // @@protoc_insertion_point(field_get:cosmos.authz.v1beta1.QueryGrantsRequest.granter)
  return _internal_granter();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryGrantsRequest::set_granter(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.granter_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmos.authz.v1beta1.QueryGrantsRequest.granter)
}
inline std::string* QueryGrantsRequest::mutable_granter() {
  std::string* _s = _internal_mutable_granter();
  // @@protoc_insertion_point(field_mutable:cosmos.authz.v1beta1.QueryGrantsRequest.granter)
  return _s;
}
inline const std::string& QueryGrantsRequest::_internal_granter() const {
  return _impl_.granter_.Get();
}
inline void QueryGrantsRequest::_internal_set_granter(const std::string& value) {
  ;


  _impl_.granter_.Set(value, GetArenaForAllocation());
}
inline std::string* QueryGrantsRequest::_internal_mutable_granter() {
  ;
  return _impl_.granter_.Mutable( GetArenaForAllocation());
}
inline std::string* QueryGrantsRequest::release_granter() {
  // @@protoc_insertion_point(field_release:cosmos.authz.v1beta1.QueryGrantsRequest.granter)
  return _impl_.granter_.Release();
}
inline void QueryGrantsRequest::set_allocated_granter(std::string* value) {
  _impl_.granter_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.granter_.IsDefault()) {
          _impl_.granter_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmos.authz.v1beta1.QueryGrantsRequest.granter)
}

// string grantee = 2 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void QueryGrantsRequest::clear_grantee() {
  _impl_.grantee_.ClearToEmpty();
}
inline const std::string& QueryGrantsRequest::grantee() const {
  // @@protoc_insertion_point(field_get:cosmos.authz.v1beta1.QueryGrantsRequest.grantee)
  return _internal_grantee();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryGrantsRequest::set_grantee(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.grantee_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmos.authz.v1beta1.QueryGrantsRequest.grantee)
}
inline std::string* QueryGrantsRequest::mutable_grantee() {
  std::string* _s = _internal_mutable_grantee();
  // @@protoc_insertion_point(field_mutable:cosmos.authz.v1beta1.QueryGrantsRequest.grantee)
  return _s;
}
inline const std::string& QueryGrantsRequest::_internal_grantee() const {
  return _impl_.grantee_.Get();
}
inline void QueryGrantsRequest::_internal_set_grantee(const std::string& value) {
  ;


  _impl_.grantee_.Set(value, GetArenaForAllocation());
}
inline std::string* QueryGrantsRequest::_internal_mutable_grantee() {
  ;
  return _impl_.grantee_.Mutable( GetArenaForAllocation());
}
inline std::string* QueryGrantsRequest::release_grantee() {
  // @@protoc_insertion_point(field_release:cosmos.authz.v1beta1.QueryGrantsRequest.grantee)
  return _impl_.grantee_.Release();
}
inline void QueryGrantsRequest::set_allocated_grantee(std::string* value) {
  _impl_.grantee_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.grantee_.IsDefault()) {
          _impl_.grantee_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmos.authz.v1beta1.QueryGrantsRequest.grantee)
}

// string msg_type_url = 3 [json_name = "msgTypeUrl"];
inline void QueryGrantsRequest::clear_msg_type_url() {
  _impl_.msg_type_url_.ClearToEmpty();
}
inline const std::string& QueryGrantsRequest::msg_type_url() const {
  // @@protoc_insertion_point(field_get:cosmos.authz.v1beta1.QueryGrantsRequest.msg_type_url)
  return _internal_msg_type_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryGrantsRequest::set_msg_type_url(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.msg_type_url_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmos.authz.v1beta1.QueryGrantsRequest.msg_type_url)
}
inline std::string* QueryGrantsRequest::mutable_msg_type_url() {
  std::string* _s = _internal_mutable_msg_type_url();
  // @@protoc_insertion_point(field_mutable:cosmos.authz.v1beta1.QueryGrantsRequest.msg_type_url)
  return _s;
}
inline const std::string& QueryGrantsRequest::_internal_msg_type_url() const {
  return _impl_.msg_type_url_.Get();
}
inline void QueryGrantsRequest::_internal_set_msg_type_url(const std::string& value) {
  ;


  _impl_.msg_type_url_.Set(value, GetArenaForAllocation());
}
inline std::string* QueryGrantsRequest::_internal_mutable_msg_type_url() {
  ;
  return _impl_.msg_type_url_.Mutable( GetArenaForAllocation());
}
inline std::string* QueryGrantsRequest::release_msg_type_url() {
  // @@protoc_insertion_point(field_release:cosmos.authz.v1beta1.QueryGrantsRequest.msg_type_url)
  return _impl_.msg_type_url_.Release();
}
inline void QueryGrantsRequest::set_allocated_msg_type_url(std::string* value) {
  _impl_.msg_type_url_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_type_url_.IsDefault()) {
          _impl_.msg_type_url_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmos.authz.v1beta1.QueryGrantsRequest.msg_type_url)
}

// .cosmos.base.query.v1beta1.PageRequest pagination = 4 [json_name = "pagination"];
inline bool QueryGrantsRequest::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageRequest& QueryGrantsRequest::_internal_pagination() const {
  const ::cosmos::base::query::v1beta1::PageRequest* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageRequest&>(
      ::cosmos::base::query::v1beta1::_PageRequest_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageRequest& QueryGrantsRequest::pagination() const {
  // @@protoc_insertion_point(field_get:cosmos.authz.v1beta1.QueryGrantsRequest.pagination)
  return _internal_pagination();
}
inline void QueryGrantsRequest::unsafe_arena_set_allocated_pagination(
    ::cosmos::base::query::v1beta1::PageRequest* pagination) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = pagination;
  if (pagination) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.authz.v1beta1.QueryGrantsRequest.pagination)
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryGrantsRequest::release_pagination() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryGrantsRequest::unsafe_arena_release_pagination() {
  // @@protoc_insertion_point(field_release:cosmos.authz.v1beta1.QueryGrantsRequest.pagination)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryGrantsRequest::_internal_mutable_pagination() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.pagination_ == nullptr) {
    auto* p = CreateMaybeMessage<::cosmos::base::query::v1beta1::PageRequest>(GetArenaForAllocation());
    _impl_.pagination_ = p;
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryGrantsRequest::mutable_pagination() {
  ::cosmos::base::query::v1beta1::PageRequest* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmos.authz.v1beta1.QueryGrantsRequest.pagination)
  return _msg;
}
inline void QueryGrantsRequest::set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* pagination) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.pagination_);
  }
  if (pagination) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(pagination));
    if (message_arena != submessage_arena) {
      pagination = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pagination, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.pagination_ = pagination;
  // @@protoc_insertion_point(field_set_allocated:cosmos.authz.v1beta1.QueryGrantsRequest.pagination)
}

// -------------------------------------------------------------------

// QueryGrantsResponse

// repeated .cosmos.authz.v1beta1.Grant grants = 1 [json_name = "grants"];
inline int QueryGrantsResponse::_internal_grants_size() const {
  return _impl_.grants_.size();
}
inline int QueryGrantsResponse::grants_size() const {
  return _internal_grants_size();
}
inline ::cosmos::authz::v1beta1::Grant* QueryGrantsResponse::mutable_grants(int index) {
  // @@protoc_insertion_point(field_mutable:cosmos.authz.v1beta1.QueryGrantsResponse.grants)
  return _internal_mutable_grants()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::authz::v1beta1::Grant >*
QueryGrantsResponse::mutable_grants() {
  // @@protoc_insertion_point(field_mutable_list:cosmos.authz.v1beta1.QueryGrantsResponse.grants)
  return _internal_mutable_grants();
}
inline const ::cosmos::authz::v1beta1::Grant& QueryGrantsResponse::_internal_grants(int index) const {
  return _internal_grants().Get(index);
}
inline const ::cosmos::authz::v1beta1::Grant& QueryGrantsResponse::grants(int index) const {
  // @@protoc_insertion_point(field_get:cosmos.authz.v1beta1.QueryGrantsResponse.grants)
  return _internal_grants(index);
}
inline ::cosmos::authz::v1beta1::Grant* QueryGrantsResponse::_internal_add_grants() {
  return _internal_mutable_grants()->Add();
}
inline ::cosmos::authz::v1beta1::Grant* QueryGrantsResponse::add_grants() {
  ::cosmos::authz::v1beta1::Grant* _add = _internal_add_grants();
  // @@protoc_insertion_point(field_add:cosmos.authz.v1beta1.QueryGrantsResponse.grants)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::authz::v1beta1::Grant >&
QueryGrantsResponse::grants() const {
  // @@protoc_insertion_point(field_list:cosmos.authz.v1beta1.QueryGrantsResponse.grants)
  return _internal_grants();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::authz::v1beta1::Grant>&
QueryGrantsResponse::_internal_grants() const {
  return _impl_.grants_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::authz::v1beta1::Grant>*
QueryGrantsResponse::_internal_mutable_grants() {
  return &_impl_.grants_;
}

// .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
inline bool QueryGrantsResponse::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageResponse& QueryGrantsResponse::_internal_pagination() const {
  const ::cosmos::base::query::v1beta1::PageResponse* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageResponse&>(
      ::cosmos::base::query::v1beta1::_PageResponse_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageResponse& QueryGrantsResponse::pagination() const {
  // @@protoc_insertion_point(field_get:cosmos.authz.v1beta1.QueryGrantsResponse.pagination)
  return _internal_pagination();
}
inline void QueryGrantsResponse::unsafe_arena_set_allocated_pagination(
    ::cosmos::base::query::v1beta1::PageResponse* pagination) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = pagination;
  if (pagination) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.authz.v1beta1.QueryGrantsResponse.pagination)
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryGrantsResponse::release_pagination() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryGrantsResponse::unsafe_arena_release_pagination() {
  // @@protoc_insertion_point(field_release:cosmos.authz.v1beta1.QueryGrantsResponse.pagination)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryGrantsResponse::_internal_mutable_pagination() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.pagination_ == nullptr) {
    auto* p = CreateMaybeMessage<::cosmos::base::query::v1beta1::PageResponse>(GetArenaForAllocation());
    _impl_.pagination_ = p;
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryGrantsResponse::mutable_pagination() {
  ::cosmos::base::query::v1beta1::PageResponse* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmos.authz.v1beta1.QueryGrantsResponse.pagination)
  return _msg;
}
inline void QueryGrantsResponse::set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* pagination) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.pagination_);
  }
  if (pagination) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(pagination));
    if (message_arena != submessage_arena) {
      pagination = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pagination, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.pagination_ = pagination;
  // @@protoc_insertion_point(field_set_allocated:cosmos.authz.v1beta1.QueryGrantsResponse.pagination)
}

// -------------------------------------------------------------------

// QueryGranterGrantsRequest

// string granter = 1 [json_name = "granter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void QueryGranterGrantsRequest::clear_granter() {
  _impl_.granter_.ClearToEmpty();
}
inline const std::string& QueryGranterGrantsRequest::granter() const {
  // @@protoc_insertion_point(field_get:cosmos.authz.v1beta1.QueryGranterGrantsRequest.granter)
  return _internal_granter();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryGranterGrantsRequest::set_granter(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.granter_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmos.authz.v1beta1.QueryGranterGrantsRequest.granter)
}
inline std::string* QueryGranterGrantsRequest::mutable_granter() {
  std::string* _s = _internal_mutable_granter();
  // @@protoc_insertion_point(field_mutable:cosmos.authz.v1beta1.QueryGranterGrantsRequest.granter)
  return _s;
}
inline const std::string& QueryGranterGrantsRequest::_internal_granter() const {
  return _impl_.granter_.Get();
}
inline void QueryGranterGrantsRequest::_internal_set_granter(const std::string& value) {
  ;


  _impl_.granter_.Set(value, GetArenaForAllocation());
}
inline std::string* QueryGranterGrantsRequest::_internal_mutable_granter() {
  ;
  return _impl_.granter_.Mutable( GetArenaForAllocation());
}
inline std::string* QueryGranterGrantsRequest::release_granter() {
  // @@protoc_insertion_point(field_release:cosmos.authz.v1beta1.QueryGranterGrantsRequest.granter)
  return _impl_.granter_.Release();
}
inline void QueryGranterGrantsRequest::set_allocated_granter(std::string* value) {
  _impl_.granter_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.granter_.IsDefault()) {
          _impl_.granter_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmos.authz.v1beta1.QueryGranterGrantsRequest.granter)
}

// .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
inline bool QueryGranterGrantsRequest::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageRequest& QueryGranterGrantsRequest::_internal_pagination() const {
  const ::cosmos::base::query::v1beta1::PageRequest* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageRequest&>(
      ::cosmos::base::query::v1beta1::_PageRequest_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageRequest& QueryGranterGrantsRequest::pagination() const {
  // @@protoc_insertion_point(field_get:cosmos.authz.v1beta1.QueryGranterGrantsRequest.pagination)
  return _internal_pagination();
}
inline void QueryGranterGrantsRequest::unsafe_arena_set_allocated_pagination(
    ::cosmos::base::query::v1beta1::PageRequest* pagination) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = pagination;
  if (pagination) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.authz.v1beta1.QueryGranterGrantsRequest.pagination)
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryGranterGrantsRequest::release_pagination() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryGranterGrantsRequest::unsafe_arena_release_pagination() {
  // @@protoc_insertion_point(field_release:cosmos.authz.v1beta1.QueryGranterGrantsRequest.pagination)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryGranterGrantsRequest::_internal_mutable_pagination() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.pagination_ == nullptr) {
    auto* p = CreateMaybeMessage<::cosmos::base::query::v1beta1::PageRequest>(GetArenaForAllocation());
    _impl_.pagination_ = p;
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryGranterGrantsRequest::mutable_pagination() {
  ::cosmos::base::query::v1beta1::PageRequest* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmos.authz.v1beta1.QueryGranterGrantsRequest.pagination)
  return _msg;
}
inline void QueryGranterGrantsRequest::set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* pagination) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.pagination_);
  }
  if (pagination) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(pagination));
    if (message_arena != submessage_arena) {
      pagination = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pagination, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.pagination_ = pagination;
  // @@protoc_insertion_point(field_set_allocated:cosmos.authz.v1beta1.QueryGranterGrantsRequest.pagination)
}

// -------------------------------------------------------------------

// QueryGranterGrantsResponse

// repeated .cosmos.authz.v1beta1.GrantAuthorization grants = 1 [json_name = "grants"];
inline int QueryGranterGrantsResponse::_internal_grants_size() const {
  return _impl_.grants_.size();
}
inline int QueryGranterGrantsResponse::grants_size() const {
  return _internal_grants_size();
}
inline ::cosmos::authz::v1beta1::GrantAuthorization* QueryGranterGrantsResponse::mutable_grants(int index) {
  // @@protoc_insertion_point(field_mutable:cosmos.authz.v1beta1.QueryGranterGrantsResponse.grants)
  return _internal_mutable_grants()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::authz::v1beta1::GrantAuthorization >*
QueryGranterGrantsResponse::mutable_grants() {
  // @@protoc_insertion_point(field_mutable_list:cosmos.authz.v1beta1.QueryGranterGrantsResponse.grants)
  return _internal_mutable_grants();
}
inline const ::cosmos::authz::v1beta1::GrantAuthorization& QueryGranterGrantsResponse::_internal_grants(int index) const {
  return _internal_grants().Get(index);
}
inline const ::cosmos::authz::v1beta1::GrantAuthorization& QueryGranterGrantsResponse::grants(int index) const {
  // @@protoc_insertion_point(field_get:cosmos.authz.v1beta1.QueryGranterGrantsResponse.grants)
  return _internal_grants(index);
}
inline ::cosmos::authz::v1beta1::GrantAuthorization* QueryGranterGrantsResponse::_internal_add_grants() {
  return _internal_mutable_grants()->Add();
}
inline ::cosmos::authz::v1beta1::GrantAuthorization* QueryGranterGrantsResponse::add_grants() {
  ::cosmos::authz::v1beta1::GrantAuthorization* _add = _internal_add_grants();
  // @@protoc_insertion_point(field_add:cosmos.authz.v1beta1.QueryGranterGrantsResponse.grants)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::authz::v1beta1::GrantAuthorization >&
QueryGranterGrantsResponse::grants() const {
  // @@protoc_insertion_point(field_list:cosmos.authz.v1beta1.QueryGranterGrantsResponse.grants)
  return _internal_grants();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::authz::v1beta1::GrantAuthorization>&
QueryGranterGrantsResponse::_internal_grants() const {
  return _impl_.grants_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::authz::v1beta1::GrantAuthorization>*
QueryGranterGrantsResponse::_internal_mutable_grants() {
  return &_impl_.grants_;
}

// .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
inline bool QueryGranterGrantsResponse::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageResponse& QueryGranterGrantsResponse::_internal_pagination() const {
  const ::cosmos::base::query::v1beta1::PageResponse* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageResponse&>(
      ::cosmos::base::query::v1beta1::_PageResponse_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageResponse& QueryGranterGrantsResponse::pagination() const {
  // @@protoc_insertion_point(field_get:cosmos.authz.v1beta1.QueryGranterGrantsResponse.pagination)
  return _internal_pagination();
}
inline void QueryGranterGrantsResponse::unsafe_arena_set_allocated_pagination(
    ::cosmos::base::query::v1beta1::PageResponse* pagination) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = pagination;
  if (pagination) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.authz.v1beta1.QueryGranterGrantsResponse.pagination)
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryGranterGrantsResponse::release_pagination() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryGranterGrantsResponse::unsafe_arena_release_pagination() {
  // @@protoc_insertion_point(field_release:cosmos.authz.v1beta1.QueryGranterGrantsResponse.pagination)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryGranterGrantsResponse::_internal_mutable_pagination() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.pagination_ == nullptr) {
    auto* p = CreateMaybeMessage<::cosmos::base::query::v1beta1::PageResponse>(GetArenaForAllocation());
    _impl_.pagination_ = p;
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryGranterGrantsResponse::mutable_pagination() {
  ::cosmos::base::query::v1beta1::PageResponse* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmos.authz.v1beta1.QueryGranterGrantsResponse.pagination)
  return _msg;
}
inline void QueryGranterGrantsResponse::set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* pagination) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.pagination_);
  }
  if (pagination) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(pagination));
    if (message_arena != submessage_arena) {
      pagination = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pagination, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.pagination_ = pagination;
  // @@protoc_insertion_point(field_set_allocated:cosmos.authz.v1beta1.QueryGranterGrantsResponse.pagination)
}

// -------------------------------------------------------------------

// QueryGranteeGrantsRequest

// string grantee = 1 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void QueryGranteeGrantsRequest::clear_grantee() {
  _impl_.grantee_.ClearToEmpty();
}
inline const std::string& QueryGranteeGrantsRequest::grantee() const {
  // @@protoc_insertion_point(field_get:cosmos.authz.v1beta1.QueryGranteeGrantsRequest.grantee)
  return _internal_grantee();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryGranteeGrantsRequest::set_grantee(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.grantee_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmos.authz.v1beta1.QueryGranteeGrantsRequest.grantee)
}
inline std::string* QueryGranteeGrantsRequest::mutable_grantee() {
  std::string* _s = _internal_mutable_grantee();
  // @@protoc_insertion_point(field_mutable:cosmos.authz.v1beta1.QueryGranteeGrantsRequest.grantee)
  return _s;
}
inline const std::string& QueryGranteeGrantsRequest::_internal_grantee() const {
  return _impl_.grantee_.Get();
}
inline void QueryGranteeGrantsRequest::_internal_set_grantee(const std::string& value) {
  ;


  _impl_.grantee_.Set(value, GetArenaForAllocation());
}
inline std::string* QueryGranteeGrantsRequest::_internal_mutable_grantee() {
  ;
  return _impl_.grantee_.Mutable( GetArenaForAllocation());
}
inline std::string* QueryGranteeGrantsRequest::release_grantee() {
  // @@protoc_insertion_point(field_release:cosmos.authz.v1beta1.QueryGranteeGrantsRequest.grantee)
  return _impl_.grantee_.Release();
}
inline void QueryGranteeGrantsRequest::set_allocated_grantee(std::string* value) {
  _impl_.grantee_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.grantee_.IsDefault()) {
          _impl_.grantee_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmos.authz.v1beta1.QueryGranteeGrantsRequest.grantee)
}

// .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
inline bool QueryGranteeGrantsRequest::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageRequest& QueryGranteeGrantsRequest::_internal_pagination() const {
  const ::cosmos::base::query::v1beta1::PageRequest* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageRequest&>(
      ::cosmos::base::query::v1beta1::_PageRequest_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageRequest& QueryGranteeGrantsRequest::pagination() const {
  // @@protoc_insertion_point(field_get:cosmos.authz.v1beta1.QueryGranteeGrantsRequest.pagination)
  return _internal_pagination();
}
inline void QueryGranteeGrantsRequest::unsafe_arena_set_allocated_pagination(
    ::cosmos::base::query::v1beta1::PageRequest* pagination) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = pagination;
  if (pagination) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.authz.v1beta1.QueryGranteeGrantsRequest.pagination)
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryGranteeGrantsRequest::release_pagination() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryGranteeGrantsRequest::unsafe_arena_release_pagination() {
  // @@protoc_insertion_point(field_release:cosmos.authz.v1beta1.QueryGranteeGrantsRequest.pagination)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryGranteeGrantsRequest::_internal_mutable_pagination() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.pagination_ == nullptr) {
    auto* p = CreateMaybeMessage<::cosmos::base::query::v1beta1::PageRequest>(GetArenaForAllocation());
    _impl_.pagination_ = p;
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryGranteeGrantsRequest::mutable_pagination() {
  ::cosmos::base::query::v1beta1::PageRequest* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmos.authz.v1beta1.QueryGranteeGrantsRequest.pagination)
  return _msg;
}
inline void QueryGranteeGrantsRequest::set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* pagination) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.pagination_);
  }
  if (pagination) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(pagination));
    if (message_arena != submessage_arena) {
      pagination = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pagination, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.pagination_ = pagination;
  // @@protoc_insertion_point(field_set_allocated:cosmos.authz.v1beta1.QueryGranteeGrantsRequest.pagination)
}

// -------------------------------------------------------------------

// QueryGranteeGrantsResponse

// repeated .cosmos.authz.v1beta1.GrantAuthorization grants = 1 [json_name = "grants"];
inline int QueryGranteeGrantsResponse::_internal_grants_size() const {
  return _impl_.grants_.size();
}
inline int QueryGranteeGrantsResponse::grants_size() const {
  return _internal_grants_size();
}
inline ::cosmos::authz::v1beta1::GrantAuthorization* QueryGranteeGrantsResponse::mutable_grants(int index) {
  // @@protoc_insertion_point(field_mutable:cosmos.authz.v1beta1.QueryGranteeGrantsResponse.grants)
  return _internal_mutable_grants()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::authz::v1beta1::GrantAuthorization >*
QueryGranteeGrantsResponse::mutable_grants() {
  // @@protoc_insertion_point(field_mutable_list:cosmos.authz.v1beta1.QueryGranteeGrantsResponse.grants)
  return _internal_mutable_grants();
}
inline const ::cosmos::authz::v1beta1::GrantAuthorization& QueryGranteeGrantsResponse::_internal_grants(int index) const {
  return _internal_grants().Get(index);
}
inline const ::cosmos::authz::v1beta1::GrantAuthorization& QueryGranteeGrantsResponse::grants(int index) const {
  // @@protoc_insertion_point(field_get:cosmos.authz.v1beta1.QueryGranteeGrantsResponse.grants)
  return _internal_grants(index);
}
inline ::cosmos::authz::v1beta1::GrantAuthorization* QueryGranteeGrantsResponse::_internal_add_grants() {
  return _internal_mutable_grants()->Add();
}
inline ::cosmos::authz::v1beta1::GrantAuthorization* QueryGranteeGrantsResponse::add_grants() {
  ::cosmos::authz::v1beta1::GrantAuthorization* _add = _internal_add_grants();
  // @@protoc_insertion_point(field_add:cosmos.authz.v1beta1.QueryGranteeGrantsResponse.grants)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::authz::v1beta1::GrantAuthorization >&
QueryGranteeGrantsResponse::grants() const {
  // @@protoc_insertion_point(field_list:cosmos.authz.v1beta1.QueryGranteeGrantsResponse.grants)
  return _internal_grants();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::authz::v1beta1::GrantAuthorization>&
QueryGranteeGrantsResponse::_internal_grants() const {
  return _impl_.grants_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::authz::v1beta1::GrantAuthorization>*
QueryGranteeGrantsResponse::_internal_mutable_grants() {
  return &_impl_.grants_;
}

// .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
inline bool QueryGranteeGrantsResponse::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageResponse& QueryGranteeGrantsResponse::_internal_pagination() const {
  const ::cosmos::base::query::v1beta1::PageResponse* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageResponse&>(
      ::cosmos::base::query::v1beta1::_PageResponse_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageResponse& QueryGranteeGrantsResponse::pagination() const {
  // @@protoc_insertion_point(field_get:cosmos.authz.v1beta1.QueryGranteeGrantsResponse.pagination)
  return _internal_pagination();
}
inline void QueryGranteeGrantsResponse::unsafe_arena_set_allocated_pagination(
    ::cosmos::base::query::v1beta1::PageResponse* pagination) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = pagination;
  if (pagination) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.authz.v1beta1.QueryGranteeGrantsResponse.pagination)
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryGranteeGrantsResponse::release_pagination() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryGranteeGrantsResponse::unsafe_arena_release_pagination() {
  // @@protoc_insertion_point(field_release:cosmos.authz.v1beta1.QueryGranteeGrantsResponse.pagination)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryGranteeGrantsResponse::_internal_mutable_pagination() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.pagination_ == nullptr) {
    auto* p = CreateMaybeMessage<::cosmos::base::query::v1beta1::PageResponse>(GetArenaForAllocation());
    _impl_.pagination_ = p;
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryGranteeGrantsResponse::mutable_pagination() {
  ::cosmos::base::query::v1beta1::PageResponse* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmos.authz.v1beta1.QueryGranteeGrantsResponse.pagination)
  return _msg;
}
inline void QueryGranteeGrantsResponse::set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* pagination) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.pagination_);
  }
  if (pagination) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(pagination));
    if (message_arena != submessage_arena) {
      pagination = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pagination, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.pagination_ = pagination;
  // @@protoc_insertion_point(field_set_allocated:cosmos.authz.v1beta1.QueryGranteeGrantsResponse.pagination)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace authz
}  // namespace cosmos


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_cosmos_2fauthz_2fv1beta1_2fquery_2eproto_2epb_2eh
