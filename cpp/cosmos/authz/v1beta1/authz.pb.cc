// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/authz/v1beta1/authz.proto

#include "cosmos/authz/v1beta1/authz.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace cosmos {
namespace authz {
namespace v1beta1 {
template <typename>
PROTOBUF_CONSTEXPR GenericAuthorization::GenericAuthorization(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.msg_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GenericAuthorizationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GenericAuthorizationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GenericAuthorizationDefaultTypeInternal() {}
  union {
    GenericAuthorization _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GenericAuthorizationDefaultTypeInternal _GenericAuthorization_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR Grant::Grant(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.authorization_)*/nullptr
  , /*decltype(_impl_.expiration_)*/nullptr} {}
struct GrantDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GrantDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GrantDefaultTypeInternal() {}
  union {
    Grant _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GrantDefaultTypeInternal _Grant_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR GrantAuthorization::GrantAuthorization(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.granter_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.grantee_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.authorization_)*/nullptr
  , /*decltype(_impl_.expiration_)*/nullptr} {}
struct GrantAuthorizationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GrantAuthorizationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GrantAuthorizationDefaultTypeInternal() {}
  union {
    GrantAuthorization _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GrantAuthorizationDefaultTypeInternal _GrantAuthorization_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR GrantQueueItem::GrantQueueItem(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.msg_type_urls_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GrantQueueItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GrantQueueItemDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GrantQueueItemDefaultTypeInternal() {}
  union {
    GrantQueueItem _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GrantQueueItemDefaultTypeInternal _GrantQueueItem_default_instance_;
}  // namespace v1beta1
}  // namespace authz
}  // namespace cosmos
static ::_pb::Metadata file_level_metadata_cosmos_2fauthz_2fv1beta1_2fauthz_2eproto[4];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_cosmos_2fauthz_2fv1beta1_2fauthz_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cosmos_2fauthz_2fv1beta1_2fauthz_2eproto = nullptr;
const ::uint32_t TableStruct_cosmos_2fauthz_2fv1beta1_2fauthz_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::GenericAuthorization, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::GenericAuthorization, _impl_.msg_),
    PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::Grant, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::Grant, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::Grant, _impl_.authorization_),
    PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::Grant, _impl_.expiration_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::GrantAuthorization, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::GrantAuthorization, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::GrantAuthorization, _impl_.granter_),
    PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::GrantAuthorization, _impl_.grantee_),
    PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::GrantAuthorization, _impl_.authorization_),
    PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::GrantAuthorization, _impl_.expiration_),
    ~0u,
    ~0u,
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::GrantQueueItem, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::GrantQueueItem, _impl_.msg_type_urls_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::cosmos::authz::v1beta1::GenericAuthorization)},
        { 9, 19, -1, sizeof(::cosmos::authz::v1beta1::Grant)},
        { 21, 33, -1, sizeof(::cosmos::authz::v1beta1::GrantAuthorization)},
        { 37, -1, -1, sizeof(::cosmos::authz::v1beta1::GrantQueueItem)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::cosmos::authz::v1beta1::_GenericAuthorization_default_instance_._instance,
    &::cosmos::authz::v1beta1::_Grant_default_instance_._instance,
    &::cosmos::authz::v1beta1::_GrantAuthorization_default_instance_._instance,
    &::cosmos::authz::v1beta1::_GrantQueueItem_default_instance_._instance,
};
const char descriptor_table_protodef_cosmos_2fauthz_2fv1beta1_2fauthz_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n cosmos/authz/v1beta1/authz.proto\022\024cosm"
    "os.authz.v1beta1\032\021amino/amino.proto\032\031cos"
    "mos_proto/cosmos.proto\032\037google/protobuf/"
    "timestamp.proto\032\024gogoproto/gogo.proto\032\031g"
    "oogle/protobuf/any.proto\"t\n\024GenericAutho"
    "rization\022\020\n\003msg\030\001 \001(\tR\003msg:J\312\264-\"cosmos.a"
    "uthz.v1beta1.Authorization\212\347\260*\037cosmos-sd"
    "k/GenericAuthorization\"\261\001\n\005Grant\022b\n\rauth"
    "orization\030\001 \001(\0132\024.google.protobuf.AnyB&\312"
    "\264-\"cosmos.authz.v1beta1.AuthorizationR\ra"
    "uthorization\022D\n\nexpiration\030\002 \001(\0132\032.googl"
    "e.protobuf.TimestampB\010\310\336\037\001\220\337\037\001R\nexpirati"
    "on\"\242\002\n\022GrantAuthorization\0222\n\007granter\030\001 \001"
    "(\tB\030\322\264-\024cosmos.AddressStringR\007granter\0222\n"
    "\007grantee\030\002 \001(\tB\030\322\264-\024cosmos.AddressString"
    "R\007grantee\022b\n\rauthorization\030\003 \001(\0132\024.googl"
    "e.protobuf.AnyB&\312\264-\"cosmos.authz.v1beta1"
    ".AuthorizationR\rauthorization\022@\n\nexpirat"
    "ion\030\004 \001(\0132\032.google.protobuf.TimestampB\004\220"
    "\337\037\001R\nexpiration\"4\n\016GrantQueueItem\022\"\n\rmsg"
    "_type_urls\030\001 \003(\tR\013msgTypeUrlsB\302\001\n\030com.co"
    "smos.authz.v1beta1B\nAuthzProtoP\001Z$github"
    ".com/cosmos/cosmos-sdk/x/authz\242\002\003CAX\252\002\024C"
    "osmos.Authz.V1beta1\312\002\024Cosmos\\Authz\\V1bet"
    "a1\342\002 Cosmos\\Authz\\V1beta1\\GPBMetadata\352\002\026"
    "Cosmos::Authz::V1beta1\310\341\036\000b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_cosmos_2fauthz_2fv1beta1_2fauthz_2eproto_deps[5] =
    {
        &::descriptor_table_amino_2famino_2eproto,
        &::descriptor_table_cosmos_5fproto_2fcosmos_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_google_2fprotobuf_2fany_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_cosmos_2fauthz_2fv1beta1_2fauthz_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_cosmos_2fauthz_2fv1beta1_2fauthz_2eproto = {
    false,
    false,
    1034,
    descriptor_table_protodef_cosmos_2fauthz_2fv1beta1_2fauthz_2eproto,
    "cosmos/authz/v1beta1/authz.proto",
    &descriptor_table_cosmos_2fauthz_2fv1beta1_2fauthz_2eproto_once,
    descriptor_table_cosmos_2fauthz_2fv1beta1_2fauthz_2eproto_deps,
    5,
    4,
    schemas,
    file_default_instances,
    TableStruct_cosmos_2fauthz_2fv1beta1_2fauthz_2eproto::offsets,
    file_level_metadata_cosmos_2fauthz_2fv1beta1_2fauthz_2eproto,
    file_level_enum_descriptors_cosmos_2fauthz_2fv1beta1_2fauthz_2eproto,
    file_level_service_descriptors_cosmos_2fauthz_2fv1beta1_2fauthz_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_cosmos_2fauthz_2fv1beta1_2fauthz_2eproto_getter() {
  return &descriptor_table_cosmos_2fauthz_2fv1beta1_2fauthz_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_cosmos_2fauthz_2fv1beta1_2fauthz_2eproto(&descriptor_table_cosmos_2fauthz_2fv1beta1_2fauthz_2eproto);
namespace cosmos {
namespace authz {
namespace v1beta1 {
// ===================================================================

class GenericAuthorization::_Internal {
 public:
};

GenericAuthorization::GenericAuthorization(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.authz.v1beta1.GenericAuthorization)
}
GenericAuthorization::GenericAuthorization(const GenericAuthorization& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GenericAuthorization* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.msg_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.msg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.msg_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_msg().empty()) {
    _this->_impl_.msg_.Set(from._internal_msg(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.authz.v1beta1.GenericAuthorization)
}

inline void GenericAuthorization::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.msg_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.msg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.msg_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GenericAuthorization::~GenericAuthorization() {
  // @@protoc_insertion_point(destructor:cosmos.authz.v1beta1.GenericAuthorization)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GenericAuthorization::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.msg_.Destroy();
}

void GenericAuthorization::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GenericAuthorization::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.authz.v1beta1.GenericAuthorization)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.msg_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GenericAuthorization::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string msg = 1 [json_name = "msg"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_msg();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.authz.v1beta1.GenericAuthorization.msg"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* GenericAuthorization::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.authz.v1beta1.GenericAuthorization)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg = 1 [json_name = "msg"];
  if (!this->_internal_msg().empty()) {
    const std::string& _s = this->_internal_msg();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.authz.v1beta1.GenericAuthorization.msg");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.authz.v1beta1.GenericAuthorization)
  return target;
}

::size_t GenericAuthorization::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.authz.v1beta1.GenericAuthorization)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 1 [json_name = "msg"];
  if (!this->_internal_msg().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_msg());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GenericAuthorization::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GenericAuthorization::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GenericAuthorization::GetClassData() const { return &_class_data_; }


void GenericAuthorization::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GenericAuthorization*>(&to_msg);
  auto& from = static_cast<const GenericAuthorization&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.authz.v1beta1.GenericAuthorization)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_msg().empty()) {
    _this->_internal_set_msg(from._internal_msg());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GenericAuthorization::CopyFrom(const GenericAuthorization& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.authz.v1beta1.GenericAuthorization)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenericAuthorization::IsInitialized() const {
  return true;
}

void GenericAuthorization::InternalSwap(GenericAuthorization* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.msg_, lhs_arena,
                                       &other->_impl_.msg_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata GenericAuthorization::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fauthz_2fv1beta1_2fauthz_2eproto_getter, &descriptor_table_cosmos_2fauthz_2fv1beta1_2fauthz_2eproto_once,
      file_level_metadata_cosmos_2fauthz_2fv1beta1_2fauthz_2eproto[0]);
}
// ===================================================================

class Grant::_Internal {
 public:
  using HasBits = decltype(std::declval<Grant>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Grant, _impl_._has_bits_);
  static const ::PROTOBUF_NAMESPACE_ID::Any& authorization(const Grant* msg);
  static void set_has_authorization(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& expiration(const Grant* msg);
  static void set_has_expiration(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::PROTOBUF_NAMESPACE_ID::Any&
Grant::_Internal::authorization(const Grant* msg) {
  return *msg->_impl_.authorization_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
Grant::_Internal::expiration(const Grant* msg) {
  return *msg->_impl_.expiration_;
}
void Grant::clear_authorization() {
  if (_impl_.authorization_ != nullptr) _impl_.authorization_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Grant::clear_expiration() {
  if (_impl_.expiration_ != nullptr) _impl_.expiration_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
Grant::Grant(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.authz.v1beta1.Grant)
}
Grant::Grant(const Grant& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Grant* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.authorization_){nullptr}
    , decltype(_impl_.expiration_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.authorization_ = new ::PROTOBUF_NAMESPACE_ID::Any(*from._impl_.authorization_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.expiration_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.expiration_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.authz.v1beta1.Grant)
}

inline void Grant::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.authorization_){nullptr}
    , decltype(_impl_.expiration_){nullptr}
  };
}

Grant::~Grant() {
  // @@protoc_insertion_point(destructor:cosmos.authz.v1beta1.Grant)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Grant::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.authorization_;
  if (this != internal_default_instance()) delete _impl_.expiration_;
}

void Grant::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Grant::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.authz.v1beta1.Grant)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.authorization_ != nullptr);
      _impl_.authorization_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.expiration_ != nullptr);
      _impl_.expiration_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Grant::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.protobuf.Any authorization = 1 [json_name = "authorization", (.cosmos_proto.accepts_interface) = "cosmos.authz.v1beta1.Authorization"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_authorization(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .google.protobuf.Timestamp expiration = 2 [json_name = "expiration", (.gogoproto.nullable) = true, (.gogoproto.stdtime) = true];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_expiration(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* Grant::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.authz.v1beta1.Grant)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Any authorization = 1 [json_name = "authorization", (.cosmos_proto.accepts_interface) = "cosmos.authz.v1beta1.Authorization"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::authorization(this),
        _Internal::authorization(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp expiration = 2 [json_name = "expiration", (.gogoproto.nullable) = true, (.gogoproto.stdtime) = true];
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::expiration(this),
        _Internal::expiration(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.authz.v1beta1.Grant)
  return target;
}

::size_t Grant::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.authz.v1beta1.Grant)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .google.protobuf.Any authorization = 1 [json_name = "authorization", (.cosmos_proto.accepts_interface) = "cosmos.authz.v1beta1.Authorization"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.authorization_);
    }

    // .google.protobuf.Timestamp expiration = 2 [json_name = "expiration", (.gogoproto.nullable) = true, (.gogoproto.stdtime) = true];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.expiration_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Grant::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Grant::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Grant::GetClassData() const { return &_class_data_; }


void Grant::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Grant*>(&to_msg);
  auto& from = static_cast<const Grant&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.authz.v1beta1.Grant)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_authorization()->::PROTOBUF_NAMESPACE_ID::Any::MergeFrom(
          from._internal_authorization());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_expiration()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
          from._internal_expiration());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Grant::CopyFrom(const Grant& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.authz.v1beta1.Grant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Grant::IsInitialized() const {
  return true;
}

void Grant::InternalSwap(Grant* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Grant, _impl_.expiration_)
      + sizeof(Grant::_impl_.expiration_)
      - PROTOBUF_FIELD_OFFSET(Grant, _impl_.authorization_)>(
          reinterpret_cast<char*>(&_impl_.authorization_),
          reinterpret_cast<char*>(&other->_impl_.authorization_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Grant::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fauthz_2fv1beta1_2fauthz_2eproto_getter, &descriptor_table_cosmos_2fauthz_2fv1beta1_2fauthz_2eproto_once,
      file_level_metadata_cosmos_2fauthz_2fv1beta1_2fauthz_2eproto[1]);
}
// ===================================================================

class GrantAuthorization::_Internal {
 public:
  using HasBits = decltype(std::declval<GrantAuthorization>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GrantAuthorization, _impl_._has_bits_);
  static const ::PROTOBUF_NAMESPACE_ID::Any& authorization(const GrantAuthorization* msg);
  static void set_has_authorization(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& expiration(const GrantAuthorization* msg);
  static void set_has_expiration(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::PROTOBUF_NAMESPACE_ID::Any&
GrantAuthorization::_Internal::authorization(const GrantAuthorization* msg) {
  return *msg->_impl_.authorization_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
GrantAuthorization::_Internal::expiration(const GrantAuthorization* msg) {
  return *msg->_impl_.expiration_;
}
void GrantAuthorization::clear_authorization() {
  if (_impl_.authorization_ != nullptr) _impl_.authorization_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void GrantAuthorization::clear_expiration() {
  if (_impl_.expiration_ != nullptr) _impl_.expiration_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
GrantAuthorization::GrantAuthorization(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.authz.v1beta1.GrantAuthorization)
}
GrantAuthorization::GrantAuthorization(const GrantAuthorization& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GrantAuthorization* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.granter_) {}

    , decltype(_impl_.grantee_) {}

    , decltype(_impl_.authorization_){nullptr}
    , decltype(_impl_.expiration_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.granter_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.granter_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_granter().empty()) {
    _this->_impl_.granter_.Set(from._internal_granter(), _this->GetArenaForAllocation());
  }
  _impl_.grantee_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.grantee_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_grantee().empty()) {
    _this->_impl_.grantee_.Set(from._internal_grantee(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.authorization_ = new ::PROTOBUF_NAMESPACE_ID::Any(*from._impl_.authorization_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.expiration_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.expiration_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.authz.v1beta1.GrantAuthorization)
}

inline void GrantAuthorization::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.granter_) {}

    , decltype(_impl_.grantee_) {}

    , decltype(_impl_.authorization_){nullptr}
    , decltype(_impl_.expiration_){nullptr}
  };
  _impl_.granter_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.granter_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.grantee_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.grantee_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GrantAuthorization::~GrantAuthorization() {
  // @@protoc_insertion_point(destructor:cosmos.authz.v1beta1.GrantAuthorization)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GrantAuthorization::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.granter_.Destroy();
  _impl_.grantee_.Destroy();
  if (this != internal_default_instance()) delete _impl_.authorization_;
  if (this != internal_default_instance()) delete _impl_.expiration_;
}

void GrantAuthorization::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GrantAuthorization::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.authz.v1beta1.GrantAuthorization)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.granter_.ClearToEmpty();
  _impl_.grantee_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.authorization_ != nullptr);
      _impl_.authorization_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.expiration_ != nullptr);
      _impl_.expiration_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GrantAuthorization::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string granter = 1 [json_name = "granter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_granter();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.authz.v1beta1.GrantAuthorization.granter"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string grantee = 2 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_grantee();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.authz.v1beta1.GrantAuthorization.grantee"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .google.protobuf.Any authorization = 3 [json_name = "authorization", (.cosmos_proto.accepts_interface) = "cosmos.authz.v1beta1.Authorization"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_authorization(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .google.protobuf.Timestamp expiration = 4 [json_name = "expiration", (.gogoproto.stdtime) = true];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_expiration(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* GrantAuthorization::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.authz.v1beta1.GrantAuthorization)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string granter = 1 [json_name = "granter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_granter().empty()) {
    const std::string& _s = this->_internal_granter();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.authz.v1beta1.GrantAuthorization.granter");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string grantee = 2 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_grantee().empty()) {
    const std::string& _s = this->_internal_grantee();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.authz.v1beta1.GrantAuthorization.grantee");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Any authorization = 3 [json_name = "authorization", (.cosmos_proto.accepts_interface) = "cosmos.authz.v1beta1.Authorization"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::authorization(this),
        _Internal::authorization(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp expiration = 4 [json_name = "expiration", (.gogoproto.stdtime) = true];
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::expiration(this),
        _Internal::expiration(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.authz.v1beta1.GrantAuthorization)
  return target;
}

::size_t GrantAuthorization::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.authz.v1beta1.GrantAuthorization)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string granter = 1 [json_name = "granter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_granter().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_granter());
  }

  // string grantee = 2 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_grantee().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_grantee());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .google.protobuf.Any authorization = 3 [json_name = "authorization", (.cosmos_proto.accepts_interface) = "cosmos.authz.v1beta1.Authorization"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.authorization_);
    }

    // .google.protobuf.Timestamp expiration = 4 [json_name = "expiration", (.gogoproto.stdtime) = true];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.expiration_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GrantAuthorization::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GrantAuthorization::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GrantAuthorization::GetClassData() const { return &_class_data_; }


void GrantAuthorization::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GrantAuthorization*>(&to_msg);
  auto& from = static_cast<const GrantAuthorization&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.authz.v1beta1.GrantAuthorization)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_granter().empty()) {
    _this->_internal_set_granter(from._internal_granter());
  }
  if (!from._internal_grantee().empty()) {
    _this->_internal_set_grantee(from._internal_grantee());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_authorization()->::PROTOBUF_NAMESPACE_ID::Any::MergeFrom(
          from._internal_authorization());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_expiration()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
          from._internal_expiration());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GrantAuthorization::CopyFrom(const GrantAuthorization& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.authz.v1beta1.GrantAuthorization)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GrantAuthorization::IsInitialized() const {
  return true;
}

void GrantAuthorization::InternalSwap(GrantAuthorization* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.granter_, lhs_arena,
                                       &other->_impl_.granter_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.grantee_, lhs_arena,
                                       &other->_impl_.grantee_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GrantAuthorization, _impl_.expiration_)
      + sizeof(GrantAuthorization::_impl_.expiration_)
      - PROTOBUF_FIELD_OFFSET(GrantAuthorization, _impl_.authorization_)>(
          reinterpret_cast<char*>(&_impl_.authorization_),
          reinterpret_cast<char*>(&other->_impl_.authorization_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GrantAuthorization::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fauthz_2fv1beta1_2fauthz_2eproto_getter, &descriptor_table_cosmos_2fauthz_2fv1beta1_2fauthz_2eproto_once,
      file_level_metadata_cosmos_2fauthz_2fv1beta1_2fauthz_2eproto[2]);
}
// ===================================================================

class GrantQueueItem::_Internal {
 public:
};

GrantQueueItem::GrantQueueItem(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.authz.v1beta1.GrantQueueItem)
}
GrantQueueItem::GrantQueueItem(const GrantQueueItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GrantQueueItem* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.msg_type_urls_){from._impl_.msg_type_urls_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.authz.v1beta1.GrantQueueItem)
}

inline void GrantQueueItem::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.msg_type_urls_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GrantQueueItem::~GrantQueueItem() {
  // @@protoc_insertion_point(destructor:cosmos.authz.v1beta1.GrantQueueItem)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GrantQueueItem::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_msg_type_urls()->~RepeatedPtrField();
}

void GrantQueueItem::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GrantQueueItem::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.authz.v1beta1.GrantQueueItem)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_msg_type_urls()->Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GrantQueueItem::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string msg_type_urls = 1 [json_name = "msgTypeUrls"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_msg_type_urls();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "cosmos.authz.v1beta1.GrantQueueItem.msg_type_urls"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* GrantQueueItem::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.authz.v1beta1.GrantQueueItem)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string msg_type_urls = 1 [json_name = "msgTypeUrls"];
  for (int i = 0, n = this->_internal_msg_type_urls_size(); i < n; ++i) {
    const auto& s = this->_internal_msg_type_urls(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.authz.v1beta1.GrantQueueItem.msg_type_urls");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.authz.v1beta1.GrantQueueItem)
  return target;
}

::size_t GrantQueueItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.authz.v1beta1.GrantQueueItem)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string msg_type_urls = 1 [json_name = "msgTypeUrls"];
  total_size += 1 * ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_internal_msg_type_urls().size());
  for (int i = 0, n = _internal_msg_type_urls().size(); i < n; ++i) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        _internal_msg_type_urls().Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GrantQueueItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GrantQueueItem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GrantQueueItem::GetClassData() const { return &_class_data_; }


void GrantQueueItem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GrantQueueItem*>(&to_msg);
  auto& from = static_cast<const GrantQueueItem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.authz.v1beta1.GrantQueueItem)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_msg_type_urls()->MergeFrom(from._internal_msg_type_urls());
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GrantQueueItem::CopyFrom(const GrantQueueItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.authz.v1beta1.GrantQueueItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GrantQueueItem::IsInitialized() const {
  return true;
}

void GrantQueueItem::InternalSwap(GrantQueueItem* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_msg_type_urls()->InternalSwap(
      other->_internal_mutable_msg_type_urls());
}

::PROTOBUF_NAMESPACE_ID::Metadata GrantQueueItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fauthz_2fv1beta1_2fauthz_2eproto_getter, &descriptor_table_cosmos_2fauthz_2fv1beta1_2fauthz_2eproto_once,
      file_level_metadata_cosmos_2fauthz_2fv1beta1_2fauthz_2eproto[3]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace authz
}  // namespace cosmos
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::cosmos::authz::v1beta1::GenericAuthorization*
Arena::CreateMaybeMessage< ::cosmos::authz::v1beta1::GenericAuthorization >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::authz::v1beta1::GenericAuthorization >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::authz::v1beta1::Grant*
Arena::CreateMaybeMessage< ::cosmos::authz::v1beta1::Grant >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::authz::v1beta1::Grant >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::authz::v1beta1::GrantAuthorization*
Arena::CreateMaybeMessage< ::cosmos::authz::v1beta1::GrantAuthorization >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::authz::v1beta1::GrantAuthorization >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::authz::v1beta1::GrantQueueItem*
Arena::CreateMaybeMessage< ::cosmos::authz::v1beta1::GrantQueueItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::authz::v1beta1::GrantQueueItem >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
