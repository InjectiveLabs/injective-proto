// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/distribution/v1beta1/query.proto

#include "cosmos/distribution/v1beta1/query.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace cosmos {
namespace distribution {
namespace v1beta1 {
template <typename>
PROTOBUF_CONSTEXPR QueryParamsRequest::QueryParamsRequest(
    ::_pbi::ConstantInitialized) {}
struct QueryParamsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryParamsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryParamsRequestDefaultTypeInternal() {}
  union {
    QueryParamsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryParamsRequestDefaultTypeInternal _QueryParamsRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryParamsResponse::QueryParamsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.params_)*/nullptr} {}
struct QueryParamsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryParamsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryParamsResponseDefaultTypeInternal() {}
  union {
    QueryParamsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryParamsResponseDefaultTypeInternal _QueryParamsResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryValidatorDistributionInfoRequest::QueryValidatorDistributionInfoRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.validator_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryValidatorDistributionInfoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryValidatorDistributionInfoRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryValidatorDistributionInfoRequestDefaultTypeInternal() {}
  union {
    QueryValidatorDistributionInfoRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryValidatorDistributionInfoRequestDefaultTypeInternal _QueryValidatorDistributionInfoRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryValidatorDistributionInfoResponse::QueryValidatorDistributionInfoResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.self_bond_rewards_)*/{}
  , /*decltype(_impl_.commission_)*/{}
  , /*decltype(_impl_.operator_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryValidatorDistributionInfoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryValidatorDistributionInfoResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryValidatorDistributionInfoResponseDefaultTypeInternal() {}
  union {
    QueryValidatorDistributionInfoResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryValidatorDistributionInfoResponseDefaultTypeInternal _QueryValidatorDistributionInfoResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryValidatorOutstandingRewardsRequest::QueryValidatorOutstandingRewardsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.validator_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryValidatorOutstandingRewardsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryValidatorOutstandingRewardsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryValidatorOutstandingRewardsRequestDefaultTypeInternal() {}
  union {
    QueryValidatorOutstandingRewardsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryValidatorOutstandingRewardsRequestDefaultTypeInternal _QueryValidatorOutstandingRewardsRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryValidatorOutstandingRewardsResponse::QueryValidatorOutstandingRewardsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.rewards_)*/nullptr} {}
struct QueryValidatorOutstandingRewardsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryValidatorOutstandingRewardsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryValidatorOutstandingRewardsResponseDefaultTypeInternal() {}
  union {
    QueryValidatorOutstandingRewardsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryValidatorOutstandingRewardsResponseDefaultTypeInternal _QueryValidatorOutstandingRewardsResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryValidatorCommissionRequest::QueryValidatorCommissionRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.validator_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryValidatorCommissionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryValidatorCommissionRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryValidatorCommissionRequestDefaultTypeInternal() {}
  union {
    QueryValidatorCommissionRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryValidatorCommissionRequestDefaultTypeInternal _QueryValidatorCommissionRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryValidatorCommissionResponse::QueryValidatorCommissionResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.commission_)*/nullptr} {}
struct QueryValidatorCommissionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryValidatorCommissionResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryValidatorCommissionResponseDefaultTypeInternal() {}
  union {
    QueryValidatorCommissionResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryValidatorCommissionResponseDefaultTypeInternal _QueryValidatorCommissionResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryValidatorSlashesRequest::QueryValidatorSlashesRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.validator_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.pagination_)*/nullptr
  , /*decltype(_impl_.starting_height_)*/ ::uint64_t{0u}

  , /*decltype(_impl_.ending_height_)*/ ::uint64_t{0u}
} {}
struct QueryValidatorSlashesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryValidatorSlashesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryValidatorSlashesRequestDefaultTypeInternal() {}
  union {
    QueryValidatorSlashesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryValidatorSlashesRequestDefaultTypeInternal _QueryValidatorSlashesRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryValidatorSlashesResponse::QueryValidatorSlashesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.slashes_)*/{}
  , /*decltype(_impl_.pagination_)*/nullptr} {}
struct QueryValidatorSlashesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryValidatorSlashesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryValidatorSlashesResponseDefaultTypeInternal() {}
  union {
    QueryValidatorSlashesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryValidatorSlashesResponseDefaultTypeInternal _QueryValidatorSlashesResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryDelegationRewardsRequest::QueryDelegationRewardsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.delegator_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.validator_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryDelegationRewardsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryDelegationRewardsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryDelegationRewardsRequestDefaultTypeInternal() {}
  union {
    QueryDelegationRewardsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryDelegationRewardsRequestDefaultTypeInternal _QueryDelegationRewardsRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryDelegationRewardsResponse::QueryDelegationRewardsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.rewards_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryDelegationRewardsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryDelegationRewardsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryDelegationRewardsResponseDefaultTypeInternal() {}
  union {
    QueryDelegationRewardsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryDelegationRewardsResponseDefaultTypeInternal _QueryDelegationRewardsResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryDelegationTotalRewardsRequest::QueryDelegationTotalRewardsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.delegator_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryDelegationTotalRewardsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryDelegationTotalRewardsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryDelegationTotalRewardsRequestDefaultTypeInternal() {}
  union {
    QueryDelegationTotalRewardsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryDelegationTotalRewardsRequestDefaultTypeInternal _QueryDelegationTotalRewardsRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryDelegationTotalRewardsResponse::QueryDelegationTotalRewardsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.rewards_)*/{}
  , /*decltype(_impl_.total_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryDelegationTotalRewardsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryDelegationTotalRewardsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryDelegationTotalRewardsResponseDefaultTypeInternal() {}
  union {
    QueryDelegationTotalRewardsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryDelegationTotalRewardsResponseDefaultTypeInternal _QueryDelegationTotalRewardsResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryDelegatorValidatorsRequest::QueryDelegatorValidatorsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.delegator_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryDelegatorValidatorsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryDelegatorValidatorsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryDelegatorValidatorsRequestDefaultTypeInternal() {}
  union {
    QueryDelegatorValidatorsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryDelegatorValidatorsRequestDefaultTypeInternal _QueryDelegatorValidatorsRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryDelegatorValidatorsResponse::QueryDelegatorValidatorsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.validators_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryDelegatorValidatorsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryDelegatorValidatorsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryDelegatorValidatorsResponseDefaultTypeInternal() {}
  union {
    QueryDelegatorValidatorsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryDelegatorValidatorsResponseDefaultTypeInternal _QueryDelegatorValidatorsResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryDelegatorWithdrawAddressRequest::QueryDelegatorWithdrawAddressRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.delegator_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryDelegatorWithdrawAddressRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryDelegatorWithdrawAddressRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryDelegatorWithdrawAddressRequestDefaultTypeInternal() {}
  union {
    QueryDelegatorWithdrawAddressRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryDelegatorWithdrawAddressRequestDefaultTypeInternal _QueryDelegatorWithdrawAddressRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryDelegatorWithdrawAddressResponse::QueryDelegatorWithdrawAddressResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.withdraw_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryDelegatorWithdrawAddressResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryDelegatorWithdrawAddressResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryDelegatorWithdrawAddressResponseDefaultTypeInternal() {}
  union {
    QueryDelegatorWithdrawAddressResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryDelegatorWithdrawAddressResponseDefaultTypeInternal _QueryDelegatorWithdrawAddressResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryCommunityPoolRequest::QueryCommunityPoolRequest(
    ::_pbi::ConstantInitialized) {}
struct QueryCommunityPoolRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryCommunityPoolRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryCommunityPoolRequestDefaultTypeInternal() {}
  union {
    QueryCommunityPoolRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryCommunityPoolRequestDefaultTypeInternal _QueryCommunityPoolRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryCommunityPoolResponse::QueryCommunityPoolResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.pool_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryCommunityPoolResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryCommunityPoolResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryCommunityPoolResponseDefaultTypeInternal() {}
  union {
    QueryCommunityPoolResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryCommunityPoolResponseDefaultTypeInternal _QueryCommunityPoolResponse_default_instance_;
}  // namespace v1beta1
}  // namespace distribution
}  // namespace cosmos
static ::_pb::Metadata file_level_metadata_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto[20];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto = nullptr;
const ::uint32_t TableStruct_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::QueryParamsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::QueryParamsResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::QueryParamsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::QueryParamsResponse, _impl_.params_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::QueryValidatorDistributionInfoRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::QueryValidatorDistributionInfoRequest, _impl_.validator_address_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::QueryValidatorDistributionInfoResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::QueryValidatorDistributionInfoResponse, _impl_.operator_address_),
    PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::QueryValidatorDistributionInfoResponse, _impl_.self_bond_rewards_),
    PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::QueryValidatorDistributionInfoResponse, _impl_.commission_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::QueryValidatorOutstandingRewardsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::QueryValidatorOutstandingRewardsRequest, _impl_.validator_address_),
    PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::QueryValidatorOutstandingRewardsResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::QueryValidatorOutstandingRewardsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::QueryValidatorOutstandingRewardsResponse, _impl_.rewards_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::QueryValidatorCommissionRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::QueryValidatorCommissionRequest, _impl_.validator_address_),
    PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::QueryValidatorCommissionResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::QueryValidatorCommissionResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::QueryValidatorCommissionResponse, _impl_.commission_),
    0,
    PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::QueryValidatorSlashesRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::QueryValidatorSlashesRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::QueryValidatorSlashesRequest, _impl_.validator_address_),
    PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::QueryValidatorSlashesRequest, _impl_.starting_height_),
    PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::QueryValidatorSlashesRequest, _impl_.ending_height_),
    PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::QueryValidatorSlashesRequest, _impl_.pagination_),
    ~0u,
    ~0u,
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::QueryValidatorSlashesResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::QueryValidatorSlashesResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::QueryValidatorSlashesResponse, _impl_.slashes_),
    PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::QueryValidatorSlashesResponse, _impl_.pagination_),
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::QueryDelegationRewardsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::QueryDelegationRewardsRequest, _impl_.delegator_address_),
    PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::QueryDelegationRewardsRequest, _impl_.validator_address_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::QueryDelegationRewardsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::QueryDelegationRewardsResponse, _impl_.rewards_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::QueryDelegationTotalRewardsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::QueryDelegationTotalRewardsRequest, _impl_.delegator_address_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::QueryDelegationTotalRewardsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::QueryDelegationTotalRewardsResponse, _impl_.rewards_),
    PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::QueryDelegationTotalRewardsResponse, _impl_.total_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::QueryDelegatorValidatorsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::QueryDelegatorValidatorsRequest, _impl_.delegator_address_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::QueryDelegatorValidatorsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::QueryDelegatorValidatorsResponse, _impl_.validators_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::QueryDelegatorWithdrawAddressRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::QueryDelegatorWithdrawAddressRequest, _impl_.delegator_address_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::QueryDelegatorWithdrawAddressResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::QueryDelegatorWithdrawAddressResponse, _impl_.withdraw_address_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::QueryCommunityPoolRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::QueryCommunityPoolResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::QueryCommunityPoolResponse, _impl_.pool_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::cosmos::distribution::v1beta1::QueryParamsRequest)},
        { 8, 17, -1, sizeof(::cosmos::distribution::v1beta1::QueryParamsResponse)},
        { 18, -1, -1, sizeof(::cosmos::distribution::v1beta1::QueryValidatorDistributionInfoRequest)},
        { 27, -1, -1, sizeof(::cosmos::distribution::v1beta1::QueryValidatorDistributionInfoResponse)},
        { 38, -1, -1, sizeof(::cosmos::distribution::v1beta1::QueryValidatorOutstandingRewardsRequest)},
        { 47, 56, -1, sizeof(::cosmos::distribution::v1beta1::QueryValidatorOutstandingRewardsResponse)},
        { 57, -1, -1, sizeof(::cosmos::distribution::v1beta1::QueryValidatorCommissionRequest)},
        { 66, 75, -1, sizeof(::cosmos::distribution::v1beta1::QueryValidatorCommissionResponse)},
        { 76, 88, -1, sizeof(::cosmos::distribution::v1beta1::QueryValidatorSlashesRequest)},
        { 92, 102, -1, sizeof(::cosmos::distribution::v1beta1::QueryValidatorSlashesResponse)},
        { 104, -1, -1, sizeof(::cosmos::distribution::v1beta1::QueryDelegationRewardsRequest)},
        { 114, -1, -1, sizeof(::cosmos::distribution::v1beta1::QueryDelegationRewardsResponse)},
        { 123, -1, -1, sizeof(::cosmos::distribution::v1beta1::QueryDelegationTotalRewardsRequest)},
        { 132, -1, -1, sizeof(::cosmos::distribution::v1beta1::QueryDelegationTotalRewardsResponse)},
        { 142, -1, -1, sizeof(::cosmos::distribution::v1beta1::QueryDelegatorValidatorsRequest)},
        { 151, -1, -1, sizeof(::cosmos::distribution::v1beta1::QueryDelegatorValidatorsResponse)},
        { 160, -1, -1, sizeof(::cosmos::distribution::v1beta1::QueryDelegatorWithdrawAddressRequest)},
        { 169, -1, -1, sizeof(::cosmos::distribution::v1beta1::QueryDelegatorWithdrawAddressResponse)},
        { 178, -1, -1, sizeof(::cosmos::distribution::v1beta1::QueryCommunityPoolRequest)},
        { 186, -1, -1, sizeof(::cosmos::distribution::v1beta1::QueryCommunityPoolResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::cosmos::distribution::v1beta1::_QueryParamsRequest_default_instance_._instance,
    &::cosmos::distribution::v1beta1::_QueryParamsResponse_default_instance_._instance,
    &::cosmos::distribution::v1beta1::_QueryValidatorDistributionInfoRequest_default_instance_._instance,
    &::cosmos::distribution::v1beta1::_QueryValidatorDistributionInfoResponse_default_instance_._instance,
    &::cosmos::distribution::v1beta1::_QueryValidatorOutstandingRewardsRequest_default_instance_._instance,
    &::cosmos::distribution::v1beta1::_QueryValidatorOutstandingRewardsResponse_default_instance_._instance,
    &::cosmos::distribution::v1beta1::_QueryValidatorCommissionRequest_default_instance_._instance,
    &::cosmos::distribution::v1beta1::_QueryValidatorCommissionResponse_default_instance_._instance,
    &::cosmos::distribution::v1beta1::_QueryValidatorSlashesRequest_default_instance_._instance,
    &::cosmos::distribution::v1beta1::_QueryValidatorSlashesResponse_default_instance_._instance,
    &::cosmos::distribution::v1beta1::_QueryDelegationRewardsRequest_default_instance_._instance,
    &::cosmos::distribution::v1beta1::_QueryDelegationRewardsResponse_default_instance_._instance,
    &::cosmos::distribution::v1beta1::_QueryDelegationTotalRewardsRequest_default_instance_._instance,
    &::cosmos::distribution::v1beta1::_QueryDelegationTotalRewardsResponse_default_instance_._instance,
    &::cosmos::distribution::v1beta1::_QueryDelegatorValidatorsRequest_default_instance_._instance,
    &::cosmos::distribution::v1beta1::_QueryDelegatorValidatorsResponse_default_instance_._instance,
    &::cosmos::distribution::v1beta1::_QueryDelegatorWithdrawAddressRequest_default_instance_._instance,
    &::cosmos::distribution::v1beta1::_QueryDelegatorWithdrawAddressResponse_default_instance_._instance,
    &::cosmos::distribution::v1beta1::_QueryCommunityPoolRequest_default_instance_._instance,
    &::cosmos::distribution::v1beta1::_QueryCommunityPoolResponse_default_instance_._instance,
};
const char descriptor_table_protodef_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\'cosmos/distribution/v1beta1/query.prot"
    "o\022\033cosmos.distribution.v1beta1\032*cosmos/b"
    "ase/query/v1beta1/pagination.proto\032\024gogo"
    "proto/gogo.proto\032\034google/api/annotations"
    ".proto\032\036cosmos/base/v1beta1/coin.proto\032."
    "cosmos/distribution/v1beta1/distribution"
    ".proto\032\031cosmos_proto/cosmos.proto\032\021amino"
    "/amino.proto\"\024\n\022QueryParamsRequest\"]\n\023Qu"
    "eryParamsResponse\022F\n\006params\030\001 \001(\0132#.cosm"
    "os.distribution.v1beta1.ParamsB\t\310\336\037\000\250\347\260*"
    "\001R\006params\"n\n%QueryValidatorDistributionI"
    "nfoRequest\022E\n\021validator_address\030\001 \001(\tB\030\322"
    "\264-\024cosmos.AddressStringR\020validatorAddres"
    "s\"\345\002\n&QueryValidatorDistributionInfoResp"
    "onse\022C\n\020operator_address\030\001 \001(\tB\030\322\264-\024cosm"
    "os.AddressStringR\017operatorAddress\022\202\001\n\021se"
    "lf_bond_rewards\030\002 \003(\0132\034.cosmos.base.v1be"
    "ta1.DecCoinB8\310\336\037\000\252\337\037+github.com/cosmos/c"
    "osmos-sdk/types.DecCoins\250\347\260*\001R\017selfBondR"
    "ewards\022q\n\ncommission\030\003 \003(\0132\034.cosmos.base"
    ".v1beta1.DecCoinB3\310\336\037\000\252\337\037+github.com/cos"
    "mos/cosmos-sdk/types.DecCoinsR\ncommissio"
    "n\"p\n\'QueryValidatorOutstandingRewardsReq"
    "uest\022E\n\021validator_address\030\001 \001(\tB\030\322\264-\024cos"
    "mos.AddressStringR\020validatorAddress\"\211\001\n("
    "QueryValidatorOutstandingRewardsResponse"
    "\022]\n\007rewards\030\001 \001(\01328.cosmos.distribution."
    "v1beta1.ValidatorOutstandingRewardsB\t\310\336\037"
    "\000\250\347\260*\001R\007rewards\"h\n\037QueryValidatorCommiss"
    "ionRequest\022E\n\021validator_address\030\001 \001(\tB\030\322"
    "\264-\024cosmos.AddressStringR\020validatorAddres"
    "s\"\212\001\n QueryValidatorCommissionResponse\022f"
    "\n\ncommission\030\001 \001(\0132;.cosmos.distribution"
    ".v1beta1.ValidatorAccumulatedCommissionB"
    "\t\310\336\037\000\250\347\260*\001R\ncommission\"\205\002\n\034QueryValidato"
    "rSlashesRequest\022E\n\021validator_address\030\001 \001"
    "(\tB\030\322\264-\024cosmos.AddressStringR\020validatorA"
    "ddress\022\'\n\017starting_height\030\002 \001(\004R\016startin"
    "gHeight\022#\n\rending_height\030\003 \001(\004R\014endingHe"
    "ight\022F\n\npagination\030\004 \001(\0132&.cosmos.base.q"
    "uery.v1beta1.PageRequestR\npagination:\010\210\240"
    "\037\000\230\240\037\001\"\277\001\n\035QueryValidatorSlashesResponse"
    "\022U\n\007slashes\030\001 \003(\01320.cosmos.distribution."
    "v1beta1.ValidatorSlashEventB\t\310\336\037\000\250\347\260*\001R\007"
    "slashes\022G\n\npagination\030\002 \001(\0132\'.cosmos.bas"
    "e.query.v1beta1.PageResponseR\npagination"
    "\"\267\001\n\035QueryDelegationRewardsRequest\022E\n\021de"
    "legator_address\030\001 \001(\tB\030\322\264-\024cosmos.Addres"
    "sStringR\020delegatorAddress\022E\n\021validator_a"
    "ddress\030\002 \001(\tB\030\322\264-\024cosmos.AddressStringR\020"
    "validatorAddress:\010\210\240\037\000\350\240\037\000\"\222\001\n\036QueryDele"
    "gationRewardsResponse\022p\n\007rewards\030\001 \003(\0132\034"
    ".cosmos.base.v1beta1.DecCoinB8\310\336\037\000\252\337\037+gi"
    "thub.com/cosmos/cosmos-sdk/types.DecCoin"
    "s\250\347\260*\001R\007rewards\"u\n\"QueryDelegationTotalR"
    "ewardsRequest\022E\n\021delegator_address\030\001 \001(\t"
    "B\030\322\264-\024cosmos.AddressStringR\020delegatorAdd"
    "ress:\010\210\240\037\000\350\240\037\000\"\360\001\n#QueryDelegationTotalR"
    "ewardsResponse\022[\n\007rewards\030\001 \003(\01326.cosmos"
    ".distribution.v1beta1.DelegationDelegato"
    "rRewardB\t\310\336\037\000\250\347\260*\001R\007rewards\022l\n\005total\030\002 \003"
    "(\0132\034.cosmos.base.v1beta1.DecCoinB8\310\336\037\000\252\337"
    "\037+github.com/cosmos/cosmos-sdk/types.Dec"
    "Coins\250\347\260*\001R\005total\"r\n\037QueryDelegatorValid"
    "atorsRequest\022E\n\021delegator_address\030\001 \001(\tB"
    "\030\322\264-\024cosmos.AddressStringR\020delegatorAddr"
    "ess:\010\210\240\037\000\350\240\037\000\"L\n QueryDelegatorValidator"
    "sResponse\022\036\n\nvalidators\030\001 \003(\tR\nvalidator"
    "s:\010\210\240\037\000\350\240\037\000\"w\n$QueryDelegatorWithdrawAdd"
    "ressRequest\022E\n\021delegator_address\030\001 \001(\tB\030"
    "\322\264-\024cosmos.AddressStringR\020delegatorAddre"
    "ss:\010\210\240\037\000\350\240\037\000\"v\n%QueryDelegatorWithdrawAd"
    "dressResponse\022C\n\020withdraw_address\030\001 \001(\tB"
    "\030\322\264-\024cosmos.AddressStringR\017withdrawAddre"
    "ss:\010\210\240\037\000\350\240\037\000\"\033\n\031QueryCommunityPoolReques"
    "t\"\210\001\n\032QueryCommunityPoolResponse\022j\n\004pool"
    "\030\001 \003(\0132\034.cosmos.base.v1beta1.DecCoinB8\310\336"
    "\037\000\252\337\037+github.com/cosmos/cosmos-sdk/types"
    ".DecCoins\250\347\260*\001R\004pool2\304\021\n\005Query\022\230\001\n\006Param"
    "s\022/.cosmos.distribution.v1beta1.QueryPar"
    "amsRequest\0320.cosmos.distribution.v1beta1"
    ".QueryParamsResponse\"+\202\323\344\223\002%\022#/cosmos/di"
    "stribution/v1beta1/params\022\351\001\n\031ValidatorD"
    "istributionInfo\022B.cosmos.distribution.v1"
    "beta1.QueryValidatorDistributionInfoRequ"
    "est\032C.cosmos.distribution.v1beta1.QueryV"
    "alidatorDistributionInfoResponse\"C\202\323\344\223\002="
    "\022;/cosmos/distribution/v1beta1/validator"
    "s/{validator_address}\022\203\002\n\033ValidatorOutst"
    "andingRewards\022D.cosmos.distribution.v1be"
    "ta1.QueryValidatorOutstandingRewardsRequ"
    "est\032E.cosmos.distribution.v1beta1.QueryV"
    "alidatorOutstandingRewardsResponse\"W\202\323\344\223"
    "\002Q\022O/cosmos/distribution/v1beta1/validat"
    "ors/{validator_address}/outstanding_rewa"
    "rds\022\342\001\n\023ValidatorCommission\022<.cosmos.dis"
    "tribution.v1beta1.QueryValidatorCommissi"
    "onRequest\032=.cosmos.distribution.v1beta1."
    "QueryValidatorCommissionResponse\"N\202\323\344\223\002H"
    "\022F/cosmos/distribution/v1beta1/validator"
    "s/{validator_address}/commission\022\326\001\n\020Val"
    "idatorSlashes\0229.cosmos.distribution.v1be"
    "ta1.QueryValidatorSlashesRequest\032:.cosmo"
    "s.distribution.v1beta1.QueryValidatorSla"
    "shesResponse\"K\202\323\344\223\002E\022C/cosmos/distributi"
    "on/v1beta1/validators/{validator_address"
    "}/slashes\022\355\001\n\021DelegationRewards\022:.cosmos"
    ".distribution.v1beta1.QueryDelegationRew"
    "ardsRequest\032;.cosmos.distribution.v1beta"
    "1.QueryDelegationRewardsResponse\"_\202\323\344\223\002Y"
    "\022W/cosmos/distribution/v1beta1/delegator"
    "s/{delegator_address}/rewards/{validator"
    "_address}\022\350\001\n\026DelegationTotalRewards\022\?.c"
    "osmos.distribution.v1beta1.QueryDelegati"
    "onTotalRewardsRequest\032@.cosmos.distribut"
    "ion.v1beta1.QueryDelegationTotalRewardsR"
    "esponse\"K\202\323\344\223\002E\022C/cosmos/distribution/v1"
    "beta1/delegators/{delegator_address}/rew"
    "ards\022\342\001\n\023DelegatorValidators\022<.cosmos.di"
    "stribution.v1beta1.QueryDelegatorValidat"
    "orsRequest\032=.cosmos.distribution.v1beta1"
    ".QueryDelegatorValidatorsResponse\"N\202\323\344\223\002"
    "H\022F/cosmos/distribution/v1beta1/delegato"
    "rs/{delegator_address}/validators\022\367\001\n\030De"
    "legatorWithdrawAddress\022A.cosmos.distribu"
    "tion.v1beta1.QueryDelegatorWithdrawAddre"
    "ssRequest\032B.cosmos.distribution.v1beta1."
    "QueryDelegatorWithdrawAddressResponse\"T\202"
    "\323\344\223\002N\022L/cosmos/distribution/v1beta1/dele"
    "gators/{delegator_address}/withdraw_addr"
    "ess\022\265\001\n\rCommunityPool\0226.cosmos.distribut"
    "ion.v1beta1.QueryCommunityPoolRequest\0327."
    "cosmos.distribution.v1beta1.QueryCommuni"
    "tyPoolResponse\"3\202\323\344\223\002-\022+/cosmos/distribu"
    "tion/v1beta1/community_poolB\356\001\n\037com.cosm"
    "os.distribution.v1beta1B\nQueryProtoP\001Z1g"
    "ithub.com/cosmos/cosmos-sdk/x/distributi"
    "on/types\242\002\003CDX\252\002\033Cosmos.Distribution.V1b"
    "eta1\312\002\033Cosmos\\Distribution\\V1beta1\342\002\'Cos"
    "mos\\Distribution\\V1beta1\\GPBMetadata\352\002\035C"
    "osmos::Distribution::V1beta1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto_deps[7] =
    {
        &::descriptor_table_amino_2famino_2eproto,
        &::descriptor_table_cosmos_2fbase_2fquery_2fv1beta1_2fpagination_2eproto,
        &::descriptor_table_cosmos_2fbase_2fv1beta1_2fcoin_2eproto,
        &::descriptor_table_cosmos_2fdistribution_2fv1beta1_2fdistribution_2eproto,
        &::descriptor_table_cosmos_5fproto_2fcosmos_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_google_2fapi_2fannotations_2eproto,
};
static ::absl::once_flag descriptor_table_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto = {
    false,
    false,
    5636,
    descriptor_table_protodef_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto,
    "cosmos/distribution/v1beta1/query.proto",
    &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto_once,
    descriptor_table_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto_deps,
    7,
    20,
    schemas,
    file_default_instances,
    TableStruct_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto::offsets,
    file_level_metadata_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto,
    file_level_enum_descriptors_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto,
    file_level_service_descriptors_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto_getter() {
  return &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto(&descriptor_table_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto);
namespace cosmos {
namespace distribution {
namespace v1beta1 {
// ===================================================================

class QueryParamsRequest::_Internal {
 public:
};

QueryParamsRequest::QueryParamsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cosmos.distribution.v1beta1.QueryParamsRequest)
}
QueryParamsRequest::QueryParamsRequest(const QueryParamsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  QueryParamsRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.distribution.v1beta1.QueryParamsRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryParamsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryParamsRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata QueryParamsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto[0]);
}
// ===================================================================

class QueryParamsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryParamsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryParamsResponse, _impl_._has_bits_);
  static const ::cosmos::distribution::v1beta1::Params& params(const QueryParamsResponse* msg);
  static void set_has_params(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::distribution::v1beta1::Params&
QueryParamsResponse::_Internal::params(const QueryParamsResponse* msg) {
  return *msg->_impl_.params_;
}
void QueryParamsResponse::clear_params() {
  if (_impl_.params_ != nullptr) _impl_.params_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryParamsResponse::QueryParamsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.distribution.v1beta1.QueryParamsResponse)
}
QueryParamsResponse::QueryParamsResponse(const QueryParamsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryParamsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.params_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.params_ = new ::cosmos::distribution::v1beta1::Params(*from._impl_.params_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.distribution.v1beta1.QueryParamsResponse)
}

inline void QueryParamsResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.params_){nullptr}
  };
}

QueryParamsResponse::~QueryParamsResponse() {
  // @@protoc_insertion_point(destructor:cosmos.distribution.v1beta1.QueryParamsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryParamsResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.params_;
}

void QueryParamsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryParamsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.distribution.v1beta1.QueryParamsResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.params_ != nullptr);
    _impl_.params_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryParamsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cosmos.distribution.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryParamsResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.distribution.v1beta1.QueryParamsResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.distribution.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.distribution.v1beta1.QueryParamsResponse)
  return target;
}

::size_t QueryParamsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.distribution.v1beta1.QueryParamsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cosmos.distribution.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryParamsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryParamsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryParamsResponse::GetClassData() const { return &_class_data_; }


void QueryParamsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryParamsResponse*>(&to_msg);
  auto& from = static_cast<const QueryParamsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.distribution.v1beta1.QueryParamsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_params()->::cosmos::distribution::v1beta1::Params::MergeFrom(
        from._internal_params());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryParamsResponse::CopyFrom(const QueryParamsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.distribution.v1beta1.QueryParamsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryParamsResponse::IsInitialized() const {
  return true;
}

void QueryParamsResponse::InternalSwap(QueryParamsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.params_, other->_impl_.params_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryParamsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto[1]);
}
// ===================================================================

class QueryValidatorDistributionInfoRequest::_Internal {
 public:
};

QueryValidatorDistributionInfoRequest::QueryValidatorDistributionInfoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.distribution.v1beta1.QueryValidatorDistributionInfoRequest)
}
QueryValidatorDistributionInfoRequest::QueryValidatorDistributionInfoRequest(const QueryValidatorDistributionInfoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryValidatorDistributionInfoRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.validator_address_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.validator_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.validator_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_validator_address().empty()) {
    _this->_impl_.validator_address_.Set(from._internal_validator_address(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.distribution.v1beta1.QueryValidatorDistributionInfoRequest)
}

inline void QueryValidatorDistributionInfoRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.validator_address_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.validator_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.validator_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryValidatorDistributionInfoRequest::~QueryValidatorDistributionInfoRequest() {
  // @@protoc_insertion_point(destructor:cosmos.distribution.v1beta1.QueryValidatorDistributionInfoRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryValidatorDistributionInfoRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.validator_address_.Destroy();
}

void QueryValidatorDistributionInfoRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryValidatorDistributionInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.distribution.v1beta1.QueryValidatorDistributionInfoRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.validator_address_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryValidatorDistributionInfoRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_validator_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.distribution.v1beta1.QueryValidatorDistributionInfoRequest.validator_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryValidatorDistributionInfoRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.distribution.v1beta1.QueryValidatorDistributionInfoRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_validator_address().empty()) {
    const std::string& _s = this->_internal_validator_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.distribution.v1beta1.QueryValidatorDistributionInfoRequest.validator_address");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.distribution.v1beta1.QueryValidatorDistributionInfoRequest)
  return target;
}

::size_t QueryValidatorDistributionInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.distribution.v1beta1.QueryValidatorDistributionInfoRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_validator_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_validator_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryValidatorDistributionInfoRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryValidatorDistributionInfoRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryValidatorDistributionInfoRequest::GetClassData() const { return &_class_data_; }


void QueryValidatorDistributionInfoRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryValidatorDistributionInfoRequest*>(&to_msg);
  auto& from = static_cast<const QueryValidatorDistributionInfoRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.distribution.v1beta1.QueryValidatorDistributionInfoRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_validator_address().empty()) {
    _this->_internal_set_validator_address(from._internal_validator_address());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryValidatorDistributionInfoRequest::CopyFrom(const QueryValidatorDistributionInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.distribution.v1beta1.QueryValidatorDistributionInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryValidatorDistributionInfoRequest::IsInitialized() const {
  return true;
}

void QueryValidatorDistributionInfoRequest::InternalSwap(QueryValidatorDistributionInfoRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.validator_address_, lhs_arena,
                                       &other->_impl_.validator_address_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryValidatorDistributionInfoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto[2]);
}
// ===================================================================

class QueryValidatorDistributionInfoResponse::_Internal {
 public:
};

void QueryValidatorDistributionInfoResponse::clear_self_bond_rewards() {
  _internal_mutable_self_bond_rewards()->Clear();
}
void QueryValidatorDistributionInfoResponse::clear_commission() {
  _internal_mutable_commission()->Clear();
}
QueryValidatorDistributionInfoResponse::QueryValidatorDistributionInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse)
}
QueryValidatorDistributionInfoResponse::QueryValidatorDistributionInfoResponse(const QueryValidatorDistributionInfoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryValidatorDistributionInfoResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.self_bond_rewards_){from._impl_.self_bond_rewards_}
    , decltype(_impl_.commission_){from._impl_.commission_}
    , decltype(_impl_.operator_address_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.operator_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.operator_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_operator_address().empty()) {
    _this->_impl_.operator_address_.Set(from._internal_operator_address(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse)
}

inline void QueryValidatorDistributionInfoResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.self_bond_rewards_){arena}
    , decltype(_impl_.commission_){arena}
    , decltype(_impl_.operator_address_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.operator_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.operator_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryValidatorDistributionInfoResponse::~QueryValidatorDistributionInfoResponse() {
  // @@protoc_insertion_point(destructor:cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryValidatorDistributionInfoResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_self_bond_rewards()->~RepeatedPtrField();
  _internal_mutable_commission()->~RepeatedPtrField();
  _impl_.operator_address_.Destroy();
}

void QueryValidatorDistributionInfoResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryValidatorDistributionInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_self_bond_rewards()->Clear();
  _internal_mutable_commission()->Clear();
  _impl_.operator_address_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryValidatorDistributionInfoResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string operator_address = 1 [json_name = "operatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_operator_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse.operator_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated .cosmos.base.v1beta1.DecCoin self_bond_rewards = 2 [json_name = "selfBondRewards", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (.amino.dont_omitempty) = true];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_self_bond_rewards(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated .cosmos.base.v1beta1.DecCoin commission = 3 [json_name = "commission", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_commission(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryValidatorDistributionInfoResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string operator_address = 1 [json_name = "operatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_operator_address().empty()) {
    const std::string& _s = this->_internal_operator_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse.operator_address");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .cosmos.base.v1beta1.DecCoin self_bond_rewards = 2 [json_name = "selfBondRewards", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (.amino.dont_omitempty) = true];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_self_bond_rewards_size()); i < n; i++) {
    const auto& repfield = this->_internal_self_bond_rewards(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .cosmos.base.v1beta1.DecCoin commission = 3 [json_name = "commission", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_commission_size()); i < n; i++) {
    const auto& repfield = this->_internal_commission(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse)
  return target;
}

::size_t QueryValidatorDistributionInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cosmos.base.v1beta1.DecCoin self_bond_rewards = 2 [json_name = "selfBondRewards", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (.amino.dont_omitempty) = true];
  total_size += 1UL * this->_internal_self_bond_rewards_size();
  for (const auto& msg : this->_internal_self_bond_rewards()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .cosmos.base.v1beta1.DecCoin commission = 3 [json_name = "commission", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];
  total_size += 1UL * this->_internal_commission_size();
  for (const auto& msg : this->_internal_commission()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string operator_address = 1 [json_name = "operatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_operator_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_operator_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryValidatorDistributionInfoResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryValidatorDistributionInfoResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryValidatorDistributionInfoResponse::GetClassData() const { return &_class_data_; }


void QueryValidatorDistributionInfoResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryValidatorDistributionInfoResponse*>(&to_msg);
  auto& from = static_cast<const QueryValidatorDistributionInfoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_self_bond_rewards()->MergeFrom(from._internal_self_bond_rewards());
  _this->_internal_mutable_commission()->MergeFrom(from._internal_commission());
  if (!from._internal_operator_address().empty()) {
    _this->_internal_set_operator_address(from._internal_operator_address());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryValidatorDistributionInfoResponse::CopyFrom(const QueryValidatorDistributionInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryValidatorDistributionInfoResponse::IsInitialized() const {
  return true;
}

void QueryValidatorDistributionInfoResponse::InternalSwap(QueryValidatorDistributionInfoResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_self_bond_rewards()->InternalSwap(other->_internal_mutable_self_bond_rewards());
  _internal_mutable_commission()->InternalSwap(other->_internal_mutable_commission());
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.operator_address_, lhs_arena,
                                       &other->_impl_.operator_address_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryValidatorDistributionInfoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto[3]);
}
// ===================================================================

class QueryValidatorOutstandingRewardsRequest::_Internal {
 public:
};

QueryValidatorOutstandingRewardsRequest::QueryValidatorOutstandingRewardsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsRequest)
}
QueryValidatorOutstandingRewardsRequest::QueryValidatorOutstandingRewardsRequest(const QueryValidatorOutstandingRewardsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryValidatorOutstandingRewardsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.validator_address_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.validator_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.validator_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_validator_address().empty()) {
    _this->_impl_.validator_address_.Set(from._internal_validator_address(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsRequest)
}

inline void QueryValidatorOutstandingRewardsRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.validator_address_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.validator_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.validator_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryValidatorOutstandingRewardsRequest::~QueryValidatorOutstandingRewardsRequest() {
  // @@protoc_insertion_point(destructor:cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryValidatorOutstandingRewardsRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.validator_address_.Destroy();
}

void QueryValidatorOutstandingRewardsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryValidatorOutstandingRewardsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.validator_address_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryValidatorOutstandingRewardsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_validator_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsRequest.validator_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryValidatorOutstandingRewardsRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_validator_address().empty()) {
    const std::string& _s = this->_internal_validator_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsRequest.validator_address");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsRequest)
  return target;
}

::size_t QueryValidatorOutstandingRewardsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_validator_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_validator_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryValidatorOutstandingRewardsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryValidatorOutstandingRewardsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryValidatorOutstandingRewardsRequest::GetClassData() const { return &_class_data_; }


void QueryValidatorOutstandingRewardsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryValidatorOutstandingRewardsRequest*>(&to_msg);
  auto& from = static_cast<const QueryValidatorOutstandingRewardsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_validator_address().empty()) {
    _this->_internal_set_validator_address(from._internal_validator_address());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryValidatorOutstandingRewardsRequest::CopyFrom(const QueryValidatorOutstandingRewardsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryValidatorOutstandingRewardsRequest::IsInitialized() const {
  return true;
}

void QueryValidatorOutstandingRewardsRequest::InternalSwap(QueryValidatorOutstandingRewardsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.validator_address_, lhs_arena,
                                       &other->_impl_.validator_address_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryValidatorOutstandingRewardsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto[4]);
}
// ===================================================================

class QueryValidatorOutstandingRewardsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryValidatorOutstandingRewardsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryValidatorOutstandingRewardsResponse, _impl_._has_bits_);
  static const ::cosmos::distribution::v1beta1::ValidatorOutstandingRewards& rewards(const QueryValidatorOutstandingRewardsResponse* msg);
  static void set_has_rewards(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::distribution::v1beta1::ValidatorOutstandingRewards&
QueryValidatorOutstandingRewardsResponse::_Internal::rewards(const QueryValidatorOutstandingRewardsResponse* msg) {
  return *msg->_impl_.rewards_;
}
void QueryValidatorOutstandingRewardsResponse::clear_rewards() {
  if (_impl_.rewards_ != nullptr) _impl_.rewards_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryValidatorOutstandingRewardsResponse::QueryValidatorOutstandingRewardsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse)
}
QueryValidatorOutstandingRewardsResponse::QueryValidatorOutstandingRewardsResponse(const QueryValidatorOutstandingRewardsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryValidatorOutstandingRewardsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.rewards_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.rewards_ = new ::cosmos::distribution::v1beta1::ValidatorOutstandingRewards(*from._impl_.rewards_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse)
}

inline void QueryValidatorOutstandingRewardsResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.rewards_){nullptr}
  };
}

QueryValidatorOutstandingRewardsResponse::~QueryValidatorOutstandingRewardsResponse() {
  // @@protoc_insertion_point(destructor:cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryValidatorOutstandingRewardsResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.rewards_;
}

void QueryValidatorOutstandingRewardsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryValidatorOutstandingRewardsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.rewards_ != nullptr);
    _impl_.rewards_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryValidatorOutstandingRewardsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cosmos.distribution.v1beta1.ValidatorOutstandingRewards rewards = 1 [json_name = "rewards", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_rewards(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryValidatorOutstandingRewardsResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.distribution.v1beta1.ValidatorOutstandingRewards rewards = 1 [json_name = "rewards", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::rewards(this),
        _Internal::rewards(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse)
  return target;
}

::size_t QueryValidatorOutstandingRewardsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cosmos.distribution.v1beta1.ValidatorOutstandingRewards rewards = 1 [json_name = "rewards", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.rewards_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryValidatorOutstandingRewardsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryValidatorOutstandingRewardsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryValidatorOutstandingRewardsResponse::GetClassData() const { return &_class_data_; }


void QueryValidatorOutstandingRewardsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryValidatorOutstandingRewardsResponse*>(&to_msg);
  auto& from = static_cast<const QueryValidatorOutstandingRewardsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_rewards()->::cosmos::distribution::v1beta1::ValidatorOutstandingRewards::MergeFrom(
        from._internal_rewards());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryValidatorOutstandingRewardsResponse::CopyFrom(const QueryValidatorOutstandingRewardsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryValidatorOutstandingRewardsResponse::IsInitialized() const {
  return true;
}

void QueryValidatorOutstandingRewardsResponse::InternalSwap(QueryValidatorOutstandingRewardsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.rewards_, other->_impl_.rewards_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryValidatorOutstandingRewardsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto[5]);
}
// ===================================================================

class QueryValidatorCommissionRequest::_Internal {
 public:
};

QueryValidatorCommissionRequest::QueryValidatorCommissionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.distribution.v1beta1.QueryValidatorCommissionRequest)
}
QueryValidatorCommissionRequest::QueryValidatorCommissionRequest(const QueryValidatorCommissionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryValidatorCommissionRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.validator_address_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.validator_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.validator_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_validator_address().empty()) {
    _this->_impl_.validator_address_.Set(from._internal_validator_address(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.distribution.v1beta1.QueryValidatorCommissionRequest)
}

inline void QueryValidatorCommissionRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.validator_address_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.validator_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.validator_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryValidatorCommissionRequest::~QueryValidatorCommissionRequest() {
  // @@protoc_insertion_point(destructor:cosmos.distribution.v1beta1.QueryValidatorCommissionRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryValidatorCommissionRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.validator_address_.Destroy();
}

void QueryValidatorCommissionRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryValidatorCommissionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.distribution.v1beta1.QueryValidatorCommissionRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.validator_address_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryValidatorCommissionRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_validator_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.distribution.v1beta1.QueryValidatorCommissionRequest.validator_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryValidatorCommissionRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.distribution.v1beta1.QueryValidatorCommissionRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_validator_address().empty()) {
    const std::string& _s = this->_internal_validator_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.distribution.v1beta1.QueryValidatorCommissionRequest.validator_address");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.distribution.v1beta1.QueryValidatorCommissionRequest)
  return target;
}

::size_t QueryValidatorCommissionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.distribution.v1beta1.QueryValidatorCommissionRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_validator_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_validator_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryValidatorCommissionRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryValidatorCommissionRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryValidatorCommissionRequest::GetClassData() const { return &_class_data_; }


void QueryValidatorCommissionRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryValidatorCommissionRequest*>(&to_msg);
  auto& from = static_cast<const QueryValidatorCommissionRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.distribution.v1beta1.QueryValidatorCommissionRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_validator_address().empty()) {
    _this->_internal_set_validator_address(from._internal_validator_address());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryValidatorCommissionRequest::CopyFrom(const QueryValidatorCommissionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.distribution.v1beta1.QueryValidatorCommissionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryValidatorCommissionRequest::IsInitialized() const {
  return true;
}

void QueryValidatorCommissionRequest::InternalSwap(QueryValidatorCommissionRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.validator_address_, lhs_arena,
                                       &other->_impl_.validator_address_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryValidatorCommissionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto[6]);
}
// ===================================================================

class QueryValidatorCommissionResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryValidatorCommissionResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryValidatorCommissionResponse, _impl_._has_bits_);
  static const ::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission& commission(const QueryValidatorCommissionResponse* msg);
  static void set_has_commission(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission&
QueryValidatorCommissionResponse::_Internal::commission(const QueryValidatorCommissionResponse* msg) {
  return *msg->_impl_.commission_;
}
void QueryValidatorCommissionResponse::clear_commission() {
  if (_impl_.commission_ != nullptr) _impl_.commission_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryValidatorCommissionResponse::QueryValidatorCommissionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.distribution.v1beta1.QueryValidatorCommissionResponse)
}
QueryValidatorCommissionResponse::QueryValidatorCommissionResponse(const QueryValidatorCommissionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryValidatorCommissionResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.commission_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.commission_ = new ::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission(*from._impl_.commission_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.distribution.v1beta1.QueryValidatorCommissionResponse)
}

inline void QueryValidatorCommissionResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.commission_){nullptr}
  };
}

QueryValidatorCommissionResponse::~QueryValidatorCommissionResponse() {
  // @@protoc_insertion_point(destructor:cosmos.distribution.v1beta1.QueryValidatorCommissionResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryValidatorCommissionResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.commission_;
}

void QueryValidatorCommissionResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryValidatorCommissionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.distribution.v1beta1.QueryValidatorCommissionResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.commission_ != nullptr);
    _impl_.commission_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryValidatorCommissionResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cosmos.distribution.v1beta1.ValidatorAccumulatedCommission commission = 1 [json_name = "commission", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_commission(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryValidatorCommissionResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.distribution.v1beta1.QueryValidatorCommissionResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.distribution.v1beta1.ValidatorAccumulatedCommission commission = 1 [json_name = "commission", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::commission(this),
        _Internal::commission(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.distribution.v1beta1.QueryValidatorCommissionResponse)
  return target;
}

::size_t QueryValidatorCommissionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.distribution.v1beta1.QueryValidatorCommissionResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cosmos.distribution.v1beta1.ValidatorAccumulatedCommission commission = 1 [json_name = "commission", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.commission_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryValidatorCommissionResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryValidatorCommissionResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryValidatorCommissionResponse::GetClassData() const { return &_class_data_; }


void QueryValidatorCommissionResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryValidatorCommissionResponse*>(&to_msg);
  auto& from = static_cast<const QueryValidatorCommissionResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.distribution.v1beta1.QueryValidatorCommissionResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_commission()->::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission::MergeFrom(
        from._internal_commission());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryValidatorCommissionResponse::CopyFrom(const QueryValidatorCommissionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.distribution.v1beta1.QueryValidatorCommissionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryValidatorCommissionResponse::IsInitialized() const {
  return true;
}

void QueryValidatorCommissionResponse::InternalSwap(QueryValidatorCommissionResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.commission_, other->_impl_.commission_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryValidatorCommissionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto[7]);
}
// ===================================================================

class QueryValidatorSlashesRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryValidatorSlashesRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryValidatorSlashesRequest, _impl_._has_bits_);
  static const ::cosmos::base::query::v1beta1::PageRequest& pagination(const QueryValidatorSlashesRequest* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::query::v1beta1::PageRequest&
QueryValidatorSlashesRequest::_Internal::pagination(const QueryValidatorSlashesRequest* msg) {
  return *msg->_impl_.pagination_;
}
void QueryValidatorSlashesRequest::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryValidatorSlashesRequest::QueryValidatorSlashesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.distribution.v1beta1.QueryValidatorSlashesRequest)
}
QueryValidatorSlashesRequest::QueryValidatorSlashesRequest(const QueryValidatorSlashesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryValidatorSlashesRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.validator_address_) {}

    , decltype(_impl_.pagination_){nullptr}
    , decltype(_impl_.starting_height_) {}

    , decltype(_impl_.ending_height_) {}
  };

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.validator_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.validator_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_validator_address().empty()) {
    _this->_impl_.validator_address_.Set(from._internal_validator_address(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::cosmos::base::query::v1beta1::PageRequest(*from._impl_.pagination_);
  }
  ::memcpy(&_impl_.starting_height_, &from._impl_.starting_height_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.ending_height_) -
    reinterpret_cast<char*>(&_impl_.starting_height_)) + sizeof(_impl_.ending_height_));
  // @@protoc_insertion_point(copy_constructor:cosmos.distribution.v1beta1.QueryValidatorSlashesRequest)
}

inline void QueryValidatorSlashesRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.validator_address_) {}

    , decltype(_impl_.pagination_){nullptr}
    , decltype(_impl_.starting_height_) { ::uint64_t{0u} }

    , decltype(_impl_.ending_height_) { ::uint64_t{0u} }

  };
  _impl_.validator_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.validator_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryValidatorSlashesRequest::~QueryValidatorSlashesRequest() {
  // @@protoc_insertion_point(destructor:cosmos.distribution.v1beta1.QueryValidatorSlashesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryValidatorSlashesRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.validator_address_.Destroy();
  if (this != internal_default_instance()) delete _impl_.pagination_;
}

void QueryValidatorSlashesRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryValidatorSlashesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.distribution.v1beta1.QueryValidatorSlashesRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.validator_address_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  ::memset(&_impl_.starting_height_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.ending_height_) -
      reinterpret_cast<char*>(&_impl_.starting_height_)) + sizeof(_impl_.ending_height_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryValidatorSlashesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_validator_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.distribution.v1beta1.QueryValidatorSlashesRequest.validator_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      // uint64 starting_height = 2 [json_name = "startingHeight"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          _impl_.starting_height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // uint64 ending_height = 3 [json_name = "endingHeight"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 24)) {
          _impl_.ending_height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.query.v1beta1.PageRequest pagination = 4 [json_name = "pagination"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagination(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryValidatorSlashesRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.distribution.v1beta1.QueryValidatorSlashesRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_validator_address().empty()) {
    const std::string& _s = this->_internal_validator_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.distribution.v1beta1.QueryValidatorSlashesRequest.validator_address");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // uint64 starting_height = 2 [json_name = "startingHeight"];
  if (this->_internal_starting_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_starting_height(), target);
  }

  // uint64 ending_height = 3 [json_name = "endingHeight"];
  if (this->_internal_ending_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_ending_height(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.query.v1beta1.PageRequest pagination = 4 [json_name = "pagination"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.distribution.v1beta1.QueryValidatorSlashesRequest)
  return target;
}

::size_t QueryValidatorSlashesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.distribution.v1beta1.QueryValidatorSlashesRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_validator_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_validator_address());
  }

  // .cosmos.base.query.v1beta1.PageRequest pagination = 4 [json_name = "pagination"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  // uint64 starting_height = 2 [json_name = "startingHeight"];
  if (this->_internal_starting_height() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_starting_height());
  }

  // uint64 ending_height = 3 [json_name = "endingHeight"];
  if (this->_internal_ending_height() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_ending_height());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryValidatorSlashesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryValidatorSlashesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryValidatorSlashesRequest::GetClassData() const { return &_class_data_; }


void QueryValidatorSlashesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryValidatorSlashesRequest*>(&to_msg);
  auto& from = static_cast<const QueryValidatorSlashesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.distribution.v1beta1.QueryValidatorSlashesRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_validator_address().empty()) {
    _this->_internal_set_validator_address(from._internal_validator_address());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::cosmos::base::query::v1beta1::PageRequest::MergeFrom(
        from._internal_pagination());
  }
  if (from._internal_starting_height() != 0) {
    _this->_internal_set_starting_height(from._internal_starting_height());
  }
  if (from._internal_ending_height() != 0) {
    _this->_internal_set_ending_height(from._internal_ending_height());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryValidatorSlashesRequest::CopyFrom(const QueryValidatorSlashesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.distribution.v1beta1.QueryValidatorSlashesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryValidatorSlashesRequest::IsInitialized() const {
  return true;
}

void QueryValidatorSlashesRequest::InternalSwap(QueryValidatorSlashesRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.validator_address_, lhs_arena,
                                       &other->_impl_.validator_address_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(QueryValidatorSlashesRequest, _impl_.ending_height_)
      + sizeof(QueryValidatorSlashesRequest::_impl_.ending_height_)
      - PROTOBUF_FIELD_OFFSET(QueryValidatorSlashesRequest, _impl_.pagination_)>(
          reinterpret_cast<char*>(&_impl_.pagination_),
          reinterpret_cast<char*>(&other->_impl_.pagination_));
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryValidatorSlashesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto[8]);
}
// ===================================================================

class QueryValidatorSlashesResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryValidatorSlashesResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryValidatorSlashesResponse, _impl_._has_bits_);
  static const ::cosmos::base::query::v1beta1::PageResponse& pagination(const QueryValidatorSlashesResponse* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::query::v1beta1::PageResponse&
QueryValidatorSlashesResponse::_Internal::pagination(const QueryValidatorSlashesResponse* msg) {
  return *msg->_impl_.pagination_;
}
void QueryValidatorSlashesResponse::clear_slashes() {
  _internal_mutable_slashes()->Clear();
}
void QueryValidatorSlashesResponse::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryValidatorSlashesResponse::QueryValidatorSlashesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.distribution.v1beta1.QueryValidatorSlashesResponse)
}
QueryValidatorSlashesResponse::QueryValidatorSlashesResponse(const QueryValidatorSlashesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryValidatorSlashesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.slashes_){from._impl_.slashes_}
    , decltype(_impl_.pagination_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::cosmos::base::query::v1beta1::PageResponse(*from._impl_.pagination_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.distribution.v1beta1.QueryValidatorSlashesResponse)
}

inline void QueryValidatorSlashesResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.slashes_){arena}
    , decltype(_impl_.pagination_){nullptr}
  };
}

QueryValidatorSlashesResponse::~QueryValidatorSlashesResponse() {
  // @@protoc_insertion_point(destructor:cosmos.distribution.v1beta1.QueryValidatorSlashesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryValidatorSlashesResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_slashes()->~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.pagination_;
}

void QueryValidatorSlashesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryValidatorSlashesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.distribution.v1beta1.QueryValidatorSlashesResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_slashes()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryValidatorSlashesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .cosmos.distribution.v1beta1.ValidatorSlashEvent slashes = 1 [json_name = "slashes", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_slashes(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagination(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryValidatorSlashesResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.distribution.v1beta1.QueryValidatorSlashesResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cosmos.distribution.v1beta1.ValidatorSlashEvent slashes = 1 [json_name = "slashes", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_slashes_size()); i < n; i++) {
    const auto& repfield = this->_internal_slashes(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.distribution.v1beta1.QueryValidatorSlashesResponse)
  return target;
}

::size_t QueryValidatorSlashesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.distribution.v1beta1.QueryValidatorSlashesResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cosmos.distribution.v1beta1.ValidatorSlashEvent slashes = 1 [json_name = "slashes", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  total_size += 1UL * this->_internal_slashes_size();
  for (const auto& msg : this->_internal_slashes()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryValidatorSlashesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryValidatorSlashesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryValidatorSlashesResponse::GetClassData() const { return &_class_data_; }


void QueryValidatorSlashesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryValidatorSlashesResponse*>(&to_msg);
  auto& from = static_cast<const QueryValidatorSlashesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.distribution.v1beta1.QueryValidatorSlashesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_slashes()->MergeFrom(from._internal_slashes());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::cosmos::base::query::v1beta1::PageResponse::MergeFrom(
        from._internal_pagination());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryValidatorSlashesResponse::CopyFrom(const QueryValidatorSlashesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.distribution.v1beta1.QueryValidatorSlashesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryValidatorSlashesResponse::IsInitialized() const {
  return true;
}

void QueryValidatorSlashesResponse::InternalSwap(QueryValidatorSlashesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _internal_mutable_slashes()->InternalSwap(other->_internal_mutable_slashes());
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryValidatorSlashesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto[9]);
}
// ===================================================================

class QueryDelegationRewardsRequest::_Internal {
 public:
};

QueryDelegationRewardsRequest::QueryDelegationRewardsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.distribution.v1beta1.QueryDelegationRewardsRequest)
}
QueryDelegationRewardsRequest::QueryDelegationRewardsRequest(const QueryDelegationRewardsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryDelegationRewardsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.delegator_address_) {}

    , decltype(_impl_.validator_address_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.delegator_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.delegator_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_delegator_address().empty()) {
    _this->_impl_.delegator_address_.Set(from._internal_delegator_address(), _this->GetArenaForAllocation());
  }
  _impl_.validator_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.validator_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_validator_address().empty()) {
    _this->_impl_.validator_address_.Set(from._internal_validator_address(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.distribution.v1beta1.QueryDelegationRewardsRequest)
}

inline void QueryDelegationRewardsRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.delegator_address_) {}

    , decltype(_impl_.validator_address_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.delegator_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.delegator_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.validator_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.validator_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryDelegationRewardsRequest::~QueryDelegationRewardsRequest() {
  // @@protoc_insertion_point(destructor:cosmos.distribution.v1beta1.QueryDelegationRewardsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryDelegationRewardsRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.delegator_address_.Destroy();
  _impl_.validator_address_.Destroy();
}

void QueryDelegationRewardsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryDelegationRewardsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.distribution.v1beta1.QueryDelegationRewardsRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.delegator_address_.ClearToEmpty();
  _impl_.validator_address_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryDelegationRewardsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_delegator_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.distribution.v1beta1.QueryDelegationRewardsRequest.delegator_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string validator_address = 2 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_validator_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.distribution.v1beta1.QueryDelegationRewardsRequest.validator_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryDelegationRewardsRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.distribution.v1beta1.QueryDelegationRewardsRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_delegator_address().empty()) {
    const std::string& _s = this->_internal_delegator_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.distribution.v1beta1.QueryDelegationRewardsRequest.delegator_address");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string validator_address = 2 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_validator_address().empty()) {
    const std::string& _s = this->_internal_validator_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.distribution.v1beta1.QueryDelegationRewardsRequest.validator_address");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.distribution.v1beta1.QueryDelegationRewardsRequest)
  return target;
}

::size_t QueryDelegationRewardsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.distribution.v1beta1.QueryDelegationRewardsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_delegator_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_delegator_address());
  }

  // string validator_address = 2 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_validator_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_validator_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryDelegationRewardsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryDelegationRewardsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryDelegationRewardsRequest::GetClassData() const { return &_class_data_; }


void QueryDelegationRewardsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryDelegationRewardsRequest*>(&to_msg);
  auto& from = static_cast<const QueryDelegationRewardsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.distribution.v1beta1.QueryDelegationRewardsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_delegator_address().empty()) {
    _this->_internal_set_delegator_address(from._internal_delegator_address());
  }
  if (!from._internal_validator_address().empty()) {
    _this->_internal_set_validator_address(from._internal_validator_address());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryDelegationRewardsRequest::CopyFrom(const QueryDelegationRewardsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.distribution.v1beta1.QueryDelegationRewardsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDelegationRewardsRequest::IsInitialized() const {
  return true;
}

void QueryDelegationRewardsRequest::InternalSwap(QueryDelegationRewardsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.delegator_address_, lhs_arena,
                                       &other->_impl_.delegator_address_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.validator_address_, lhs_arena,
                                       &other->_impl_.validator_address_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryDelegationRewardsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto[10]);
}
// ===================================================================

class QueryDelegationRewardsResponse::_Internal {
 public:
};

void QueryDelegationRewardsResponse::clear_rewards() {
  _internal_mutable_rewards()->Clear();
}
QueryDelegationRewardsResponse::QueryDelegationRewardsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.distribution.v1beta1.QueryDelegationRewardsResponse)
}
QueryDelegationRewardsResponse::QueryDelegationRewardsResponse(const QueryDelegationRewardsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryDelegationRewardsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.rewards_){from._impl_.rewards_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.distribution.v1beta1.QueryDelegationRewardsResponse)
}

inline void QueryDelegationRewardsResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.rewards_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

QueryDelegationRewardsResponse::~QueryDelegationRewardsResponse() {
  // @@protoc_insertion_point(destructor:cosmos.distribution.v1beta1.QueryDelegationRewardsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryDelegationRewardsResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_rewards()->~RepeatedPtrField();
}

void QueryDelegationRewardsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryDelegationRewardsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.distribution.v1beta1.QueryDelegationRewardsResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_rewards()->Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryDelegationRewardsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .cosmos.base.v1beta1.DecCoin rewards = 1 [json_name = "rewards", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (.amino.dont_omitempty) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_rewards(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryDelegationRewardsResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.distribution.v1beta1.QueryDelegationRewardsResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cosmos.base.v1beta1.DecCoin rewards = 1 [json_name = "rewards", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (.amino.dont_omitempty) = true];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_rewards_size()); i < n; i++) {
    const auto& repfield = this->_internal_rewards(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.distribution.v1beta1.QueryDelegationRewardsResponse)
  return target;
}

::size_t QueryDelegationRewardsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.distribution.v1beta1.QueryDelegationRewardsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cosmos.base.v1beta1.DecCoin rewards = 1 [json_name = "rewards", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (.amino.dont_omitempty) = true];
  total_size += 1UL * this->_internal_rewards_size();
  for (const auto& msg : this->_internal_rewards()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryDelegationRewardsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryDelegationRewardsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryDelegationRewardsResponse::GetClassData() const { return &_class_data_; }


void QueryDelegationRewardsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryDelegationRewardsResponse*>(&to_msg);
  auto& from = static_cast<const QueryDelegationRewardsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.distribution.v1beta1.QueryDelegationRewardsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_rewards()->MergeFrom(from._internal_rewards());
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryDelegationRewardsResponse::CopyFrom(const QueryDelegationRewardsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.distribution.v1beta1.QueryDelegationRewardsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDelegationRewardsResponse::IsInitialized() const {
  return true;
}

void QueryDelegationRewardsResponse::InternalSwap(QueryDelegationRewardsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_rewards()->InternalSwap(other->_internal_mutable_rewards());
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryDelegationRewardsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto[11]);
}
// ===================================================================

class QueryDelegationTotalRewardsRequest::_Internal {
 public:
};

QueryDelegationTotalRewardsRequest::QueryDelegationTotalRewardsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.distribution.v1beta1.QueryDelegationTotalRewardsRequest)
}
QueryDelegationTotalRewardsRequest::QueryDelegationTotalRewardsRequest(const QueryDelegationTotalRewardsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryDelegationTotalRewardsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.delegator_address_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.delegator_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.delegator_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_delegator_address().empty()) {
    _this->_impl_.delegator_address_.Set(from._internal_delegator_address(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.distribution.v1beta1.QueryDelegationTotalRewardsRequest)
}

inline void QueryDelegationTotalRewardsRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.delegator_address_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.delegator_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.delegator_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryDelegationTotalRewardsRequest::~QueryDelegationTotalRewardsRequest() {
  // @@protoc_insertion_point(destructor:cosmos.distribution.v1beta1.QueryDelegationTotalRewardsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryDelegationTotalRewardsRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.delegator_address_.Destroy();
}

void QueryDelegationTotalRewardsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryDelegationTotalRewardsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.distribution.v1beta1.QueryDelegationTotalRewardsRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.delegator_address_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryDelegationTotalRewardsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_delegator_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.distribution.v1beta1.QueryDelegationTotalRewardsRequest.delegator_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryDelegationTotalRewardsRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.distribution.v1beta1.QueryDelegationTotalRewardsRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_delegator_address().empty()) {
    const std::string& _s = this->_internal_delegator_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.distribution.v1beta1.QueryDelegationTotalRewardsRequest.delegator_address");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.distribution.v1beta1.QueryDelegationTotalRewardsRequest)
  return target;
}

::size_t QueryDelegationTotalRewardsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.distribution.v1beta1.QueryDelegationTotalRewardsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_delegator_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_delegator_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryDelegationTotalRewardsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryDelegationTotalRewardsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryDelegationTotalRewardsRequest::GetClassData() const { return &_class_data_; }


void QueryDelegationTotalRewardsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryDelegationTotalRewardsRequest*>(&to_msg);
  auto& from = static_cast<const QueryDelegationTotalRewardsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.distribution.v1beta1.QueryDelegationTotalRewardsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_delegator_address().empty()) {
    _this->_internal_set_delegator_address(from._internal_delegator_address());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryDelegationTotalRewardsRequest::CopyFrom(const QueryDelegationTotalRewardsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.distribution.v1beta1.QueryDelegationTotalRewardsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDelegationTotalRewardsRequest::IsInitialized() const {
  return true;
}

void QueryDelegationTotalRewardsRequest::InternalSwap(QueryDelegationTotalRewardsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.delegator_address_, lhs_arena,
                                       &other->_impl_.delegator_address_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryDelegationTotalRewardsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto[12]);
}
// ===================================================================

class QueryDelegationTotalRewardsResponse::_Internal {
 public:
};

void QueryDelegationTotalRewardsResponse::clear_rewards() {
  _internal_mutable_rewards()->Clear();
}
void QueryDelegationTotalRewardsResponse::clear_total() {
  _internal_mutable_total()->Clear();
}
QueryDelegationTotalRewardsResponse::QueryDelegationTotalRewardsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse)
}
QueryDelegationTotalRewardsResponse::QueryDelegationTotalRewardsResponse(const QueryDelegationTotalRewardsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryDelegationTotalRewardsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.rewards_){from._impl_.rewards_}
    , decltype(_impl_.total_){from._impl_.total_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse)
}

inline void QueryDelegationTotalRewardsResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.rewards_){arena}
    , decltype(_impl_.total_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

QueryDelegationTotalRewardsResponse::~QueryDelegationTotalRewardsResponse() {
  // @@protoc_insertion_point(destructor:cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryDelegationTotalRewardsResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_rewards()->~RepeatedPtrField();
  _internal_mutable_total()->~RepeatedPtrField();
}

void QueryDelegationTotalRewardsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryDelegationTotalRewardsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_rewards()->Clear();
  _internal_mutable_total()->Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryDelegationTotalRewardsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .cosmos.distribution.v1beta1.DelegationDelegatorReward rewards = 1 [json_name = "rewards", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_rewards(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated .cosmos.base.v1beta1.DecCoin total = 2 [json_name = "total", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (.amino.dont_omitempty) = true];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_total(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryDelegationTotalRewardsResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cosmos.distribution.v1beta1.DelegationDelegatorReward rewards = 1 [json_name = "rewards", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_rewards_size()); i < n; i++) {
    const auto& repfield = this->_internal_rewards(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .cosmos.base.v1beta1.DecCoin total = 2 [json_name = "total", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (.amino.dont_omitempty) = true];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_total_size()); i < n; i++) {
    const auto& repfield = this->_internal_total(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse)
  return target;
}

::size_t QueryDelegationTotalRewardsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cosmos.distribution.v1beta1.DelegationDelegatorReward rewards = 1 [json_name = "rewards", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  total_size += 1UL * this->_internal_rewards_size();
  for (const auto& msg : this->_internal_rewards()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .cosmos.base.v1beta1.DecCoin total = 2 [json_name = "total", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (.amino.dont_omitempty) = true];
  total_size += 1UL * this->_internal_total_size();
  for (const auto& msg : this->_internal_total()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryDelegationTotalRewardsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryDelegationTotalRewardsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryDelegationTotalRewardsResponse::GetClassData() const { return &_class_data_; }


void QueryDelegationTotalRewardsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryDelegationTotalRewardsResponse*>(&to_msg);
  auto& from = static_cast<const QueryDelegationTotalRewardsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_rewards()->MergeFrom(from._internal_rewards());
  _this->_internal_mutable_total()->MergeFrom(from._internal_total());
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryDelegationTotalRewardsResponse::CopyFrom(const QueryDelegationTotalRewardsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDelegationTotalRewardsResponse::IsInitialized() const {
  return true;
}

void QueryDelegationTotalRewardsResponse::InternalSwap(QueryDelegationTotalRewardsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_rewards()->InternalSwap(other->_internal_mutable_rewards());
  _internal_mutable_total()->InternalSwap(other->_internal_mutable_total());
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryDelegationTotalRewardsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto[13]);
}
// ===================================================================

class QueryDelegatorValidatorsRequest::_Internal {
 public:
};

QueryDelegatorValidatorsRequest::QueryDelegatorValidatorsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.distribution.v1beta1.QueryDelegatorValidatorsRequest)
}
QueryDelegatorValidatorsRequest::QueryDelegatorValidatorsRequest(const QueryDelegatorValidatorsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryDelegatorValidatorsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.delegator_address_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.delegator_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.delegator_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_delegator_address().empty()) {
    _this->_impl_.delegator_address_.Set(from._internal_delegator_address(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.distribution.v1beta1.QueryDelegatorValidatorsRequest)
}

inline void QueryDelegatorValidatorsRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.delegator_address_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.delegator_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.delegator_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryDelegatorValidatorsRequest::~QueryDelegatorValidatorsRequest() {
  // @@protoc_insertion_point(destructor:cosmos.distribution.v1beta1.QueryDelegatorValidatorsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryDelegatorValidatorsRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.delegator_address_.Destroy();
}

void QueryDelegatorValidatorsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryDelegatorValidatorsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.distribution.v1beta1.QueryDelegatorValidatorsRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.delegator_address_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryDelegatorValidatorsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_delegator_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.distribution.v1beta1.QueryDelegatorValidatorsRequest.delegator_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryDelegatorValidatorsRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.distribution.v1beta1.QueryDelegatorValidatorsRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_delegator_address().empty()) {
    const std::string& _s = this->_internal_delegator_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.distribution.v1beta1.QueryDelegatorValidatorsRequest.delegator_address");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.distribution.v1beta1.QueryDelegatorValidatorsRequest)
  return target;
}

::size_t QueryDelegatorValidatorsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.distribution.v1beta1.QueryDelegatorValidatorsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_delegator_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_delegator_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryDelegatorValidatorsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryDelegatorValidatorsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryDelegatorValidatorsRequest::GetClassData() const { return &_class_data_; }


void QueryDelegatorValidatorsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryDelegatorValidatorsRequest*>(&to_msg);
  auto& from = static_cast<const QueryDelegatorValidatorsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.distribution.v1beta1.QueryDelegatorValidatorsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_delegator_address().empty()) {
    _this->_internal_set_delegator_address(from._internal_delegator_address());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryDelegatorValidatorsRequest::CopyFrom(const QueryDelegatorValidatorsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.distribution.v1beta1.QueryDelegatorValidatorsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDelegatorValidatorsRequest::IsInitialized() const {
  return true;
}

void QueryDelegatorValidatorsRequest::InternalSwap(QueryDelegatorValidatorsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.delegator_address_, lhs_arena,
                                       &other->_impl_.delegator_address_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryDelegatorValidatorsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto[14]);
}
// ===================================================================

class QueryDelegatorValidatorsResponse::_Internal {
 public:
};

QueryDelegatorValidatorsResponse::QueryDelegatorValidatorsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse)
}
QueryDelegatorValidatorsResponse::QueryDelegatorValidatorsResponse(const QueryDelegatorValidatorsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryDelegatorValidatorsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.validators_){from._impl_.validators_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse)
}

inline void QueryDelegatorValidatorsResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.validators_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

QueryDelegatorValidatorsResponse::~QueryDelegatorValidatorsResponse() {
  // @@protoc_insertion_point(destructor:cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryDelegatorValidatorsResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_validators()->~RepeatedPtrField();
}

void QueryDelegatorValidatorsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryDelegatorValidatorsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_validators()->Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryDelegatorValidatorsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string validators = 1 [json_name = "validators"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_validators();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse.validators"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryDelegatorValidatorsResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string validators = 1 [json_name = "validators"];
  for (int i = 0, n = this->_internal_validators_size(); i < n; ++i) {
    const auto& s = this->_internal_validators(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse.validators");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse)
  return target;
}

::size_t QueryDelegatorValidatorsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string validators = 1 [json_name = "validators"];
  total_size += 1 * ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_internal_validators().size());
  for (int i = 0, n = _internal_validators().size(); i < n; ++i) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        _internal_validators().Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryDelegatorValidatorsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryDelegatorValidatorsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryDelegatorValidatorsResponse::GetClassData() const { return &_class_data_; }


void QueryDelegatorValidatorsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryDelegatorValidatorsResponse*>(&to_msg);
  auto& from = static_cast<const QueryDelegatorValidatorsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_validators()->MergeFrom(from._internal_validators());
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryDelegatorValidatorsResponse::CopyFrom(const QueryDelegatorValidatorsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDelegatorValidatorsResponse::IsInitialized() const {
  return true;
}

void QueryDelegatorValidatorsResponse::InternalSwap(QueryDelegatorValidatorsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_validators()->InternalSwap(
      other->_internal_mutable_validators());
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryDelegatorValidatorsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto[15]);
}
// ===================================================================

class QueryDelegatorWithdrawAddressRequest::_Internal {
 public:
};

QueryDelegatorWithdrawAddressRequest::QueryDelegatorWithdrawAddressRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressRequest)
}
QueryDelegatorWithdrawAddressRequest::QueryDelegatorWithdrawAddressRequest(const QueryDelegatorWithdrawAddressRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryDelegatorWithdrawAddressRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.delegator_address_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.delegator_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.delegator_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_delegator_address().empty()) {
    _this->_impl_.delegator_address_.Set(from._internal_delegator_address(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressRequest)
}

inline void QueryDelegatorWithdrawAddressRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.delegator_address_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.delegator_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.delegator_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryDelegatorWithdrawAddressRequest::~QueryDelegatorWithdrawAddressRequest() {
  // @@protoc_insertion_point(destructor:cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryDelegatorWithdrawAddressRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.delegator_address_.Destroy();
}

void QueryDelegatorWithdrawAddressRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryDelegatorWithdrawAddressRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.delegator_address_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryDelegatorWithdrawAddressRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_delegator_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressRequest.delegator_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryDelegatorWithdrawAddressRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_delegator_address().empty()) {
    const std::string& _s = this->_internal_delegator_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressRequest.delegator_address");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressRequest)
  return target;
}

::size_t QueryDelegatorWithdrawAddressRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_delegator_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_delegator_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryDelegatorWithdrawAddressRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryDelegatorWithdrawAddressRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryDelegatorWithdrawAddressRequest::GetClassData() const { return &_class_data_; }


void QueryDelegatorWithdrawAddressRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryDelegatorWithdrawAddressRequest*>(&to_msg);
  auto& from = static_cast<const QueryDelegatorWithdrawAddressRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_delegator_address().empty()) {
    _this->_internal_set_delegator_address(from._internal_delegator_address());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryDelegatorWithdrawAddressRequest::CopyFrom(const QueryDelegatorWithdrawAddressRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDelegatorWithdrawAddressRequest::IsInitialized() const {
  return true;
}

void QueryDelegatorWithdrawAddressRequest::InternalSwap(QueryDelegatorWithdrawAddressRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.delegator_address_, lhs_arena,
                                       &other->_impl_.delegator_address_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryDelegatorWithdrawAddressRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto[16]);
}
// ===================================================================

class QueryDelegatorWithdrawAddressResponse::_Internal {
 public:
};

QueryDelegatorWithdrawAddressResponse::QueryDelegatorWithdrawAddressResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse)
}
QueryDelegatorWithdrawAddressResponse::QueryDelegatorWithdrawAddressResponse(const QueryDelegatorWithdrawAddressResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryDelegatorWithdrawAddressResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.withdraw_address_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.withdraw_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.withdraw_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_withdraw_address().empty()) {
    _this->_impl_.withdraw_address_.Set(from._internal_withdraw_address(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse)
}

inline void QueryDelegatorWithdrawAddressResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.withdraw_address_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.withdraw_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.withdraw_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryDelegatorWithdrawAddressResponse::~QueryDelegatorWithdrawAddressResponse() {
  // @@protoc_insertion_point(destructor:cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryDelegatorWithdrawAddressResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.withdraw_address_.Destroy();
}

void QueryDelegatorWithdrawAddressResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryDelegatorWithdrawAddressResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.withdraw_address_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryDelegatorWithdrawAddressResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string withdraw_address = 1 [json_name = "withdrawAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_withdraw_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse.withdraw_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryDelegatorWithdrawAddressResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string withdraw_address = 1 [json_name = "withdrawAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_withdraw_address().empty()) {
    const std::string& _s = this->_internal_withdraw_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse.withdraw_address");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse)
  return target;
}

::size_t QueryDelegatorWithdrawAddressResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string withdraw_address = 1 [json_name = "withdrawAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_withdraw_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_withdraw_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryDelegatorWithdrawAddressResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryDelegatorWithdrawAddressResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryDelegatorWithdrawAddressResponse::GetClassData() const { return &_class_data_; }


void QueryDelegatorWithdrawAddressResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryDelegatorWithdrawAddressResponse*>(&to_msg);
  auto& from = static_cast<const QueryDelegatorWithdrawAddressResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_withdraw_address().empty()) {
    _this->_internal_set_withdraw_address(from._internal_withdraw_address());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryDelegatorWithdrawAddressResponse::CopyFrom(const QueryDelegatorWithdrawAddressResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDelegatorWithdrawAddressResponse::IsInitialized() const {
  return true;
}

void QueryDelegatorWithdrawAddressResponse::InternalSwap(QueryDelegatorWithdrawAddressResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.withdraw_address_, lhs_arena,
                                       &other->_impl_.withdraw_address_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryDelegatorWithdrawAddressResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto[17]);
}
// ===================================================================

class QueryCommunityPoolRequest::_Internal {
 public:
};

QueryCommunityPoolRequest::QueryCommunityPoolRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cosmos.distribution.v1beta1.QueryCommunityPoolRequest)
}
QueryCommunityPoolRequest::QueryCommunityPoolRequest(const QueryCommunityPoolRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  QueryCommunityPoolRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.distribution.v1beta1.QueryCommunityPoolRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryCommunityPoolRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryCommunityPoolRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata QueryCommunityPoolRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto[18]);
}
// ===================================================================

class QueryCommunityPoolResponse::_Internal {
 public:
};

void QueryCommunityPoolResponse::clear_pool() {
  _internal_mutable_pool()->Clear();
}
QueryCommunityPoolResponse::QueryCommunityPoolResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.distribution.v1beta1.QueryCommunityPoolResponse)
}
QueryCommunityPoolResponse::QueryCommunityPoolResponse(const QueryCommunityPoolResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryCommunityPoolResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.pool_){from._impl_.pool_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.distribution.v1beta1.QueryCommunityPoolResponse)
}

inline void QueryCommunityPoolResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.pool_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

QueryCommunityPoolResponse::~QueryCommunityPoolResponse() {
  // @@protoc_insertion_point(destructor:cosmos.distribution.v1beta1.QueryCommunityPoolResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryCommunityPoolResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_pool()->~RepeatedPtrField();
}

void QueryCommunityPoolResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryCommunityPoolResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.distribution.v1beta1.QueryCommunityPoolResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_pool()->Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryCommunityPoolResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .cosmos.base.v1beta1.DecCoin pool = 1 [json_name = "pool", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (.amino.dont_omitempty) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_pool(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryCommunityPoolResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.distribution.v1beta1.QueryCommunityPoolResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cosmos.base.v1beta1.DecCoin pool = 1 [json_name = "pool", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (.amino.dont_omitempty) = true];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_pool_size()); i < n; i++) {
    const auto& repfield = this->_internal_pool(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.distribution.v1beta1.QueryCommunityPoolResponse)
  return target;
}

::size_t QueryCommunityPoolResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.distribution.v1beta1.QueryCommunityPoolResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cosmos.base.v1beta1.DecCoin pool = 1 [json_name = "pool", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (.amino.dont_omitempty) = true];
  total_size += 1UL * this->_internal_pool_size();
  for (const auto& msg : this->_internal_pool()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryCommunityPoolResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryCommunityPoolResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryCommunityPoolResponse::GetClassData() const { return &_class_data_; }


void QueryCommunityPoolResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryCommunityPoolResponse*>(&to_msg);
  auto& from = static_cast<const QueryCommunityPoolResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.distribution.v1beta1.QueryCommunityPoolResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_pool()->MergeFrom(from._internal_pool());
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryCommunityPoolResponse::CopyFrom(const QueryCommunityPoolResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.distribution.v1beta1.QueryCommunityPoolResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryCommunityPoolResponse::IsInitialized() const {
  return true;
}

void QueryCommunityPoolResponse::InternalSwap(QueryCommunityPoolResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_pool()->InternalSwap(other->_internal_mutable_pool());
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryCommunityPoolResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto[19]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace distribution
}  // namespace cosmos
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::cosmos::distribution::v1beta1::QueryParamsRequest*
Arena::CreateMaybeMessage< ::cosmos::distribution::v1beta1::QueryParamsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::distribution::v1beta1::QueryParamsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::distribution::v1beta1::QueryParamsResponse*
Arena::CreateMaybeMessage< ::cosmos::distribution::v1beta1::QueryParamsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::distribution::v1beta1::QueryParamsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::distribution::v1beta1::QueryValidatorDistributionInfoRequest*
Arena::CreateMaybeMessage< ::cosmos::distribution::v1beta1::QueryValidatorDistributionInfoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::distribution::v1beta1::QueryValidatorDistributionInfoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::distribution::v1beta1::QueryValidatorDistributionInfoResponse*
Arena::CreateMaybeMessage< ::cosmos::distribution::v1beta1::QueryValidatorDistributionInfoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::distribution::v1beta1::QueryValidatorDistributionInfoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::distribution::v1beta1::QueryValidatorOutstandingRewardsRequest*
Arena::CreateMaybeMessage< ::cosmos::distribution::v1beta1::QueryValidatorOutstandingRewardsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::distribution::v1beta1::QueryValidatorOutstandingRewardsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::distribution::v1beta1::QueryValidatorOutstandingRewardsResponse*
Arena::CreateMaybeMessage< ::cosmos::distribution::v1beta1::QueryValidatorOutstandingRewardsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::distribution::v1beta1::QueryValidatorOutstandingRewardsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::distribution::v1beta1::QueryValidatorCommissionRequest*
Arena::CreateMaybeMessage< ::cosmos::distribution::v1beta1::QueryValidatorCommissionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::distribution::v1beta1::QueryValidatorCommissionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::distribution::v1beta1::QueryValidatorCommissionResponse*
Arena::CreateMaybeMessage< ::cosmos::distribution::v1beta1::QueryValidatorCommissionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::distribution::v1beta1::QueryValidatorCommissionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::distribution::v1beta1::QueryValidatorSlashesRequest*
Arena::CreateMaybeMessage< ::cosmos::distribution::v1beta1::QueryValidatorSlashesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::distribution::v1beta1::QueryValidatorSlashesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::distribution::v1beta1::QueryValidatorSlashesResponse*
Arena::CreateMaybeMessage< ::cosmos::distribution::v1beta1::QueryValidatorSlashesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::distribution::v1beta1::QueryValidatorSlashesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::distribution::v1beta1::QueryDelegationRewardsRequest*
Arena::CreateMaybeMessage< ::cosmos::distribution::v1beta1::QueryDelegationRewardsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::distribution::v1beta1::QueryDelegationRewardsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::distribution::v1beta1::QueryDelegationRewardsResponse*
Arena::CreateMaybeMessage< ::cosmos::distribution::v1beta1::QueryDelegationRewardsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::distribution::v1beta1::QueryDelegationRewardsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::distribution::v1beta1::QueryDelegationTotalRewardsRequest*
Arena::CreateMaybeMessage< ::cosmos::distribution::v1beta1::QueryDelegationTotalRewardsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::distribution::v1beta1::QueryDelegationTotalRewardsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::distribution::v1beta1::QueryDelegationTotalRewardsResponse*
Arena::CreateMaybeMessage< ::cosmos::distribution::v1beta1::QueryDelegationTotalRewardsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::distribution::v1beta1::QueryDelegationTotalRewardsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::distribution::v1beta1::QueryDelegatorValidatorsRequest*
Arena::CreateMaybeMessage< ::cosmos::distribution::v1beta1::QueryDelegatorValidatorsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::distribution::v1beta1::QueryDelegatorValidatorsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::distribution::v1beta1::QueryDelegatorValidatorsResponse*
Arena::CreateMaybeMessage< ::cosmos::distribution::v1beta1::QueryDelegatorValidatorsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::distribution::v1beta1::QueryDelegatorValidatorsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::distribution::v1beta1::QueryDelegatorWithdrawAddressRequest*
Arena::CreateMaybeMessage< ::cosmos::distribution::v1beta1::QueryDelegatorWithdrawAddressRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::distribution::v1beta1::QueryDelegatorWithdrawAddressRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::distribution::v1beta1::QueryDelegatorWithdrawAddressResponse*
Arena::CreateMaybeMessage< ::cosmos::distribution::v1beta1::QueryDelegatorWithdrawAddressResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::distribution::v1beta1::QueryDelegatorWithdrawAddressResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::distribution::v1beta1::QueryCommunityPoolRequest*
Arena::CreateMaybeMessage< ::cosmos::distribution::v1beta1::QueryCommunityPoolRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::distribution::v1beta1::QueryCommunityPoolRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::distribution::v1beta1::QueryCommunityPoolResponse*
Arena::CreateMaybeMessage< ::cosmos::distribution::v1beta1::QueryCommunityPoolResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::distribution::v1beta1::QueryCommunityPoolResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
