// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/distribution/v1beta1/query.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4023000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4023004 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "cosmos/base/query/v1beta1/pagination.pb.h"
#include "gogoproto/gogo.pb.h"
#include "google/api/annotations.pb.h"
#include "cosmos/base/v1beta1/coin.pb.h"
#include "cosmos/distribution/v1beta1/distribution.pb.h"
#include "cosmos_proto/cosmos.pb.h"
#include "amino/amino.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto

PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable
    descriptor_table_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto;
namespace cosmos {
namespace distribution {
namespace v1beta1 {
class QueryCommunityPoolRequest;
struct QueryCommunityPoolRequestDefaultTypeInternal;
extern QueryCommunityPoolRequestDefaultTypeInternal _QueryCommunityPoolRequest_default_instance_;
class QueryCommunityPoolResponse;
struct QueryCommunityPoolResponseDefaultTypeInternal;
extern QueryCommunityPoolResponseDefaultTypeInternal _QueryCommunityPoolResponse_default_instance_;
class QueryDelegationRewardsRequest;
struct QueryDelegationRewardsRequestDefaultTypeInternal;
extern QueryDelegationRewardsRequestDefaultTypeInternal _QueryDelegationRewardsRequest_default_instance_;
class QueryDelegationRewardsResponse;
struct QueryDelegationRewardsResponseDefaultTypeInternal;
extern QueryDelegationRewardsResponseDefaultTypeInternal _QueryDelegationRewardsResponse_default_instance_;
class QueryDelegationTotalRewardsRequest;
struct QueryDelegationTotalRewardsRequestDefaultTypeInternal;
extern QueryDelegationTotalRewardsRequestDefaultTypeInternal _QueryDelegationTotalRewardsRequest_default_instance_;
class QueryDelegationTotalRewardsResponse;
struct QueryDelegationTotalRewardsResponseDefaultTypeInternal;
extern QueryDelegationTotalRewardsResponseDefaultTypeInternal _QueryDelegationTotalRewardsResponse_default_instance_;
class QueryDelegatorValidatorsRequest;
struct QueryDelegatorValidatorsRequestDefaultTypeInternal;
extern QueryDelegatorValidatorsRequestDefaultTypeInternal _QueryDelegatorValidatorsRequest_default_instance_;
class QueryDelegatorValidatorsResponse;
struct QueryDelegatorValidatorsResponseDefaultTypeInternal;
extern QueryDelegatorValidatorsResponseDefaultTypeInternal _QueryDelegatorValidatorsResponse_default_instance_;
class QueryDelegatorWithdrawAddressRequest;
struct QueryDelegatorWithdrawAddressRequestDefaultTypeInternal;
extern QueryDelegatorWithdrawAddressRequestDefaultTypeInternal _QueryDelegatorWithdrawAddressRequest_default_instance_;
class QueryDelegatorWithdrawAddressResponse;
struct QueryDelegatorWithdrawAddressResponseDefaultTypeInternal;
extern QueryDelegatorWithdrawAddressResponseDefaultTypeInternal _QueryDelegatorWithdrawAddressResponse_default_instance_;
class QueryParamsRequest;
struct QueryParamsRequestDefaultTypeInternal;
extern QueryParamsRequestDefaultTypeInternal _QueryParamsRequest_default_instance_;
class QueryParamsResponse;
struct QueryParamsResponseDefaultTypeInternal;
extern QueryParamsResponseDefaultTypeInternal _QueryParamsResponse_default_instance_;
class QueryValidatorCommissionRequest;
struct QueryValidatorCommissionRequestDefaultTypeInternal;
extern QueryValidatorCommissionRequestDefaultTypeInternal _QueryValidatorCommissionRequest_default_instance_;
class QueryValidatorCommissionResponse;
struct QueryValidatorCommissionResponseDefaultTypeInternal;
extern QueryValidatorCommissionResponseDefaultTypeInternal _QueryValidatorCommissionResponse_default_instance_;
class QueryValidatorDistributionInfoRequest;
struct QueryValidatorDistributionInfoRequestDefaultTypeInternal;
extern QueryValidatorDistributionInfoRequestDefaultTypeInternal _QueryValidatorDistributionInfoRequest_default_instance_;
class QueryValidatorDistributionInfoResponse;
struct QueryValidatorDistributionInfoResponseDefaultTypeInternal;
extern QueryValidatorDistributionInfoResponseDefaultTypeInternal _QueryValidatorDistributionInfoResponse_default_instance_;
class QueryValidatorOutstandingRewardsRequest;
struct QueryValidatorOutstandingRewardsRequestDefaultTypeInternal;
extern QueryValidatorOutstandingRewardsRequestDefaultTypeInternal _QueryValidatorOutstandingRewardsRequest_default_instance_;
class QueryValidatorOutstandingRewardsResponse;
struct QueryValidatorOutstandingRewardsResponseDefaultTypeInternal;
extern QueryValidatorOutstandingRewardsResponseDefaultTypeInternal _QueryValidatorOutstandingRewardsResponse_default_instance_;
class QueryValidatorSlashesRequest;
struct QueryValidatorSlashesRequestDefaultTypeInternal;
extern QueryValidatorSlashesRequestDefaultTypeInternal _QueryValidatorSlashesRequest_default_instance_;
class QueryValidatorSlashesResponse;
struct QueryValidatorSlashesResponseDefaultTypeInternal;
extern QueryValidatorSlashesResponseDefaultTypeInternal _QueryValidatorSlashesResponse_default_instance_;
}  // namespace v1beta1
}  // namespace distribution
}  // namespace cosmos
PROTOBUF_NAMESPACE_OPEN
template <>
::cosmos::distribution::v1beta1::QueryCommunityPoolRequest* Arena::CreateMaybeMessage<::cosmos::distribution::v1beta1::QueryCommunityPoolRequest>(Arena*);
template <>
::cosmos::distribution::v1beta1::QueryCommunityPoolResponse* Arena::CreateMaybeMessage<::cosmos::distribution::v1beta1::QueryCommunityPoolResponse>(Arena*);
template <>
::cosmos::distribution::v1beta1::QueryDelegationRewardsRequest* Arena::CreateMaybeMessage<::cosmos::distribution::v1beta1::QueryDelegationRewardsRequest>(Arena*);
template <>
::cosmos::distribution::v1beta1::QueryDelegationRewardsResponse* Arena::CreateMaybeMessage<::cosmos::distribution::v1beta1::QueryDelegationRewardsResponse>(Arena*);
template <>
::cosmos::distribution::v1beta1::QueryDelegationTotalRewardsRequest* Arena::CreateMaybeMessage<::cosmos::distribution::v1beta1::QueryDelegationTotalRewardsRequest>(Arena*);
template <>
::cosmos::distribution::v1beta1::QueryDelegationTotalRewardsResponse* Arena::CreateMaybeMessage<::cosmos::distribution::v1beta1::QueryDelegationTotalRewardsResponse>(Arena*);
template <>
::cosmos::distribution::v1beta1::QueryDelegatorValidatorsRequest* Arena::CreateMaybeMessage<::cosmos::distribution::v1beta1::QueryDelegatorValidatorsRequest>(Arena*);
template <>
::cosmos::distribution::v1beta1::QueryDelegatorValidatorsResponse* Arena::CreateMaybeMessage<::cosmos::distribution::v1beta1::QueryDelegatorValidatorsResponse>(Arena*);
template <>
::cosmos::distribution::v1beta1::QueryDelegatorWithdrawAddressRequest* Arena::CreateMaybeMessage<::cosmos::distribution::v1beta1::QueryDelegatorWithdrawAddressRequest>(Arena*);
template <>
::cosmos::distribution::v1beta1::QueryDelegatorWithdrawAddressResponse* Arena::CreateMaybeMessage<::cosmos::distribution::v1beta1::QueryDelegatorWithdrawAddressResponse>(Arena*);
template <>
::cosmos::distribution::v1beta1::QueryParamsRequest* Arena::CreateMaybeMessage<::cosmos::distribution::v1beta1::QueryParamsRequest>(Arena*);
template <>
::cosmos::distribution::v1beta1::QueryParamsResponse* Arena::CreateMaybeMessage<::cosmos::distribution::v1beta1::QueryParamsResponse>(Arena*);
template <>
::cosmos::distribution::v1beta1::QueryValidatorCommissionRequest* Arena::CreateMaybeMessage<::cosmos::distribution::v1beta1::QueryValidatorCommissionRequest>(Arena*);
template <>
::cosmos::distribution::v1beta1::QueryValidatorCommissionResponse* Arena::CreateMaybeMessage<::cosmos::distribution::v1beta1::QueryValidatorCommissionResponse>(Arena*);
template <>
::cosmos::distribution::v1beta1::QueryValidatorDistributionInfoRequest* Arena::CreateMaybeMessage<::cosmos::distribution::v1beta1::QueryValidatorDistributionInfoRequest>(Arena*);
template <>
::cosmos::distribution::v1beta1::QueryValidatorDistributionInfoResponse* Arena::CreateMaybeMessage<::cosmos::distribution::v1beta1::QueryValidatorDistributionInfoResponse>(Arena*);
template <>
::cosmos::distribution::v1beta1::QueryValidatorOutstandingRewardsRequest* Arena::CreateMaybeMessage<::cosmos::distribution::v1beta1::QueryValidatorOutstandingRewardsRequest>(Arena*);
template <>
::cosmos::distribution::v1beta1::QueryValidatorOutstandingRewardsResponse* Arena::CreateMaybeMessage<::cosmos::distribution::v1beta1::QueryValidatorOutstandingRewardsResponse>(Arena*);
template <>
::cosmos::distribution::v1beta1::QueryValidatorSlashesRequest* Arena::CreateMaybeMessage<::cosmos::distribution::v1beta1::QueryValidatorSlashesRequest>(Arena*);
template <>
::cosmos::distribution::v1beta1::QueryValidatorSlashesResponse* Arena::CreateMaybeMessage<::cosmos::distribution::v1beta1::QueryValidatorSlashesResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

namespace cosmos {
namespace distribution {
namespace v1beta1 {

// ===================================================================


// -------------------------------------------------------------------

class QueryParamsRequest final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:cosmos.distribution.v1beta1.QueryParamsRequest) */ {
 public:
  inline QueryParamsRequest() : QueryParamsRequest(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryParamsRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QueryParamsRequest(const QueryParamsRequest& from);
  QueryParamsRequest(QueryParamsRequest&& from) noexcept
    : QueryParamsRequest() {
    *this = ::std::move(from);
  }

  inline QueryParamsRequest& operator=(const QueryParamsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryParamsRequest& operator=(QueryParamsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryParamsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryParamsRequest* internal_default_instance() {
    return reinterpret_cast<const QueryParamsRequest*>(
               &_QueryParamsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(QueryParamsRequest& a, QueryParamsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryParamsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryParamsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryParamsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryParamsRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const QueryParamsRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const QueryParamsRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.distribution.v1beta1.QueryParamsRequest";
  }
  protected:
  explicit QueryParamsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:cosmos.distribution.v1beta1.QueryParamsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto;
};// -------------------------------------------------------------------

class QueryParamsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.distribution.v1beta1.QueryParamsResponse) */ {
 public:
  inline QueryParamsResponse() : QueryParamsResponse(nullptr) {}
  ~QueryParamsResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryParamsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QueryParamsResponse(const QueryParamsResponse& from);
  QueryParamsResponse(QueryParamsResponse&& from) noexcept
    : QueryParamsResponse() {
    *this = ::std::move(from);
  }

  inline QueryParamsResponse& operator=(const QueryParamsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryParamsResponse& operator=(QueryParamsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryParamsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryParamsResponse* internal_default_instance() {
    return reinterpret_cast<const QueryParamsResponse*>(
               &_QueryParamsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(QueryParamsResponse& a, QueryParamsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryParamsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryParamsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryParamsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryParamsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const QueryParamsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const QueryParamsResponse& from) {
    QueryParamsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryParamsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.distribution.v1beta1.QueryParamsResponse";
  }
  protected:
  explicit QueryParamsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kParamsFieldNumber = 1,
  };
  // .cosmos.distribution.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  bool has_params() const;
  void clear_params() ;
  const ::cosmos::distribution::v1beta1::Params& params() const;
  PROTOBUF_NODISCARD ::cosmos::distribution::v1beta1::Params* release_params();
  ::cosmos::distribution::v1beta1::Params* mutable_params();
  void set_allocated_params(::cosmos::distribution::v1beta1::Params* params);
  private:
  const ::cosmos::distribution::v1beta1::Params& _internal_params() const;
  ::cosmos::distribution::v1beta1::Params* _internal_mutable_params();
  public:
  void unsafe_arena_set_allocated_params(
      ::cosmos::distribution::v1beta1::Params* params);
  ::cosmos::distribution::v1beta1::Params* unsafe_arena_release_params();
  // @@protoc_insertion_point(class_scope:cosmos.distribution.v1beta1.QueryParamsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::cosmos::distribution::v1beta1::Params* params_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto;
};// -------------------------------------------------------------------

class QueryValidatorDistributionInfoRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.distribution.v1beta1.QueryValidatorDistributionInfoRequest) */ {
 public:
  inline QueryValidatorDistributionInfoRequest() : QueryValidatorDistributionInfoRequest(nullptr) {}
  ~QueryValidatorDistributionInfoRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryValidatorDistributionInfoRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QueryValidatorDistributionInfoRequest(const QueryValidatorDistributionInfoRequest& from);
  QueryValidatorDistributionInfoRequest(QueryValidatorDistributionInfoRequest&& from) noexcept
    : QueryValidatorDistributionInfoRequest() {
    *this = ::std::move(from);
  }

  inline QueryValidatorDistributionInfoRequest& operator=(const QueryValidatorDistributionInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryValidatorDistributionInfoRequest& operator=(QueryValidatorDistributionInfoRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryValidatorDistributionInfoRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryValidatorDistributionInfoRequest* internal_default_instance() {
    return reinterpret_cast<const QueryValidatorDistributionInfoRequest*>(
               &_QueryValidatorDistributionInfoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(QueryValidatorDistributionInfoRequest& a, QueryValidatorDistributionInfoRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryValidatorDistributionInfoRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryValidatorDistributionInfoRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryValidatorDistributionInfoRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryValidatorDistributionInfoRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const QueryValidatorDistributionInfoRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const QueryValidatorDistributionInfoRequest& from) {
    QueryValidatorDistributionInfoRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryValidatorDistributionInfoRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.distribution.v1beta1.QueryValidatorDistributionInfoRequest";
  }
  protected:
  explicit QueryValidatorDistributionInfoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValidatorAddressFieldNumber = 1,
  };
  // string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_validator_address() ;
  const std::string& validator_address() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_validator_address(Arg_&& arg, Args_... args);
  std::string* mutable_validator_address();
  PROTOBUF_NODISCARD std::string* release_validator_address();
  void set_allocated_validator_address(std::string* ptr);

  private:
  const std::string& _internal_validator_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_validator_address(
      const std::string& value);
  std::string* _internal_mutable_validator_address();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.distribution.v1beta1.QueryValidatorDistributionInfoRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr validator_address_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto;
};// -------------------------------------------------------------------

class QueryValidatorDistributionInfoResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse) */ {
 public:
  inline QueryValidatorDistributionInfoResponse() : QueryValidatorDistributionInfoResponse(nullptr) {}
  ~QueryValidatorDistributionInfoResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryValidatorDistributionInfoResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QueryValidatorDistributionInfoResponse(const QueryValidatorDistributionInfoResponse& from);
  QueryValidatorDistributionInfoResponse(QueryValidatorDistributionInfoResponse&& from) noexcept
    : QueryValidatorDistributionInfoResponse() {
    *this = ::std::move(from);
  }

  inline QueryValidatorDistributionInfoResponse& operator=(const QueryValidatorDistributionInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryValidatorDistributionInfoResponse& operator=(QueryValidatorDistributionInfoResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryValidatorDistributionInfoResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryValidatorDistributionInfoResponse* internal_default_instance() {
    return reinterpret_cast<const QueryValidatorDistributionInfoResponse*>(
               &_QueryValidatorDistributionInfoResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(QueryValidatorDistributionInfoResponse& a, QueryValidatorDistributionInfoResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryValidatorDistributionInfoResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryValidatorDistributionInfoResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryValidatorDistributionInfoResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryValidatorDistributionInfoResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const QueryValidatorDistributionInfoResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const QueryValidatorDistributionInfoResponse& from) {
    QueryValidatorDistributionInfoResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryValidatorDistributionInfoResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse";
  }
  protected:
  explicit QueryValidatorDistributionInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSelfBondRewardsFieldNumber = 2,
    kCommissionFieldNumber = 3,
    kOperatorAddressFieldNumber = 1,
  };
  // repeated .cosmos.base.v1beta1.DecCoin self_bond_rewards = 2 [json_name = "selfBondRewards", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (.amino.dont_omitempty) = true];
  int self_bond_rewards_size() const;
  private:
  int _internal_self_bond_rewards_size() const;

  public:
  void clear_self_bond_rewards() ;
  ::cosmos::base::v1beta1::DecCoin* mutable_self_bond_rewards(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::DecCoin >*
      mutable_self_bond_rewards();
  private:
  const ::cosmos::base::v1beta1::DecCoin& _internal_self_bond_rewards(int index) const;
  ::cosmos::base::v1beta1::DecCoin* _internal_add_self_bond_rewards();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::DecCoin>& _internal_self_bond_rewards() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::DecCoin>* _internal_mutable_self_bond_rewards();
  public:
  const ::cosmos::base::v1beta1::DecCoin& self_bond_rewards(int index) const;
  ::cosmos::base::v1beta1::DecCoin* add_self_bond_rewards();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::DecCoin >&
      self_bond_rewards() const;
  // repeated .cosmos.base.v1beta1.DecCoin commission = 3 [json_name = "commission", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];
  int commission_size() const;
  private:
  int _internal_commission_size() const;

  public:
  void clear_commission() ;
  ::cosmos::base::v1beta1::DecCoin* mutable_commission(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::DecCoin >*
      mutable_commission();
  private:
  const ::cosmos::base::v1beta1::DecCoin& _internal_commission(int index) const;
  ::cosmos::base::v1beta1::DecCoin* _internal_add_commission();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::DecCoin>& _internal_commission() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::DecCoin>* _internal_mutable_commission();
  public:
  const ::cosmos::base::v1beta1::DecCoin& commission(int index) const;
  ::cosmos::base::v1beta1::DecCoin* add_commission();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::DecCoin >&
      commission() const;
  // string operator_address = 1 [json_name = "operatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_operator_address() ;
  const std::string& operator_address() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_operator_address(Arg_&& arg, Args_... args);
  std::string* mutable_operator_address();
  PROTOBUF_NODISCARD std::string* release_operator_address();
  void set_allocated_operator_address(std::string* ptr);

  private:
  const std::string& _internal_operator_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_operator_address(
      const std::string& value);
  std::string* _internal_mutable_operator_address();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::DecCoin > self_bond_rewards_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::DecCoin > commission_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr operator_address_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto;
};// -------------------------------------------------------------------

class QueryValidatorOutstandingRewardsRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsRequest) */ {
 public:
  inline QueryValidatorOutstandingRewardsRequest() : QueryValidatorOutstandingRewardsRequest(nullptr) {}
  ~QueryValidatorOutstandingRewardsRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryValidatorOutstandingRewardsRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QueryValidatorOutstandingRewardsRequest(const QueryValidatorOutstandingRewardsRequest& from);
  QueryValidatorOutstandingRewardsRequest(QueryValidatorOutstandingRewardsRequest&& from) noexcept
    : QueryValidatorOutstandingRewardsRequest() {
    *this = ::std::move(from);
  }

  inline QueryValidatorOutstandingRewardsRequest& operator=(const QueryValidatorOutstandingRewardsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryValidatorOutstandingRewardsRequest& operator=(QueryValidatorOutstandingRewardsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryValidatorOutstandingRewardsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryValidatorOutstandingRewardsRequest* internal_default_instance() {
    return reinterpret_cast<const QueryValidatorOutstandingRewardsRequest*>(
               &_QueryValidatorOutstandingRewardsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(QueryValidatorOutstandingRewardsRequest& a, QueryValidatorOutstandingRewardsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryValidatorOutstandingRewardsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryValidatorOutstandingRewardsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryValidatorOutstandingRewardsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryValidatorOutstandingRewardsRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const QueryValidatorOutstandingRewardsRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const QueryValidatorOutstandingRewardsRequest& from) {
    QueryValidatorOutstandingRewardsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryValidatorOutstandingRewardsRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsRequest";
  }
  protected:
  explicit QueryValidatorOutstandingRewardsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValidatorAddressFieldNumber = 1,
  };
  // string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_validator_address() ;
  const std::string& validator_address() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_validator_address(Arg_&& arg, Args_... args);
  std::string* mutable_validator_address();
  PROTOBUF_NODISCARD std::string* release_validator_address();
  void set_allocated_validator_address(std::string* ptr);

  private:
  const std::string& _internal_validator_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_validator_address(
      const std::string& value);
  std::string* _internal_mutable_validator_address();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr validator_address_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto;
};// -------------------------------------------------------------------

class QueryValidatorOutstandingRewardsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse) */ {
 public:
  inline QueryValidatorOutstandingRewardsResponse() : QueryValidatorOutstandingRewardsResponse(nullptr) {}
  ~QueryValidatorOutstandingRewardsResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryValidatorOutstandingRewardsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QueryValidatorOutstandingRewardsResponse(const QueryValidatorOutstandingRewardsResponse& from);
  QueryValidatorOutstandingRewardsResponse(QueryValidatorOutstandingRewardsResponse&& from) noexcept
    : QueryValidatorOutstandingRewardsResponse() {
    *this = ::std::move(from);
  }

  inline QueryValidatorOutstandingRewardsResponse& operator=(const QueryValidatorOutstandingRewardsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryValidatorOutstandingRewardsResponse& operator=(QueryValidatorOutstandingRewardsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryValidatorOutstandingRewardsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryValidatorOutstandingRewardsResponse* internal_default_instance() {
    return reinterpret_cast<const QueryValidatorOutstandingRewardsResponse*>(
               &_QueryValidatorOutstandingRewardsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(QueryValidatorOutstandingRewardsResponse& a, QueryValidatorOutstandingRewardsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryValidatorOutstandingRewardsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryValidatorOutstandingRewardsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryValidatorOutstandingRewardsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryValidatorOutstandingRewardsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const QueryValidatorOutstandingRewardsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const QueryValidatorOutstandingRewardsResponse& from) {
    QueryValidatorOutstandingRewardsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryValidatorOutstandingRewardsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse";
  }
  protected:
  explicit QueryValidatorOutstandingRewardsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRewardsFieldNumber = 1,
  };
  // .cosmos.distribution.v1beta1.ValidatorOutstandingRewards rewards = 1 [json_name = "rewards", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  bool has_rewards() const;
  void clear_rewards() ;
  const ::cosmos::distribution::v1beta1::ValidatorOutstandingRewards& rewards() const;
  PROTOBUF_NODISCARD ::cosmos::distribution::v1beta1::ValidatorOutstandingRewards* release_rewards();
  ::cosmos::distribution::v1beta1::ValidatorOutstandingRewards* mutable_rewards();
  void set_allocated_rewards(::cosmos::distribution::v1beta1::ValidatorOutstandingRewards* rewards);
  private:
  const ::cosmos::distribution::v1beta1::ValidatorOutstandingRewards& _internal_rewards() const;
  ::cosmos::distribution::v1beta1::ValidatorOutstandingRewards* _internal_mutable_rewards();
  public:
  void unsafe_arena_set_allocated_rewards(
      ::cosmos::distribution::v1beta1::ValidatorOutstandingRewards* rewards);
  ::cosmos::distribution::v1beta1::ValidatorOutstandingRewards* unsafe_arena_release_rewards();
  // @@protoc_insertion_point(class_scope:cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::cosmos::distribution::v1beta1::ValidatorOutstandingRewards* rewards_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto;
};// -------------------------------------------------------------------

class QueryValidatorCommissionRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.distribution.v1beta1.QueryValidatorCommissionRequest) */ {
 public:
  inline QueryValidatorCommissionRequest() : QueryValidatorCommissionRequest(nullptr) {}
  ~QueryValidatorCommissionRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryValidatorCommissionRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QueryValidatorCommissionRequest(const QueryValidatorCommissionRequest& from);
  QueryValidatorCommissionRequest(QueryValidatorCommissionRequest&& from) noexcept
    : QueryValidatorCommissionRequest() {
    *this = ::std::move(from);
  }

  inline QueryValidatorCommissionRequest& operator=(const QueryValidatorCommissionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryValidatorCommissionRequest& operator=(QueryValidatorCommissionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryValidatorCommissionRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryValidatorCommissionRequest* internal_default_instance() {
    return reinterpret_cast<const QueryValidatorCommissionRequest*>(
               &_QueryValidatorCommissionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(QueryValidatorCommissionRequest& a, QueryValidatorCommissionRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryValidatorCommissionRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryValidatorCommissionRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryValidatorCommissionRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryValidatorCommissionRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const QueryValidatorCommissionRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const QueryValidatorCommissionRequest& from) {
    QueryValidatorCommissionRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryValidatorCommissionRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.distribution.v1beta1.QueryValidatorCommissionRequest";
  }
  protected:
  explicit QueryValidatorCommissionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValidatorAddressFieldNumber = 1,
  };
  // string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_validator_address() ;
  const std::string& validator_address() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_validator_address(Arg_&& arg, Args_... args);
  std::string* mutable_validator_address();
  PROTOBUF_NODISCARD std::string* release_validator_address();
  void set_allocated_validator_address(std::string* ptr);

  private:
  const std::string& _internal_validator_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_validator_address(
      const std::string& value);
  std::string* _internal_mutable_validator_address();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.distribution.v1beta1.QueryValidatorCommissionRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr validator_address_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto;
};// -------------------------------------------------------------------

class QueryValidatorCommissionResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.distribution.v1beta1.QueryValidatorCommissionResponse) */ {
 public:
  inline QueryValidatorCommissionResponse() : QueryValidatorCommissionResponse(nullptr) {}
  ~QueryValidatorCommissionResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryValidatorCommissionResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QueryValidatorCommissionResponse(const QueryValidatorCommissionResponse& from);
  QueryValidatorCommissionResponse(QueryValidatorCommissionResponse&& from) noexcept
    : QueryValidatorCommissionResponse() {
    *this = ::std::move(from);
  }

  inline QueryValidatorCommissionResponse& operator=(const QueryValidatorCommissionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryValidatorCommissionResponse& operator=(QueryValidatorCommissionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryValidatorCommissionResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryValidatorCommissionResponse* internal_default_instance() {
    return reinterpret_cast<const QueryValidatorCommissionResponse*>(
               &_QueryValidatorCommissionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(QueryValidatorCommissionResponse& a, QueryValidatorCommissionResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryValidatorCommissionResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryValidatorCommissionResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryValidatorCommissionResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryValidatorCommissionResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const QueryValidatorCommissionResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const QueryValidatorCommissionResponse& from) {
    QueryValidatorCommissionResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryValidatorCommissionResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.distribution.v1beta1.QueryValidatorCommissionResponse";
  }
  protected:
  explicit QueryValidatorCommissionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCommissionFieldNumber = 1,
  };
  // .cosmos.distribution.v1beta1.ValidatorAccumulatedCommission commission = 1 [json_name = "commission", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  bool has_commission() const;
  void clear_commission() ;
  const ::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission& commission() const;
  PROTOBUF_NODISCARD ::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission* release_commission();
  ::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission* mutable_commission();
  void set_allocated_commission(::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission* commission);
  private:
  const ::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission& _internal_commission() const;
  ::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission* _internal_mutable_commission();
  public:
  void unsafe_arena_set_allocated_commission(
      ::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission* commission);
  ::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission* unsafe_arena_release_commission();
  // @@protoc_insertion_point(class_scope:cosmos.distribution.v1beta1.QueryValidatorCommissionResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission* commission_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto;
};// -------------------------------------------------------------------

class QueryValidatorSlashesRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.distribution.v1beta1.QueryValidatorSlashesRequest) */ {
 public:
  inline QueryValidatorSlashesRequest() : QueryValidatorSlashesRequest(nullptr) {}
  ~QueryValidatorSlashesRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryValidatorSlashesRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QueryValidatorSlashesRequest(const QueryValidatorSlashesRequest& from);
  QueryValidatorSlashesRequest(QueryValidatorSlashesRequest&& from) noexcept
    : QueryValidatorSlashesRequest() {
    *this = ::std::move(from);
  }

  inline QueryValidatorSlashesRequest& operator=(const QueryValidatorSlashesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryValidatorSlashesRequest& operator=(QueryValidatorSlashesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryValidatorSlashesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryValidatorSlashesRequest* internal_default_instance() {
    return reinterpret_cast<const QueryValidatorSlashesRequest*>(
               &_QueryValidatorSlashesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(QueryValidatorSlashesRequest& a, QueryValidatorSlashesRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryValidatorSlashesRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryValidatorSlashesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryValidatorSlashesRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryValidatorSlashesRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const QueryValidatorSlashesRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const QueryValidatorSlashesRequest& from) {
    QueryValidatorSlashesRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryValidatorSlashesRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.distribution.v1beta1.QueryValidatorSlashesRequest";
  }
  protected:
  explicit QueryValidatorSlashesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValidatorAddressFieldNumber = 1,
    kPaginationFieldNumber = 4,
    kStartingHeightFieldNumber = 2,
    kEndingHeightFieldNumber = 3,
  };
  // string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_validator_address() ;
  const std::string& validator_address() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_validator_address(Arg_&& arg, Args_... args);
  std::string* mutable_validator_address();
  PROTOBUF_NODISCARD std::string* release_validator_address();
  void set_allocated_validator_address(std::string* ptr);

  private:
  const std::string& _internal_validator_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_validator_address(
      const std::string& value);
  std::string* _internal_mutable_validator_address();

  public:
  // .cosmos.base.query.v1beta1.PageRequest pagination = 4 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageRequest& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageRequest* release_pagination();
  ::cosmos::base::query::v1beta1::PageRequest* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* pagination);
  private:
  const ::cosmos::base::query::v1beta1::PageRequest& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageRequest* _internal_mutable_pagination();
  public:
  void unsafe_arena_set_allocated_pagination(
      ::cosmos::base::query::v1beta1::PageRequest* pagination);
  ::cosmos::base::query::v1beta1::PageRequest* unsafe_arena_release_pagination();
  // uint64 starting_height = 2 [json_name = "startingHeight"];
  void clear_starting_height() ;
  ::uint64_t starting_height() const;
  void set_starting_height(::uint64_t value);

  private:
  ::uint64_t _internal_starting_height() const;
  void _internal_set_starting_height(::uint64_t value);

  public:
  // uint64 ending_height = 3 [json_name = "endingHeight"];
  void clear_ending_height() ;
  ::uint64_t ending_height() const;
  void set_ending_height(::uint64_t value);

  private:
  ::uint64_t _internal_ending_height() const;
  void _internal_set_ending_height(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.distribution.v1beta1.QueryValidatorSlashesRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr validator_address_;
    ::cosmos::base::query::v1beta1::PageRequest* pagination_;
    ::uint64_t starting_height_;
    ::uint64_t ending_height_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto;
};// -------------------------------------------------------------------

class QueryValidatorSlashesResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.distribution.v1beta1.QueryValidatorSlashesResponse) */ {
 public:
  inline QueryValidatorSlashesResponse() : QueryValidatorSlashesResponse(nullptr) {}
  ~QueryValidatorSlashesResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryValidatorSlashesResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QueryValidatorSlashesResponse(const QueryValidatorSlashesResponse& from);
  QueryValidatorSlashesResponse(QueryValidatorSlashesResponse&& from) noexcept
    : QueryValidatorSlashesResponse() {
    *this = ::std::move(from);
  }

  inline QueryValidatorSlashesResponse& operator=(const QueryValidatorSlashesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryValidatorSlashesResponse& operator=(QueryValidatorSlashesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryValidatorSlashesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryValidatorSlashesResponse* internal_default_instance() {
    return reinterpret_cast<const QueryValidatorSlashesResponse*>(
               &_QueryValidatorSlashesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(QueryValidatorSlashesResponse& a, QueryValidatorSlashesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryValidatorSlashesResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryValidatorSlashesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryValidatorSlashesResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryValidatorSlashesResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const QueryValidatorSlashesResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const QueryValidatorSlashesResponse& from) {
    QueryValidatorSlashesResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryValidatorSlashesResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.distribution.v1beta1.QueryValidatorSlashesResponse";
  }
  protected:
  explicit QueryValidatorSlashesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSlashesFieldNumber = 1,
    kPaginationFieldNumber = 2,
  };
  // repeated .cosmos.distribution.v1beta1.ValidatorSlashEvent slashes = 1 [json_name = "slashes", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  int slashes_size() const;
  private:
  int _internal_slashes_size() const;

  public:
  void clear_slashes() ;
  ::cosmos::distribution::v1beta1::ValidatorSlashEvent* mutable_slashes(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::distribution::v1beta1::ValidatorSlashEvent >*
      mutable_slashes();
  private:
  const ::cosmos::distribution::v1beta1::ValidatorSlashEvent& _internal_slashes(int index) const;
  ::cosmos::distribution::v1beta1::ValidatorSlashEvent* _internal_add_slashes();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::distribution::v1beta1::ValidatorSlashEvent>& _internal_slashes() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::distribution::v1beta1::ValidatorSlashEvent>* _internal_mutable_slashes();
  public:
  const ::cosmos::distribution::v1beta1::ValidatorSlashEvent& slashes(int index) const;
  ::cosmos::distribution::v1beta1::ValidatorSlashEvent* add_slashes();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::distribution::v1beta1::ValidatorSlashEvent >&
      slashes() const;
  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageResponse& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageResponse* release_pagination();
  ::cosmos::base::query::v1beta1::PageResponse* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* pagination);
  private:
  const ::cosmos::base::query::v1beta1::PageResponse& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageResponse* _internal_mutable_pagination();
  public:
  void unsafe_arena_set_allocated_pagination(
      ::cosmos::base::query::v1beta1::PageResponse* pagination);
  ::cosmos::base::query::v1beta1::PageResponse* unsafe_arena_release_pagination();
  // @@protoc_insertion_point(class_scope:cosmos.distribution.v1beta1.QueryValidatorSlashesResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::distribution::v1beta1::ValidatorSlashEvent > slashes_;
    ::cosmos::base::query::v1beta1::PageResponse* pagination_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto;
};// -------------------------------------------------------------------

class QueryDelegationRewardsRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.distribution.v1beta1.QueryDelegationRewardsRequest) */ {
 public:
  inline QueryDelegationRewardsRequest() : QueryDelegationRewardsRequest(nullptr) {}
  ~QueryDelegationRewardsRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryDelegationRewardsRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QueryDelegationRewardsRequest(const QueryDelegationRewardsRequest& from);
  QueryDelegationRewardsRequest(QueryDelegationRewardsRequest&& from) noexcept
    : QueryDelegationRewardsRequest() {
    *this = ::std::move(from);
  }

  inline QueryDelegationRewardsRequest& operator=(const QueryDelegationRewardsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryDelegationRewardsRequest& operator=(QueryDelegationRewardsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryDelegationRewardsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryDelegationRewardsRequest* internal_default_instance() {
    return reinterpret_cast<const QueryDelegationRewardsRequest*>(
               &_QueryDelegationRewardsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(QueryDelegationRewardsRequest& a, QueryDelegationRewardsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryDelegationRewardsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryDelegationRewardsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryDelegationRewardsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryDelegationRewardsRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const QueryDelegationRewardsRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const QueryDelegationRewardsRequest& from) {
    QueryDelegationRewardsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryDelegationRewardsRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.distribution.v1beta1.QueryDelegationRewardsRequest";
  }
  protected:
  explicit QueryDelegationRewardsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDelegatorAddressFieldNumber = 1,
    kValidatorAddressFieldNumber = 2,
  };
  // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_delegator_address() ;
  const std::string& delegator_address() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_delegator_address(Arg_&& arg, Args_... args);
  std::string* mutable_delegator_address();
  PROTOBUF_NODISCARD std::string* release_delegator_address();
  void set_allocated_delegator_address(std::string* ptr);

  private:
  const std::string& _internal_delegator_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_delegator_address(
      const std::string& value);
  std::string* _internal_mutable_delegator_address();

  public:
  // string validator_address = 2 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_validator_address() ;
  const std::string& validator_address() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_validator_address(Arg_&& arg, Args_... args);
  std::string* mutable_validator_address();
  PROTOBUF_NODISCARD std::string* release_validator_address();
  void set_allocated_validator_address(std::string* ptr);

  private:
  const std::string& _internal_validator_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_validator_address(
      const std::string& value);
  std::string* _internal_mutable_validator_address();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.distribution.v1beta1.QueryDelegationRewardsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr delegator_address_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr validator_address_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto;
};// -------------------------------------------------------------------

class QueryDelegationRewardsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.distribution.v1beta1.QueryDelegationRewardsResponse) */ {
 public:
  inline QueryDelegationRewardsResponse() : QueryDelegationRewardsResponse(nullptr) {}
  ~QueryDelegationRewardsResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryDelegationRewardsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QueryDelegationRewardsResponse(const QueryDelegationRewardsResponse& from);
  QueryDelegationRewardsResponse(QueryDelegationRewardsResponse&& from) noexcept
    : QueryDelegationRewardsResponse() {
    *this = ::std::move(from);
  }

  inline QueryDelegationRewardsResponse& operator=(const QueryDelegationRewardsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryDelegationRewardsResponse& operator=(QueryDelegationRewardsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryDelegationRewardsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryDelegationRewardsResponse* internal_default_instance() {
    return reinterpret_cast<const QueryDelegationRewardsResponse*>(
               &_QueryDelegationRewardsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(QueryDelegationRewardsResponse& a, QueryDelegationRewardsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryDelegationRewardsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryDelegationRewardsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryDelegationRewardsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryDelegationRewardsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const QueryDelegationRewardsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const QueryDelegationRewardsResponse& from) {
    QueryDelegationRewardsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryDelegationRewardsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.distribution.v1beta1.QueryDelegationRewardsResponse";
  }
  protected:
  explicit QueryDelegationRewardsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRewardsFieldNumber = 1,
  };
  // repeated .cosmos.base.v1beta1.DecCoin rewards = 1 [json_name = "rewards", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (.amino.dont_omitempty) = true];
  int rewards_size() const;
  private:
  int _internal_rewards_size() const;

  public:
  void clear_rewards() ;
  ::cosmos::base::v1beta1::DecCoin* mutable_rewards(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::DecCoin >*
      mutable_rewards();
  private:
  const ::cosmos::base::v1beta1::DecCoin& _internal_rewards(int index) const;
  ::cosmos::base::v1beta1::DecCoin* _internal_add_rewards();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::DecCoin>& _internal_rewards() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::DecCoin>* _internal_mutable_rewards();
  public:
  const ::cosmos::base::v1beta1::DecCoin& rewards(int index) const;
  ::cosmos::base::v1beta1::DecCoin* add_rewards();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::DecCoin >&
      rewards() const;
  // @@protoc_insertion_point(class_scope:cosmos.distribution.v1beta1.QueryDelegationRewardsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::DecCoin > rewards_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto;
};// -------------------------------------------------------------------

class QueryDelegationTotalRewardsRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.distribution.v1beta1.QueryDelegationTotalRewardsRequest) */ {
 public:
  inline QueryDelegationTotalRewardsRequest() : QueryDelegationTotalRewardsRequest(nullptr) {}
  ~QueryDelegationTotalRewardsRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryDelegationTotalRewardsRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QueryDelegationTotalRewardsRequest(const QueryDelegationTotalRewardsRequest& from);
  QueryDelegationTotalRewardsRequest(QueryDelegationTotalRewardsRequest&& from) noexcept
    : QueryDelegationTotalRewardsRequest() {
    *this = ::std::move(from);
  }

  inline QueryDelegationTotalRewardsRequest& operator=(const QueryDelegationTotalRewardsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryDelegationTotalRewardsRequest& operator=(QueryDelegationTotalRewardsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryDelegationTotalRewardsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryDelegationTotalRewardsRequest* internal_default_instance() {
    return reinterpret_cast<const QueryDelegationTotalRewardsRequest*>(
               &_QueryDelegationTotalRewardsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(QueryDelegationTotalRewardsRequest& a, QueryDelegationTotalRewardsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryDelegationTotalRewardsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryDelegationTotalRewardsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryDelegationTotalRewardsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryDelegationTotalRewardsRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const QueryDelegationTotalRewardsRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const QueryDelegationTotalRewardsRequest& from) {
    QueryDelegationTotalRewardsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryDelegationTotalRewardsRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.distribution.v1beta1.QueryDelegationTotalRewardsRequest";
  }
  protected:
  explicit QueryDelegationTotalRewardsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDelegatorAddressFieldNumber = 1,
  };
  // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_delegator_address() ;
  const std::string& delegator_address() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_delegator_address(Arg_&& arg, Args_... args);
  std::string* mutable_delegator_address();
  PROTOBUF_NODISCARD std::string* release_delegator_address();
  void set_allocated_delegator_address(std::string* ptr);

  private:
  const std::string& _internal_delegator_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_delegator_address(
      const std::string& value);
  std::string* _internal_mutable_delegator_address();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.distribution.v1beta1.QueryDelegationTotalRewardsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr delegator_address_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto;
};// -------------------------------------------------------------------

class QueryDelegationTotalRewardsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse) */ {
 public:
  inline QueryDelegationTotalRewardsResponse() : QueryDelegationTotalRewardsResponse(nullptr) {}
  ~QueryDelegationTotalRewardsResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryDelegationTotalRewardsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QueryDelegationTotalRewardsResponse(const QueryDelegationTotalRewardsResponse& from);
  QueryDelegationTotalRewardsResponse(QueryDelegationTotalRewardsResponse&& from) noexcept
    : QueryDelegationTotalRewardsResponse() {
    *this = ::std::move(from);
  }

  inline QueryDelegationTotalRewardsResponse& operator=(const QueryDelegationTotalRewardsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryDelegationTotalRewardsResponse& operator=(QueryDelegationTotalRewardsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryDelegationTotalRewardsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryDelegationTotalRewardsResponse* internal_default_instance() {
    return reinterpret_cast<const QueryDelegationTotalRewardsResponse*>(
               &_QueryDelegationTotalRewardsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(QueryDelegationTotalRewardsResponse& a, QueryDelegationTotalRewardsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryDelegationTotalRewardsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryDelegationTotalRewardsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryDelegationTotalRewardsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryDelegationTotalRewardsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const QueryDelegationTotalRewardsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const QueryDelegationTotalRewardsResponse& from) {
    QueryDelegationTotalRewardsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryDelegationTotalRewardsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse";
  }
  protected:
  explicit QueryDelegationTotalRewardsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRewardsFieldNumber = 1,
    kTotalFieldNumber = 2,
  };
  // repeated .cosmos.distribution.v1beta1.DelegationDelegatorReward rewards = 1 [json_name = "rewards", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  int rewards_size() const;
  private:
  int _internal_rewards_size() const;

  public:
  void clear_rewards() ;
  ::cosmos::distribution::v1beta1::DelegationDelegatorReward* mutable_rewards(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::distribution::v1beta1::DelegationDelegatorReward >*
      mutable_rewards();
  private:
  const ::cosmos::distribution::v1beta1::DelegationDelegatorReward& _internal_rewards(int index) const;
  ::cosmos::distribution::v1beta1::DelegationDelegatorReward* _internal_add_rewards();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::distribution::v1beta1::DelegationDelegatorReward>& _internal_rewards() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::distribution::v1beta1::DelegationDelegatorReward>* _internal_mutable_rewards();
  public:
  const ::cosmos::distribution::v1beta1::DelegationDelegatorReward& rewards(int index) const;
  ::cosmos::distribution::v1beta1::DelegationDelegatorReward* add_rewards();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::distribution::v1beta1::DelegationDelegatorReward >&
      rewards() const;
  // repeated .cosmos.base.v1beta1.DecCoin total = 2 [json_name = "total", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (.amino.dont_omitempty) = true];
  int total_size() const;
  private:
  int _internal_total_size() const;

  public:
  void clear_total() ;
  ::cosmos::base::v1beta1::DecCoin* mutable_total(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::DecCoin >*
      mutable_total();
  private:
  const ::cosmos::base::v1beta1::DecCoin& _internal_total(int index) const;
  ::cosmos::base::v1beta1::DecCoin* _internal_add_total();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::DecCoin>& _internal_total() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::DecCoin>* _internal_mutable_total();
  public:
  const ::cosmos::base::v1beta1::DecCoin& total(int index) const;
  ::cosmos::base::v1beta1::DecCoin* add_total();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::DecCoin >&
      total() const;
  // @@protoc_insertion_point(class_scope:cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::distribution::v1beta1::DelegationDelegatorReward > rewards_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::DecCoin > total_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto;
};// -------------------------------------------------------------------

class QueryDelegatorValidatorsRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.distribution.v1beta1.QueryDelegatorValidatorsRequest) */ {
 public:
  inline QueryDelegatorValidatorsRequest() : QueryDelegatorValidatorsRequest(nullptr) {}
  ~QueryDelegatorValidatorsRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryDelegatorValidatorsRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QueryDelegatorValidatorsRequest(const QueryDelegatorValidatorsRequest& from);
  QueryDelegatorValidatorsRequest(QueryDelegatorValidatorsRequest&& from) noexcept
    : QueryDelegatorValidatorsRequest() {
    *this = ::std::move(from);
  }

  inline QueryDelegatorValidatorsRequest& operator=(const QueryDelegatorValidatorsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryDelegatorValidatorsRequest& operator=(QueryDelegatorValidatorsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryDelegatorValidatorsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryDelegatorValidatorsRequest* internal_default_instance() {
    return reinterpret_cast<const QueryDelegatorValidatorsRequest*>(
               &_QueryDelegatorValidatorsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(QueryDelegatorValidatorsRequest& a, QueryDelegatorValidatorsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryDelegatorValidatorsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryDelegatorValidatorsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryDelegatorValidatorsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryDelegatorValidatorsRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const QueryDelegatorValidatorsRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const QueryDelegatorValidatorsRequest& from) {
    QueryDelegatorValidatorsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryDelegatorValidatorsRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.distribution.v1beta1.QueryDelegatorValidatorsRequest";
  }
  protected:
  explicit QueryDelegatorValidatorsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDelegatorAddressFieldNumber = 1,
  };
  // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_delegator_address() ;
  const std::string& delegator_address() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_delegator_address(Arg_&& arg, Args_... args);
  std::string* mutable_delegator_address();
  PROTOBUF_NODISCARD std::string* release_delegator_address();
  void set_allocated_delegator_address(std::string* ptr);

  private:
  const std::string& _internal_delegator_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_delegator_address(
      const std::string& value);
  std::string* _internal_mutable_delegator_address();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.distribution.v1beta1.QueryDelegatorValidatorsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr delegator_address_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto;
};// -------------------------------------------------------------------

class QueryDelegatorValidatorsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse) */ {
 public:
  inline QueryDelegatorValidatorsResponse() : QueryDelegatorValidatorsResponse(nullptr) {}
  ~QueryDelegatorValidatorsResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryDelegatorValidatorsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QueryDelegatorValidatorsResponse(const QueryDelegatorValidatorsResponse& from);
  QueryDelegatorValidatorsResponse(QueryDelegatorValidatorsResponse&& from) noexcept
    : QueryDelegatorValidatorsResponse() {
    *this = ::std::move(from);
  }

  inline QueryDelegatorValidatorsResponse& operator=(const QueryDelegatorValidatorsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryDelegatorValidatorsResponse& operator=(QueryDelegatorValidatorsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryDelegatorValidatorsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryDelegatorValidatorsResponse* internal_default_instance() {
    return reinterpret_cast<const QueryDelegatorValidatorsResponse*>(
               &_QueryDelegatorValidatorsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(QueryDelegatorValidatorsResponse& a, QueryDelegatorValidatorsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryDelegatorValidatorsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryDelegatorValidatorsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryDelegatorValidatorsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryDelegatorValidatorsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const QueryDelegatorValidatorsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const QueryDelegatorValidatorsResponse& from) {
    QueryDelegatorValidatorsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryDelegatorValidatorsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse";
  }
  protected:
  explicit QueryDelegatorValidatorsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValidatorsFieldNumber = 1,
  };
  // repeated string validators = 1 [json_name = "validators"];
  int validators_size() const;
  private:
  int _internal_validators_size() const;

  public:
  void clear_validators() ;
  const std::string& validators(int index) const;
  std::string* mutable_validators(int index);
  void set_validators(int index, const std::string& value);
  void set_validators(int index, std::string&& value);
  void set_validators(int index, const char* value);
  void set_validators(int index, const char* value, std::size_t size);
  void set_validators(int index, absl::string_view value);
  std::string* add_validators();
  void add_validators(const std::string& value);
  void add_validators(std::string&& value);
  void add_validators(const char* value);
  void add_validators(const char* value, std::size_t size);
  void add_validators(absl::string_view value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& validators() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_validators();

  private:
  const std::string& _internal_validators(int index) const;
  std::string* _internal_add_validators();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& _internal_validators() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* _internal_mutable_validators();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> validators_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto;
};// -------------------------------------------------------------------

class QueryDelegatorWithdrawAddressRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressRequest) */ {
 public:
  inline QueryDelegatorWithdrawAddressRequest() : QueryDelegatorWithdrawAddressRequest(nullptr) {}
  ~QueryDelegatorWithdrawAddressRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryDelegatorWithdrawAddressRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QueryDelegatorWithdrawAddressRequest(const QueryDelegatorWithdrawAddressRequest& from);
  QueryDelegatorWithdrawAddressRequest(QueryDelegatorWithdrawAddressRequest&& from) noexcept
    : QueryDelegatorWithdrawAddressRequest() {
    *this = ::std::move(from);
  }

  inline QueryDelegatorWithdrawAddressRequest& operator=(const QueryDelegatorWithdrawAddressRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryDelegatorWithdrawAddressRequest& operator=(QueryDelegatorWithdrawAddressRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryDelegatorWithdrawAddressRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryDelegatorWithdrawAddressRequest* internal_default_instance() {
    return reinterpret_cast<const QueryDelegatorWithdrawAddressRequest*>(
               &_QueryDelegatorWithdrawAddressRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(QueryDelegatorWithdrawAddressRequest& a, QueryDelegatorWithdrawAddressRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryDelegatorWithdrawAddressRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryDelegatorWithdrawAddressRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryDelegatorWithdrawAddressRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryDelegatorWithdrawAddressRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const QueryDelegatorWithdrawAddressRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const QueryDelegatorWithdrawAddressRequest& from) {
    QueryDelegatorWithdrawAddressRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryDelegatorWithdrawAddressRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressRequest";
  }
  protected:
  explicit QueryDelegatorWithdrawAddressRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDelegatorAddressFieldNumber = 1,
  };
  // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_delegator_address() ;
  const std::string& delegator_address() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_delegator_address(Arg_&& arg, Args_... args);
  std::string* mutable_delegator_address();
  PROTOBUF_NODISCARD std::string* release_delegator_address();
  void set_allocated_delegator_address(std::string* ptr);

  private:
  const std::string& _internal_delegator_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_delegator_address(
      const std::string& value);
  std::string* _internal_mutable_delegator_address();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr delegator_address_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto;
};// -------------------------------------------------------------------

class QueryDelegatorWithdrawAddressResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse) */ {
 public:
  inline QueryDelegatorWithdrawAddressResponse() : QueryDelegatorWithdrawAddressResponse(nullptr) {}
  ~QueryDelegatorWithdrawAddressResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryDelegatorWithdrawAddressResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QueryDelegatorWithdrawAddressResponse(const QueryDelegatorWithdrawAddressResponse& from);
  QueryDelegatorWithdrawAddressResponse(QueryDelegatorWithdrawAddressResponse&& from) noexcept
    : QueryDelegatorWithdrawAddressResponse() {
    *this = ::std::move(from);
  }

  inline QueryDelegatorWithdrawAddressResponse& operator=(const QueryDelegatorWithdrawAddressResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryDelegatorWithdrawAddressResponse& operator=(QueryDelegatorWithdrawAddressResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryDelegatorWithdrawAddressResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryDelegatorWithdrawAddressResponse* internal_default_instance() {
    return reinterpret_cast<const QueryDelegatorWithdrawAddressResponse*>(
               &_QueryDelegatorWithdrawAddressResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(QueryDelegatorWithdrawAddressResponse& a, QueryDelegatorWithdrawAddressResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryDelegatorWithdrawAddressResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryDelegatorWithdrawAddressResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryDelegatorWithdrawAddressResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryDelegatorWithdrawAddressResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const QueryDelegatorWithdrawAddressResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const QueryDelegatorWithdrawAddressResponse& from) {
    QueryDelegatorWithdrawAddressResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryDelegatorWithdrawAddressResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse";
  }
  protected:
  explicit QueryDelegatorWithdrawAddressResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWithdrawAddressFieldNumber = 1,
  };
  // string withdraw_address = 1 [json_name = "withdrawAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_withdraw_address() ;
  const std::string& withdraw_address() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_withdraw_address(Arg_&& arg, Args_... args);
  std::string* mutable_withdraw_address();
  PROTOBUF_NODISCARD std::string* release_withdraw_address();
  void set_allocated_withdraw_address(std::string* ptr);

  private:
  const std::string& _internal_withdraw_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_withdraw_address(
      const std::string& value);
  std::string* _internal_mutable_withdraw_address();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr withdraw_address_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto;
};// -------------------------------------------------------------------

class QueryCommunityPoolRequest final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:cosmos.distribution.v1beta1.QueryCommunityPoolRequest) */ {
 public:
  inline QueryCommunityPoolRequest() : QueryCommunityPoolRequest(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryCommunityPoolRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QueryCommunityPoolRequest(const QueryCommunityPoolRequest& from);
  QueryCommunityPoolRequest(QueryCommunityPoolRequest&& from) noexcept
    : QueryCommunityPoolRequest() {
    *this = ::std::move(from);
  }

  inline QueryCommunityPoolRequest& operator=(const QueryCommunityPoolRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryCommunityPoolRequest& operator=(QueryCommunityPoolRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryCommunityPoolRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryCommunityPoolRequest* internal_default_instance() {
    return reinterpret_cast<const QueryCommunityPoolRequest*>(
               &_QueryCommunityPoolRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(QueryCommunityPoolRequest& a, QueryCommunityPoolRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryCommunityPoolRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryCommunityPoolRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryCommunityPoolRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryCommunityPoolRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const QueryCommunityPoolRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const QueryCommunityPoolRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.distribution.v1beta1.QueryCommunityPoolRequest";
  }
  protected:
  explicit QueryCommunityPoolRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:cosmos.distribution.v1beta1.QueryCommunityPoolRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto;
};// -------------------------------------------------------------------

class QueryCommunityPoolResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.distribution.v1beta1.QueryCommunityPoolResponse) */ {
 public:
  inline QueryCommunityPoolResponse() : QueryCommunityPoolResponse(nullptr) {}
  ~QueryCommunityPoolResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryCommunityPoolResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QueryCommunityPoolResponse(const QueryCommunityPoolResponse& from);
  QueryCommunityPoolResponse(QueryCommunityPoolResponse&& from) noexcept
    : QueryCommunityPoolResponse() {
    *this = ::std::move(from);
  }

  inline QueryCommunityPoolResponse& operator=(const QueryCommunityPoolResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryCommunityPoolResponse& operator=(QueryCommunityPoolResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryCommunityPoolResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryCommunityPoolResponse* internal_default_instance() {
    return reinterpret_cast<const QueryCommunityPoolResponse*>(
               &_QueryCommunityPoolResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(QueryCommunityPoolResponse& a, QueryCommunityPoolResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryCommunityPoolResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryCommunityPoolResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryCommunityPoolResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryCommunityPoolResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const QueryCommunityPoolResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const QueryCommunityPoolResponse& from) {
    QueryCommunityPoolResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryCommunityPoolResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.distribution.v1beta1.QueryCommunityPoolResponse";
  }
  protected:
  explicit QueryCommunityPoolResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPoolFieldNumber = 1,
  };
  // repeated .cosmos.base.v1beta1.DecCoin pool = 1 [json_name = "pool", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (.amino.dont_omitempty) = true];
  int pool_size() const;
  private:
  int _internal_pool_size() const;

  public:
  void clear_pool() ;
  ::cosmos::base::v1beta1::DecCoin* mutable_pool(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::DecCoin >*
      mutable_pool();
  private:
  const ::cosmos::base::v1beta1::DecCoin& _internal_pool(int index) const;
  ::cosmos::base::v1beta1::DecCoin* _internal_add_pool();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::DecCoin>& _internal_pool() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::DecCoin>* _internal_mutable_pool();
  public:
  const ::cosmos::base::v1beta1::DecCoin& pool(int index) const;
  ::cosmos::base::v1beta1::DecCoin* add_pool();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::DecCoin >&
      pool() const;
  // @@protoc_insertion_point(class_scope:cosmos.distribution.v1beta1.QueryCommunityPoolResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::DecCoin > pool_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// QueryParamsRequest

// -------------------------------------------------------------------

// QueryParamsResponse

// .cosmos.distribution.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline bool QueryParamsResponse::has_params() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.params_ != nullptr);
  return value;
}
inline const ::cosmos::distribution::v1beta1::Params& QueryParamsResponse::_internal_params() const {
  const ::cosmos::distribution::v1beta1::Params* p = _impl_.params_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::distribution::v1beta1::Params&>(
      ::cosmos::distribution::v1beta1::_Params_default_instance_);
}
inline const ::cosmos::distribution::v1beta1::Params& QueryParamsResponse::params() const {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.QueryParamsResponse.params)
  return _internal_params();
}
inline void QueryParamsResponse::unsafe_arena_set_allocated_params(
    ::cosmos::distribution::v1beta1::Params* params) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.params_);
  }
  _impl_.params_ = params;
  if (params) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.distribution.v1beta1.QueryParamsResponse.params)
}
inline ::cosmos::distribution::v1beta1::Params* QueryParamsResponse::release_params() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::distribution::v1beta1::Params* temp = _impl_.params_;
  _impl_.params_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::cosmos::distribution::v1beta1::Params* QueryParamsResponse::unsafe_arena_release_params() {
  // @@protoc_insertion_point(field_release:cosmos.distribution.v1beta1.QueryParamsResponse.params)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::distribution::v1beta1::Params* temp = _impl_.params_;
  _impl_.params_ = nullptr;
  return temp;
}
inline ::cosmos::distribution::v1beta1::Params* QueryParamsResponse::_internal_mutable_params() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.params_ == nullptr) {
    auto* p = CreateMaybeMessage<::cosmos::distribution::v1beta1::Params>(GetArenaForAllocation());
    _impl_.params_ = p;
  }
  return _impl_.params_;
}
inline ::cosmos::distribution::v1beta1::Params* QueryParamsResponse::mutable_params() {
  ::cosmos::distribution::v1beta1::Params* _msg = _internal_mutable_params();
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.QueryParamsResponse.params)
  return _msg;
}
inline void QueryParamsResponse::set_allocated_params(::cosmos::distribution::v1beta1::Params* params) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.params_);
  }
  if (params) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(params));
    if (message_arena != submessage_arena) {
      params = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, params, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.params_ = params;
  // @@protoc_insertion_point(field_set_allocated:cosmos.distribution.v1beta1.QueryParamsResponse.params)
}

// -------------------------------------------------------------------

// QueryValidatorDistributionInfoRequest

// string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void QueryValidatorDistributionInfoRequest::clear_validator_address() {
  _impl_.validator_address_.ClearToEmpty();
}
inline const std::string& QueryValidatorDistributionInfoRequest::validator_address() const {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.QueryValidatorDistributionInfoRequest.validator_address)
  return _internal_validator_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryValidatorDistributionInfoRequest::set_validator_address(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.validator_address_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmos.distribution.v1beta1.QueryValidatorDistributionInfoRequest.validator_address)
}
inline std::string* QueryValidatorDistributionInfoRequest::mutable_validator_address() {
  std::string* _s = _internal_mutable_validator_address();
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.QueryValidatorDistributionInfoRequest.validator_address)
  return _s;
}
inline const std::string& QueryValidatorDistributionInfoRequest::_internal_validator_address() const {
  return _impl_.validator_address_.Get();
}
inline void QueryValidatorDistributionInfoRequest::_internal_set_validator_address(const std::string& value) {
  ;


  _impl_.validator_address_.Set(value, GetArenaForAllocation());
}
inline std::string* QueryValidatorDistributionInfoRequest::_internal_mutable_validator_address() {
  ;
  return _impl_.validator_address_.Mutable( GetArenaForAllocation());
}
inline std::string* QueryValidatorDistributionInfoRequest::release_validator_address() {
  // @@protoc_insertion_point(field_release:cosmos.distribution.v1beta1.QueryValidatorDistributionInfoRequest.validator_address)
  return _impl_.validator_address_.Release();
}
inline void QueryValidatorDistributionInfoRequest::set_allocated_validator_address(std::string* value) {
  _impl_.validator_address_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.validator_address_.IsDefault()) {
          _impl_.validator_address_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmos.distribution.v1beta1.QueryValidatorDistributionInfoRequest.validator_address)
}

// -------------------------------------------------------------------

// QueryValidatorDistributionInfoResponse

// string operator_address = 1 [json_name = "operatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void QueryValidatorDistributionInfoResponse::clear_operator_address() {
  _impl_.operator_address_.ClearToEmpty();
}
inline const std::string& QueryValidatorDistributionInfoResponse::operator_address() const {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse.operator_address)
  return _internal_operator_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryValidatorDistributionInfoResponse::set_operator_address(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.operator_address_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse.operator_address)
}
inline std::string* QueryValidatorDistributionInfoResponse::mutable_operator_address() {
  std::string* _s = _internal_mutable_operator_address();
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse.operator_address)
  return _s;
}
inline const std::string& QueryValidatorDistributionInfoResponse::_internal_operator_address() const {
  return _impl_.operator_address_.Get();
}
inline void QueryValidatorDistributionInfoResponse::_internal_set_operator_address(const std::string& value) {
  ;


  _impl_.operator_address_.Set(value, GetArenaForAllocation());
}
inline std::string* QueryValidatorDistributionInfoResponse::_internal_mutable_operator_address() {
  ;
  return _impl_.operator_address_.Mutable( GetArenaForAllocation());
}
inline std::string* QueryValidatorDistributionInfoResponse::release_operator_address() {
  // @@protoc_insertion_point(field_release:cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse.operator_address)
  return _impl_.operator_address_.Release();
}
inline void QueryValidatorDistributionInfoResponse::set_allocated_operator_address(std::string* value) {
  _impl_.operator_address_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.operator_address_.IsDefault()) {
          _impl_.operator_address_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse.operator_address)
}

// repeated .cosmos.base.v1beta1.DecCoin self_bond_rewards = 2 [json_name = "selfBondRewards", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (.amino.dont_omitempty) = true];
inline int QueryValidatorDistributionInfoResponse::_internal_self_bond_rewards_size() const {
  return _impl_.self_bond_rewards_.size();
}
inline int QueryValidatorDistributionInfoResponse::self_bond_rewards_size() const {
  return _internal_self_bond_rewards_size();
}
inline ::cosmos::base::v1beta1::DecCoin* QueryValidatorDistributionInfoResponse::mutable_self_bond_rewards(int index) {
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse.self_bond_rewards)
  return _internal_mutable_self_bond_rewards()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::DecCoin >*
QueryValidatorDistributionInfoResponse::mutable_self_bond_rewards() {
  // @@protoc_insertion_point(field_mutable_list:cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse.self_bond_rewards)
  return _internal_mutable_self_bond_rewards();
}
inline const ::cosmos::base::v1beta1::DecCoin& QueryValidatorDistributionInfoResponse::_internal_self_bond_rewards(int index) const {
  return _internal_self_bond_rewards().Get(index);
}
inline const ::cosmos::base::v1beta1::DecCoin& QueryValidatorDistributionInfoResponse::self_bond_rewards(int index) const {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse.self_bond_rewards)
  return _internal_self_bond_rewards(index);
}
inline ::cosmos::base::v1beta1::DecCoin* QueryValidatorDistributionInfoResponse::_internal_add_self_bond_rewards() {
  return _internal_mutable_self_bond_rewards()->Add();
}
inline ::cosmos::base::v1beta1::DecCoin* QueryValidatorDistributionInfoResponse::add_self_bond_rewards() {
  ::cosmos::base::v1beta1::DecCoin* _add = _internal_add_self_bond_rewards();
  // @@protoc_insertion_point(field_add:cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse.self_bond_rewards)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::DecCoin >&
QueryValidatorDistributionInfoResponse::self_bond_rewards() const {
  // @@protoc_insertion_point(field_list:cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse.self_bond_rewards)
  return _internal_self_bond_rewards();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::DecCoin>&
QueryValidatorDistributionInfoResponse::_internal_self_bond_rewards() const {
  return _impl_.self_bond_rewards_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::DecCoin>*
QueryValidatorDistributionInfoResponse::_internal_mutable_self_bond_rewards() {
  return &_impl_.self_bond_rewards_;
}

// repeated .cosmos.base.v1beta1.DecCoin commission = 3 [json_name = "commission", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];
inline int QueryValidatorDistributionInfoResponse::_internal_commission_size() const {
  return _impl_.commission_.size();
}
inline int QueryValidatorDistributionInfoResponse::commission_size() const {
  return _internal_commission_size();
}
inline ::cosmos::base::v1beta1::DecCoin* QueryValidatorDistributionInfoResponse::mutable_commission(int index) {
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse.commission)
  return _internal_mutable_commission()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::DecCoin >*
QueryValidatorDistributionInfoResponse::mutable_commission() {
  // @@protoc_insertion_point(field_mutable_list:cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse.commission)
  return _internal_mutable_commission();
}
inline const ::cosmos::base::v1beta1::DecCoin& QueryValidatorDistributionInfoResponse::_internal_commission(int index) const {
  return _internal_commission().Get(index);
}
inline const ::cosmos::base::v1beta1::DecCoin& QueryValidatorDistributionInfoResponse::commission(int index) const {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse.commission)
  return _internal_commission(index);
}
inline ::cosmos::base::v1beta1::DecCoin* QueryValidatorDistributionInfoResponse::_internal_add_commission() {
  return _internal_mutable_commission()->Add();
}
inline ::cosmos::base::v1beta1::DecCoin* QueryValidatorDistributionInfoResponse::add_commission() {
  ::cosmos::base::v1beta1::DecCoin* _add = _internal_add_commission();
  // @@protoc_insertion_point(field_add:cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse.commission)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::DecCoin >&
QueryValidatorDistributionInfoResponse::commission() const {
  // @@protoc_insertion_point(field_list:cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse.commission)
  return _internal_commission();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::DecCoin>&
QueryValidatorDistributionInfoResponse::_internal_commission() const {
  return _impl_.commission_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::DecCoin>*
QueryValidatorDistributionInfoResponse::_internal_mutable_commission() {
  return &_impl_.commission_;
}

// -------------------------------------------------------------------

// QueryValidatorOutstandingRewardsRequest

// string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void QueryValidatorOutstandingRewardsRequest::clear_validator_address() {
  _impl_.validator_address_.ClearToEmpty();
}
inline const std::string& QueryValidatorOutstandingRewardsRequest::validator_address() const {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsRequest.validator_address)
  return _internal_validator_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryValidatorOutstandingRewardsRequest::set_validator_address(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.validator_address_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsRequest.validator_address)
}
inline std::string* QueryValidatorOutstandingRewardsRequest::mutable_validator_address() {
  std::string* _s = _internal_mutable_validator_address();
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsRequest.validator_address)
  return _s;
}
inline const std::string& QueryValidatorOutstandingRewardsRequest::_internal_validator_address() const {
  return _impl_.validator_address_.Get();
}
inline void QueryValidatorOutstandingRewardsRequest::_internal_set_validator_address(const std::string& value) {
  ;


  _impl_.validator_address_.Set(value, GetArenaForAllocation());
}
inline std::string* QueryValidatorOutstandingRewardsRequest::_internal_mutable_validator_address() {
  ;
  return _impl_.validator_address_.Mutable( GetArenaForAllocation());
}
inline std::string* QueryValidatorOutstandingRewardsRequest::release_validator_address() {
  // @@protoc_insertion_point(field_release:cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsRequest.validator_address)
  return _impl_.validator_address_.Release();
}
inline void QueryValidatorOutstandingRewardsRequest::set_allocated_validator_address(std::string* value) {
  _impl_.validator_address_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.validator_address_.IsDefault()) {
          _impl_.validator_address_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsRequest.validator_address)
}

// -------------------------------------------------------------------

// QueryValidatorOutstandingRewardsResponse

// .cosmos.distribution.v1beta1.ValidatorOutstandingRewards rewards = 1 [json_name = "rewards", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline bool QueryValidatorOutstandingRewardsResponse::has_rewards() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.rewards_ != nullptr);
  return value;
}
inline const ::cosmos::distribution::v1beta1::ValidatorOutstandingRewards& QueryValidatorOutstandingRewardsResponse::_internal_rewards() const {
  const ::cosmos::distribution::v1beta1::ValidatorOutstandingRewards* p = _impl_.rewards_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::distribution::v1beta1::ValidatorOutstandingRewards&>(
      ::cosmos::distribution::v1beta1::_ValidatorOutstandingRewards_default_instance_);
}
inline const ::cosmos::distribution::v1beta1::ValidatorOutstandingRewards& QueryValidatorOutstandingRewardsResponse::rewards() const {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse.rewards)
  return _internal_rewards();
}
inline void QueryValidatorOutstandingRewardsResponse::unsafe_arena_set_allocated_rewards(
    ::cosmos::distribution::v1beta1::ValidatorOutstandingRewards* rewards) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.rewards_);
  }
  _impl_.rewards_ = rewards;
  if (rewards) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse.rewards)
}
inline ::cosmos::distribution::v1beta1::ValidatorOutstandingRewards* QueryValidatorOutstandingRewardsResponse::release_rewards() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::distribution::v1beta1::ValidatorOutstandingRewards* temp = _impl_.rewards_;
  _impl_.rewards_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::cosmos::distribution::v1beta1::ValidatorOutstandingRewards* QueryValidatorOutstandingRewardsResponse::unsafe_arena_release_rewards() {
  // @@protoc_insertion_point(field_release:cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse.rewards)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::distribution::v1beta1::ValidatorOutstandingRewards* temp = _impl_.rewards_;
  _impl_.rewards_ = nullptr;
  return temp;
}
inline ::cosmos::distribution::v1beta1::ValidatorOutstandingRewards* QueryValidatorOutstandingRewardsResponse::_internal_mutable_rewards() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.rewards_ == nullptr) {
    auto* p = CreateMaybeMessage<::cosmos::distribution::v1beta1::ValidatorOutstandingRewards>(GetArenaForAllocation());
    _impl_.rewards_ = p;
  }
  return _impl_.rewards_;
}
inline ::cosmos::distribution::v1beta1::ValidatorOutstandingRewards* QueryValidatorOutstandingRewardsResponse::mutable_rewards() {
  ::cosmos::distribution::v1beta1::ValidatorOutstandingRewards* _msg = _internal_mutable_rewards();
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse.rewards)
  return _msg;
}
inline void QueryValidatorOutstandingRewardsResponse::set_allocated_rewards(::cosmos::distribution::v1beta1::ValidatorOutstandingRewards* rewards) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.rewards_);
  }
  if (rewards) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rewards));
    if (message_arena != submessage_arena) {
      rewards = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, rewards, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.rewards_ = rewards;
  // @@protoc_insertion_point(field_set_allocated:cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse.rewards)
}

// -------------------------------------------------------------------

// QueryValidatorCommissionRequest

// string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void QueryValidatorCommissionRequest::clear_validator_address() {
  _impl_.validator_address_.ClearToEmpty();
}
inline const std::string& QueryValidatorCommissionRequest::validator_address() const {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.QueryValidatorCommissionRequest.validator_address)
  return _internal_validator_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryValidatorCommissionRequest::set_validator_address(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.validator_address_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmos.distribution.v1beta1.QueryValidatorCommissionRequest.validator_address)
}
inline std::string* QueryValidatorCommissionRequest::mutable_validator_address() {
  std::string* _s = _internal_mutable_validator_address();
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.QueryValidatorCommissionRequest.validator_address)
  return _s;
}
inline const std::string& QueryValidatorCommissionRequest::_internal_validator_address() const {
  return _impl_.validator_address_.Get();
}
inline void QueryValidatorCommissionRequest::_internal_set_validator_address(const std::string& value) {
  ;


  _impl_.validator_address_.Set(value, GetArenaForAllocation());
}
inline std::string* QueryValidatorCommissionRequest::_internal_mutable_validator_address() {
  ;
  return _impl_.validator_address_.Mutable( GetArenaForAllocation());
}
inline std::string* QueryValidatorCommissionRequest::release_validator_address() {
  // @@protoc_insertion_point(field_release:cosmos.distribution.v1beta1.QueryValidatorCommissionRequest.validator_address)
  return _impl_.validator_address_.Release();
}
inline void QueryValidatorCommissionRequest::set_allocated_validator_address(std::string* value) {
  _impl_.validator_address_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.validator_address_.IsDefault()) {
          _impl_.validator_address_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmos.distribution.v1beta1.QueryValidatorCommissionRequest.validator_address)
}

// -------------------------------------------------------------------

// QueryValidatorCommissionResponse

// .cosmos.distribution.v1beta1.ValidatorAccumulatedCommission commission = 1 [json_name = "commission", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline bool QueryValidatorCommissionResponse::has_commission() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.commission_ != nullptr);
  return value;
}
inline const ::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission& QueryValidatorCommissionResponse::_internal_commission() const {
  const ::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission* p = _impl_.commission_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission&>(
      ::cosmos::distribution::v1beta1::_ValidatorAccumulatedCommission_default_instance_);
}
inline const ::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission& QueryValidatorCommissionResponse::commission() const {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.QueryValidatorCommissionResponse.commission)
  return _internal_commission();
}
inline void QueryValidatorCommissionResponse::unsafe_arena_set_allocated_commission(
    ::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission* commission) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.commission_);
  }
  _impl_.commission_ = commission;
  if (commission) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.distribution.v1beta1.QueryValidatorCommissionResponse.commission)
}
inline ::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission* QueryValidatorCommissionResponse::release_commission() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission* temp = _impl_.commission_;
  _impl_.commission_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission* QueryValidatorCommissionResponse::unsafe_arena_release_commission() {
  // @@protoc_insertion_point(field_release:cosmos.distribution.v1beta1.QueryValidatorCommissionResponse.commission)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission* temp = _impl_.commission_;
  _impl_.commission_ = nullptr;
  return temp;
}
inline ::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission* QueryValidatorCommissionResponse::_internal_mutable_commission() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.commission_ == nullptr) {
    auto* p = CreateMaybeMessage<::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission>(GetArenaForAllocation());
    _impl_.commission_ = p;
  }
  return _impl_.commission_;
}
inline ::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission* QueryValidatorCommissionResponse::mutable_commission() {
  ::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission* _msg = _internal_mutable_commission();
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.QueryValidatorCommissionResponse.commission)
  return _msg;
}
inline void QueryValidatorCommissionResponse::set_allocated_commission(::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission* commission) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.commission_);
  }
  if (commission) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(commission));
    if (message_arena != submessage_arena) {
      commission = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, commission, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.commission_ = commission;
  // @@protoc_insertion_point(field_set_allocated:cosmos.distribution.v1beta1.QueryValidatorCommissionResponse.commission)
}

// -------------------------------------------------------------------

// QueryValidatorSlashesRequest

// string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void QueryValidatorSlashesRequest::clear_validator_address() {
  _impl_.validator_address_.ClearToEmpty();
}
inline const std::string& QueryValidatorSlashesRequest::validator_address() const {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.QueryValidatorSlashesRequest.validator_address)
  return _internal_validator_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryValidatorSlashesRequest::set_validator_address(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.validator_address_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmos.distribution.v1beta1.QueryValidatorSlashesRequest.validator_address)
}
inline std::string* QueryValidatorSlashesRequest::mutable_validator_address() {
  std::string* _s = _internal_mutable_validator_address();
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.QueryValidatorSlashesRequest.validator_address)
  return _s;
}
inline const std::string& QueryValidatorSlashesRequest::_internal_validator_address() const {
  return _impl_.validator_address_.Get();
}
inline void QueryValidatorSlashesRequest::_internal_set_validator_address(const std::string& value) {
  ;


  _impl_.validator_address_.Set(value, GetArenaForAllocation());
}
inline std::string* QueryValidatorSlashesRequest::_internal_mutable_validator_address() {
  ;
  return _impl_.validator_address_.Mutable( GetArenaForAllocation());
}
inline std::string* QueryValidatorSlashesRequest::release_validator_address() {
  // @@protoc_insertion_point(field_release:cosmos.distribution.v1beta1.QueryValidatorSlashesRequest.validator_address)
  return _impl_.validator_address_.Release();
}
inline void QueryValidatorSlashesRequest::set_allocated_validator_address(std::string* value) {
  _impl_.validator_address_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.validator_address_.IsDefault()) {
          _impl_.validator_address_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmos.distribution.v1beta1.QueryValidatorSlashesRequest.validator_address)
}

// uint64 starting_height = 2 [json_name = "startingHeight"];
inline void QueryValidatorSlashesRequest::clear_starting_height() {
  _impl_.starting_height_ = ::uint64_t{0u};
}
inline ::uint64_t QueryValidatorSlashesRequest::starting_height() const {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.QueryValidatorSlashesRequest.starting_height)
  return _internal_starting_height();
}
inline void QueryValidatorSlashesRequest::set_starting_height(::uint64_t value) {
  _internal_set_starting_height(value);
  // @@protoc_insertion_point(field_set:cosmos.distribution.v1beta1.QueryValidatorSlashesRequest.starting_height)
}
inline ::uint64_t QueryValidatorSlashesRequest::_internal_starting_height() const {
  return _impl_.starting_height_;
}
inline void QueryValidatorSlashesRequest::_internal_set_starting_height(::uint64_t value) {
  ;
  _impl_.starting_height_ = value;
}

// uint64 ending_height = 3 [json_name = "endingHeight"];
inline void QueryValidatorSlashesRequest::clear_ending_height() {
  _impl_.ending_height_ = ::uint64_t{0u};
}
inline ::uint64_t QueryValidatorSlashesRequest::ending_height() const {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.QueryValidatorSlashesRequest.ending_height)
  return _internal_ending_height();
}
inline void QueryValidatorSlashesRequest::set_ending_height(::uint64_t value) {
  _internal_set_ending_height(value);
  // @@protoc_insertion_point(field_set:cosmos.distribution.v1beta1.QueryValidatorSlashesRequest.ending_height)
}
inline ::uint64_t QueryValidatorSlashesRequest::_internal_ending_height() const {
  return _impl_.ending_height_;
}
inline void QueryValidatorSlashesRequest::_internal_set_ending_height(::uint64_t value) {
  ;
  _impl_.ending_height_ = value;
}

// .cosmos.base.query.v1beta1.PageRequest pagination = 4 [json_name = "pagination"];
inline bool QueryValidatorSlashesRequest::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageRequest& QueryValidatorSlashesRequest::_internal_pagination() const {
  const ::cosmos::base::query::v1beta1::PageRequest* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageRequest&>(
      ::cosmos::base::query::v1beta1::_PageRequest_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageRequest& QueryValidatorSlashesRequest::pagination() const {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.QueryValidatorSlashesRequest.pagination)
  return _internal_pagination();
}
inline void QueryValidatorSlashesRequest::unsafe_arena_set_allocated_pagination(
    ::cosmos::base::query::v1beta1::PageRequest* pagination) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = pagination;
  if (pagination) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.distribution.v1beta1.QueryValidatorSlashesRequest.pagination)
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryValidatorSlashesRequest::release_pagination() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryValidatorSlashesRequest::unsafe_arena_release_pagination() {
  // @@protoc_insertion_point(field_release:cosmos.distribution.v1beta1.QueryValidatorSlashesRequest.pagination)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryValidatorSlashesRequest::_internal_mutable_pagination() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.pagination_ == nullptr) {
    auto* p = CreateMaybeMessage<::cosmos::base::query::v1beta1::PageRequest>(GetArenaForAllocation());
    _impl_.pagination_ = p;
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryValidatorSlashesRequest::mutable_pagination() {
  ::cosmos::base::query::v1beta1::PageRequest* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.QueryValidatorSlashesRequest.pagination)
  return _msg;
}
inline void QueryValidatorSlashesRequest::set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* pagination) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.pagination_);
  }
  if (pagination) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(pagination));
    if (message_arena != submessage_arena) {
      pagination = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pagination, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.pagination_ = pagination;
  // @@protoc_insertion_point(field_set_allocated:cosmos.distribution.v1beta1.QueryValidatorSlashesRequest.pagination)
}

// -------------------------------------------------------------------

// QueryValidatorSlashesResponse

// repeated .cosmos.distribution.v1beta1.ValidatorSlashEvent slashes = 1 [json_name = "slashes", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline int QueryValidatorSlashesResponse::_internal_slashes_size() const {
  return _impl_.slashes_.size();
}
inline int QueryValidatorSlashesResponse::slashes_size() const {
  return _internal_slashes_size();
}
inline ::cosmos::distribution::v1beta1::ValidatorSlashEvent* QueryValidatorSlashesResponse::mutable_slashes(int index) {
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.QueryValidatorSlashesResponse.slashes)
  return _internal_mutable_slashes()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::distribution::v1beta1::ValidatorSlashEvent >*
QueryValidatorSlashesResponse::mutable_slashes() {
  // @@protoc_insertion_point(field_mutable_list:cosmos.distribution.v1beta1.QueryValidatorSlashesResponse.slashes)
  return _internal_mutable_slashes();
}
inline const ::cosmos::distribution::v1beta1::ValidatorSlashEvent& QueryValidatorSlashesResponse::_internal_slashes(int index) const {
  return _internal_slashes().Get(index);
}
inline const ::cosmos::distribution::v1beta1::ValidatorSlashEvent& QueryValidatorSlashesResponse::slashes(int index) const {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.QueryValidatorSlashesResponse.slashes)
  return _internal_slashes(index);
}
inline ::cosmos::distribution::v1beta1::ValidatorSlashEvent* QueryValidatorSlashesResponse::_internal_add_slashes() {
  return _internal_mutable_slashes()->Add();
}
inline ::cosmos::distribution::v1beta1::ValidatorSlashEvent* QueryValidatorSlashesResponse::add_slashes() {
  ::cosmos::distribution::v1beta1::ValidatorSlashEvent* _add = _internal_add_slashes();
  // @@protoc_insertion_point(field_add:cosmos.distribution.v1beta1.QueryValidatorSlashesResponse.slashes)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::distribution::v1beta1::ValidatorSlashEvent >&
QueryValidatorSlashesResponse::slashes() const {
  // @@protoc_insertion_point(field_list:cosmos.distribution.v1beta1.QueryValidatorSlashesResponse.slashes)
  return _internal_slashes();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::distribution::v1beta1::ValidatorSlashEvent>&
QueryValidatorSlashesResponse::_internal_slashes() const {
  return _impl_.slashes_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::distribution::v1beta1::ValidatorSlashEvent>*
QueryValidatorSlashesResponse::_internal_mutable_slashes() {
  return &_impl_.slashes_;
}

// .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
inline bool QueryValidatorSlashesResponse::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageResponse& QueryValidatorSlashesResponse::_internal_pagination() const {
  const ::cosmos::base::query::v1beta1::PageResponse* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageResponse&>(
      ::cosmos::base::query::v1beta1::_PageResponse_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageResponse& QueryValidatorSlashesResponse::pagination() const {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.QueryValidatorSlashesResponse.pagination)
  return _internal_pagination();
}
inline void QueryValidatorSlashesResponse::unsafe_arena_set_allocated_pagination(
    ::cosmos::base::query::v1beta1::PageResponse* pagination) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = pagination;
  if (pagination) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.distribution.v1beta1.QueryValidatorSlashesResponse.pagination)
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryValidatorSlashesResponse::release_pagination() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryValidatorSlashesResponse::unsafe_arena_release_pagination() {
  // @@protoc_insertion_point(field_release:cosmos.distribution.v1beta1.QueryValidatorSlashesResponse.pagination)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryValidatorSlashesResponse::_internal_mutable_pagination() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.pagination_ == nullptr) {
    auto* p = CreateMaybeMessage<::cosmos::base::query::v1beta1::PageResponse>(GetArenaForAllocation());
    _impl_.pagination_ = p;
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryValidatorSlashesResponse::mutable_pagination() {
  ::cosmos::base::query::v1beta1::PageResponse* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.QueryValidatorSlashesResponse.pagination)
  return _msg;
}
inline void QueryValidatorSlashesResponse::set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* pagination) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.pagination_);
  }
  if (pagination) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(pagination));
    if (message_arena != submessage_arena) {
      pagination = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pagination, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.pagination_ = pagination;
  // @@protoc_insertion_point(field_set_allocated:cosmos.distribution.v1beta1.QueryValidatorSlashesResponse.pagination)
}

// -------------------------------------------------------------------

// QueryDelegationRewardsRequest

// string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void QueryDelegationRewardsRequest::clear_delegator_address() {
  _impl_.delegator_address_.ClearToEmpty();
}
inline const std::string& QueryDelegationRewardsRequest::delegator_address() const {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.QueryDelegationRewardsRequest.delegator_address)
  return _internal_delegator_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryDelegationRewardsRequest::set_delegator_address(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.delegator_address_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmos.distribution.v1beta1.QueryDelegationRewardsRequest.delegator_address)
}
inline std::string* QueryDelegationRewardsRequest::mutable_delegator_address() {
  std::string* _s = _internal_mutable_delegator_address();
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.QueryDelegationRewardsRequest.delegator_address)
  return _s;
}
inline const std::string& QueryDelegationRewardsRequest::_internal_delegator_address() const {
  return _impl_.delegator_address_.Get();
}
inline void QueryDelegationRewardsRequest::_internal_set_delegator_address(const std::string& value) {
  ;


  _impl_.delegator_address_.Set(value, GetArenaForAllocation());
}
inline std::string* QueryDelegationRewardsRequest::_internal_mutable_delegator_address() {
  ;
  return _impl_.delegator_address_.Mutable( GetArenaForAllocation());
}
inline std::string* QueryDelegationRewardsRequest::release_delegator_address() {
  // @@protoc_insertion_point(field_release:cosmos.distribution.v1beta1.QueryDelegationRewardsRequest.delegator_address)
  return _impl_.delegator_address_.Release();
}
inline void QueryDelegationRewardsRequest::set_allocated_delegator_address(std::string* value) {
  _impl_.delegator_address_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.delegator_address_.IsDefault()) {
          _impl_.delegator_address_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmos.distribution.v1beta1.QueryDelegationRewardsRequest.delegator_address)
}

// string validator_address = 2 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void QueryDelegationRewardsRequest::clear_validator_address() {
  _impl_.validator_address_.ClearToEmpty();
}
inline const std::string& QueryDelegationRewardsRequest::validator_address() const {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.QueryDelegationRewardsRequest.validator_address)
  return _internal_validator_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryDelegationRewardsRequest::set_validator_address(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.validator_address_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmos.distribution.v1beta1.QueryDelegationRewardsRequest.validator_address)
}
inline std::string* QueryDelegationRewardsRequest::mutable_validator_address() {
  std::string* _s = _internal_mutable_validator_address();
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.QueryDelegationRewardsRequest.validator_address)
  return _s;
}
inline const std::string& QueryDelegationRewardsRequest::_internal_validator_address() const {
  return _impl_.validator_address_.Get();
}
inline void QueryDelegationRewardsRequest::_internal_set_validator_address(const std::string& value) {
  ;


  _impl_.validator_address_.Set(value, GetArenaForAllocation());
}
inline std::string* QueryDelegationRewardsRequest::_internal_mutable_validator_address() {
  ;
  return _impl_.validator_address_.Mutable( GetArenaForAllocation());
}
inline std::string* QueryDelegationRewardsRequest::release_validator_address() {
  // @@protoc_insertion_point(field_release:cosmos.distribution.v1beta1.QueryDelegationRewardsRequest.validator_address)
  return _impl_.validator_address_.Release();
}
inline void QueryDelegationRewardsRequest::set_allocated_validator_address(std::string* value) {
  _impl_.validator_address_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.validator_address_.IsDefault()) {
          _impl_.validator_address_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmos.distribution.v1beta1.QueryDelegationRewardsRequest.validator_address)
}

// -------------------------------------------------------------------

// QueryDelegationRewardsResponse

// repeated .cosmos.base.v1beta1.DecCoin rewards = 1 [json_name = "rewards", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (.amino.dont_omitempty) = true];
inline int QueryDelegationRewardsResponse::_internal_rewards_size() const {
  return _impl_.rewards_.size();
}
inline int QueryDelegationRewardsResponse::rewards_size() const {
  return _internal_rewards_size();
}
inline ::cosmos::base::v1beta1::DecCoin* QueryDelegationRewardsResponse::mutable_rewards(int index) {
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.QueryDelegationRewardsResponse.rewards)
  return _internal_mutable_rewards()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::DecCoin >*
QueryDelegationRewardsResponse::mutable_rewards() {
  // @@protoc_insertion_point(field_mutable_list:cosmos.distribution.v1beta1.QueryDelegationRewardsResponse.rewards)
  return _internal_mutable_rewards();
}
inline const ::cosmos::base::v1beta1::DecCoin& QueryDelegationRewardsResponse::_internal_rewards(int index) const {
  return _internal_rewards().Get(index);
}
inline const ::cosmos::base::v1beta1::DecCoin& QueryDelegationRewardsResponse::rewards(int index) const {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.QueryDelegationRewardsResponse.rewards)
  return _internal_rewards(index);
}
inline ::cosmos::base::v1beta1::DecCoin* QueryDelegationRewardsResponse::_internal_add_rewards() {
  return _internal_mutable_rewards()->Add();
}
inline ::cosmos::base::v1beta1::DecCoin* QueryDelegationRewardsResponse::add_rewards() {
  ::cosmos::base::v1beta1::DecCoin* _add = _internal_add_rewards();
  // @@protoc_insertion_point(field_add:cosmos.distribution.v1beta1.QueryDelegationRewardsResponse.rewards)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::DecCoin >&
QueryDelegationRewardsResponse::rewards() const {
  // @@protoc_insertion_point(field_list:cosmos.distribution.v1beta1.QueryDelegationRewardsResponse.rewards)
  return _internal_rewards();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::DecCoin>&
QueryDelegationRewardsResponse::_internal_rewards() const {
  return _impl_.rewards_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::DecCoin>*
QueryDelegationRewardsResponse::_internal_mutable_rewards() {
  return &_impl_.rewards_;
}

// -------------------------------------------------------------------

// QueryDelegationTotalRewardsRequest

// string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void QueryDelegationTotalRewardsRequest::clear_delegator_address() {
  _impl_.delegator_address_.ClearToEmpty();
}
inline const std::string& QueryDelegationTotalRewardsRequest::delegator_address() const {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.QueryDelegationTotalRewardsRequest.delegator_address)
  return _internal_delegator_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryDelegationTotalRewardsRequest::set_delegator_address(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.delegator_address_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmos.distribution.v1beta1.QueryDelegationTotalRewardsRequest.delegator_address)
}
inline std::string* QueryDelegationTotalRewardsRequest::mutable_delegator_address() {
  std::string* _s = _internal_mutable_delegator_address();
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.QueryDelegationTotalRewardsRequest.delegator_address)
  return _s;
}
inline const std::string& QueryDelegationTotalRewardsRequest::_internal_delegator_address() const {
  return _impl_.delegator_address_.Get();
}
inline void QueryDelegationTotalRewardsRequest::_internal_set_delegator_address(const std::string& value) {
  ;


  _impl_.delegator_address_.Set(value, GetArenaForAllocation());
}
inline std::string* QueryDelegationTotalRewardsRequest::_internal_mutable_delegator_address() {
  ;
  return _impl_.delegator_address_.Mutable( GetArenaForAllocation());
}
inline std::string* QueryDelegationTotalRewardsRequest::release_delegator_address() {
  // @@protoc_insertion_point(field_release:cosmos.distribution.v1beta1.QueryDelegationTotalRewardsRequest.delegator_address)
  return _impl_.delegator_address_.Release();
}
inline void QueryDelegationTotalRewardsRequest::set_allocated_delegator_address(std::string* value) {
  _impl_.delegator_address_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.delegator_address_.IsDefault()) {
          _impl_.delegator_address_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmos.distribution.v1beta1.QueryDelegationTotalRewardsRequest.delegator_address)
}

// -------------------------------------------------------------------

// QueryDelegationTotalRewardsResponse

// repeated .cosmos.distribution.v1beta1.DelegationDelegatorReward rewards = 1 [json_name = "rewards", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline int QueryDelegationTotalRewardsResponse::_internal_rewards_size() const {
  return _impl_.rewards_.size();
}
inline int QueryDelegationTotalRewardsResponse::rewards_size() const {
  return _internal_rewards_size();
}
inline ::cosmos::distribution::v1beta1::DelegationDelegatorReward* QueryDelegationTotalRewardsResponse::mutable_rewards(int index) {
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse.rewards)
  return _internal_mutable_rewards()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::distribution::v1beta1::DelegationDelegatorReward >*
QueryDelegationTotalRewardsResponse::mutable_rewards() {
  // @@protoc_insertion_point(field_mutable_list:cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse.rewards)
  return _internal_mutable_rewards();
}
inline const ::cosmos::distribution::v1beta1::DelegationDelegatorReward& QueryDelegationTotalRewardsResponse::_internal_rewards(int index) const {
  return _internal_rewards().Get(index);
}
inline const ::cosmos::distribution::v1beta1::DelegationDelegatorReward& QueryDelegationTotalRewardsResponse::rewards(int index) const {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse.rewards)
  return _internal_rewards(index);
}
inline ::cosmos::distribution::v1beta1::DelegationDelegatorReward* QueryDelegationTotalRewardsResponse::_internal_add_rewards() {
  return _internal_mutable_rewards()->Add();
}
inline ::cosmos::distribution::v1beta1::DelegationDelegatorReward* QueryDelegationTotalRewardsResponse::add_rewards() {
  ::cosmos::distribution::v1beta1::DelegationDelegatorReward* _add = _internal_add_rewards();
  // @@protoc_insertion_point(field_add:cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse.rewards)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::distribution::v1beta1::DelegationDelegatorReward >&
QueryDelegationTotalRewardsResponse::rewards() const {
  // @@protoc_insertion_point(field_list:cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse.rewards)
  return _internal_rewards();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::distribution::v1beta1::DelegationDelegatorReward>&
QueryDelegationTotalRewardsResponse::_internal_rewards() const {
  return _impl_.rewards_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::distribution::v1beta1::DelegationDelegatorReward>*
QueryDelegationTotalRewardsResponse::_internal_mutable_rewards() {
  return &_impl_.rewards_;
}

// repeated .cosmos.base.v1beta1.DecCoin total = 2 [json_name = "total", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (.amino.dont_omitempty) = true];
inline int QueryDelegationTotalRewardsResponse::_internal_total_size() const {
  return _impl_.total_.size();
}
inline int QueryDelegationTotalRewardsResponse::total_size() const {
  return _internal_total_size();
}
inline ::cosmos::base::v1beta1::DecCoin* QueryDelegationTotalRewardsResponse::mutable_total(int index) {
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse.total)
  return _internal_mutable_total()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::DecCoin >*
QueryDelegationTotalRewardsResponse::mutable_total() {
  // @@protoc_insertion_point(field_mutable_list:cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse.total)
  return _internal_mutable_total();
}
inline const ::cosmos::base::v1beta1::DecCoin& QueryDelegationTotalRewardsResponse::_internal_total(int index) const {
  return _internal_total().Get(index);
}
inline const ::cosmos::base::v1beta1::DecCoin& QueryDelegationTotalRewardsResponse::total(int index) const {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse.total)
  return _internal_total(index);
}
inline ::cosmos::base::v1beta1::DecCoin* QueryDelegationTotalRewardsResponse::_internal_add_total() {
  return _internal_mutable_total()->Add();
}
inline ::cosmos::base::v1beta1::DecCoin* QueryDelegationTotalRewardsResponse::add_total() {
  ::cosmos::base::v1beta1::DecCoin* _add = _internal_add_total();
  // @@protoc_insertion_point(field_add:cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse.total)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::DecCoin >&
QueryDelegationTotalRewardsResponse::total() const {
  // @@protoc_insertion_point(field_list:cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse.total)
  return _internal_total();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::DecCoin>&
QueryDelegationTotalRewardsResponse::_internal_total() const {
  return _impl_.total_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::DecCoin>*
QueryDelegationTotalRewardsResponse::_internal_mutable_total() {
  return &_impl_.total_;
}

// -------------------------------------------------------------------

// QueryDelegatorValidatorsRequest

// string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void QueryDelegatorValidatorsRequest::clear_delegator_address() {
  _impl_.delegator_address_.ClearToEmpty();
}
inline const std::string& QueryDelegatorValidatorsRequest::delegator_address() const {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.QueryDelegatorValidatorsRequest.delegator_address)
  return _internal_delegator_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryDelegatorValidatorsRequest::set_delegator_address(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.delegator_address_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmos.distribution.v1beta1.QueryDelegatorValidatorsRequest.delegator_address)
}
inline std::string* QueryDelegatorValidatorsRequest::mutable_delegator_address() {
  std::string* _s = _internal_mutable_delegator_address();
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.QueryDelegatorValidatorsRequest.delegator_address)
  return _s;
}
inline const std::string& QueryDelegatorValidatorsRequest::_internal_delegator_address() const {
  return _impl_.delegator_address_.Get();
}
inline void QueryDelegatorValidatorsRequest::_internal_set_delegator_address(const std::string& value) {
  ;


  _impl_.delegator_address_.Set(value, GetArenaForAllocation());
}
inline std::string* QueryDelegatorValidatorsRequest::_internal_mutable_delegator_address() {
  ;
  return _impl_.delegator_address_.Mutable( GetArenaForAllocation());
}
inline std::string* QueryDelegatorValidatorsRequest::release_delegator_address() {
  // @@protoc_insertion_point(field_release:cosmos.distribution.v1beta1.QueryDelegatorValidatorsRequest.delegator_address)
  return _impl_.delegator_address_.Release();
}
inline void QueryDelegatorValidatorsRequest::set_allocated_delegator_address(std::string* value) {
  _impl_.delegator_address_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.delegator_address_.IsDefault()) {
          _impl_.delegator_address_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmos.distribution.v1beta1.QueryDelegatorValidatorsRequest.delegator_address)
}

// -------------------------------------------------------------------

// QueryDelegatorValidatorsResponse

// repeated string validators = 1 [json_name = "validators"];
inline int QueryDelegatorValidatorsResponse::_internal_validators_size() const {
  return _impl_.validators_.size();
}
inline int QueryDelegatorValidatorsResponse::validators_size() const {
  return _internal_validators_size();
}
inline void QueryDelegatorValidatorsResponse::clear_validators() {
  _internal_mutable_validators()->Clear();
}
inline std::string* QueryDelegatorValidatorsResponse::add_validators() {
  std::string* _s = _internal_add_validators();
  // @@protoc_insertion_point(field_add_mutable:cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse.validators)
  return _s;
}
inline const std::string& QueryDelegatorValidatorsResponse::validators(int index) const {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse.validators)
  return _internal_validators(index);
}
inline std::string* QueryDelegatorValidatorsResponse::mutable_validators(int index) {
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse.validators)
  return _internal_mutable_validators()->Mutable(index);
}
inline void QueryDelegatorValidatorsResponse::set_validators(int index, const std::string& value) {
  _internal_mutable_validators()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse.validators)
}
inline void QueryDelegatorValidatorsResponse::set_validators(int index, std::string&& value) {
  _internal_mutable_validators()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse.validators)
}
inline void QueryDelegatorValidatorsResponse::set_validators(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_validators()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse.validators)
}
inline void QueryDelegatorValidatorsResponse::set_validators(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_validators()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse.validators)
}
inline void QueryDelegatorValidatorsResponse::set_validators(int index, absl::string_view value) {
  _internal_mutable_validators()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse.validators)
}
inline void QueryDelegatorValidatorsResponse::add_validators(const std::string& value) {
  _internal_mutable_validators()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse.validators)
}
inline void QueryDelegatorValidatorsResponse::add_validators(std::string&& value) {
  _internal_mutable_validators()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse.validators)
}
inline void QueryDelegatorValidatorsResponse::add_validators(const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_validators()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse.validators)
}
inline void QueryDelegatorValidatorsResponse::add_validators(const char* value, std::size_t size) {
  _internal_mutable_validators()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse.validators)
}
inline void QueryDelegatorValidatorsResponse::add_validators(absl::string_view value) {
  _internal_mutable_validators()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse.validators)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
QueryDelegatorValidatorsResponse::validators() const {
  // @@protoc_insertion_point(field_list:cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse.validators)
  return _internal_validators();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* QueryDelegatorValidatorsResponse::mutable_validators() {
  // @@protoc_insertion_point(field_mutable_list:cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse.validators)
  return _internal_mutable_validators();
}
inline const std::string& QueryDelegatorValidatorsResponse::_internal_validators(int index) const {
  return _internal_validators().Get(index);
}
inline std::string* QueryDelegatorValidatorsResponse::_internal_add_validators() {
  return _internal_mutable_validators()->Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
QueryDelegatorValidatorsResponse::_internal_validators() const {
  return _impl_.validators_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
QueryDelegatorValidatorsResponse::_internal_mutable_validators() {
  return &_impl_.validators_;
}

// -------------------------------------------------------------------

// QueryDelegatorWithdrawAddressRequest

// string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void QueryDelegatorWithdrawAddressRequest::clear_delegator_address() {
  _impl_.delegator_address_.ClearToEmpty();
}
inline const std::string& QueryDelegatorWithdrawAddressRequest::delegator_address() const {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressRequest.delegator_address)
  return _internal_delegator_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryDelegatorWithdrawAddressRequest::set_delegator_address(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.delegator_address_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressRequest.delegator_address)
}
inline std::string* QueryDelegatorWithdrawAddressRequest::mutable_delegator_address() {
  std::string* _s = _internal_mutable_delegator_address();
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressRequest.delegator_address)
  return _s;
}
inline const std::string& QueryDelegatorWithdrawAddressRequest::_internal_delegator_address() const {
  return _impl_.delegator_address_.Get();
}
inline void QueryDelegatorWithdrawAddressRequest::_internal_set_delegator_address(const std::string& value) {
  ;


  _impl_.delegator_address_.Set(value, GetArenaForAllocation());
}
inline std::string* QueryDelegatorWithdrawAddressRequest::_internal_mutable_delegator_address() {
  ;
  return _impl_.delegator_address_.Mutable( GetArenaForAllocation());
}
inline std::string* QueryDelegatorWithdrawAddressRequest::release_delegator_address() {
  // @@protoc_insertion_point(field_release:cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressRequest.delegator_address)
  return _impl_.delegator_address_.Release();
}
inline void QueryDelegatorWithdrawAddressRequest::set_allocated_delegator_address(std::string* value) {
  _impl_.delegator_address_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.delegator_address_.IsDefault()) {
          _impl_.delegator_address_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressRequest.delegator_address)
}

// -------------------------------------------------------------------

// QueryDelegatorWithdrawAddressResponse

// string withdraw_address = 1 [json_name = "withdrawAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void QueryDelegatorWithdrawAddressResponse::clear_withdraw_address() {
  _impl_.withdraw_address_.ClearToEmpty();
}
inline const std::string& QueryDelegatorWithdrawAddressResponse::withdraw_address() const {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse.withdraw_address)
  return _internal_withdraw_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryDelegatorWithdrawAddressResponse::set_withdraw_address(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.withdraw_address_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse.withdraw_address)
}
inline std::string* QueryDelegatorWithdrawAddressResponse::mutable_withdraw_address() {
  std::string* _s = _internal_mutable_withdraw_address();
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse.withdraw_address)
  return _s;
}
inline const std::string& QueryDelegatorWithdrawAddressResponse::_internal_withdraw_address() const {
  return _impl_.withdraw_address_.Get();
}
inline void QueryDelegatorWithdrawAddressResponse::_internal_set_withdraw_address(const std::string& value) {
  ;


  _impl_.withdraw_address_.Set(value, GetArenaForAllocation());
}
inline std::string* QueryDelegatorWithdrawAddressResponse::_internal_mutable_withdraw_address() {
  ;
  return _impl_.withdraw_address_.Mutable( GetArenaForAllocation());
}
inline std::string* QueryDelegatorWithdrawAddressResponse::release_withdraw_address() {
  // @@protoc_insertion_point(field_release:cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse.withdraw_address)
  return _impl_.withdraw_address_.Release();
}
inline void QueryDelegatorWithdrawAddressResponse::set_allocated_withdraw_address(std::string* value) {
  _impl_.withdraw_address_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.withdraw_address_.IsDefault()) {
          _impl_.withdraw_address_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse.withdraw_address)
}

// -------------------------------------------------------------------

// QueryCommunityPoolRequest

// -------------------------------------------------------------------

// QueryCommunityPoolResponse

// repeated .cosmos.base.v1beta1.DecCoin pool = 1 [json_name = "pool", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (.amino.dont_omitempty) = true];
inline int QueryCommunityPoolResponse::_internal_pool_size() const {
  return _impl_.pool_.size();
}
inline int QueryCommunityPoolResponse::pool_size() const {
  return _internal_pool_size();
}
inline ::cosmos::base::v1beta1::DecCoin* QueryCommunityPoolResponse::mutable_pool(int index) {
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.QueryCommunityPoolResponse.pool)
  return _internal_mutable_pool()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::DecCoin >*
QueryCommunityPoolResponse::mutable_pool() {
  // @@protoc_insertion_point(field_mutable_list:cosmos.distribution.v1beta1.QueryCommunityPoolResponse.pool)
  return _internal_mutable_pool();
}
inline const ::cosmos::base::v1beta1::DecCoin& QueryCommunityPoolResponse::_internal_pool(int index) const {
  return _internal_pool().Get(index);
}
inline const ::cosmos::base::v1beta1::DecCoin& QueryCommunityPoolResponse::pool(int index) const {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.QueryCommunityPoolResponse.pool)
  return _internal_pool(index);
}
inline ::cosmos::base::v1beta1::DecCoin* QueryCommunityPoolResponse::_internal_add_pool() {
  return _internal_mutable_pool()->Add();
}
inline ::cosmos::base::v1beta1::DecCoin* QueryCommunityPoolResponse::add_pool() {
  ::cosmos::base::v1beta1::DecCoin* _add = _internal_add_pool();
  // @@protoc_insertion_point(field_add:cosmos.distribution.v1beta1.QueryCommunityPoolResponse.pool)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::DecCoin >&
QueryCommunityPoolResponse::pool() const {
  // @@protoc_insertion_point(field_list:cosmos.distribution.v1beta1.QueryCommunityPoolResponse.pool)
  return _internal_pool();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::DecCoin>&
QueryCommunityPoolResponse::_internal_pool() const {
  return _impl_.pool_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::DecCoin>*
QueryCommunityPoolResponse::_internal_mutable_pool() {
  return &_impl_.pool_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace distribution
}  // namespace cosmos


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_cosmos_2fdistribution_2fv1beta1_2fquery_2eproto_2epb_2eh
