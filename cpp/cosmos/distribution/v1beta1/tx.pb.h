// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/distribution/v1beta1/tx.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_cosmos_2fdistribution_2fv1beta1_2ftx_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_cosmos_2fdistribution_2fv1beta1_2ftx_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4023000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4023004 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "gogoproto/gogo.pb.h"
#include "cosmos/base/v1beta1/coin.pb.h"
#include "cosmos_proto/cosmos.pb.h"
#include "cosmos/msg/v1/msg.pb.h"
#include "amino/amino.pb.h"
#include "cosmos/distribution/v1beta1/distribution.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cosmos_2fdistribution_2fv1beta1_2ftx_2eproto

PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_cosmos_2fdistribution_2fv1beta1_2ftx_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable
    descriptor_table_cosmos_2fdistribution_2fv1beta1_2ftx_2eproto;
namespace cosmos {
namespace distribution {
namespace v1beta1 {
class MsgCommunityPoolSpend;
struct MsgCommunityPoolSpendDefaultTypeInternal;
extern MsgCommunityPoolSpendDefaultTypeInternal _MsgCommunityPoolSpend_default_instance_;
class MsgCommunityPoolSpendResponse;
struct MsgCommunityPoolSpendResponseDefaultTypeInternal;
extern MsgCommunityPoolSpendResponseDefaultTypeInternal _MsgCommunityPoolSpendResponse_default_instance_;
class MsgFundCommunityPool;
struct MsgFundCommunityPoolDefaultTypeInternal;
extern MsgFundCommunityPoolDefaultTypeInternal _MsgFundCommunityPool_default_instance_;
class MsgFundCommunityPoolResponse;
struct MsgFundCommunityPoolResponseDefaultTypeInternal;
extern MsgFundCommunityPoolResponseDefaultTypeInternal _MsgFundCommunityPoolResponse_default_instance_;
class MsgSetWithdrawAddress;
struct MsgSetWithdrawAddressDefaultTypeInternal;
extern MsgSetWithdrawAddressDefaultTypeInternal _MsgSetWithdrawAddress_default_instance_;
class MsgSetWithdrawAddressResponse;
struct MsgSetWithdrawAddressResponseDefaultTypeInternal;
extern MsgSetWithdrawAddressResponseDefaultTypeInternal _MsgSetWithdrawAddressResponse_default_instance_;
class MsgUpdateParams;
struct MsgUpdateParamsDefaultTypeInternal;
extern MsgUpdateParamsDefaultTypeInternal _MsgUpdateParams_default_instance_;
class MsgUpdateParamsResponse;
struct MsgUpdateParamsResponseDefaultTypeInternal;
extern MsgUpdateParamsResponseDefaultTypeInternal _MsgUpdateParamsResponse_default_instance_;
class MsgWithdrawDelegatorReward;
struct MsgWithdrawDelegatorRewardDefaultTypeInternal;
extern MsgWithdrawDelegatorRewardDefaultTypeInternal _MsgWithdrawDelegatorReward_default_instance_;
class MsgWithdrawDelegatorRewardResponse;
struct MsgWithdrawDelegatorRewardResponseDefaultTypeInternal;
extern MsgWithdrawDelegatorRewardResponseDefaultTypeInternal _MsgWithdrawDelegatorRewardResponse_default_instance_;
class MsgWithdrawValidatorCommission;
struct MsgWithdrawValidatorCommissionDefaultTypeInternal;
extern MsgWithdrawValidatorCommissionDefaultTypeInternal _MsgWithdrawValidatorCommission_default_instance_;
class MsgWithdrawValidatorCommissionResponse;
struct MsgWithdrawValidatorCommissionResponseDefaultTypeInternal;
extern MsgWithdrawValidatorCommissionResponseDefaultTypeInternal _MsgWithdrawValidatorCommissionResponse_default_instance_;
}  // namespace v1beta1
}  // namespace distribution
}  // namespace cosmos
PROTOBUF_NAMESPACE_OPEN
template <>
::cosmos::distribution::v1beta1::MsgCommunityPoolSpend* Arena::CreateMaybeMessage<::cosmos::distribution::v1beta1::MsgCommunityPoolSpend>(Arena*);
template <>
::cosmos::distribution::v1beta1::MsgCommunityPoolSpendResponse* Arena::CreateMaybeMessage<::cosmos::distribution::v1beta1::MsgCommunityPoolSpendResponse>(Arena*);
template <>
::cosmos::distribution::v1beta1::MsgFundCommunityPool* Arena::CreateMaybeMessage<::cosmos::distribution::v1beta1::MsgFundCommunityPool>(Arena*);
template <>
::cosmos::distribution::v1beta1::MsgFundCommunityPoolResponse* Arena::CreateMaybeMessage<::cosmos::distribution::v1beta1::MsgFundCommunityPoolResponse>(Arena*);
template <>
::cosmos::distribution::v1beta1::MsgSetWithdrawAddress* Arena::CreateMaybeMessage<::cosmos::distribution::v1beta1::MsgSetWithdrawAddress>(Arena*);
template <>
::cosmos::distribution::v1beta1::MsgSetWithdrawAddressResponse* Arena::CreateMaybeMessage<::cosmos::distribution::v1beta1::MsgSetWithdrawAddressResponse>(Arena*);
template <>
::cosmos::distribution::v1beta1::MsgUpdateParams* Arena::CreateMaybeMessage<::cosmos::distribution::v1beta1::MsgUpdateParams>(Arena*);
template <>
::cosmos::distribution::v1beta1::MsgUpdateParamsResponse* Arena::CreateMaybeMessage<::cosmos::distribution::v1beta1::MsgUpdateParamsResponse>(Arena*);
template <>
::cosmos::distribution::v1beta1::MsgWithdrawDelegatorReward* Arena::CreateMaybeMessage<::cosmos::distribution::v1beta1::MsgWithdrawDelegatorReward>(Arena*);
template <>
::cosmos::distribution::v1beta1::MsgWithdrawDelegatorRewardResponse* Arena::CreateMaybeMessage<::cosmos::distribution::v1beta1::MsgWithdrawDelegatorRewardResponse>(Arena*);
template <>
::cosmos::distribution::v1beta1::MsgWithdrawValidatorCommission* Arena::CreateMaybeMessage<::cosmos::distribution::v1beta1::MsgWithdrawValidatorCommission>(Arena*);
template <>
::cosmos::distribution::v1beta1::MsgWithdrawValidatorCommissionResponse* Arena::CreateMaybeMessage<::cosmos::distribution::v1beta1::MsgWithdrawValidatorCommissionResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

namespace cosmos {
namespace distribution {
namespace v1beta1 {

// ===================================================================


// -------------------------------------------------------------------

class MsgSetWithdrawAddress final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.distribution.v1beta1.MsgSetWithdrawAddress) */ {
 public:
  inline MsgSetWithdrawAddress() : MsgSetWithdrawAddress(nullptr) {}
  ~MsgSetWithdrawAddress() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgSetWithdrawAddress(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgSetWithdrawAddress(const MsgSetWithdrawAddress& from);
  MsgSetWithdrawAddress(MsgSetWithdrawAddress&& from) noexcept
    : MsgSetWithdrawAddress() {
    *this = ::std::move(from);
  }

  inline MsgSetWithdrawAddress& operator=(const MsgSetWithdrawAddress& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgSetWithdrawAddress& operator=(MsgSetWithdrawAddress&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgSetWithdrawAddress& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgSetWithdrawAddress* internal_default_instance() {
    return reinterpret_cast<const MsgSetWithdrawAddress*>(
               &_MsgSetWithdrawAddress_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MsgSetWithdrawAddress& a, MsgSetWithdrawAddress& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgSetWithdrawAddress* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgSetWithdrawAddress* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgSetWithdrawAddress* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgSetWithdrawAddress>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgSetWithdrawAddress& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgSetWithdrawAddress& from) {
    MsgSetWithdrawAddress::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSetWithdrawAddress* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.distribution.v1beta1.MsgSetWithdrawAddress";
  }
  protected:
  explicit MsgSetWithdrawAddress(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDelegatorAddressFieldNumber = 1,
    kWithdrawAddressFieldNumber = 2,
  };
  // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_delegator_address() ;
  const std::string& delegator_address() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_delegator_address(Arg_&& arg, Args_... args);
  std::string* mutable_delegator_address();
  PROTOBUF_NODISCARD std::string* release_delegator_address();
  void set_allocated_delegator_address(std::string* ptr);

  private:
  const std::string& _internal_delegator_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_delegator_address(
      const std::string& value);
  std::string* _internal_mutable_delegator_address();

  public:
  // string withdraw_address = 2 [json_name = "withdrawAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_withdraw_address() ;
  const std::string& withdraw_address() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_withdraw_address(Arg_&& arg, Args_... args);
  std::string* mutable_withdraw_address();
  PROTOBUF_NODISCARD std::string* release_withdraw_address();
  void set_allocated_withdraw_address(std::string* ptr);

  private:
  const std::string& _internal_withdraw_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_withdraw_address(
      const std::string& value);
  std::string* _internal_mutable_withdraw_address();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.distribution.v1beta1.MsgSetWithdrawAddress)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr delegator_address_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr withdraw_address_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fdistribution_2fv1beta1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgSetWithdrawAddressResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:cosmos.distribution.v1beta1.MsgSetWithdrawAddressResponse) */ {
 public:
  inline MsgSetWithdrawAddressResponse() : MsgSetWithdrawAddressResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgSetWithdrawAddressResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgSetWithdrawAddressResponse(const MsgSetWithdrawAddressResponse& from);
  MsgSetWithdrawAddressResponse(MsgSetWithdrawAddressResponse&& from) noexcept
    : MsgSetWithdrawAddressResponse() {
    *this = ::std::move(from);
  }

  inline MsgSetWithdrawAddressResponse& operator=(const MsgSetWithdrawAddressResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgSetWithdrawAddressResponse& operator=(MsgSetWithdrawAddressResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgSetWithdrawAddressResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgSetWithdrawAddressResponse* internal_default_instance() {
    return reinterpret_cast<const MsgSetWithdrawAddressResponse*>(
               &_MsgSetWithdrawAddressResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(MsgSetWithdrawAddressResponse& a, MsgSetWithdrawAddressResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgSetWithdrawAddressResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgSetWithdrawAddressResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgSetWithdrawAddressResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgSetWithdrawAddressResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgSetWithdrawAddressResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgSetWithdrawAddressResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.distribution.v1beta1.MsgSetWithdrawAddressResponse";
  }
  protected:
  explicit MsgSetWithdrawAddressResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:cosmos.distribution.v1beta1.MsgSetWithdrawAddressResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_cosmos_2fdistribution_2fv1beta1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgWithdrawDelegatorReward final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward) */ {
 public:
  inline MsgWithdrawDelegatorReward() : MsgWithdrawDelegatorReward(nullptr) {}
  ~MsgWithdrawDelegatorReward() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgWithdrawDelegatorReward(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgWithdrawDelegatorReward(const MsgWithdrawDelegatorReward& from);
  MsgWithdrawDelegatorReward(MsgWithdrawDelegatorReward&& from) noexcept
    : MsgWithdrawDelegatorReward() {
    *this = ::std::move(from);
  }

  inline MsgWithdrawDelegatorReward& operator=(const MsgWithdrawDelegatorReward& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgWithdrawDelegatorReward& operator=(MsgWithdrawDelegatorReward&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgWithdrawDelegatorReward& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgWithdrawDelegatorReward* internal_default_instance() {
    return reinterpret_cast<const MsgWithdrawDelegatorReward*>(
               &_MsgWithdrawDelegatorReward_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(MsgWithdrawDelegatorReward& a, MsgWithdrawDelegatorReward& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgWithdrawDelegatorReward* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgWithdrawDelegatorReward* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgWithdrawDelegatorReward* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgWithdrawDelegatorReward>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgWithdrawDelegatorReward& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgWithdrawDelegatorReward& from) {
    MsgWithdrawDelegatorReward::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgWithdrawDelegatorReward* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward";
  }
  protected:
  explicit MsgWithdrawDelegatorReward(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDelegatorAddressFieldNumber = 1,
    kValidatorAddressFieldNumber = 2,
  };
  // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_delegator_address() ;
  const std::string& delegator_address() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_delegator_address(Arg_&& arg, Args_... args);
  std::string* mutable_delegator_address();
  PROTOBUF_NODISCARD std::string* release_delegator_address();
  void set_allocated_delegator_address(std::string* ptr);

  private:
  const std::string& _internal_delegator_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_delegator_address(
      const std::string& value);
  std::string* _internal_mutable_delegator_address();

  public:
  // string validator_address = 2 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_validator_address() ;
  const std::string& validator_address() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_validator_address(Arg_&& arg, Args_... args);
  std::string* mutable_validator_address();
  PROTOBUF_NODISCARD std::string* release_validator_address();
  void set_allocated_validator_address(std::string* ptr);

  private:
  const std::string& _internal_validator_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_validator_address(
      const std::string& value);
  std::string* _internal_mutable_validator_address();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr delegator_address_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr validator_address_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fdistribution_2fv1beta1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgWithdrawDelegatorRewardResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.distribution.v1beta1.MsgWithdrawDelegatorRewardResponse) */ {
 public:
  inline MsgWithdrawDelegatorRewardResponse() : MsgWithdrawDelegatorRewardResponse(nullptr) {}
  ~MsgWithdrawDelegatorRewardResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgWithdrawDelegatorRewardResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgWithdrawDelegatorRewardResponse(const MsgWithdrawDelegatorRewardResponse& from);
  MsgWithdrawDelegatorRewardResponse(MsgWithdrawDelegatorRewardResponse&& from) noexcept
    : MsgWithdrawDelegatorRewardResponse() {
    *this = ::std::move(from);
  }

  inline MsgWithdrawDelegatorRewardResponse& operator=(const MsgWithdrawDelegatorRewardResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgWithdrawDelegatorRewardResponse& operator=(MsgWithdrawDelegatorRewardResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgWithdrawDelegatorRewardResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgWithdrawDelegatorRewardResponse* internal_default_instance() {
    return reinterpret_cast<const MsgWithdrawDelegatorRewardResponse*>(
               &_MsgWithdrawDelegatorRewardResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(MsgWithdrawDelegatorRewardResponse& a, MsgWithdrawDelegatorRewardResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgWithdrawDelegatorRewardResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgWithdrawDelegatorRewardResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgWithdrawDelegatorRewardResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgWithdrawDelegatorRewardResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgWithdrawDelegatorRewardResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgWithdrawDelegatorRewardResponse& from) {
    MsgWithdrawDelegatorRewardResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgWithdrawDelegatorRewardResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.distribution.v1beta1.MsgWithdrawDelegatorRewardResponse";
  }
  protected:
  explicit MsgWithdrawDelegatorRewardResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAmountFieldNumber = 1,
  };
  // repeated .cosmos.base.v1beta1.Coin amount = 1 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];
  int amount_size() const;
  private:
  int _internal_amount_size() const;

  public:
  void clear_amount() ;
  ::cosmos::base::v1beta1::Coin* mutable_amount(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin >*
      mutable_amount();
  private:
  const ::cosmos::base::v1beta1::Coin& _internal_amount(int index) const;
  ::cosmos::base::v1beta1::Coin* _internal_add_amount();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::Coin>& _internal_amount() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::Coin>* _internal_mutable_amount();
  public:
  const ::cosmos::base::v1beta1::Coin& amount(int index) const;
  ::cosmos::base::v1beta1::Coin* add_amount();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin >&
      amount() const;
  // @@protoc_insertion_point(class_scope:cosmos.distribution.v1beta1.MsgWithdrawDelegatorRewardResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin > amount_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fdistribution_2fv1beta1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgWithdrawValidatorCommission final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission) */ {
 public:
  inline MsgWithdrawValidatorCommission() : MsgWithdrawValidatorCommission(nullptr) {}
  ~MsgWithdrawValidatorCommission() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgWithdrawValidatorCommission(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgWithdrawValidatorCommission(const MsgWithdrawValidatorCommission& from);
  MsgWithdrawValidatorCommission(MsgWithdrawValidatorCommission&& from) noexcept
    : MsgWithdrawValidatorCommission() {
    *this = ::std::move(from);
  }

  inline MsgWithdrawValidatorCommission& operator=(const MsgWithdrawValidatorCommission& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgWithdrawValidatorCommission& operator=(MsgWithdrawValidatorCommission&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgWithdrawValidatorCommission& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgWithdrawValidatorCommission* internal_default_instance() {
    return reinterpret_cast<const MsgWithdrawValidatorCommission*>(
               &_MsgWithdrawValidatorCommission_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(MsgWithdrawValidatorCommission& a, MsgWithdrawValidatorCommission& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgWithdrawValidatorCommission* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgWithdrawValidatorCommission* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgWithdrawValidatorCommission* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgWithdrawValidatorCommission>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgWithdrawValidatorCommission& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgWithdrawValidatorCommission& from) {
    MsgWithdrawValidatorCommission::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgWithdrawValidatorCommission* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission";
  }
  protected:
  explicit MsgWithdrawValidatorCommission(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValidatorAddressFieldNumber = 1,
  };
  // string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_validator_address() ;
  const std::string& validator_address() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_validator_address(Arg_&& arg, Args_... args);
  std::string* mutable_validator_address();
  PROTOBUF_NODISCARD std::string* release_validator_address();
  void set_allocated_validator_address(std::string* ptr);

  private:
  const std::string& _internal_validator_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_validator_address(
      const std::string& value);
  std::string* _internal_mutable_validator_address();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr validator_address_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fdistribution_2fv1beta1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgWithdrawValidatorCommissionResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.distribution.v1beta1.MsgWithdrawValidatorCommissionResponse) */ {
 public:
  inline MsgWithdrawValidatorCommissionResponse() : MsgWithdrawValidatorCommissionResponse(nullptr) {}
  ~MsgWithdrawValidatorCommissionResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgWithdrawValidatorCommissionResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgWithdrawValidatorCommissionResponse(const MsgWithdrawValidatorCommissionResponse& from);
  MsgWithdrawValidatorCommissionResponse(MsgWithdrawValidatorCommissionResponse&& from) noexcept
    : MsgWithdrawValidatorCommissionResponse() {
    *this = ::std::move(from);
  }

  inline MsgWithdrawValidatorCommissionResponse& operator=(const MsgWithdrawValidatorCommissionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgWithdrawValidatorCommissionResponse& operator=(MsgWithdrawValidatorCommissionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgWithdrawValidatorCommissionResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgWithdrawValidatorCommissionResponse* internal_default_instance() {
    return reinterpret_cast<const MsgWithdrawValidatorCommissionResponse*>(
               &_MsgWithdrawValidatorCommissionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(MsgWithdrawValidatorCommissionResponse& a, MsgWithdrawValidatorCommissionResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgWithdrawValidatorCommissionResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgWithdrawValidatorCommissionResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgWithdrawValidatorCommissionResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgWithdrawValidatorCommissionResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgWithdrawValidatorCommissionResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgWithdrawValidatorCommissionResponse& from) {
    MsgWithdrawValidatorCommissionResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgWithdrawValidatorCommissionResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.distribution.v1beta1.MsgWithdrawValidatorCommissionResponse";
  }
  protected:
  explicit MsgWithdrawValidatorCommissionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAmountFieldNumber = 1,
  };
  // repeated .cosmos.base.v1beta1.Coin amount = 1 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];
  int amount_size() const;
  private:
  int _internal_amount_size() const;

  public:
  void clear_amount() ;
  ::cosmos::base::v1beta1::Coin* mutable_amount(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin >*
      mutable_amount();
  private:
  const ::cosmos::base::v1beta1::Coin& _internal_amount(int index) const;
  ::cosmos::base::v1beta1::Coin* _internal_add_amount();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::Coin>& _internal_amount() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::Coin>* _internal_mutable_amount();
  public:
  const ::cosmos::base::v1beta1::Coin& amount(int index) const;
  ::cosmos::base::v1beta1::Coin* add_amount();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin >&
      amount() const;
  // @@protoc_insertion_point(class_scope:cosmos.distribution.v1beta1.MsgWithdrawValidatorCommissionResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin > amount_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fdistribution_2fv1beta1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgFundCommunityPool final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.distribution.v1beta1.MsgFundCommunityPool) */ {
 public:
  inline MsgFundCommunityPool() : MsgFundCommunityPool(nullptr) {}
  ~MsgFundCommunityPool() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgFundCommunityPool(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgFundCommunityPool(const MsgFundCommunityPool& from);
  MsgFundCommunityPool(MsgFundCommunityPool&& from) noexcept
    : MsgFundCommunityPool() {
    *this = ::std::move(from);
  }

  inline MsgFundCommunityPool& operator=(const MsgFundCommunityPool& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgFundCommunityPool& operator=(MsgFundCommunityPool&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgFundCommunityPool& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgFundCommunityPool* internal_default_instance() {
    return reinterpret_cast<const MsgFundCommunityPool*>(
               &_MsgFundCommunityPool_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(MsgFundCommunityPool& a, MsgFundCommunityPool& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgFundCommunityPool* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgFundCommunityPool* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgFundCommunityPool* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgFundCommunityPool>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgFundCommunityPool& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgFundCommunityPool& from) {
    MsgFundCommunityPool::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgFundCommunityPool* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.distribution.v1beta1.MsgFundCommunityPool";
  }
  protected:
  explicit MsgFundCommunityPool(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAmountFieldNumber = 1,
    kDepositorFieldNumber = 2,
  };
  // repeated .cosmos.base.v1beta1.Coin amount = 1 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];
  int amount_size() const;
  private:
  int _internal_amount_size() const;

  public:
  void clear_amount() ;
  ::cosmos::base::v1beta1::Coin* mutable_amount(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin >*
      mutable_amount();
  private:
  const ::cosmos::base::v1beta1::Coin& _internal_amount(int index) const;
  ::cosmos::base::v1beta1::Coin* _internal_add_amount();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::Coin>& _internal_amount() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::Coin>* _internal_mutable_amount();
  public:
  const ::cosmos::base::v1beta1::Coin& amount(int index) const;
  ::cosmos::base::v1beta1::Coin* add_amount();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin >&
      amount() const;
  // string depositor = 2 [json_name = "depositor", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_depositor() ;
  const std::string& depositor() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_depositor(Arg_&& arg, Args_... args);
  std::string* mutable_depositor();
  PROTOBUF_NODISCARD std::string* release_depositor();
  void set_allocated_depositor(std::string* ptr);

  private:
  const std::string& _internal_depositor() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_depositor(
      const std::string& value);
  std::string* _internal_mutable_depositor();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.distribution.v1beta1.MsgFundCommunityPool)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin > amount_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr depositor_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fdistribution_2fv1beta1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgFundCommunityPoolResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:cosmos.distribution.v1beta1.MsgFundCommunityPoolResponse) */ {
 public:
  inline MsgFundCommunityPoolResponse() : MsgFundCommunityPoolResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgFundCommunityPoolResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgFundCommunityPoolResponse(const MsgFundCommunityPoolResponse& from);
  MsgFundCommunityPoolResponse(MsgFundCommunityPoolResponse&& from) noexcept
    : MsgFundCommunityPoolResponse() {
    *this = ::std::move(from);
  }

  inline MsgFundCommunityPoolResponse& operator=(const MsgFundCommunityPoolResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgFundCommunityPoolResponse& operator=(MsgFundCommunityPoolResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgFundCommunityPoolResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgFundCommunityPoolResponse* internal_default_instance() {
    return reinterpret_cast<const MsgFundCommunityPoolResponse*>(
               &_MsgFundCommunityPoolResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(MsgFundCommunityPoolResponse& a, MsgFundCommunityPoolResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgFundCommunityPoolResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgFundCommunityPoolResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgFundCommunityPoolResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgFundCommunityPoolResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgFundCommunityPoolResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgFundCommunityPoolResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.distribution.v1beta1.MsgFundCommunityPoolResponse";
  }
  protected:
  explicit MsgFundCommunityPoolResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:cosmos.distribution.v1beta1.MsgFundCommunityPoolResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_cosmos_2fdistribution_2fv1beta1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgUpdateParams final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.distribution.v1beta1.MsgUpdateParams) */ {
 public:
  inline MsgUpdateParams() : MsgUpdateParams(nullptr) {}
  ~MsgUpdateParams() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUpdateParams(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgUpdateParams(const MsgUpdateParams& from);
  MsgUpdateParams(MsgUpdateParams&& from) noexcept
    : MsgUpdateParams() {
    *this = ::std::move(from);
  }

  inline MsgUpdateParams& operator=(const MsgUpdateParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateParams& operator=(MsgUpdateParams&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUpdateParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUpdateParams* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateParams*>(
               &_MsgUpdateParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(MsgUpdateParams& a, MsgUpdateParams& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgUpdateParams* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateParams* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUpdateParams* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgUpdateParams>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgUpdateParams& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgUpdateParams& from) {
    MsgUpdateParams::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgUpdateParams* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.distribution.v1beta1.MsgUpdateParams";
  }
  protected:
  explicit MsgUpdateParams(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAuthorityFieldNumber = 1,
    kParamsFieldNumber = 2,
  };
  // string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_authority() ;
  const std::string& authority() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_authority(Arg_&& arg, Args_... args);
  std::string* mutable_authority();
  PROTOBUF_NODISCARD std::string* release_authority();
  void set_allocated_authority(std::string* ptr);

  private:
  const std::string& _internal_authority() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_authority(
      const std::string& value);
  std::string* _internal_mutable_authority();

  public:
  // .cosmos.distribution.v1beta1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  bool has_params() const;
  void clear_params() ;
  const ::cosmos::distribution::v1beta1::Params& params() const;
  PROTOBUF_NODISCARD ::cosmos::distribution::v1beta1::Params* release_params();
  ::cosmos::distribution::v1beta1::Params* mutable_params();
  void set_allocated_params(::cosmos::distribution::v1beta1::Params* params);
  private:
  const ::cosmos::distribution::v1beta1::Params& _internal_params() const;
  ::cosmos::distribution::v1beta1::Params* _internal_mutable_params();
  public:
  void unsafe_arena_set_allocated_params(
      ::cosmos::distribution::v1beta1::Params* params);
  ::cosmos::distribution::v1beta1::Params* unsafe_arena_release_params();
  // @@protoc_insertion_point(class_scope:cosmos.distribution.v1beta1.MsgUpdateParams)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr authority_;
    ::cosmos::distribution::v1beta1::Params* params_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fdistribution_2fv1beta1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgUpdateParamsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:cosmos.distribution.v1beta1.MsgUpdateParamsResponse) */ {
 public:
  inline MsgUpdateParamsResponse() : MsgUpdateParamsResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUpdateParamsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgUpdateParamsResponse(const MsgUpdateParamsResponse& from);
  MsgUpdateParamsResponse(MsgUpdateParamsResponse&& from) noexcept
    : MsgUpdateParamsResponse() {
    *this = ::std::move(from);
  }

  inline MsgUpdateParamsResponse& operator=(const MsgUpdateParamsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateParamsResponse& operator=(MsgUpdateParamsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUpdateParamsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUpdateParamsResponse* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateParamsResponse*>(
               &_MsgUpdateParamsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(MsgUpdateParamsResponse& a, MsgUpdateParamsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgUpdateParamsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateParamsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUpdateParamsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgUpdateParamsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgUpdateParamsResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgUpdateParamsResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.distribution.v1beta1.MsgUpdateParamsResponse";
  }
  protected:
  explicit MsgUpdateParamsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:cosmos.distribution.v1beta1.MsgUpdateParamsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_cosmos_2fdistribution_2fv1beta1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgCommunityPoolSpend final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.distribution.v1beta1.MsgCommunityPoolSpend) */ {
 public:
  inline MsgCommunityPoolSpend() : MsgCommunityPoolSpend(nullptr) {}
  ~MsgCommunityPoolSpend() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgCommunityPoolSpend(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgCommunityPoolSpend(const MsgCommunityPoolSpend& from);
  MsgCommunityPoolSpend(MsgCommunityPoolSpend&& from) noexcept
    : MsgCommunityPoolSpend() {
    *this = ::std::move(from);
  }

  inline MsgCommunityPoolSpend& operator=(const MsgCommunityPoolSpend& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgCommunityPoolSpend& operator=(MsgCommunityPoolSpend&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgCommunityPoolSpend& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgCommunityPoolSpend* internal_default_instance() {
    return reinterpret_cast<const MsgCommunityPoolSpend*>(
               &_MsgCommunityPoolSpend_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(MsgCommunityPoolSpend& a, MsgCommunityPoolSpend& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgCommunityPoolSpend* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgCommunityPoolSpend* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgCommunityPoolSpend* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgCommunityPoolSpend>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgCommunityPoolSpend& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgCommunityPoolSpend& from) {
    MsgCommunityPoolSpend::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgCommunityPoolSpend* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.distribution.v1beta1.MsgCommunityPoolSpend";
  }
  protected:
  explicit MsgCommunityPoolSpend(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAmountFieldNumber = 3,
    kAuthorityFieldNumber = 1,
    kRecipientFieldNumber = 2,
  };
  // repeated .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];
  int amount_size() const;
  private:
  int _internal_amount_size() const;

  public:
  void clear_amount() ;
  ::cosmos::base::v1beta1::Coin* mutable_amount(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin >*
      mutable_amount();
  private:
  const ::cosmos::base::v1beta1::Coin& _internal_amount(int index) const;
  ::cosmos::base::v1beta1::Coin* _internal_add_amount();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::Coin>& _internal_amount() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::Coin>* _internal_mutable_amount();
  public:
  const ::cosmos::base::v1beta1::Coin& amount(int index) const;
  ::cosmos::base::v1beta1::Coin* add_amount();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin >&
      amount() const;
  // string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_authority() ;
  const std::string& authority() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_authority(Arg_&& arg, Args_... args);
  std::string* mutable_authority();
  PROTOBUF_NODISCARD std::string* release_authority();
  void set_allocated_authority(std::string* ptr);

  private:
  const std::string& _internal_authority() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_authority(
      const std::string& value);
  std::string* _internal_mutable_authority();

  public:
  // string recipient = 2 [json_name = "recipient"];
  void clear_recipient() ;
  const std::string& recipient() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_recipient(Arg_&& arg, Args_... args);
  std::string* mutable_recipient();
  PROTOBUF_NODISCARD std::string* release_recipient();
  void set_allocated_recipient(std::string* ptr);

  private:
  const std::string& _internal_recipient() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_recipient(
      const std::string& value);
  std::string* _internal_mutable_recipient();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.distribution.v1beta1.MsgCommunityPoolSpend)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin > amount_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr authority_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr recipient_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fdistribution_2fv1beta1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgCommunityPoolSpendResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:cosmos.distribution.v1beta1.MsgCommunityPoolSpendResponse) */ {
 public:
  inline MsgCommunityPoolSpendResponse() : MsgCommunityPoolSpendResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgCommunityPoolSpendResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgCommunityPoolSpendResponse(const MsgCommunityPoolSpendResponse& from);
  MsgCommunityPoolSpendResponse(MsgCommunityPoolSpendResponse&& from) noexcept
    : MsgCommunityPoolSpendResponse() {
    *this = ::std::move(from);
  }

  inline MsgCommunityPoolSpendResponse& operator=(const MsgCommunityPoolSpendResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgCommunityPoolSpendResponse& operator=(MsgCommunityPoolSpendResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgCommunityPoolSpendResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgCommunityPoolSpendResponse* internal_default_instance() {
    return reinterpret_cast<const MsgCommunityPoolSpendResponse*>(
               &_MsgCommunityPoolSpendResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(MsgCommunityPoolSpendResponse& a, MsgCommunityPoolSpendResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgCommunityPoolSpendResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgCommunityPoolSpendResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgCommunityPoolSpendResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgCommunityPoolSpendResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgCommunityPoolSpendResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgCommunityPoolSpendResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.distribution.v1beta1.MsgCommunityPoolSpendResponse";
  }
  protected:
  explicit MsgCommunityPoolSpendResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:cosmos.distribution.v1beta1.MsgCommunityPoolSpendResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_cosmos_2fdistribution_2fv1beta1_2ftx_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// MsgSetWithdrawAddress

// string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgSetWithdrawAddress::clear_delegator_address() {
  _impl_.delegator_address_.ClearToEmpty();
}
inline const std::string& MsgSetWithdrawAddress::delegator_address() const {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.MsgSetWithdrawAddress.delegator_address)
  return _internal_delegator_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgSetWithdrawAddress::set_delegator_address(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.delegator_address_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmos.distribution.v1beta1.MsgSetWithdrawAddress.delegator_address)
}
inline std::string* MsgSetWithdrawAddress::mutable_delegator_address() {
  std::string* _s = _internal_mutable_delegator_address();
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.MsgSetWithdrawAddress.delegator_address)
  return _s;
}
inline const std::string& MsgSetWithdrawAddress::_internal_delegator_address() const {
  return _impl_.delegator_address_.Get();
}
inline void MsgSetWithdrawAddress::_internal_set_delegator_address(const std::string& value) {
  ;


  _impl_.delegator_address_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgSetWithdrawAddress::_internal_mutable_delegator_address() {
  ;
  return _impl_.delegator_address_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgSetWithdrawAddress::release_delegator_address() {
  // @@protoc_insertion_point(field_release:cosmos.distribution.v1beta1.MsgSetWithdrawAddress.delegator_address)
  return _impl_.delegator_address_.Release();
}
inline void MsgSetWithdrawAddress::set_allocated_delegator_address(std::string* value) {
  _impl_.delegator_address_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.delegator_address_.IsDefault()) {
          _impl_.delegator_address_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmos.distribution.v1beta1.MsgSetWithdrawAddress.delegator_address)
}

// string withdraw_address = 2 [json_name = "withdrawAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgSetWithdrawAddress::clear_withdraw_address() {
  _impl_.withdraw_address_.ClearToEmpty();
}
inline const std::string& MsgSetWithdrawAddress::withdraw_address() const {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.MsgSetWithdrawAddress.withdraw_address)
  return _internal_withdraw_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgSetWithdrawAddress::set_withdraw_address(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.withdraw_address_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmos.distribution.v1beta1.MsgSetWithdrawAddress.withdraw_address)
}
inline std::string* MsgSetWithdrawAddress::mutable_withdraw_address() {
  std::string* _s = _internal_mutable_withdraw_address();
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.MsgSetWithdrawAddress.withdraw_address)
  return _s;
}
inline const std::string& MsgSetWithdrawAddress::_internal_withdraw_address() const {
  return _impl_.withdraw_address_.Get();
}
inline void MsgSetWithdrawAddress::_internal_set_withdraw_address(const std::string& value) {
  ;


  _impl_.withdraw_address_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgSetWithdrawAddress::_internal_mutable_withdraw_address() {
  ;
  return _impl_.withdraw_address_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgSetWithdrawAddress::release_withdraw_address() {
  // @@protoc_insertion_point(field_release:cosmos.distribution.v1beta1.MsgSetWithdrawAddress.withdraw_address)
  return _impl_.withdraw_address_.Release();
}
inline void MsgSetWithdrawAddress::set_allocated_withdraw_address(std::string* value) {
  _impl_.withdraw_address_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.withdraw_address_.IsDefault()) {
          _impl_.withdraw_address_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmos.distribution.v1beta1.MsgSetWithdrawAddress.withdraw_address)
}

// -------------------------------------------------------------------

// MsgSetWithdrawAddressResponse

// -------------------------------------------------------------------

// MsgWithdrawDelegatorReward

// string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgWithdrawDelegatorReward::clear_delegator_address() {
  _impl_.delegator_address_.ClearToEmpty();
}
inline const std::string& MsgWithdrawDelegatorReward::delegator_address() const {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward.delegator_address)
  return _internal_delegator_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgWithdrawDelegatorReward::set_delegator_address(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.delegator_address_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward.delegator_address)
}
inline std::string* MsgWithdrawDelegatorReward::mutable_delegator_address() {
  std::string* _s = _internal_mutable_delegator_address();
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward.delegator_address)
  return _s;
}
inline const std::string& MsgWithdrawDelegatorReward::_internal_delegator_address() const {
  return _impl_.delegator_address_.Get();
}
inline void MsgWithdrawDelegatorReward::_internal_set_delegator_address(const std::string& value) {
  ;


  _impl_.delegator_address_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgWithdrawDelegatorReward::_internal_mutable_delegator_address() {
  ;
  return _impl_.delegator_address_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgWithdrawDelegatorReward::release_delegator_address() {
  // @@protoc_insertion_point(field_release:cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward.delegator_address)
  return _impl_.delegator_address_.Release();
}
inline void MsgWithdrawDelegatorReward::set_allocated_delegator_address(std::string* value) {
  _impl_.delegator_address_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.delegator_address_.IsDefault()) {
          _impl_.delegator_address_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward.delegator_address)
}

// string validator_address = 2 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgWithdrawDelegatorReward::clear_validator_address() {
  _impl_.validator_address_.ClearToEmpty();
}
inline const std::string& MsgWithdrawDelegatorReward::validator_address() const {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward.validator_address)
  return _internal_validator_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgWithdrawDelegatorReward::set_validator_address(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.validator_address_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward.validator_address)
}
inline std::string* MsgWithdrawDelegatorReward::mutable_validator_address() {
  std::string* _s = _internal_mutable_validator_address();
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward.validator_address)
  return _s;
}
inline const std::string& MsgWithdrawDelegatorReward::_internal_validator_address() const {
  return _impl_.validator_address_.Get();
}
inline void MsgWithdrawDelegatorReward::_internal_set_validator_address(const std::string& value) {
  ;


  _impl_.validator_address_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgWithdrawDelegatorReward::_internal_mutable_validator_address() {
  ;
  return _impl_.validator_address_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgWithdrawDelegatorReward::release_validator_address() {
  // @@protoc_insertion_point(field_release:cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward.validator_address)
  return _impl_.validator_address_.Release();
}
inline void MsgWithdrawDelegatorReward::set_allocated_validator_address(std::string* value) {
  _impl_.validator_address_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.validator_address_.IsDefault()) {
          _impl_.validator_address_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward.validator_address)
}

// -------------------------------------------------------------------

// MsgWithdrawDelegatorRewardResponse

// repeated .cosmos.base.v1beta1.Coin amount = 1 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];
inline int MsgWithdrawDelegatorRewardResponse::_internal_amount_size() const {
  return _impl_.amount_.size();
}
inline int MsgWithdrawDelegatorRewardResponse::amount_size() const {
  return _internal_amount_size();
}
inline ::cosmos::base::v1beta1::Coin* MsgWithdrawDelegatorRewardResponse::mutable_amount(int index) {
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.MsgWithdrawDelegatorRewardResponse.amount)
  return _internal_mutable_amount()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin >*
MsgWithdrawDelegatorRewardResponse::mutable_amount() {
  // @@protoc_insertion_point(field_mutable_list:cosmos.distribution.v1beta1.MsgWithdrawDelegatorRewardResponse.amount)
  return _internal_mutable_amount();
}
inline const ::cosmos::base::v1beta1::Coin& MsgWithdrawDelegatorRewardResponse::_internal_amount(int index) const {
  return _internal_amount().Get(index);
}
inline const ::cosmos::base::v1beta1::Coin& MsgWithdrawDelegatorRewardResponse::amount(int index) const {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.MsgWithdrawDelegatorRewardResponse.amount)
  return _internal_amount(index);
}
inline ::cosmos::base::v1beta1::Coin* MsgWithdrawDelegatorRewardResponse::_internal_add_amount() {
  return _internal_mutable_amount()->Add();
}
inline ::cosmos::base::v1beta1::Coin* MsgWithdrawDelegatorRewardResponse::add_amount() {
  ::cosmos::base::v1beta1::Coin* _add = _internal_add_amount();
  // @@protoc_insertion_point(field_add:cosmos.distribution.v1beta1.MsgWithdrawDelegatorRewardResponse.amount)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin >&
MsgWithdrawDelegatorRewardResponse::amount() const {
  // @@protoc_insertion_point(field_list:cosmos.distribution.v1beta1.MsgWithdrawDelegatorRewardResponse.amount)
  return _internal_amount();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::Coin>&
MsgWithdrawDelegatorRewardResponse::_internal_amount() const {
  return _impl_.amount_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::Coin>*
MsgWithdrawDelegatorRewardResponse::_internal_mutable_amount() {
  return &_impl_.amount_;
}

// -------------------------------------------------------------------

// MsgWithdrawValidatorCommission

// string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgWithdrawValidatorCommission::clear_validator_address() {
  _impl_.validator_address_.ClearToEmpty();
}
inline const std::string& MsgWithdrawValidatorCommission::validator_address() const {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission.validator_address)
  return _internal_validator_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgWithdrawValidatorCommission::set_validator_address(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.validator_address_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission.validator_address)
}
inline std::string* MsgWithdrawValidatorCommission::mutable_validator_address() {
  std::string* _s = _internal_mutable_validator_address();
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission.validator_address)
  return _s;
}
inline const std::string& MsgWithdrawValidatorCommission::_internal_validator_address() const {
  return _impl_.validator_address_.Get();
}
inline void MsgWithdrawValidatorCommission::_internal_set_validator_address(const std::string& value) {
  ;


  _impl_.validator_address_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgWithdrawValidatorCommission::_internal_mutable_validator_address() {
  ;
  return _impl_.validator_address_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgWithdrawValidatorCommission::release_validator_address() {
  // @@protoc_insertion_point(field_release:cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission.validator_address)
  return _impl_.validator_address_.Release();
}
inline void MsgWithdrawValidatorCommission::set_allocated_validator_address(std::string* value) {
  _impl_.validator_address_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.validator_address_.IsDefault()) {
          _impl_.validator_address_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission.validator_address)
}

// -------------------------------------------------------------------

// MsgWithdrawValidatorCommissionResponse

// repeated .cosmos.base.v1beta1.Coin amount = 1 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];
inline int MsgWithdrawValidatorCommissionResponse::_internal_amount_size() const {
  return _impl_.amount_.size();
}
inline int MsgWithdrawValidatorCommissionResponse::amount_size() const {
  return _internal_amount_size();
}
inline ::cosmos::base::v1beta1::Coin* MsgWithdrawValidatorCommissionResponse::mutable_amount(int index) {
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.MsgWithdrawValidatorCommissionResponse.amount)
  return _internal_mutable_amount()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin >*
MsgWithdrawValidatorCommissionResponse::mutable_amount() {
  // @@protoc_insertion_point(field_mutable_list:cosmos.distribution.v1beta1.MsgWithdrawValidatorCommissionResponse.amount)
  return _internal_mutable_amount();
}
inline const ::cosmos::base::v1beta1::Coin& MsgWithdrawValidatorCommissionResponse::_internal_amount(int index) const {
  return _internal_amount().Get(index);
}
inline const ::cosmos::base::v1beta1::Coin& MsgWithdrawValidatorCommissionResponse::amount(int index) const {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.MsgWithdrawValidatorCommissionResponse.amount)
  return _internal_amount(index);
}
inline ::cosmos::base::v1beta1::Coin* MsgWithdrawValidatorCommissionResponse::_internal_add_amount() {
  return _internal_mutable_amount()->Add();
}
inline ::cosmos::base::v1beta1::Coin* MsgWithdrawValidatorCommissionResponse::add_amount() {
  ::cosmos::base::v1beta1::Coin* _add = _internal_add_amount();
  // @@protoc_insertion_point(field_add:cosmos.distribution.v1beta1.MsgWithdrawValidatorCommissionResponse.amount)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin >&
MsgWithdrawValidatorCommissionResponse::amount() const {
  // @@protoc_insertion_point(field_list:cosmos.distribution.v1beta1.MsgWithdrawValidatorCommissionResponse.amount)
  return _internal_amount();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::Coin>&
MsgWithdrawValidatorCommissionResponse::_internal_amount() const {
  return _impl_.amount_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::Coin>*
MsgWithdrawValidatorCommissionResponse::_internal_mutable_amount() {
  return &_impl_.amount_;
}

// -------------------------------------------------------------------

// MsgFundCommunityPool

// repeated .cosmos.base.v1beta1.Coin amount = 1 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];
inline int MsgFundCommunityPool::_internal_amount_size() const {
  return _impl_.amount_.size();
}
inline int MsgFundCommunityPool::amount_size() const {
  return _internal_amount_size();
}
inline ::cosmos::base::v1beta1::Coin* MsgFundCommunityPool::mutable_amount(int index) {
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.MsgFundCommunityPool.amount)
  return _internal_mutable_amount()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin >*
MsgFundCommunityPool::mutable_amount() {
  // @@protoc_insertion_point(field_mutable_list:cosmos.distribution.v1beta1.MsgFundCommunityPool.amount)
  return _internal_mutable_amount();
}
inline const ::cosmos::base::v1beta1::Coin& MsgFundCommunityPool::_internal_amount(int index) const {
  return _internal_amount().Get(index);
}
inline const ::cosmos::base::v1beta1::Coin& MsgFundCommunityPool::amount(int index) const {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.MsgFundCommunityPool.amount)
  return _internal_amount(index);
}
inline ::cosmos::base::v1beta1::Coin* MsgFundCommunityPool::_internal_add_amount() {
  return _internal_mutable_amount()->Add();
}
inline ::cosmos::base::v1beta1::Coin* MsgFundCommunityPool::add_amount() {
  ::cosmos::base::v1beta1::Coin* _add = _internal_add_amount();
  // @@protoc_insertion_point(field_add:cosmos.distribution.v1beta1.MsgFundCommunityPool.amount)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin >&
MsgFundCommunityPool::amount() const {
  // @@protoc_insertion_point(field_list:cosmos.distribution.v1beta1.MsgFundCommunityPool.amount)
  return _internal_amount();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::Coin>&
MsgFundCommunityPool::_internal_amount() const {
  return _impl_.amount_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::Coin>*
MsgFundCommunityPool::_internal_mutable_amount() {
  return &_impl_.amount_;
}

// string depositor = 2 [json_name = "depositor", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgFundCommunityPool::clear_depositor() {
  _impl_.depositor_.ClearToEmpty();
}
inline const std::string& MsgFundCommunityPool::depositor() const {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.MsgFundCommunityPool.depositor)
  return _internal_depositor();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgFundCommunityPool::set_depositor(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.depositor_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmos.distribution.v1beta1.MsgFundCommunityPool.depositor)
}
inline std::string* MsgFundCommunityPool::mutable_depositor() {
  std::string* _s = _internal_mutable_depositor();
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.MsgFundCommunityPool.depositor)
  return _s;
}
inline const std::string& MsgFundCommunityPool::_internal_depositor() const {
  return _impl_.depositor_.Get();
}
inline void MsgFundCommunityPool::_internal_set_depositor(const std::string& value) {
  ;


  _impl_.depositor_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgFundCommunityPool::_internal_mutable_depositor() {
  ;
  return _impl_.depositor_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgFundCommunityPool::release_depositor() {
  // @@protoc_insertion_point(field_release:cosmos.distribution.v1beta1.MsgFundCommunityPool.depositor)
  return _impl_.depositor_.Release();
}
inline void MsgFundCommunityPool::set_allocated_depositor(std::string* value) {
  _impl_.depositor_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.depositor_.IsDefault()) {
          _impl_.depositor_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmos.distribution.v1beta1.MsgFundCommunityPool.depositor)
}

// -------------------------------------------------------------------

// MsgFundCommunityPoolResponse

// -------------------------------------------------------------------

// MsgUpdateParams

// string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgUpdateParams::clear_authority() {
  _impl_.authority_.ClearToEmpty();
}
inline const std::string& MsgUpdateParams::authority() const {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.MsgUpdateParams.authority)
  return _internal_authority();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgUpdateParams::set_authority(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.authority_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmos.distribution.v1beta1.MsgUpdateParams.authority)
}
inline std::string* MsgUpdateParams::mutable_authority() {
  std::string* _s = _internal_mutable_authority();
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.MsgUpdateParams.authority)
  return _s;
}
inline const std::string& MsgUpdateParams::_internal_authority() const {
  return _impl_.authority_.Get();
}
inline void MsgUpdateParams::_internal_set_authority(const std::string& value) {
  ;


  _impl_.authority_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgUpdateParams::_internal_mutable_authority() {
  ;
  return _impl_.authority_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgUpdateParams::release_authority() {
  // @@protoc_insertion_point(field_release:cosmos.distribution.v1beta1.MsgUpdateParams.authority)
  return _impl_.authority_.Release();
}
inline void MsgUpdateParams::set_allocated_authority(std::string* value) {
  _impl_.authority_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.authority_.IsDefault()) {
          _impl_.authority_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmos.distribution.v1beta1.MsgUpdateParams.authority)
}

// .cosmos.distribution.v1beta1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline bool MsgUpdateParams::has_params() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.params_ != nullptr);
  return value;
}
inline const ::cosmos::distribution::v1beta1::Params& MsgUpdateParams::_internal_params() const {
  const ::cosmos::distribution::v1beta1::Params* p = _impl_.params_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::distribution::v1beta1::Params&>(
      ::cosmos::distribution::v1beta1::_Params_default_instance_);
}
inline const ::cosmos::distribution::v1beta1::Params& MsgUpdateParams::params() const {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.MsgUpdateParams.params)
  return _internal_params();
}
inline void MsgUpdateParams::unsafe_arena_set_allocated_params(
    ::cosmos::distribution::v1beta1::Params* params) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.params_);
  }
  _impl_.params_ = params;
  if (params) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.distribution.v1beta1.MsgUpdateParams.params)
}
inline ::cosmos::distribution::v1beta1::Params* MsgUpdateParams::release_params() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::distribution::v1beta1::Params* temp = _impl_.params_;
  _impl_.params_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::cosmos::distribution::v1beta1::Params* MsgUpdateParams::unsafe_arena_release_params() {
  // @@protoc_insertion_point(field_release:cosmos.distribution.v1beta1.MsgUpdateParams.params)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::distribution::v1beta1::Params* temp = _impl_.params_;
  _impl_.params_ = nullptr;
  return temp;
}
inline ::cosmos::distribution::v1beta1::Params* MsgUpdateParams::_internal_mutable_params() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.params_ == nullptr) {
    auto* p = CreateMaybeMessage<::cosmos::distribution::v1beta1::Params>(GetArenaForAllocation());
    _impl_.params_ = p;
  }
  return _impl_.params_;
}
inline ::cosmos::distribution::v1beta1::Params* MsgUpdateParams::mutable_params() {
  ::cosmos::distribution::v1beta1::Params* _msg = _internal_mutable_params();
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.MsgUpdateParams.params)
  return _msg;
}
inline void MsgUpdateParams::set_allocated_params(::cosmos::distribution::v1beta1::Params* params) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.params_);
  }
  if (params) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(params));
    if (message_arena != submessage_arena) {
      params = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, params, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.params_ = params;
  // @@protoc_insertion_point(field_set_allocated:cosmos.distribution.v1beta1.MsgUpdateParams.params)
}

// -------------------------------------------------------------------

// MsgUpdateParamsResponse

// -------------------------------------------------------------------

// MsgCommunityPoolSpend

// string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgCommunityPoolSpend::clear_authority() {
  _impl_.authority_.ClearToEmpty();
}
inline const std::string& MsgCommunityPoolSpend::authority() const {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.MsgCommunityPoolSpend.authority)
  return _internal_authority();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgCommunityPoolSpend::set_authority(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.authority_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmos.distribution.v1beta1.MsgCommunityPoolSpend.authority)
}
inline std::string* MsgCommunityPoolSpend::mutable_authority() {
  std::string* _s = _internal_mutable_authority();
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.MsgCommunityPoolSpend.authority)
  return _s;
}
inline const std::string& MsgCommunityPoolSpend::_internal_authority() const {
  return _impl_.authority_.Get();
}
inline void MsgCommunityPoolSpend::_internal_set_authority(const std::string& value) {
  ;


  _impl_.authority_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgCommunityPoolSpend::_internal_mutable_authority() {
  ;
  return _impl_.authority_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgCommunityPoolSpend::release_authority() {
  // @@protoc_insertion_point(field_release:cosmos.distribution.v1beta1.MsgCommunityPoolSpend.authority)
  return _impl_.authority_.Release();
}
inline void MsgCommunityPoolSpend::set_allocated_authority(std::string* value) {
  _impl_.authority_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.authority_.IsDefault()) {
          _impl_.authority_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmos.distribution.v1beta1.MsgCommunityPoolSpend.authority)
}

// string recipient = 2 [json_name = "recipient"];
inline void MsgCommunityPoolSpend::clear_recipient() {
  _impl_.recipient_.ClearToEmpty();
}
inline const std::string& MsgCommunityPoolSpend::recipient() const {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.MsgCommunityPoolSpend.recipient)
  return _internal_recipient();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgCommunityPoolSpend::set_recipient(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.recipient_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmos.distribution.v1beta1.MsgCommunityPoolSpend.recipient)
}
inline std::string* MsgCommunityPoolSpend::mutable_recipient() {
  std::string* _s = _internal_mutable_recipient();
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.MsgCommunityPoolSpend.recipient)
  return _s;
}
inline const std::string& MsgCommunityPoolSpend::_internal_recipient() const {
  return _impl_.recipient_.Get();
}
inline void MsgCommunityPoolSpend::_internal_set_recipient(const std::string& value) {
  ;


  _impl_.recipient_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgCommunityPoolSpend::_internal_mutable_recipient() {
  ;
  return _impl_.recipient_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgCommunityPoolSpend::release_recipient() {
  // @@protoc_insertion_point(field_release:cosmos.distribution.v1beta1.MsgCommunityPoolSpend.recipient)
  return _impl_.recipient_.Release();
}
inline void MsgCommunityPoolSpend::set_allocated_recipient(std::string* value) {
  _impl_.recipient_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.recipient_.IsDefault()) {
          _impl_.recipient_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmos.distribution.v1beta1.MsgCommunityPoolSpend.recipient)
}

// repeated .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];
inline int MsgCommunityPoolSpend::_internal_amount_size() const {
  return _impl_.amount_.size();
}
inline int MsgCommunityPoolSpend::amount_size() const {
  return _internal_amount_size();
}
inline ::cosmos::base::v1beta1::Coin* MsgCommunityPoolSpend::mutable_amount(int index) {
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.MsgCommunityPoolSpend.amount)
  return _internal_mutable_amount()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin >*
MsgCommunityPoolSpend::mutable_amount() {
  // @@protoc_insertion_point(field_mutable_list:cosmos.distribution.v1beta1.MsgCommunityPoolSpend.amount)
  return _internal_mutable_amount();
}
inline const ::cosmos::base::v1beta1::Coin& MsgCommunityPoolSpend::_internal_amount(int index) const {
  return _internal_amount().Get(index);
}
inline const ::cosmos::base::v1beta1::Coin& MsgCommunityPoolSpend::amount(int index) const {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.MsgCommunityPoolSpend.amount)
  return _internal_amount(index);
}
inline ::cosmos::base::v1beta1::Coin* MsgCommunityPoolSpend::_internal_add_amount() {
  return _internal_mutable_amount()->Add();
}
inline ::cosmos::base::v1beta1::Coin* MsgCommunityPoolSpend::add_amount() {
  ::cosmos::base::v1beta1::Coin* _add = _internal_add_amount();
  // @@protoc_insertion_point(field_add:cosmos.distribution.v1beta1.MsgCommunityPoolSpend.amount)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin >&
MsgCommunityPoolSpend::amount() const {
  // @@protoc_insertion_point(field_list:cosmos.distribution.v1beta1.MsgCommunityPoolSpend.amount)
  return _internal_amount();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::Coin>&
MsgCommunityPoolSpend::_internal_amount() const {
  return _impl_.amount_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::Coin>*
MsgCommunityPoolSpend::_internal_mutable_amount() {
  return &_impl_.amount_;
}

// -------------------------------------------------------------------

// MsgCommunityPoolSpendResponse

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace distribution
}  // namespace cosmos


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_cosmos_2fdistribution_2fv1beta1_2ftx_2eproto_2epb_2eh
