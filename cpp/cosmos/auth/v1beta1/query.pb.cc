// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/auth/v1beta1/query.proto

#include "cosmos/auth/v1beta1/query.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace cosmos {
namespace auth {
namespace v1beta1 {
template <typename>
PROTOBUF_CONSTEXPR QueryAccountsRequest::QueryAccountsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.pagination_)*/nullptr} {}
struct QueryAccountsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryAccountsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryAccountsRequestDefaultTypeInternal() {}
  union {
    QueryAccountsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryAccountsRequestDefaultTypeInternal _QueryAccountsRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryAccountsResponse::QueryAccountsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.accounts_)*/{}
  , /*decltype(_impl_.pagination_)*/nullptr} {}
struct QueryAccountsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryAccountsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryAccountsResponseDefaultTypeInternal() {}
  union {
    QueryAccountsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryAccountsResponseDefaultTypeInternal _QueryAccountsResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryAccountRequest::QueryAccountRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryAccountRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryAccountRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryAccountRequestDefaultTypeInternal() {}
  union {
    QueryAccountRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryAccountRequestDefaultTypeInternal _QueryAccountRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryAccountResponse::QueryAccountResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.account_)*/nullptr} {}
struct QueryAccountResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryAccountResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryAccountResponseDefaultTypeInternal() {}
  union {
    QueryAccountResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryAccountResponseDefaultTypeInternal _QueryAccountResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryParamsRequest::QueryParamsRequest(
    ::_pbi::ConstantInitialized) {}
struct QueryParamsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryParamsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryParamsRequestDefaultTypeInternal() {}
  union {
    QueryParamsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryParamsRequestDefaultTypeInternal _QueryParamsRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryParamsResponse::QueryParamsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.params_)*/nullptr} {}
struct QueryParamsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryParamsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryParamsResponseDefaultTypeInternal() {}
  union {
    QueryParamsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryParamsResponseDefaultTypeInternal _QueryParamsResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryModuleAccountsRequest::QueryModuleAccountsRequest(
    ::_pbi::ConstantInitialized) {}
struct QueryModuleAccountsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryModuleAccountsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryModuleAccountsRequestDefaultTypeInternal() {}
  union {
    QueryModuleAccountsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryModuleAccountsRequestDefaultTypeInternal _QueryModuleAccountsRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryModuleAccountsResponse::QueryModuleAccountsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.accounts_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryModuleAccountsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryModuleAccountsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryModuleAccountsResponseDefaultTypeInternal() {}
  union {
    QueryModuleAccountsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryModuleAccountsResponseDefaultTypeInternal _QueryModuleAccountsResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryModuleAccountByNameRequest::QueryModuleAccountByNameRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryModuleAccountByNameRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryModuleAccountByNameRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryModuleAccountByNameRequestDefaultTypeInternal() {}
  union {
    QueryModuleAccountByNameRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryModuleAccountByNameRequestDefaultTypeInternal _QueryModuleAccountByNameRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryModuleAccountByNameResponse::QueryModuleAccountByNameResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.account_)*/nullptr} {}
struct QueryModuleAccountByNameResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryModuleAccountByNameResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryModuleAccountByNameResponseDefaultTypeInternal() {}
  union {
    QueryModuleAccountByNameResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryModuleAccountByNameResponseDefaultTypeInternal _QueryModuleAccountByNameResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR Bech32PrefixRequest::Bech32PrefixRequest(
    ::_pbi::ConstantInitialized) {}
struct Bech32PrefixRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Bech32PrefixRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Bech32PrefixRequestDefaultTypeInternal() {}
  union {
    Bech32PrefixRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Bech32PrefixRequestDefaultTypeInternal _Bech32PrefixRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR Bech32PrefixResponse::Bech32PrefixResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.bech32_prefix_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Bech32PrefixResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Bech32PrefixResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Bech32PrefixResponseDefaultTypeInternal() {}
  union {
    Bech32PrefixResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Bech32PrefixResponseDefaultTypeInternal _Bech32PrefixResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR AddressBytesToStringRequest::AddressBytesToStringRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.address_bytes_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AddressBytesToStringRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddressBytesToStringRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddressBytesToStringRequestDefaultTypeInternal() {}
  union {
    AddressBytesToStringRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddressBytesToStringRequestDefaultTypeInternal _AddressBytesToStringRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR AddressBytesToStringResponse::AddressBytesToStringResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.address_string_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AddressBytesToStringResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddressBytesToStringResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddressBytesToStringResponseDefaultTypeInternal() {}
  union {
    AddressBytesToStringResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddressBytesToStringResponseDefaultTypeInternal _AddressBytesToStringResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR AddressStringToBytesRequest::AddressStringToBytesRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.address_string_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AddressStringToBytesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddressStringToBytesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddressStringToBytesRequestDefaultTypeInternal() {}
  union {
    AddressStringToBytesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddressStringToBytesRequestDefaultTypeInternal _AddressStringToBytesRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR AddressStringToBytesResponse::AddressStringToBytesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.address_bytes_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AddressStringToBytesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddressStringToBytesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddressStringToBytesResponseDefaultTypeInternal() {}
  union {
    AddressStringToBytesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddressStringToBytesResponseDefaultTypeInternal _AddressStringToBytesResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryAccountAddressByIDRequest::QueryAccountAddressByIDRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/ ::int64_t{0}

  , /*decltype(_impl_.account_id_)*/ ::uint64_t{0u}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryAccountAddressByIDRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryAccountAddressByIDRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryAccountAddressByIDRequestDefaultTypeInternal() {}
  union {
    QueryAccountAddressByIDRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryAccountAddressByIDRequestDefaultTypeInternal _QueryAccountAddressByIDRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryAccountAddressByIDResponse::QueryAccountAddressByIDResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.account_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryAccountAddressByIDResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryAccountAddressByIDResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryAccountAddressByIDResponseDefaultTypeInternal() {}
  union {
    QueryAccountAddressByIDResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryAccountAddressByIDResponseDefaultTypeInternal _QueryAccountAddressByIDResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryAccountInfoRequest::QueryAccountInfoRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryAccountInfoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryAccountInfoRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryAccountInfoRequestDefaultTypeInternal() {}
  union {
    QueryAccountInfoRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryAccountInfoRequestDefaultTypeInternal _QueryAccountInfoRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryAccountInfoResponse::QueryAccountInfoResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.info_)*/nullptr} {}
struct QueryAccountInfoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryAccountInfoResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryAccountInfoResponseDefaultTypeInternal() {}
  union {
    QueryAccountInfoResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryAccountInfoResponseDefaultTypeInternal _QueryAccountInfoResponse_default_instance_;
}  // namespace v1beta1
}  // namespace auth
}  // namespace cosmos
static ::_pb::Metadata file_level_metadata_cosmos_2fauth_2fv1beta1_2fquery_2eproto[20];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_cosmos_2fauth_2fv1beta1_2fquery_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cosmos_2fauth_2fv1beta1_2fquery_2eproto = nullptr;
const ::uint32_t TableStruct_cosmos_2fauth_2fv1beta1_2fquery_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::QueryAccountsRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::QueryAccountsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::QueryAccountsRequest, _impl_.pagination_),
    0,
    PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::QueryAccountsResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::QueryAccountsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::QueryAccountsResponse, _impl_.accounts_),
    PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::QueryAccountsResponse, _impl_.pagination_),
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::QueryAccountRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::QueryAccountRequest, _impl_.address_),
    PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::QueryAccountResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::QueryAccountResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::QueryAccountResponse, _impl_.account_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::QueryParamsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::QueryParamsResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::QueryParamsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::QueryParamsResponse, _impl_.params_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::QueryModuleAccountsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::QueryModuleAccountsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::QueryModuleAccountsResponse, _impl_.accounts_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::QueryModuleAccountByNameRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::QueryModuleAccountByNameRequest, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::QueryModuleAccountByNameResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::QueryModuleAccountByNameResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::QueryModuleAccountByNameResponse, _impl_.account_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::Bech32PrefixRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::Bech32PrefixResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::Bech32PrefixResponse, _impl_.bech32_prefix_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::AddressBytesToStringRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::AddressBytesToStringRequest, _impl_.address_bytes_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::AddressBytesToStringResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::AddressBytesToStringResponse, _impl_.address_string_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::AddressStringToBytesRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::AddressStringToBytesRequest, _impl_.address_string_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::AddressStringToBytesResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::AddressStringToBytesResponse, _impl_.address_bytes_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::QueryAccountAddressByIDRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::QueryAccountAddressByIDRequest, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::QueryAccountAddressByIDRequest, _impl_.account_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::QueryAccountAddressByIDResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::QueryAccountAddressByIDResponse, _impl_.account_address_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::QueryAccountInfoRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::QueryAccountInfoRequest, _impl_.address_),
    PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::QueryAccountInfoResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::QueryAccountInfoResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::QueryAccountInfoResponse, _impl_.info_),
    0,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, 9, -1, sizeof(::cosmos::auth::v1beta1::QueryAccountsRequest)},
        { 10, 20, -1, sizeof(::cosmos::auth::v1beta1::QueryAccountsResponse)},
        { 22, -1, -1, sizeof(::cosmos::auth::v1beta1::QueryAccountRequest)},
        { 31, 40, -1, sizeof(::cosmos::auth::v1beta1::QueryAccountResponse)},
        { 41, -1, -1, sizeof(::cosmos::auth::v1beta1::QueryParamsRequest)},
        { 49, 58, -1, sizeof(::cosmos::auth::v1beta1::QueryParamsResponse)},
        { 59, -1, -1, sizeof(::cosmos::auth::v1beta1::QueryModuleAccountsRequest)},
        { 67, -1, -1, sizeof(::cosmos::auth::v1beta1::QueryModuleAccountsResponse)},
        { 76, -1, -1, sizeof(::cosmos::auth::v1beta1::QueryModuleAccountByNameRequest)},
        { 85, 94, -1, sizeof(::cosmos::auth::v1beta1::QueryModuleAccountByNameResponse)},
        { 95, -1, -1, sizeof(::cosmos::auth::v1beta1::Bech32PrefixRequest)},
        { 103, -1, -1, sizeof(::cosmos::auth::v1beta1::Bech32PrefixResponse)},
        { 112, -1, -1, sizeof(::cosmos::auth::v1beta1::AddressBytesToStringRequest)},
        { 121, -1, -1, sizeof(::cosmos::auth::v1beta1::AddressBytesToStringResponse)},
        { 130, -1, -1, sizeof(::cosmos::auth::v1beta1::AddressStringToBytesRequest)},
        { 139, -1, -1, sizeof(::cosmos::auth::v1beta1::AddressStringToBytesResponse)},
        { 148, -1, -1, sizeof(::cosmos::auth::v1beta1::QueryAccountAddressByIDRequest)},
        { 158, -1, -1, sizeof(::cosmos::auth::v1beta1::QueryAccountAddressByIDResponse)},
        { 167, -1, -1, sizeof(::cosmos::auth::v1beta1::QueryAccountInfoRequest)},
        { 176, 185, -1, sizeof(::cosmos::auth::v1beta1::QueryAccountInfoResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::cosmos::auth::v1beta1::_QueryAccountsRequest_default_instance_._instance,
    &::cosmos::auth::v1beta1::_QueryAccountsResponse_default_instance_._instance,
    &::cosmos::auth::v1beta1::_QueryAccountRequest_default_instance_._instance,
    &::cosmos::auth::v1beta1::_QueryAccountResponse_default_instance_._instance,
    &::cosmos::auth::v1beta1::_QueryParamsRequest_default_instance_._instance,
    &::cosmos::auth::v1beta1::_QueryParamsResponse_default_instance_._instance,
    &::cosmos::auth::v1beta1::_QueryModuleAccountsRequest_default_instance_._instance,
    &::cosmos::auth::v1beta1::_QueryModuleAccountsResponse_default_instance_._instance,
    &::cosmos::auth::v1beta1::_QueryModuleAccountByNameRequest_default_instance_._instance,
    &::cosmos::auth::v1beta1::_QueryModuleAccountByNameResponse_default_instance_._instance,
    &::cosmos::auth::v1beta1::_Bech32PrefixRequest_default_instance_._instance,
    &::cosmos::auth::v1beta1::_Bech32PrefixResponse_default_instance_._instance,
    &::cosmos::auth::v1beta1::_AddressBytesToStringRequest_default_instance_._instance,
    &::cosmos::auth::v1beta1::_AddressBytesToStringResponse_default_instance_._instance,
    &::cosmos::auth::v1beta1::_AddressStringToBytesRequest_default_instance_._instance,
    &::cosmos::auth::v1beta1::_AddressStringToBytesResponse_default_instance_._instance,
    &::cosmos::auth::v1beta1::_QueryAccountAddressByIDRequest_default_instance_._instance,
    &::cosmos::auth::v1beta1::_QueryAccountAddressByIDResponse_default_instance_._instance,
    &::cosmos::auth::v1beta1::_QueryAccountInfoRequest_default_instance_._instance,
    &::cosmos::auth::v1beta1::_QueryAccountInfoResponse_default_instance_._instance,
};
const char descriptor_table_protodef_cosmos_2fauth_2fv1beta1_2fquery_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\037cosmos/auth/v1beta1/query.proto\022\023cosmo"
    "s.auth.v1beta1\032*cosmos/base/query/v1beta"
    "1/pagination.proto\032\024gogoproto/gogo.proto"
    "\032\031google/protobuf/any.proto\032\034google/api/"
    "annotations.proto\032\036cosmos/auth/v1beta1/a"
    "uth.proto\032\031cosmos_proto/cosmos.proto\032\033co"
    "smos/query/v1/query.proto\"^\n\024QueryAccoun"
    "tsRequest\022F\n\npagination\030\001 \001(\0132&.cosmos.b"
    "ase.query.v1beta1.PageRequestR\npaginatio"
    "n\"\264\001\n\025QueryAccountsResponse\022R\n\010accounts\030"
    "\001 \003(\0132\024.google.protobuf.AnyB \312\264-\034cosmos."
    "auth.v1beta1.AccountIR\010accounts\022G\n\npagin"
    "ation\030\002 \001(\0132\'.cosmos.base.query.v1beta1."
    "PageResponseR\npagination\"S\n\023QueryAccount"
    "Request\0222\n\007address\030\001 \001(\tB\030\322\264-\024cosmos.Add"
    "ressStringR\007address:\010\210\240\037\000\350\240\037\000\"h\n\024QueryAc"
    "countResponse\022P\n\007account\030\001 \001(\0132\024.google."
    "protobuf.AnyB \312\264-\034cosmos.auth.v1beta1.Ac"
    "countIR\007account\"\024\n\022QueryParamsRequest\"P\n"
    "\023QueryParamsResponse\0229\n\006params\030\001 \001(\0132\033.c"
    "osmos.auth.v1beta1.ParamsB\004\310\336\037\000R\006params\""
    "\034\n\032QueryModuleAccountsRequest\"w\n\033QueryMo"
    "duleAccountsResponse\022X\n\010accounts\030\001 \003(\0132\024"
    ".google.protobuf.AnyB&\312\264-\"cosmos.auth.v1"
    "beta1.ModuleAccountIR\010accounts\"5\n\037QueryM"
    "oduleAccountByNameRequest\022\022\n\004name\030\001 \001(\tR"
    "\004name\"z\n QueryModuleAccountByNameRespons"
    "e\022V\n\007account\030\001 \001(\0132\024.google.protobuf.Any"
    "B&\312\264-\"cosmos.auth.v1beta1.ModuleAccountI"
    "R\007account\"\025\n\023Bech32PrefixRequest\";\n\024Bech"
    "32PrefixResponse\022#\n\rbech32_prefix\030\001 \001(\tR"
    "\014bech32Prefix\"B\n\033AddressBytesToStringReq"
    "uest\022#\n\raddress_bytes\030\001 \001(\014R\014addressByte"
    "s\"E\n\034AddressBytesToStringResponse\022%\n\016add"
    "ress_string\030\001 \001(\tR\raddressString\"D\n\033Addr"
    "essStringToBytesRequest\022%\n\016address_strin"
    "g\030\001 \001(\tR\raddressString\"C\n\034AddressStringT"
    "oBytesResponse\022#\n\raddress_bytes\030\001 \001(\014R\014a"
    "ddressBytes\"S\n\036QueryAccountAddressByIDRe"
    "quest\022\022\n\002id\030\001 \001(\003B\002\030\001R\002id\022\035\n\naccount_id\030"
    "\002 \001(\004R\taccountId\"d\n\037QueryAccountAddressB"
    "yIDResponse\022A\n\017account_address\030\001 \001(\tB\030\322\264"
    "-\024cosmos.AddressStringR\016accountAddress\"M"
    "\n\027QueryAccountInfoRequest\0222\n\007address\030\001 \001"
    "(\tB\030\322\264-\024cosmos.AddressStringR\007address\"P\n"
    "\030QueryAccountInfoResponse\0224\n\004info\030\001 \001(\0132"
    " .cosmos.auth.v1beta1.BaseAccountR\004info2"
    "\357\014\n\005Query\022\215\001\n\010Accounts\022).cosmos.auth.v1b"
    "eta1.QueryAccountsRequest\032*.cosmos.auth."
    "v1beta1.QueryAccountsResponse\"*\210\347\260*\001\202\323\344\223"
    "\002\037\022\035/cosmos/auth/v1beta1/accounts\022\224\001\n\007Ac"
    "count\022(.cosmos.auth.v1beta1.QueryAccount"
    "Request\032).cosmos.auth.v1beta1.QueryAccou"
    "ntResponse\"4\210\347\260*\001\202\323\344\223\002)\022\'/cosmos/auth/v1"
    "beta1/accounts/{address}\022\265\001\n\022AccountAddr"
    "essByID\0223.cosmos.auth.v1beta1.QueryAccou"
    "ntAddressByIDRequest\0324.cosmos.auth.v1bet"
    "a1.QueryAccountAddressByIDResponse\"4\210\347\260*"
    "\001\202\323\344\223\002)\022\'/cosmos/auth/v1beta1/address_by"
    "_id/{id}\022\205\001\n\006Params\022\'.cosmos.auth.v1beta"
    "1.QueryParamsRequest\032(.cosmos.auth.v1bet"
    "a1.QueryParamsResponse\"(\210\347\260*\001\202\323\344\223\002\035\022\033/co"
    "smos/auth/v1beta1/params\022\246\001\n\016ModuleAccou"
    "nts\022/.cosmos.auth.v1beta1.QueryModuleAcc"
    "ountsRequest\0320.cosmos.auth.v1beta1.Query"
    "ModuleAccountsResponse\"1\210\347\260*\001\202\323\344\223\002&\022$/co"
    "smos/auth/v1beta1/module_accounts\022\274\001\n\023Mo"
    "duleAccountByName\0224.cosmos.auth.v1beta1."
    "QueryModuleAccountByNameRequest\0325.cosmos"
    ".auth.v1beta1.QueryModuleAccountByNameRe"
    "sponse\"8\210\347\260*\001\202\323\344\223\002-\022+/cosmos/auth/v1beta"
    "1/module_accounts/{name}\022\210\001\n\014Bech32Prefi"
    "x\022(.cosmos.auth.v1beta1.Bech32PrefixRequ"
    "est\032).cosmos.auth.v1beta1.Bech32PrefixRe"
    "sponse\"#\202\323\344\223\002\035\022\033/cosmos/auth/v1beta1/bec"
    "h32\022\260\001\n\024AddressBytesToString\0220.cosmos.au"
    "th.v1beta1.AddressBytesToStringRequest\0321"
    ".cosmos.auth.v1beta1.AddressBytesToStrin"
    "gResponse\"3\202\323\344\223\002-\022+/cosmos/auth/v1beta1/"
    "bech32/{address_bytes}\022\261\001\n\024AddressString"
    "ToBytes\0220.cosmos.auth.v1beta1.AddressStr"
    "ingToBytesRequest\0321.cosmos.auth.v1beta1."
    "AddressStringToBytesResponse\"4\202\323\344\223\002.\022,/c"
    "osmos/auth/v1beta1/bech32/{address_strin"
    "g}\022\244\001\n\013AccountInfo\022,.cosmos.auth.v1beta1"
    ".QueryAccountInfoRequest\032-.cosmos.auth.v"
    "1beta1.QueryAccountInfoResponse\"8\210\347\260*\001\202\323"
    "\344\223\002-\022+/cosmos/auth/v1beta1/account_info/"
    "{address}B\276\001\n\027com.cosmos.auth.v1beta1B\nQ"
    "ueryProtoP\001Z)github.com/cosmos/cosmos-sd"
    "k/x/auth/types\242\002\003CAX\252\002\023Cosmos.Auth.V1bet"
    "a1\312\002\023Cosmos\\Auth\\V1beta1\342\002\037Cosmos\\Auth\\V"
    "1beta1\\GPBMetadata\352\002\025Cosmos::Auth::V1bet"
    "a1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_cosmos_2fauth_2fv1beta1_2fquery_2eproto_deps[7] =
    {
        &::descriptor_table_cosmos_2fauth_2fv1beta1_2fauth_2eproto,
        &::descriptor_table_cosmos_2fbase_2fquery_2fv1beta1_2fpagination_2eproto,
        &::descriptor_table_cosmos_2fquery_2fv1_2fquery_2eproto,
        &::descriptor_table_cosmos_5fproto_2fcosmos_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_google_2fapi_2fannotations_2eproto,
        &::descriptor_table_google_2fprotobuf_2fany_2eproto,
};
static ::absl::once_flag descriptor_table_cosmos_2fauth_2fv1beta1_2fquery_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_cosmos_2fauth_2fv1beta1_2fquery_2eproto = {
    false,
    false,
    3730,
    descriptor_table_protodef_cosmos_2fauth_2fv1beta1_2fquery_2eproto,
    "cosmos/auth/v1beta1/query.proto",
    &descriptor_table_cosmos_2fauth_2fv1beta1_2fquery_2eproto_once,
    descriptor_table_cosmos_2fauth_2fv1beta1_2fquery_2eproto_deps,
    7,
    20,
    schemas,
    file_default_instances,
    TableStruct_cosmos_2fauth_2fv1beta1_2fquery_2eproto::offsets,
    file_level_metadata_cosmos_2fauth_2fv1beta1_2fquery_2eproto,
    file_level_enum_descriptors_cosmos_2fauth_2fv1beta1_2fquery_2eproto,
    file_level_service_descriptors_cosmos_2fauth_2fv1beta1_2fquery_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_cosmos_2fauth_2fv1beta1_2fquery_2eproto_getter() {
  return &descriptor_table_cosmos_2fauth_2fv1beta1_2fquery_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_cosmos_2fauth_2fv1beta1_2fquery_2eproto(&descriptor_table_cosmos_2fauth_2fv1beta1_2fquery_2eproto);
namespace cosmos {
namespace auth {
namespace v1beta1 {
// ===================================================================

class QueryAccountsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryAccountsRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryAccountsRequest, _impl_._has_bits_);
  static const ::cosmos::base::query::v1beta1::PageRequest& pagination(const QueryAccountsRequest* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::query::v1beta1::PageRequest&
QueryAccountsRequest::_Internal::pagination(const QueryAccountsRequest* msg) {
  return *msg->_impl_.pagination_;
}
void QueryAccountsRequest::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryAccountsRequest::QueryAccountsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.auth.v1beta1.QueryAccountsRequest)
}
QueryAccountsRequest::QueryAccountsRequest(const QueryAccountsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryAccountsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.pagination_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::cosmos::base::query::v1beta1::PageRequest(*from._impl_.pagination_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.auth.v1beta1.QueryAccountsRequest)
}

inline void QueryAccountsRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.pagination_){nullptr}
  };
}

QueryAccountsRequest::~QueryAccountsRequest() {
  // @@protoc_insertion_point(destructor:cosmos.auth.v1beta1.QueryAccountsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryAccountsRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.pagination_;
}

void QueryAccountsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryAccountsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.auth.v1beta1.QueryAccountsRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryAccountsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cosmos.base.query.v1beta1.PageRequest pagination = 1 [json_name = "pagination"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagination(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryAccountsRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.auth.v1beta1.QueryAccountsRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.query.v1beta1.PageRequest pagination = 1 [json_name = "pagination"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.auth.v1beta1.QueryAccountsRequest)
  return target;
}

::size_t QueryAccountsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.auth.v1beta1.QueryAccountsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cosmos.base.query.v1beta1.PageRequest pagination = 1 [json_name = "pagination"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryAccountsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryAccountsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryAccountsRequest::GetClassData() const { return &_class_data_; }


void QueryAccountsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryAccountsRequest*>(&to_msg);
  auto& from = static_cast<const QueryAccountsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.auth.v1beta1.QueryAccountsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::cosmos::base::query::v1beta1::PageRequest::MergeFrom(
        from._internal_pagination());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryAccountsRequest::CopyFrom(const QueryAccountsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.auth.v1beta1.QueryAccountsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryAccountsRequest::IsInitialized() const {
  return true;
}

void QueryAccountsRequest::InternalSwap(QueryAccountsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryAccountsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fauth_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fauth_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fauth_2fv1beta1_2fquery_2eproto[0]);
}
// ===================================================================

class QueryAccountsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryAccountsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryAccountsResponse, _impl_._has_bits_);
  static const ::cosmos::base::query::v1beta1::PageResponse& pagination(const QueryAccountsResponse* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::query::v1beta1::PageResponse&
QueryAccountsResponse::_Internal::pagination(const QueryAccountsResponse* msg) {
  return *msg->_impl_.pagination_;
}
void QueryAccountsResponse::clear_accounts() {
  _internal_mutable_accounts()->Clear();
}
void QueryAccountsResponse::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryAccountsResponse::QueryAccountsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.auth.v1beta1.QueryAccountsResponse)
}
QueryAccountsResponse::QueryAccountsResponse(const QueryAccountsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryAccountsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.accounts_){from._impl_.accounts_}
    , decltype(_impl_.pagination_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::cosmos::base::query::v1beta1::PageResponse(*from._impl_.pagination_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.auth.v1beta1.QueryAccountsResponse)
}

inline void QueryAccountsResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.accounts_){arena}
    , decltype(_impl_.pagination_){nullptr}
  };
}

QueryAccountsResponse::~QueryAccountsResponse() {
  // @@protoc_insertion_point(destructor:cosmos.auth.v1beta1.QueryAccountsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryAccountsResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_accounts()->~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.pagination_;
}

void QueryAccountsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryAccountsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.auth.v1beta1.QueryAccountsResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_accounts()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryAccountsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .google.protobuf.Any accounts = 1 [json_name = "accounts", (.cosmos_proto.accepts_interface) = "cosmos.auth.v1beta1.AccountI"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_accounts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagination(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryAccountsResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.auth.v1beta1.QueryAccountsResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.protobuf.Any accounts = 1 [json_name = "accounts", (.cosmos_proto.accepts_interface) = "cosmos.auth.v1beta1.AccountI"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_accounts_size()); i < n; i++) {
    const auto& repfield = this->_internal_accounts(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.auth.v1beta1.QueryAccountsResponse)
  return target;
}

::size_t QueryAccountsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.auth.v1beta1.QueryAccountsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.protobuf.Any accounts = 1 [json_name = "accounts", (.cosmos_proto.accepts_interface) = "cosmos.auth.v1beta1.AccountI"];
  total_size += 1UL * this->_internal_accounts_size();
  for (const auto& msg : this->_internal_accounts()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryAccountsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryAccountsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryAccountsResponse::GetClassData() const { return &_class_data_; }


void QueryAccountsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryAccountsResponse*>(&to_msg);
  auto& from = static_cast<const QueryAccountsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.auth.v1beta1.QueryAccountsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_accounts()->MergeFrom(from._internal_accounts());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::cosmos::base::query::v1beta1::PageResponse::MergeFrom(
        from._internal_pagination());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryAccountsResponse::CopyFrom(const QueryAccountsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.auth.v1beta1.QueryAccountsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryAccountsResponse::IsInitialized() const {
  return true;
}

void QueryAccountsResponse::InternalSwap(QueryAccountsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _internal_mutable_accounts()->InternalSwap(other->_internal_mutable_accounts());
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryAccountsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fauth_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fauth_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fauth_2fv1beta1_2fquery_2eproto[1]);
}
// ===================================================================

class QueryAccountRequest::_Internal {
 public:
};

QueryAccountRequest::QueryAccountRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.auth.v1beta1.QueryAccountRequest)
}
QueryAccountRequest::QueryAccountRequest(const QueryAccountRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryAccountRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.address_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_address().empty()) {
    _this->_impl_.address_.Set(from._internal_address(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.auth.v1beta1.QueryAccountRequest)
}

inline void QueryAccountRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.address_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryAccountRequest::~QueryAccountRequest() {
  // @@protoc_insertion_point(destructor:cosmos.auth.v1beta1.QueryAccountRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryAccountRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.address_.Destroy();
}

void QueryAccountRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryAccountRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.auth.v1beta1.QueryAccountRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.address_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryAccountRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.auth.v1beta1.QueryAccountRequest.address"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryAccountRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.auth.v1beta1.QueryAccountRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_address().empty()) {
    const std::string& _s = this->_internal_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.auth.v1beta1.QueryAccountRequest.address");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.auth.v1beta1.QueryAccountRequest)
  return target;
}

::size_t QueryAccountRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.auth.v1beta1.QueryAccountRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryAccountRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryAccountRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryAccountRequest::GetClassData() const { return &_class_data_; }


void QueryAccountRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryAccountRequest*>(&to_msg);
  auto& from = static_cast<const QueryAccountRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.auth.v1beta1.QueryAccountRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_address().empty()) {
    _this->_internal_set_address(from._internal_address());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryAccountRequest::CopyFrom(const QueryAccountRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.auth.v1beta1.QueryAccountRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryAccountRequest::IsInitialized() const {
  return true;
}

void QueryAccountRequest::InternalSwap(QueryAccountRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.address_, lhs_arena,
                                       &other->_impl_.address_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryAccountRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fauth_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fauth_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fauth_2fv1beta1_2fquery_2eproto[2]);
}
// ===================================================================

class QueryAccountResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryAccountResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryAccountResponse, _impl_._has_bits_);
  static const ::PROTOBUF_NAMESPACE_ID::Any& account(const QueryAccountResponse* msg);
  static void set_has_account(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::PROTOBUF_NAMESPACE_ID::Any&
QueryAccountResponse::_Internal::account(const QueryAccountResponse* msg) {
  return *msg->_impl_.account_;
}
void QueryAccountResponse::clear_account() {
  if (_impl_.account_ != nullptr) _impl_.account_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryAccountResponse::QueryAccountResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.auth.v1beta1.QueryAccountResponse)
}
QueryAccountResponse::QueryAccountResponse(const QueryAccountResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryAccountResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.account_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.account_ = new ::PROTOBUF_NAMESPACE_ID::Any(*from._impl_.account_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.auth.v1beta1.QueryAccountResponse)
}

inline void QueryAccountResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.account_){nullptr}
  };
}

QueryAccountResponse::~QueryAccountResponse() {
  // @@protoc_insertion_point(destructor:cosmos.auth.v1beta1.QueryAccountResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryAccountResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.account_;
}

void QueryAccountResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryAccountResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.auth.v1beta1.QueryAccountResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.account_ != nullptr);
    _impl_.account_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryAccountResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.protobuf.Any account = 1 [json_name = "account", (.cosmos_proto.accepts_interface) = "cosmos.auth.v1beta1.AccountI"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_account(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryAccountResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.auth.v1beta1.QueryAccountResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Any account = 1 [json_name = "account", (.cosmos_proto.accepts_interface) = "cosmos.auth.v1beta1.AccountI"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::account(this),
        _Internal::account(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.auth.v1beta1.QueryAccountResponse)
  return target;
}

::size_t QueryAccountResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.auth.v1beta1.QueryAccountResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Any account = 1 [json_name = "account", (.cosmos_proto.accepts_interface) = "cosmos.auth.v1beta1.AccountI"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.account_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryAccountResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryAccountResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryAccountResponse::GetClassData() const { return &_class_data_; }


void QueryAccountResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryAccountResponse*>(&to_msg);
  auto& from = static_cast<const QueryAccountResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.auth.v1beta1.QueryAccountResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_account()->::PROTOBUF_NAMESPACE_ID::Any::MergeFrom(
        from._internal_account());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryAccountResponse::CopyFrom(const QueryAccountResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.auth.v1beta1.QueryAccountResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryAccountResponse::IsInitialized() const {
  return true;
}

void QueryAccountResponse::InternalSwap(QueryAccountResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.account_, other->_impl_.account_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryAccountResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fauth_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fauth_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fauth_2fv1beta1_2fquery_2eproto[3]);
}
// ===================================================================

class QueryParamsRequest::_Internal {
 public:
};

QueryParamsRequest::QueryParamsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cosmos.auth.v1beta1.QueryParamsRequest)
}
QueryParamsRequest::QueryParamsRequest(const QueryParamsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  QueryParamsRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.auth.v1beta1.QueryParamsRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryParamsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryParamsRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata QueryParamsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fauth_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fauth_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fauth_2fv1beta1_2fquery_2eproto[4]);
}
// ===================================================================

class QueryParamsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryParamsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryParamsResponse, _impl_._has_bits_);
  static const ::cosmos::auth::v1beta1::Params& params(const QueryParamsResponse* msg);
  static void set_has_params(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::auth::v1beta1::Params&
QueryParamsResponse::_Internal::params(const QueryParamsResponse* msg) {
  return *msg->_impl_.params_;
}
void QueryParamsResponse::clear_params() {
  if (_impl_.params_ != nullptr) _impl_.params_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryParamsResponse::QueryParamsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.auth.v1beta1.QueryParamsResponse)
}
QueryParamsResponse::QueryParamsResponse(const QueryParamsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryParamsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.params_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.params_ = new ::cosmos::auth::v1beta1::Params(*from._impl_.params_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.auth.v1beta1.QueryParamsResponse)
}

inline void QueryParamsResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.params_){nullptr}
  };
}

QueryParamsResponse::~QueryParamsResponse() {
  // @@protoc_insertion_point(destructor:cosmos.auth.v1beta1.QueryParamsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryParamsResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.params_;
}

void QueryParamsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryParamsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.auth.v1beta1.QueryParamsResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.params_ != nullptr);
    _impl_.params_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryParamsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cosmos.auth.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryParamsResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.auth.v1beta1.QueryParamsResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.auth.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.auth.v1beta1.QueryParamsResponse)
  return target;
}

::size_t QueryParamsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.auth.v1beta1.QueryParamsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cosmos.auth.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryParamsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryParamsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryParamsResponse::GetClassData() const { return &_class_data_; }


void QueryParamsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryParamsResponse*>(&to_msg);
  auto& from = static_cast<const QueryParamsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.auth.v1beta1.QueryParamsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_params()->::cosmos::auth::v1beta1::Params::MergeFrom(
        from._internal_params());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryParamsResponse::CopyFrom(const QueryParamsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.auth.v1beta1.QueryParamsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryParamsResponse::IsInitialized() const {
  return true;
}

void QueryParamsResponse::InternalSwap(QueryParamsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.params_, other->_impl_.params_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryParamsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fauth_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fauth_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fauth_2fv1beta1_2fquery_2eproto[5]);
}
// ===================================================================

class QueryModuleAccountsRequest::_Internal {
 public:
};

QueryModuleAccountsRequest::QueryModuleAccountsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cosmos.auth.v1beta1.QueryModuleAccountsRequest)
}
QueryModuleAccountsRequest::QueryModuleAccountsRequest(const QueryModuleAccountsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  QueryModuleAccountsRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.auth.v1beta1.QueryModuleAccountsRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryModuleAccountsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryModuleAccountsRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata QueryModuleAccountsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fauth_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fauth_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fauth_2fv1beta1_2fquery_2eproto[6]);
}
// ===================================================================

class QueryModuleAccountsResponse::_Internal {
 public:
};

void QueryModuleAccountsResponse::clear_accounts() {
  _internal_mutable_accounts()->Clear();
}
QueryModuleAccountsResponse::QueryModuleAccountsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.auth.v1beta1.QueryModuleAccountsResponse)
}
QueryModuleAccountsResponse::QueryModuleAccountsResponse(const QueryModuleAccountsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryModuleAccountsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.accounts_){from._impl_.accounts_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.auth.v1beta1.QueryModuleAccountsResponse)
}

inline void QueryModuleAccountsResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.accounts_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

QueryModuleAccountsResponse::~QueryModuleAccountsResponse() {
  // @@protoc_insertion_point(destructor:cosmos.auth.v1beta1.QueryModuleAccountsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryModuleAccountsResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_accounts()->~RepeatedPtrField();
}

void QueryModuleAccountsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryModuleAccountsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.auth.v1beta1.QueryModuleAccountsResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_accounts()->Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryModuleAccountsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .google.protobuf.Any accounts = 1 [json_name = "accounts", (.cosmos_proto.accepts_interface) = "cosmos.auth.v1beta1.ModuleAccountI"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_accounts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryModuleAccountsResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.auth.v1beta1.QueryModuleAccountsResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.protobuf.Any accounts = 1 [json_name = "accounts", (.cosmos_proto.accepts_interface) = "cosmos.auth.v1beta1.ModuleAccountI"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_accounts_size()); i < n; i++) {
    const auto& repfield = this->_internal_accounts(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.auth.v1beta1.QueryModuleAccountsResponse)
  return target;
}

::size_t QueryModuleAccountsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.auth.v1beta1.QueryModuleAccountsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.protobuf.Any accounts = 1 [json_name = "accounts", (.cosmos_proto.accepts_interface) = "cosmos.auth.v1beta1.ModuleAccountI"];
  total_size += 1UL * this->_internal_accounts_size();
  for (const auto& msg : this->_internal_accounts()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryModuleAccountsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryModuleAccountsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryModuleAccountsResponse::GetClassData() const { return &_class_data_; }


void QueryModuleAccountsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryModuleAccountsResponse*>(&to_msg);
  auto& from = static_cast<const QueryModuleAccountsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.auth.v1beta1.QueryModuleAccountsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_accounts()->MergeFrom(from._internal_accounts());
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryModuleAccountsResponse::CopyFrom(const QueryModuleAccountsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.auth.v1beta1.QueryModuleAccountsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryModuleAccountsResponse::IsInitialized() const {
  return true;
}

void QueryModuleAccountsResponse::InternalSwap(QueryModuleAccountsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_accounts()->InternalSwap(other->_internal_mutable_accounts());
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryModuleAccountsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fauth_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fauth_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fauth_2fv1beta1_2fquery_2eproto[7]);
}
// ===================================================================

class QueryModuleAccountByNameRequest::_Internal {
 public:
};

QueryModuleAccountByNameRequest::QueryModuleAccountByNameRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.auth.v1beta1.QueryModuleAccountByNameRequest)
}
QueryModuleAccountByNameRequest::QueryModuleAccountByNameRequest(const QueryModuleAccountByNameRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryModuleAccountByNameRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.auth.v1beta1.QueryModuleAccountByNameRequest)
}

inline void QueryModuleAccountByNameRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.name_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryModuleAccountByNameRequest::~QueryModuleAccountByNameRequest() {
  // @@protoc_insertion_point(destructor:cosmos.auth.v1beta1.QueryModuleAccountByNameRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryModuleAccountByNameRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void QueryModuleAccountByNameRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryModuleAccountByNameRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.auth.v1beta1.QueryModuleAccountByNameRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryModuleAccountByNameRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.auth.v1beta1.QueryModuleAccountByNameRequest.name"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryModuleAccountByNameRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.auth.v1beta1.QueryModuleAccountByNameRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.auth.v1beta1.QueryModuleAccountByNameRequest.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.auth.v1beta1.QueryModuleAccountByNameRequest)
  return target;
}

::size_t QueryModuleAccountByNameRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.auth.v1beta1.QueryModuleAccountByNameRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryModuleAccountByNameRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryModuleAccountByNameRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryModuleAccountByNameRequest::GetClassData() const { return &_class_data_; }


void QueryModuleAccountByNameRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryModuleAccountByNameRequest*>(&to_msg);
  auto& from = static_cast<const QueryModuleAccountByNameRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.auth.v1beta1.QueryModuleAccountByNameRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryModuleAccountByNameRequest::CopyFrom(const QueryModuleAccountByNameRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.auth.v1beta1.QueryModuleAccountByNameRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryModuleAccountByNameRequest::IsInitialized() const {
  return true;
}

void QueryModuleAccountByNameRequest::InternalSwap(QueryModuleAccountByNameRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryModuleAccountByNameRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fauth_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fauth_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fauth_2fv1beta1_2fquery_2eproto[8]);
}
// ===================================================================

class QueryModuleAccountByNameResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryModuleAccountByNameResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryModuleAccountByNameResponse, _impl_._has_bits_);
  static const ::PROTOBUF_NAMESPACE_ID::Any& account(const QueryModuleAccountByNameResponse* msg);
  static void set_has_account(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::PROTOBUF_NAMESPACE_ID::Any&
QueryModuleAccountByNameResponse::_Internal::account(const QueryModuleAccountByNameResponse* msg) {
  return *msg->_impl_.account_;
}
void QueryModuleAccountByNameResponse::clear_account() {
  if (_impl_.account_ != nullptr) _impl_.account_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryModuleAccountByNameResponse::QueryModuleAccountByNameResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.auth.v1beta1.QueryModuleAccountByNameResponse)
}
QueryModuleAccountByNameResponse::QueryModuleAccountByNameResponse(const QueryModuleAccountByNameResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryModuleAccountByNameResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.account_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.account_ = new ::PROTOBUF_NAMESPACE_ID::Any(*from._impl_.account_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.auth.v1beta1.QueryModuleAccountByNameResponse)
}

inline void QueryModuleAccountByNameResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.account_){nullptr}
  };
}

QueryModuleAccountByNameResponse::~QueryModuleAccountByNameResponse() {
  // @@protoc_insertion_point(destructor:cosmos.auth.v1beta1.QueryModuleAccountByNameResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryModuleAccountByNameResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.account_;
}

void QueryModuleAccountByNameResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryModuleAccountByNameResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.auth.v1beta1.QueryModuleAccountByNameResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.account_ != nullptr);
    _impl_.account_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryModuleAccountByNameResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.protobuf.Any account = 1 [json_name = "account", (.cosmos_proto.accepts_interface) = "cosmos.auth.v1beta1.ModuleAccountI"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_account(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryModuleAccountByNameResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.auth.v1beta1.QueryModuleAccountByNameResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Any account = 1 [json_name = "account", (.cosmos_proto.accepts_interface) = "cosmos.auth.v1beta1.ModuleAccountI"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::account(this),
        _Internal::account(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.auth.v1beta1.QueryModuleAccountByNameResponse)
  return target;
}

::size_t QueryModuleAccountByNameResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.auth.v1beta1.QueryModuleAccountByNameResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Any account = 1 [json_name = "account", (.cosmos_proto.accepts_interface) = "cosmos.auth.v1beta1.ModuleAccountI"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.account_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryModuleAccountByNameResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryModuleAccountByNameResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryModuleAccountByNameResponse::GetClassData() const { return &_class_data_; }


void QueryModuleAccountByNameResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryModuleAccountByNameResponse*>(&to_msg);
  auto& from = static_cast<const QueryModuleAccountByNameResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.auth.v1beta1.QueryModuleAccountByNameResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_account()->::PROTOBUF_NAMESPACE_ID::Any::MergeFrom(
        from._internal_account());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryModuleAccountByNameResponse::CopyFrom(const QueryModuleAccountByNameResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.auth.v1beta1.QueryModuleAccountByNameResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryModuleAccountByNameResponse::IsInitialized() const {
  return true;
}

void QueryModuleAccountByNameResponse::InternalSwap(QueryModuleAccountByNameResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.account_, other->_impl_.account_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryModuleAccountByNameResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fauth_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fauth_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fauth_2fv1beta1_2fquery_2eproto[9]);
}
// ===================================================================

class Bech32PrefixRequest::_Internal {
 public:
};

Bech32PrefixRequest::Bech32PrefixRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cosmos.auth.v1beta1.Bech32PrefixRequest)
}
Bech32PrefixRequest::Bech32PrefixRequest(const Bech32PrefixRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  Bech32PrefixRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.auth.v1beta1.Bech32PrefixRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Bech32PrefixRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Bech32PrefixRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata Bech32PrefixRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fauth_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fauth_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fauth_2fv1beta1_2fquery_2eproto[10]);
}
// ===================================================================

class Bech32PrefixResponse::_Internal {
 public:
};

Bech32PrefixResponse::Bech32PrefixResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.auth.v1beta1.Bech32PrefixResponse)
}
Bech32PrefixResponse::Bech32PrefixResponse(const Bech32PrefixResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Bech32PrefixResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.bech32_prefix_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.bech32_prefix_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.bech32_prefix_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_bech32_prefix().empty()) {
    _this->_impl_.bech32_prefix_.Set(from._internal_bech32_prefix(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.auth.v1beta1.Bech32PrefixResponse)
}

inline void Bech32PrefixResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.bech32_prefix_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.bech32_prefix_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.bech32_prefix_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Bech32PrefixResponse::~Bech32PrefixResponse() {
  // @@protoc_insertion_point(destructor:cosmos.auth.v1beta1.Bech32PrefixResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Bech32PrefixResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.bech32_prefix_.Destroy();
}

void Bech32PrefixResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Bech32PrefixResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.auth.v1beta1.Bech32PrefixResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bech32_prefix_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Bech32PrefixResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string bech32_prefix = 1 [json_name = "bech32Prefix"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_bech32_prefix();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.auth.v1beta1.Bech32PrefixResponse.bech32_prefix"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* Bech32PrefixResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.auth.v1beta1.Bech32PrefixResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string bech32_prefix = 1 [json_name = "bech32Prefix"];
  if (!this->_internal_bech32_prefix().empty()) {
    const std::string& _s = this->_internal_bech32_prefix();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.auth.v1beta1.Bech32PrefixResponse.bech32_prefix");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.auth.v1beta1.Bech32PrefixResponse)
  return target;
}

::size_t Bech32PrefixResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.auth.v1beta1.Bech32PrefixResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string bech32_prefix = 1 [json_name = "bech32Prefix"];
  if (!this->_internal_bech32_prefix().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_bech32_prefix());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Bech32PrefixResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Bech32PrefixResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Bech32PrefixResponse::GetClassData() const { return &_class_data_; }


void Bech32PrefixResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Bech32PrefixResponse*>(&to_msg);
  auto& from = static_cast<const Bech32PrefixResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.auth.v1beta1.Bech32PrefixResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_bech32_prefix().empty()) {
    _this->_internal_set_bech32_prefix(from._internal_bech32_prefix());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Bech32PrefixResponse::CopyFrom(const Bech32PrefixResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.auth.v1beta1.Bech32PrefixResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Bech32PrefixResponse::IsInitialized() const {
  return true;
}

void Bech32PrefixResponse::InternalSwap(Bech32PrefixResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.bech32_prefix_, lhs_arena,
                                       &other->_impl_.bech32_prefix_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata Bech32PrefixResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fauth_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fauth_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fauth_2fv1beta1_2fquery_2eproto[11]);
}
// ===================================================================

class AddressBytesToStringRequest::_Internal {
 public:
};

AddressBytesToStringRequest::AddressBytesToStringRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.auth.v1beta1.AddressBytesToStringRequest)
}
AddressBytesToStringRequest::AddressBytesToStringRequest(const AddressBytesToStringRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AddressBytesToStringRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.address_bytes_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.address_bytes_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.address_bytes_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_address_bytes().empty()) {
    _this->_impl_.address_bytes_.Set(from._internal_address_bytes(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.auth.v1beta1.AddressBytesToStringRequest)
}

inline void AddressBytesToStringRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.address_bytes_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.address_bytes_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.address_bytes_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AddressBytesToStringRequest::~AddressBytesToStringRequest() {
  // @@protoc_insertion_point(destructor:cosmos.auth.v1beta1.AddressBytesToStringRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AddressBytesToStringRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.address_bytes_.Destroy();
}

void AddressBytesToStringRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AddressBytesToStringRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.auth.v1beta1.AddressBytesToStringRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.address_bytes_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddressBytesToStringRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes address_bytes = 1 [json_name = "addressBytes"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_address_bytes();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* AddressBytesToStringRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.auth.v1beta1.AddressBytesToStringRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes address_bytes = 1 [json_name = "addressBytes"];
  if (!this->_internal_address_bytes().empty()) {
    const std::string& _s = this->_internal_address_bytes();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.auth.v1beta1.AddressBytesToStringRequest)
  return target;
}

::size_t AddressBytesToStringRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.auth.v1beta1.AddressBytesToStringRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes address_bytes = 1 [json_name = "addressBytes"];
  if (!this->_internal_address_bytes().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
                                    this->_internal_address_bytes());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddressBytesToStringRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AddressBytesToStringRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddressBytesToStringRequest::GetClassData() const { return &_class_data_; }


void AddressBytesToStringRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AddressBytesToStringRequest*>(&to_msg);
  auto& from = static_cast<const AddressBytesToStringRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.auth.v1beta1.AddressBytesToStringRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_address_bytes().empty()) {
    _this->_internal_set_address_bytes(from._internal_address_bytes());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AddressBytesToStringRequest::CopyFrom(const AddressBytesToStringRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.auth.v1beta1.AddressBytesToStringRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddressBytesToStringRequest::IsInitialized() const {
  return true;
}

void AddressBytesToStringRequest::InternalSwap(AddressBytesToStringRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.address_bytes_, lhs_arena,
                                       &other->_impl_.address_bytes_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddressBytesToStringRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fauth_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fauth_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fauth_2fv1beta1_2fquery_2eproto[12]);
}
// ===================================================================

class AddressBytesToStringResponse::_Internal {
 public:
};

AddressBytesToStringResponse::AddressBytesToStringResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.auth.v1beta1.AddressBytesToStringResponse)
}
AddressBytesToStringResponse::AddressBytesToStringResponse(const AddressBytesToStringResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AddressBytesToStringResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.address_string_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.address_string_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.address_string_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_address_string().empty()) {
    _this->_impl_.address_string_.Set(from._internal_address_string(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.auth.v1beta1.AddressBytesToStringResponse)
}

inline void AddressBytesToStringResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.address_string_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.address_string_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.address_string_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AddressBytesToStringResponse::~AddressBytesToStringResponse() {
  // @@protoc_insertion_point(destructor:cosmos.auth.v1beta1.AddressBytesToStringResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AddressBytesToStringResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.address_string_.Destroy();
}

void AddressBytesToStringResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AddressBytesToStringResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.auth.v1beta1.AddressBytesToStringResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.address_string_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddressBytesToStringResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string address_string = 1 [json_name = "addressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_address_string();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.auth.v1beta1.AddressBytesToStringResponse.address_string"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* AddressBytesToStringResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.auth.v1beta1.AddressBytesToStringResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string address_string = 1 [json_name = "addressString"];
  if (!this->_internal_address_string().empty()) {
    const std::string& _s = this->_internal_address_string();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.auth.v1beta1.AddressBytesToStringResponse.address_string");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.auth.v1beta1.AddressBytesToStringResponse)
  return target;
}

::size_t AddressBytesToStringResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.auth.v1beta1.AddressBytesToStringResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string address_string = 1 [json_name = "addressString"];
  if (!this->_internal_address_string().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_address_string());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddressBytesToStringResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AddressBytesToStringResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddressBytesToStringResponse::GetClassData() const { return &_class_data_; }


void AddressBytesToStringResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AddressBytesToStringResponse*>(&to_msg);
  auto& from = static_cast<const AddressBytesToStringResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.auth.v1beta1.AddressBytesToStringResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_address_string().empty()) {
    _this->_internal_set_address_string(from._internal_address_string());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AddressBytesToStringResponse::CopyFrom(const AddressBytesToStringResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.auth.v1beta1.AddressBytesToStringResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddressBytesToStringResponse::IsInitialized() const {
  return true;
}

void AddressBytesToStringResponse::InternalSwap(AddressBytesToStringResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.address_string_, lhs_arena,
                                       &other->_impl_.address_string_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddressBytesToStringResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fauth_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fauth_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fauth_2fv1beta1_2fquery_2eproto[13]);
}
// ===================================================================

class AddressStringToBytesRequest::_Internal {
 public:
};

AddressStringToBytesRequest::AddressStringToBytesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.auth.v1beta1.AddressStringToBytesRequest)
}
AddressStringToBytesRequest::AddressStringToBytesRequest(const AddressStringToBytesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AddressStringToBytesRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.address_string_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.address_string_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.address_string_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_address_string().empty()) {
    _this->_impl_.address_string_.Set(from._internal_address_string(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.auth.v1beta1.AddressStringToBytesRequest)
}

inline void AddressStringToBytesRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.address_string_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.address_string_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.address_string_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AddressStringToBytesRequest::~AddressStringToBytesRequest() {
  // @@protoc_insertion_point(destructor:cosmos.auth.v1beta1.AddressStringToBytesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AddressStringToBytesRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.address_string_.Destroy();
}

void AddressStringToBytesRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AddressStringToBytesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.auth.v1beta1.AddressStringToBytesRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.address_string_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddressStringToBytesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string address_string = 1 [json_name = "addressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_address_string();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.auth.v1beta1.AddressStringToBytesRequest.address_string"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* AddressStringToBytesRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.auth.v1beta1.AddressStringToBytesRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string address_string = 1 [json_name = "addressString"];
  if (!this->_internal_address_string().empty()) {
    const std::string& _s = this->_internal_address_string();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.auth.v1beta1.AddressStringToBytesRequest.address_string");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.auth.v1beta1.AddressStringToBytesRequest)
  return target;
}

::size_t AddressStringToBytesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.auth.v1beta1.AddressStringToBytesRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string address_string = 1 [json_name = "addressString"];
  if (!this->_internal_address_string().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_address_string());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddressStringToBytesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AddressStringToBytesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddressStringToBytesRequest::GetClassData() const { return &_class_data_; }


void AddressStringToBytesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AddressStringToBytesRequest*>(&to_msg);
  auto& from = static_cast<const AddressStringToBytesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.auth.v1beta1.AddressStringToBytesRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_address_string().empty()) {
    _this->_internal_set_address_string(from._internal_address_string());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AddressStringToBytesRequest::CopyFrom(const AddressStringToBytesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.auth.v1beta1.AddressStringToBytesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddressStringToBytesRequest::IsInitialized() const {
  return true;
}

void AddressStringToBytesRequest::InternalSwap(AddressStringToBytesRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.address_string_, lhs_arena,
                                       &other->_impl_.address_string_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddressStringToBytesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fauth_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fauth_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fauth_2fv1beta1_2fquery_2eproto[14]);
}
// ===================================================================

class AddressStringToBytesResponse::_Internal {
 public:
};

AddressStringToBytesResponse::AddressStringToBytesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.auth.v1beta1.AddressStringToBytesResponse)
}
AddressStringToBytesResponse::AddressStringToBytesResponse(const AddressStringToBytesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AddressStringToBytesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.address_bytes_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.address_bytes_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.address_bytes_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_address_bytes().empty()) {
    _this->_impl_.address_bytes_.Set(from._internal_address_bytes(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.auth.v1beta1.AddressStringToBytesResponse)
}

inline void AddressStringToBytesResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.address_bytes_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.address_bytes_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.address_bytes_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AddressStringToBytesResponse::~AddressStringToBytesResponse() {
  // @@protoc_insertion_point(destructor:cosmos.auth.v1beta1.AddressStringToBytesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AddressStringToBytesResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.address_bytes_.Destroy();
}

void AddressStringToBytesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AddressStringToBytesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.auth.v1beta1.AddressStringToBytesResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.address_bytes_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddressStringToBytesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes address_bytes = 1 [json_name = "addressBytes"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_address_bytes();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* AddressStringToBytesResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.auth.v1beta1.AddressStringToBytesResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes address_bytes = 1 [json_name = "addressBytes"];
  if (!this->_internal_address_bytes().empty()) {
    const std::string& _s = this->_internal_address_bytes();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.auth.v1beta1.AddressStringToBytesResponse)
  return target;
}

::size_t AddressStringToBytesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.auth.v1beta1.AddressStringToBytesResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes address_bytes = 1 [json_name = "addressBytes"];
  if (!this->_internal_address_bytes().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
                                    this->_internal_address_bytes());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddressStringToBytesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AddressStringToBytesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddressStringToBytesResponse::GetClassData() const { return &_class_data_; }


void AddressStringToBytesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AddressStringToBytesResponse*>(&to_msg);
  auto& from = static_cast<const AddressStringToBytesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.auth.v1beta1.AddressStringToBytesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_address_bytes().empty()) {
    _this->_internal_set_address_bytes(from._internal_address_bytes());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AddressStringToBytesResponse::CopyFrom(const AddressStringToBytesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.auth.v1beta1.AddressStringToBytesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddressStringToBytesResponse::IsInitialized() const {
  return true;
}

void AddressStringToBytesResponse::InternalSwap(AddressStringToBytesResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.address_bytes_, lhs_arena,
                                       &other->_impl_.address_bytes_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddressStringToBytesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fauth_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fauth_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fauth_2fv1beta1_2fquery_2eproto[15]);
}
// ===================================================================

class QueryAccountAddressByIDRequest::_Internal {
 public:
};

QueryAccountAddressByIDRequest::QueryAccountAddressByIDRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.auth.v1beta1.QueryAccountAddressByIDRequest)
}
QueryAccountAddressByIDRequest::QueryAccountAddressByIDRequest(const QueryAccountAddressByIDRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.auth.v1beta1.QueryAccountAddressByIDRequest)
}

inline void QueryAccountAddressByIDRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.id_) { ::int64_t{0} }

    , decltype(_impl_.account_id_) { ::uint64_t{0u} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

QueryAccountAddressByIDRequest::~QueryAccountAddressByIDRequest() {
  // @@protoc_insertion_point(destructor:cosmos.auth.v1beta1.QueryAccountAddressByIDRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryAccountAddressByIDRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}

void QueryAccountAddressByIDRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryAccountAddressByIDRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.auth.v1beta1.QueryAccountAddressByIDRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.account_id_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.account_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryAccountAddressByIDRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 id = 1 [json_name = "id", deprecated = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // uint64 account_id = 2 [json_name = "accountId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          _impl_.account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryAccountAddressByIDRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.auth.v1beta1.QueryAccountAddressByIDRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1 [json_name = "id", deprecated = true];
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        1, this->_internal_id(), target);
  }

  // uint64 account_id = 2 [json_name = "accountId"];
  if (this->_internal_account_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_account_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.auth.v1beta1.QueryAccountAddressByIDRequest)
  return target;
}

::size_t QueryAccountAddressByIDRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.auth.v1beta1.QueryAccountAddressByIDRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 id = 1 [json_name = "id", deprecated = true];
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_id());
  }

  // uint64 account_id = 2 [json_name = "accountId"];
  if (this->_internal_account_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_account_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryAccountAddressByIDRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryAccountAddressByIDRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryAccountAddressByIDRequest::GetClassData() const { return &_class_data_; }


void QueryAccountAddressByIDRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryAccountAddressByIDRequest*>(&to_msg);
  auto& from = static_cast<const QueryAccountAddressByIDRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.auth.v1beta1.QueryAccountAddressByIDRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_account_id() != 0) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryAccountAddressByIDRequest::CopyFrom(const QueryAccountAddressByIDRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.auth.v1beta1.QueryAccountAddressByIDRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryAccountAddressByIDRequest::IsInitialized() const {
  return true;
}

void QueryAccountAddressByIDRequest::InternalSwap(QueryAccountAddressByIDRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(QueryAccountAddressByIDRequest, _impl_.account_id_)
      + sizeof(QueryAccountAddressByIDRequest::_impl_.account_id_)
      - PROTOBUF_FIELD_OFFSET(QueryAccountAddressByIDRequest, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryAccountAddressByIDRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fauth_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fauth_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fauth_2fv1beta1_2fquery_2eproto[16]);
}
// ===================================================================

class QueryAccountAddressByIDResponse::_Internal {
 public:
};

QueryAccountAddressByIDResponse::QueryAccountAddressByIDResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.auth.v1beta1.QueryAccountAddressByIDResponse)
}
QueryAccountAddressByIDResponse::QueryAccountAddressByIDResponse(const QueryAccountAddressByIDResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryAccountAddressByIDResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.account_address_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.account_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.account_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_account_address().empty()) {
    _this->_impl_.account_address_.Set(from._internal_account_address(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.auth.v1beta1.QueryAccountAddressByIDResponse)
}

inline void QueryAccountAddressByIDResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.account_address_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.account_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.account_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryAccountAddressByIDResponse::~QueryAccountAddressByIDResponse() {
  // @@protoc_insertion_point(destructor:cosmos.auth.v1beta1.QueryAccountAddressByIDResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryAccountAddressByIDResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.account_address_.Destroy();
}

void QueryAccountAddressByIDResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryAccountAddressByIDResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.auth.v1beta1.QueryAccountAddressByIDResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_address_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryAccountAddressByIDResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string account_address = 1 [json_name = "accountAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_account_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.auth.v1beta1.QueryAccountAddressByIDResponse.account_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryAccountAddressByIDResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.auth.v1beta1.QueryAccountAddressByIDResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string account_address = 1 [json_name = "accountAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_account_address().empty()) {
    const std::string& _s = this->_internal_account_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.auth.v1beta1.QueryAccountAddressByIDResponse.account_address");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.auth.v1beta1.QueryAccountAddressByIDResponse)
  return target;
}

::size_t QueryAccountAddressByIDResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.auth.v1beta1.QueryAccountAddressByIDResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string account_address = 1 [json_name = "accountAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_account_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_account_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryAccountAddressByIDResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryAccountAddressByIDResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryAccountAddressByIDResponse::GetClassData() const { return &_class_data_; }


void QueryAccountAddressByIDResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryAccountAddressByIDResponse*>(&to_msg);
  auto& from = static_cast<const QueryAccountAddressByIDResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.auth.v1beta1.QueryAccountAddressByIDResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_account_address().empty()) {
    _this->_internal_set_account_address(from._internal_account_address());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryAccountAddressByIDResponse::CopyFrom(const QueryAccountAddressByIDResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.auth.v1beta1.QueryAccountAddressByIDResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryAccountAddressByIDResponse::IsInitialized() const {
  return true;
}

void QueryAccountAddressByIDResponse::InternalSwap(QueryAccountAddressByIDResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_address_, lhs_arena,
                                       &other->_impl_.account_address_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryAccountAddressByIDResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fauth_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fauth_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fauth_2fv1beta1_2fquery_2eproto[17]);
}
// ===================================================================

class QueryAccountInfoRequest::_Internal {
 public:
};

QueryAccountInfoRequest::QueryAccountInfoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.auth.v1beta1.QueryAccountInfoRequest)
}
QueryAccountInfoRequest::QueryAccountInfoRequest(const QueryAccountInfoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryAccountInfoRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.address_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_address().empty()) {
    _this->_impl_.address_.Set(from._internal_address(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.auth.v1beta1.QueryAccountInfoRequest)
}

inline void QueryAccountInfoRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.address_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryAccountInfoRequest::~QueryAccountInfoRequest() {
  // @@protoc_insertion_point(destructor:cosmos.auth.v1beta1.QueryAccountInfoRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryAccountInfoRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.address_.Destroy();
}

void QueryAccountInfoRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryAccountInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.auth.v1beta1.QueryAccountInfoRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.address_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryAccountInfoRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.auth.v1beta1.QueryAccountInfoRequest.address"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryAccountInfoRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.auth.v1beta1.QueryAccountInfoRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_address().empty()) {
    const std::string& _s = this->_internal_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.auth.v1beta1.QueryAccountInfoRequest.address");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.auth.v1beta1.QueryAccountInfoRequest)
  return target;
}

::size_t QueryAccountInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.auth.v1beta1.QueryAccountInfoRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryAccountInfoRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryAccountInfoRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryAccountInfoRequest::GetClassData() const { return &_class_data_; }


void QueryAccountInfoRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryAccountInfoRequest*>(&to_msg);
  auto& from = static_cast<const QueryAccountInfoRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.auth.v1beta1.QueryAccountInfoRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_address().empty()) {
    _this->_internal_set_address(from._internal_address());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryAccountInfoRequest::CopyFrom(const QueryAccountInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.auth.v1beta1.QueryAccountInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryAccountInfoRequest::IsInitialized() const {
  return true;
}

void QueryAccountInfoRequest::InternalSwap(QueryAccountInfoRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.address_, lhs_arena,
                                       &other->_impl_.address_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryAccountInfoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fauth_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fauth_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fauth_2fv1beta1_2fquery_2eproto[18]);
}
// ===================================================================

class QueryAccountInfoResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryAccountInfoResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryAccountInfoResponse, _impl_._has_bits_);
  static const ::cosmos::auth::v1beta1::BaseAccount& info(const QueryAccountInfoResponse* msg);
  static void set_has_info(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::auth::v1beta1::BaseAccount&
QueryAccountInfoResponse::_Internal::info(const QueryAccountInfoResponse* msg) {
  return *msg->_impl_.info_;
}
void QueryAccountInfoResponse::clear_info() {
  if (_impl_.info_ != nullptr) _impl_.info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryAccountInfoResponse::QueryAccountInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.auth.v1beta1.QueryAccountInfoResponse)
}
QueryAccountInfoResponse::QueryAccountInfoResponse(const QueryAccountInfoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryAccountInfoResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.info_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.info_ = new ::cosmos::auth::v1beta1::BaseAccount(*from._impl_.info_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.auth.v1beta1.QueryAccountInfoResponse)
}

inline void QueryAccountInfoResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.info_){nullptr}
  };
}

QueryAccountInfoResponse::~QueryAccountInfoResponse() {
  // @@protoc_insertion_point(destructor:cosmos.auth.v1beta1.QueryAccountInfoResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryAccountInfoResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.info_;
}

void QueryAccountInfoResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryAccountInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.auth.v1beta1.QueryAccountInfoResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.info_ != nullptr);
    _impl_.info_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryAccountInfoResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cosmos.auth.v1beta1.BaseAccount info = 1 [json_name = "info"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryAccountInfoResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.auth.v1beta1.QueryAccountInfoResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.auth.v1beta1.BaseAccount info = 1 [json_name = "info"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::info(this),
        _Internal::info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.auth.v1beta1.QueryAccountInfoResponse)
  return target;
}

::size_t QueryAccountInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.auth.v1beta1.QueryAccountInfoResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cosmos.auth.v1beta1.BaseAccount info = 1 [json_name = "info"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.info_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryAccountInfoResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryAccountInfoResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryAccountInfoResponse::GetClassData() const { return &_class_data_; }


void QueryAccountInfoResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryAccountInfoResponse*>(&to_msg);
  auto& from = static_cast<const QueryAccountInfoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.auth.v1beta1.QueryAccountInfoResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_info()->::cosmos::auth::v1beta1::BaseAccount::MergeFrom(
        from._internal_info());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryAccountInfoResponse::CopyFrom(const QueryAccountInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.auth.v1beta1.QueryAccountInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryAccountInfoResponse::IsInitialized() const {
  return true;
}

void QueryAccountInfoResponse::InternalSwap(QueryAccountInfoResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.info_, other->_impl_.info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryAccountInfoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fauth_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fauth_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fauth_2fv1beta1_2fquery_2eproto[19]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace auth
}  // namespace cosmos
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::cosmos::auth::v1beta1::QueryAccountsRequest*
Arena::CreateMaybeMessage< ::cosmos::auth::v1beta1::QueryAccountsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::auth::v1beta1::QueryAccountsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::auth::v1beta1::QueryAccountsResponse*
Arena::CreateMaybeMessage< ::cosmos::auth::v1beta1::QueryAccountsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::auth::v1beta1::QueryAccountsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::auth::v1beta1::QueryAccountRequest*
Arena::CreateMaybeMessage< ::cosmos::auth::v1beta1::QueryAccountRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::auth::v1beta1::QueryAccountRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::auth::v1beta1::QueryAccountResponse*
Arena::CreateMaybeMessage< ::cosmos::auth::v1beta1::QueryAccountResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::auth::v1beta1::QueryAccountResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::auth::v1beta1::QueryParamsRequest*
Arena::CreateMaybeMessage< ::cosmos::auth::v1beta1::QueryParamsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::auth::v1beta1::QueryParamsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::auth::v1beta1::QueryParamsResponse*
Arena::CreateMaybeMessage< ::cosmos::auth::v1beta1::QueryParamsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::auth::v1beta1::QueryParamsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::auth::v1beta1::QueryModuleAccountsRequest*
Arena::CreateMaybeMessage< ::cosmos::auth::v1beta1::QueryModuleAccountsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::auth::v1beta1::QueryModuleAccountsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::auth::v1beta1::QueryModuleAccountsResponse*
Arena::CreateMaybeMessage< ::cosmos::auth::v1beta1::QueryModuleAccountsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::auth::v1beta1::QueryModuleAccountsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::auth::v1beta1::QueryModuleAccountByNameRequest*
Arena::CreateMaybeMessage< ::cosmos::auth::v1beta1::QueryModuleAccountByNameRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::auth::v1beta1::QueryModuleAccountByNameRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::auth::v1beta1::QueryModuleAccountByNameResponse*
Arena::CreateMaybeMessage< ::cosmos::auth::v1beta1::QueryModuleAccountByNameResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::auth::v1beta1::QueryModuleAccountByNameResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::auth::v1beta1::Bech32PrefixRequest*
Arena::CreateMaybeMessage< ::cosmos::auth::v1beta1::Bech32PrefixRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::auth::v1beta1::Bech32PrefixRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::auth::v1beta1::Bech32PrefixResponse*
Arena::CreateMaybeMessage< ::cosmos::auth::v1beta1::Bech32PrefixResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::auth::v1beta1::Bech32PrefixResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::auth::v1beta1::AddressBytesToStringRequest*
Arena::CreateMaybeMessage< ::cosmos::auth::v1beta1::AddressBytesToStringRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::auth::v1beta1::AddressBytesToStringRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::auth::v1beta1::AddressBytesToStringResponse*
Arena::CreateMaybeMessage< ::cosmos::auth::v1beta1::AddressBytesToStringResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::auth::v1beta1::AddressBytesToStringResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::auth::v1beta1::AddressStringToBytesRequest*
Arena::CreateMaybeMessage< ::cosmos::auth::v1beta1::AddressStringToBytesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::auth::v1beta1::AddressStringToBytesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::auth::v1beta1::AddressStringToBytesResponse*
Arena::CreateMaybeMessage< ::cosmos::auth::v1beta1::AddressStringToBytesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::auth::v1beta1::AddressStringToBytesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::auth::v1beta1::QueryAccountAddressByIDRequest*
Arena::CreateMaybeMessage< ::cosmos::auth::v1beta1::QueryAccountAddressByIDRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::auth::v1beta1::QueryAccountAddressByIDRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::auth::v1beta1::QueryAccountAddressByIDResponse*
Arena::CreateMaybeMessage< ::cosmos::auth::v1beta1::QueryAccountAddressByIDResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::auth::v1beta1::QueryAccountAddressByIDResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::auth::v1beta1::QueryAccountInfoRequest*
Arena::CreateMaybeMessage< ::cosmos::auth::v1beta1::QueryAccountInfoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::auth::v1beta1::QueryAccountInfoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::auth::v1beta1::QueryAccountInfoResponse*
Arena::CreateMaybeMessage< ::cosmos::auth::v1beta1::QueryAccountInfoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::auth::v1beta1::QueryAccountInfoResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
