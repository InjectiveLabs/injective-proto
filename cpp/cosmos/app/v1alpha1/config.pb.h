// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/app/v1alpha1/config.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_cosmos_2fapp_2fv1alpha1_2fconfig_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_cosmos_2fapp_2fv1alpha1_2fconfig_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4023000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4023004 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/any.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cosmos_2fapp_2fv1alpha1_2fconfig_2eproto

PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_cosmos_2fapp_2fv1alpha1_2fconfig_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable
    descriptor_table_cosmos_2fapp_2fv1alpha1_2fconfig_2eproto;
namespace cosmos {
namespace app {
namespace v1alpha1 {
class Config;
struct ConfigDefaultTypeInternal;
extern ConfigDefaultTypeInternal _Config_default_instance_;
class GolangBinding;
struct GolangBindingDefaultTypeInternal;
extern GolangBindingDefaultTypeInternal _GolangBinding_default_instance_;
class ModuleConfig;
struct ModuleConfigDefaultTypeInternal;
extern ModuleConfigDefaultTypeInternal _ModuleConfig_default_instance_;
}  // namespace v1alpha1
}  // namespace app
}  // namespace cosmos
PROTOBUF_NAMESPACE_OPEN
template <>
::cosmos::app::v1alpha1::Config* Arena::CreateMaybeMessage<::cosmos::app::v1alpha1::Config>(Arena*);
template <>
::cosmos::app::v1alpha1::GolangBinding* Arena::CreateMaybeMessage<::cosmos::app::v1alpha1::GolangBinding>(Arena*);
template <>
::cosmos::app::v1alpha1::ModuleConfig* Arena::CreateMaybeMessage<::cosmos::app::v1alpha1::ModuleConfig>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

namespace cosmos {
namespace app {
namespace v1alpha1 {

// ===================================================================


// -------------------------------------------------------------------

class Config final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.app.v1alpha1.Config) */ {
 public:
  inline Config() : Config(nullptr) {}
  ~Config() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Config(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Config(const Config& from);
  Config(Config&& from) noexcept
    : Config() {
    *this = ::std::move(from);
  }

  inline Config& operator=(const Config& from) {
    CopyFrom(from);
    return *this;
  }
  inline Config& operator=(Config&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Config& default_instance() {
    return *internal_default_instance();
  }
  static inline const Config* internal_default_instance() {
    return reinterpret_cast<const Config*>(
               &_Config_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Config& a, Config& b) {
    a.Swap(&b);
  }
  inline void Swap(Config* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Config* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Config* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Config>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Config& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Config& from) {
    Config::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Config* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.app.v1alpha1.Config";
  }
  protected:
  explicit Config(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kModulesFieldNumber = 1,
    kGolangBindingsFieldNumber = 2,
  };
  // repeated .cosmos.app.v1alpha1.ModuleConfig modules = 1 [json_name = "modules"];
  int modules_size() const;
  private:
  int _internal_modules_size() const;

  public:
  void clear_modules() ;
  ::cosmos::app::v1alpha1::ModuleConfig* mutable_modules(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::app::v1alpha1::ModuleConfig >*
      mutable_modules();
  private:
  const ::cosmos::app::v1alpha1::ModuleConfig& _internal_modules(int index) const;
  ::cosmos::app::v1alpha1::ModuleConfig* _internal_add_modules();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::app::v1alpha1::ModuleConfig>& _internal_modules() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::app::v1alpha1::ModuleConfig>* _internal_mutable_modules();
  public:
  const ::cosmos::app::v1alpha1::ModuleConfig& modules(int index) const;
  ::cosmos::app::v1alpha1::ModuleConfig* add_modules();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::app::v1alpha1::ModuleConfig >&
      modules() const;
  // repeated .cosmos.app.v1alpha1.GolangBinding golang_bindings = 2 [json_name = "golangBindings"];
  int golang_bindings_size() const;
  private:
  int _internal_golang_bindings_size() const;

  public:
  void clear_golang_bindings() ;
  ::cosmos::app::v1alpha1::GolangBinding* mutable_golang_bindings(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::app::v1alpha1::GolangBinding >*
      mutable_golang_bindings();
  private:
  const ::cosmos::app::v1alpha1::GolangBinding& _internal_golang_bindings(int index) const;
  ::cosmos::app::v1alpha1::GolangBinding* _internal_add_golang_bindings();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::app::v1alpha1::GolangBinding>& _internal_golang_bindings() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::app::v1alpha1::GolangBinding>* _internal_mutable_golang_bindings();
  public:
  const ::cosmos::app::v1alpha1::GolangBinding& golang_bindings(int index) const;
  ::cosmos::app::v1alpha1::GolangBinding* add_golang_bindings();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::app::v1alpha1::GolangBinding >&
      golang_bindings() const;
  // @@protoc_insertion_point(class_scope:cosmos.app.v1alpha1.Config)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::app::v1alpha1::ModuleConfig > modules_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::app::v1alpha1::GolangBinding > golang_bindings_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fapp_2fv1alpha1_2fconfig_2eproto;
};// -------------------------------------------------------------------

class ModuleConfig final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.app.v1alpha1.ModuleConfig) */ {
 public:
  inline ModuleConfig() : ModuleConfig(nullptr) {}
  ~ModuleConfig() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ModuleConfig(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleConfig(const ModuleConfig& from);
  ModuleConfig(ModuleConfig&& from) noexcept
    : ModuleConfig() {
    *this = ::std::move(from);
  }

  inline ModuleConfig& operator=(const ModuleConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleConfig& operator=(ModuleConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleConfig* internal_default_instance() {
    return reinterpret_cast<const ModuleConfig*>(
               &_ModuleConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ModuleConfig& a, ModuleConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleConfig* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleConfig>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ModuleConfig& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ModuleConfig& from) {
    ModuleConfig::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModuleConfig* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.app.v1alpha1.ModuleConfig";
  }
  protected:
  explicit ModuleConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGolangBindingsFieldNumber = 3,
    kNameFieldNumber = 1,
    kConfigFieldNumber = 2,
  };
  // repeated .cosmos.app.v1alpha1.GolangBinding golang_bindings = 3 [json_name = "golangBindings"];
  int golang_bindings_size() const;
  private:
  int _internal_golang_bindings_size() const;

  public:
  void clear_golang_bindings() ;
  ::cosmos::app::v1alpha1::GolangBinding* mutable_golang_bindings(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::app::v1alpha1::GolangBinding >*
      mutable_golang_bindings();
  private:
  const ::cosmos::app::v1alpha1::GolangBinding& _internal_golang_bindings(int index) const;
  ::cosmos::app::v1alpha1::GolangBinding* _internal_add_golang_bindings();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::app::v1alpha1::GolangBinding>& _internal_golang_bindings() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::app::v1alpha1::GolangBinding>* _internal_mutable_golang_bindings();
  public:
  const ::cosmos::app::v1alpha1::GolangBinding& golang_bindings(int index) const;
  ::cosmos::app::v1alpha1::GolangBinding* add_golang_bindings();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::app::v1alpha1::GolangBinding >&
      golang_bindings() const;
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .google.protobuf.Any config = 2 [json_name = "config"];
  bool has_config() const;
  void clear_config() ;
  const ::PROTOBUF_NAMESPACE_ID::Any& config() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Any* release_config();
  ::PROTOBUF_NAMESPACE_ID::Any* mutable_config();
  void set_allocated_config(::PROTOBUF_NAMESPACE_ID::Any* config);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Any& _internal_config() const;
  ::PROTOBUF_NAMESPACE_ID::Any* _internal_mutable_config();
  public:
  void unsafe_arena_set_allocated_config(
      ::PROTOBUF_NAMESPACE_ID::Any* config);
  ::PROTOBUF_NAMESPACE_ID::Any* unsafe_arena_release_config();
  // @@protoc_insertion_point(class_scope:cosmos.app.v1alpha1.ModuleConfig)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::app::v1alpha1::GolangBinding > golang_bindings_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
    ::PROTOBUF_NAMESPACE_ID::Any* config_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fapp_2fv1alpha1_2fconfig_2eproto;
};// -------------------------------------------------------------------

class GolangBinding final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.app.v1alpha1.GolangBinding) */ {
 public:
  inline GolangBinding() : GolangBinding(nullptr) {}
  ~GolangBinding() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GolangBinding(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GolangBinding(const GolangBinding& from);
  GolangBinding(GolangBinding&& from) noexcept
    : GolangBinding() {
    *this = ::std::move(from);
  }

  inline GolangBinding& operator=(const GolangBinding& from) {
    CopyFrom(from);
    return *this;
  }
  inline GolangBinding& operator=(GolangBinding&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GolangBinding& default_instance() {
    return *internal_default_instance();
  }
  static inline const GolangBinding* internal_default_instance() {
    return reinterpret_cast<const GolangBinding*>(
               &_GolangBinding_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(GolangBinding& a, GolangBinding& b) {
    a.Swap(&b);
  }
  inline void Swap(GolangBinding* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GolangBinding* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GolangBinding* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GolangBinding>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GolangBinding& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GolangBinding& from) {
    GolangBinding::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GolangBinding* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.app.v1alpha1.GolangBinding";
  }
  protected:
  explicit GolangBinding(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInterfaceTypeFieldNumber = 1,
    kImplementationFieldNumber = 2,
  };
  // string interface_type = 1 [json_name = "interfaceType"];
  void clear_interface_type() ;
  const std::string& interface_type() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_interface_type(Arg_&& arg, Args_... args);
  std::string* mutable_interface_type();
  PROTOBUF_NODISCARD std::string* release_interface_type();
  void set_allocated_interface_type(std::string* ptr);

  private:
  const std::string& _internal_interface_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_interface_type(
      const std::string& value);
  std::string* _internal_mutable_interface_type();

  public:
  // string implementation = 2 [json_name = "implementation"];
  void clear_implementation() ;
  const std::string& implementation() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_implementation(Arg_&& arg, Args_... args);
  std::string* mutable_implementation();
  PROTOBUF_NODISCARD std::string* release_implementation();
  void set_allocated_implementation(std::string* ptr);

  private:
  const std::string& _internal_implementation() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_implementation(
      const std::string& value);
  std::string* _internal_mutable_implementation();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.app.v1alpha1.GolangBinding)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr interface_type_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr implementation_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fapp_2fv1alpha1_2fconfig_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Config

// repeated .cosmos.app.v1alpha1.ModuleConfig modules = 1 [json_name = "modules"];
inline int Config::_internal_modules_size() const {
  return _impl_.modules_.size();
}
inline int Config::modules_size() const {
  return _internal_modules_size();
}
inline void Config::clear_modules() {
  _internal_mutable_modules()->Clear();
}
inline ::cosmos::app::v1alpha1::ModuleConfig* Config::mutable_modules(int index) {
  // @@protoc_insertion_point(field_mutable:cosmos.app.v1alpha1.Config.modules)
  return _internal_mutable_modules()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::app::v1alpha1::ModuleConfig >*
Config::mutable_modules() {
  // @@protoc_insertion_point(field_mutable_list:cosmos.app.v1alpha1.Config.modules)
  return _internal_mutable_modules();
}
inline const ::cosmos::app::v1alpha1::ModuleConfig& Config::_internal_modules(int index) const {
  return _internal_modules().Get(index);
}
inline const ::cosmos::app::v1alpha1::ModuleConfig& Config::modules(int index) const {
  // @@protoc_insertion_point(field_get:cosmos.app.v1alpha1.Config.modules)
  return _internal_modules(index);
}
inline ::cosmos::app::v1alpha1::ModuleConfig* Config::_internal_add_modules() {
  return _internal_mutable_modules()->Add();
}
inline ::cosmos::app::v1alpha1::ModuleConfig* Config::add_modules() {
  ::cosmos::app::v1alpha1::ModuleConfig* _add = _internal_add_modules();
  // @@protoc_insertion_point(field_add:cosmos.app.v1alpha1.Config.modules)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::app::v1alpha1::ModuleConfig >&
Config::modules() const {
  // @@protoc_insertion_point(field_list:cosmos.app.v1alpha1.Config.modules)
  return _internal_modules();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::app::v1alpha1::ModuleConfig>&
Config::_internal_modules() const {
  return _impl_.modules_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::app::v1alpha1::ModuleConfig>*
Config::_internal_mutable_modules() {
  return &_impl_.modules_;
}

// repeated .cosmos.app.v1alpha1.GolangBinding golang_bindings = 2 [json_name = "golangBindings"];
inline int Config::_internal_golang_bindings_size() const {
  return _impl_.golang_bindings_.size();
}
inline int Config::golang_bindings_size() const {
  return _internal_golang_bindings_size();
}
inline void Config::clear_golang_bindings() {
  _internal_mutable_golang_bindings()->Clear();
}
inline ::cosmos::app::v1alpha1::GolangBinding* Config::mutable_golang_bindings(int index) {
  // @@protoc_insertion_point(field_mutable:cosmos.app.v1alpha1.Config.golang_bindings)
  return _internal_mutable_golang_bindings()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::app::v1alpha1::GolangBinding >*
Config::mutable_golang_bindings() {
  // @@protoc_insertion_point(field_mutable_list:cosmos.app.v1alpha1.Config.golang_bindings)
  return _internal_mutable_golang_bindings();
}
inline const ::cosmos::app::v1alpha1::GolangBinding& Config::_internal_golang_bindings(int index) const {
  return _internal_golang_bindings().Get(index);
}
inline const ::cosmos::app::v1alpha1::GolangBinding& Config::golang_bindings(int index) const {
  // @@protoc_insertion_point(field_get:cosmos.app.v1alpha1.Config.golang_bindings)
  return _internal_golang_bindings(index);
}
inline ::cosmos::app::v1alpha1::GolangBinding* Config::_internal_add_golang_bindings() {
  return _internal_mutable_golang_bindings()->Add();
}
inline ::cosmos::app::v1alpha1::GolangBinding* Config::add_golang_bindings() {
  ::cosmos::app::v1alpha1::GolangBinding* _add = _internal_add_golang_bindings();
  // @@protoc_insertion_point(field_add:cosmos.app.v1alpha1.Config.golang_bindings)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::app::v1alpha1::GolangBinding >&
Config::golang_bindings() const {
  // @@protoc_insertion_point(field_list:cosmos.app.v1alpha1.Config.golang_bindings)
  return _internal_golang_bindings();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::app::v1alpha1::GolangBinding>&
Config::_internal_golang_bindings() const {
  return _impl_.golang_bindings_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::app::v1alpha1::GolangBinding>*
Config::_internal_mutable_golang_bindings() {
  return &_impl_.golang_bindings_;
}

// -------------------------------------------------------------------

// ModuleConfig

// string name = 1 [json_name = "name"];
inline void ModuleConfig::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& ModuleConfig::name() const {
  // @@protoc_insertion_point(field_get:cosmos.app.v1alpha1.ModuleConfig.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ModuleConfig::set_name(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmos.app.v1alpha1.ModuleConfig.name)
}
inline std::string* ModuleConfig::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:cosmos.app.v1alpha1.ModuleConfig.name)
  return _s;
}
inline const std::string& ModuleConfig::_internal_name() const {
  return _impl_.name_.Get();
}
inline void ModuleConfig::_internal_set_name(const std::string& value) {
  ;


  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* ModuleConfig::_internal_mutable_name() {
  ;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* ModuleConfig::release_name() {
  // @@protoc_insertion_point(field_release:cosmos.app.v1alpha1.ModuleConfig.name)
  return _impl_.name_.Release();
}
inline void ModuleConfig::set_allocated_name(std::string* value) {
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmos.app.v1alpha1.ModuleConfig.name)
}

// .google.protobuf.Any config = 2 [json_name = "config"];
inline bool ModuleConfig::has_config() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.config_ != nullptr);
  return value;
}
inline const ::PROTOBUF_NAMESPACE_ID::Any& ModuleConfig::_internal_config() const {
  const ::PROTOBUF_NAMESPACE_ID::Any* p = _impl_.config_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Any&>(
      ::PROTOBUF_NAMESPACE_ID::_Any_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Any& ModuleConfig::config() const {
  // @@protoc_insertion_point(field_get:cosmos.app.v1alpha1.ModuleConfig.config)
  return _internal_config();
}
inline void ModuleConfig::unsafe_arena_set_allocated_config(
    ::PROTOBUF_NAMESPACE_ID::Any* config) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.config_);
  }
  _impl_.config_ = config;
  if (config) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.app.v1alpha1.ModuleConfig.config)
}
inline ::PROTOBUF_NAMESPACE_ID::Any* ModuleConfig::release_config() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::PROTOBUF_NAMESPACE_ID::Any* temp = _impl_.config_;
  _impl_.config_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Any* ModuleConfig::unsafe_arena_release_config() {
  // @@protoc_insertion_point(field_release:cosmos.app.v1alpha1.ModuleConfig.config)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::PROTOBUF_NAMESPACE_ID::Any* temp = _impl_.config_;
  _impl_.config_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Any* ModuleConfig::_internal_mutable_config() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.config_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Any>(GetArenaForAllocation());
    _impl_.config_ = p;
  }
  return _impl_.config_;
}
inline ::PROTOBUF_NAMESPACE_ID::Any* ModuleConfig::mutable_config() {
  ::PROTOBUF_NAMESPACE_ID::Any* _msg = _internal_mutable_config();
  // @@protoc_insertion_point(field_mutable:cosmos.app.v1alpha1.ModuleConfig.config)
  return _msg;
}
inline void ModuleConfig::set_allocated_config(::PROTOBUF_NAMESPACE_ID::Any* config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.config_);
  }
  if (config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(config));
    if (message_arena != submessage_arena) {
      config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.config_ = config;
  // @@protoc_insertion_point(field_set_allocated:cosmos.app.v1alpha1.ModuleConfig.config)
}

// repeated .cosmos.app.v1alpha1.GolangBinding golang_bindings = 3 [json_name = "golangBindings"];
inline int ModuleConfig::_internal_golang_bindings_size() const {
  return _impl_.golang_bindings_.size();
}
inline int ModuleConfig::golang_bindings_size() const {
  return _internal_golang_bindings_size();
}
inline void ModuleConfig::clear_golang_bindings() {
  _internal_mutable_golang_bindings()->Clear();
}
inline ::cosmos::app::v1alpha1::GolangBinding* ModuleConfig::mutable_golang_bindings(int index) {
  // @@protoc_insertion_point(field_mutable:cosmos.app.v1alpha1.ModuleConfig.golang_bindings)
  return _internal_mutable_golang_bindings()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::app::v1alpha1::GolangBinding >*
ModuleConfig::mutable_golang_bindings() {
  // @@protoc_insertion_point(field_mutable_list:cosmos.app.v1alpha1.ModuleConfig.golang_bindings)
  return _internal_mutable_golang_bindings();
}
inline const ::cosmos::app::v1alpha1::GolangBinding& ModuleConfig::_internal_golang_bindings(int index) const {
  return _internal_golang_bindings().Get(index);
}
inline const ::cosmos::app::v1alpha1::GolangBinding& ModuleConfig::golang_bindings(int index) const {
  // @@protoc_insertion_point(field_get:cosmos.app.v1alpha1.ModuleConfig.golang_bindings)
  return _internal_golang_bindings(index);
}
inline ::cosmos::app::v1alpha1::GolangBinding* ModuleConfig::_internal_add_golang_bindings() {
  return _internal_mutable_golang_bindings()->Add();
}
inline ::cosmos::app::v1alpha1::GolangBinding* ModuleConfig::add_golang_bindings() {
  ::cosmos::app::v1alpha1::GolangBinding* _add = _internal_add_golang_bindings();
  // @@protoc_insertion_point(field_add:cosmos.app.v1alpha1.ModuleConfig.golang_bindings)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::app::v1alpha1::GolangBinding >&
ModuleConfig::golang_bindings() const {
  // @@protoc_insertion_point(field_list:cosmos.app.v1alpha1.ModuleConfig.golang_bindings)
  return _internal_golang_bindings();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::app::v1alpha1::GolangBinding>&
ModuleConfig::_internal_golang_bindings() const {
  return _impl_.golang_bindings_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::app::v1alpha1::GolangBinding>*
ModuleConfig::_internal_mutable_golang_bindings() {
  return &_impl_.golang_bindings_;
}

// -------------------------------------------------------------------

// GolangBinding

// string interface_type = 1 [json_name = "interfaceType"];
inline void GolangBinding::clear_interface_type() {
  _impl_.interface_type_.ClearToEmpty();
}
inline const std::string& GolangBinding::interface_type() const {
  // @@protoc_insertion_point(field_get:cosmos.app.v1alpha1.GolangBinding.interface_type)
  return _internal_interface_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GolangBinding::set_interface_type(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.interface_type_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmos.app.v1alpha1.GolangBinding.interface_type)
}
inline std::string* GolangBinding::mutable_interface_type() {
  std::string* _s = _internal_mutable_interface_type();
  // @@protoc_insertion_point(field_mutable:cosmos.app.v1alpha1.GolangBinding.interface_type)
  return _s;
}
inline const std::string& GolangBinding::_internal_interface_type() const {
  return _impl_.interface_type_.Get();
}
inline void GolangBinding::_internal_set_interface_type(const std::string& value) {
  ;


  _impl_.interface_type_.Set(value, GetArenaForAllocation());
}
inline std::string* GolangBinding::_internal_mutable_interface_type() {
  ;
  return _impl_.interface_type_.Mutable( GetArenaForAllocation());
}
inline std::string* GolangBinding::release_interface_type() {
  // @@protoc_insertion_point(field_release:cosmos.app.v1alpha1.GolangBinding.interface_type)
  return _impl_.interface_type_.Release();
}
inline void GolangBinding::set_allocated_interface_type(std::string* value) {
  _impl_.interface_type_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.interface_type_.IsDefault()) {
          _impl_.interface_type_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmos.app.v1alpha1.GolangBinding.interface_type)
}

// string implementation = 2 [json_name = "implementation"];
inline void GolangBinding::clear_implementation() {
  _impl_.implementation_.ClearToEmpty();
}
inline const std::string& GolangBinding::implementation() const {
  // @@protoc_insertion_point(field_get:cosmos.app.v1alpha1.GolangBinding.implementation)
  return _internal_implementation();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GolangBinding::set_implementation(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.implementation_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmos.app.v1alpha1.GolangBinding.implementation)
}
inline std::string* GolangBinding::mutable_implementation() {
  std::string* _s = _internal_mutable_implementation();
  // @@protoc_insertion_point(field_mutable:cosmos.app.v1alpha1.GolangBinding.implementation)
  return _s;
}
inline const std::string& GolangBinding::_internal_implementation() const {
  return _impl_.implementation_.Get();
}
inline void GolangBinding::_internal_set_implementation(const std::string& value) {
  ;


  _impl_.implementation_.Set(value, GetArenaForAllocation());
}
inline std::string* GolangBinding::_internal_mutable_implementation() {
  ;
  return _impl_.implementation_.Mutable( GetArenaForAllocation());
}
inline std::string* GolangBinding::release_implementation() {
  // @@protoc_insertion_point(field_release:cosmos.app.v1alpha1.GolangBinding.implementation)
  return _impl_.implementation_.Release();
}
inline void GolangBinding::set_allocated_implementation(std::string* value) {
  _impl_.implementation_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.implementation_.IsDefault()) {
          _impl_.implementation_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmos.app.v1alpha1.GolangBinding.implementation)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha1
}  // namespace app
}  // namespace cosmos


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_cosmos_2fapp_2fv1alpha1_2fconfig_2eproto_2epb_2eh
