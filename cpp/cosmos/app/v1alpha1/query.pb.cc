// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/app/v1alpha1/query.proto

#include "cosmos/app/v1alpha1/query.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace cosmos {
namespace app {
namespace v1alpha1 {
template <typename>
PROTOBUF_CONSTEXPR QueryConfigRequest::QueryConfigRequest(
    ::_pbi::ConstantInitialized) {}
struct QueryConfigRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryConfigRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryConfigRequestDefaultTypeInternal() {}
  union {
    QueryConfigRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryConfigRequestDefaultTypeInternal _QueryConfigRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryConfigResponse::QueryConfigResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.config_)*/nullptr} {}
struct QueryConfigResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryConfigResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryConfigResponseDefaultTypeInternal() {}
  union {
    QueryConfigResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryConfigResponseDefaultTypeInternal _QueryConfigResponse_default_instance_;
}  // namespace v1alpha1
}  // namespace app
}  // namespace cosmos
static ::_pb::Metadata file_level_metadata_cosmos_2fapp_2fv1alpha1_2fquery_2eproto[2];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_cosmos_2fapp_2fv1alpha1_2fquery_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cosmos_2fapp_2fv1alpha1_2fquery_2eproto = nullptr;
const ::uint32_t TableStruct_cosmos_2fapp_2fv1alpha1_2fquery_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::app::v1alpha1::QueryConfigRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::app::v1alpha1::QueryConfigResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::app::v1alpha1::QueryConfigResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::app::v1alpha1::QueryConfigResponse, _impl_.config_),
    0,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::cosmos::app::v1alpha1::QueryConfigRequest)},
        { 8, 17, -1, sizeof(::cosmos::app::v1alpha1::QueryConfigResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::cosmos::app::v1alpha1::_QueryConfigRequest_default_instance_._instance,
    &::cosmos::app::v1alpha1::_QueryConfigResponse_default_instance_._instance,
};
const char descriptor_table_protodef_cosmos_2fapp_2fv1alpha1_2fquery_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\037cosmos/app/v1alpha1/query.proto\022\023cosmo"
    "s.app.v1alpha1\032 cosmos/app/v1alpha1/conf"
    "ig.proto\"\024\n\022QueryConfigRequest\"J\n\023QueryC"
    "onfigResponse\0223\n\006config\030\001 \001(\0132\033.cosmos.a"
    "pp.v1alpha1.ConfigR\006config2f\n\005Query\022]\n\006C"
    "onfig\022\'.cosmos.app.v1alpha1.QueryConfigR"
    "equest\032(.cosmos.app.v1alpha1.QueryConfig"
    "Response\"\000B\223\001\n\027com.cosmos.app.v1alpha1B\n"
    "QueryProtoP\001\242\002\003CAX\252\002\023Cosmos.App.V1alpha1"
    "\312\002\023Cosmos\\App\\V1alpha1\342\002\037Cosmos\\App\\V1al"
    "pha1\\GPBMetadata\352\002\025Cosmos::App::V1alpha1"
    "b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_cosmos_2fapp_2fv1alpha1_2fquery_2eproto_deps[1] =
    {
        &::descriptor_table_cosmos_2fapp_2fv1alpha1_2fconfig_2eproto,
};
static ::absl::once_flag descriptor_table_cosmos_2fapp_2fv1alpha1_2fquery_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_cosmos_2fapp_2fv1alpha1_2fquery_2eproto = {
    false,
    false,
    448,
    descriptor_table_protodef_cosmos_2fapp_2fv1alpha1_2fquery_2eproto,
    "cosmos/app/v1alpha1/query.proto",
    &descriptor_table_cosmos_2fapp_2fv1alpha1_2fquery_2eproto_once,
    descriptor_table_cosmos_2fapp_2fv1alpha1_2fquery_2eproto_deps,
    1,
    2,
    schemas,
    file_default_instances,
    TableStruct_cosmos_2fapp_2fv1alpha1_2fquery_2eproto::offsets,
    file_level_metadata_cosmos_2fapp_2fv1alpha1_2fquery_2eproto,
    file_level_enum_descriptors_cosmos_2fapp_2fv1alpha1_2fquery_2eproto,
    file_level_service_descriptors_cosmos_2fapp_2fv1alpha1_2fquery_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_cosmos_2fapp_2fv1alpha1_2fquery_2eproto_getter() {
  return &descriptor_table_cosmos_2fapp_2fv1alpha1_2fquery_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_cosmos_2fapp_2fv1alpha1_2fquery_2eproto(&descriptor_table_cosmos_2fapp_2fv1alpha1_2fquery_2eproto);
namespace cosmos {
namespace app {
namespace v1alpha1 {
// ===================================================================

class QueryConfigRequest::_Internal {
 public:
};

QueryConfigRequest::QueryConfigRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cosmos.app.v1alpha1.QueryConfigRequest)
}
QueryConfigRequest::QueryConfigRequest(const QueryConfigRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  QueryConfigRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.app.v1alpha1.QueryConfigRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryConfigRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryConfigRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata QueryConfigRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fapp_2fv1alpha1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fapp_2fv1alpha1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fapp_2fv1alpha1_2fquery_2eproto[0]);
}
// ===================================================================

class QueryConfigResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryConfigResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryConfigResponse, _impl_._has_bits_);
  static const ::cosmos::app::v1alpha1::Config& config(const QueryConfigResponse* msg);
  static void set_has_config(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::app::v1alpha1::Config&
QueryConfigResponse::_Internal::config(const QueryConfigResponse* msg) {
  return *msg->_impl_.config_;
}
void QueryConfigResponse::clear_config() {
  if (_impl_.config_ != nullptr) _impl_.config_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryConfigResponse::QueryConfigResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.app.v1alpha1.QueryConfigResponse)
}
QueryConfigResponse::QueryConfigResponse(const QueryConfigResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryConfigResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.config_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.config_ = new ::cosmos::app::v1alpha1::Config(*from._impl_.config_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.app.v1alpha1.QueryConfigResponse)
}

inline void QueryConfigResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.config_){nullptr}
  };
}

QueryConfigResponse::~QueryConfigResponse() {
  // @@protoc_insertion_point(destructor:cosmos.app.v1alpha1.QueryConfigResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryConfigResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.config_;
}

void QueryConfigResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryConfigResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.app.v1alpha1.QueryConfigResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.config_ != nullptr);
    _impl_.config_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryConfigResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cosmos.app.v1alpha1.Config config = 1 [json_name = "config"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_config(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryConfigResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.app.v1alpha1.QueryConfigResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.app.v1alpha1.Config config = 1 [json_name = "config"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::config(this),
        _Internal::config(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.app.v1alpha1.QueryConfigResponse)
  return target;
}

::size_t QueryConfigResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.app.v1alpha1.QueryConfigResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cosmos.app.v1alpha1.Config config = 1 [json_name = "config"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.config_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryConfigResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryConfigResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryConfigResponse::GetClassData() const { return &_class_data_; }


void QueryConfigResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryConfigResponse*>(&to_msg);
  auto& from = static_cast<const QueryConfigResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.app.v1alpha1.QueryConfigResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_config()->::cosmos::app::v1alpha1::Config::MergeFrom(
        from._internal_config());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryConfigResponse::CopyFrom(const QueryConfigResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.app.v1alpha1.QueryConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryConfigResponse::IsInitialized() const {
  return true;
}

void QueryConfigResponse::InternalSwap(QueryConfigResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.config_, other->_impl_.config_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryConfigResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fapp_2fv1alpha1_2fquery_2eproto_getter, &descriptor_table_cosmos_2fapp_2fv1alpha1_2fquery_2eproto_once,
      file_level_metadata_cosmos_2fapp_2fv1alpha1_2fquery_2eproto[1]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha1
}  // namespace app
}  // namespace cosmos
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::cosmos::app::v1alpha1::QueryConfigRequest*
Arena::CreateMaybeMessage< ::cosmos::app::v1alpha1::QueryConfigRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::app::v1alpha1::QueryConfigRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::app::v1alpha1::QueryConfigResponse*
Arena::CreateMaybeMessage< ::cosmos::app::v1alpha1::QueryConfigResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::app::v1alpha1::QueryConfigResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
