// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/app/v1alpha1/config.proto

#include "cosmos/app/v1alpha1/config.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace cosmos {
namespace app {
namespace v1alpha1 {
template <typename>
PROTOBUF_CONSTEXPR Config::Config(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.modules_)*/{}
  , /*decltype(_impl_.golang_bindings_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConfigDefaultTypeInternal() {}
  union {
    Config _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConfigDefaultTypeInternal _Config_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR ModuleConfig::ModuleConfig(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.golang_bindings_)*/{}
  , /*decltype(_impl_.name_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.config_)*/nullptr} {}
struct ModuleConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleConfigDefaultTypeInternal() {}
  union {
    ModuleConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleConfigDefaultTypeInternal _ModuleConfig_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR GolangBinding::GolangBinding(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.interface_type_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.implementation_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GolangBindingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GolangBindingDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GolangBindingDefaultTypeInternal() {}
  union {
    GolangBinding _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GolangBindingDefaultTypeInternal _GolangBinding_default_instance_;
}  // namespace v1alpha1
}  // namespace app
}  // namespace cosmos
static ::_pb::Metadata file_level_metadata_cosmos_2fapp_2fv1alpha1_2fconfig_2eproto[3];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_cosmos_2fapp_2fv1alpha1_2fconfig_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cosmos_2fapp_2fv1alpha1_2fconfig_2eproto = nullptr;
const ::uint32_t TableStruct_cosmos_2fapp_2fv1alpha1_2fconfig_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::app::v1alpha1::Config, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::app::v1alpha1::Config, _impl_.modules_),
    PROTOBUF_FIELD_OFFSET(::cosmos::app::v1alpha1::Config, _impl_.golang_bindings_),
    PROTOBUF_FIELD_OFFSET(::cosmos::app::v1alpha1::ModuleConfig, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cosmos::app::v1alpha1::ModuleConfig, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::app::v1alpha1::ModuleConfig, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::cosmos::app::v1alpha1::ModuleConfig, _impl_.config_),
    PROTOBUF_FIELD_OFFSET(::cosmos::app::v1alpha1::ModuleConfig, _impl_.golang_bindings_),
    ~0u,
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::app::v1alpha1::GolangBinding, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::app::v1alpha1::GolangBinding, _impl_.interface_type_),
    PROTOBUF_FIELD_OFFSET(::cosmos::app::v1alpha1::GolangBinding, _impl_.implementation_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::cosmos::app::v1alpha1::Config)},
        { 10, 21, -1, sizeof(::cosmos::app::v1alpha1::ModuleConfig)},
        { 24, -1, -1, sizeof(::cosmos::app::v1alpha1::GolangBinding)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::cosmos::app::v1alpha1::_Config_default_instance_._instance,
    &::cosmos::app::v1alpha1::_ModuleConfig_default_instance_._instance,
    &::cosmos::app::v1alpha1::_GolangBinding_default_instance_._instance,
};
const char descriptor_table_protodef_cosmos_2fapp_2fv1alpha1_2fconfig_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n cosmos/app/v1alpha1/config.proto\022\023cosm"
    "os.app.v1alpha1\032\031google/protobuf/any.pro"
    "to\"\222\001\n\006Config\022;\n\007modules\030\001 \003(\0132!.cosmos."
    "app.v1alpha1.ModuleConfigR\007modules\022K\n\017go"
    "lang_bindings\030\002 \003(\0132\".cosmos.app.v1alpha"
    "1.GolangBindingR\016golangBindings\"\235\001\n\014Modu"
    "leConfig\022\022\n\004name\030\001 \001(\tR\004name\022,\n\006config\030\002"
    " \001(\0132\024.google.protobuf.AnyR\006config\022K\n\017go"
    "lang_bindings\030\003 \003(\0132\".cosmos.app.v1alpha"
    "1.GolangBindingR\016golangBindings\"^\n\rGolan"
    "gBinding\022%\n\016interface_type\030\001 \001(\tR\rinterf"
    "aceType\022&\n\016implementation\030\002 \001(\tR\016impleme"
    "ntationB\224\001\n\027com.cosmos.app.v1alpha1B\013Con"
    "figProtoP\001\242\002\003CAX\252\002\023Cosmos.App.V1alpha1\312\002"
    "\023Cosmos\\App\\V1alpha1\342\002\037Cosmos\\App\\V1alph"
    "a1\\GPBMetadata\352\002\025Cosmos::App::V1alpha1b\006"
    "proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_cosmos_2fapp_2fv1alpha1_2fconfig_2eproto_deps[1] =
    {
        &::descriptor_table_google_2fprotobuf_2fany_2eproto,
};
static ::absl::once_flag descriptor_table_cosmos_2fapp_2fv1alpha1_2fconfig_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_cosmos_2fapp_2fv1alpha1_2fconfig_2eproto = {
    false,
    false,
    646,
    descriptor_table_protodef_cosmos_2fapp_2fv1alpha1_2fconfig_2eproto,
    "cosmos/app/v1alpha1/config.proto",
    &descriptor_table_cosmos_2fapp_2fv1alpha1_2fconfig_2eproto_once,
    descriptor_table_cosmos_2fapp_2fv1alpha1_2fconfig_2eproto_deps,
    1,
    3,
    schemas,
    file_default_instances,
    TableStruct_cosmos_2fapp_2fv1alpha1_2fconfig_2eproto::offsets,
    file_level_metadata_cosmos_2fapp_2fv1alpha1_2fconfig_2eproto,
    file_level_enum_descriptors_cosmos_2fapp_2fv1alpha1_2fconfig_2eproto,
    file_level_service_descriptors_cosmos_2fapp_2fv1alpha1_2fconfig_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_cosmos_2fapp_2fv1alpha1_2fconfig_2eproto_getter() {
  return &descriptor_table_cosmos_2fapp_2fv1alpha1_2fconfig_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_cosmos_2fapp_2fv1alpha1_2fconfig_2eproto(&descriptor_table_cosmos_2fapp_2fv1alpha1_2fconfig_2eproto);
namespace cosmos {
namespace app {
namespace v1alpha1 {
// ===================================================================

class Config::_Internal {
 public:
};

Config::Config(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.app.v1alpha1.Config)
}
Config::Config(const Config& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Config* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.modules_){from._impl_.modules_}
    , decltype(_impl_.golang_bindings_){from._impl_.golang_bindings_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cosmos.app.v1alpha1.Config)
}

inline void Config::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.modules_){arena}
    , decltype(_impl_.golang_bindings_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Config::~Config() {
  // @@protoc_insertion_point(destructor:cosmos.app.v1alpha1.Config)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Config::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_modules()->~RepeatedPtrField();
  _internal_mutable_golang_bindings()->~RepeatedPtrField();
}

void Config::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Config::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.app.v1alpha1.Config)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_modules()->Clear();
  _internal_mutable_golang_bindings()->Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Config::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .cosmos.app.v1alpha1.ModuleConfig modules = 1 [json_name = "modules"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_modules(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated .cosmos.app.v1alpha1.GolangBinding golang_bindings = 2 [json_name = "golangBindings"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_golang_bindings(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* Config::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.app.v1alpha1.Config)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cosmos.app.v1alpha1.ModuleConfig modules = 1 [json_name = "modules"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_modules_size()); i < n; i++) {
    const auto& repfield = this->_internal_modules(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .cosmos.app.v1alpha1.GolangBinding golang_bindings = 2 [json_name = "golangBindings"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_golang_bindings_size()); i < n; i++) {
    const auto& repfield = this->_internal_golang_bindings(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.app.v1alpha1.Config)
  return target;
}

::size_t Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.app.v1alpha1.Config)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cosmos.app.v1alpha1.ModuleConfig modules = 1 [json_name = "modules"];
  total_size += 1UL * this->_internal_modules_size();
  for (const auto& msg : this->_internal_modules()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .cosmos.app.v1alpha1.GolangBinding golang_bindings = 2 [json_name = "golangBindings"];
  total_size += 1UL * this->_internal_golang_bindings_size();
  for (const auto& msg : this->_internal_golang_bindings()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Config::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Config::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Config::GetClassData() const { return &_class_data_; }


void Config::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Config*>(&to_msg);
  auto& from = static_cast<const Config&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.app.v1alpha1.Config)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_modules()->MergeFrom(from._internal_modules());
  _this->_internal_mutable_golang_bindings()->MergeFrom(from._internal_golang_bindings());
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Config::CopyFrom(const Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.app.v1alpha1.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Config::IsInitialized() const {
  return true;
}

void Config::InternalSwap(Config* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_modules()->InternalSwap(other->_internal_mutable_modules());
  _internal_mutable_golang_bindings()->InternalSwap(other->_internal_mutable_golang_bindings());
}

::PROTOBUF_NAMESPACE_ID::Metadata Config::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fapp_2fv1alpha1_2fconfig_2eproto_getter, &descriptor_table_cosmos_2fapp_2fv1alpha1_2fconfig_2eproto_once,
      file_level_metadata_cosmos_2fapp_2fv1alpha1_2fconfig_2eproto[0]);
}
// ===================================================================

class ModuleConfig::_Internal {
 public:
  using HasBits = decltype(std::declval<ModuleConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ModuleConfig, _impl_._has_bits_);
  static const ::PROTOBUF_NAMESPACE_ID::Any& config(const ModuleConfig* msg);
  static void set_has_config(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::PROTOBUF_NAMESPACE_ID::Any&
ModuleConfig::_Internal::config(const ModuleConfig* msg) {
  return *msg->_impl_.config_;
}
void ModuleConfig::clear_config() {
  if (_impl_.config_ != nullptr) _impl_.config_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ModuleConfig::ModuleConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.app.v1alpha1.ModuleConfig)
}
ModuleConfig::ModuleConfig(const ModuleConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ModuleConfig* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.golang_bindings_){from._impl_.golang_bindings_}
    , decltype(_impl_.name_) {}

    , decltype(_impl_.config_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.config_ = new ::PROTOBUF_NAMESPACE_ID::Any(*from._impl_.config_);
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.app.v1alpha1.ModuleConfig)
}

inline void ModuleConfig::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.golang_bindings_){arena}
    , decltype(_impl_.name_) {}

    , decltype(_impl_.config_){nullptr}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ModuleConfig::~ModuleConfig() {
  // @@protoc_insertion_point(destructor:cosmos.app.v1alpha1.ModuleConfig)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModuleConfig::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_golang_bindings()->~RepeatedPtrField();
  _impl_.name_.Destroy();
  if (this != internal_default_instance()) delete _impl_.config_;
}

void ModuleConfig::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ModuleConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.app.v1alpha1.ModuleConfig)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_golang_bindings()->Clear();
  _impl_.name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.config_ != nullptr);
    _impl_.config_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModuleConfig::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.app.v1alpha1.ModuleConfig.name"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .google.protobuf.Any config = 2 [json_name = "config"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_config(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated .cosmos.app.v1alpha1.GolangBinding golang_bindings = 3 [json_name = "golangBindings"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_golang_bindings(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* ModuleConfig::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.app.v1alpha1.ModuleConfig)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.app.v1alpha1.ModuleConfig.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Any config = 2 [json_name = "config"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::config(this),
        _Internal::config(this).GetCachedSize(), target, stream);
  }

  // repeated .cosmos.app.v1alpha1.GolangBinding golang_bindings = 3 [json_name = "golangBindings"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_golang_bindings_size()); i < n; i++) {
    const auto& repfield = this->_internal_golang_bindings(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.app.v1alpha1.ModuleConfig)
  return target;
}

::size_t ModuleConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.app.v1alpha1.ModuleConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cosmos.app.v1alpha1.GolangBinding golang_bindings = 3 [json_name = "golangBindings"];
  total_size += 1UL * this->_internal_golang_bindings_size();
  for (const auto& msg : this->_internal_golang_bindings()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // .google.protobuf.Any config = 2 [json_name = "config"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.config_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleConfig::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ModuleConfig::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleConfig::GetClassData() const { return &_class_data_; }


void ModuleConfig::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ModuleConfig*>(&to_msg);
  auto& from = static_cast<const ModuleConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.app.v1alpha1.ModuleConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_golang_bindings()->MergeFrom(from._internal_golang_bindings());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_config()->::PROTOBUF_NAMESPACE_ID::Any::MergeFrom(
        from._internal_config());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleConfig::CopyFrom(const ModuleConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.app.v1alpha1.ModuleConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleConfig::IsInitialized() const {
  return true;
}

void ModuleConfig::InternalSwap(ModuleConfig* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _internal_mutable_golang_bindings()->InternalSwap(other->_internal_mutable_golang_bindings());
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
  swap(_impl_.config_, other->_impl_.config_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModuleConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fapp_2fv1alpha1_2fconfig_2eproto_getter, &descriptor_table_cosmos_2fapp_2fv1alpha1_2fconfig_2eproto_once,
      file_level_metadata_cosmos_2fapp_2fv1alpha1_2fconfig_2eproto[1]);
}
// ===================================================================

class GolangBinding::_Internal {
 public:
};

GolangBinding::GolangBinding(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.app.v1alpha1.GolangBinding)
}
GolangBinding::GolangBinding(const GolangBinding& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GolangBinding* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.interface_type_) {}

    , decltype(_impl_.implementation_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.interface_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.interface_type_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_interface_type().empty()) {
    _this->_impl_.interface_type_.Set(from._internal_interface_type(), _this->GetArenaForAllocation());
  }
  _impl_.implementation_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.implementation_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_implementation().empty()) {
    _this->_impl_.implementation_.Set(from._internal_implementation(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.app.v1alpha1.GolangBinding)
}

inline void GolangBinding::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.interface_type_) {}

    , decltype(_impl_.implementation_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.interface_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.interface_type_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.implementation_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.implementation_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GolangBinding::~GolangBinding() {
  // @@protoc_insertion_point(destructor:cosmos.app.v1alpha1.GolangBinding)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GolangBinding::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.interface_type_.Destroy();
  _impl_.implementation_.Destroy();
}

void GolangBinding::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GolangBinding::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.app.v1alpha1.GolangBinding)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.interface_type_.ClearToEmpty();
  _impl_.implementation_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GolangBinding::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string interface_type = 1 [json_name = "interfaceType"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_interface_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.app.v1alpha1.GolangBinding.interface_type"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string implementation = 2 [json_name = "implementation"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_implementation();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.app.v1alpha1.GolangBinding.implementation"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* GolangBinding::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.app.v1alpha1.GolangBinding)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string interface_type = 1 [json_name = "interfaceType"];
  if (!this->_internal_interface_type().empty()) {
    const std::string& _s = this->_internal_interface_type();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.app.v1alpha1.GolangBinding.interface_type");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string implementation = 2 [json_name = "implementation"];
  if (!this->_internal_implementation().empty()) {
    const std::string& _s = this->_internal_implementation();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.app.v1alpha1.GolangBinding.implementation");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.app.v1alpha1.GolangBinding)
  return target;
}

::size_t GolangBinding::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.app.v1alpha1.GolangBinding)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string interface_type = 1 [json_name = "interfaceType"];
  if (!this->_internal_interface_type().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_interface_type());
  }

  // string implementation = 2 [json_name = "implementation"];
  if (!this->_internal_implementation().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_implementation());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GolangBinding::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GolangBinding::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GolangBinding::GetClassData() const { return &_class_data_; }


void GolangBinding::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GolangBinding*>(&to_msg);
  auto& from = static_cast<const GolangBinding&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.app.v1alpha1.GolangBinding)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_interface_type().empty()) {
    _this->_internal_set_interface_type(from._internal_interface_type());
  }
  if (!from._internal_implementation().empty()) {
    _this->_internal_set_implementation(from._internal_implementation());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GolangBinding::CopyFrom(const GolangBinding& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.app.v1alpha1.GolangBinding)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GolangBinding::IsInitialized() const {
  return true;
}

void GolangBinding::InternalSwap(GolangBinding* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.interface_type_, lhs_arena,
                                       &other->_impl_.interface_type_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.implementation_, lhs_arena,
                                       &other->_impl_.implementation_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata GolangBinding::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fapp_2fv1alpha1_2fconfig_2eproto_getter, &descriptor_table_cosmos_2fapp_2fv1alpha1_2fconfig_2eproto_once,
      file_level_metadata_cosmos_2fapp_2fv1alpha1_2fconfig_2eproto[2]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha1
}  // namespace app
}  // namespace cosmos
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::cosmos::app::v1alpha1::Config*
Arena::CreateMaybeMessage< ::cosmos::app::v1alpha1::Config >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::app::v1alpha1::Config >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::app::v1alpha1::ModuleConfig*
Arena::CreateMaybeMessage< ::cosmos::app::v1alpha1::ModuleConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::app::v1alpha1::ModuleConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::app::v1alpha1::GolangBinding*
Arena::CreateMaybeMessage< ::cosmos::app::v1alpha1::GolangBinding >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::app::v1alpha1::GolangBinding >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
