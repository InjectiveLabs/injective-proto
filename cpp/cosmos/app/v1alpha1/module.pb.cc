// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/app/v1alpha1/module.proto

#include "cosmos/app/v1alpha1/module.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace cosmos {
namespace app {
namespace v1alpha1 {
template <typename>
PROTOBUF_CONSTEXPR ModuleDescriptor::ModuleDescriptor(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.use_package_)*/{}
  , /*decltype(_impl_.can_migrate_from_)*/{}
  , /*decltype(_impl_.go_import_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ModuleDescriptorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleDescriptorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleDescriptorDefaultTypeInternal() {}
  union {
    ModuleDescriptor _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleDescriptorDefaultTypeInternal _ModuleDescriptor_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR PackageReference::PackageReference(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.revision_)*/ 0u

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PackageReferenceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PackageReferenceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PackageReferenceDefaultTypeInternal() {}
  union {
    PackageReference _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PackageReferenceDefaultTypeInternal _PackageReference_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MigrateFromInfo::MigrateFromInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.module_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MigrateFromInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MigrateFromInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MigrateFromInfoDefaultTypeInternal() {}
  union {
    MigrateFromInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MigrateFromInfoDefaultTypeInternal _MigrateFromInfo_default_instance_;
}  // namespace v1alpha1
}  // namespace app
}  // namespace cosmos
static ::_pb::Metadata file_level_metadata_cosmos_2fapp_2fv1alpha1_2fmodule_2eproto[3];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_cosmos_2fapp_2fv1alpha1_2fmodule_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cosmos_2fapp_2fv1alpha1_2fmodule_2eproto = nullptr;
const ::uint32_t TableStruct_cosmos_2fapp_2fv1alpha1_2fmodule_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::app::v1alpha1::ModuleDescriptor, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::app::v1alpha1::ModuleDescriptor, _impl_.go_import_),
    PROTOBUF_FIELD_OFFSET(::cosmos::app::v1alpha1::ModuleDescriptor, _impl_.use_package_),
    PROTOBUF_FIELD_OFFSET(::cosmos::app::v1alpha1::ModuleDescriptor, _impl_.can_migrate_from_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::app::v1alpha1::PackageReference, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::app::v1alpha1::PackageReference, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::cosmos::app::v1alpha1::PackageReference, _impl_.revision_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::app::v1alpha1::MigrateFromInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::app::v1alpha1::MigrateFromInfo, _impl_.module_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::cosmos::app::v1alpha1::ModuleDescriptor)},
        { 11, -1, -1, sizeof(::cosmos::app::v1alpha1::PackageReference)},
        { 21, -1, -1, sizeof(::cosmos::app::v1alpha1::MigrateFromInfo)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::cosmos::app::v1alpha1::_ModuleDescriptor_default_instance_._instance,
    &::cosmos::app::v1alpha1::_PackageReference_default_instance_._instance,
    &::cosmos::app::v1alpha1::_MigrateFromInfo_default_instance_._instance,
};
const char descriptor_table_protodef_cosmos_2fapp_2fv1alpha1_2fmodule_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n cosmos/app/v1alpha1/module.proto\022\023cosm"
    "os.app.v1alpha1\032 google/protobuf/descrip"
    "tor.proto\"\307\001\n\020ModuleDescriptor\022\033\n\tgo_imp"
    "ort\030\001 \001(\tR\010goImport\022F\n\013use_package\030\002 \003(\013"
    "2%.cosmos.app.v1alpha1.PackageReferenceR"
    "\nusePackage\022N\n\020can_migrate_from\030\003 \003(\0132$."
    "cosmos.app.v1alpha1.MigrateFromInfoR\016can"
    "MigrateFrom\"B\n\020PackageReference\022\022\n\004name\030"
    "\001 \001(\tR\004name\022\032\n\010revision\030\002 \001(\rR\010revision\""
    ")\n\017MigrateFromInfo\022\026\n\006module\030\001 \001(\tR\006modu"
    "le:a\n\006module\022\037.google.protobuf.MessageOp"
    "tions\030\207\350\242\033 \001(\0132%.cosmos.app.v1alpha1.Mod"
    "uleDescriptorR\006moduleB\224\001\n\027com.cosmos.app"
    ".v1alpha1B\013ModuleProtoP\001\242\002\003CAX\252\002\023Cosmos."
    "App.V1alpha1\312\002\023Cosmos\\App\\V1alpha1\342\002\037Cos"
    "mos\\App\\V1alpha1\\GPBMetadata\352\002\025Cosmos::A"
    "pp::V1alpha1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_cosmos_2fapp_2fv1alpha1_2fmodule_2eproto_deps[1] =
    {
        &::descriptor_table_google_2fprotobuf_2fdescriptor_2eproto,
};
static ::absl::once_flag descriptor_table_cosmos_2fapp_2fv1alpha1_2fmodule_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_cosmos_2fapp_2fv1alpha1_2fmodule_2eproto = {
    false,
    false,
    660,
    descriptor_table_protodef_cosmos_2fapp_2fv1alpha1_2fmodule_2eproto,
    "cosmos/app/v1alpha1/module.proto",
    &descriptor_table_cosmos_2fapp_2fv1alpha1_2fmodule_2eproto_once,
    descriptor_table_cosmos_2fapp_2fv1alpha1_2fmodule_2eproto_deps,
    1,
    3,
    schemas,
    file_default_instances,
    TableStruct_cosmos_2fapp_2fv1alpha1_2fmodule_2eproto::offsets,
    file_level_metadata_cosmos_2fapp_2fv1alpha1_2fmodule_2eproto,
    file_level_enum_descriptors_cosmos_2fapp_2fv1alpha1_2fmodule_2eproto,
    file_level_service_descriptors_cosmos_2fapp_2fv1alpha1_2fmodule_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_cosmos_2fapp_2fv1alpha1_2fmodule_2eproto_getter() {
  return &descriptor_table_cosmos_2fapp_2fv1alpha1_2fmodule_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_cosmos_2fapp_2fv1alpha1_2fmodule_2eproto(&descriptor_table_cosmos_2fapp_2fv1alpha1_2fmodule_2eproto);
namespace cosmos {
namespace app {
namespace v1alpha1 {
// ===================================================================

class ModuleDescriptor::_Internal {
 public:
};

ModuleDescriptor::ModuleDescriptor(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.app.v1alpha1.ModuleDescriptor)
}
ModuleDescriptor::ModuleDescriptor(const ModuleDescriptor& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ModuleDescriptor* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.use_package_){from._impl_.use_package_}
    , decltype(_impl_.can_migrate_from_){from._impl_.can_migrate_from_}
    , decltype(_impl_.go_import_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.go_import_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.go_import_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_go_import().empty()) {
    _this->_impl_.go_import_.Set(from._internal_go_import(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.app.v1alpha1.ModuleDescriptor)
}

inline void ModuleDescriptor::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.use_package_){arena}
    , decltype(_impl_.can_migrate_from_){arena}
    , decltype(_impl_.go_import_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.go_import_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.go_import_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ModuleDescriptor::~ModuleDescriptor() {
  // @@protoc_insertion_point(destructor:cosmos.app.v1alpha1.ModuleDescriptor)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModuleDescriptor::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_use_package()->~RepeatedPtrField();
  _internal_mutable_can_migrate_from()->~RepeatedPtrField();
  _impl_.go_import_.Destroy();
}

void ModuleDescriptor::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ModuleDescriptor::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.app.v1alpha1.ModuleDescriptor)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_use_package()->Clear();
  _internal_mutable_can_migrate_from()->Clear();
  _impl_.go_import_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModuleDescriptor::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string go_import = 1 [json_name = "goImport"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_go_import();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.app.v1alpha1.ModuleDescriptor.go_import"));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated .cosmos.app.v1alpha1.PackageReference use_package = 2 [json_name = "usePackage"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_use_package(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated .cosmos.app.v1alpha1.MigrateFromInfo can_migrate_from = 3 [json_name = "canMigrateFrom"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_can_migrate_from(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* ModuleDescriptor::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.app.v1alpha1.ModuleDescriptor)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string go_import = 1 [json_name = "goImport"];
  if (!this->_internal_go_import().empty()) {
    const std::string& _s = this->_internal_go_import();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.app.v1alpha1.ModuleDescriptor.go_import");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .cosmos.app.v1alpha1.PackageReference use_package = 2 [json_name = "usePackage"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_use_package_size()); i < n; i++) {
    const auto& repfield = this->_internal_use_package(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .cosmos.app.v1alpha1.MigrateFromInfo can_migrate_from = 3 [json_name = "canMigrateFrom"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_can_migrate_from_size()); i < n; i++) {
    const auto& repfield = this->_internal_can_migrate_from(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.app.v1alpha1.ModuleDescriptor)
  return target;
}

::size_t ModuleDescriptor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.app.v1alpha1.ModuleDescriptor)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cosmos.app.v1alpha1.PackageReference use_package = 2 [json_name = "usePackage"];
  total_size += 1UL * this->_internal_use_package_size();
  for (const auto& msg : this->_internal_use_package()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .cosmos.app.v1alpha1.MigrateFromInfo can_migrate_from = 3 [json_name = "canMigrateFrom"];
  total_size += 1UL * this->_internal_can_migrate_from_size();
  for (const auto& msg : this->_internal_can_migrate_from()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string go_import = 1 [json_name = "goImport"];
  if (!this->_internal_go_import().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_go_import());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleDescriptor::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ModuleDescriptor::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleDescriptor::GetClassData() const { return &_class_data_; }


void ModuleDescriptor::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ModuleDescriptor*>(&to_msg);
  auto& from = static_cast<const ModuleDescriptor&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.app.v1alpha1.ModuleDescriptor)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_use_package()->MergeFrom(from._internal_use_package());
  _this->_internal_mutable_can_migrate_from()->MergeFrom(from._internal_can_migrate_from());
  if (!from._internal_go_import().empty()) {
    _this->_internal_set_go_import(from._internal_go_import());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleDescriptor::CopyFrom(const ModuleDescriptor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.app.v1alpha1.ModuleDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleDescriptor::IsInitialized() const {
  return true;
}

void ModuleDescriptor::InternalSwap(ModuleDescriptor* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_use_package()->InternalSwap(other->_internal_mutable_use_package());
  _internal_mutable_can_migrate_from()->InternalSwap(other->_internal_mutable_can_migrate_from());
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.go_import_, lhs_arena,
                                       &other->_impl_.go_import_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModuleDescriptor::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fapp_2fv1alpha1_2fmodule_2eproto_getter, &descriptor_table_cosmos_2fapp_2fv1alpha1_2fmodule_2eproto_once,
      file_level_metadata_cosmos_2fapp_2fv1alpha1_2fmodule_2eproto[0]);
}
// ===================================================================

class PackageReference::_Internal {
 public:
};

PackageReference::PackageReference(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.app.v1alpha1.PackageReference)
}
PackageReference::PackageReference(const PackageReference& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PackageReference* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_) {}

    , decltype(_impl_.revision_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  _this->_impl_.revision_ = from._impl_.revision_;
  // @@protoc_insertion_point(copy_constructor:cosmos.app.v1alpha1.PackageReference)
}

inline void PackageReference::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.name_) {}

    , decltype(_impl_.revision_) { 0u }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PackageReference::~PackageReference() {
  // @@protoc_insertion_point(destructor:cosmos.app.v1alpha1.PackageReference)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PackageReference::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void PackageReference::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PackageReference::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.app.v1alpha1.PackageReference)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.revision_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PackageReference::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.app.v1alpha1.PackageReference.name"));
        } else {
          goto handle_unusual;
        }
        continue;
      // uint32 revision = 2 [json_name = "revision"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          _impl_.revision_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* PackageReference::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.app.v1alpha1.PackageReference)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.app.v1alpha1.PackageReference.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // uint32 revision = 2 [json_name = "revision"];
  if (this->_internal_revision() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_revision(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.app.v1alpha1.PackageReference)
  return target;
}

::size_t PackageReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.app.v1alpha1.PackageReference)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // uint32 revision = 2 [json_name = "revision"];
  if (this->_internal_revision() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_revision());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PackageReference::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PackageReference::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PackageReference::GetClassData() const { return &_class_data_; }


void PackageReference::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PackageReference*>(&to_msg);
  auto& from = static_cast<const PackageReference&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.app.v1alpha1.PackageReference)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_revision() != 0) {
    _this->_internal_set_revision(from._internal_revision());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PackageReference::CopyFrom(const PackageReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.app.v1alpha1.PackageReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackageReference::IsInitialized() const {
  return true;
}

void PackageReference::InternalSwap(PackageReference* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);

  swap(_impl_.revision_, other->_impl_.revision_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PackageReference::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fapp_2fv1alpha1_2fmodule_2eproto_getter, &descriptor_table_cosmos_2fapp_2fv1alpha1_2fmodule_2eproto_once,
      file_level_metadata_cosmos_2fapp_2fv1alpha1_2fmodule_2eproto[1]);
}
// ===================================================================

class MigrateFromInfo::_Internal {
 public:
};

MigrateFromInfo::MigrateFromInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.app.v1alpha1.MigrateFromInfo)
}
MigrateFromInfo::MigrateFromInfo(const MigrateFromInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MigrateFromInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.module_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.module_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.module_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_module().empty()) {
    _this->_impl_.module_.Set(from._internal_module(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.app.v1alpha1.MigrateFromInfo)
}

inline void MigrateFromInfo::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.module_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.module_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.module_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MigrateFromInfo::~MigrateFromInfo() {
  // @@protoc_insertion_point(destructor:cosmos.app.v1alpha1.MigrateFromInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MigrateFromInfo::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.module_.Destroy();
}

void MigrateFromInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MigrateFromInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.app.v1alpha1.MigrateFromInfo)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.module_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MigrateFromInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string module = 1 [json_name = "module"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_module();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.app.v1alpha1.MigrateFromInfo.module"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MigrateFromInfo::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.app.v1alpha1.MigrateFromInfo)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string module = 1 [json_name = "module"];
  if (!this->_internal_module().empty()) {
    const std::string& _s = this->_internal_module();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.app.v1alpha1.MigrateFromInfo.module");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.app.v1alpha1.MigrateFromInfo)
  return target;
}

::size_t MigrateFromInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.app.v1alpha1.MigrateFromInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string module = 1 [json_name = "module"];
  if (!this->_internal_module().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_module());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MigrateFromInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MigrateFromInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MigrateFromInfo::GetClassData() const { return &_class_data_; }


void MigrateFromInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MigrateFromInfo*>(&to_msg);
  auto& from = static_cast<const MigrateFromInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.app.v1alpha1.MigrateFromInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_module().empty()) {
    _this->_internal_set_module(from._internal_module());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MigrateFromInfo::CopyFrom(const MigrateFromInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.app.v1alpha1.MigrateFromInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MigrateFromInfo::IsInitialized() const {
  return true;
}

void MigrateFromInfo::InternalSwap(MigrateFromInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.module_, lhs_arena,
                                       &other->_impl_.module_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata MigrateFromInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fapp_2fv1alpha1_2fmodule_2eproto_getter, &descriptor_table_cosmos_2fapp_2fv1alpha1_2fmodule_2eproto_once,
      file_level_metadata_cosmos_2fapp_2fv1alpha1_2fmodule_2eproto[2]);
}
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::MessageOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::cosmos::app::v1alpha1::ModuleDescriptor >, 11, false>
  module(kModuleFieldNumber, ::cosmos::app::v1alpha1::ModuleDescriptor::default_instance(), nullptr);
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha1
}  // namespace app
}  // namespace cosmos
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::cosmos::app::v1alpha1::ModuleDescriptor*
Arena::CreateMaybeMessage< ::cosmos::app::v1alpha1::ModuleDescriptor >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::app::v1alpha1::ModuleDescriptor >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::app::v1alpha1::PackageReference*
Arena::CreateMaybeMessage< ::cosmos::app::v1alpha1::PackageReference >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::app::v1alpha1::PackageReference >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::app::v1alpha1::MigrateFromInfo*
Arena::CreateMaybeMessage< ::cosmos::app::v1alpha1::MigrateFromInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::app::v1alpha1::MigrateFromInfo >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
