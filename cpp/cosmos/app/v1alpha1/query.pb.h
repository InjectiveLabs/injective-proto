// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/app/v1alpha1/query.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_cosmos_2fapp_2fv1alpha1_2fquery_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_cosmos_2fapp_2fv1alpha1_2fquery_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4023000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4023004 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "cosmos/app/v1alpha1/config.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cosmos_2fapp_2fv1alpha1_2fquery_2eproto

PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_cosmos_2fapp_2fv1alpha1_2fquery_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable
    descriptor_table_cosmos_2fapp_2fv1alpha1_2fquery_2eproto;
namespace cosmos {
namespace app {
namespace v1alpha1 {
class QueryConfigRequest;
struct QueryConfigRequestDefaultTypeInternal;
extern QueryConfigRequestDefaultTypeInternal _QueryConfigRequest_default_instance_;
class QueryConfigResponse;
struct QueryConfigResponseDefaultTypeInternal;
extern QueryConfigResponseDefaultTypeInternal _QueryConfigResponse_default_instance_;
}  // namespace v1alpha1
}  // namespace app
}  // namespace cosmos
PROTOBUF_NAMESPACE_OPEN
template <>
::cosmos::app::v1alpha1::QueryConfigRequest* Arena::CreateMaybeMessage<::cosmos::app::v1alpha1::QueryConfigRequest>(Arena*);
template <>
::cosmos::app::v1alpha1::QueryConfigResponse* Arena::CreateMaybeMessage<::cosmos::app::v1alpha1::QueryConfigResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

namespace cosmos {
namespace app {
namespace v1alpha1 {

// ===================================================================


// -------------------------------------------------------------------

class QueryConfigRequest final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:cosmos.app.v1alpha1.QueryConfigRequest) */ {
 public:
  inline QueryConfigRequest() : QueryConfigRequest(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryConfigRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QueryConfigRequest(const QueryConfigRequest& from);
  QueryConfigRequest(QueryConfigRequest&& from) noexcept
    : QueryConfigRequest() {
    *this = ::std::move(from);
  }

  inline QueryConfigRequest& operator=(const QueryConfigRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryConfigRequest& operator=(QueryConfigRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryConfigRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryConfigRequest* internal_default_instance() {
    return reinterpret_cast<const QueryConfigRequest*>(
               &_QueryConfigRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(QueryConfigRequest& a, QueryConfigRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryConfigRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryConfigRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryConfigRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryConfigRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const QueryConfigRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const QueryConfigRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.app.v1alpha1.QueryConfigRequest";
  }
  protected:
  explicit QueryConfigRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:cosmos.app.v1alpha1.QueryConfigRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_cosmos_2fapp_2fv1alpha1_2fquery_2eproto;
};// -------------------------------------------------------------------

class QueryConfigResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmos.app.v1alpha1.QueryConfigResponse) */ {
 public:
  inline QueryConfigResponse() : QueryConfigResponse(nullptr) {}
  ~QueryConfigResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryConfigResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QueryConfigResponse(const QueryConfigResponse& from);
  QueryConfigResponse(QueryConfigResponse&& from) noexcept
    : QueryConfigResponse() {
    *this = ::std::move(from);
  }

  inline QueryConfigResponse& operator=(const QueryConfigResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryConfigResponse& operator=(QueryConfigResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryConfigResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryConfigResponse* internal_default_instance() {
    return reinterpret_cast<const QueryConfigResponse*>(
               &_QueryConfigResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(QueryConfigResponse& a, QueryConfigResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryConfigResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryConfigResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryConfigResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryConfigResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const QueryConfigResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const QueryConfigResponse& from) {
    QueryConfigResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryConfigResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmos.app.v1alpha1.QueryConfigResponse";
  }
  protected:
  explicit QueryConfigResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConfigFieldNumber = 1,
  };
  // .cosmos.app.v1alpha1.Config config = 1 [json_name = "config"];
  bool has_config() const;
  void clear_config() ;
  const ::cosmos::app::v1alpha1::Config& config() const;
  PROTOBUF_NODISCARD ::cosmos::app::v1alpha1::Config* release_config();
  ::cosmos::app::v1alpha1::Config* mutable_config();
  void set_allocated_config(::cosmos::app::v1alpha1::Config* config);
  private:
  const ::cosmos::app::v1alpha1::Config& _internal_config() const;
  ::cosmos::app::v1alpha1::Config* _internal_mutable_config();
  public:
  void unsafe_arena_set_allocated_config(
      ::cosmos::app::v1alpha1::Config* config);
  ::cosmos::app::v1alpha1::Config* unsafe_arena_release_config();
  // @@protoc_insertion_point(class_scope:cosmos.app.v1alpha1.QueryConfigResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::cosmos::app::v1alpha1::Config* config_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fapp_2fv1alpha1_2fquery_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// QueryConfigRequest

// -------------------------------------------------------------------

// QueryConfigResponse

// .cosmos.app.v1alpha1.Config config = 1 [json_name = "config"];
inline bool QueryConfigResponse::has_config() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.config_ != nullptr);
  return value;
}
inline const ::cosmos::app::v1alpha1::Config& QueryConfigResponse::_internal_config() const {
  const ::cosmos::app::v1alpha1::Config* p = _impl_.config_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::app::v1alpha1::Config&>(
      ::cosmos::app::v1alpha1::_Config_default_instance_);
}
inline const ::cosmos::app::v1alpha1::Config& QueryConfigResponse::config() const {
  // @@protoc_insertion_point(field_get:cosmos.app.v1alpha1.QueryConfigResponse.config)
  return _internal_config();
}
inline void QueryConfigResponse::unsafe_arena_set_allocated_config(
    ::cosmos::app::v1alpha1::Config* config) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.config_);
  }
  _impl_.config_ = config;
  if (config) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.app.v1alpha1.QueryConfigResponse.config)
}
inline ::cosmos::app::v1alpha1::Config* QueryConfigResponse::release_config() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::app::v1alpha1::Config* temp = _impl_.config_;
  _impl_.config_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::cosmos::app::v1alpha1::Config* QueryConfigResponse::unsafe_arena_release_config() {
  // @@protoc_insertion_point(field_release:cosmos.app.v1alpha1.QueryConfigResponse.config)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::app::v1alpha1::Config* temp = _impl_.config_;
  _impl_.config_ = nullptr;
  return temp;
}
inline ::cosmos::app::v1alpha1::Config* QueryConfigResponse::_internal_mutable_config() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.config_ == nullptr) {
    auto* p = CreateMaybeMessage<::cosmos::app::v1alpha1::Config>(GetArenaForAllocation());
    _impl_.config_ = p;
  }
  return _impl_.config_;
}
inline ::cosmos::app::v1alpha1::Config* QueryConfigResponse::mutable_config() {
  ::cosmos::app::v1alpha1::Config* _msg = _internal_mutable_config();
  // @@protoc_insertion_point(field_mutable:cosmos.app.v1alpha1.QueryConfigResponse.config)
  return _msg;
}
inline void QueryConfigResponse::set_allocated_config(::cosmos::app::v1alpha1::Config* config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.config_);
  }
  if (config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(config));
    if (message_arena != submessage_arena) {
      config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.config_ = config;
  // @@protoc_insertion_point(field_set_allocated:cosmos.app.v1alpha1.QueryConfigResponse.config)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha1
}  // namespace app
}  // namespace cosmos


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_cosmos_2fapp_2fv1alpha1_2fquery_2eproto_2epb_2eh
