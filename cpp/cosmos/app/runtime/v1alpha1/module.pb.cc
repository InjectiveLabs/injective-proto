// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/app/runtime/v1alpha1/module.proto

#include "cosmos/app/runtime/v1alpha1/module.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace cosmos {
namespace app {
namespace runtime {
namespace v1alpha1 {
template <typename>
PROTOBUF_CONSTEXPR Module::Module(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.begin_blockers_)*/{}
  , /*decltype(_impl_.end_blockers_)*/{}
  , /*decltype(_impl_.init_genesis_)*/{}
  , /*decltype(_impl_.export_genesis_)*/{}
  , /*decltype(_impl_.override_store_keys_)*/{}
  , /*decltype(_impl_.app_name_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ModuleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleDefaultTypeInternal() {}
  union {
    Module _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleDefaultTypeInternal _Module_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR StoreKeyConfig::StoreKeyConfig(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.module_name_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.kv_store_key_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StoreKeyConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StoreKeyConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StoreKeyConfigDefaultTypeInternal() {}
  union {
    StoreKeyConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StoreKeyConfigDefaultTypeInternal _StoreKeyConfig_default_instance_;
}  // namespace v1alpha1
}  // namespace runtime
}  // namespace app
}  // namespace cosmos
static ::_pb::Metadata file_level_metadata_cosmos_2fapp_2fruntime_2fv1alpha1_2fmodule_2eproto[2];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_cosmos_2fapp_2fruntime_2fv1alpha1_2fmodule_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cosmos_2fapp_2fruntime_2fv1alpha1_2fmodule_2eproto = nullptr;
const ::uint32_t TableStruct_cosmos_2fapp_2fruntime_2fv1alpha1_2fmodule_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::app::runtime::v1alpha1::Module, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::app::runtime::v1alpha1::Module, _impl_.app_name_),
    PROTOBUF_FIELD_OFFSET(::cosmos::app::runtime::v1alpha1::Module, _impl_.begin_blockers_),
    PROTOBUF_FIELD_OFFSET(::cosmos::app::runtime::v1alpha1::Module, _impl_.end_blockers_),
    PROTOBUF_FIELD_OFFSET(::cosmos::app::runtime::v1alpha1::Module, _impl_.init_genesis_),
    PROTOBUF_FIELD_OFFSET(::cosmos::app::runtime::v1alpha1::Module, _impl_.export_genesis_),
    PROTOBUF_FIELD_OFFSET(::cosmos::app::runtime::v1alpha1::Module, _impl_.override_store_keys_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cosmos::app::runtime::v1alpha1::StoreKeyConfig, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cosmos::app::runtime::v1alpha1::StoreKeyConfig, _impl_.module_name_),
    PROTOBUF_FIELD_OFFSET(::cosmos::app::runtime::v1alpha1::StoreKeyConfig, _impl_.kv_store_key_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::cosmos::app::runtime::v1alpha1::Module)},
        { 14, -1, -1, sizeof(::cosmos::app::runtime::v1alpha1::StoreKeyConfig)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::cosmos::app::runtime::v1alpha1::_Module_default_instance_._instance,
    &::cosmos::app::runtime::v1alpha1::_StoreKeyConfig_default_instance_._instance,
};
const char descriptor_table_protodef_cosmos_2fapp_2fruntime_2fv1alpha1_2fmodule_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n(cosmos/app/runtime/v1alpha1/module.pro"
    "to\022\033cosmos.app.runtime.v1alpha1\032 cosmos/"
    "app/v1alpha1/module.proto\"\331\002\n\006Module\022\031\n\010"
    "app_name\030\001 \001(\tR\007appName\022%\n\016begin_blocker"
    "s\030\002 \003(\tR\rbeginBlockers\022!\n\014end_blockers\030\003"
    " \003(\tR\013endBlockers\022!\n\014init_genesis\030\004 \003(\tR"
    "\013initGenesis\022%\n\016export_genesis\030\005 \003(\tR\rex"
    "portGenesis\022[\n\023override_store_keys\030\006 \003(\013"
    "2+.cosmos.app.runtime.v1alpha1.StoreKeyC"
    "onfigR\021overrideStoreKeys:C\272\300\226\332\001=\n$github"
    ".com/cosmos/cosmos-sdk/runtime\022\025\n\023cosmos"
    ".app.v1alpha1\"S\n\016StoreKeyConfig\022\037\n\013modul"
    "e_name\030\001 \001(\tR\nmoduleName\022 \n\014kv_store_key"
    "\030\002 \001(\tR\nkvStoreKeyB\275\001\n\037com.cosmos.app.ru"
    "ntime.v1alpha1B\013ModuleProtoP\001\242\002\003CAR\252\002\033Co"
    "smos.App.Runtime.V1alpha1\312\002\033Cosmos\\App\\R"
    "untime\\V1alpha1\342\002\'Cosmos\\App\\Runtime\\V1a"
    "lpha1\\GPBMetadata\352\002\036Cosmos::App::Runtime"
    "::V1alpha1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_cosmos_2fapp_2fruntime_2fv1alpha1_2fmodule_2eproto_deps[1] =
    {
        &::descriptor_table_cosmos_2fapp_2fv1alpha1_2fmodule_2eproto,
};
static ::absl::once_flag descriptor_table_cosmos_2fapp_2fruntime_2fv1alpha1_2fmodule_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_cosmos_2fapp_2fruntime_2fv1alpha1_2fmodule_2eproto = {
    false,
    false,
    738,
    descriptor_table_protodef_cosmos_2fapp_2fruntime_2fv1alpha1_2fmodule_2eproto,
    "cosmos/app/runtime/v1alpha1/module.proto",
    &descriptor_table_cosmos_2fapp_2fruntime_2fv1alpha1_2fmodule_2eproto_once,
    descriptor_table_cosmos_2fapp_2fruntime_2fv1alpha1_2fmodule_2eproto_deps,
    1,
    2,
    schemas,
    file_default_instances,
    TableStruct_cosmos_2fapp_2fruntime_2fv1alpha1_2fmodule_2eproto::offsets,
    file_level_metadata_cosmos_2fapp_2fruntime_2fv1alpha1_2fmodule_2eproto,
    file_level_enum_descriptors_cosmos_2fapp_2fruntime_2fv1alpha1_2fmodule_2eproto,
    file_level_service_descriptors_cosmos_2fapp_2fruntime_2fv1alpha1_2fmodule_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_cosmos_2fapp_2fruntime_2fv1alpha1_2fmodule_2eproto_getter() {
  return &descriptor_table_cosmos_2fapp_2fruntime_2fv1alpha1_2fmodule_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_cosmos_2fapp_2fruntime_2fv1alpha1_2fmodule_2eproto(&descriptor_table_cosmos_2fapp_2fruntime_2fv1alpha1_2fmodule_2eproto);
namespace cosmos {
namespace app {
namespace runtime {
namespace v1alpha1 {
// ===================================================================

class Module::_Internal {
 public:
};

Module::Module(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.app.runtime.v1alpha1.Module)
}
Module::Module(const Module& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Module* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.begin_blockers_){from._impl_.begin_blockers_}
    , decltype(_impl_.end_blockers_){from._impl_.end_blockers_}
    , decltype(_impl_.init_genesis_){from._impl_.init_genesis_}
    , decltype(_impl_.export_genesis_){from._impl_.export_genesis_}
    , decltype(_impl_.override_store_keys_){from._impl_.override_store_keys_}
    , decltype(_impl_.app_name_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.app_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.app_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_app_name().empty()) {
    _this->_impl_.app_name_.Set(from._internal_app_name(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.app.runtime.v1alpha1.Module)
}

inline void Module::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.begin_blockers_){arena}
    , decltype(_impl_.end_blockers_){arena}
    , decltype(_impl_.init_genesis_){arena}
    , decltype(_impl_.export_genesis_){arena}
    , decltype(_impl_.override_store_keys_){arena}
    , decltype(_impl_.app_name_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.app_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.app_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Module::~Module() {
  // @@protoc_insertion_point(destructor:cosmos.app.runtime.v1alpha1.Module)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Module::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_begin_blockers()->~RepeatedPtrField();
  _internal_mutable_end_blockers()->~RepeatedPtrField();
  _internal_mutable_init_genesis()->~RepeatedPtrField();
  _internal_mutable_export_genesis()->~RepeatedPtrField();
  _internal_mutable_override_store_keys()->~RepeatedPtrField();
  _impl_.app_name_.Destroy();
}

void Module::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Module::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.app.runtime.v1alpha1.Module)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_begin_blockers()->Clear();
  _internal_mutable_end_blockers()->Clear();
  _internal_mutable_init_genesis()->Clear();
  _internal_mutable_export_genesis()->Clear();
  _internal_mutable_override_store_keys()->Clear();
  _impl_.app_name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Module::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string app_name = 1 [json_name = "appName"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_app_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.app.runtime.v1alpha1.Module.app_name"));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated string begin_blockers = 2 [json_name = "beginBlockers"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_begin_blockers();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "cosmos.app.runtime.v1alpha1.Module.begin_blockers"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated string end_blockers = 3 [json_name = "endBlockers"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_end_blockers();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "cosmos.app.runtime.v1alpha1.Module.end_blockers"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated string init_genesis = 4 [json_name = "initGenesis"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_init_genesis();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "cosmos.app.runtime.v1alpha1.Module.init_genesis"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated string export_genesis = 5 [json_name = "exportGenesis"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_export_genesis();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "cosmos.app.runtime.v1alpha1.Module.export_genesis"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated .cosmos.app.runtime.v1alpha1.StoreKeyConfig override_store_keys = 6 [json_name = "overrideStoreKeys"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_override_store_keys(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* Module::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.app.runtime.v1alpha1.Module)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string app_name = 1 [json_name = "appName"];
  if (!this->_internal_app_name().empty()) {
    const std::string& _s = this->_internal_app_name();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.app.runtime.v1alpha1.Module.app_name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated string begin_blockers = 2 [json_name = "beginBlockers"];
  for (int i = 0, n = this->_internal_begin_blockers_size(); i < n; ++i) {
    const auto& s = this->_internal_begin_blockers(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.app.runtime.v1alpha1.Module.begin_blockers");
    target = stream->WriteString(2, s, target);
  }

  // repeated string end_blockers = 3 [json_name = "endBlockers"];
  for (int i = 0, n = this->_internal_end_blockers_size(); i < n; ++i) {
    const auto& s = this->_internal_end_blockers(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.app.runtime.v1alpha1.Module.end_blockers");
    target = stream->WriteString(3, s, target);
  }

  // repeated string init_genesis = 4 [json_name = "initGenesis"];
  for (int i = 0, n = this->_internal_init_genesis_size(); i < n; ++i) {
    const auto& s = this->_internal_init_genesis(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.app.runtime.v1alpha1.Module.init_genesis");
    target = stream->WriteString(4, s, target);
  }

  // repeated string export_genesis = 5 [json_name = "exportGenesis"];
  for (int i = 0, n = this->_internal_export_genesis_size(); i < n; ++i) {
    const auto& s = this->_internal_export_genesis(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.app.runtime.v1alpha1.Module.export_genesis");
    target = stream->WriteString(5, s, target);
  }

  // repeated .cosmos.app.runtime.v1alpha1.StoreKeyConfig override_store_keys = 6 [json_name = "overrideStoreKeys"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_override_store_keys_size()); i < n; i++) {
    const auto& repfield = this->_internal_override_store_keys(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(6, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.app.runtime.v1alpha1.Module)
  return target;
}

::size_t Module::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.app.runtime.v1alpha1.Module)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string begin_blockers = 2 [json_name = "beginBlockers"];
  total_size += 1 * ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_internal_begin_blockers().size());
  for (int i = 0, n = _internal_begin_blockers().size(); i < n; ++i) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        _internal_begin_blockers().Get(i));
  }

  // repeated string end_blockers = 3 [json_name = "endBlockers"];
  total_size += 1 * ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_internal_end_blockers().size());
  for (int i = 0, n = _internal_end_blockers().size(); i < n; ++i) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        _internal_end_blockers().Get(i));
  }

  // repeated string init_genesis = 4 [json_name = "initGenesis"];
  total_size += 1 * ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_internal_init_genesis().size());
  for (int i = 0, n = _internal_init_genesis().size(); i < n; ++i) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        _internal_init_genesis().Get(i));
  }

  // repeated string export_genesis = 5 [json_name = "exportGenesis"];
  total_size += 1 * ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_internal_export_genesis().size());
  for (int i = 0, n = _internal_export_genesis().size(); i < n; ++i) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        _internal_export_genesis().Get(i));
  }

  // repeated .cosmos.app.runtime.v1alpha1.StoreKeyConfig override_store_keys = 6 [json_name = "overrideStoreKeys"];
  total_size += 1UL * this->_internal_override_store_keys_size();
  for (const auto& msg : this->_internal_override_store_keys()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string app_name = 1 [json_name = "appName"];
  if (!this->_internal_app_name().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_app_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Module::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Module::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Module::GetClassData() const { return &_class_data_; }


void Module::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Module*>(&to_msg);
  auto& from = static_cast<const Module&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.app.runtime.v1alpha1.Module)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_begin_blockers()->MergeFrom(from._internal_begin_blockers());
  _this->_internal_mutable_end_blockers()->MergeFrom(from._internal_end_blockers());
  _this->_internal_mutable_init_genesis()->MergeFrom(from._internal_init_genesis());
  _this->_internal_mutable_export_genesis()->MergeFrom(from._internal_export_genesis());
  _this->_internal_mutable_override_store_keys()->MergeFrom(from._internal_override_store_keys());
  if (!from._internal_app_name().empty()) {
    _this->_internal_set_app_name(from._internal_app_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Module::CopyFrom(const Module& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.app.runtime.v1alpha1.Module)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Module::IsInitialized() const {
  return true;
}

void Module::InternalSwap(Module* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_begin_blockers()->InternalSwap(
      other->_internal_mutable_begin_blockers());
  _internal_mutable_end_blockers()->InternalSwap(
      other->_internal_mutable_end_blockers());
  _internal_mutable_init_genesis()->InternalSwap(
      other->_internal_mutable_init_genesis());
  _internal_mutable_export_genesis()->InternalSwap(
      other->_internal_mutable_export_genesis());
  _internal_mutable_override_store_keys()->InternalSwap(other->_internal_mutable_override_store_keys());
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.app_name_, lhs_arena,
                                       &other->_impl_.app_name_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata Module::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fapp_2fruntime_2fv1alpha1_2fmodule_2eproto_getter, &descriptor_table_cosmos_2fapp_2fruntime_2fv1alpha1_2fmodule_2eproto_once,
      file_level_metadata_cosmos_2fapp_2fruntime_2fv1alpha1_2fmodule_2eproto[0]);
}
// ===================================================================

class StoreKeyConfig::_Internal {
 public:
};

StoreKeyConfig::StoreKeyConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.app.runtime.v1alpha1.StoreKeyConfig)
}
StoreKeyConfig::StoreKeyConfig(const StoreKeyConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StoreKeyConfig* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.module_name_) {}

    , decltype(_impl_.kv_store_key_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.module_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.module_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_module_name().empty()) {
    _this->_impl_.module_name_.Set(from._internal_module_name(), _this->GetArenaForAllocation());
  }
  _impl_.kv_store_key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.kv_store_key_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_kv_store_key().empty()) {
    _this->_impl_.kv_store_key_.Set(from._internal_kv_store_key(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.app.runtime.v1alpha1.StoreKeyConfig)
}

inline void StoreKeyConfig::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.module_name_) {}

    , decltype(_impl_.kv_store_key_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.module_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.module_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.kv_store_key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.kv_store_key_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

StoreKeyConfig::~StoreKeyConfig() {
  // @@protoc_insertion_point(destructor:cosmos.app.runtime.v1alpha1.StoreKeyConfig)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StoreKeyConfig::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.module_name_.Destroy();
  _impl_.kv_store_key_.Destroy();
}

void StoreKeyConfig::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StoreKeyConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.app.runtime.v1alpha1.StoreKeyConfig)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.module_name_.ClearToEmpty();
  _impl_.kv_store_key_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StoreKeyConfig::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string module_name = 1 [json_name = "moduleName"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_module_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.app.runtime.v1alpha1.StoreKeyConfig.module_name"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string kv_store_key = 2 [json_name = "kvStoreKey"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_kv_store_key();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos.app.runtime.v1alpha1.StoreKeyConfig.kv_store_key"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* StoreKeyConfig::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.app.runtime.v1alpha1.StoreKeyConfig)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string module_name = 1 [json_name = "moduleName"];
  if (!this->_internal_module_name().empty()) {
    const std::string& _s = this->_internal_module_name();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.app.runtime.v1alpha1.StoreKeyConfig.module_name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string kv_store_key = 2 [json_name = "kvStoreKey"];
  if (!this->_internal_kv_store_key().empty()) {
    const std::string& _s = this->_internal_kv_store_key();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "cosmos.app.runtime.v1alpha1.StoreKeyConfig.kv_store_key");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.app.runtime.v1alpha1.StoreKeyConfig)
  return target;
}

::size_t StoreKeyConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.app.runtime.v1alpha1.StoreKeyConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string module_name = 1 [json_name = "moduleName"];
  if (!this->_internal_module_name().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_module_name());
  }

  // string kv_store_key = 2 [json_name = "kvStoreKey"];
  if (!this->_internal_kv_store_key().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_kv_store_key());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StoreKeyConfig::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StoreKeyConfig::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StoreKeyConfig::GetClassData() const { return &_class_data_; }


void StoreKeyConfig::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StoreKeyConfig*>(&to_msg);
  auto& from = static_cast<const StoreKeyConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.app.runtime.v1alpha1.StoreKeyConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_module_name().empty()) {
    _this->_internal_set_module_name(from._internal_module_name());
  }
  if (!from._internal_kv_store_key().empty()) {
    _this->_internal_set_kv_store_key(from._internal_kv_store_key());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StoreKeyConfig::CopyFrom(const StoreKeyConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.app.runtime.v1alpha1.StoreKeyConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoreKeyConfig::IsInitialized() const {
  return true;
}

void StoreKeyConfig::InternalSwap(StoreKeyConfig* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.module_name_, lhs_arena,
                                       &other->_impl_.module_name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.kv_store_key_, lhs_arena,
                                       &other->_impl_.kv_store_key_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata StoreKeyConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_2fapp_2fruntime_2fv1alpha1_2fmodule_2eproto_getter, &descriptor_table_cosmos_2fapp_2fruntime_2fv1alpha1_2fmodule_2eproto_once,
      file_level_metadata_cosmos_2fapp_2fruntime_2fv1alpha1_2fmodule_2eproto[1]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha1
}  // namespace runtime
}  // namespace app
}  // namespace cosmos
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::cosmos::app::runtime::v1alpha1::Module*
Arena::CreateMaybeMessage< ::cosmos::app::runtime::v1alpha1::Module >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::app::runtime::v1alpha1::Module >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::app::runtime::v1alpha1::StoreKeyConfig*
Arena::CreateMaybeMessage< ::cosmos::app::runtime::v1alpha1::StoreKeyConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::app::runtime::v1alpha1::StoreKeyConfig >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
