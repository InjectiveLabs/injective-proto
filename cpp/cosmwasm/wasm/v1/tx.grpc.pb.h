// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: cosmwasm/wasm/v1/tx.proto
#ifndef GRPC_cosmwasm_2fwasm_2fv1_2ftx_2eproto__INCLUDED
#define GRPC_cosmwasm_2fwasm_2fv1_2ftx_2eproto__INCLUDED

#include "cosmwasm/wasm/v1/tx.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace cosmwasm {
namespace wasm {
namespace v1 {

// Msg defines the wasm Msg service.
class Msg final {
 public:
  static constexpr char const* service_full_name() {
    return "cosmwasm.wasm.v1.Msg";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // StoreCode to submit Wasm code to the system
    virtual ::grpc::Status StoreCode(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgStoreCode& request, ::cosmwasm::wasm::v1::MsgStoreCodeResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgStoreCodeResponse>> AsyncStoreCode(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgStoreCode& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgStoreCodeResponse>>(AsyncStoreCodeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgStoreCodeResponse>> PrepareAsyncStoreCode(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgStoreCode& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgStoreCodeResponse>>(PrepareAsyncStoreCodeRaw(context, request, cq));
    }
    //  InstantiateContract creates a new smart contract instance for the given
    //  code id.
    virtual ::grpc::Status InstantiateContract(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgInstantiateContract& request, ::cosmwasm::wasm::v1::MsgInstantiateContractResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgInstantiateContractResponse>> AsyncInstantiateContract(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgInstantiateContract& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgInstantiateContractResponse>>(AsyncInstantiateContractRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgInstantiateContractResponse>> PrepareAsyncInstantiateContract(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgInstantiateContract& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgInstantiateContractResponse>>(PrepareAsyncInstantiateContractRaw(context, request, cq));
    }
    //  InstantiateContract2 creates a new smart contract instance for the given
    //  code id with a predictable address
    virtual ::grpc::Status InstantiateContract2(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgInstantiateContract2& request, ::cosmwasm::wasm::v1::MsgInstantiateContract2Response* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgInstantiateContract2Response>> AsyncInstantiateContract2(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgInstantiateContract2& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgInstantiateContract2Response>>(AsyncInstantiateContract2Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgInstantiateContract2Response>> PrepareAsyncInstantiateContract2(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgInstantiateContract2& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgInstantiateContract2Response>>(PrepareAsyncInstantiateContract2Raw(context, request, cq));
    }
    // Execute submits the given message data to a smart contract
    virtual ::grpc::Status ExecuteContract(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgExecuteContract& request, ::cosmwasm::wasm::v1::MsgExecuteContractResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgExecuteContractResponse>> AsyncExecuteContract(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgExecuteContract& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgExecuteContractResponse>>(AsyncExecuteContractRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgExecuteContractResponse>> PrepareAsyncExecuteContract(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgExecuteContract& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgExecuteContractResponse>>(PrepareAsyncExecuteContractRaw(context, request, cq));
    }
    // Migrate runs a code upgrade/ downgrade for a smart contract
    virtual ::grpc::Status MigrateContract(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgMigrateContract& request, ::cosmwasm::wasm::v1::MsgMigrateContractResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgMigrateContractResponse>> AsyncMigrateContract(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgMigrateContract& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgMigrateContractResponse>>(AsyncMigrateContractRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgMigrateContractResponse>> PrepareAsyncMigrateContract(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgMigrateContract& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgMigrateContractResponse>>(PrepareAsyncMigrateContractRaw(context, request, cq));
    }
    // UpdateAdmin sets a new   admin for a smart contract
    virtual ::grpc::Status UpdateAdmin(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUpdateAdmin& request, ::cosmwasm::wasm::v1::MsgUpdateAdminResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgUpdateAdminResponse>> AsyncUpdateAdmin(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUpdateAdmin& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgUpdateAdminResponse>>(AsyncUpdateAdminRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgUpdateAdminResponse>> PrepareAsyncUpdateAdmin(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUpdateAdmin& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgUpdateAdminResponse>>(PrepareAsyncUpdateAdminRaw(context, request, cq));
    }
    // ClearAdmin removes any admin stored for a smart contract
    virtual ::grpc::Status ClearAdmin(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgClearAdmin& request, ::cosmwasm::wasm::v1::MsgClearAdminResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgClearAdminResponse>> AsyncClearAdmin(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgClearAdmin& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgClearAdminResponse>>(AsyncClearAdminRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgClearAdminResponse>> PrepareAsyncClearAdmin(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgClearAdmin& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgClearAdminResponse>>(PrepareAsyncClearAdminRaw(context, request, cq));
    }
    // UpdateInstantiateConfig updates instantiate config for a smart contract
    virtual ::grpc::Status UpdateInstantiateConfig(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfig& request, ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfigResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfigResponse>> AsyncUpdateInstantiateConfig(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfig& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfigResponse>>(AsyncUpdateInstantiateConfigRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfigResponse>> PrepareAsyncUpdateInstantiateConfig(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfig& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfigResponse>>(PrepareAsyncUpdateInstantiateConfigRaw(context, request, cq));
    }
    // UpdateParams defines a governance operation for updating the x/wasm
    // module parameters. The authority is defined in the keeper.
    //
    // Since: 0.40
    virtual ::grpc::Status UpdateParams(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUpdateParams& request, ::cosmwasm::wasm::v1::MsgUpdateParamsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgUpdateParamsResponse>> AsyncUpdateParams(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUpdateParams& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgUpdateParamsResponse>>(AsyncUpdateParamsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgUpdateParamsResponse>> PrepareAsyncUpdateParams(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUpdateParams& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgUpdateParamsResponse>>(PrepareAsyncUpdateParamsRaw(context, request, cq));
    }
    // SudoContract defines a governance operation for calling sudo
    // on a contract. The authority is defined in the keeper.
    //
    // Since: 0.40
    virtual ::grpc::Status SudoContract(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgSudoContract& request, ::cosmwasm::wasm::v1::MsgSudoContractResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgSudoContractResponse>> AsyncSudoContract(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgSudoContract& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgSudoContractResponse>>(AsyncSudoContractRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgSudoContractResponse>> PrepareAsyncSudoContract(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgSudoContract& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgSudoContractResponse>>(PrepareAsyncSudoContractRaw(context, request, cq));
    }
    // PinCodes defines a governance operation for pinning a set of
    // code ids in the wasmvm cache. The authority is defined in the keeper.
    //
    // Since: 0.40
    virtual ::grpc::Status PinCodes(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgPinCodes& request, ::cosmwasm::wasm::v1::MsgPinCodesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgPinCodesResponse>> AsyncPinCodes(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgPinCodes& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgPinCodesResponse>>(AsyncPinCodesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgPinCodesResponse>> PrepareAsyncPinCodes(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgPinCodes& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgPinCodesResponse>>(PrepareAsyncPinCodesRaw(context, request, cq));
    }
    // UnpinCodes defines a governance operation for unpinning a set of
    // code ids in the wasmvm cache. The authority is defined in the keeper.
    //
    // Since: 0.40
    virtual ::grpc::Status UnpinCodes(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUnpinCodes& request, ::cosmwasm::wasm::v1::MsgUnpinCodesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgUnpinCodesResponse>> AsyncUnpinCodes(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUnpinCodes& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgUnpinCodesResponse>>(AsyncUnpinCodesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgUnpinCodesResponse>> PrepareAsyncUnpinCodes(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUnpinCodes& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgUnpinCodesResponse>>(PrepareAsyncUnpinCodesRaw(context, request, cq));
    }
    // StoreAndInstantiateContract defines a governance operation for storing
    // and instantiating the contract. The authority is defined in the keeper.
    //
    // Since: 0.40
    virtual ::grpc::Status StoreAndInstantiateContract(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContract& request, ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContractResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContractResponse>> AsyncStoreAndInstantiateContract(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContract& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContractResponse>>(AsyncStoreAndInstantiateContractRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContractResponse>> PrepareAsyncStoreAndInstantiateContract(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContract& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContractResponse>>(PrepareAsyncStoreAndInstantiateContractRaw(context, request, cq));
    }
    // RemoveCodeUploadParamsAddresses defines a governance operation for
    // removing addresses from code upload params.
    // The authority is defined in the keeper.
    virtual ::grpc::Status RemoveCodeUploadParamsAddresses(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddresses& request, ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddressesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddressesResponse>> AsyncRemoveCodeUploadParamsAddresses(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddresses& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddressesResponse>>(AsyncRemoveCodeUploadParamsAddressesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddressesResponse>> PrepareAsyncRemoveCodeUploadParamsAddresses(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddresses& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddressesResponse>>(PrepareAsyncRemoveCodeUploadParamsAddressesRaw(context, request, cq));
    }
    // AddCodeUploadParamsAddresses defines a governance operation for
    // adding addresses to code upload params.
    // The authority is defined in the keeper.
    virtual ::grpc::Status AddCodeUploadParamsAddresses(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddresses& request, ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddressesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddressesResponse>> AsyncAddCodeUploadParamsAddresses(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddresses& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddressesResponse>>(AsyncAddCodeUploadParamsAddressesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddressesResponse>> PrepareAsyncAddCodeUploadParamsAddresses(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddresses& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddressesResponse>>(PrepareAsyncAddCodeUploadParamsAddressesRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // StoreCode to submit Wasm code to the system
      virtual void StoreCode(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgStoreCode* request, ::cosmwasm::wasm::v1::MsgStoreCodeResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void StoreCode(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgStoreCode* request, ::cosmwasm::wasm::v1::MsgStoreCodeResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      //  InstantiateContract creates a new smart contract instance for the given
      //  code id.
      virtual void InstantiateContract(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgInstantiateContract* request, ::cosmwasm::wasm::v1::MsgInstantiateContractResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void InstantiateContract(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgInstantiateContract* request, ::cosmwasm::wasm::v1::MsgInstantiateContractResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      //  InstantiateContract2 creates a new smart contract instance for the given
      //  code id with a predictable address
      virtual void InstantiateContract2(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgInstantiateContract2* request, ::cosmwasm::wasm::v1::MsgInstantiateContract2Response* response, std::function<void(::grpc::Status)>) = 0;
      virtual void InstantiateContract2(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgInstantiateContract2* request, ::cosmwasm::wasm::v1::MsgInstantiateContract2Response* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Execute submits the given message data to a smart contract
      virtual void ExecuteContract(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgExecuteContract* request, ::cosmwasm::wasm::v1::MsgExecuteContractResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ExecuteContract(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgExecuteContract* request, ::cosmwasm::wasm::v1::MsgExecuteContractResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Migrate runs a code upgrade/ downgrade for a smart contract
      virtual void MigrateContract(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgMigrateContract* request, ::cosmwasm::wasm::v1::MsgMigrateContractResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void MigrateContract(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgMigrateContract* request, ::cosmwasm::wasm::v1::MsgMigrateContractResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // UpdateAdmin sets a new   admin for a smart contract
      virtual void UpdateAdmin(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUpdateAdmin* request, ::cosmwasm::wasm::v1::MsgUpdateAdminResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateAdmin(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUpdateAdmin* request, ::cosmwasm::wasm::v1::MsgUpdateAdminResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // ClearAdmin removes any admin stored for a smart contract
      virtual void ClearAdmin(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgClearAdmin* request, ::cosmwasm::wasm::v1::MsgClearAdminResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ClearAdmin(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgClearAdmin* request, ::cosmwasm::wasm::v1::MsgClearAdminResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // UpdateInstantiateConfig updates instantiate config for a smart contract
      virtual void UpdateInstantiateConfig(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfig* request, ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfigResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateInstantiateConfig(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfig* request, ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfigResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // UpdateParams defines a governance operation for updating the x/wasm
      // module parameters. The authority is defined in the keeper.
      //
      // Since: 0.40
      virtual void UpdateParams(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUpdateParams* request, ::cosmwasm::wasm::v1::MsgUpdateParamsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateParams(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUpdateParams* request, ::cosmwasm::wasm::v1::MsgUpdateParamsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // SudoContract defines a governance operation for calling sudo
      // on a contract. The authority is defined in the keeper.
      //
      // Since: 0.40
      virtual void SudoContract(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgSudoContract* request, ::cosmwasm::wasm::v1::MsgSudoContractResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SudoContract(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgSudoContract* request, ::cosmwasm::wasm::v1::MsgSudoContractResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // PinCodes defines a governance operation for pinning a set of
      // code ids in the wasmvm cache. The authority is defined in the keeper.
      //
      // Since: 0.40
      virtual void PinCodes(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgPinCodes* request, ::cosmwasm::wasm::v1::MsgPinCodesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void PinCodes(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgPinCodes* request, ::cosmwasm::wasm::v1::MsgPinCodesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // UnpinCodes defines a governance operation for unpinning a set of
      // code ids in the wasmvm cache. The authority is defined in the keeper.
      //
      // Since: 0.40
      virtual void UnpinCodes(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUnpinCodes* request, ::cosmwasm::wasm::v1::MsgUnpinCodesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UnpinCodes(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUnpinCodes* request, ::cosmwasm::wasm::v1::MsgUnpinCodesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // StoreAndInstantiateContract defines a governance operation for storing
      // and instantiating the contract. The authority is defined in the keeper.
      //
      // Since: 0.40
      virtual void StoreAndInstantiateContract(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContract* request, ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContractResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void StoreAndInstantiateContract(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContract* request, ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContractResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // RemoveCodeUploadParamsAddresses defines a governance operation for
      // removing addresses from code upload params.
      // The authority is defined in the keeper.
      virtual void RemoveCodeUploadParamsAddresses(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddresses* request, ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddressesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RemoveCodeUploadParamsAddresses(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddresses* request, ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddressesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // AddCodeUploadParamsAddresses defines a governance operation for
      // adding addresses to code upload params.
      // The authority is defined in the keeper.
      virtual void AddCodeUploadParamsAddresses(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddresses* request, ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddressesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void AddCodeUploadParamsAddresses(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddresses* request, ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddressesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgStoreCodeResponse>* AsyncStoreCodeRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgStoreCode& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgStoreCodeResponse>* PrepareAsyncStoreCodeRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgStoreCode& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgInstantiateContractResponse>* AsyncInstantiateContractRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgInstantiateContract& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgInstantiateContractResponse>* PrepareAsyncInstantiateContractRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgInstantiateContract& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgInstantiateContract2Response>* AsyncInstantiateContract2Raw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgInstantiateContract2& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgInstantiateContract2Response>* PrepareAsyncInstantiateContract2Raw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgInstantiateContract2& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgExecuteContractResponse>* AsyncExecuteContractRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgExecuteContract& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgExecuteContractResponse>* PrepareAsyncExecuteContractRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgExecuteContract& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgMigrateContractResponse>* AsyncMigrateContractRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgMigrateContract& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgMigrateContractResponse>* PrepareAsyncMigrateContractRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgMigrateContract& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgUpdateAdminResponse>* AsyncUpdateAdminRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUpdateAdmin& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgUpdateAdminResponse>* PrepareAsyncUpdateAdminRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUpdateAdmin& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgClearAdminResponse>* AsyncClearAdminRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgClearAdmin& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgClearAdminResponse>* PrepareAsyncClearAdminRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgClearAdmin& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfigResponse>* AsyncUpdateInstantiateConfigRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfig& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfigResponse>* PrepareAsyncUpdateInstantiateConfigRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfig& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgUpdateParamsResponse>* AsyncUpdateParamsRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUpdateParams& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgUpdateParamsResponse>* PrepareAsyncUpdateParamsRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUpdateParams& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgSudoContractResponse>* AsyncSudoContractRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgSudoContract& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgSudoContractResponse>* PrepareAsyncSudoContractRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgSudoContract& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgPinCodesResponse>* AsyncPinCodesRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgPinCodes& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgPinCodesResponse>* PrepareAsyncPinCodesRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgPinCodes& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgUnpinCodesResponse>* AsyncUnpinCodesRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUnpinCodes& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgUnpinCodesResponse>* PrepareAsyncUnpinCodesRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUnpinCodes& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContractResponse>* AsyncStoreAndInstantiateContractRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContract& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContractResponse>* PrepareAsyncStoreAndInstantiateContractRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContract& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddressesResponse>* AsyncRemoveCodeUploadParamsAddressesRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddresses& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddressesResponse>* PrepareAsyncRemoveCodeUploadParamsAddressesRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddresses& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddressesResponse>* AsyncAddCodeUploadParamsAddressesRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddresses& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddressesResponse>* PrepareAsyncAddCodeUploadParamsAddressesRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddresses& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status StoreCode(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgStoreCode& request, ::cosmwasm::wasm::v1::MsgStoreCodeResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgStoreCodeResponse>> AsyncStoreCode(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgStoreCode& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgStoreCodeResponse>>(AsyncStoreCodeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgStoreCodeResponse>> PrepareAsyncStoreCode(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgStoreCode& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgStoreCodeResponse>>(PrepareAsyncStoreCodeRaw(context, request, cq));
    }
    ::grpc::Status InstantiateContract(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgInstantiateContract& request, ::cosmwasm::wasm::v1::MsgInstantiateContractResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgInstantiateContractResponse>> AsyncInstantiateContract(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgInstantiateContract& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgInstantiateContractResponse>>(AsyncInstantiateContractRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgInstantiateContractResponse>> PrepareAsyncInstantiateContract(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgInstantiateContract& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgInstantiateContractResponse>>(PrepareAsyncInstantiateContractRaw(context, request, cq));
    }
    ::grpc::Status InstantiateContract2(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgInstantiateContract2& request, ::cosmwasm::wasm::v1::MsgInstantiateContract2Response* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgInstantiateContract2Response>> AsyncInstantiateContract2(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgInstantiateContract2& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgInstantiateContract2Response>>(AsyncInstantiateContract2Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgInstantiateContract2Response>> PrepareAsyncInstantiateContract2(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgInstantiateContract2& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgInstantiateContract2Response>>(PrepareAsyncInstantiateContract2Raw(context, request, cq));
    }
    ::grpc::Status ExecuteContract(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgExecuteContract& request, ::cosmwasm::wasm::v1::MsgExecuteContractResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgExecuteContractResponse>> AsyncExecuteContract(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgExecuteContract& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgExecuteContractResponse>>(AsyncExecuteContractRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgExecuteContractResponse>> PrepareAsyncExecuteContract(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgExecuteContract& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgExecuteContractResponse>>(PrepareAsyncExecuteContractRaw(context, request, cq));
    }
    ::grpc::Status MigrateContract(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgMigrateContract& request, ::cosmwasm::wasm::v1::MsgMigrateContractResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgMigrateContractResponse>> AsyncMigrateContract(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgMigrateContract& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgMigrateContractResponse>>(AsyncMigrateContractRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgMigrateContractResponse>> PrepareAsyncMigrateContract(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgMigrateContract& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgMigrateContractResponse>>(PrepareAsyncMigrateContractRaw(context, request, cq));
    }
    ::grpc::Status UpdateAdmin(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUpdateAdmin& request, ::cosmwasm::wasm::v1::MsgUpdateAdminResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgUpdateAdminResponse>> AsyncUpdateAdmin(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUpdateAdmin& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgUpdateAdminResponse>>(AsyncUpdateAdminRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgUpdateAdminResponse>> PrepareAsyncUpdateAdmin(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUpdateAdmin& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgUpdateAdminResponse>>(PrepareAsyncUpdateAdminRaw(context, request, cq));
    }
    ::grpc::Status ClearAdmin(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgClearAdmin& request, ::cosmwasm::wasm::v1::MsgClearAdminResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgClearAdminResponse>> AsyncClearAdmin(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgClearAdmin& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgClearAdminResponse>>(AsyncClearAdminRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgClearAdminResponse>> PrepareAsyncClearAdmin(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgClearAdmin& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgClearAdminResponse>>(PrepareAsyncClearAdminRaw(context, request, cq));
    }
    ::grpc::Status UpdateInstantiateConfig(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfig& request, ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfigResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfigResponse>> AsyncUpdateInstantiateConfig(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfig& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfigResponse>>(AsyncUpdateInstantiateConfigRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfigResponse>> PrepareAsyncUpdateInstantiateConfig(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfig& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfigResponse>>(PrepareAsyncUpdateInstantiateConfigRaw(context, request, cq));
    }
    ::grpc::Status UpdateParams(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUpdateParams& request, ::cosmwasm::wasm::v1::MsgUpdateParamsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgUpdateParamsResponse>> AsyncUpdateParams(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUpdateParams& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgUpdateParamsResponse>>(AsyncUpdateParamsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgUpdateParamsResponse>> PrepareAsyncUpdateParams(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUpdateParams& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgUpdateParamsResponse>>(PrepareAsyncUpdateParamsRaw(context, request, cq));
    }
    ::grpc::Status SudoContract(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgSudoContract& request, ::cosmwasm::wasm::v1::MsgSudoContractResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgSudoContractResponse>> AsyncSudoContract(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgSudoContract& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgSudoContractResponse>>(AsyncSudoContractRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgSudoContractResponse>> PrepareAsyncSudoContract(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgSudoContract& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgSudoContractResponse>>(PrepareAsyncSudoContractRaw(context, request, cq));
    }
    ::grpc::Status PinCodes(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgPinCodes& request, ::cosmwasm::wasm::v1::MsgPinCodesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgPinCodesResponse>> AsyncPinCodes(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgPinCodes& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgPinCodesResponse>>(AsyncPinCodesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgPinCodesResponse>> PrepareAsyncPinCodes(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgPinCodes& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgPinCodesResponse>>(PrepareAsyncPinCodesRaw(context, request, cq));
    }
    ::grpc::Status UnpinCodes(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUnpinCodes& request, ::cosmwasm::wasm::v1::MsgUnpinCodesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgUnpinCodesResponse>> AsyncUnpinCodes(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUnpinCodes& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgUnpinCodesResponse>>(AsyncUnpinCodesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgUnpinCodesResponse>> PrepareAsyncUnpinCodes(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUnpinCodes& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgUnpinCodesResponse>>(PrepareAsyncUnpinCodesRaw(context, request, cq));
    }
    ::grpc::Status StoreAndInstantiateContract(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContract& request, ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContractResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContractResponse>> AsyncStoreAndInstantiateContract(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContract& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContractResponse>>(AsyncStoreAndInstantiateContractRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContractResponse>> PrepareAsyncStoreAndInstantiateContract(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContract& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContractResponse>>(PrepareAsyncStoreAndInstantiateContractRaw(context, request, cq));
    }
    ::grpc::Status RemoveCodeUploadParamsAddresses(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddresses& request, ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddressesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddressesResponse>> AsyncRemoveCodeUploadParamsAddresses(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddresses& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddressesResponse>>(AsyncRemoveCodeUploadParamsAddressesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddressesResponse>> PrepareAsyncRemoveCodeUploadParamsAddresses(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddresses& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddressesResponse>>(PrepareAsyncRemoveCodeUploadParamsAddressesRaw(context, request, cq));
    }
    ::grpc::Status AddCodeUploadParamsAddresses(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddresses& request, ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddressesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddressesResponse>> AsyncAddCodeUploadParamsAddresses(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddresses& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddressesResponse>>(AsyncAddCodeUploadParamsAddressesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddressesResponse>> PrepareAsyncAddCodeUploadParamsAddresses(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddresses& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddressesResponse>>(PrepareAsyncAddCodeUploadParamsAddressesRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void StoreCode(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgStoreCode* request, ::cosmwasm::wasm::v1::MsgStoreCodeResponse* response, std::function<void(::grpc::Status)>) override;
      void StoreCode(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgStoreCode* request, ::cosmwasm::wasm::v1::MsgStoreCodeResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void InstantiateContract(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgInstantiateContract* request, ::cosmwasm::wasm::v1::MsgInstantiateContractResponse* response, std::function<void(::grpc::Status)>) override;
      void InstantiateContract(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgInstantiateContract* request, ::cosmwasm::wasm::v1::MsgInstantiateContractResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void InstantiateContract2(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgInstantiateContract2* request, ::cosmwasm::wasm::v1::MsgInstantiateContract2Response* response, std::function<void(::grpc::Status)>) override;
      void InstantiateContract2(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgInstantiateContract2* request, ::cosmwasm::wasm::v1::MsgInstantiateContract2Response* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ExecuteContract(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgExecuteContract* request, ::cosmwasm::wasm::v1::MsgExecuteContractResponse* response, std::function<void(::grpc::Status)>) override;
      void ExecuteContract(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgExecuteContract* request, ::cosmwasm::wasm::v1::MsgExecuteContractResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void MigrateContract(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgMigrateContract* request, ::cosmwasm::wasm::v1::MsgMigrateContractResponse* response, std::function<void(::grpc::Status)>) override;
      void MigrateContract(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgMigrateContract* request, ::cosmwasm::wasm::v1::MsgMigrateContractResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateAdmin(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUpdateAdmin* request, ::cosmwasm::wasm::v1::MsgUpdateAdminResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateAdmin(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUpdateAdmin* request, ::cosmwasm::wasm::v1::MsgUpdateAdminResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ClearAdmin(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgClearAdmin* request, ::cosmwasm::wasm::v1::MsgClearAdminResponse* response, std::function<void(::grpc::Status)>) override;
      void ClearAdmin(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgClearAdmin* request, ::cosmwasm::wasm::v1::MsgClearAdminResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateInstantiateConfig(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfig* request, ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfigResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateInstantiateConfig(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfig* request, ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfigResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateParams(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUpdateParams* request, ::cosmwasm::wasm::v1::MsgUpdateParamsResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateParams(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUpdateParams* request, ::cosmwasm::wasm::v1::MsgUpdateParamsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SudoContract(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgSudoContract* request, ::cosmwasm::wasm::v1::MsgSudoContractResponse* response, std::function<void(::grpc::Status)>) override;
      void SudoContract(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgSudoContract* request, ::cosmwasm::wasm::v1::MsgSudoContractResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void PinCodes(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgPinCodes* request, ::cosmwasm::wasm::v1::MsgPinCodesResponse* response, std::function<void(::grpc::Status)>) override;
      void PinCodes(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgPinCodes* request, ::cosmwasm::wasm::v1::MsgPinCodesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UnpinCodes(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUnpinCodes* request, ::cosmwasm::wasm::v1::MsgUnpinCodesResponse* response, std::function<void(::grpc::Status)>) override;
      void UnpinCodes(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUnpinCodes* request, ::cosmwasm::wasm::v1::MsgUnpinCodesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void StoreAndInstantiateContract(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContract* request, ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContractResponse* response, std::function<void(::grpc::Status)>) override;
      void StoreAndInstantiateContract(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContract* request, ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContractResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void RemoveCodeUploadParamsAddresses(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddresses* request, ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddressesResponse* response, std::function<void(::grpc::Status)>) override;
      void RemoveCodeUploadParamsAddresses(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddresses* request, ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddressesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void AddCodeUploadParamsAddresses(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddresses* request, ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddressesResponse* response, std::function<void(::grpc::Status)>) override;
      void AddCodeUploadParamsAddresses(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddresses* request, ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddressesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgStoreCodeResponse>* AsyncStoreCodeRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgStoreCode& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgStoreCodeResponse>* PrepareAsyncStoreCodeRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgStoreCode& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgInstantiateContractResponse>* AsyncInstantiateContractRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgInstantiateContract& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgInstantiateContractResponse>* PrepareAsyncInstantiateContractRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgInstantiateContract& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgInstantiateContract2Response>* AsyncInstantiateContract2Raw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgInstantiateContract2& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgInstantiateContract2Response>* PrepareAsyncInstantiateContract2Raw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgInstantiateContract2& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgExecuteContractResponse>* AsyncExecuteContractRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgExecuteContract& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgExecuteContractResponse>* PrepareAsyncExecuteContractRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgExecuteContract& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgMigrateContractResponse>* AsyncMigrateContractRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgMigrateContract& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgMigrateContractResponse>* PrepareAsyncMigrateContractRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgMigrateContract& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgUpdateAdminResponse>* AsyncUpdateAdminRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUpdateAdmin& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgUpdateAdminResponse>* PrepareAsyncUpdateAdminRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUpdateAdmin& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgClearAdminResponse>* AsyncClearAdminRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgClearAdmin& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgClearAdminResponse>* PrepareAsyncClearAdminRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgClearAdmin& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfigResponse>* AsyncUpdateInstantiateConfigRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfig& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfigResponse>* PrepareAsyncUpdateInstantiateConfigRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfig& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgUpdateParamsResponse>* AsyncUpdateParamsRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUpdateParams& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgUpdateParamsResponse>* PrepareAsyncUpdateParamsRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUpdateParams& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgSudoContractResponse>* AsyncSudoContractRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgSudoContract& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgSudoContractResponse>* PrepareAsyncSudoContractRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgSudoContract& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgPinCodesResponse>* AsyncPinCodesRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgPinCodes& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgPinCodesResponse>* PrepareAsyncPinCodesRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgPinCodes& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgUnpinCodesResponse>* AsyncUnpinCodesRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUnpinCodes& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgUnpinCodesResponse>* PrepareAsyncUnpinCodesRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgUnpinCodes& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContractResponse>* AsyncStoreAndInstantiateContractRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContract& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContractResponse>* PrepareAsyncStoreAndInstantiateContractRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContract& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddressesResponse>* AsyncRemoveCodeUploadParamsAddressesRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddresses& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddressesResponse>* PrepareAsyncRemoveCodeUploadParamsAddressesRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddresses& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddressesResponse>* AsyncAddCodeUploadParamsAddressesRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddresses& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddressesResponse>* PrepareAsyncAddCodeUploadParamsAddressesRaw(::grpc::ClientContext* context, const ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddresses& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_StoreCode_;
    const ::grpc::internal::RpcMethod rpcmethod_InstantiateContract_;
    const ::grpc::internal::RpcMethod rpcmethod_InstantiateContract2_;
    const ::grpc::internal::RpcMethod rpcmethod_ExecuteContract_;
    const ::grpc::internal::RpcMethod rpcmethod_MigrateContract_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateAdmin_;
    const ::grpc::internal::RpcMethod rpcmethod_ClearAdmin_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateInstantiateConfig_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateParams_;
    const ::grpc::internal::RpcMethod rpcmethod_SudoContract_;
    const ::grpc::internal::RpcMethod rpcmethod_PinCodes_;
    const ::grpc::internal::RpcMethod rpcmethod_UnpinCodes_;
    const ::grpc::internal::RpcMethod rpcmethod_StoreAndInstantiateContract_;
    const ::grpc::internal::RpcMethod rpcmethod_RemoveCodeUploadParamsAddresses_;
    const ::grpc::internal::RpcMethod rpcmethod_AddCodeUploadParamsAddresses_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // StoreCode to submit Wasm code to the system
    virtual ::grpc::Status StoreCode(::grpc::ServerContext* context, const ::cosmwasm::wasm::v1::MsgStoreCode* request, ::cosmwasm::wasm::v1::MsgStoreCodeResponse* response);
    //  InstantiateContract creates a new smart contract instance for the given
    //  code id.
    virtual ::grpc::Status InstantiateContract(::grpc::ServerContext* context, const ::cosmwasm::wasm::v1::MsgInstantiateContract* request, ::cosmwasm::wasm::v1::MsgInstantiateContractResponse* response);
    //  InstantiateContract2 creates a new smart contract instance for the given
    //  code id with a predictable address
    virtual ::grpc::Status InstantiateContract2(::grpc::ServerContext* context, const ::cosmwasm::wasm::v1::MsgInstantiateContract2* request, ::cosmwasm::wasm::v1::MsgInstantiateContract2Response* response);
    // Execute submits the given message data to a smart contract
    virtual ::grpc::Status ExecuteContract(::grpc::ServerContext* context, const ::cosmwasm::wasm::v1::MsgExecuteContract* request, ::cosmwasm::wasm::v1::MsgExecuteContractResponse* response);
    // Migrate runs a code upgrade/ downgrade for a smart contract
    virtual ::grpc::Status MigrateContract(::grpc::ServerContext* context, const ::cosmwasm::wasm::v1::MsgMigrateContract* request, ::cosmwasm::wasm::v1::MsgMigrateContractResponse* response);
    // UpdateAdmin sets a new   admin for a smart contract
    virtual ::grpc::Status UpdateAdmin(::grpc::ServerContext* context, const ::cosmwasm::wasm::v1::MsgUpdateAdmin* request, ::cosmwasm::wasm::v1::MsgUpdateAdminResponse* response);
    // ClearAdmin removes any admin stored for a smart contract
    virtual ::grpc::Status ClearAdmin(::grpc::ServerContext* context, const ::cosmwasm::wasm::v1::MsgClearAdmin* request, ::cosmwasm::wasm::v1::MsgClearAdminResponse* response);
    // UpdateInstantiateConfig updates instantiate config for a smart contract
    virtual ::grpc::Status UpdateInstantiateConfig(::grpc::ServerContext* context, const ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfig* request, ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfigResponse* response);
    // UpdateParams defines a governance operation for updating the x/wasm
    // module parameters. The authority is defined in the keeper.
    //
    // Since: 0.40
    virtual ::grpc::Status UpdateParams(::grpc::ServerContext* context, const ::cosmwasm::wasm::v1::MsgUpdateParams* request, ::cosmwasm::wasm::v1::MsgUpdateParamsResponse* response);
    // SudoContract defines a governance operation for calling sudo
    // on a contract. The authority is defined in the keeper.
    //
    // Since: 0.40
    virtual ::grpc::Status SudoContract(::grpc::ServerContext* context, const ::cosmwasm::wasm::v1::MsgSudoContract* request, ::cosmwasm::wasm::v1::MsgSudoContractResponse* response);
    // PinCodes defines a governance operation for pinning a set of
    // code ids in the wasmvm cache. The authority is defined in the keeper.
    //
    // Since: 0.40
    virtual ::grpc::Status PinCodes(::grpc::ServerContext* context, const ::cosmwasm::wasm::v1::MsgPinCodes* request, ::cosmwasm::wasm::v1::MsgPinCodesResponse* response);
    // UnpinCodes defines a governance operation for unpinning a set of
    // code ids in the wasmvm cache. The authority is defined in the keeper.
    //
    // Since: 0.40
    virtual ::grpc::Status UnpinCodes(::grpc::ServerContext* context, const ::cosmwasm::wasm::v1::MsgUnpinCodes* request, ::cosmwasm::wasm::v1::MsgUnpinCodesResponse* response);
    // StoreAndInstantiateContract defines a governance operation for storing
    // and instantiating the contract. The authority is defined in the keeper.
    //
    // Since: 0.40
    virtual ::grpc::Status StoreAndInstantiateContract(::grpc::ServerContext* context, const ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContract* request, ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContractResponse* response);
    // RemoveCodeUploadParamsAddresses defines a governance operation for
    // removing addresses from code upload params.
    // The authority is defined in the keeper.
    virtual ::grpc::Status RemoveCodeUploadParamsAddresses(::grpc::ServerContext* context, const ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddresses* request, ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddressesResponse* response);
    // AddCodeUploadParamsAddresses defines a governance operation for
    // adding addresses to code upload params.
    // The authority is defined in the keeper.
    virtual ::grpc::Status AddCodeUploadParamsAddresses(::grpc::ServerContext* context, const ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddresses* request, ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddressesResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_StoreCode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_StoreCode() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_StoreCode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StoreCode(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgStoreCode* /*request*/, ::cosmwasm::wasm::v1::MsgStoreCodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStoreCode(::grpc::ServerContext* context, ::cosmwasm::wasm::v1::MsgStoreCode* request, ::grpc::ServerAsyncResponseWriter< ::cosmwasm::wasm::v1::MsgStoreCodeResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_InstantiateContract : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_InstantiateContract() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_InstantiateContract() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InstantiateContract(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgInstantiateContract* /*request*/, ::cosmwasm::wasm::v1::MsgInstantiateContractResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInstantiateContract(::grpc::ServerContext* context, ::cosmwasm::wasm::v1::MsgInstantiateContract* request, ::grpc::ServerAsyncResponseWriter< ::cosmwasm::wasm::v1::MsgInstantiateContractResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_InstantiateContract2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_InstantiateContract2() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_InstantiateContract2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InstantiateContract2(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgInstantiateContract2* /*request*/, ::cosmwasm::wasm::v1::MsgInstantiateContract2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInstantiateContract2(::grpc::ServerContext* context, ::cosmwasm::wasm::v1::MsgInstantiateContract2* request, ::grpc::ServerAsyncResponseWriter< ::cosmwasm::wasm::v1::MsgInstantiateContract2Response>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ExecuteContract : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ExecuteContract() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_ExecuteContract() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteContract(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgExecuteContract* /*request*/, ::cosmwasm::wasm::v1::MsgExecuteContractResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteContract(::grpc::ServerContext* context, ::cosmwasm::wasm::v1::MsgExecuteContract* request, ::grpc::ServerAsyncResponseWriter< ::cosmwasm::wasm::v1::MsgExecuteContractResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_MigrateContract : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_MigrateContract() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_MigrateContract() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MigrateContract(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgMigrateContract* /*request*/, ::cosmwasm::wasm::v1::MsgMigrateContractResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestMigrateContract(::grpc::ServerContext* context, ::cosmwasm::wasm::v1::MsgMigrateContract* request, ::grpc::ServerAsyncResponseWriter< ::cosmwasm::wasm::v1::MsgMigrateContractResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateAdmin : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateAdmin() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_UpdateAdmin() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateAdmin(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgUpdateAdmin* /*request*/, ::cosmwasm::wasm::v1::MsgUpdateAdminResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateAdmin(::grpc::ServerContext* context, ::cosmwasm::wasm::v1::MsgUpdateAdmin* request, ::grpc::ServerAsyncResponseWriter< ::cosmwasm::wasm::v1::MsgUpdateAdminResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ClearAdmin : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ClearAdmin() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_ClearAdmin() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ClearAdmin(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgClearAdmin* /*request*/, ::cosmwasm::wasm::v1::MsgClearAdminResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestClearAdmin(::grpc::ServerContext* context, ::cosmwasm::wasm::v1::MsgClearAdmin* request, ::grpc::ServerAsyncResponseWriter< ::cosmwasm::wasm::v1::MsgClearAdminResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateInstantiateConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateInstantiateConfig() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_UpdateInstantiateConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateInstantiateConfig(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfig* /*request*/, ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateInstantiateConfig(::grpc::ServerContext* context, ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfig* request, ::grpc::ServerAsyncResponseWriter< ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfigResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateParams() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_UpdateParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateParams(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgUpdateParams* /*request*/, ::cosmwasm::wasm::v1::MsgUpdateParamsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateParams(::grpc::ServerContext* context, ::cosmwasm::wasm::v1::MsgUpdateParams* request, ::grpc::ServerAsyncResponseWriter< ::cosmwasm::wasm::v1::MsgUpdateParamsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SudoContract : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SudoContract() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_SudoContract() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SudoContract(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgSudoContract* /*request*/, ::cosmwasm::wasm::v1::MsgSudoContractResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSudoContract(::grpc::ServerContext* context, ::cosmwasm::wasm::v1::MsgSudoContract* request, ::grpc::ServerAsyncResponseWriter< ::cosmwasm::wasm::v1::MsgSudoContractResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PinCodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PinCodes() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_PinCodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PinCodes(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgPinCodes* /*request*/, ::cosmwasm::wasm::v1::MsgPinCodesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPinCodes(::grpc::ServerContext* context, ::cosmwasm::wasm::v1::MsgPinCodes* request, ::grpc::ServerAsyncResponseWriter< ::cosmwasm::wasm::v1::MsgPinCodesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UnpinCodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UnpinCodes() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_UnpinCodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnpinCodes(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgUnpinCodes* /*request*/, ::cosmwasm::wasm::v1::MsgUnpinCodesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUnpinCodes(::grpc::ServerContext* context, ::cosmwasm::wasm::v1::MsgUnpinCodes* request, ::grpc::ServerAsyncResponseWriter< ::cosmwasm::wasm::v1::MsgUnpinCodesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_StoreAndInstantiateContract : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_StoreAndInstantiateContract() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_StoreAndInstantiateContract() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StoreAndInstantiateContract(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContract* /*request*/, ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContractResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStoreAndInstantiateContract(::grpc::ServerContext* context, ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContract* request, ::grpc::ServerAsyncResponseWriter< ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContractResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RemoveCodeUploadParamsAddresses : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RemoveCodeUploadParamsAddresses() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_RemoveCodeUploadParamsAddresses() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveCodeUploadParamsAddresses(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddresses* /*request*/, ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddressesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveCodeUploadParamsAddresses(::grpc::ServerContext* context, ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddresses* request, ::grpc::ServerAsyncResponseWriter< ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddressesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AddCodeUploadParamsAddresses : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_AddCodeUploadParamsAddresses() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_AddCodeUploadParamsAddresses() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddCodeUploadParamsAddresses(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddresses* /*request*/, ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddressesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddCodeUploadParamsAddresses(::grpc::ServerContext* context, ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddresses* request, ::grpc::ServerAsyncResponseWriter< ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddressesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_StoreCode<WithAsyncMethod_InstantiateContract<WithAsyncMethod_InstantiateContract2<WithAsyncMethod_ExecuteContract<WithAsyncMethod_MigrateContract<WithAsyncMethod_UpdateAdmin<WithAsyncMethod_ClearAdmin<WithAsyncMethod_UpdateInstantiateConfig<WithAsyncMethod_UpdateParams<WithAsyncMethod_SudoContract<WithAsyncMethod_PinCodes<WithAsyncMethod_UnpinCodes<WithAsyncMethod_StoreAndInstantiateContract<WithAsyncMethod_RemoveCodeUploadParamsAddresses<WithAsyncMethod_AddCodeUploadParamsAddresses<Service > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_StoreCode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_StoreCode() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::cosmwasm::wasm::v1::MsgStoreCode, ::cosmwasm::wasm::v1::MsgStoreCodeResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::cosmwasm::wasm::v1::MsgStoreCode* request, ::cosmwasm::wasm::v1::MsgStoreCodeResponse* response) { return this->StoreCode(context, request, response); }));}
    void SetMessageAllocatorFor_StoreCode(
        ::grpc::MessageAllocator< ::cosmwasm::wasm::v1::MsgStoreCode, ::cosmwasm::wasm::v1::MsgStoreCodeResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::cosmwasm::wasm::v1::MsgStoreCode, ::cosmwasm::wasm::v1::MsgStoreCodeResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_StoreCode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StoreCode(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgStoreCode* /*request*/, ::cosmwasm::wasm::v1::MsgStoreCodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* StoreCode(
      ::grpc::CallbackServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgStoreCode* /*request*/, ::cosmwasm::wasm::v1::MsgStoreCodeResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_InstantiateContract : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_InstantiateContract() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::cosmwasm::wasm::v1::MsgInstantiateContract, ::cosmwasm::wasm::v1::MsgInstantiateContractResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::cosmwasm::wasm::v1::MsgInstantiateContract* request, ::cosmwasm::wasm::v1::MsgInstantiateContractResponse* response) { return this->InstantiateContract(context, request, response); }));}
    void SetMessageAllocatorFor_InstantiateContract(
        ::grpc::MessageAllocator< ::cosmwasm::wasm::v1::MsgInstantiateContract, ::cosmwasm::wasm::v1::MsgInstantiateContractResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::cosmwasm::wasm::v1::MsgInstantiateContract, ::cosmwasm::wasm::v1::MsgInstantiateContractResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_InstantiateContract() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InstantiateContract(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgInstantiateContract* /*request*/, ::cosmwasm::wasm::v1::MsgInstantiateContractResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* InstantiateContract(
      ::grpc::CallbackServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgInstantiateContract* /*request*/, ::cosmwasm::wasm::v1::MsgInstantiateContractResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_InstantiateContract2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_InstantiateContract2() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::cosmwasm::wasm::v1::MsgInstantiateContract2, ::cosmwasm::wasm::v1::MsgInstantiateContract2Response>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::cosmwasm::wasm::v1::MsgInstantiateContract2* request, ::cosmwasm::wasm::v1::MsgInstantiateContract2Response* response) { return this->InstantiateContract2(context, request, response); }));}
    void SetMessageAllocatorFor_InstantiateContract2(
        ::grpc::MessageAllocator< ::cosmwasm::wasm::v1::MsgInstantiateContract2, ::cosmwasm::wasm::v1::MsgInstantiateContract2Response>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::cosmwasm::wasm::v1::MsgInstantiateContract2, ::cosmwasm::wasm::v1::MsgInstantiateContract2Response>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_InstantiateContract2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InstantiateContract2(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgInstantiateContract2* /*request*/, ::cosmwasm::wasm::v1::MsgInstantiateContract2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* InstantiateContract2(
      ::grpc::CallbackServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgInstantiateContract2* /*request*/, ::cosmwasm::wasm::v1::MsgInstantiateContract2Response* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ExecuteContract : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ExecuteContract() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::cosmwasm::wasm::v1::MsgExecuteContract, ::cosmwasm::wasm::v1::MsgExecuteContractResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::cosmwasm::wasm::v1::MsgExecuteContract* request, ::cosmwasm::wasm::v1::MsgExecuteContractResponse* response) { return this->ExecuteContract(context, request, response); }));}
    void SetMessageAllocatorFor_ExecuteContract(
        ::grpc::MessageAllocator< ::cosmwasm::wasm::v1::MsgExecuteContract, ::cosmwasm::wasm::v1::MsgExecuteContractResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::cosmwasm::wasm::v1::MsgExecuteContract, ::cosmwasm::wasm::v1::MsgExecuteContractResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ExecuteContract() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteContract(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgExecuteContract* /*request*/, ::cosmwasm::wasm::v1::MsgExecuteContractResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteContract(
      ::grpc::CallbackServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgExecuteContract* /*request*/, ::cosmwasm::wasm::v1::MsgExecuteContractResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_MigrateContract : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_MigrateContract() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::cosmwasm::wasm::v1::MsgMigrateContract, ::cosmwasm::wasm::v1::MsgMigrateContractResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::cosmwasm::wasm::v1::MsgMigrateContract* request, ::cosmwasm::wasm::v1::MsgMigrateContractResponse* response) { return this->MigrateContract(context, request, response); }));}
    void SetMessageAllocatorFor_MigrateContract(
        ::grpc::MessageAllocator< ::cosmwasm::wasm::v1::MsgMigrateContract, ::cosmwasm::wasm::v1::MsgMigrateContractResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::cosmwasm::wasm::v1::MsgMigrateContract, ::cosmwasm::wasm::v1::MsgMigrateContractResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_MigrateContract() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MigrateContract(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgMigrateContract* /*request*/, ::cosmwasm::wasm::v1::MsgMigrateContractResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* MigrateContract(
      ::grpc::CallbackServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgMigrateContract* /*request*/, ::cosmwasm::wasm::v1::MsgMigrateContractResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateAdmin : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateAdmin() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::cosmwasm::wasm::v1::MsgUpdateAdmin, ::cosmwasm::wasm::v1::MsgUpdateAdminResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::cosmwasm::wasm::v1::MsgUpdateAdmin* request, ::cosmwasm::wasm::v1::MsgUpdateAdminResponse* response) { return this->UpdateAdmin(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateAdmin(
        ::grpc::MessageAllocator< ::cosmwasm::wasm::v1::MsgUpdateAdmin, ::cosmwasm::wasm::v1::MsgUpdateAdminResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::cosmwasm::wasm::v1::MsgUpdateAdmin, ::cosmwasm::wasm::v1::MsgUpdateAdminResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateAdmin() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateAdmin(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgUpdateAdmin* /*request*/, ::cosmwasm::wasm::v1::MsgUpdateAdminResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateAdmin(
      ::grpc::CallbackServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgUpdateAdmin* /*request*/, ::cosmwasm::wasm::v1::MsgUpdateAdminResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ClearAdmin : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ClearAdmin() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::cosmwasm::wasm::v1::MsgClearAdmin, ::cosmwasm::wasm::v1::MsgClearAdminResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::cosmwasm::wasm::v1::MsgClearAdmin* request, ::cosmwasm::wasm::v1::MsgClearAdminResponse* response) { return this->ClearAdmin(context, request, response); }));}
    void SetMessageAllocatorFor_ClearAdmin(
        ::grpc::MessageAllocator< ::cosmwasm::wasm::v1::MsgClearAdmin, ::cosmwasm::wasm::v1::MsgClearAdminResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::cosmwasm::wasm::v1::MsgClearAdmin, ::cosmwasm::wasm::v1::MsgClearAdminResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ClearAdmin() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ClearAdmin(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgClearAdmin* /*request*/, ::cosmwasm::wasm::v1::MsgClearAdminResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ClearAdmin(
      ::grpc::CallbackServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgClearAdmin* /*request*/, ::cosmwasm::wasm::v1::MsgClearAdminResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateInstantiateConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateInstantiateConfig() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfig, ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfigResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfig* request, ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfigResponse* response) { return this->UpdateInstantiateConfig(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateInstantiateConfig(
        ::grpc::MessageAllocator< ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfig, ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfigResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfig, ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfigResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateInstantiateConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateInstantiateConfig(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfig* /*request*/, ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateInstantiateConfig(
      ::grpc::CallbackServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfig* /*request*/, ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfigResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateParams() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::cosmwasm::wasm::v1::MsgUpdateParams, ::cosmwasm::wasm::v1::MsgUpdateParamsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::cosmwasm::wasm::v1::MsgUpdateParams* request, ::cosmwasm::wasm::v1::MsgUpdateParamsResponse* response) { return this->UpdateParams(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateParams(
        ::grpc::MessageAllocator< ::cosmwasm::wasm::v1::MsgUpdateParams, ::cosmwasm::wasm::v1::MsgUpdateParamsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::cosmwasm::wasm::v1::MsgUpdateParams, ::cosmwasm::wasm::v1::MsgUpdateParamsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateParams(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgUpdateParams* /*request*/, ::cosmwasm::wasm::v1::MsgUpdateParamsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateParams(
      ::grpc::CallbackServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgUpdateParams* /*request*/, ::cosmwasm::wasm::v1::MsgUpdateParamsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SudoContract : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SudoContract() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::cosmwasm::wasm::v1::MsgSudoContract, ::cosmwasm::wasm::v1::MsgSudoContractResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::cosmwasm::wasm::v1::MsgSudoContract* request, ::cosmwasm::wasm::v1::MsgSudoContractResponse* response) { return this->SudoContract(context, request, response); }));}
    void SetMessageAllocatorFor_SudoContract(
        ::grpc::MessageAllocator< ::cosmwasm::wasm::v1::MsgSudoContract, ::cosmwasm::wasm::v1::MsgSudoContractResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::cosmwasm::wasm::v1::MsgSudoContract, ::cosmwasm::wasm::v1::MsgSudoContractResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SudoContract() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SudoContract(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgSudoContract* /*request*/, ::cosmwasm::wasm::v1::MsgSudoContractResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SudoContract(
      ::grpc::CallbackServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgSudoContract* /*request*/, ::cosmwasm::wasm::v1::MsgSudoContractResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_PinCodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_PinCodes() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::cosmwasm::wasm::v1::MsgPinCodes, ::cosmwasm::wasm::v1::MsgPinCodesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::cosmwasm::wasm::v1::MsgPinCodes* request, ::cosmwasm::wasm::v1::MsgPinCodesResponse* response) { return this->PinCodes(context, request, response); }));}
    void SetMessageAllocatorFor_PinCodes(
        ::grpc::MessageAllocator< ::cosmwasm::wasm::v1::MsgPinCodes, ::cosmwasm::wasm::v1::MsgPinCodesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::cosmwasm::wasm::v1::MsgPinCodes, ::cosmwasm::wasm::v1::MsgPinCodesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_PinCodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PinCodes(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgPinCodes* /*request*/, ::cosmwasm::wasm::v1::MsgPinCodesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* PinCodes(
      ::grpc::CallbackServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgPinCodes* /*request*/, ::cosmwasm::wasm::v1::MsgPinCodesResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UnpinCodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UnpinCodes() {
      ::grpc::Service::MarkMethodCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::cosmwasm::wasm::v1::MsgUnpinCodes, ::cosmwasm::wasm::v1::MsgUnpinCodesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::cosmwasm::wasm::v1::MsgUnpinCodes* request, ::cosmwasm::wasm::v1::MsgUnpinCodesResponse* response) { return this->UnpinCodes(context, request, response); }));}
    void SetMessageAllocatorFor_UnpinCodes(
        ::grpc::MessageAllocator< ::cosmwasm::wasm::v1::MsgUnpinCodes, ::cosmwasm::wasm::v1::MsgUnpinCodesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(11);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::cosmwasm::wasm::v1::MsgUnpinCodes, ::cosmwasm::wasm::v1::MsgUnpinCodesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UnpinCodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnpinCodes(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgUnpinCodes* /*request*/, ::cosmwasm::wasm::v1::MsgUnpinCodesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UnpinCodes(
      ::grpc::CallbackServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgUnpinCodes* /*request*/, ::cosmwasm::wasm::v1::MsgUnpinCodesResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_StoreAndInstantiateContract : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_StoreAndInstantiateContract() {
      ::grpc::Service::MarkMethodCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContract, ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContractResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContract* request, ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContractResponse* response) { return this->StoreAndInstantiateContract(context, request, response); }));}
    void SetMessageAllocatorFor_StoreAndInstantiateContract(
        ::grpc::MessageAllocator< ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContract, ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContractResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(12);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContract, ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContractResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_StoreAndInstantiateContract() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StoreAndInstantiateContract(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContract* /*request*/, ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContractResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* StoreAndInstantiateContract(
      ::grpc::CallbackServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContract* /*request*/, ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContractResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_RemoveCodeUploadParamsAddresses : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_RemoveCodeUploadParamsAddresses() {
      ::grpc::Service::MarkMethodCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddresses, ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddressesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddresses* request, ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddressesResponse* response) { return this->RemoveCodeUploadParamsAddresses(context, request, response); }));}
    void SetMessageAllocatorFor_RemoveCodeUploadParamsAddresses(
        ::grpc::MessageAllocator< ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddresses, ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddressesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(13);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddresses, ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddressesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_RemoveCodeUploadParamsAddresses() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveCodeUploadParamsAddresses(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddresses* /*request*/, ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddressesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RemoveCodeUploadParamsAddresses(
      ::grpc::CallbackServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddresses* /*request*/, ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddressesResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_AddCodeUploadParamsAddresses : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_AddCodeUploadParamsAddresses() {
      ::grpc::Service::MarkMethodCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddresses, ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddressesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddresses* request, ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddressesResponse* response) { return this->AddCodeUploadParamsAddresses(context, request, response); }));}
    void SetMessageAllocatorFor_AddCodeUploadParamsAddresses(
        ::grpc::MessageAllocator< ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddresses, ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddressesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(14);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddresses, ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddressesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_AddCodeUploadParamsAddresses() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddCodeUploadParamsAddresses(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddresses* /*request*/, ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddressesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddCodeUploadParamsAddresses(
      ::grpc::CallbackServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddresses* /*request*/, ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddressesResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_StoreCode<WithCallbackMethod_InstantiateContract<WithCallbackMethod_InstantiateContract2<WithCallbackMethod_ExecuteContract<WithCallbackMethod_MigrateContract<WithCallbackMethod_UpdateAdmin<WithCallbackMethod_ClearAdmin<WithCallbackMethod_UpdateInstantiateConfig<WithCallbackMethod_UpdateParams<WithCallbackMethod_SudoContract<WithCallbackMethod_PinCodes<WithCallbackMethod_UnpinCodes<WithCallbackMethod_StoreAndInstantiateContract<WithCallbackMethod_RemoveCodeUploadParamsAddresses<WithCallbackMethod_AddCodeUploadParamsAddresses<Service > > > > > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_StoreCode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_StoreCode() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_StoreCode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StoreCode(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgStoreCode* /*request*/, ::cosmwasm::wasm::v1::MsgStoreCodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_InstantiateContract : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_InstantiateContract() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_InstantiateContract() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InstantiateContract(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgInstantiateContract* /*request*/, ::cosmwasm::wasm::v1::MsgInstantiateContractResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_InstantiateContract2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_InstantiateContract2() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_InstantiateContract2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InstantiateContract2(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgInstantiateContract2* /*request*/, ::cosmwasm::wasm::v1::MsgInstantiateContract2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ExecuteContract : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ExecuteContract() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_ExecuteContract() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteContract(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgExecuteContract* /*request*/, ::cosmwasm::wasm::v1::MsgExecuteContractResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_MigrateContract : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_MigrateContract() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_MigrateContract() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MigrateContract(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgMigrateContract* /*request*/, ::cosmwasm::wasm::v1::MsgMigrateContractResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateAdmin : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateAdmin() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_UpdateAdmin() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateAdmin(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgUpdateAdmin* /*request*/, ::cosmwasm::wasm::v1::MsgUpdateAdminResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ClearAdmin : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ClearAdmin() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_ClearAdmin() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ClearAdmin(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgClearAdmin* /*request*/, ::cosmwasm::wasm::v1::MsgClearAdminResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateInstantiateConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateInstantiateConfig() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_UpdateInstantiateConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateInstantiateConfig(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfig* /*request*/, ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateParams() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_UpdateParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateParams(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgUpdateParams* /*request*/, ::cosmwasm::wasm::v1::MsgUpdateParamsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SudoContract : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SudoContract() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_SudoContract() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SudoContract(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgSudoContract* /*request*/, ::cosmwasm::wasm::v1::MsgSudoContractResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PinCodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PinCodes() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_PinCodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PinCodes(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgPinCodes* /*request*/, ::cosmwasm::wasm::v1::MsgPinCodesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UnpinCodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UnpinCodes() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_UnpinCodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnpinCodes(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgUnpinCodes* /*request*/, ::cosmwasm::wasm::v1::MsgUnpinCodesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_StoreAndInstantiateContract : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_StoreAndInstantiateContract() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_StoreAndInstantiateContract() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StoreAndInstantiateContract(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContract* /*request*/, ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContractResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RemoveCodeUploadParamsAddresses : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RemoveCodeUploadParamsAddresses() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_RemoveCodeUploadParamsAddresses() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveCodeUploadParamsAddresses(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddresses* /*request*/, ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddressesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AddCodeUploadParamsAddresses : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_AddCodeUploadParamsAddresses() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_AddCodeUploadParamsAddresses() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddCodeUploadParamsAddresses(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddresses* /*request*/, ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddressesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_StoreCode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_StoreCode() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_StoreCode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StoreCode(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgStoreCode* /*request*/, ::cosmwasm::wasm::v1::MsgStoreCodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStoreCode(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_InstantiateContract : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_InstantiateContract() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_InstantiateContract() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InstantiateContract(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgInstantiateContract* /*request*/, ::cosmwasm::wasm::v1::MsgInstantiateContractResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInstantiateContract(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_InstantiateContract2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_InstantiateContract2() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_InstantiateContract2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InstantiateContract2(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgInstantiateContract2* /*request*/, ::cosmwasm::wasm::v1::MsgInstantiateContract2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInstantiateContract2(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ExecuteContract : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ExecuteContract() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_ExecuteContract() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteContract(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgExecuteContract* /*request*/, ::cosmwasm::wasm::v1::MsgExecuteContractResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteContract(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_MigrateContract : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_MigrateContract() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_MigrateContract() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MigrateContract(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgMigrateContract* /*request*/, ::cosmwasm::wasm::v1::MsgMigrateContractResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestMigrateContract(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateAdmin : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateAdmin() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_UpdateAdmin() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateAdmin(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgUpdateAdmin* /*request*/, ::cosmwasm::wasm::v1::MsgUpdateAdminResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateAdmin(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ClearAdmin : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ClearAdmin() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_ClearAdmin() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ClearAdmin(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgClearAdmin* /*request*/, ::cosmwasm::wasm::v1::MsgClearAdminResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestClearAdmin(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateInstantiateConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateInstantiateConfig() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_UpdateInstantiateConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateInstantiateConfig(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfig* /*request*/, ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateInstantiateConfig(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateParams() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_UpdateParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateParams(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgUpdateParams* /*request*/, ::cosmwasm::wasm::v1::MsgUpdateParamsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateParams(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SudoContract : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SudoContract() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_SudoContract() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SudoContract(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgSudoContract* /*request*/, ::cosmwasm::wasm::v1::MsgSudoContractResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSudoContract(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_PinCodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PinCodes() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_PinCodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PinCodes(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgPinCodes* /*request*/, ::cosmwasm::wasm::v1::MsgPinCodesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPinCodes(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UnpinCodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UnpinCodes() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_UnpinCodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnpinCodes(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgUnpinCodes* /*request*/, ::cosmwasm::wasm::v1::MsgUnpinCodesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUnpinCodes(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_StoreAndInstantiateContract : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_StoreAndInstantiateContract() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_StoreAndInstantiateContract() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StoreAndInstantiateContract(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContract* /*request*/, ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContractResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStoreAndInstantiateContract(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RemoveCodeUploadParamsAddresses : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RemoveCodeUploadParamsAddresses() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_RemoveCodeUploadParamsAddresses() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveCodeUploadParamsAddresses(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddresses* /*request*/, ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddressesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveCodeUploadParamsAddresses(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_AddCodeUploadParamsAddresses : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_AddCodeUploadParamsAddresses() {
      ::grpc::Service::MarkMethodRaw(14);
    }
    ~WithRawMethod_AddCodeUploadParamsAddresses() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddCodeUploadParamsAddresses(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddresses* /*request*/, ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddressesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddCodeUploadParamsAddresses(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_StoreCode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_StoreCode() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->StoreCode(context, request, response); }));
    }
    ~WithRawCallbackMethod_StoreCode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StoreCode(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgStoreCode* /*request*/, ::cosmwasm::wasm::v1::MsgStoreCodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* StoreCode(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_InstantiateContract : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_InstantiateContract() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->InstantiateContract(context, request, response); }));
    }
    ~WithRawCallbackMethod_InstantiateContract() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InstantiateContract(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgInstantiateContract* /*request*/, ::cosmwasm::wasm::v1::MsgInstantiateContractResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* InstantiateContract(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_InstantiateContract2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_InstantiateContract2() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->InstantiateContract2(context, request, response); }));
    }
    ~WithRawCallbackMethod_InstantiateContract2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InstantiateContract2(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgInstantiateContract2* /*request*/, ::cosmwasm::wasm::v1::MsgInstantiateContract2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* InstantiateContract2(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ExecuteContract : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ExecuteContract() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ExecuteContract(context, request, response); }));
    }
    ~WithRawCallbackMethod_ExecuteContract() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteContract(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgExecuteContract* /*request*/, ::cosmwasm::wasm::v1::MsgExecuteContractResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteContract(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_MigrateContract : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_MigrateContract() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->MigrateContract(context, request, response); }));
    }
    ~WithRawCallbackMethod_MigrateContract() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MigrateContract(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgMigrateContract* /*request*/, ::cosmwasm::wasm::v1::MsgMigrateContractResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* MigrateContract(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateAdmin : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateAdmin() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateAdmin(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateAdmin() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateAdmin(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgUpdateAdmin* /*request*/, ::cosmwasm::wasm::v1::MsgUpdateAdminResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateAdmin(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ClearAdmin : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ClearAdmin() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ClearAdmin(context, request, response); }));
    }
    ~WithRawCallbackMethod_ClearAdmin() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ClearAdmin(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgClearAdmin* /*request*/, ::cosmwasm::wasm::v1::MsgClearAdminResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ClearAdmin(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateInstantiateConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateInstantiateConfig() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateInstantiateConfig(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateInstantiateConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateInstantiateConfig(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfig* /*request*/, ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateInstantiateConfig(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateParams() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateParams(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateParams(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgUpdateParams* /*request*/, ::cosmwasm::wasm::v1::MsgUpdateParamsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateParams(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SudoContract : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SudoContract() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SudoContract(context, request, response); }));
    }
    ~WithRawCallbackMethod_SudoContract() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SudoContract(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgSudoContract* /*request*/, ::cosmwasm::wasm::v1::MsgSudoContractResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SudoContract(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_PinCodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_PinCodes() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->PinCodes(context, request, response); }));
    }
    ~WithRawCallbackMethod_PinCodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PinCodes(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgPinCodes* /*request*/, ::cosmwasm::wasm::v1::MsgPinCodesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* PinCodes(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UnpinCodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UnpinCodes() {
      ::grpc::Service::MarkMethodRawCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UnpinCodes(context, request, response); }));
    }
    ~WithRawCallbackMethod_UnpinCodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnpinCodes(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgUnpinCodes* /*request*/, ::cosmwasm::wasm::v1::MsgUnpinCodesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UnpinCodes(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_StoreAndInstantiateContract : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_StoreAndInstantiateContract() {
      ::grpc::Service::MarkMethodRawCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->StoreAndInstantiateContract(context, request, response); }));
    }
    ~WithRawCallbackMethod_StoreAndInstantiateContract() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StoreAndInstantiateContract(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContract* /*request*/, ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContractResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* StoreAndInstantiateContract(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_RemoveCodeUploadParamsAddresses : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_RemoveCodeUploadParamsAddresses() {
      ::grpc::Service::MarkMethodRawCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RemoveCodeUploadParamsAddresses(context, request, response); }));
    }
    ~WithRawCallbackMethod_RemoveCodeUploadParamsAddresses() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveCodeUploadParamsAddresses(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddresses* /*request*/, ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddressesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RemoveCodeUploadParamsAddresses(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_AddCodeUploadParamsAddresses : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_AddCodeUploadParamsAddresses() {
      ::grpc::Service::MarkMethodRawCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->AddCodeUploadParamsAddresses(context, request, response); }));
    }
    ~WithRawCallbackMethod_AddCodeUploadParamsAddresses() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddCodeUploadParamsAddresses(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddresses* /*request*/, ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddressesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddCodeUploadParamsAddresses(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_StoreCode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_StoreCode() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::cosmwasm::wasm::v1::MsgStoreCode, ::cosmwasm::wasm::v1::MsgStoreCodeResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::cosmwasm::wasm::v1::MsgStoreCode, ::cosmwasm::wasm::v1::MsgStoreCodeResponse>* streamer) {
                       return this->StreamedStoreCode(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_StoreCode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StoreCode(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgStoreCode* /*request*/, ::cosmwasm::wasm::v1::MsgStoreCodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStoreCode(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::cosmwasm::wasm::v1::MsgStoreCode,::cosmwasm::wasm::v1::MsgStoreCodeResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_InstantiateContract : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_InstantiateContract() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::cosmwasm::wasm::v1::MsgInstantiateContract, ::cosmwasm::wasm::v1::MsgInstantiateContractResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::cosmwasm::wasm::v1::MsgInstantiateContract, ::cosmwasm::wasm::v1::MsgInstantiateContractResponse>* streamer) {
                       return this->StreamedInstantiateContract(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_InstantiateContract() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status InstantiateContract(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgInstantiateContract* /*request*/, ::cosmwasm::wasm::v1::MsgInstantiateContractResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedInstantiateContract(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::cosmwasm::wasm::v1::MsgInstantiateContract,::cosmwasm::wasm::v1::MsgInstantiateContractResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_InstantiateContract2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_InstantiateContract2() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::cosmwasm::wasm::v1::MsgInstantiateContract2, ::cosmwasm::wasm::v1::MsgInstantiateContract2Response>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::cosmwasm::wasm::v1::MsgInstantiateContract2, ::cosmwasm::wasm::v1::MsgInstantiateContract2Response>* streamer) {
                       return this->StreamedInstantiateContract2(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_InstantiateContract2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status InstantiateContract2(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgInstantiateContract2* /*request*/, ::cosmwasm::wasm::v1::MsgInstantiateContract2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedInstantiateContract2(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::cosmwasm::wasm::v1::MsgInstantiateContract2,::cosmwasm::wasm::v1::MsgInstantiateContract2Response>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ExecuteContract : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ExecuteContract() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::cosmwasm::wasm::v1::MsgExecuteContract, ::cosmwasm::wasm::v1::MsgExecuteContractResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::cosmwasm::wasm::v1::MsgExecuteContract, ::cosmwasm::wasm::v1::MsgExecuteContractResponse>* streamer) {
                       return this->StreamedExecuteContract(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ExecuteContract() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ExecuteContract(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgExecuteContract* /*request*/, ::cosmwasm::wasm::v1::MsgExecuteContractResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedExecuteContract(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::cosmwasm::wasm::v1::MsgExecuteContract,::cosmwasm::wasm::v1::MsgExecuteContractResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_MigrateContract : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_MigrateContract() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::cosmwasm::wasm::v1::MsgMigrateContract, ::cosmwasm::wasm::v1::MsgMigrateContractResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::cosmwasm::wasm::v1::MsgMigrateContract, ::cosmwasm::wasm::v1::MsgMigrateContractResponse>* streamer) {
                       return this->StreamedMigrateContract(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_MigrateContract() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status MigrateContract(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgMigrateContract* /*request*/, ::cosmwasm::wasm::v1::MsgMigrateContractResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedMigrateContract(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::cosmwasm::wasm::v1::MsgMigrateContract,::cosmwasm::wasm::v1::MsgMigrateContractResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateAdmin : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateAdmin() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::cosmwasm::wasm::v1::MsgUpdateAdmin, ::cosmwasm::wasm::v1::MsgUpdateAdminResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::cosmwasm::wasm::v1::MsgUpdateAdmin, ::cosmwasm::wasm::v1::MsgUpdateAdminResponse>* streamer) {
                       return this->StreamedUpdateAdmin(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateAdmin() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateAdmin(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgUpdateAdmin* /*request*/, ::cosmwasm::wasm::v1::MsgUpdateAdminResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateAdmin(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::cosmwasm::wasm::v1::MsgUpdateAdmin,::cosmwasm::wasm::v1::MsgUpdateAdminResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ClearAdmin : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ClearAdmin() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::cosmwasm::wasm::v1::MsgClearAdmin, ::cosmwasm::wasm::v1::MsgClearAdminResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::cosmwasm::wasm::v1::MsgClearAdmin, ::cosmwasm::wasm::v1::MsgClearAdminResponse>* streamer) {
                       return this->StreamedClearAdmin(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ClearAdmin() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ClearAdmin(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgClearAdmin* /*request*/, ::cosmwasm::wasm::v1::MsgClearAdminResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedClearAdmin(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::cosmwasm::wasm::v1::MsgClearAdmin,::cosmwasm::wasm::v1::MsgClearAdminResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateInstantiateConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateInstantiateConfig() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfig, ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfigResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfig, ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfigResponse>* streamer) {
                       return this->StreamedUpdateInstantiateConfig(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateInstantiateConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateInstantiateConfig(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfig* /*request*/, ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateInstantiateConfig(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::cosmwasm::wasm::v1::MsgUpdateInstantiateConfig,::cosmwasm::wasm::v1::MsgUpdateInstantiateConfigResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateParams() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::cosmwasm::wasm::v1::MsgUpdateParams, ::cosmwasm::wasm::v1::MsgUpdateParamsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::cosmwasm::wasm::v1::MsgUpdateParams, ::cosmwasm::wasm::v1::MsgUpdateParamsResponse>* streamer) {
                       return this->StreamedUpdateParams(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateParams(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgUpdateParams* /*request*/, ::cosmwasm::wasm::v1::MsgUpdateParamsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateParams(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::cosmwasm::wasm::v1::MsgUpdateParams,::cosmwasm::wasm::v1::MsgUpdateParamsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SudoContract : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SudoContract() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::cosmwasm::wasm::v1::MsgSudoContract, ::cosmwasm::wasm::v1::MsgSudoContractResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::cosmwasm::wasm::v1::MsgSudoContract, ::cosmwasm::wasm::v1::MsgSudoContractResponse>* streamer) {
                       return this->StreamedSudoContract(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SudoContract() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SudoContract(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgSudoContract* /*request*/, ::cosmwasm::wasm::v1::MsgSudoContractResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSudoContract(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::cosmwasm::wasm::v1::MsgSudoContract,::cosmwasm::wasm::v1::MsgSudoContractResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PinCodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_PinCodes() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::cosmwasm::wasm::v1::MsgPinCodes, ::cosmwasm::wasm::v1::MsgPinCodesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::cosmwasm::wasm::v1::MsgPinCodes, ::cosmwasm::wasm::v1::MsgPinCodesResponse>* streamer) {
                       return this->StreamedPinCodes(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_PinCodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PinCodes(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgPinCodes* /*request*/, ::cosmwasm::wasm::v1::MsgPinCodesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPinCodes(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::cosmwasm::wasm::v1::MsgPinCodes,::cosmwasm::wasm::v1::MsgPinCodesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UnpinCodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UnpinCodes() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler<
          ::cosmwasm::wasm::v1::MsgUnpinCodes, ::cosmwasm::wasm::v1::MsgUnpinCodesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::cosmwasm::wasm::v1::MsgUnpinCodes, ::cosmwasm::wasm::v1::MsgUnpinCodesResponse>* streamer) {
                       return this->StreamedUnpinCodes(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UnpinCodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UnpinCodes(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgUnpinCodes* /*request*/, ::cosmwasm::wasm::v1::MsgUnpinCodesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUnpinCodes(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::cosmwasm::wasm::v1::MsgUnpinCodes,::cosmwasm::wasm::v1::MsgUnpinCodesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_StoreAndInstantiateContract : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_StoreAndInstantiateContract() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler<
          ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContract, ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContractResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContract, ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContractResponse>* streamer) {
                       return this->StreamedStoreAndInstantiateContract(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_StoreAndInstantiateContract() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StoreAndInstantiateContract(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContract* /*request*/, ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContractResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStoreAndInstantiateContract(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::cosmwasm::wasm::v1::MsgStoreAndInstantiateContract,::cosmwasm::wasm::v1::MsgStoreAndInstantiateContractResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RemoveCodeUploadParamsAddresses : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RemoveCodeUploadParamsAddresses() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::StreamedUnaryHandler<
          ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddresses, ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddressesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddresses, ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddressesResponse>* streamer) {
                       return this->StreamedRemoveCodeUploadParamsAddresses(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RemoveCodeUploadParamsAddresses() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RemoveCodeUploadParamsAddresses(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddresses* /*request*/, ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddressesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRemoveCodeUploadParamsAddresses(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddresses,::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddressesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddCodeUploadParamsAddresses : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_AddCodeUploadParamsAddresses() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::internal::StreamedUnaryHandler<
          ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddresses, ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddressesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddresses, ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddressesResponse>* streamer) {
                       return this->StreamedAddCodeUploadParamsAddresses(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_AddCodeUploadParamsAddresses() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddCodeUploadParamsAddresses(::grpc::ServerContext* /*context*/, const ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddresses* /*request*/, ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddressesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddCodeUploadParamsAddresses(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddresses,::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddressesResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_StoreCode<WithStreamedUnaryMethod_InstantiateContract<WithStreamedUnaryMethod_InstantiateContract2<WithStreamedUnaryMethod_ExecuteContract<WithStreamedUnaryMethod_MigrateContract<WithStreamedUnaryMethod_UpdateAdmin<WithStreamedUnaryMethod_ClearAdmin<WithStreamedUnaryMethod_UpdateInstantiateConfig<WithStreamedUnaryMethod_UpdateParams<WithStreamedUnaryMethod_SudoContract<WithStreamedUnaryMethod_PinCodes<WithStreamedUnaryMethod_UnpinCodes<WithStreamedUnaryMethod_StoreAndInstantiateContract<WithStreamedUnaryMethod_RemoveCodeUploadParamsAddresses<WithStreamedUnaryMethod_AddCodeUploadParamsAddresses<Service > > > > > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_StoreCode<WithStreamedUnaryMethod_InstantiateContract<WithStreamedUnaryMethod_InstantiateContract2<WithStreamedUnaryMethod_ExecuteContract<WithStreamedUnaryMethod_MigrateContract<WithStreamedUnaryMethod_UpdateAdmin<WithStreamedUnaryMethod_ClearAdmin<WithStreamedUnaryMethod_UpdateInstantiateConfig<WithStreamedUnaryMethod_UpdateParams<WithStreamedUnaryMethod_SudoContract<WithStreamedUnaryMethod_PinCodes<WithStreamedUnaryMethod_UnpinCodes<WithStreamedUnaryMethod_StoreAndInstantiateContract<WithStreamedUnaryMethod_RemoveCodeUploadParamsAddresses<WithStreamedUnaryMethod_AddCodeUploadParamsAddresses<Service > > > > > > > > > > > > > > > StreamedService;
};

}  // namespace v1
}  // namespace wasm
}  // namespace cosmwasm


#endif  // GRPC_cosmwasm_2fwasm_2fv1_2ftx_2eproto__INCLUDED
