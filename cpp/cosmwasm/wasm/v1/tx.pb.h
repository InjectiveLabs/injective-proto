// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmwasm/wasm/v1/tx.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_cosmwasm_2fwasm_2fv1_2ftx_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_cosmwasm_2fwasm_2fv1_2ftx_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4023000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4023004 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "cosmos/base/v1beta1/coin.pb.h"
#include "cosmos/msg/v1/msg.pb.h"
#include "gogoproto/gogo.pb.h"
#include "cosmwasm/wasm/v1/types.pb.h"
#include "cosmos_proto/cosmos.pb.h"
#include "amino/amino.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cosmwasm_2fwasm_2fv1_2ftx_2eproto

PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable
    descriptor_table_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
namespace cosmwasm {
namespace wasm {
namespace v1 {
class MsgAddCodeUploadParamsAddresses;
struct MsgAddCodeUploadParamsAddressesDefaultTypeInternal;
extern MsgAddCodeUploadParamsAddressesDefaultTypeInternal _MsgAddCodeUploadParamsAddresses_default_instance_;
class MsgAddCodeUploadParamsAddressesResponse;
struct MsgAddCodeUploadParamsAddressesResponseDefaultTypeInternal;
extern MsgAddCodeUploadParamsAddressesResponseDefaultTypeInternal _MsgAddCodeUploadParamsAddressesResponse_default_instance_;
class MsgClearAdmin;
struct MsgClearAdminDefaultTypeInternal;
extern MsgClearAdminDefaultTypeInternal _MsgClearAdmin_default_instance_;
class MsgClearAdminResponse;
struct MsgClearAdminResponseDefaultTypeInternal;
extern MsgClearAdminResponseDefaultTypeInternal _MsgClearAdminResponse_default_instance_;
class MsgExecuteContract;
struct MsgExecuteContractDefaultTypeInternal;
extern MsgExecuteContractDefaultTypeInternal _MsgExecuteContract_default_instance_;
class MsgExecuteContractResponse;
struct MsgExecuteContractResponseDefaultTypeInternal;
extern MsgExecuteContractResponseDefaultTypeInternal _MsgExecuteContractResponse_default_instance_;
class MsgInstantiateContract;
struct MsgInstantiateContractDefaultTypeInternal;
extern MsgInstantiateContractDefaultTypeInternal _MsgInstantiateContract_default_instance_;
class MsgInstantiateContract2;
struct MsgInstantiateContract2DefaultTypeInternal;
extern MsgInstantiateContract2DefaultTypeInternal _MsgInstantiateContract2_default_instance_;
class MsgInstantiateContract2Response;
struct MsgInstantiateContract2ResponseDefaultTypeInternal;
extern MsgInstantiateContract2ResponseDefaultTypeInternal _MsgInstantiateContract2Response_default_instance_;
class MsgInstantiateContractResponse;
struct MsgInstantiateContractResponseDefaultTypeInternal;
extern MsgInstantiateContractResponseDefaultTypeInternal _MsgInstantiateContractResponse_default_instance_;
class MsgMigrateContract;
struct MsgMigrateContractDefaultTypeInternal;
extern MsgMigrateContractDefaultTypeInternal _MsgMigrateContract_default_instance_;
class MsgMigrateContractResponse;
struct MsgMigrateContractResponseDefaultTypeInternal;
extern MsgMigrateContractResponseDefaultTypeInternal _MsgMigrateContractResponse_default_instance_;
class MsgPinCodes;
struct MsgPinCodesDefaultTypeInternal;
extern MsgPinCodesDefaultTypeInternal _MsgPinCodes_default_instance_;
class MsgPinCodesResponse;
struct MsgPinCodesResponseDefaultTypeInternal;
extern MsgPinCodesResponseDefaultTypeInternal _MsgPinCodesResponse_default_instance_;
class MsgRemoveCodeUploadParamsAddresses;
struct MsgRemoveCodeUploadParamsAddressesDefaultTypeInternal;
extern MsgRemoveCodeUploadParamsAddressesDefaultTypeInternal _MsgRemoveCodeUploadParamsAddresses_default_instance_;
class MsgRemoveCodeUploadParamsAddressesResponse;
struct MsgRemoveCodeUploadParamsAddressesResponseDefaultTypeInternal;
extern MsgRemoveCodeUploadParamsAddressesResponseDefaultTypeInternal _MsgRemoveCodeUploadParamsAddressesResponse_default_instance_;
class MsgStoreAndInstantiateContract;
struct MsgStoreAndInstantiateContractDefaultTypeInternal;
extern MsgStoreAndInstantiateContractDefaultTypeInternal _MsgStoreAndInstantiateContract_default_instance_;
class MsgStoreAndInstantiateContractResponse;
struct MsgStoreAndInstantiateContractResponseDefaultTypeInternal;
extern MsgStoreAndInstantiateContractResponseDefaultTypeInternal _MsgStoreAndInstantiateContractResponse_default_instance_;
class MsgStoreCode;
struct MsgStoreCodeDefaultTypeInternal;
extern MsgStoreCodeDefaultTypeInternal _MsgStoreCode_default_instance_;
class MsgStoreCodeResponse;
struct MsgStoreCodeResponseDefaultTypeInternal;
extern MsgStoreCodeResponseDefaultTypeInternal _MsgStoreCodeResponse_default_instance_;
class MsgSudoContract;
struct MsgSudoContractDefaultTypeInternal;
extern MsgSudoContractDefaultTypeInternal _MsgSudoContract_default_instance_;
class MsgSudoContractResponse;
struct MsgSudoContractResponseDefaultTypeInternal;
extern MsgSudoContractResponseDefaultTypeInternal _MsgSudoContractResponse_default_instance_;
class MsgUnpinCodes;
struct MsgUnpinCodesDefaultTypeInternal;
extern MsgUnpinCodesDefaultTypeInternal _MsgUnpinCodes_default_instance_;
class MsgUnpinCodesResponse;
struct MsgUnpinCodesResponseDefaultTypeInternal;
extern MsgUnpinCodesResponseDefaultTypeInternal _MsgUnpinCodesResponse_default_instance_;
class MsgUpdateAdmin;
struct MsgUpdateAdminDefaultTypeInternal;
extern MsgUpdateAdminDefaultTypeInternal _MsgUpdateAdmin_default_instance_;
class MsgUpdateAdminResponse;
struct MsgUpdateAdminResponseDefaultTypeInternal;
extern MsgUpdateAdminResponseDefaultTypeInternal _MsgUpdateAdminResponse_default_instance_;
class MsgUpdateInstantiateConfig;
struct MsgUpdateInstantiateConfigDefaultTypeInternal;
extern MsgUpdateInstantiateConfigDefaultTypeInternal _MsgUpdateInstantiateConfig_default_instance_;
class MsgUpdateInstantiateConfigResponse;
struct MsgUpdateInstantiateConfigResponseDefaultTypeInternal;
extern MsgUpdateInstantiateConfigResponseDefaultTypeInternal _MsgUpdateInstantiateConfigResponse_default_instance_;
class MsgUpdateParams;
struct MsgUpdateParamsDefaultTypeInternal;
extern MsgUpdateParamsDefaultTypeInternal _MsgUpdateParams_default_instance_;
class MsgUpdateParamsResponse;
struct MsgUpdateParamsResponseDefaultTypeInternal;
extern MsgUpdateParamsResponseDefaultTypeInternal _MsgUpdateParamsResponse_default_instance_;
}  // namespace v1
}  // namespace wasm
}  // namespace cosmwasm
PROTOBUF_NAMESPACE_OPEN
template <>
::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddresses* Arena::CreateMaybeMessage<::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddresses>(Arena*);
template <>
::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddressesResponse* Arena::CreateMaybeMessage<::cosmwasm::wasm::v1::MsgAddCodeUploadParamsAddressesResponse>(Arena*);
template <>
::cosmwasm::wasm::v1::MsgClearAdmin* Arena::CreateMaybeMessage<::cosmwasm::wasm::v1::MsgClearAdmin>(Arena*);
template <>
::cosmwasm::wasm::v1::MsgClearAdminResponse* Arena::CreateMaybeMessage<::cosmwasm::wasm::v1::MsgClearAdminResponse>(Arena*);
template <>
::cosmwasm::wasm::v1::MsgExecuteContract* Arena::CreateMaybeMessage<::cosmwasm::wasm::v1::MsgExecuteContract>(Arena*);
template <>
::cosmwasm::wasm::v1::MsgExecuteContractResponse* Arena::CreateMaybeMessage<::cosmwasm::wasm::v1::MsgExecuteContractResponse>(Arena*);
template <>
::cosmwasm::wasm::v1::MsgInstantiateContract* Arena::CreateMaybeMessage<::cosmwasm::wasm::v1::MsgInstantiateContract>(Arena*);
template <>
::cosmwasm::wasm::v1::MsgInstantiateContract2* Arena::CreateMaybeMessage<::cosmwasm::wasm::v1::MsgInstantiateContract2>(Arena*);
template <>
::cosmwasm::wasm::v1::MsgInstantiateContract2Response* Arena::CreateMaybeMessage<::cosmwasm::wasm::v1::MsgInstantiateContract2Response>(Arena*);
template <>
::cosmwasm::wasm::v1::MsgInstantiateContractResponse* Arena::CreateMaybeMessage<::cosmwasm::wasm::v1::MsgInstantiateContractResponse>(Arena*);
template <>
::cosmwasm::wasm::v1::MsgMigrateContract* Arena::CreateMaybeMessage<::cosmwasm::wasm::v1::MsgMigrateContract>(Arena*);
template <>
::cosmwasm::wasm::v1::MsgMigrateContractResponse* Arena::CreateMaybeMessage<::cosmwasm::wasm::v1::MsgMigrateContractResponse>(Arena*);
template <>
::cosmwasm::wasm::v1::MsgPinCodes* Arena::CreateMaybeMessage<::cosmwasm::wasm::v1::MsgPinCodes>(Arena*);
template <>
::cosmwasm::wasm::v1::MsgPinCodesResponse* Arena::CreateMaybeMessage<::cosmwasm::wasm::v1::MsgPinCodesResponse>(Arena*);
template <>
::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddresses* Arena::CreateMaybeMessage<::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddresses>(Arena*);
template <>
::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddressesResponse* Arena::CreateMaybeMessage<::cosmwasm::wasm::v1::MsgRemoveCodeUploadParamsAddressesResponse>(Arena*);
template <>
::cosmwasm::wasm::v1::MsgStoreAndInstantiateContract* Arena::CreateMaybeMessage<::cosmwasm::wasm::v1::MsgStoreAndInstantiateContract>(Arena*);
template <>
::cosmwasm::wasm::v1::MsgStoreAndInstantiateContractResponse* Arena::CreateMaybeMessage<::cosmwasm::wasm::v1::MsgStoreAndInstantiateContractResponse>(Arena*);
template <>
::cosmwasm::wasm::v1::MsgStoreCode* Arena::CreateMaybeMessage<::cosmwasm::wasm::v1::MsgStoreCode>(Arena*);
template <>
::cosmwasm::wasm::v1::MsgStoreCodeResponse* Arena::CreateMaybeMessage<::cosmwasm::wasm::v1::MsgStoreCodeResponse>(Arena*);
template <>
::cosmwasm::wasm::v1::MsgSudoContract* Arena::CreateMaybeMessage<::cosmwasm::wasm::v1::MsgSudoContract>(Arena*);
template <>
::cosmwasm::wasm::v1::MsgSudoContractResponse* Arena::CreateMaybeMessage<::cosmwasm::wasm::v1::MsgSudoContractResponse>(Arena*);
template <>
::cosmwasm::wasm::v1::MsgUnpinCodes* Arena::CreateMaybeMessage<::cosmwasm::wasm::v1::MsgUnpinCodes>(Arena*);
template <>
::cosmwasm::wasm::v1::MsgUnpinCodesResponse* Arena::CreateMaybeMessage<::cosmwasm::wasm::v1::MsgUnpinCodesResponse>(Arena*);
template <>
::cosmwasm::wasm::v1::MsgUpdateAdmin* Arena::CreateMaybeMessage<::cosmwasm::wasm::v1::MsgUpdateAdmin>(Arena*);
template <>
::cosmwasm::wasm::v1::MsgUpdateAdminResponse* Arena::CreateMaybeMessage<::cosmwasm::wasm::v1::MsgUpdateAdminResponse>(Arena*);
template <>
::cosmwasm::wasm::v1::MsgUpdateInstantiateConfig* Arena::CreateMaybeMessage<::cosmwasm::wasm::v1::MsgUpdateInstantiateConfig>(Arena*);
template <>
::cosmwasm::wasm::v1::MsgUpdateInstantiateConfigResponse* Arena::CreateMaybeMessage<::cosmwasm::wasm::v1::MsgUpdateInstantiateConfigResponse>(Arena*);
template <>
::cosmwasm::wasm::v1::MsgUpdateParams* Arena::CreateMaybeMessage<::cosmwasm::wasm::v1::MsgUpdateParams>(Arena*);
template <>
::cosmwasm::wasm::v1::MsgUpdateParamsResponse* Arena::CreateMaybeMessage<::cosmwasm::wasm::v1::MsgUpdateParamsResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

namespace cosmwasm {
namespace wasm {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class MsgStoreCode final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgStoreCode) */ {
 public:
  inline MsgStoreCode() : MsgStoreCode(nullptr) {}
  ~MsgStoreCode() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgStoreCode(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgStoreCode(const MsgStoreCode& from);
  MsgStoreCode(MsgStoreCode&& from) noexcept
    : MsgStoreCode() {
    *this = ::std::move(from);
  }

  inline MsgStoreCode& operator=(const MsgStoreCode& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgStoreCode& operator=(MsgStoreCode&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgStoreCode& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgStoreCode* internal_default_instance() {
    return reinterpret_cast<const MsgStoreCode*>(
               &_MsgStoreCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MsgStoreCode& a, MsgStoreCode& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgStoreCode* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgStoreCode* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgStoreCode* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgStoreCode>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgStoreCode& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgStoreCode& from) {
    MsgStoreCode::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgStoreCode* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmwasm.wasm.v1.MsgStoreCode";
  }
  protected:
  explicit MsgStoreCode(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSenderFieldNumber = 1,
    kWasmByteCodeFieldNumber = 2,
    kInstantiatePermissionFieldNumber = 5,
  };
  // string sender = 1 [json_name = "sender"];
  void clear_sender() ;
  const std::string& sender() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sender(Arg_&& arg, Args_... args);
  std::string* mutable_sender();
  PROTOBUF_NODISCARD std::string* release_sender();
  void set_allocated_sender(std::string* ptr);

  private:
  const std::string& _internal_sender() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sender(
      const std::string& value);
  std::string* _internal_mutable_sender();

  public:
  // bytes wasm_byte_code = 2 [json_name = "wasmByteCode", (.gogoproto.customname) = "WASMByteCode"];
  void clear_wasm_byte_code() ;
  const std::string& wasm_byte_code() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_wasm_byte_code(Arg_&& arg, Args_... args);
  std::string* mutable_wasm_byte_code();
  PROTOBUF_NODISCARD std::string* release_wasm_byte_code();
  void set_allocated_wasm_byte_code(std::string* ptr);

  private:
  const std::string& _internal_wasm_byte_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_wasm_byte_code(
      const std::string& value);
  std::string* _internal_mutable_wasm_byte_code();

  public:
  // .cosmwasm.wasm.v1.AccessConfig instantiate_permission = 5 [json_name = "instantiatePermission"];
  bool has_instantiate_permission() const;
  void clear_instantiate_permission() ;
  const ::cosmwasm::wasm::v1::AccessConfig& instantiate_permission() const;
  PROTOBUF_NODISCARD ::cosmwasm::wasm::v1::AccessConfig* release_instantiate_permission();
  ::cosmwasm::wasm::v1::AccessConfig* mutable_instantiate_permission();
  void set_allocated_instantiate_permission(::cosmwasm::wasm::v1::AccessConfig* instantiate_permission);
  private:
  const ::cosmwasm::wasm::v1::AccessConfig& _internal_instantiate_permission() const;
  ::cosmwasm::wasm::v1::AccessConfig* _internal_mutable_instantiate_permission();
  public:
  void unsafe_arena_set_allocated_instantiate_permission(
      ::cosmwasm::wasm::v1::AccessConfig* instantiate_permission);
  ::cosmwasm::wasm::v1::AccessConfig* unsafe_arena_release_instantiate_permission();
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgStoreCode)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sender_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr wasm_byte_code_;
    ::cosmwasm::wasm::v1::AccessConfig* instantiate_permission_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgStoreCodeResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgStoreCodeResponse) */ {
 public:
  inline MsgStoreCodeResponse() : MsgStoreCodeResponse(nullptr) {}
  ~MsgStoreCodeResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgStoreCodeResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgStoreCodeResponse(const MsgStoreCodeResponse& from);
  MsgStoreCodeResponse(MsgStoreCodeResponse&& from) noexcept
    : MsgStoreCodeResponse() {
    *this = ::std::move(from);
  }

  inline MsgStoreCodeResponse& operator=(const MsgStoreCodeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgStoreCodeResponse& operator=(MsgStoreCodeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgStoreCodeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgStoreCodeResponse* internal_default_instance() {
    return reinterpret_cast<const MsgStoreCodeResponse*>(
               &_MsgStoreCodeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(MsgStoreCodeResponse& a, MsgStoreCodeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgStoreCodeResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgStoreCodeResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgStoreCodeResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgStoreCodeResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgStoreCodeResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgStoreCodeResponse& from) {
    MsgStoreCodeResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgStoreCodeResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmwasm.wasm.v1.MsgStoreCodeResponse";
  }
  protected:
  explicit MsgStoreCodeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChecksumFieldNumber = 2,
    kCodeIdFieldNumber = 1,
  };
  // bytes checksum = 2 [json_name = "checksum"];
  void clear_checksum() ;
  const std::string& checksum() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_checksum(Arg_&& arg, Args_... args);
  std::string* mutable_checksum();
  PROTOBUF_NODISCARD std::string* release_checksum();
  void set_allocated_checksum(std::string* ptr);

  private:
  const std::string& _internal_checksum() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_checksum(
      const std::string& value);
  std::string* _internal_mutable_checksum();

  public:
  // uint64 code_id = 1 [json_name = "codeId", (.gogoproto.customname) = "CodeID"];
  void clear_code_id() ;
  ::uint64_t code_id() const;
  void set_code_id(::uint64_t value);

  private:
  ::uint64_t _internal_code_id() const;
  void _internal_set_code_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgStoreCodeResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr checksum_;
    ::uint64_t code_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgInstantiateContract final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgInstantiateContract) */ {
 public:
  inline MsgInstantiateContract() : MsgInstantiateContract(nullptr) {}
  ~MsgInstantiateContract() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgInstantiateContract(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgInstantiateContract(const MsgInstantiateContract& from);
  MsgInstantiateContract(MsgInstantiateContract&& from) noexcept
    : MsgInstantiateContract() {
    *this = ::std::move(from);
  }

  inline MsgInstantiateContract& operator=(const MsgInstantiateContract& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgInstantiateContract& operator=(MsgInstantiateContract&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgInstantiateContract& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgInstantiateContract* internal_default_instance() {
    return reinterpret_cast<const MsgInstantiateContract*>(
               &_MsgInstantiateContract_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(MsgInstantiateContract& a, MsgInstantiateContract& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgInstantiateContract* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgInstantiateContract* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgInstantiateContract* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgInstantiateContract>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgInstantiateContract& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgInstantiateContract& from) {
    MsgInstantiateContract::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgInstantiateContract* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmwasm.wasm.v1.MsgInstantiateContract";
  }
  protected:
  explicit MsgInstantiateContract(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFundsFieldNumber = 6,
    kSenderFieldNumber = 1,
    kAdminFieldNumber = 2,
    kLabelFieldNumber = 4,
    kMsgFieldNumber = 5,
    kCodeIdFieldNumber = 3,
  };
  // repeated .cosmos.base.v1beta1.Coin funds = 6 [json_name = "funds", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];
  int funds_size() const;
  private:
  int _internal_funds_size() const;

  public:
  void clear_funds() ;
  ::cosmos::base::v1beta1::Coin* mutable_funds(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin >*
      mutable_funds();
  private:
  const ::cosmos::base::v1beta1::Coin& _internal_funds(int index) const;
  ::cosmos::base::v1beta1::Coin* _internal_add_funds();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::Coin>& _internal_funds() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::Coin>* _internal_mutable_funds();
  public:
  const ::cosmos::base::v1beta1::Coin& funds(int index) const;
  ::cosmos::base::v1beta1::Coin* add_funds();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin >&
      funds() const;
  // string sender = 1 [json_name = "sender"];
  void clear_sender() ;
  const std::string& sender() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sender(Arg_&& arg, Args_... args);
  std::string* mutable_sender();
  PROTOBUF_NODISCARD std::string* release_sender();
  void set_allocated_sender(std::string* ptr);

  private:
  const std::string& _internal_sender() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sender(
      const std::string& value);
  std::string* _internal_mutable_sender();

  public:
  // string admin = 2 [json_name = "admin"];
  void clear_admin() ;
  const std::string& admin() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_admin(Arg_&& arg, Args_... args);
  std::string* mutable_admin();
  PROTOBUF_NODISCARD std::string* release_admin();
  void set_allocated_admin(std::string* ptr);

  private:
  const std::string& _internal_admin() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_admin(
      const std::string& value);
  std::string* _internal_mutable_admin();

  public:
  // string label = 4 [json_name = "label"];
  void clear_label() ;
  const std::string& label() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_label(Arg_&& arg, Args_... args);
  std::string* mutable_label();
  PROTOBUF_NODISCARD std::string* release_label();
  void set_allocated_label(std::string* ptr);

  private:
  const std::string& _internal_label() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_label(
      const std::string& value);
  std::string* _internal_mutable_label();

  public:
  // bytes msg = 5 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage"];
  void clear_msg() ;
  const std::string& msg() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // uint64 code_id = 3 [json_name = "codeId", (.gogoproto.customname) = "CodeID"];
  void clear_code_id() ;
  ::uint64_t code_id() const;
  void set_code_id(::uint64_t value);

  private:
  ::uint64_t _internal_code_id() const;
  void _internal_set_code_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgInstantiateContract)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin > funds_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sender_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr admin_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr label_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr msg_;
    ::uint64_t code_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgInstantiateContractResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgInstantiateContractResponse) */ {
 public:
  inline MsgInstantiateContractResponse() : MsgInstantiateContractResponse(nullptr) {}
  ~MsgInstantiateContractResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgInstantiateContractResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgInstantiateContractResponse(const MsgInstantiateContractResponse& from);
  MsgInstantiateContractResponse(MsgInstantiateContractResponse&& from) noexcept
    : MsgInstantiateContractResponse() {
    *this = ::std::move(from);
  }

  inline MsgInstantiateContractResponse& operator=(const MsgInstantiateContractResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgInstantiateContractResponse& operator=(MsgInstantiateContractResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgInstantiateContractResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgInstantiateContractResponse* internal_default_instance() {
    return reinterpret_cast<const MsgInstantiateContractResponse*>(
               &_MsgInstantiateContractResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(MsgInstantiateContractResponse& a, MsgInstantiateContractResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgInstantiateContractResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgInstantiateContractResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgInstantiateContractResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgInstantiateContractResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgInstantiateContractResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgInstantiateContractResponse& from) {
    MsgInstantiateContractResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgInstantiateContractResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmwasm.wasm.v1.MsgInstantiateContractResponse";
  }
  protected:
  explicit MsgInstantiateContractResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAddressFieldNumber = 1,
    kDataFieldNumber = 2,
  };
  // string address = 1 [json_name = "address"];
  void clear_address() ;
  const std::string& address() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_address(Arg_&& arg, Args_... args);
  std::string* mutable_address();
  PROTOBUF_NODISCARD std::string* release_address();
  void set_allocated_address(std::string* ptr);

  private:
  const std::string& _internal_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_address(
      const std::string& value);
  std::string* _internal_mutable_address();

  public:
  // bytes data = 2 [json_name = "data"];
  void clear_data() ;
  const std::string& data() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* ptr);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgInstantiateContractResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr address_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr data_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgInstantiateContract2 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgInstantiateContract2) */ {
 public:
  inline MsgInstantiateContract2() : MsgInstantiateContract2(nullptr) {}
  ~MsgInstantiateContract2() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgInstantiateContract2(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgInstantiateContract2(const MsgInstantiateContract2& from);
  MsgInstantiateContract2(MsgInstantiateContract2&& from) noexcept
    : MsgInstantiateContract2() {
    *this = ::std::move(from);
  }

  inline MsgInstantiateContract2& operator=(const MsgInstantiateContract2& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgInstantiateContract2& operator=(MsgInstantiateContract2&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgInstantiateContract2& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgInstantiateContract2* internal_default_instance() {
    return reinterpret_cast<const MsgInstantiateContract2*>(
               &_MsgInstantiateContract2_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(MsgInstantiateContract2& a, MsgInstantiateContract2& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgInstantiateContract2* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgInstantiateContract2* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgInstantiateContract2* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgInstantiateContract2>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgInstantiateContract2& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgInstantiateContract2& from) {
    MsgInstantiateContract2::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgInstantiateContract2* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmwasm.wasm.v1.MsgInstantiateContract2";
  }
  protected:
  explicit MsgInstantiateContract2(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFundsFieldNumber = 6,
    kSenderFieldNumber = 1,
    kAdminFieldNumber = 2,
    kLabelFieldNumber = 4,
    kMsgFieldNumber = 5,
    kSaltFieldNumber = 7,
    kCodeIdFieldNumber = 3,
    kFixMsgFieldNumber = 8,
  };
  // repeated .cosmos.base.v1beta1.Coin funds = 6 [json_name = "funds", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];
  int funds_size() const;
  private:
  int _internal_funds_size() const;

  public:
  void clear_funds() ;
  ::cosmos::base::v1beta1::Coin* mutable_funds(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin >*
      mutable_funds();
  private:
  const ::cosmos::base::v1beta1::Coin& _internal_funds(int index) const;
  ::cosmos::base::v1beta1::Coin* _internal_add_funds();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::Coin>& _internal_funds() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::Coin>* _internal_mutable_funds();
  public:
  const ::cosmos::base::v1beta1::Coin& funds(int index) const;
  ::cosmos::base::v1beta1::Coin* add_funds();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin >&
      funds() const;
  // string sender = 1 [json_name = "sender"];
  void clear_sender() ;
  const std::string& sender() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sender(Arg_&& arg, Args_... args);
  std::string* mutable_sender();
  PROTOBUF_NODISCARD std::string* release_sender();
  void set_allocated_sender(std::string* ptr);

  private:
  const std::string& _internal_sender() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sender(
      const std::string& value);
  std::string* _internal_mutable_sender();

  public:
  // string admin = 2 [json_name = "admin"];
  void clear_admin() ;
  const std::string& admin() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_admin(Arg_&& arg, Args_... args);
  std::string* mutable_admin();
  PROTOBUF_NODISCARD std::string* release_admin();
  void set_allocated_admin(std::string* ptr);

  private:
  const std::string& _internal_admin() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_admin(
      const std::string& value);
  std::string* _internal_mutable_admin();

  public:
  // string label = 4 [json_name = "label"];
  void clear_label() ;
  const std::string& label() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_label(Arg_&& arg, Args_... args);
  std::string* mutable_label();
  PROTOBUF_NODISCARD std::string* release_label();
  void set_allocated_label(std::string* ptr);

  private:
  const std::string& _internal_label() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_label(
      const std::string& value);
  std::string* _internal_mutable_label();

  public:
  // bytes msg = 5 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage"];
  void clear_msg() ;
  const std::string& msg() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // bytes salt = 7 [json_name = "salt"];
  void clear_salt() ;
  const std::string& salt() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_salt(Arg_&& arg, Args_... args);
  std::string* mutable_salt();
  PROTOBUF_NODISCARD std::string* release_salt();
  void set_allocated_salt(std::string* ptr);

  private:
  const std::string& _internal_salt() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_salt(
      const std::string& value);
  std::string* _internal_mutable_salt();

  public:
  // uint64 code_id = 3 [json_name = "codeId", (.gogoproto.customname) = "CodeID"];
  void clear_code_id() ;
  ::uint64_t code_id() const;
  void set_code_id(::uint64_t value);

  private:
  ::uint64_t _internal_code_id() const;
  void _internal_set_code_id(::uint64_t value);

  public:
  // bool fix_msg = 8 [json_name = "fixMsg"];
  void clear_fix_msg() ;
  bool fix_msg() const;
  void set_fix_msg(bool value);

  private:
  bool _internal_fix_msg() const;
  void _internal_set_fix_msg(bool value);

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgInstantiateContract2)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin > funds_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sender_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr admin_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr label_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr msg_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr salt_;
    ::uint64_t code_id_;
    bool fix_msg_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgInstantiateContract2Response final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgInstantiateContract2Response) */ {
 public:
  inline MsgInstantiateContract2Response() : MsgInstantiateContract2Response(nullptr) {}
  ~MsgInstantiateContract2Response() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgInstantiateContract2Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgInstantiateContract2Response(const MsgInstantiateContract2Response& from);
  MsgInstantiateContract2Response(MsgInstantiateContract2Response&& from) noexcept
    : MsgInstantiateContract2Response() {
    *this = ::std::move(from);
  }

  inline MsgInstantiateContract2Response& operator=(const MsgInstantiateContract2Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgInstantiateContract2Response& operator=(MsgInstantiateContract2Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgInstantiateContract2Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgInstantiateContract2Response* internal_default_instance() {
    return reinterpret_cast<const MsgInstantiateContract2Response*>(
               &_MsgInstantiateContract2Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(MsgInstantiateContract2Response& a, MsgInstantiateContract2Response& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgInstantiateContract2Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgInstantiateContract2Response* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgInstantiateContract2Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgInstantiateContract2Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgInstantiateContract2Response& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgInstantiateContract2Response& from) {
    MsgInstantiateContract2Response::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgInstantiateContract2Response* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmwasm.wasm.v1.MsgInstantiateContract2Response";
  }
  protected:
  explicit MsgInstantiateContract2Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAddressFieldNumber = 1,
    kDataFieldNumber = 2,
  };
  // string address = 1 [json_name = "address"];
  void clear_address() ;
  const std::string& address() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_address(Arg_&& arg, Args_... args);
  std::string* mutable_address();
  PROTOBUF_NODISCARD std::string* release_address();
  void set_allocated_address(std::string* ptr);

  private:
  const std::string& _internal_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_address(
      const std::string& value);
  std::string* _internal_mutable_address();

  public:
  // bytes data = 2 [json_name = "data"];
  void clear_data() ;
  const std::string& data() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* ptr);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgInstantiateContract2Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr address_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr data_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgExecuteContract final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgExecuteContract) */ {
 public:
  inline MsgExecuteContract() : MsgExecuteContract(nullptr) {}
  ~MsgExecuteContract() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgExecuteContract(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgExecuteContract(const MsgExecuteContract& from);
  MsgExecuteContract(MsgExecuteContract&& from) noexcept
    : MsgExecuteContract() {
    *this = ::std::move(from);
  }

  inline MsgExecuteContract& operator=(const MsgExecuteContract& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgExecuteContract& operator=(MsgExecuteContract&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgExecuteContract& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgExecuteContract* internal_default_instance() {
    return reinterpret_cast<const MsgExecuteContract*>(
               &_MsgExecuteContract_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(MsgExecuteContract& a, MsgExecuteContract& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgExecuteContract* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgExecuteContract* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgExecuteContract* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgExecuteContract>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgExecuteContract& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgExecuteContract& from) {
    MsgExecuteContract::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgExecuteContract* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmwasm.wasm.v1.MsgExecuteContract";
  }
  protected:
  explicit MsgExecuteContract(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFundsFieldNumber = 5,
    kSenderFieldNumber = 1,
    kContractFieldNumber = 2,
    kMsgFieldNumber = 3,
  };
  // repeated .cosmos.base.v1beta1.Coin funds = 5 [json_name = "funds", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];
  int funds_size() const;
  private:
  int _internal_funds_size() const;

  public:
  void clear_funds() ;
  ::cosmos::base::v1beta1::Coin* mutable_funds(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin >*
      mutable_funds();
  private:
  const ::cosmos::base::v1beta1::Coin& _internal_funds(int index) const;
  ::cosmos::base::v1beta1::Coin* _internal_add_funds();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::Coin>& _internal_funds() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::Coin>* _internal_mutable_funds();
  public:
  const ::cosmos::base::v1beta1::Coin& funds(int index) const;
  ::cosmos::base::v1beta1::Coin* add_funds();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin >&
      funds() const;
  // string sender = 1 [json_name = "sender"];
  void clear_sender() ;
  const std::string& sender() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sender(Arg_&& arg, Args_... args);
  std::string* mutable_sender();
  PROTOBUF_NODISCARD std::string* release_sender();
  void set_allocated_sender(std::string* ptr);

  private:
  const std::string& _internal_sender() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sender(
      const std::string& value);
  std::string* _internal_mutable_sender();

  public:
  // string contract = 2 [json_name = "contract"];
  void clear_contract() ;
  const std::string& contract() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_contract(Arg_&& arg, Args_... args);
  std::string* mutable_contract();
  PROTOBUF_NODISCARD std::string* release_contract();
  void set_allocated_contract(std::string* ptr);

  private:
  const std::string& _internal_contract() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_contract(
      const std::string& value);
  std::string* _internal_mutable_contract();

  public:
  // bytes msg = 3 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage"];
  void clear_msg() ;
  const std::string& msg() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgExecuteContract)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin > funds_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sender_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr contract_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr msg_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgExecuteContractResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgExecuteContractResponse) */ {
 public:
  inline MsgExecuteContractResponse() : MsgExecuteContractResponse(nullptr) {}
  ~MsgExecuteContractResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgExecuteContractResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgExecuteContractResponse(const MsgExecuteContractResponse& from);
  MsgExecuteContractResponse(MsgExecuteContractResponse&& from) noexcept
    : MsgExecuteContractResponse() {
    *this = ::std::move(from);
  }

  inline MsgExecuteContractResponse& operator=(const MsgExecuteContractResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgExecuteContractResponse& operator=(MsgExecuteContractResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgExecuteContractResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgExecuteContractResponse* internal_default_instance() {
    return reinterpret_cast<const MsgExecuteContractResponse*>(
               &_MsgExecuteContractResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(MsgExecuteContractResponse& a, MsgExecuteContractResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgExecuteContractResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgExecuteContractResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgExecuteContractResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgExecuteContractResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgExecuteContractResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgExecuteContractResponse& from) {
    MsgExecuteContractResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgExecuteContractResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmwasm.wasm.v1.MsgExecuteContractResponse";
  }
  protected:
  explicit MsgExecuteContractResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1,
  };
  // bytes data = 1 [json_name = "data"];
  void clear_data() ;
  const std::string& data() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* ptr);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgExecuteContractResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr data_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgMigrateContract final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgMigrateContract) */ {
 public:
  inline MsgMigrateContract() : MsgMigrateContract(nullptr) {}
  ~MsgMigrateContract() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgMigrateContract(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgMigrateContract(const MsgMigrateContract& from);
  MsgMigrateContract(MsgMigrateContract&& from) noexcept
    : MsgMigrateContract() {
    *this = ::std::move(from);
  }

  inline MsgMigrateContract& operator=(const MsgMigrateContract& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgMigrateContract& operator=(MsgMigrateContract&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgMigrateContract& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgMigrateContract* internal_default_instance() {
    return reinterpret_cast<const MsgMigrateContract*>(
               &_MsgMigrateContract_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(MsgMigrateContract& a, MsgMigrateContract& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgMigrateContract* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgMigrateContract* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgMigrateContract* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgMigrateContract>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgMigrateContract& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgMigrateContract& from) {
    MsgMigrateContract::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgMigrateContract* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmwasm.wasm.v1.MsgMigrateContract";
  }
  protected:
  explicit MsgMigrateContract(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSenderFieldNumber = 1,
    kContractFieldNumber = 2,
    kMsgFieldNumber = 4,
    kCodeIdFieldNumber = 3,
  };
  // string sender = 1 [json_name = "sender"];
  void clear_sender() ;
  const std::string& sender() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sender(Arg_&& arg, Args_... args);
  std::string* mutable_sender();
  PROTOBUF_NODISCARD std::string* release_sender();
  void set_allocated_sender(std::string* ptr);

  private:
  const std::string& _internal_sender() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sender(
      const std::string& value);
  std::string* _internal_mutable_sender();

  public:
  // string contract = 2 [json_name = "contract"];
  void clear_contract() ;
  const std::string& contract() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_contract(Arg_&& arg, Args_... args);
  std::string* mutable_contract();
  PROTOBUF_NODISCARD std::string* release_contract();
  void set_allocated_contract(std::string* ptr);

  private:
  const std::string& _internal_contract() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_contract(
      const std::string& value);
  std::string* _internal_mutable_contract();

  public:
  // bytes msg = 4 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage"];
  void clear_msg() ;
  const std::string& msg() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // uint64 code_id = 3 [json_name = "codeId", (.gogoproto.customname) = "CodeID"];
  void clear_code_id() ;
  ::uint64_t code_id() const;
  void set_code_id(::uint64_t value);

  private:
  ::uint64_t _internal_code_id() const;
  void _internal_set_code_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgMigrateContract)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sender_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr contract_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr msg_;
    ::uint64_t code_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgMigrateContractResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgMigrateContractResponse) */ {
 public:
  inline MsgMigrateContractResponse() : MsgMigrateContractResponse(nullptr) {}
  ~MsgMigrateContractResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgMigrateContractResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgMigrateContractResponse(const MsgMigrateContractResponse& from);
  MsgMigrateContractResponse(MsgMigrateContractResponse&& from) noexcept
    : MsgMigrateContractResponse() {
    *this = ::std::move(from);
  }

  inline MsgMigrateContractResponse& operator=(const MsgMigrateContractResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgMigrateContractResponse& operator=(MsgMigrateContractResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgMigrateContractResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgMigrateContractResponse* internal_default_instance() {
    return reinterpret_cast<const MsgMigrateContractResponse*>(
               &_MsgMigrateContractResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(MsgMigrateContractResponse& a, MsgMigrateContractResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgMigrateContractResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgMigrateContractResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgMigrateContractResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgMigrateContractResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgMigrateContractResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgMigrateContractResponse& from) {
    MsgMigrateContractResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgMigrateContractResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmwasm.wasm.v1.MsgMigrateContractResponse";
  }
  protected:
  explicit MsgMigrateContractResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1,
  };
  // bytes data = 1 [json_name = "data"];
  void clear_data() ;
  const std::string& data() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* ptr);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgMigrateContractResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr data_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgUpdateAdmin final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgUpdateAdmin) */ {
 public:
  inline MsgUpdateAdmin() : MsgUpdateAdmin(nullptr) {}
  ~MsgUpdateAdmin() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUpdateAdmin(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgUpdateAdmin(const MsgUpdateAdmin& from);
  MsgUpdateAdmin(MsgUpdateAdmin&& from) noexcept
    : MsgUpdateAdmin() {
    *this = ::std::move(from);
  }

  inline MsgUpdateAdmin& operator=(const MsgUpdateAdmin& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateAdmin& operator=(MsgUpdateAdmin&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUpdateAdmin& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUpdateAdmin* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateAdmin*>(
               &_MsgUpdateAdmin_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(MsgUpdateAdmin& a, MsgUpdateAdmin& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgUpdateAdmin* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateAdmin* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUpdateAdmin* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgUpdateAdmin>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgUpdateAdmin& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgUpdateAdmin& from) {
    MsgUpdateAdmin::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgUpdateAdmin* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmwasm.wasm.v1.MsgUpdateAdmin";
  }
  protected:
  explicit MsgUpdateAdmin(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSenderFieldNumber = 1,
    kNewAdminFieldNumber = 2,
    kContractFieldNumber = 3,
  };
  // string sender = 1 [json_name = "sender"];
  void clear_sender() ;
  const std::string& sender() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sender(Arg_&& arg, Args_... args);
  std::string* mutable_sender();
  PROTOBUF_NODISCARD std::string* release_sender();
  void set_allocated_sender(std::string* ptr);

  private:
  const std::string& _internal_sender() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sender(
      const std::string& value);
  std::string* _internal_mutable_sender();

  public:
  // string new_admin = 2 [json_name = "newAdmin"];
  void clear_new_admin() ;
  const std::string& new_admin() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_new_admin(Arg_&& arg, Args_... args);
  std::string* mutable_new_admin();
  PROTOBUF_NODISCARD std::string* release_new_admin();
  void set_allocated_new_admin(std::string* ptr);

  private:
  const std::string& _internal_new_admin() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_new_admin(
      const std::string& value);
  std::string* _internal_mutable_new_admin();

  public:
  // string contract = 3 [json_name = "contract"];
  void clear_contract() ;
  const std::string& contract() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_contract(Arg_&& arg, Args_... args);
  std::string* mutable_contract();
  PROTOBUF_NODISCARD std::string* release_contract();
  void set_allocated_contract(std::string* ptr);

  private:
  const std::string& _internal_contract() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_contract(
      const std::string& value);
  std::string* _internal_mutable_contract();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgUpdateAdmin)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sender_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr new_admin_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr contract_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgUpdateAdminResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgUpdateAdminResponse) */ {
 public:
  inline MsgUpdateAdminResponse() : MsgUpdateAdminResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUpdateAdminResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgUpdateAdminResponse(const MsgUpdateAdminResponse& from);
  MsgUpdateAdminResponse(MsgUpdateAdminResponse&& from) noexcept
    : MsgUpdateAdminResponse() {
    *this = ::std::move(from);
  }

  inline MsgUpdateAdminResponse& operator=(const MsgUpdateAdminResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateAdminResponse& operator=(MsgUpdateAdminResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUpdateAdminResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUpdateAdminResponse* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateAdminResponse*>(
               &_MsgUpdateAdminResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(MsgUpdateAdminResponse& a, MsgUpdateAdminResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgUpdateAdminResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateAdminResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUpdateAdminResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgUpdateAdminResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgUpdateAdminResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgUpdateAdminResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmwasm.wasm.v1.MsgUpdateAdminResponse";
  }
  protected:
  explicit MsgUpdateAdminResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgUpdateAdminResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgClearAdmin final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgClearAdmin) */ {
 public:
  inline MsgClearAdmin() : MsgClearAdmin(nullptr) {}
  ~MsgClearAdmin() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgClearAdmin(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgClearAdmin(const MsgClearAdmin& from);
  MsgClearAdmin(MsgClearAdmin&& from) noexcept
    : MsgClearAdmin() {
    *this = ::std::move(from);
  }

  inline MsgClearAdmin& operator=(const MsgClearAdmin& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgClearAdmin& operator=(MsgClearAdmin&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgClearAdmin& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgClearAdmin* internal_default_instance() {
    return reinterpret_cast<const MsgClearAdmin*>(
               &_MsgClearAdmin_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(MsgClearAdmin& a, MsgClearAdmin& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgClearAdmin* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgClearAdmin* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgClearAdmin* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgClearAdmin>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgClearAdmin& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgClearAdmin& from) {
    MsgClearAdmin::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgClearAdmin* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmwasm.wasm.v1.MsgClearAdmin";
  }
  protected:
  explicit MsgClearAdmin(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSenderFieldNumber = 1,
    kContractFieldNumber = 3,
  };
  // string sender = 1 [json_name = "sender"];
  void clear_sender() ;
  const std::string& sender() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sender(Arg_&& arg, Args_... args);
  std::string* mutable_sender();
  PROTOBUF_NODISCARD std::string* release_sender();
  void set_allocated_sender(std::string* ptr);

  private:
  const std::string& _internal_sender() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sender(
      const std::string& value);
  std::string* _internal_mutable_sender();

  public:
  // string contract = 3 [json_name = "contract"];
  void clear_contract() ;
  const std::string& contract() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_contract(Arg_&& arg, Args_... args);
  std::string* mutable_contract();
  PROTOBUF_NODISCARD std::string* release_contract();
  void set_allocated_contract(std::string* ptr);

  private:
  const std::string& _internal_contract() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_contract(
      const std::string& value);
  std::string* _internal_mutable_contract();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgClearAdmin)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sender_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr contract_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgClearAdminResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgClearAdminResponse) */ {
 public:
  inline MsgClearAdminResponse() : MsgClearAdminResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgClearAdminResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgClearAdminResponse(const MsgClearAdminResponse& from);
  MsgClearAdminResponse(MsgClearAdminResponse&& from) noexcept
    : MsgClearAdminResponse() {
    *this = ::std::move(from);
  }

  inline MsgClearAdminResponse& operator=(const MsgClearAdminResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgClearAdminResponse& operator=(MsgClearAdminResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgClearAdminResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgClearAdminResponse* internal_default_instance() {
    return reinterpret_cast<const MsgClearAdminResponse*>(
               &_MsgClearAdminResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(MsgClearAdminResponse& a, MsgClearAdminResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgClearAdminResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgClearAdminResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgClearAdminResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgClearAdminResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgClearAdminResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgClearAdminResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmwasm.wasm.v1.MsgClearAdminResponse";
  }
  protected:
  explicit MsgClearAdminResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgClearAdminResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgUpdateInstantiateConfig final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgUpdateInstantiateConfig) */ {
 public:
  inline MsgUpdateInstantiateConfig() : MsgUpdateInstantiateConfig(nullptr) {}
  ~MsgUpdateInstantiateConfig() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUpdateInstantiateConfig(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgUpdateInstantiateConfig(const MsgUpdateInstantiateConfig& from);
  MsgUpdateInstantiateConfig(MsgUpdateInstantiateConfig&& from) noexcept
    : MsgUpdateInstantiateConfig() {
    *this = ::std::move(from);
  }

  inline MsgUpdateInstantiateConfig& operator=(const MsgUpdateInstantiateConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateInstantiateConfig& operator=(MsgUpdateInstantiateConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUpdateInstantiateConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUpdateInstantiateConfig* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateInstantiateConfig*>(
               &_MsgUpdateInstantiateConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(MsgUpdateInstantiateConfig& a, MsgUpdateInstantiateConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgUpdateInstantiateConfig* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateInstantiateConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUpdateInstantiateConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgUpdateInstantiateConfig>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgUpdateInstantiateConfig& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgUpdateInstantiateConfig& from) {
    MsgUpdateInstantiateConfig::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgUpdateInstantiateConfig* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmwasm.wasm.v1.MsgUpdateInstantiateConfig";
  }
  protected:
  explicit MsgUpdateInstantiateConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSenderFieldNumber = 1,
    kNewInstantiatePermissionFieldNumber = 3,
    kCodeIdFieldNumber = 2,
  };
  // string sender = 1 [json_name = "sender"];
  void clear_sender() ;
  const std::string& sender() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sender(Arg_&& arg, Args_... args);
  std::string* mutable_sender();
  PROTOBUF_NODISCARD std::string* release_sender();
  void set_allocated_sender(std::string* ptr);

  private:
  const std::string& _internal_sender() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sender(
      const std::string& value);
  std::string* _internal_mutable_sender();

  public:
  // .cosmwasm.wasm.v1.AccessConfig new_instantiate_permission = 3 [json_name = "newInstantiatePermission"];
  bool has_new_instantiate_permission() const;
  void clear_new_instantiate_permission() ;
  const ::cosmwasm::wasm::v1::AccessConfig& new_instantiate_permission() const;
  PROTOBUF_NODISCARD ::cosmwasm::wasm::v1::AccessConfig* release_new_instantiate_permission();
  ::cosmwasm::wasm::v1::AccessConfig* mutable_new_instantiate_permission();
  void set_allocated_new_instantiate_permission(::cosmwasm::wasm::v1::AccessConfig* new_instantiate_permission);
  private:
  const ::cosmwasm::wasm::v1::AccessConfig& _internal_new_instantiate_permission() const;
  ::cosmwasm::wasm::v1::AccessConfig* _internal_mutable_new_instantiate_permission();
  public:
  void unsafe_arena_set_allocated_new_instantiate_permission(
      ::cosmwasm::wasm::v1::AccessConfig* new_instantiate_permission);
  ::cosmwasm::wasm::v1::AccessConfig* unsafe_arena_release_new_instantiate_permission();
  // uint64 code_id = 2 [json_name = "codeId", (.gogoproto.customname) = "CodeID"];
  void clear_code_id() ;
  ::uint64_t code_id() const;
  void set_code_id(::uint64_t value);

  private:
  ::uint64_t _internal_code_id() const;
  void _internal_set_code_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgUpdateInstantiateConfig)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sender_;
    ::cosmwasm::wasm::v1::AccessConfig* new_instantiate_permission_;
    ::uint64_t code_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgUpdateInstantiateConfigResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgUpdateInstantiateConfigResponse) */ {
 public:
  inline MsgUpdateInstantiateConfigResponse() : MsgUpdateInstantiateConfigResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUpdateInstantiateConfigResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgUpdateInstantiateConfigResponse(const MsgUpdateInstantiateConfigResponse& from);
  MsgUpdateInstantiateConfigResponse(MsgUpdateInstantiateConfigResponse&& from) noexcept
    : MsgUpdateInstantiateConfigResponse() {
    *this = ::std::move(from);
  }

  inline MsgUpdateInstantiateConfigResponse& operator=(const MsgUpdateInstantiateConfigResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateInstantiateConfigResponse& operator=(MsgUpdateInstantiateConfigResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUpdateInstantiateConfigResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUpdateInstantiateConfigResponse* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateInstantiateConfigResponse*>(
               &_MsgUpdateInstantiateConfigResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(MsgUpdateInstantiateConfigResponse& a, MsgUpdateInstantiateConfigResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgUpdateInstantiateConfigResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateInstantiateConfigResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUpdateInstantiateConfigResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgUpdateInstantiateConfigResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgUpdateInstantiateConfigResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgUpdateInstantiateConfigResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmwasm.wasm.v1.MsgUpdateInstantiateConfigResponse";
  }
  protected:
  explicit MsgUpdateInstantiateConfigResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgUpdateInstantiateConfigResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgUpdateParams final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgUpdateParams) */ {
 public:
  inline MsgUpdateParams() : MsgUpdateParams(nullptr) {}
  ~MsgUpdateParams() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUpdateParams(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgUpdateParams(const MsgUpdateParams& from);
  MsgUpdateParams(MsgUpdateParams&& from) noexcept
    : MsgUpdateParams() {
    *this = ::std::move(from);
  }

  inline MsgUpdateParams& operator=(const MsgUpdateParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateParams& operator=(MsgUpdateParams&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUpdateParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUpdateParams* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateParams*>(
               &_MsgUpdateParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(MsgUpdateParams& a, MsgUpdateParams& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgUpdateParams* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateParams* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUpdateParams* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgUpdateParams>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgUpdateParams& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgUpdateParams& from) {
    MsgUpdateParams::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgUpdateParams* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmwasm.wasm.v1.MsgUpdateParams";
  }
  protected:
  explicit MsgUpdateParams(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAuthorityFieldNumber = 1,
    kParamsFieldNumber = 2,
  };
  // string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_authority() ;
  const std::string& authority() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_authority(Arg_&& arg, Args_... args);
  std::string* mutable_authority();
  PROTOBUF_NODISCARD std::string* release_authority();
  void set_allocated_authority(std::string* ptr);

  private:
  const std::string& _internal_authority() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_authority(
      const std::string& value);
  std::string* _internal_mutable_authority();

  public:
  // .cosmwasm.wasm.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  bool has_params() const;
  void clear_params() ;
  const ::cosmwasm::wasm::v1::Params& params() const;
  PROTOBUF_NODISCARD ::cosmwasm::wasm::v1::Params* release_params();
  ::cosmwasm::wasm::v1::Params* mutable_params();
  void set_allocated_params(::cosmwasm::wasm::v1::Params* params);
  private:
  const ::cosmwasm::wasm::v1::Params& _internal_params() const;
  ::cosmwasm::wasm::v1::Params* _internal_mutable_params();
  public:
  void unsafe_arena_set_allocated_params(
      ::cosmwasm::wasm::v1::Params* params);
  ::cosmwasm::wasm::v1::Params* unsafe_arena_release_params();
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgUpdateParams)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr authority_;
    ::cosmwasm::wasm::v1::Params* params_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgUpdateParamsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgUpdateParamsResponse) */ {
 public:
  inline MsgUpdateParamsResponse() : MsgUpdateParamsResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUpdateParamsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgUpdateParamsResponse(const MsgUpdateParamsResponse& from);
  MsgUpdateParamsResponse(MsgUpdateParamsResponse&& from) noexcept
    : MsgUpdateParamsResponse() {
    *this = ::std::move(from);
  }

  inline MsgUpdateParamsResponse& operator=(const MsgUpdateParamsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateParamsResponse& operator=(MsgUpdateParamsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUpdateParamsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUpdateParamsResponse* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateParamsResponse*>(
               &_MsgUpdateParamsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(MsgUpdateParamsResponse& a, MsgUpdateParamsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgUpdateParamsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateParamsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUpdateParamsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgUpdateParamsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgUpdateParamsResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgUpdateParamsResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmwasm.wasm.v1.MsgUpdateParamsResponse";
  }
  protected:
  explicit MsgUpdateParamsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgUpdateParamsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgSudoContract final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgSudoContract) */ {
 public:
  inline MsgSudoContract() : MsgSudoContract(nullptr) {}
  ~MsgSudoContract() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgSudoContract(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgSudoContract(const MsgSudoContract& from);
  MsgSudoContract(MsgSudoContract&& from) noexcept
    : MsgSudoContract() {
    *this = ::std::move(from);
  }

  inline MsgSudoContract& operator=(const MsgSudoContract& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgSudoContract& operator=(MsgSudoContract&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgSudoContract& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgSudoContract* internal_default_instance() {
    return reinterpret_cast<const MsgSudoContract*>(
               &_MsgSudoContract_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(MsgSudoContract& a, MsgSudoContract& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgSudoContract* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgSudoContract* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgSudoContract* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgSudoContract>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgSudoContract& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgSudoContract& from) {
    MsgSudoContract::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSudoContract* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmwasm.wasm.v1.MsgSudoContract";
  }
  protected:
  explicit MsgSudoContract(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAuthorityFieldNumber = 1,
    kContractFieldNumber = 2,
    kMsgFieldNumber = 3,
  };
  // string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_authority() ;
  const std::string& authority() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_authority(Arg_&& arg, Args_... args);
  std::string* mutable_authority();
  PROTOBUF_NODISCARD std::string* release_authority();
  void set_allocated_authority(std::string* ptr);

  private:
  const std::string& _internal_authority() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_authority(
      const std::string& value);
  std::string* _internal_mutable_authority();

  public:
  // string contract = 2 [json_name = "contract"];
  void clear_contract() ;
  const std::string& contract() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_contract(Arg_&& arg, Args_... args);
  std::string* mutable_contract();
  PROTOBUF_NODISCARD std::string* release_contract();
  void set_allocated_contract(std::string* ptr);

  private:
  const std::string& _internal_contract() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_contract(
      const std::string& value);
  std::string* _internal_mutable_contract();

  public:
  // bytes msg = 3 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage"];
  void clear_msg() ;
  const std::string& msg() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgSudoContract)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr authority_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr contract_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr msg_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgSudoContractResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgSudoContractResponse) */ {
 public:
  inline MsgSudoContractResponse() : MsgSudoContractResponse(nullptr) {}
  ~MsgSudoContractResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgSudoContractResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgSudoContractResponse(const MsgSudoContractResponse& from);
  MsgSudoContractResponse(MsgSudoContractResponse&& from) noexcept
    : MsgSudoContractResponse() {
    *this = ::std::move(from);
  }

  inline MsgSudoContractResponse& operator=(const MsgSudoContractResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgSudoContractResponse& operator=(MsgSudoContractResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgSudoContractResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgSudoContractResponse* internal_default_instance() {
    return reinterpret_cast<const MsgSudoContractResponse*>(
               &_MsgSudoContractResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(MsgSudoContractResponse& a, MsgSudoContractResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgSudoContractResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgSudoContractResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgSudoContractResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgSudoContractResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgSudoContractResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgSudoContractResponse& from) {
    MsgSudoContractResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSudoContractResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmwasm.wasm.v1.MsgSudoContractResponse";
  }
  protected:
  explicit MsgSudoContractResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1,
  };
  // bytes data = 1 [json_name = "data"];
  void clear_data() ;
  const std::string& data() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* ptr);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgSudoContractResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr data_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgPinCodes final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgPinCodes) */ {
 public:
  inline MsgPinCodes() : MsgPinCodes(nullptr) {}
  ~MsgPinCodes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgPinCodes(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgPinCodes(const MsgPinCodes& from);
  MsgPinCodes(MsgPinCodes&& from) noexcept
    : MsgPinCodes() {
    *this = ::std::move(from);
  }

  inline MsgPinCodes& operator=(const MsgPinCodes& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgPinCodes& operator=(MsgPinCodes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgPinCodes& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgPinCodes* internal_default_instance() {
    return reinterpret_cast<const MsgPinCodes*>(
               &_MsgPinCodes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(MsgPinCodes& a, MsgPinCodes& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgPinCodes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgPinCodes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgPinCodes* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgPinCodes>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgPinCodes& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgPinCodes& from) {
    MsgPinCodes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgPinCodes* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmwasm.wasm.v1.MsgPinCodes";
  }
  protected:
  explicit MsgPinCodes(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCodeIdsFieldNumber = 2,
    kAuthorityFieldNumber = 1,
  };
  // repeated uint64 code_ids = 2 [json_name = "codeIds", (.gogoproto.customname) = "CodeIDs", (.gogoproto.moretags) = "yaml:\"code_ids\""];
  int code_ids_size() const;
  private:
  int _internal_code_ids_size() const;

  public:
  void clear_code_ids() ;
  ::uint64_t code_ids(int index) const;
  void set_code_ids(int index, ::uint64_t value);
  void add_code_ids(::uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<::uint64_t>& code_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<::uint64_t>* mutable_code_ids();

  private:
  ::uint64_t _internal_code_ids(int index) const;
  void _internal_add_code_ids(::uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<::uint64_t>& _internal_code_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<::uint64_t>* _internal_mutable_code_ids();

  public:
  // string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_authority() ;
  const std::string& authority() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_authority(Arg_&& arg, Args_... args);
  std::string* mutable_authority();
  PROTOBUF_NODISCARD std::string* release_authority();
  void set_allocated_authority(std::string* ptr);

  private:
  const std::string& _internal_authority() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_authority(
      const std::string& value);
  std::string* _internal_mutable_authority();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgPinCodes)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField<::uint64_t> code_ids_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _code_ids_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr authority_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgPinCodesResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgPinCodesResponse) */ {
 public:
  inline MsgPinCodesResponse() : MsgPinCodesResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgPinCodesResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgPinCodesResponse(const MsgPinCodesResponse& from);
  MsgPinCodesResponse(MsgPinCodesResponse&& from) noexcept
    : MsgPinCodesResponse() {
    *this = ::std::move(from);
  }

  inline MsgPinCodesResponse& operator=(const MsgPinCodesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgPinCodesResponse& operator=(MsgPinCodesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgPinCodesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgPinCodesResponse* internal_default_instance() {
    return reinterpret_cast<const MsgPinCodesResponse*>(
               &_MsgPinCodesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(MsgPinCodesResponse& a, MsgPinCodesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgPinCodesResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgPinCodesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgPinCodesResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgPinCodesResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgPinCodesResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgPinCodesResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmwasm.wasm.v1.MsgPinCodesResponse";
  }
  protected:
  explicit MsgPinCodesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgPinCodesResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgUnpinCodes final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgUnpinCodes) */ {
 public:
  inline MsgUnpinCodes() : MsgUnpinCodes(nullptr) {}
  ~MsgUnpinCodes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUnpinCodes(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgUnpinCodes(const MsgUnpinCodes& from);
  MsgUnpinCodes(MsgUnpinCodes&& from) noexcept
    : MsgUnpinCodes() {
    *this = ::std::move(from);
  }

  inline MsgUnpinCodes& operator=(const MsgUnpinCodes& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUnpinCodes& operator=(MsgUnpinCodes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUnpinCodes& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUnpinCodes* internal_default_instance() {
    return reinterpret_cast<const MsgUnpinCodes*>(
               &_MsgUnpinCodes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(MsgUnpinCodes& a, MsgUnpinCodes& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgUnpinCodes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUnpinCodes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUnpinCodes* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgUnpinCodes>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgUnpinCodes& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgUnpinCodes& from) {
    MsgUnpinCodes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgUnpinCodes* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmwasm.wasm.v1.MsgUnpinCodes";
  }
  protected:
  explicit MsgUnpinCodes(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCodeIdsFieldNumber = 2,
    kAuthorityFieldNumber = 1,
  };
  // repeated uint64 code_ids = 2 [json_name = "codeIds", (.gogoproto.customname) = "CodeIDs", (.gogoproto.moretags) = "yaml:\"code_ids\""];
  int code_ids_size() const;
  private:
  int _internal_code_ids_size() const;

  public:
  void clear_code_ids() ;
  ::uint64_t code_ids(int index) const;
  void set_code_ids(int index, ::uint64_t value);
  void add_code_ids(::uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<::uint64_t>& code_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<::uint64_t>* mutable_code_ids();

  private:
  ::uint64_t _internal_code_ids(int index) const;
  void _internal_add_code_ids(::uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<::uint64_t>& _internal_code_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<::uint64_t>* _internal_mutable_code_ids();

  public:
  // string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_authority() ;
  const std::string& authority() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_authority(Arg_&& arg, Args_... args);
  std::string* mutable_authority();
  PROTOBUF_NODISCARD std::string* release_authority();
  void set_allocated_authority(std::string* ptr);

  private:
  const std::string& _internal_authority() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_authority(
      const std::string& value);
  std::string* _internal_mutable_authority();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgUnpinCodes)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField<::uint64_t> code_ids_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _code_ids_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr authority_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgUnpinCodesResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgUnpinCodesResponse) */ {
 public:
  inline MsgUnpinCodesResponse() : MsgUnpinCodesResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUnpinCodesResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgUnpinCodesResponse(const MsgUnpinCodesResponse& from);
  MsgUnpinCodesResponse(MsgUnpinCodesResponse&& from) noexcept
    : MsgUnpinCodesResponse() {
    *this = ::std::move(from);
  }

  inline MsgUnpinCodesResponse& operator=(const MsgUnpinCodesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUnpinCodesResponse& operator=(MsgUnpinCodesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUnpinCodesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUnpinCodesResponse* internal_default_instance() {
    return reinterpret_cast<const MsgUnpinCodesResponse*>(
               &_MsgUnpinCodesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(MsgUnpinCodesResponse& a, MsgUnpinCodesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgUnpinCodesResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUnpinCodesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUnpinCodesResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgUnpinCodesResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgUnpinCodesResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgUnpinCodesResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmwasm.wasm.v1.MsgUnpinCodesResponse";
  }
  protected:
  explicit MsgUnpinCodesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgUnpinCodesResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgStoreAndInstantiateContract final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract) */ {
 public:
  inline MsgStoreAndInstantiateContract() : MsgStoreAndInstantiateContract(nullptr) {}
  ~MsgStoreAndInstantiateContract() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgStoreAndInstantiateContract(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgStoreAndInstantiateContract(const MsgStoreAndInstantiateContract& from);
  MsgStoreAndInstantiateContract(MsgStoreAndInstantiateContract&& from) noexcept
    : MsgStoreAndInstantiateContract() {
    *this = ::std::move(from);
  }

  inline MsgStoreAndInstantiateContract& operator=(const MsgStoreAndInstantiateContract& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgStoreAndInstantiateContract& operator=(MsgStoreAndInstantiateContract&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgStoreAndInstantiateContract& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgStoreAndInstantiateContract* internal_default_instance() {
    return reinterpret_cast<const MsgStoreAndInstantiateContract*>(
               &_MsgStoreAndInstantiateContract_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(MsgStoreAndInstantiateContract& a, MsgStoreAndInstantiateContract& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgStoreAndInstantiateContract* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgStoreAndInstantiateContract* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgStoreAndInstantiateContract* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgStoreAndInstantiateContract>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgStoreAndInstantiateContract& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgStoreAndInstantiateContract& from) {
    MsgStoreAndInstantiateContract::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgStoreAndInstantiateContract* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmwasm.wasm.v1.MsgStoreAndInstantiateContract";
  }
  protected:
  explicit MsgStoreAndInstantiateContract(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFundsFieldNumber = 9,
    kAuthorityFieldNumber = 1,
    kWasmByteCodeFieldNumber = 3,
    kAdminFieldNumber = 6,
    kLabelFieldNumber = 7,
    kMsgFieldNumber = 8,
    kSourceFieldNumber = 10,
    kBuilderFieldNumber = 11,
    kCodeHashFieldNumber = 12,
    kInstantiatePermissionFieldNumber = 4,
    kUnpinCodeFieldNumber = 5,
  };
  // repeated .cosmos.base.v1beta1.Coin funds = 9 [json_name = "funds", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];
  int funds_size() const;
  private:
  int _internal_funds_size() const;

  public:
  void clear_funds() ;
  ::cosmos::base::v1beta1::Coin* mutable_funds(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin >*
      mutable_funds();
  private:
  const ::cosmos::base::v1beta1::Coin& _internal_funds(int index) const;
  ::cosmos::base::v1beta1::Coin* _internal_add_funds();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::Coin>& _internal_funds() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::Coin>* _internal_mutable_funds();
  public:
  const ::cosmos::base::v1beta1::Coin& funds(int index) const;
  ::cosmos::base::v1beta1::Coin* add_funds();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin >&
      funds() const;
  // string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_authority() ;
  const std::string& authority() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_authority(Arg_&& arg, Args_... args);
  std::string* mutable_authority();
  PROTOBUF_NODISCARD std::string* release_authority();
  void set_allocated_authority(std::string* ptr);

  private:
  const std::string& _internal_authority() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_authority(
      const std::string& value);
  std::string* _internal_mutable_authority();

  public:
  // bytes wasm_byte_code = 3 [json_name = "wasmByteCode", (.gogoproto.customname) = "WASMByteCode"];
  void clear_wasm_byte_code() ;
  const std::string& wasm_byte_code() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_wasm_byte_code(Arg_&& arg, Args_... args);
  std::string* mutable_wasm_byte_code();
  PROTOBUF_NODISCARD std::string* release_wasm_byte_code();
  void set_allocated_wasm_byte_code(std::string* ptr);

  private:
  const std::string& _internal_wasm_byte_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_wasm_byte_code(
      const std::string& value);
  std::string* _internal_mutable_wasm_byte_code();

  public:
  // string admin = 6 [json_name = "admin"];
  void clear_admin() ;
  const std::string& admin() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_admin(Arg_&& arg, Args_... args);
  std::string* mutable_admin();
  PROTOBUF_NODISCARD std::string* release_admin();
  void set_allocated_admin(std::string* ptr);

  private:
  const std::string& _internal_admin() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_admin(
      const std::string& value);
  std::string* _internal_mutable_admin();

  public:
  // string label = 7 [json_name = "label"];
  void clear_label() ;
  const std::string& label() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_label(Arg_&& arg, Args_... args);
  std::string* mutable_label();
  PROTOBUF_NODISCARD std::string* release_label();
  void set_allocated_label(std::string* ptr);

  private:
  const std::string& _internal_label() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_label(
      const std::string& value);
  std::string* _internal_mutable_label();

  public:
  // bytes msg = 8 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage"];
  void clear_msg() ;
  const std::string& msg() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // string source = 10 [json_name = "source"];
  void clear_source() ;
  const std::string& source() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_source(Arg_&& arg, Args_... args);
  std::string* mutable_source();
  PROTOBUF_NODISCARD std::string* release_source();
  void set_allocated_source(std::string* ptr);

  private:
  const std::string& _internal_source() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_source(
      const std::string& value);
  std::string* _internal_mutable_source();

  public:
  // string builder = 11 [json_name = "builder"];
  void clear_builder() ;
  const std::string& builder() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_builder(Arg_&& arg, Args_... args);
  std::string* mutable_builder();
  PROTOBUF_NODISCARD std::string* release_builder();
  void set_allocated_builder(std::string* ptr);

  private:
  const std::string& _internal_builder() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_builder(
      const std::string& value);
  std::string* _internal_mutable_builder();

  public:
  // bytes code_hash = 12 [json_name = "codeHash"];
  void clear_code_hash() ;
  const std::string& code_hash() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_code_hash(Arg_&& arg, Args_... args);
  std::string* mutable_code_hash();
  PROTOBUF_NODISCARD std::string* release_code_hash();
  void set_allocated_code_hash(std::string* ptr);

  private:
  const std::string& _internal_code_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_code_hash(
      const std::string& value);
  std::string* _internal_mutable_code_hash();

  public:
  // .cosmwasm.wasm.v1.AccessConfig instantiate_permission = 4 [json_name = "instantiatePermission"];
  bool has_instantiate_permission() const;
  void clear_instantiate_permission() ;
  const ::cosmwasm::wasm::v1::AccessConfig& instantiate_permission() const;
  PROTOBUF_NODISCARD ::cosmwasm::wasm::v1::AccessConfig* release_instantiate_permission();
  ::cosmwasm::wasm::v1::AccessConfig* mutable_instantiate_permission();
  void set_allocated_instantiate_permission(::cosmwasm::wasm::v1::AccessConfig* instantiate_permission);
  private:
  const ::cosmwasm::wasm::v1::AccessConfig& _internal_instantiate_permission() const;
  ::cosmwasm::wasm::v1::AccessConfig* _internal_mutable_instantiate_permission();
  public:
  void unsafe_arena_set_allocated_instantiate_permission(
      ::cosmwasm::wasm::v1::AccessConfig* instantiate_permission);
  ::cosmwasm::wasm::v1::AccessConfig* unsafe_arena_release_instantiate_permission();
  // bool unpin_code = 5 [json_name = "unpinCode"];
  void clear_unpin_code() ;
  bool unpin_code() const;
  void set_unpin_code(bool value);

  private:
  bool _internal_unpin_code() const;
  void _internal_set_unpin_code(bool value);

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin > funds_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr authority_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr wasm_byte_code_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr admin_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr label_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr msg_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr source_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr builder_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr code_hash_;
    ::cosmwasm::wasm::v1::AccessConfig* instantiate_permission_;
    bool unpin_code_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgStoreAndInstantiateContractResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgStoreAndInstantiateContractResponse) */ {
 public:
  inline MsgStoreAndInstantiateContractResponse() : MsgStoreAndInstantiateContractResponse(nullptr) {}
  ~MsgStoreAndInstantiateContractResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgStoreAndInstantiateContractResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgStoreAndInstantiateContractResponse(const MsgStoreAndInstantiateContractResponse& from);
  MsgStoreAndInstantiateContractResponse(MsgStoreAndInstantiateContractResponse&& from) noexcept
    : MsgStoreAndInstantiateContractResponse() {
    *this = ::std::move(from);
  }

  inline MsgStoreAndInstantiateContractResponse& operator=(const MsgStoreAndInstantiateContractResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgStoreAndInstantiateContractResponse& operator=(MsgStoreAndInstantiateContractResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgStoreAndInstantiateContractResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgStoreAndInstantiateContractResponse* internal_default_instance() {
    return reinterpret_cast<const MsgStoreAndInstantiateContractResponse*>(
               &_MsgStoreAndInstantiateContractResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(MsgStoreAndInstantiateContractResponse& a, MsgStoreAndInstantiateContractResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgStoreAndInstantiateContractResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgStoreAndInstantiateContractResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgStoreAndInstantiateContractResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgStoreAndInstantiateContractResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgStoreAndInstantiateContractResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgStoreAndInstantiateContractResponse& from) {
    MsgStoreAndInstantiateContractResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgStoreAndInstantiateContractResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmwasm.wasm.v1.MsgStoreAndInstantiateContractResponse";
  }
  protected:
  explicit MsgStoreAndInstantiateContractResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAddressFieldNumber = 1,
    kDataFieldNumber = 2,
  };
  // string address = 1 [json_name = "address"];
  void clear_address() ;
  const std::string& address() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_address(Arg_&& arg, Args_... args);
  std::string* mutable_address();
  PROTOBUF_NODISCARD std::string* release_address();
  void set_allocated_address(std::string* ptr);

  private:
  const std::string& _internal_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_address(
      const std::string& value);
  std::string* _internal_mutable_address();

  public:
  // bytes data = 2 [json_name = "data"];
  void clear_data() ;
  const std::string& data() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* ptr);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgStoreAndInstantiateContractResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr address_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr data_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgAddCodeUploadParamsAddresses final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgAddCodeUploadParamsAddresses) */ {
 public:
  inline MsgAddCodeUploadParamsAddresses() : MsgAddCodeUploadParamsAddresses(nullptr) {}
  ~MsgAddCodeUploadParamsAddresses() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgAddCodeUploadParamsAddresses(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgAddCodeUploadParamsAddresses(const MsgAddCodeUploadParamsAddresses& from);
  MsgAddCodeUploadParamsAddresses(MsgAddCodeUploadParamsAddresses&& from) noexcept
    : MsgAddCodeUploadParamsAddresses() {
    *this = ::std::move(from);
  }

  inline MsgAddCodeUploadParamsAddresses& operator=(const MsgAddCodeUploadParamsAddresses& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgAddCodeUploadParamsAddresses& operator=(MsgAddCodeUploadParamsAddresses&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgAddCodeUploadParamsAddresses& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgAddCodeUploadParamsAddresses* internal_default_instance() {
    return reinterpret_cast<const MsgAddCodeUploadParamsAddresses*>(
               &_MsgAddCodeUploadParamsAddresses_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(MsgAddCodeUploadParamsAddresses& a, MsgAddCodeUploadParamsAddresses& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgAddCodeUploadParamsAddresses* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgAddCodeUploadParamsAddresses* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgAddCodeUploadParamsAddresses* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgAddCodeUploadParamsAddresses>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgAddCodeUploadParamsAddresses& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgAddCodeUploadParamsAddresses& from) {
    MsgAddCodeUploadParamsAddresses::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgAddCodeUploadParamsAddresses* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmwasm.wasm.v1.MsgAddCodeUploadParamsAddresses";
  }
  protected:
  explicit MsgAddCodeUploadParamsAddresses(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAddressesFieldNumber = 2,
    kAuthorityFieldNumber = 1,
  };
  // repeated string addresses = 2 [json_name = "addresses", (.gogoproto.moretags) = "yaml:\"addresses\""];
  int addresses_size() const;
  private:
  int _internal_addresses_size() const;

  public:
  void clear_addresses() ;
  const std::string& addresses(int index) const;
  std::string* mutable_addresses(int index);
  void set_addresses(int index, const std::string& value);
  void set_addresses(int index, std::string&& value);
  void set_addresses(int index, const char* value);
  void set_addresses(int index, const char* value, std::size_t size);
  void set_addresses(int index, absl::string_view value);
  std::string* add_addresses();
  void add_addresses(const std::string& value);
  void add_addresses(std::string&& value);
  void add_addresses(const char* value);
  void add_addresses(const char* value, std::size_t size);
  void add_addresses(absl::string_view value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& addresses() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_addresses();

  private:
  const std::string& _internal_addresses(int index) const;
  std::string* _internal_add_addresses();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& _internal_addresses() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* _internal_mutable_addresses();

  public:
  // string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_authority() ;
  const std::string& authority() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_authority(Arg_&& arg, Args_... args);
  std::string* mutable_authority();
  PROTOBUF_NODISCARD std::string* release_authority();
  void set_allocated_authority(std::string* ptr);

  private:
  const std::string& _internal_authority() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_authority(
      const std::string& value);
  std::string* _internal_mutable_authority();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgAddCodeUploadParamsAddresses)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> addresses_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr authority_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgAddCodeUploadParamsAddressesResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgAddCodeUploadParamsAddressesResponse) */ {
 public:
  inline MsgAddCodeUploadParamsAddressesResponse() : MsgAddCodeUploadParamsAddressesResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgAddCodeUploadParamsAddressesResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgAddCodeUploadParamsAddressesResponse(const MsgAddCodeUploadParamsAddressesResponse& from);
  MsgAddCodeUploadParamsAddressesResponse(MsgAddCodeUploadParamsAddressesResponse&& from) noexcept
    : MsgAddCodeUploadParamsAddressesResponse() {
    *this = ::std::move(from);
  }

  inline MsgAddCodeUploadParamsAddressesResponse& operator=(const MsgAddCodeUploadParamsAddressesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgAddCodeUploadParamsAddressesResponse& operator=(MsgAddCodeUploadParamsAddressesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgAddCodeUploadParamsAddressesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgAddCodeUploadParamsAddressesResponse* internal_default_instance() {
    return reinterpret_cast<const MsgAddCodeUploadParamsAddressesResponse*>(
               &_MsgAddCodeUploadParamsAddressesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(MsgAddCodeUploadParamsAddressesResponse& a, MsgAddCodeUploadParamsAddressesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgAddCodeUploadParamsAddressesResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgAddCodeUploadParamsAddressesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgAddCodeUploadParamsAddressesResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgAddCodeUploadParamsAddressesResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgAddCodeUploadParamsAddressesResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgAddCodeUploadParamsAddressesResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmwasm.wasm.v1.MsgAddCodeUploadParamsAddressesResponse";
  }
  protected:
  explicit MsgAddCodeUploadParamsAddressesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgAddCodeUploadParamsAddressesResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgRemoveCodeUploadParamsAddresses final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgRemoveCodeUploadParamsAddresses) */ {
 public:
  inline MsgRemoveCodeUploadParamsAddresses() : MsgRemoveCodeUploadParamsAddresses(nullptr) {}
  ~MsgRemoveCodeUploadParamsAddresses() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgRemoveCodeUploadParamsAddresses(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgRemoveCodeUploadParamsAddresses(const MsgRemoveCodeUploadParamsAddresses& from);
  MsgRemoveCodeUploadParamsAddresses(MsgRemoveCodeUploadParamsAddresses&& from) noexcept
    : MsgRemoveCodeUploadParamsAddresses() {
    *this = ::std::move(from);
  }

  inline MsgRemoveCodeUploadParamsAddresses& operator=(const MsgRemoveCodeUploadParamsAddresses& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgRemoveCodeUploadParamsAddresses& operator=(MsgRemoveCodeUploadParamsAddresses&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgRemoveCodeUploadParamsAddresses& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgRemoveCodeUploadParamsAddresses* internal_default_instance() {
    return reinterpret_cast<const MsgRemoveCodeUploadParamsAddresses*>(
               &_MsgRemoveCodeUploadParamsAddresses_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(MsgRemoveCodeUploadParamsAddresses& a, MsgRemoveCodeUploadParamsAddresses& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgRemoveCodeUploadParamsAddresses* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgRemoveCodeUploadParamsAddresses* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgRemoveCodeUploadParamsAddresses* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgRemoveCodeUploadParamsAddresses>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgRemoveCodeUploadParamsAddresses& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgRemoveCodeUploadParamsAddresses& from) {
    MsgRemoveCodeUploadParamsAddresses::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgRemoveCodeUploadParamsAddresses* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmwasm.wasm.v1.MsgRemoveCodeUploadParamsAddresses";
  }
  protected:
  explicit MsgRemoveCodeUploadParamsAddresses(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAddressesFieldNumber = 2,
    kAuthorityFieldNumber = 1,
  };
  // repeated string addresses = 2 [json_name = "addresses", (.gogoproto.moretags) = "yaml:\"addresses\""];
  int addresses_size() const;
  private:
  int _internal_addresses_size() const;

  public:
  void clear_addresses() ;
  const std::string& addresses(int index) const;
  std::string* mutable_addresses(int index);
  void set_addresses(int index, const std::string& value);
  void set_addresses(int index, std::string&& value);
  void set_addresses(int index, const char* value);
  void set_addresses(int index, const char* value, std::size_t size);
  void set_addresses(int index, absl::string_view value);
  std::string* add_addresses();
  void add_addresses(const std::string& value);
  void add_addresses(std::string&& value);
  void add_addresses(const char* value);
  void add_addresses(const char* value, std::size_t size);
  void add_addresses(absl::string_view value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& addresses() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_addresses();

  private:
  const std::string& _internal_addresses(int index) const;
  std::string* _internal_add_addresses();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& _internal_addresses() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* _internal_mutable_addresses();

  public:
  // string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_authority() ;
  const std::string& authority() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_authority(Arg_&& arg, Args_... args);
  std::string* mutable_authority();
  PROTOBUF_NODISCARD std::string* release_authority();
  void set_allocated_authority(std::string* ptr);

  private:
  const std::string& _internal_authority() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_authority(
      const std::string& value);
  std::string* _internal_mutable_authority();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgRemoveCodeUploadParamsAddresses)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> addresses_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr authority_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgRemoveCodeUploadParamsAddressesResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgRemoveCodeUploadParamsAddressesResponse) */ {
 public:
  inline MsgRemoveCodeUploadParamsAddressesResponse() : MsgRemoveCodeUploadParamsAddressesResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgRemoveCodeUploadParamsAddressesResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgRemoveCodeUploadParamsAddressesResponse(const MsgRemoveCodeUploadParamsAddressesResponse& from);
  MsgRemoveCodeUploadParamsAddressesResponse(MsgRemoveCodeUploadParamsAddressesResponse&& from) noexcept
    : MsgRemoveCodeUploadParamsAddressesResponse() {
    *this = ::std::move(from);
  }

  inline MsgRemoveCodeUploadParamsAddressesResponse& operator=(const MsgRemoveCodeUploadParamsAddressesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgRemoveCodeUploadParamsAddressesResponse& operator=(MsgRemoveCodeUploadParamsAddressesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgRemoveCodeUploadParamsAddressesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgRemoveCodeUploadParamsAddressesResponse* internal_default_instance() {
    return reinterpret_cast<const MsgRemoveCodeUploadParamsAddressesResponse*>(
               &_MsgRemoveCodeUploadParamsAddressesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(MsgRemoveCodeUploadParamsAddressesResponse& a, MsgRemoveCodeUploadParamsAddressesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgRemoveCodeUploadParamsAddressesResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgRemoveCodeUploadParamsAddressesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgRemoveCodeUploadParamsAddressesResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgRemoveCodeUploadParamsAddressesResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgRemoveCodeUploadParamsAddressesResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgRemoveCodeUploadParamsAddressesResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cosmwasm.wasm.v1.MsgRemoveCodeUploadParamsAddressesResponse";
  }
  protected:
  explicit MsgRemoveCodeUploadParamsAddressesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgRemoveCodeUploadParamsAddressesResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// MsgStoreCode

// string sender = 1 [json_name = "sender"];
inline void MsgStoreCode::clear_sender() {
  _impl_.sender_.ClearToEmpty();
}
inline const std::string& MsgStoreCode::sender() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgStoreCode.sender)
  return _internal_sender();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgStoreCode::set_sender(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.sender_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgStoreCode.sender)
}
inline std::string* MsgStoreCode::mutable_sender() {
  std::string* _s = _internal_mutable_sender();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgStoreCode.sender)
  return _s;
}
inline const std::string& MsgStoreCode::_internal_sender() const {
  return _impl_.sender_.Get();
}
inline void MsgStoreCode::_internal_set_sender(const std::string& value) {
  ;


  _impl_.sender_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgStoreCode::_internal_mutable_sender() {
  ;
  return _impl_.sender_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgStoreCode::release_sender() {
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgStoreCode.sender)
  return _impl_.sender_.Release();
}
inline void MsgStoreCode::set_allocated_sender(std::string* value) {
  _impl_.sender_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.sender_.IsDefault()) {
          _impl_.sender_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgStoreCode.sender)
}

// bytes wasm_byte_code = 2 [json_name = "wasmByteCode", (.gogoproto.customname) = "WASMByteCode"];
inline void MsgStoreCode::clear_wasm_byte_code() {
  _impl_.wasm_byte_code_.ClearToEmpty();
}
inline const std::string& MsgStoreCode::wasm_byte_code() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgStoreCode.wasm_byte_code)
  return _internal_wasm_byte_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgStoreCode::set_wasm_byte_code(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.wasm_byte_code_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgStoreCode.wasm_byte_code)
}
inline std::string* MsgStoreCode::mutable_wasm_byte_code() {
  std::string* _s = _internal_mutable_wasm_byte_code();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgStoreCode.wasm_byte_code)
  return _s;
}
inline const std::string& MsgStoreCode::_internal_wasm_byte_code() const {
  return _impl_.wasm_byte_code_.Get();
}
inline void MsgStoreCode::_internal_set_wasm_byte_code(const std::string& value) {
  ;


  _impl_.wasm_byte_code_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgStoreCode::_internal_mutable_wasm_byte_code() {
  ;
  return _impl_.wasm_byte_code_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgStoreCode::release_wasm_byte_code() {
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgStoreCode.wasm_byte_code)
  return _impl_.wasm_byte_code_.Release();
}
inline void MsgStoreCode::set_allocated_wasm_byte_code(std::string* value) {
  _impl_.wasm_byte_code_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.wasm_byte_code_.IsDefault()) {
          _impl_.wasm_byte_code_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgStoreCode.wasm_byte_code)
}

// .cosmwasm.wasm.v1.AccessConfig instantiate_permission = 5 [json_name = "instantiatePermission"];
inline bool MsgStoreCode::has_instantiate_permission() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.instantiate_permission_ != nullptr);
  return value;
}
inline const ::cosmwasm::wasm::v1::AccessConfig& MsgStoreCode::_internal_instantiate_permission() const {
  const ::cosmwasm::wasm::v1::AccessConfig* p = _impl_.instantiate_permission_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmwasm::wasm::v1::AccessConfig&>(
      ::cosmwasm::wasm::v1::_AccessConfig_default_instance_);
}
inline const ::cosmwasm::wasm::v1::AccessConfig& MsgStoreCode::instantiate_permission() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgStoreCode.instantiate_permission)
  return _internal_instantiate_permission();
}
inline void MsgStoreCode::unsafe_arena_set_allocated_instantiate_permission(
    ::cosmwasm::wasm::v1::AccessConfig* instantiate_permission) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.instantiate_permission_);
  }
  _impl_.instantiate_permission_ = instantiate_permission;
  if (instantiate_permission) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmwasm.wasm.v1.MsgStoreCode.instantiate_permission)
}
inline ::cosmwasm::wasm::v1::AccessConfig* MsgStoreCode::release_instantiate_permission() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmwasm::wasm::v1::AccessConfig* temp = _impl_.instantiate_permission_;
  _impl_.instantiate_permission_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::cosmwasm::wasm::v1::AccessConfig* MsgStoreCode::unsafe_arena_release_instantiate_permission() {
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgStoreCode.instantiate_permission)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmwasm::wasm::v1::AccessConfig* temp = _impl_.instantiate_permission_;
  _impl_.instantiate_permission_ = nullptr;
  return temp;
}
inline ::cosmwasm::wasm::v1::AccessConfig* MsgStoreCode::_internal_mutable_instantiate_permission() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.instantiate_permission_ == nullptr) {
    auto* p = CreateMaybeMessage<::cosmwasm::wasm::v1::AccessConfig>(GetArenaForAllocation());
    _impl_.instantiate_permission_ = p;
  }
  return _impl_.instantiate_permission_;
}
inline ::cosmwasm::wasm::v1::AccessConfig* MsgStoreCode::mutable_instantiate_permission() {
  ::cosmwasm::wasm::v1::AccessConfig* _msg = _internal_mutable_instantiate_permission();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgStoreCode.instantiate_permission)
  return _msg;
}
inline void MsgStoreCode::set_allocated_instantiate_permission(::cosmwasm::wasm::v1::AccessConfig* instantiate_permission) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.instantiate_permission_);
  }
  if (instantiate_permission) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(instantiate_permission));
    if (message_arena != submessage_arena) {
      instantiate_permission = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, instantiate_permission, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.instantiate_permission_ = instantiate_permission;
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgStoreCode.instantiate_permission)
}

// -------------------------------------------------------------------

// MsgStoreCodeResponse

// uint64 code_id = 1 [json_name = "codeId", (.gogoproto.customname) = "CodeID"];
inline void MsgStoreCodeResponse::clear_code_id() {
  _impl_.code_id_ = ::uint64_t{0u};
}
inline ::uint64_t MsgStoreCodeResponse::code_id() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgStoreCodeResponse.code_id)
  return _internal_code_id();
}
inline void MsgStoreCodeResponse::set_code_id(::uint64_t value) {
  _internal_set_code_id(value);
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgStoreCodeResponse.code_id)
}
inline ::uint64_t MsgStoreCodeResponse::_internal_code_id() const {
  return _impl_.code_id_;
}
inline void MsgStoreCodeResponse::_internal_set_code_id(::uint64_t value) {
  ;
  _impl_.code_id_ = value;
}

// bytes checksum = 2 [json_name = "checksum"];
inline void MsgStoreCodeResponse::clear_checksum() {
  _impl_.checksum_.ClearToEmpty();
}
inline const std::string& MsgStoreCodeResponse::checksum() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgStoreCodeResponse.checksum)
  return _internal_checksum();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgStoreCodeResponse::set_checksum(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.checksum_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgStoreCodeResponse.checksum)
}
inline std::string* MsgStoreCodeResponse::mutable_checksum() {
  std::string* _s = _internal_mutable_checksum();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgStoreCodeResponse.checksum)
  return _s;
}
inline const std::string& MsgStoreCodeResponse::_internal_checksum() const {
  return _impl_.checksum_.Get();
}
inline void MsgStoreCodeResponse::_internal_set_checksum(const std::string& value) {
  ;


  _impl_.checksum_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgStoreCodeResponse::_internal_mutable_checksum() {
  ;
  return _impl_.checksum_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgStoreCodeResponse::release_checksum() {
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgStoreCodeResponse.checksum)
  return _impl_.checksum_.Release();
}
inline void MsgStoreCodeResponse::set_allocated_checksum(std::string* value) {
  _impl_.checksum_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.checksum_.IsDefault()) {
          _impl_.checksum_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgStoreCodeResponse.checksum)
}

// -------------------------------------------------------------------

// MsgInstantiateContract

// string sender = 1 [json_name = "sender"];
inline void MsgInstantiateContract::clear_sender() {
  _impl_.sender_.ClearToEmpty();
}
inline const std::string& MsgInstantiateContract::sender() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgInstantiateContract.sender)
  return _internal_sender();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgInstantiateContract::set_sender(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.sender_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgInstantiateContract.sender)
}
inline std::string* MsgInstantiateContract::mutable_sender() {
  std::string* _s = _internal_mutable_sender();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgInstantiateContract.sender)
  return _s;
}
inline const std::string& MsgInstantiateContract::_internal_sender() const {
  return _impl_.sender_.Get();
}
inline void MsgInstantiateContract::_internal_set_sender(const std::string& value) {
  ;


  _impl_.sender_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgInstantiateContract::_internal_mutable_sender() {
  ;
  return _impl_.sender_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgInstantiateContract::release_sender() {
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgInstantiateContract.sender)
  return _impl_.sender_.Release();
}
inline void MsgInstantiateContract::set_allocated_sender(std::string* value) {
  _impl_.sender_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.sender_.IsDefault()) {
          _impl_.sender_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgInstantiateContract.sender)
}

// string admin = 2 [json_name = "admin"];
inline void MsgInstantiateContract::clear_admin() {
  _impl_.admin_.ClearToEmpty();
}
inline const std::string& MsgInstantiateContract::admin() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgInstantiateContract.admin)
  return _internal_admin();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgInstantiateContract::set_admin(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.admin_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgInstantiateContract.admin)
}
inline std::string* MsgInstantiateContract::mutable_admin() {
  std::string* _s = _internal_mutable_admin();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgInstantiateContract.admin)
  return _s;
}
inline const std::string& MsgInstantiateContract::_internal_admin() const {
  return _impl_.admin_.Get();
}
inline void MsgInstantiateContract::_internal_set_admin(const std::string& value) {
  ;


  _impl_.admin_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgInstantiateContract::_internal_mutable_admin() {
  ;
  return _impl_.admin_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgInstantiateContract::release_admin() {
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgInstantiateContract.admin)
  return _impl_.admin_.Release();
}
inline void MsgInstantiateContract::set_allocated_admin(std::string* value) {
  _impl_.admin_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.admin_.IsDefault()) {
          _impl_.admin_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgInstantiateContract.admin)
}

// uint64 code_id = 3 [json_name = "codeId", (.gogoproto.customname) = "CodeID"];
inline void MsgInstantiateContract::clear_code_id() {
  _impl_.code_id_ = ::uint64_t{0u};
}
inline ::uint64_t MsgInstantiateContract::code_id() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgInstantiateContract.code_id)
  return _internal_code_id();
}
inline void MsgInstantiateContract::set_code_id(::uint64_t value) {
  _internal_set_code_id(value);
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgInstantiateContract.code_id)
}
inline ::uint64_t MsgInstantiateContract::_internal_code_id() const {
  return _impl_.code_id_;
}
inline void MsgInstantiateContract::_internal_set_code_id(::uint64_t value) {
  ;
  _impl_.code_id_ = value;
}

// string label = 4 [json_name = "label"];
inline void MsgInstantiateContract::clear_label() {
  _impl_.label_.ClearToEmpty();
}
inline const std::string& MsgInstantiateContract::label() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgInstantiateContract.label)
  return _internal_label();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgInstantiateContract::set_label(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.label_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgInstantiateContract.label)
}
inline std::string* MsgInstantiateContract::mutable_label() {
  std::string* _s = _internal_mutable_label();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgInstantiateContract.label)
  return _s;
}
inline const std::string& MsgInstantiateContract::_internal_label() const {
  return _impl_.label_.Get();
}
inline void MsgInstantiateContract::_internal_set_label(const std::string& value) {
  ;


  _impl_.label_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgInstantiateContract::_internal_mutable_label() {
  ;
  return _impl_.label_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgInstantiateContract::release_label() {
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgInstantiateContract.label)
  return _impl_.label_.Release();
}
inline void MsgInstantiateContract::set_allocated_label(std::string* value) {
  _impl_.label_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.label_.IsDefault()) {
          _impl_.label_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgInstantiateContract.label)
}

// bytes msg = 5 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage"];
inline void MsgInstantiateContract::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& MsgInstantiateContract::msg() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgInstantiateContract.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgInstantiateContract::set_msg(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.msg_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgInstantiateContract.msg)
}
inline std::string* MsgInstantiateContract::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgInstantiateContract.msg)
  return _s;
}
inline const std::string& MsgInstantiateContract::_internal_msg() const {
  return _impl_.msg_.Get();
}
inline void MsgInstantiateContract::_internal_set_msg(const std::string& value) {
  ;


  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgInstantiateContract::_internal_mutable_msg() {
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgInstantiateContract::release_msg() {
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgInstantiateContract.msg)
  return _impl_.msg_.Release();
}
inline void MsgInstantiateContract::set_allocated_msg(std::string* value) {
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgInstantiateContract.msg)
}

// repeated .cosmos.base.v1beta1.Coin funds = 6 [json_name = "funds", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];
inline int MsgInstantiateContract::_internal_funds_size() const {
  return _impl_.funds_.size();
}
inline int MsgInstantiateContract::funds_size() const {
  return _internal_funds_size();
}
inline ::cosmos::base::v1beta1::Coin* MsgInstantiateContract::mutable_funds(int index) {
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgInstantiateContract.funds)
  return _internal_mutable_funds()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin >*
MsgInstantiateContract::mutable_funds() {
  // @@protoc_insertion_point(field_mutable_list:cosmwasm.wasm.v1.MsgInstantiateContract.funds)
  return _internal_mutable_funds();
}
inline const ::cosmos::base::v1beta1::Coin& MsgInstantiateContract::_internal_funds(int index) const {
  return _internal_funds().Get(index);
}
inline const ::cosmos::base::v1beta1::Coin& MsgInstantiateContract::funds(int index) const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgInstantiateContract.funds)
  return _internal_funds(index);
}
inline ::cosmos::base::v1beta1::Coin* MsgInstantiateContract::_internal_add_funds() {
  return _internal_mutable_funds()->Add();
}
inline ::cosmos::base::v1beta1::Coin* MsgInstantiateContract::add_funds() {
  ::cosmos::base::v1beta1::Coin* _add = _internal_add_funds();
  // @@protoc_insertion_point(field_add:cosmwasm.wasm.v1.MsgInstantiateContract.funds)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin >&
MsgInstantiateContract::funds() const {
  // @@protoc_insertion_point(field_list:cosmwasm.wasm.v1.MsgInstantiateContract.funds)
  return _internal_funds();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::Coin>&
MsgInstantiateContract::_internal_funds() const {
  return _impl_.funds_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::Coin>*
MsgInstantiateContract::_internal_mutable_funds() {
  return &_impl_.funds_;
}

// -------------------------------------------------------------------

// MsgInstantiateContractResponse

// string address = 1 [json_name = "address"];
inline void MsgInstantiateContractResponse::clear_address() {
  _impl_.address_.ClearToEmpty();
}
inline const std::string& MsgInstantiateContractResponse::address() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgInstantiateContractResponse.address)
  return _internal_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgInstantiateContractResponse::set_address(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.address_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgInstantiateContractResponse.address)
}
inline std::string* MsgInstantiateContractResponse::mutable_address() {
  std::string* _s = _internal_mutable_address();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgInstantiateContractResponse.address)
  return _s;
}
inline const std::string& MsgInstantiateContractResponse::_internal_address() const {
  return _impl_.address_.Get();
}
inline void MsgInstantiateContractResponse::_internal_set_address(const std::string& value) {
  ;


  _impl_.address_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgInstantiateContractResponse::_internal_mutable_address() {
  ;
  return _impl_.address_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgInstantiateContractResponse::release_address() {
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgInstantiateContractResponse.address)
  return _impl_.address_.Release();
}
inline void MsgInstantiateContractResponse::set_allocated_address(std::string* value) {
  _impl_.address_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.address_.IsDefault()) {
          _impl_.address_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgInstantiateContractResponse.address)
}

// bytes data = 2 [json_name = "data"];
inline void MsgInstantiateContractResponse::clear_data() {
  _impl_.data_.ClearToEmpty();
}
inline const std::string& MsgInstantiateContractResponse::data() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgInstantiateContractResponse.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgInstantiateContractResponse::set_data(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgInstantiateContractResponse.data)
}
inline std::string* MsgInstantiateContractResponse::mutable_data() {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgInstantiateContractResponse.data)
  return _s;
}
inline const std::string& MsgInstantiateContractResponse::_internal_data() const {
  return _impl_.data_.Get();
}
inline void MsgInstantiateContractResponse::_internal_set_data(const std::string& value) {
  ;


  _impl_.data_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgInstantiateContractResponse::_internal_mutable_data() {
  ;
  return _impl_.data_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgInstantiateContractResponse::release_data() {
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgInstantiateContractResponse.data)
  return _impl_.data_.Release();
}
inline void MsgInstantiateContractResponse::set_allocated_data(std::string* value) {
  _impl_.data_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_.IsDefault()) {
          _impl_.data_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgInstantiateContractResponse.data)
}

// -------------------------------------------------------------------

// MsgInstantiateContract2

// string sender = 1 [json_name = "sender"];
inline void MsgInstantiateContract2::clear_sender() {
  _impl_.sender_.ClearToEmpty();
}
inline const std::string& MsgInstantiateContract2::sender() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgInstantiateContract2.sender)
  return _internal_sender();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgInstantiateContract2::set_sender(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.sender_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgInstantiateContract2.sender)
}
inline std::string* MsgInstantiateContract2::mutable_sender() {
  std::string* _s = _internal_mutable_sender();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgInstantiateContract2.sender)
  return _s;
}
inline const std::string& MsgInstantiateContract2::_internal_sender() const {
  return _impl_.sender_.Get();
}
inline void MsgInstantiateContract2::_internal_set_sender(const std::string& value) {
  ;


  _impl_.sender_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgInstantiateContract2::_internal_mutable_sender() {
  ;
  return _impl_.sender_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgInstantiateContract2::release_sender() {
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgInstantiateContract2.sender)
  return _impl_.sender_.Release();
}
inline void MsgInstantiateContract2::set_allocated_sender(std::string* value) {
  _impl_.sender_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.sender_.IsDefault()) {
          _impl_.sender_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgInstantiateContract2.sender)
}

// string admin = 2 [json_name = "admin"];
inline void MsgInstantiateContract2::clear_admin() {
  _impl_.admin_.ClearToEmpty();
}
inline const std::string& MsgInstantiateContract2::admin() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgInstantiateContract2.admin)
  return _internal_admin();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgInstantiateContract2::set_admin(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.admin_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgInstantiateContract2.admin)
}
inline std::string* MsgInstantiateContract2::mutable_admin() {
  std::string* _s = _internal_mutable_admin();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgInstantiateContract2.admin)
  return _s;
}
inline const std::string& MsgInstantiateContract2::_internal_admin() const {
  return _impl_.admin_.Get();
}
inline void MsgInstantiateContract2::_internal_set_admin(const std::string& value) {
  ;


  _impl_.admin_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgInstantiateContract2::_internal_mutable_admin() {
  ;
  return _impl_.admin_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgInstantiateContract2::release_admin() {
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgInstantiateContract2.admin)
  return _impl_.admin_.Release();
}
inline void MsgInstantiateContract2::set_allocated_admin(std::string* value) {
  _impl_.admin_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.admin_.IsDefault()) {
          _impl_.admin_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgInstantiateContract2.admin)
}

// uint64 code_id = 3 [json_name = "codeId", (.gogoproto.customname) = "CodeID"];
inline void MsgInstantiateContract2::clear_code_id() {
  _impl_.code_id_ = ::uint64_t{0u};
}
inline ::uint64_t MsgInstantiateContract2::code_id() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgInstantiateContract2.code_id)
  return _internal_code_id();
}
inline void MsgInstantiateContract2::set_code_id(::uint64_t value) {
  _internal_set_code_id(value);
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgInstantiateContract2.code_id)
}
inline ::uint64_t MsgInstantiateContract2::_internal_code_id() const {
  return _impl_.code_id_;
}
inline void MsgInstantiateContract2::_internal_set_code_id(::uint64_t value) {
  ;
  _impl_.code_id_ = value;
}

// string label = 4 [json_name = "label"];
inline void MsgInstantiateContract2::clear_label() {
  _impl_.label_.ClearToEmpty();
}
inline const std::string& MsgInstantiateContract2::label() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgInstantiateContract2.label)
  return _internal_label();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgInstantiateContract2::set_label(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.label_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgInstantiateContract2.label)
}
inline std::string* MsgInstantiateContract2::mutable_label() {
  std::string* _s = _internal_mutable_label();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgInstantiateContract2.label)
  return _s;
}
inline const std::string& MsgInstantiateContract2::_internal_label() const {
  return _impl_.label_.Get();
}
inline void MsgInstantiateContract2::_internal_set_label(const std::string& value) {
  ;


  _impl_.label_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgInstantiateContract2::_internal_mutable_label() {
  ;
  return _impl_.label_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgInstantiateContract2::release_label() {
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgInstantiateContract2.label)
  return _impl_.label_.Release();
}
inline void MsgInstantiateContract2::set_allocated_label(std::string* value) {
  _impl_.label_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.label_.IsDefault()) {
          _impl_.label_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgInstantiateContract2.label)
}

// bytes msg = 5 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage"];
inline void MsgInstantiateContract2::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& MsgInstantiateContract2::msg() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgInstantiateContract2.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgInstantiateContract2::set_msg(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.msg_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgInstantiateContract2.msg)
}
inline std::string* MsgInstantiateContract2::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgInstantiateContract2.msg)
  return _s;
}
inline const std::string& MsgInstantiateContract2::_internal_msg() const {
  return _impl_.msg_.Get();
}
inline void MsgInstantiateContract2::_internal_set_msg(const std::string& value) {
  ;


  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgInstantiateContract2::_internal_mutable_msg() {
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgInstantiateContract2::release_msg() {
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgInstantiateContract2.msg)
  return _impl_.msg_.Release();
}
inline void MsgInstantiateContract2::set_allocated_msg(std::string* value) {
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgInstantiateContract2.msg)
}

// repeated .cosmos.base.v1beta1.Coin funds = 6 [json_name = "funds", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];
inline int MsgInstantiateContract2::_internal_funds_size() const {
  return _impl_.funds_.size();
}
inline int MsgInstantiateContract2::funds_size() const {
  return _internal_funds_size();
}
inline ::cosmos::base::v1beta1::Coin* MsgInstantiateContract2::mutable_funds(int index) {
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgInstantiateContract2.funds)
  return _internal_mutable_funds()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin >*
MsgInstantiateContract2::mutable_funds() {
  // @@protoc_insertion_point(field_mutable_list:cosmwasm.wasm.v1.MsgInstantiateContract2.funds)
  return _internal_mutable_funds();
}
inline const ::cosmos::base::v1beta1::Coin& MsgInstantiateContract2::_internal_funds(int index) const {
  return _internal_funds().Get(index);
}
inline const ::cosmos::base::v1beta1::Coin& MsgInstantiateContract2::funds(int index) const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgInstantiateContract2.funds)
  return _internal_funds(index);
}
inline ::cosmos::base::v1beta1::Coin* MsgInstantiateContract2::_internal_add_funds() {
  return _internal_mutable_funds()->Add();
}
inline ::cosmos::base::v1beta1::Coin* MsgInstantiateContract2::add_funds() {
  ::cosmos::base::v1beta1::Coin* _add = _internal_add_funds();
  // @@protoc_insertion_point(field_add:cosmwasm.wasm.v1.MsgInstantiateContract2.funds)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin >&
MsgInstantiateContract2::funds() const {
  // @@protoc_insertion_point(field_list:cosmwasm.wasm.v1.MsgInstantiateContract2.funds)
  return _internal_funds();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::Coin>&
MsgInstantiateContract2::_internal_funds() const {
  return _impl_.funds_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::Coin>*
MsgInstantiateContract2::_internal_mutable_funds() {
  return &_impl_.funds_;
}

// bytes salt = 7 [json_name = "salt"];
inline void MsgInstantiateContract2::clear_salt() {
  _impl_.salt_.ClearToEmpty();
}
inline const std::string& MsgInstantiateContract2::salt() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgInstantiateContract2.salt)
  return _internal_salt();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgInstantiateContract2::set_salt(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.salt_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgInstantiateContract2.salt)
}
inline std::string* MsgInstantiateContract2::mutable_salt() {
  std::string* _s = _internal_mutable_salt();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgInstantiateContract2.salt)
  return _s;
}
inline const std::string& MsgInstantiateContract2::_internal_salt() const {
  return _impl_.salt_.Get();
}
inline void MsgInstantiateContract2::_internal_set_salt(const std::string& value) {
  ;


  _impl_.salt_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgInstantiateContract2::_internal_mutable_salt() {
  ;
  return _impl_.salt_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgInstantiateContract2::release_salt() {
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgInstantiateContract2.salt)
  return _impl_.salt_.Release();
}
inline void MsgInstantiateContract2::set_allocated_salt(std::string* value) {
  _impl_.salt_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.salt_.IsDefault()) {
          _impl_.salt_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgInstantiateContract2.salt)
}

// bool fix_msg = 8 [json_name = "fixMsg"];
inline void MsgInstantiateContract2::clear_fix_msg() {
  _impl_.fix_msg_ = false;
}
inline bool MsgInstantiateContract2::fix_msg() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgInstantiateContract2.fix_msg)
  return _internal_fix_msg();
}
inline void MsgInstantiateContract2::set_fix_msg(bool value) {
  _internal_set_fix_msg(value);
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgInstantiateContract2.fix_msg)
}
inline bool MsgInstantiateContract2::_internal_fix_msg() const {
  return _impl_.fix_msg_;
}
inline void MsgInstantiateContract2::_internal_set_fix_msg(bool value) {
  ;
  _impl_.fix_msg_ = value;
}

// -------------------------------------------------------------------

// MsgInstantiateContract2Response

// string address = 1 [json_name = "address"];
inline void MsgInstantiateContract2Response::clear_address() {
  _impl_.address_.ClearToEmpty();
}
inline const std::string& MsgInstantiateContract2Response::address() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgInstantiateContract2Response.address)
  return _internal_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgInstantiateContract2Response::set_address(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.address_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgInstantiateContract2Response.address)
}
inline std::string* MsgInstantiateContract2Response::mutable_address() {
  std::string* _s = _internal_mutable_address();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgInstantiateContract2Response.address)
  return _s;
}
inline const std::string& MsgInstantiateContract2Response::_internal_address() const {
  return _impl_.address_.Get();
}
inline void MsgInstantiateContract2Response::_internal_set_address(const std::string& value) {
  ;


  _impl_.address_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgInstantiateContract2Response::_internal_mutable_address() {
  ;
  return _impl_.address_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgInstantiateContract2Response::release_address() {
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgInstantiateContract2Response.address)
  return _impl_.address_.Release();
}
inline void MsgInstantiateContract2Response::set_allocated_address(std::string* value) {
  _impl_.address_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.address_.IsDefault()) {
          _impl_.address_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgInstantiateContract2Response.address)
}

// bytes data = 2 [json_name = "data"];
inline void MsgInstantiateContract2Response::clear_data() {
  _impl_.data_.ClearToEmpty();
}
inline const std::string& MsgInstantiateContract2Response::data() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgInstantiateContract2Response.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgInstantiateContract2Response::set_data(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgInstantiateContract2Response.data)
}
inline std::string* MsgInstantiateContract2Response::mutable_data() {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgInstantiateContract2Response.data)
  return _s;
}
inline const std::string& MsgInstantiateContract2Response::_internal_data() const {
  return _impl_.data_.Get();
}
inline void MsgInstantiateContract2Response::_internal_set_data(const std::string& value) {
  ;


  _impl_.data_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgInstantiateContract2Response::_internal_mutable_data() {
  ;
  return _impl_.data_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgInstantiateContract2Response::release_data() {
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgInstantiateContract2Response.data)
  return _impl_.data_.Release();
}
inline void MsgInstantiateContract2Response::set_allocated_data(std::string* value) {
  _impl_.data_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_.IsDefault()) {
          _impl_.data_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgInstantiateContract2Response.data)
}

// -------------------------------------------------------------------

// MsgExecuteContract

// string sender = 1 [json_name = "sender"];
inline void MsgExecuteContract::clear_sender() {
  _impl_.sender_.ClearToEmpty();
}
inline const std::string& MsgExecuteContract::sender() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgExecuteContract.sender)
  return _internal_sender();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgExecuteContract::set_sender(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.sender_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgExecuteContract.sender)
}
inline std::string* MsgExecuteContract::mutable_sender() {
  std::string* _s = _internal_mutable_sender();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgExecuteContract.sender)
  return _s;
}
inline const std::string& MsgExecuteContract::_internal_sender() const {
  return _impl_.sender_.Get();
}
inline void MsgExecuteContract::_internal_set_sender(const std::string& value) {
  ;


  _impl_.sender_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgExecuteContract::_internal_mutable_sender() {
  ;
  return _impl_.sender_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgExecuteContract::release_sender() {
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgExecuteContract.sender)
  return _impl_.sender_.Release();
}
inline void MsgExecuteContract::set_allocated_sender(std::string* value) {
  _impl_.sender_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.sender_.IsDefault()) {
          _impl_.sender_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgExecuteContract.sender)
}

// string contract = 2 [json_name = "contract"];
inline void MsgExecuteContract::clear_contract() {
  _impl_.contract_.ClearToEmpty();
}
inline const std::string& MsgExecuteContract::contract() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgExecuteContract.contract)
  return _internal_contract();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgExecuteContract::set_contract(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.contract_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgExecuteContract.contract)
}
inline std::string* MsgExecuteContract::mutable_contract() {
  std::string* _s = _internal_mutable_contract();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgExecuteContract.contract)
  return _s;
}
inline const std::string& MsgExecuteContract::_internal_contract() const {
  return _impl_.contract_.Get();
}
inline void MsgExecuteContract::_internal_set_contract(const std::string& value) {
  ;


  _impl_.contract_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgExecuteContract::_internal_mutable_contract() {
  ;
  return _impl_.contract_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgExecuteContract::release_contract() {
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgExecuteContract.contract)
  return _impl_.contract_.Release();
}
inline void MsgExecuteContract::set_allocated_contract(std::string* value) {
  _impl_.contract_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.contract_.IsDefault()) {
          _impl_.contract_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgExecuteContract.contract)
}

// bytes msg = 3 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage"];
inline void MsgExecuteContract::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& MsgExecuteContract::msg() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgExecuteContract.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgExecuteContract::set_msg(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.msg_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgExecuteContract.msg)
}
inline std::string* MsgExecuteContract::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgExecuteContract.msg)
  return _s;
}
inline const std::string& MsgExecuteContract::_internal_msg() const {
  return _impl_.msg_.Get();
}
inline void MsgExecuteContract::_internal_set_msg(const std::string& value) {
  ;


  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgExecuteContract::_internal_mutable_msg() {
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgExecuteContract::release_msg() {
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgExecuteContract.msg)
  return _impl_.msg_.Release();
}
inline void MsgExecuteContract::set_allocated_msg(std::string* value) {
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgExecuteContract.msg)
}

// repeated .cosmos.base.v1beta1.Coin funds = 5 [json_name = "funds", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];
inline int MsgExecuteContract::_internal_funds_size() const {
  return _impl_.funds_.size();
}
inline int MsgExecuteContract::funds_size() const {
  return _internal_funds_size();
}
inline ::cosmos::base::v1beta1::Coin* MsgExecuteContract::mutable_funds(int index) {
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgExecuteContract.funds)
  return _internal_mutable_funds()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin >*
MsgExecuteContract::mutable_funds() {
  // @@protoc_insertion_point(field_mutable_list:cosmwasm.wasm.v1.MsgExecuteContract.funds)
  return _internal_mutable_funds();
}
inline const ::cosmos::base::v1beta1::Coin& MsgExecuteContract::_internal_funds(int index) const {
  return _internal_funds().Get(index);
}
inline const ::cosmos::base::v1beta1::Coin& MsgExecuteContract::funds(int index) const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgExecuteContract.funds)
  return _internal_funds(index);
}
inline ::cosmos::base::v1beta1::Coin* MsgExecuteContract::_internal_add_funds() {
  return _internal_mutable_funds()->Add();
}
inline ::cosmos::base::v1beta1::Coin* MsgExecuteContract::add_funds() {
  ::cosmos::base::v1beta1::Coin* _add = _internal_add_funds();
  // @@protoc_insertion_point(field_add:cosmwasm.wasm.v1.MsgExecuteContract.funds)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin >&
MsgExecuteContract::funds() const {
  // @@protoc_insertion_point(field_list:cosmwasm.wasm.v1.MsgExecuteContract.funds)
  return _internal_funds();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::Coin>&
MsgExecuteContract::_internal_funds() const {
  return _impl_.funds_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::Coin>*
MsgExecuteContract::_internal_mutable_funds() {
  return &_impl_.funds_;
}

// -------------------------------------------------------------------

// MsgExecuteContractResponse

// bytes data = 1 [json_name = "data"];
inline void MsgExecuteContractResponse::clear_data() {
  _impl_.data_.ClearToEmpty();
}
inline const std::string& MsgExecuteContractResponse::data() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgExecuteContractResponse.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgExecuteContractResponse::set_data(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgExecuteContractResponse.data)
}
inline std::string* MsgExecuteContractResponse::mutable_data() {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgExecuteContractResponse.data)
  return _s;
}
inline const std::string& MsgExecuteContractResponse::_internal_data() const {
  return _impl_.data_.Get();
}
inline void MsgExecuteContractResponse::_internal_set_data(const std::string& value) {
  ;


  _impl_.data_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgExecuteContractResponse::_internal_mutable_data() {
  ;
  return _impl_.data_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgExecuteContractResponse::release_data() {
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgExecuteContractResponse.data)
  return _impl_.data_.Release();
}
inline void MsgExecuteContractResponse::set_allocated_data(std::string* value) {
  _impl_.data_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_.IsDefault()) {
          _impl_.data_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgExecuteContractResponse.data)
}

// -------------------------------------------------------------------

// MsgMigrateContract

// string sender = 1 [json_name = "sender"];
inline void MsgMigrateContract::clear_sender() {
  _impl_.sender_.ClearToEmpty();
}
inline const std::string& MsgMigrateContract::sender() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgMigrateContract.sender)
  return _internal_sender();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgMigrateContract::set_sender(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.sender_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgMigrateContract.sender)
}
inline std::string* MsgMigrateContract::mutable_sender() {
  std::string* _s = _internal_mutable_sender();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgMigrateContract.sender)
  return _s;
}
inline const std::string& MsgMigrateContract::_internal_sender() const {
  return _impl_.sender_.Get();
}
inline void MsgMigrateContract::_internal_set_sender(const std::string& value) {
  ;


  _impl_.sender_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgMigrateContract::_internal_mutable_sender() {
  ;
  return _impl_.sender_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgMigrateContract::release_sender() {
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgMigrateContract.sender)
  return _impl_.sender_.Release();
}
inline void MsgMigrateContract::set_allocated_sender(std::string* value) {
  _impl_.sender_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.sender_.IsDefault()) {
          _impl_.sender_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgMigrateContract.sender)
}

// string contract = 2 [json_name = "contract"];
inline void MsgMigrateContract::clear_contract() {
  _impl_.contract_.ClearToEmpty();
}
inline const std::string& MsgMigrateContract::contract() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgMigrateContract.contract)
  return _internal_contract();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgMigrateContract::set_contract(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.contract_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgMigrateContract.contract)
}
inline std::string* MsgMigrateContract::mutable_contract() {
  std::string* _s = _internal_mutable_contract();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgMigrateContract.contract)
  return _s;
}
inline const std::string& MsgMigrateContract::_internal_contract() const {
  return _impl_.contract_.Get();
}
inline void MsgMigrateContract::_internal_set_contract(const std::string& value) {
  ;


  _impl_.contract_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgMigrateContract::_internal_mutable_contract() {
  ;
  return _impl_.contract_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgMigrateContract::release_contract() {
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgMigrateContract.contract)
  return _impl_.contract_.Release();
}
inline void MsgMigrateContract::set_allocated_contract(std::string* value) {
  _impl_.contract_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.contract_.IsDefault()) {
          _impl_.contract_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgMigrateContract.contract)
}

// uint64 code_id = 3 [json_name = "codeId", (.gogoproto.customname) = "CodeID"];
inline void MsgMigrateContract::clear_code_id() {
  _impl_.code_id_ = ::uint64_t{0u};
}
inline ::uint64_t MsgMigrateContract::code_id() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgMigrateContract.code_id)
  return _internal_code_id();
}
inline void MsgMigrateContract::set_code_id(::uint64_t value) {
  _internal_set_code_id(value);
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgMigrateContract.code_id)
}
inline ::uint64_t MsgMigrateContract::_internal_code_id() const {
  return _impl_.code_id_;
}
inline void MsgMigrateContract::_internal_set_code_id(::uint64_t value) {
  ;
  _impl_.code_id_ = value;
}

// bytes msg = 4 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage"];
inline void MsgMigrateContract::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& MsgMigrateContract::msg() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgMigrateContract.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgMigrateContract::set_msg(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.msg_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgMigrateContract.msg)
}
inline std::string* MsgMigrateContract::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgMigrateContract.msg)
  return _s;
}
inline const std::string& MsgMigrateContract::_internal_msg() const {
  return _impl_.msg_.Get();
}
inline void MsgMigrateContract::_internal_set_msg(const std::string& value) {
  ;


  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgMigrateContract::_internal_mutable_msg() {
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgMigrateContract::release_msg() {
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgMigrateContract.msg)
  return _impl_.msg_.Release();
}
inline void MsgMigrateContract::set_allocated_msg(std::string* value) {
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgMigrateContract.msg)
}

// -------------------------------------------------------------------

// MsgMigrateContractResponse

// bytes data = 1 [json_name = "data"];
inline void MsgMigrateContractResponse::clear_data() {
  _impl_.data_.ClearToEmpty();
}
inline const std::string& MsgMigrateContractResponse::data() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgMigrateContractResponse.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgMigrateContractResponse::set_data(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgMigrateContractResponse.data)
}
inline std::string* MsgMigrateContractResponse::mutable_data() {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgMigrateContractResponse.data)
  return _s;
}
inline const std::string& MsgMigrateContractResponse::_internal_data() const {
  return _impl_.data_.Get();
}
inline void MsgMigrateContractResponse::_internal_set_data(const std::string& value) {
  ;


  _impl_.data_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgMigrateContractResponse::_internal_mutable_data() {
  ;
  return _impl_.data_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgMigrateContractResponse::release_data() {
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgMigrateContractResponse.data)
  return _impl_.data_.Release();
}
inline void MsgMigrateContractResponse::set_allocated_data(std::string* value) {
  _impl_.data_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_.IsDefault()) {
          _impl_.data_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgMigrateContractResponse.data)
}

// -------------------------------------------------------------------

// MsgUpdateAdmin

// string sender = 1 [json_name = "sender"];
inline void MsgUpdateAdmin::clear_sender() {
  _impl_.sender_.ClearToEmpty();
}
inline const std::string& MsgUpdateAdmin::sender() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgUpdateAdmin.sender)
  return _internal_sender();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgUpdateAdmin::set_sender(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.sender_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgUpdateAdmin.sender)
}
inline std::string* MsgUpdateAdmin::mutable_sender() {
  std::string* _s = _internal_mutable_sender();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgUpdateAdmin.sender)
  return _s;
}
inline const std::string& MsgUpdateAdmin::_internal_sender() const {
  return _impl_.sender_.Get();
}
inline void MsgUpdateAdmin::_internal_set_sender(const std::string& value) {
  ;


  _impl_.sender_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgUpdateAdmin::_internal_mutable_sender() {
  ;
  return _impl_.sender_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgUpdateAdmin::release_sender() {
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgUpdateAdmin.sender)
  return _impl_.sender_.Release();
}
inline void MsgUpdateAdmin::set_allocated_sender(std::string* value) {
  _impl_.sender_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.sender_.IsDefault()) {
          _impl_.sender_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgUpdateAdmin.sender)
}

// string new_admin = 2 [json_name = "newAdmin"];
inline void MsgUpdateAdmin::clear_new_admin() {
  _impl_.new_admin_.ClearToEmpty();
}
inline const std::string& MsgUpdateAdmin::new_admin() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgUpdateAdmin.new_admin)
  return _internal_new_admin();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgUpdateAdmin::set_new_admin(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.new_admin_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgUpdateAdmin.new_admin)
}
inline std::string* MsgUpdateAdmin::mutable_new_admin() {
  std::string* _s = _internal_mutable_new_admin();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgUpdateAdmin.new_admin)
  return _s;
}
inline const std::string& MsgUpdateAdmin::_internal_new_admin() const {
  return _impl_.new_admin_.Get();
}
inline void MsgUpdateAdmin::_internal_set_new_admin(const std::string& value) {
  ;


  _impl_.new_admin_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgUpdateAdmin::_internal_mutable_new_admin() {
  ;
  return _impl_.new_admin_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgUpdateAdmin::release_new_admin() {
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgUpdateAdmin.new_admin)
  return _impl_.new_admin_.Release();
}
inline void MsgUpdateAdmin::set_allocated_new_admin(std::string* value) {
  _impl_.new_admin_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.new_admin_.IsDefault()) {
          _impl_.new_admin_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgUpdateAdmin.new_admin)
}

// string contract = 3 [json_name = "contract"];
inline void MsgUpdateAdmin::clear_contract() {
  _impl_.contract_.ClearToEmpty();
}
inline const std::string& MsgUpdateAdmin::contract() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgUpdateAdmin.contract)
  return _internal_contract();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgUpdateAdmin::set_contract(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.contract_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgUpdateAdmin.contract)
}
inline std::string* MsgUpdateAdmin::mutable_contract() {
  std::string* _s = _internal_mutable_contract();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgUpdateAdmin.contract)
  return _s;
}
inline const std::string& MsgUpdateAdmin::_internal_contract() const {
  return _impl_.contract_.Get();
}
inline void MsgUpdateAdmin::_internal_set_contract(const std::string& value) {
  ;


  _impl_.contract_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgUpdateAdmin::_internal_mutable_contract() {
  ;
  return _impl_.contract_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgUpdateAdmin::release_contract() {
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgUpdateAdmin.contract)
  return _impl_.contract_.Release();
}
inline void MsgUpdateAdmin::set_allocated_contract(std::string* value) {
  _impl_.contract_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.contract_.IsDefault()) {
          _impl_.contract_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgUpdateAdmin.contract)
}

// -------------------------------------------------------------------

// MsgUpdateAdminResponse

// -------------------------------------------------------------------

// MsgClearAdmin

// string sender = 1 [json_name = "sender"];
inline void MsgClearAdmin::clear_sender() {
  _impl_.sender_.ClearToEmpty();
}
inline const std::string& MsgClearAdmin::sender() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgClearAdmin.sender)
  return _internal_sender();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgClearAdmin::set_sender(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.sender_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgClearAdmin.sender)
}
inline std::string* MsgClearAdmin::mutable_sender() {
  std::string* _s = _internal_mutable_sender();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgClearAdmin.sender)
  return _s;
}
inline const std::string& MsgClearAdmin::_internal_sender() const {
  return _impl_.sender_.Get();
}
inline void MsgClearAdmin::_internal_set_sender(const std::string& value) {
  ;


  _impl_.sender_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgClearAdmin::_internal_mutable_sender() {
  ;
  return _impl_.sender_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgClearAdmin::release_sender() {
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgClearAdmin.sender)
  return _impl_.sender_.Release();
}
inline void MsgClearAdmin::set_allocated_sender(std::string* value) {
  _impl_.sender_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.sender_.IsDefault()) {
          _impl_.sender_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgClearAdmin.sender)
}

// string contract = 3 [json_name = "contract"];
inline void MsgClearAdmin::clear_contract() {
  _impl_.contract_.ClearToEmpty();
}
inline const std::string& MsgClearAdmin::contract() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgClearAdmin.contract)
  return _internal_contract();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgClearAdmin::set_contract(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.contract_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgClearAdmin.contract)
}
inline std::string* MsgClearAdmin::mutable_contract() {
  std::string* _s = _internal_mutable_contract();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgClearAdmin.contract)
  return _s;
}
inline const std::string& MsgClearAdmin::_internal_contract() const {
  return _impl_.contract_.Get();
}
inline void MsgClearAdmin::_internal_set_contract(const std::string& value) {
  ;


  _impl_.contract_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgClearAdmin::_internal_mutable_contract() {
  ;
  return _impl_.contract_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgClearAdmin::release_contract() {
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgClearAdmin.contract)
  return _impl_.contract_.Release();
}
inline void MsgClearAdmin::set_allocated_contract(std::string* value) {
  _impl_.contract_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.contract_.IsDefault()) {
          _impl_.contract_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgClearAdmin.contract)
}

// -------------------------------------------------------------------

// MsgClearAdminResponse

// -------------------------------------------------------------------

// MsgUpdateInstantiateConfig

// string sender = 1 [json_name = "sender"];
inline void MsgUpdateInstantiateConfig::clear_sender() {
  _impl_.sender_.ClearToEmpty();
}
inline const std::string& MsgUpdateInstantiateConfig::sender() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgUpdateInstantiateConfig.sender)
  return _internal_sender();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgUpdateInstantiateConfig::set_sender(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.sender_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgUpdateInstantiateConfig.sender)
}
inline std::string* MsgUpdateInstantiateConfig::mutable_sender() {
  std::string* _s = _internal_mutable_sender();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgUpdateInstantiateConfig.sender)
  return _s;
}
inline const std::string& MsgUpdateInstantiateConfig::_internal_sender() const {
  return _impl_.sender_.Get();
}
inline void MsgUpdateInstantiateConfig::_internal_set_sender(const std::string& value) {
  ;


  _impl_.sender_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgUpdateInstantiateConfig::_internal_mutable_sender() {
  ;
  return _impl_.sender_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgUpdateInstantiateConfig::release_sender() {
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgUpdateInstantiateConfig.sender)
  return _impl_.sender_.Release();
}
inline void MsgUpdateInstantiateConfig::set_allocated_sender(std::string* value) {
  _impl_.sender_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.sender_.IsDefault()) {
          _impl_.sender_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgUpdateInstantiateConfig.sender)
}

// uint64 code_id = 2 [json_name = "codeId", (.gogoproto.customname) = "CodeID"];
inline void MsgUpdateInstantiateConfig::clear_code_id() {
  _impl_.code_id_ = ::uint64_t{0u};
}
inline ::uint64_t MsgUpdateInstantiateConfig::code_id() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgUpdateInstantiateConfig.code_id)
  return _internal_code_id();
}
inline void MsgUpdateInstantiateConfig::set_code_id(::uint64_t value) {
  _internal_set_code_id(value);
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgUpdateInstantiateConfig.code_id)
}
inline ::uint64_t MsgUpdateInstantiateConfig::_internal_code_id() const {
  return _impl_.code_id_;
}
inline void MsgUpdateInstantiateConfig::_internal_set_code_id(::uint64_t value) {
  ;
  _impl_.code_id_ = value;
}

// .cosmwasm.wasm.v1.AccessConfig new_instantiate_permission = 3 [json_name = "newInstantiatePermission"];
inline bool MsgUpdateInstantiateConfig::has_new_instantiate_permission() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.new_instantiate_permission_ != nullptr);
  return value;
}
inline const ::cosmwasm::wasm::v1::AccessConfig& MsgUpdateInstantiateConfig::_internal_new_instantiate_permission() const {
  const ::cosmwasm::wasm::v1::AccessConfig* p = _impl_.new_instantiate_permission_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmwasm::wasm::v1::AccessConfig&>(
      ::cosmwasm::wasm::v1::_AccessConfig_default_instance_);
}
inline const ::cosmwasm::wasm::v1::AccessConfig& MsgUpdateInstantiateConfig::new_instantiate_permission() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgUpdateInstantiateConfig.new_instantiate_permission)
  return _internal_new_instantiate_permission();
}
inline void MsgUpdateInstantiateConfig::unsafe_arena_set_allocated_new_instantiate_permission(
    ::cosmwasm::wasm::v1::AccessConfig* new_instantiate_permission) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.new_instantiate_permission_);
  }
  _impl_.new_instantiate_permission_ = new_instantiate_permission;
  if (new_instantiate_permission) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmwasm.wasm.v1.MsgUpdateInstantiateConfig.new_instantiate_permission)
}
inline ::cosmwasm::wasm::v1::AccessConfig* MsgUpdateInstantiateConfig::release_new_instantiate_permission() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmwasm::wasm::v1::AccessConfig* temp = _impl_.new_instantiate_permission_;
  _impl_.new_instantiate_permission_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::cosmwasm::wasm::v1::AccessConfig* MsgUpdateInstantiateConfig::unsafe_arena_release_new_instantiate_permission() {
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgUpdateInstantiateConfig.new_instantiate_permission)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmwasm::wasm::v1::AccessConfig* temp = _impl_.new_instantiate_permission_;
  _impl_.new_instantiate_permission_ = nullptr;
  return temp;
}
inline ::cosmwasm::wasm::v1::AccessConfig* MsgUpdateInstantiateConfig::_internal_mutable_new_instantiate_permission() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.new_instantiate_permission_ == nullptr) {
    auto* p = CreateMaybeMessage<::cosmwasm::wasm::v1::AccessConfig>(GetArenaForAllocation());
    _impl_.new_instantiate_permission_ = p;
  }
  return _impl_.new_instantiate_permission_;
}
inline ::cosmwasm::wasm::v1::AccessConfig* MsgUpdateInstantiateConfig::mutable_new_instantiate_permission() {
  ::cosmwasm::wasm::v1::AccessConfig* _msg = _internal_mutable_new_instantiate_permission();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgUpdateInstantiateConfig.new_instantiate_permission)
  return _msg;
}
inline void MsgUpdateInstantiateConfig::set_allocated_new_instantiate_permission(::cosmwasm::wasm::v1::AccessConfig* new_instantiate_permission) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.new_instantiate_permission_);
  }
  if (new_instantiate_permission) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(new_instantiate_permission));
    if (message_arena != submessage_arena) {
      new_instantiate_permission = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, new_instantiate_permission, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.new_instantiate_permission_ = new_instantiate_permission;
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgUpdateInstantiateConfig.new_instantiate_permission)
}

// -------------------------------------------------------------------

// MsgUpdateInstantiateConfigResponse

// -------------------------------------------------------------------

// MsgUpdateParams

// string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgUpdateParams::clear_authority() {
  _impl_.authority_.ClearToEmpty();
}
inline const std::string& MsgUpdateParams::authority() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgUpdateParams.authority)
  return _internal_authority();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgUpdateParams::set_authority(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.authority_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgUpdateParams.authority)
}
inline std::string* MsgUpdateParams::mutable_authority() {
  std::string* _s = _internal_mutable_authority();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgUpdateParams.authority)
  return _s;
}
inline const std::string& MsgUpdateParams::_internal_authority() const {
  return _impl_.authority_.Get();
}
inline void MsgUpdateParams::_internal_set_authority(const std::string& value) {
  ;


  _impl_.authority_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgUpdateParams::_internal_mutable_authority() {
  ;
  return _impl_.authority_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgUpdateParams::release_authority() {
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgUpdateParams.authority)
  return _impl_.authority_.Release();
}
inline void MsgUpdateParams::set_allocated_authority(std::string* value) {
  _impl_.authority_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.authority_.IsDefault()) {
          _impl_.authority_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgUpdateParams.authority)
}

// .cosmwasm.wasm.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline bool MsgUpdateParams::has_params() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.params_ != nullptr);
  return value;
}
inline const ::cosmwasm::wasm::v1::Params& MsgUpdateParams::_internal_params() const {
  const ::cosmwasm::wasm::v1::Params* p = _impl_.params_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmwasm::wasm::v1::Params&>(
      ::cosmwasm::wasm::v1::_Params_default_instance_);
}
inline const ::cosmwasm::wasm::v1::Params& MsgUpdateParams::params() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgUpdateParams.params)
  return _internal_params();
}
inline void MsgUpdateParams::unsafe_arena_set_allocated_params(
    ::cosmwasm::wasm::v1::Params* params) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.params_);
  }
  _impl_.params_ = params;
  if (params) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmwasm.wasm.v1.MsgUpdateParams.params)
}
inline ::cosmwasm::wasm::v1::Params* MsgUpdateParams::release_params() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmwasm::wasm::v1::Params* temp = _impl_.params_;
  _impl_.params_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::cosmwasm::wasm::v1::Params* MsgUpdateParams::unsafe_arena_release_params() {
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgUpdateParams.params)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmwasm::wasm::v1::Params* temp = _impl_.params_;
  _impl_.params_ = nullptr;
  return temp;
}
inline ::cosmwasm::wasm::v1::Params* MsgUpdateParams::_internal_mutable_params() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.params_ == nullptr) {
    auto* p = CreateMaybeMessage<::cosmwasm::wasm::v1::Params>(GetArenaForAllocation());
    _impl_.params_ = p;
  }
  return _impl_.params_;
}
inline ::cosmwasm::wasm::v1::Params* MsgUpdateParams::mutable_params() {
  ::cosmwasm::wasm::v1::Params* _msg = _internal_mutable_params();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgUpdateParams.params)
  return _msg;
}
inline void MsgUpdateParams::set_allocated_params(::cosmwasm::wasm::v1::Params* params) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.params_);
  }
  if (params) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(params));
    if (message_arena != submessage_arena) {
      params = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, params, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.params_ = params;
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgUpdateParams.params)
}

// -------------------------------------------------------------------

// MsgUpdateParamsResponse

// -------------------------------------------------------------------

// MsgSudoContract

// string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgSudoContract::clear_authority() {
  _impl_.authority_.ClearToEmpty();
}
inline const std::string& MsgSudoContract::authority() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgSudoContract.authority)
  return _internal_authority();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgSudoContract::set_authority(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.authority_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgSudoContract.authority)
}
inline std::string* MsgSudoContract::mutable_authority() {
  std::string* _s = _internal_mutable_authority();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgSudoContract.authority)
  return _s;
}
inline const std::string& MsgSudoContract::_internal_authority() const {
  return _impl_.authority_.Get();
}
inline void MsgSudoContract::_internal_set_authority(const std::string& value) {
  ;


  _impl_.authority_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgSudoContract::_internal_mutable_authority() {
  ;
  return _impl_.authority_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgSudoContract::release_authority() {
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgSudoContract.authority)
  return _impl_.authority_.Release();
}
inline void MsgSudoContract::set_allocated_authority(std::string* value) {
  _impl_.authority_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.authority_.IsDefault()) {
          _impl_.authority_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgSudoContract.authority)
}

// string contract = 2 [json_name = "contract"];
inline void MsgSudoContract::clear_contract() {
  _impl_.contract_.ClearToEmpty();
}
inline const std::string& MsgSudoContract::contract() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgSudoContract.contract)
  return _internal_contract();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgSudoContract::set_contract(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.contract_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgSudoContract.contract)
}
inline std::string* MsgSudoContract::mutable_contract() {
  std::string* _s = _internal_mutable_contract();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgSudoContract.contract)
  return _s;
}
inline const std::string& MsgSudoContract::_internal_contract() const {
  return _impl_.contract_.Get();
}
inline void MsgSudoContract::_internal_set_contract(const std::string& value) {
  ;


  _impl_.contract_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgSudoContract::_internal_mutable_contract() {
  ;
  return _impl_.contract_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgSudoContract::release_contract() {
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgSudoContract.contract)
  return _impl_.contract_.Release();
}
inline void MsgSudoContract::set_allocated_contract(std::string* value) {
  _impl_.contract_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.contract_.IsDefault()) {
          _impl_.contract_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgSudoContract.contract)
}

// bytes msg = 3 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage"];
inline void MsgSudoContract::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& MsgSudoContract::msg() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgSudoContract.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgSudoContract::set_msg(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.msg_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgSudoContract.msg)
}
inline std::string* MsgSudoContract::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgSudoContract.msg)
  return _s;
}
inline const std::string& MsgSudoContract::_internal_msg() const {
  return _impl_.msg_.Get();
}
inline void MsgSudoContract::_internal_set_msg(const std::string& value) {
  ;


  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgSudoContract::_internal_mutable_msg() {
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgSudoContract::release_msg() {
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgSudoContract.msg)
  return _impl_.msg_.Release();
}
inline void MsgSudoContract::set_allocated_msg(std::string* value) {
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgSudoContract.msg)
}

// -------------------------------------------------------------------

// MsgSudoContractResponse

// bytes data = 1 [json_name = "data"];
inline void MsgSudoContractResponse::clear_data() {
  _impl_.data_.ClearToEmpty();
}
inline const std::string& MsgSudoContractResponse::data() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgSudoContractResponse.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgSudoContractResponse::set_data(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgSudoContractResponse.data)
}
inline std::string* MsgSudoContractResponse::mutable_data() {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgSudoContractResponse.data)
  return _s;
}
inline const std::string& MsgSudoContractResponse::_internal_data() const {
  return _impl_.data_.Get();
}
inline void MsgSudoContractResponse::_internal_set_data(const std::string& value) {
  ;


  _impl_.data_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgSudoContractResponse::_internal_mutable_data() {
  ;
  return _impl_.data_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgSudoContractResponse::release_data() {
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgSudoContractResponse.data)
  return _impl_.data_.Release();
}
inline void MsgSudoContractResponse::set_allocated_data(std::string* value) {
  _impl_.data_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_.IsDefault()) {
          _impl_.data_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgSudoContractResponse.data)
}

// -------------------------------------------------------------------

// MsgPinCodes

// string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgPinCodes::clear_authority() {
  _impl_.authority_.ClearToEmpty();
}
inline const std::string& MsgPinCodes::authority() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgPinCodes.authority)
  return _internal_authority();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgPinCodes::set_authority(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.authority_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgPinCodes.authority)
}
inline std::string* MsgPinCodes::mutable_authority() {
  std::string* _s = _internal_mutable_authority();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgPinCodes.authority)
  return _s;
}
inline const std::string& MsgPinCodes::_internal_authority() const {
  return _impl_.authority_.Get();
}
inline void MsgPinCodes::_internal_set_authority(const std::string& value) {
  ;


  _impl_.authority_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgPinCodes::_internal_mutable_authority() {
  ;
  return _impl_.authority_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgPinCodes::release_authority() {
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgPinCodes.authority)
  return _impl_.authority_.Release();
}
inline void MsgPinCodes::set_allocated_authority(std::string* value) {
  _impl_.authority_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.authority_.IsDefault()) {
          _impl_.authority_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgPinCodes.authority)
}

// repeated uint64 code_ids = 2 [json_name = "codeIds", (.gogoproto.customname) = "CodeIDs", (.gogoproto.moretags) = "yaml:\"code_ids\""];
inline int MsgPinCodes::_internal_code_ids_size() const {
  return _impl_.code_ids_.size();
}
inline int MsgPinCodes::code_ids_size() const {
  return _internal_code_ids_size();
}
inline void MsgPinCodes::clear_code_ids() {
  _internal_mutable_code_ids()->Clear();
}
inline ::uint64_t MsgPinCodes::code_ids(int index) const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgPinCodes.code_ids)
  return _internal_code_ids(index);
}
inline void MsgPinCodes::set_code_ids(int index, ::uint64_t value) {
  _internal_mutable_code_ids()->Set(index, value);
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgPinCodes.code_ids)
}
inline void MsgPinCodes::add_code_ids(::uint64_t value) {
  _internal_add_code_ids(value);
  // @@protoc_insertion_point(field_add:cosmwasm.wasm.v1.MsgPinCodes.code_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<::uint64_t>& MsgPinCodes::code_ids() const {
  // @@protoc_insertion_point(field_list:cosmwasm.wasm.v1.MsgPinCodes.code_ids)
  return _internal_code_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<::uint64_t>* MsgPinCodes::mutable_code_ids() {
  // @@protoc_insertion_point(field_mutable_list:cosmwasm.wasm.v1.MsgPinCodes.code_ids)
  return _internal_mutable_code_ids();
}

inline ::uint64_t MsgPinCodes::_internal_code_ids(int index) const {
  return _internal_code_ids().Get(index);
}
inline void MsgPinCodes::_internal_add_code_ids(::uint64_t value) {
  _internal_mutable_code_ids()->Add(value);
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<::uint64_t>& MsgPinCodes::_internal_code_ids() const {
  return _impl_.code_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<::uint64_t>* MsgPinCodes::_internal_mutable_code_ids() {
  return &_impl_.code_ids_;
}

// -------------------------------------------------------------------

// MsgPinCodesResponse

// -------------------------------------------------------------------

// MsgUnpinCodes

// string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgUnpinCodes::clear_authority() {
  _impl_.authority_.ClearToEmpty();
}
inline const std::string& MsgUnpinCodes::authority() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgUnpinCodes.authority)
  return _internal_authority();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgUnpinCodes::set_authority(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.authority_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgUnpinCodes.authority)
}
inline std::string* MsgUnpinCodes::mutable_authority() {
  std::string* _s = _internal_mutable_authority();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgUnpinCodes.authority)
  return _s;
}
inline const std::string& MsgUnpinCodes::_internal_authority() const {
  return _impl_.authority_.Get();
}
inline void MsgUnpinCodes::_internal_set_authority(const std::string& value) {
  ;


  _impl_.authority_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgUnpinCodes::_internal_mutable_authority() {
  ;
  return _impl_.authority_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgUnpinCodes::release_authority() {
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgUnpinCodes.authority)
  return _impl_.authority_.Release();
}
inline void MsgUnpinCodes::set_allocated_authority(std::string* value) {
  _impl_.authority_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.authority_.IsDefault()) {
          _impl_.authority_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgUnpinCodes.authority)
}

// repeated uint64 code_ids = 2 [json_name = "codeIds", (.gogoproto.customname) = "CodeIDs", (.gogoproto.moretags) = "yaml:\"code_ids\""];
inline int MsgUnpinCodes::_internal_code_ids_size() const {
  return _impl_.code_ids_.size();
}
inline int MsgUnpinCodes::code_ids_size() const {
  return _internal_code_ids_size();
}
inline void MsgUnpinCodes::clear_code_ids() {
  _internal_mutable_code_ids()->Clear();
}
inline ::uint64_t MsgUnpinCodes::code_ids(int index) const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgUnpinCodes.code_ids)
  return _internal_code_ids(index);
}
inline void MsgUnpinCodes::set_code_ids(int index, ::uint64_t value) {
  _internal_mutable_code_ids()->Set(index, value);
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgUnpinCodes.code_ids)
}
inline void MsgUnpinCodes::add_code_ids(::uint64_t value) {
  _internal_add_code_ids(value);
  // @@protoc_insertion_point(field_add:cosmwasm.wasm.v1.MsgUnpinCodes.code_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<::uint64_t>& MsgUnpinCodes::code_ids() const {
  // @@protoc_insertion_point(field_list:cosmwasm.wasm.v1.MsgUnpinCodes.code_ids)
  return _internal_code_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<::uint64_t>* MsgUnpinCodes::mutable_code_ids() {
  // @@protoc_insertion_point(field_mutable_list:cosmwasm.wasm.v1.MsgUnpinCodes.code_ids)
  return _internal_mutable_code_ids();
}

inline ::uint64_t MsgUnpinCodes::_internal_code_ids(int index) const {
  return _internal_code_ids().Get(index);
}
inline void MsgUnpinCodes::_internal_add_code_ids(::uint64_t value) {
  _internal_mutable_code_ids()->Add(value);
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<::uint64_t>& MsgUnpinCodes::_internal_code_ids() const {
  return _impl_.code_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<::uint64_t>* MsgUnpinCodes::_internal_mutable_code_ids() {
  return &_impl_.code_ids_;
}

// -------------------------------------------------------------------

// MsgUnpinCodesResponse

// -------------------------------------------------------------------

// MsgStoreAndInstantiateContract

// string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgStoreAndInstantiateContract::clear_authority() {
  _impl_.authority_.ClearToEmpty();
}
inline const std::string& MsgStoreAndInstantiateContract::authority() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.authority)
  return _internal_authority();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgStoreAndInstantiateContract::set_authority(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.authority_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.authority)
}
inline std::string* MsgStoreAndInstantiateContract::mutable_authority() {
  std::string* _s = _internal_mutable_authority();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.authority)
  return _s;
}
inline const std::string& MsgStoreAndInstantiateContract::_internal_authority() const {
  return _impl_.authority_.Get();
}
inline void MsgStoreAndInstantiateContract::_internal_set_authority(const std::string& value) {
  ;


  _impl_.authority_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgStoreAndInstantiateContract::_internal_mutable_authority() {
  ;
  return _impl_.authority_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgStoreAndInstantiateContract::release_authority() {
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.authority)
  return _impl_.authority_.Release();
}
inline void MsgStoreAndInstantiateContract::set_allocated_authority(std::string* value) {
  _impl_.authority_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.authority_.IsDefault()) {
          _impl_.authority_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.authority)
}

// bytes wasm_byte_code = 3 [json_name = "wasmByteCode", (.gogoproto.customname) = "WASMByteCode"];
inline void MsgStoreAndInstantiateContract::clear_wasm_byte_code() {
  _impl_.wasm_byte_code_.ClearToEmpty();
}
inline const std::string& MsgStoreAndInstantiateContract::wasm_byte_code() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.wasm_byte_code)
  return _internal_wasm_byte_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgStoreAndInstantiateContract::set_wasm_byte_code(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.wasm_byte_code_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.wasm_byte_code)
}
inline std::string* MsgStoreAndInstantiateContract::mutable_wasm_byte_code() {
  std::string* _s = _internal_mutable_wasm_byte_code();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.wasm_byte_code)
  return _s;
}
inline const std::string& MsgStoreAndInstantiateContract::_internal_wasm_byte_code() const {
  return _impl_.wasm_byte_code_.Get();
}
inline void MsgStoreAndInstantiateContract::_internal_set_wasm_byte_code(const std::string& value) {
  ;


  _impl_.wasm_byte_code_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgStoreAndInstantiateContract::_internal_mutable_wasm_byte_code() {
  ;
  return _impl_.wasm_byte_code_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgStoreAndInstantiateContract::release_wasm_byte_code() {
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.wasm_byte_code)
  return _impl_.wasm_byte_code_.Release();
}
inline void MsgStoreAndInstantiateContract::set_allocated_wasm_byte_code(std::string* value) {
  _impl_.wasm_byte_code_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.wasm_byte_code_.IsDefault()) {
          _impl_.wasm_byte_code_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.wasm_byte_code)
}

// .cosmwasm.wasm.v1.AccessConfig instantiate_permission = 4 [json_name = "instantiatePermission"];
inline bool MsgStoreAndInstantiateContract::has_instantiate_permission() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.instantiate_permission_ != nullptr);
  return value;
}
inline const ::cosmwasm::wasm::v1::AccessConfig& MsgStoreAndInstantiateContract::_internal_instantiate_permission() const {
  const ::cosmwasm::wasm::v1::AccessConfig* p = _impl_.instantiate_permission_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmwasm::wasm::v1::AccessConfig&>(
      ::cosmwasm::wasm::v1::_AccessConfig_default_instance_);
}
inline const ::cosmwasm::wasm::v1::AccessConfig& MsgStoreAndInstantiateContract::instantiate_permission() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.instantiate_permission)
  return _internal_instantiate_permission();
}
inline void MsgStoreAndInstantiateContract::unsafe_arena_set_allocated_instantiate_permission(
    ::cosmwasm::wasm::v1::AccessConfig* instantiate_permission) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.instantiate_permission_);
  }
  _impl_.instantiate_permission_ = instantiate_permission;
  if (instantiate_permission) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.instantiate_permission)
}
inline ::cosmwasm::wasm::v1::AccessConfig* MsgStoreAndInstantiateContract::release_instantiate_permission() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmwasm::wasm::v1::AccessConfig* temp = _impl_.instantiate_permission_;
  _impl_.instantiate_permission_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::cosmwasm::wasm::v1::AccessConfig* MsgStoreAndInstantiateContract::unsafe_arena_release_instantiate_permission() {
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.instantiate_permission)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmwasm::wasm::v1::AccessConfig* temp = _impl_.instantiate_permission_;
  _impl_.instantiate_permission_ = nullptr;
  return temp;
}
inline ::cosmwasm::wasm::v1::AccessConfig* MsgStoreAndInstantiateContract::_internal_mutable_instantiate_permission() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.instantiate_permission_ == nullptr) {
    auto* p = CreateMaybeMessage<::cosmwasm::wasm::v1::AccessConfig>(GetArenaForAllocation());
    _impl_.instantiate_permission_ = p;
  }
  return _impl_.instantiate_permission_;
}
inline ::cosmwasm::wasm::v1::AccessConfig* MsgStoreAndInstantiateContract::mutable_instantiate_permission() {
  ::cosmwasm::wasm::v1::AccessConfig* _msg = _internal_mutable_instantiate_permission();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.instantiate_permission)
  return _msg;
}
inline void MsgStoreAndInstantiateContract::set_allocated_instantiate_permission(::cosmwasm::wasm::v1::AccessConfig* instantiate_permission) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.instantiate_permission_);
  }
  if (instantiate_permission) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(instantiate_permission));
    if (message_arena != submessage_arena) {
      instantiate_permission = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, instantiate_permission, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.instantiate_permission_ = instantiate_permission;
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.instantiate_permission)
}

// bool unpin_code = 5 [json_name = "unpinCode"];
inline void MsgStoreAndInstantiateContract::clear_unpin_code() {
  _impl_.unpin_code_ = false;
}
inline bool MsgStoreAndInstantiateContract::unpin_code() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.unpin_code)
  return _internal_unpin_code();
}
inline void MsgStoreAndInstantiateContract::set_unpin_code(bool value) {
  _internal_set_unpin_code(value);
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.unpin_code)
}
inline bool MsgStoreAndInstantiateContract::_internal_unpin_code() const {
  return _impl_.unpin_code_;
}
inline void MsgStoreAndInstantiateContract::_internal_set_unpin_code(bool value) {
  ;
  _impl_.unpin_code_ = value;
}

// string admin = 6 [json_name = "admin"];
inline void MsgStoreAndInstantiateContract::clear_admin() {
  _impl_.admin_.ClearToEmpty();
}
inline const std::string& MsgStoreAndInstantiateContract::admin() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.admin)
  return _internal_admin();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgStoreAndInstantiateContract::set_admin(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.admin_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.admin)
}
inline std::string* MsgStoreAndInstantiateContract::mutable_admin() {
  std::string* _s = _internal_mutable_admin();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.admin)
  return _s;
}
inline const std::string& MsgStoreAndInstantiateContract::_internal_admin() const {
  return _impl_.admin_.Get();
}
inline void MsgStoreAndInstantiateContract::_internal_set_admin(const std::string& value) {
  ;


  _impl_.admin_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgStoreAndInstantiateContract::_internal_mutable_admin() {
  ;
  return _impl_.admin_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgStoreAndInstantiateContract::release_admin() {
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.admin)
  return _impl_.admin_.Release();
}
inline void MsgStoreAndInstantiateContract::set_allocated_admin(std::string* value) {
  _impl_.admin_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.admin_.IsDefault()) {
          _impl_.admin_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.admin)
}

// string label = 7 [json_name = "label"];
inline void MsgStoreAndInstantiateContract::clear_label() {
  _impl_.label_.ClearToEmpty();
}
inline const std::string& MsgStoreAndInstantiateContract::label() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.label)
  return _internal_label();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgStoreAndInstantiateContract::set_label(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.label_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.label)
}
inline std::string* MsgStoreAndInstantiateContract::mutable_label() {
  std::string* _s = _internal_mutable_label();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.label)
  return _s;
}
inline const std::string& MsgStoreAndInstantiateContract::_internal_label() const {
  return _impl_.label_.Get();
}
inline void MsgStoreAndInstantiateContract::_internal_set_label(const std::string& value) {
  ;


  _impl_.label_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgStoreAndInstantiateContract::_internal_mutable_label() {
  ;
  return _impl_.label_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgStoreAndInstantiateContract::release_label() {
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.label)
  return _impl_.label_.Release();
}
inline void MsgStoreAndInstantiateContract::set_allocated_label(std::string* value) {
  _impl_.label_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.label_.IsDefault()) {
          _impl_.label_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.label)
}

// bytes msg = 8 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage"];
inline void MsgStoreAndInstantiateContract::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& MsgStoreAndInstantiateContract::msg() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgStoreAndInstantiateContract::set_msg(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.msg_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.msg)
}
inline std::string* MsgStoreAndInstantiateContract::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.msg)
  return _s;
}
inline const std::string& MsgStoreAndInstantiateContract::_internal_msg() const {
  return _impl_.msg_.Get();
}
inline void MsgStoreAndInstantiateContract::_internal_set_msg(const std::string& value) {
  ;


  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgStoreAndInstantiateContract::_internal_mutable_msg() {
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgStoreAndInstantiateContract::release_msg() {
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.msg)
  return _impl_.msg_.Release();
}
inline void MsgStoreAndInstantiateContract::set_allocated_msg(std::string* value) {
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.msg)
}

// repeated .cosmos.base.v1beta1.Coin funds = 9 [json_name = "funds", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];
inline int MsgStoreAndInstantiateContract::_internal_funds_size() const {
  return _impl_.funds_.size();
}
inline int MsgStoreAndInstantiateContract::funds_size() const {
  return _internal_funds_size();
}
inline ::cosmos::base::v1beta1::Coin* MsgStoreAndInstantiateContract::mutable_funds(int index) {
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.funds)
  return _internal_mutable_funds()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin >*
MsgStoreAndInstantiateContract::mutable_funds() {
  // @@protoc_insertion_point(field_mutable_list:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.funds)
  return _internal_mutable_funds();
}
inline const ::cosmos::base::v1beta1::Coin& MsgStoreAndInstantiateContract::_internal_funds(int index) const {
  return _internal_funds().Get(index);
}
inline const ::cosmos::base::v1beta1::Coin& MsgStoreAndInstantiateContract::funds(int index) const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.funds)
  return _internal_funds(index);
}
inline ::cosmos::base::v1beta1::Coin* MsgStoreAndInstantiateContract::_internal_add_funds() {
  return _internal_mutable_funds()->Add();
}
inline ::cosmos::base::v1beta1::Coin* MsgStoreAndInstantiateContract::add_funds() {
  ::cosmos::base::v1beta1::Coin* _add = _internal_add_funds();
  // @@protoc_insertion_point(field_add:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.funds)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cosmos::base::v1beta1::Coin >&
MsgStoreAndInstantiateContract::funds() const {
  // @@protoc_insertion_point(field_list:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.funds)
  return _internal_funds();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::Coin>&
MsgStoreAndInstantiateContract::_internal_funds() const {
  return _impl_.funds_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::cosmos::base::v1beta1::Coin>*
MsgStoreAndInstantiateContract::_internal_mutable_funds() {
  return &_impl_.funds_;
}

// string source = 10 [json_name = "source"];
inline void MsgStoreAndInstantiateContract::clear_source() {
  _impl_.source_.ClearToEmpty();
}
inline const std::string& MsgStoreAndInstantiateContract::source() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.source)
  return _internal_source();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgStoreAndInstantiateContract::set_source(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.source_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.source)
}
inline std::string* MsgStoreAndInstantiateContract::mutable_source() {
  std::string* _s = _internal_mutable_source();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.source)
  return _s;
}
inline const std::string& MsgStoreAndInstantiateContract::_internal_source() const {
  return _impl_.source_.Get();
}
inline void MsgStoreAndInstantiateContract::_internal_set_source(const std::string& value) {
  ;


  _impl_.source_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgStoreAndInstantiateContract::_internal_mutable_source() {
  ;
  return _impl_.source_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgStoreAndInstantiateContract::release_source() {
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.source)
  return _impl_.source_.Release();
}
inline void MsgStoreAndInstantiateContract::set_allocated_source(std::string* value) {
  _impl_.source_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.source_.IsDefault()) {
          _impl_.source_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.source)
}

// string builder = 11 [json_name = "builder"];
inline void MsgStoreAndInstantiateContract::clear_builder() {
  _impl_.builder_.ClearToEmpty();
}
inline const std::string& MsgStoreAndInstantiateContract::builder() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.builder)
  return _internal_builder();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgStoreAndInstantiateContract::set_builder(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.builder_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.builder)
}
inline std::string* MsgStoreAndInstantiateContract::mutable_builder() {
  std::string* _s = _internal_mutable_builder();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.builder)
  return _s;
}
inline const std::string& MsgStoreAndInstantiateContract::_internal_builder() const {
  return _impl_.builder_.Get();
}
inline void MsgStoreAndInstantiateContract::_internal_set_builder(const std::string& value) {
  ;


  _impl_.builder_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgStoreAndInstantiateContract::_internal_mutable_builder() {
  ;
  return _impl_.builder_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgStoreAndInstantiateContract::release_builder() {
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.builder)
  return _impl_.builder_.Release();
}
inline void MsgStoreAndInstantiateContract::set_allocated_builder(std::string* value) {
  _impl_.builder_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.builder_.IsDefault()) {
          _impl_.builder_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.builder)
}

// bytes code_hash = 12 [json_name = "codeHash"];
inline void MsgStoreAndInstantiateContract::clear_code_hash() {
  _impl_.code_hash_.ClearToEmpty();
}
inline const std::string& MsgStoreAndInstantiateContract::code_hash() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.code_hash)
  return _internal_code_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgStoreAndInstantiateContract::set_code_hash(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.code_hash_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.code_hash)
}
inline std::string* MsgStoreAndInstantiateContract::mutable_code_hash() {
  std::string* _s = _internal_mutable_code_hash();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.code_hash)
  return _s;
}
inline const std::string& MsgStoreAndInstantiateContract::_internal_code_hash() const {
  return _impl_.code_hash_.Get();
}
inline void MsgStoreAndInstantiateContract::_internal_set_code_hash(const std::string& value) {
  ;


  _impl_.code_hash_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgStoreAndInstantiateContract::_internal_mutable_code_hash() {
  ;
  return _impl_.code_hash_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgStoreAndInstantiateContract::release_code_hash() {
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.code_hash)
  return _impl_.code_hash_.Release();
}
inline void MsgStoreAndInstantiateContract::set_allocated_code_hash(std::string* value) {
  _impl_.code_hash_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.code_hash_.IsDefault()) {
          _impl_.code_hash_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.code_hash)
}

// -------------------------------------------------------------------

// MsgStoreAndInstantiateContractResponse

// string address = 1 [json_name = "address"];
inline void MsgStoreAndInstantiateContractResponse::clear_address() {
  _impl_.address_.ClearToEmpty();
}
inline const std::string& MsgStoreAndInstantiateContractResponse::address() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgStoreAndInstantiateContractResponse.address)
  return _internal_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgStoreAndInstantiateContractResponse::set_address(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.address_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgStoreAndInstantiateContractResponse.address)
}
inline std::string* MsgStoreAndInstantiateContractResponse::mutable_address() {
  std::string* _s = _internal_mutable_address();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgStoreAndInstantiateContractResponse.address)
  return _s;
}
inline const std::string& MsgStoreAndInstantiateContractResponse::_internal_address() const {
  return _impl_.address_.Get();
}
inline void MsgStoreAndInstantiateContractResponse::_internal_set_address(const std::string& value) {
  ;


  _impl_.address_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgStoreAndInstantiateContractResponse::_internal_mutable_address() {
  ;
  return _impl_.address_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgStoreAndInstantiateContractResponse::release_address() {
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgStoreAndInstantiateContractResponse.address)
  return _impl_.address_.Release();
}
inline void MsgStoreAndInstantiateContractResponse::set_allocated_address(std::string* value) {
  _impl_.address_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.address_.IsDefault()) {
          _impl_.address_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgStoreAndInstantiateContractResponse.address)
}

// bytes data = 2 [json_name = "data"];
inline void MsgStoreAndInstantiateContractResponse::clear_data() {
  _impl_.data_.ClearToEmpty();
}
inline const std::string& MsgStoreAndInstantiateContractResponse::data() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgStoreAndInstantiateContractResponse.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgStoreAndInstantiateContractResponse::set_data(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgStoreAndInstantiateContractResponse.data)
}
inline std::string* MsgStoreAndInstantiateContractResponse::mutable_data() {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgStoreAndInstantiateContractResponse.data)
  return _s;
}
inline const std::string& MsgStoreAndInstantiateContractResponse::_internal_data() const {
  return _impl_.data_.Get();
}
inline void MsgStoreAndInstantiateContractResponse::_internal_set_data(const std::string& value) {
  ;


  _impl_.data_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgStoreAndInstantiateContractResponse::_internal_mutable_data() {
  ;
  return _impl_.data_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgStoreAndInstantiateContractResponse::release_data() {
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgStoreAndInstantiateContractResponse.data)
  return _impl_.data_.Release();
}
inline void MsgStoreAndInstantiateContractResponse::set_allocated_data(std::string* value) {
  _impl_.data_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_.IsDefault()) {
          _impl_.data_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgStoreAndInstantiateContractResponse.data)
}

// -------------------------------------------------------------------

// MsgAddCodeUploadParamsAddresses

// string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgAddCodeUploadParamsAddresses::clear_authority() {
  _impl_.authority_.ClearToEmpty();
}
inline const std::string& MsgAddCodeUploadParamsAddresses::authority() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgAddCodeUploadParamsAddresses.authority)
  return _internal_authority();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgAddCodeUploadParamsAddresses::set_authority(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.authority_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgAddCodeUploadParamsAddresses.authority)
}
inline std::string* MsgAddCodeUploadParamsAddresses::mutable_authority() {
  std::string* _s = _internal_mutable_authority();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgAddCodeUploadParamsAddresses.authority)
  return _s;
}
inline const std::string& MsgAddCodeUploadParamsAddresses::_internal_authority() const {
  return _impl_.authority_.Get();
}
inline void MsgAddCodeUploadParamsAddresses::_internal_set_authority(const std::string& value) {
  ;


  _impl_.authority_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgAddCodeUploadParamsAddresses::_internal_mutable_authority() {
  ;
  return _impl_.authority_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgAddCodeUploadParamsAddresses::release_authority() {
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgAddCodeUploadParamsAddresses.authority)
  return _impl_.authority_.Release();
}
inline void MsgAddCodeUploadParamsAddresses::set_allocated_authority(std::string* value) {
  _impl_.authority_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.authority_.IsDefault()) {
          _impl_.authority_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgAddCodeUploadParamsAddresses.authority)
}

// repeated string addresses = 2 [json_name = "addresses", (.gogoproto.moretags) = "yaml:\"addresses\""];
inline int MsgAddCodeUploadParamsAddresses::_internal_addresses_size() const {
  return _impl_.addresses_.size();
}
inline int MsgAddCodeUploadParamsAddresses::addresses_size() const {
  return _internal_addresses_size();
}
inline void MsgAddCodeUploadParamsAddresses::clear_addresses() {
  _internal_mutable_addresses()->Clear();
}
inline std::string* MsgAddCodeUploadParamsAddresses::add_addresses() {
  std::string* _s = _internal_add_addresses();
  // @@protoc_insertion_point(field_add_mutable:cosmwasm.wasm.v1.MsgAddCodeUploadParamsAddresses.addresses)
  return _s;
}
inline const std::string& MsgAddCodeUploadParamsAddresses::addresses(int index) const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgAddCodeUploadParamsAddresses.addresses)
  return _internal_addresses(index);
}
inline std::string* MsgAddCodeUploadParamsAddresses::mutable_addresses(int index) {
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgAddCodeUploadParamsAddresses.addresses)
  return _internal_mutable_addresses()->Mutable(index);
}
inline void MsgAddCodeUploadParamsAddresses::set_addresses(int index, const std::string& value) {
  _internal_mutable_addresses()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgAddCodeUploadParamsAddresses.addresses)
}
inline void MsgAddCodeUploadParamsAddresses::set_addresses(int index, std::string&& value) {
  _internal_mutable_addresses()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgAddCodeUploadParamsAddresses.addresses)
}
inline void MsgAddCodeUploadParamsAddresses::set_addresses(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_addresses()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:cosmwasm.wasm.v1.MsgAddCodeUploadParamsAddresses.addresses)
}
inline void MsgAddCodeUploadParamsAddresses::set_addresses(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_addresses()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:cosmwasm.wasm.v1.MsgAddCodeUploadParamsAddresses.addresses)
}
inline void MsgAddCodeUploadParamsAddresses::set_addresses(int index, absl::string_view value) {
  _internal_mutable_addresses()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:cosmwasm.wasm.v1.MsgAddCodeUploadParamsAddresses.addresses)
}
inline void MsgAddCodeUploadParamsAddresses::add_addresses(const std::string& value) {
  _internal_mutable_addresses()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:cosmwasm.wasm.v1.MsgAddCodeUploadParamsAddresses.addresses)
}
inline void MsgAddCodeUploadParamsAddresses::add_addresses(std::string&& value) {
  _internal_mutable_addresses()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:cosmwasm.wasm.v1.MsgAddCodeUploadParamsAddresses.addresses)
}
inline void MsgAddCodeUploadParamsAddresses::add_addresses(const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_addresses()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:cosmwasm.wasm.v1.MsgAddCodeUploadParamsAddresses.addresses)
}
inline void MsgAddCodeUploadParamsAddresses::add_addresses(const char* value, std::size_t size) {
  _internal_mutable_addresses()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:cosmwasm.wasm.v1.MsgAddCodeUploadParamsAddresses.addresses)
}
inline void MsgAddCodeUploadParamsAddresses::add_addresses(absl::string_view value) {
  _internal_mutable_addresses()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:cosmwasm.wasm.v1.MsgAddCodeUploadParamsAddresses.addresses)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
MsgAddCodeUploadParamsAddresses::addresses() const {
  // @@protoc_insertion_point(field_list:cosmwasm.wasm.v1.MsgAddCodeUploadParamsAddresses.addresses)
  return _internal_addresses();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* MsgAddCodeUploadParamsAddresses::mutable_addresses() {
  // @@protoc_insertion_point(field_mutable_list:cosmwasm.wasm.v1.MsgAddCodeUploadParamsAddresses.addresses)
  return _internal_mutable_addresses();
}
inline const std::string& MsgAddCodeUploadParamsAddresses::_internal_addresses(int index) const {
  return _internal_addresses().Get(index);
}
inline std::string* MsgAddCodeUploadParamsAddresses::_internal_add_addresses() {
  return _internal_mutable_addresses()->Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
MsgAddCodeUploadParamsAddresses::_internal_addresses() const {
  return _impl_.addresses_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
MsgAddCodeUploadParamsAddresses::_internal_mutable_addresses() {
  return &_impl_.addresses_;
}

// -------------------------------------------------------------------

// MsgAddCodeUploadParamsAddressesResponse

// -------------------------------------------------------------------

// MsgRemoveCodeUploadParamsAddresses

// string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgRemoveCodeUploadParamsAddresses::clear_authority() {
  _impl_.authority_.ClearToEmpty();
}
inline const std::string& MsgRemoveCodeUploadParamsAddresses::authority() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgRemoveCodeUploadParamsAddresses.authority)
  return _internal_authority();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgRemoveCodeUploadParamsAddresses::set_authority(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.authority_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgRemoveCodeUploadParamsAddresses.authority)
}
inline std::string* MsgRemoveCodeUploadParamsAddresses::mutable_authority() {
  std::string* _s = _internal_mutable_authority();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgRemoveCodeUploadParamsAddresses.authority)
  return _s;
}
inline const std::string& MsgRemoveCodeUploadParamsAddresses::_internal_authority() const {
  return _impl_.authority_.Get();
}
inline void MsgRemoveCodeUploadParamsAddresses::_internal_set_authority(const std::string& value) {
  ;


  _impl_.authority_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgRemoveCodeUploadParamsAddresses::_internal_mutable_authority() {
  ;
  return _impl_.authority_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgRemoveCodeUploadParamsAddresses::release_authority() {
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgRemoveCodeUploadParamsAddresses.authority)
  return _impl_.authority_.Release();
}
inline void MsgRemoveCodeUploadParamsAddresses::set_allocated_authority(std::string* value) {
  _impl_.authority_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.authority_.IsDefault()) {
          _impl_.authority_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgRemoveCodeUploadParamsAddresses.authority)
}

// repeated string addresses = 2 [json_name = "addresses", (.gogoproto.moretags) = "yaml:\"addresses\""];
inline int MsgRemoveCodeUploadParamsAddresses::_internal_addresses_size() const {
  return _impl_.addresses_.size();
}
inline int MsgRemoveCodeUploadParamsAddresses::addresses_size() const {
  return _internal_addresses_size();
}
inline void MsgRemoveCodeUploadParamsAddresses::clear_addresses() {
  _internal_mutable_addresses()->Clear();
}
inline std::string* MsgRemoveCodeUploadParamsAddresses::add_addresses() {
  std::string* _s = _internal_add_addresses();
  // @@protoc_insertion_point(field_add_mutable:cosmwasm.wasm.v1.MsgRemoveCodeUploadParamsAddresses.addresses)
  return _s;
}
inline const std::string& MsgRemoveCodeUploadParamsAddresses::addresses(int index) const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgRemoveCodeUploadParamsAddresses.addresses)
  return _internal_addresses(index);
}
inline std::string* MsgRemoveCodeUploadParamsAddresses::mutable_addresses(int index) {
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgRemoveCodeUploadParamsAddresses.addresses)
  return _internal_mutable_addresses()->Mutable(index);
}
inline void MsgRemoveCodeUploadParamsAddresses::set_addresses(int index, const std::string& value) {
  _internal_mutable_addresses()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgRemoveCodeUploadParamsAddresses.addresses)
}
inline void MsgRemoveCodeUploadParamsAddresses::set_addresses(int index, std::string&& value) {
  _internal_mutable_addresses()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgRemoveCodeUploadParamsAddresses.addresses)
}
inline void MsgRemoveCodeUploadParamsAddresses::set_addresses(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_addresses()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:cosmwasm.wasm.v1.MsgRemoveCodeUploadParamsAddresses.addresses)
}
inline void MsgRemoveCodeUploadParamsAddresses::set_addresses(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_addresses()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:cosmwasm.wasm.v1.MsgRemoveCodeUploadParamsAddresses.addresses)
}
inline void MsgRemoveCodeUploadParamsAddresses::set_addresses(int index, absl::string_view value) {
  _internal_mutable_addresses()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:cosmwasm.wasm.v1.MsgRemoveCodeUploadParamsAddresses.addresses)
}
inline void MsgRemoveCodeUploadParamsAddresses::add_addresses(const std::string& value) {
  _internal_mutable_addresses()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:cosmwasm.wasm.v1.MsgRemoveCodeUploadParamsAddresses.addresses)
}
inline void MsgRemoveCodeUploadParamsAddresses::add_addresses(std::string&& value) {
  _internal_mutable_addresses()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:cosmwasm.wasm.v1.MsgRemoveCodeUploadParamsAddresses.addresses)
}
inline void MsgRemoveCodeUploadParamsAddresses::add_addresses(const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_addresses()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:cosmwasm.wasm.v1.MsgRemoveCodeUploadParamsAddresses.addresses)
}
inline void MsgRemoveCodeUploadParamsAddresses::add_addresses(const char* value, std::size_t size) {
  _internal_mutable_addresses()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:cosmwasm.wasm.v1.MsgRemoveCodeUploadParamsAddresses.addresses)
}
inline void MsgRemoveCodeUploadParamsAddresses::add_addresses(absl::string_view value) {
  _internal_mutable_addresses()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:cosmwasm.wasm.v1.MsgRemoveCodeUploadParamsAddresses.addresses)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
MsgRemoveCodeUploadParamsAddresses::addresses() const {
  // @@protoc_insertion_point(field_list:cosmwasm.wasm.v1.MsgRemoveCodeUploadParamsAddresses.addresses)
  return _internal_addresses();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* MsgRemoveCodeUploadParamsAddresses::mutable_addresses() {
  // @@protoc_insertion_point(field_mutable_list:cosmwasm.wasm.v1.MsgRemoveCodeUploadParamsAddresses.addresses)
  return _internal_mutable_addresses();
}
inline const std::string& MsgRemoveCodeUploadParamsAddresses::_internal_addresses(int index) const {
  return _internal_addresses().Get(index);
}
inline std::string* MsgRemoveCodeUploadParamsAddresses::_internal_add_addresses() {
  return _internal_mutable_addresses()->Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
MsgRemoveCodeUploadParamsAddresses::_internal_addresses() const {
  return _impl_.addresses_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
MsgRemoveCodeUploadParamsAddresses::_internal_mutable_addresses() {
  return &_impl_.addresses_;
}

// -------------------------------------------------------------------

// MsgRemoveCodeUploadParamsAddressesResponse

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace wasm
}  // namespace cosmwasm


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_cosmwasm_2fwasm_2fv1_2ftx_2eproto_2epb_2eh
