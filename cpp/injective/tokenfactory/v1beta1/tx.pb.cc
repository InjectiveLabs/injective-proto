// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: injective/tokenfactory/v1beta1/tx.proto

#include "injective/tokenfactory/v1beta1/tx.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace injective {
namespace tokenfactory {
namespace v1beta1 {
template <typename>
PROTOBUF_CONSTEXPR MsgCreateDenom::MsgCreateDenom(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.sender_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.subdenom_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgCreateDenomDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgCreateDenomDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgCreateDenomDefaultTypeInternal() {}
  union {
    MsgCreateDenom _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgCreateDenomDefaultTypeInternal _MsgCreateDenom_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgCreateDenomResponse::MsgCreateDenomResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.new_token_denom_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgCreateDenomResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgCreateDenomResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgCreateDenomResponseDefaultTypeInternal() {}
  union {
    MsgCreateDenomResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgCreateDenomResponseDefaultTypeInternal _MsgCreateDenomResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgMint::MsgMint(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.sender_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.amount_)*/nullptr} {}
struct MsgMintDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgMintDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgMintDefaultTypeInternal() {}
  union {
    MsgMint _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgMintDefaultTypeInternal _MsgMint_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgMintResponse::MsgMintResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgMintResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgMintResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgMintResponseDefaultTypeInternal() {}
  union {
    MsgMintResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgMintResponseDefaultTypeInternal _MsgMintResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgBurn::MsgBurn(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.sender_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.amount_)*/nullptr} {}
struct MsgBurnDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgBurnDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgBurnDefaultTypeInternal() {}
  union {
    MsgBurn _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgBurnDefaultTypeInternal _MsgBurn_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgBurnResponse::MsgBurnResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgBurnResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgBurnResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgBurnResponseDefaultTypeInternal() {}
  union {
    MsgBurnResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgBurnResponseDefaultTypeInternal _MsgBurnResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgChangeAdmin::MsgChangeAdmin(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.sender_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.denom_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.new_admin_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgChangeAdminDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgChangeAdminDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgChangeAdminDefaultTypeInternal() {}
  union {
    MsgChangeAdmin _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgChangeAdminDefaultTypeInternal _MsgChangeAdmin_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgChangeAdminResponse::MsgChangeAdminResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgChangeAdminResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgChangeAdminResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgChangeAdminResponseDefaultTypeInternal() {}
  union {
    MsgChangeAdminResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgChangeAdminResponseDefaultTypeInternal _MsgChangeAdminResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgSetDenomMetadata::MsgSetDenomMetadata(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.sender_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.metadata_)*/nullptr} {}
struct MsgSetDenomMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgSetDenomMetadataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgSetDenomMetadataDefaultTypeInternal() {}
  union {
    MsgSetDenomMetadata _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgSetDenomMetadataDefaultTypeInternal _MsgSetDenomMetadata_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgSetDenomMetadataResponse::MsgSetDenomMetadataResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgSetDenomMetadataResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgSetDenomMetadataResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgSetDenomMetadataResponseDefaultTypeInternal() {}
  union {
    MsgSetDenomMetadataResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgSetDenomMetadataResponseDefaultTypeInternal _MsgSetDenomMetadataResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgUpdateParams::MsgUpdateParams(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.authority_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.params_)*/nullptr} {}
struct MsgUpdateParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgUpdateParamsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgUpdateParamsDefaultTypeInternal() {}
  union {
    MsgUpdateParams _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgUpdateParamsDefaultTypeInternal _MsgUpdateParams_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgUpdateParamsResponse::MsgUpdateParamsResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgUpdateParamsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgUpdateParamsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgUpdateParamsResponseDefaultTypeInternal() {}
  union {
    MsgUpdateParamsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgUpdateParamsResponseDefaultTypeInternal _MsgUpdateParamsResponse_default_instance_;
}  // namespace v1beta1
}  // namespace tokenfactory
}  // namespace injective
static ::_pb::Metadata file_level_metadata_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto[12];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto = nullptr;
const ::uint32_t TableStruct_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::tokenfactory::v1beta1::MsgCreateDenom, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::tokenfactory::v1beta1::MsgCreateDenom, _impl_.sender_),
    PROTOBUF_FIELD_OFFSET(::injective::tokenfactory::v1beta1::MsgCreateDenom, _impl_.subdenom_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::tokenfactory::v1beta1::MsgCreateDenomResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::tokenfactory::v1beta1::MsgCreateDenomResponse, _impl_.new_token_denom_),
    PROTOBUF_FIELD_OFFSET(::injective::tokenfactory::v1beta1::MsgMint, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::injective::tokenfactory::v1beta1::MsgMint, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::tokenfactory::v1beta1::MsgMint, _impl_.sender_),
    PROTOBUF_FIELD_OFFSET(::injective::tokenfactory::v1beta1::MsgMint, _impl_.amount_),
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::tokenfactory::v1beta1::MsgMintResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::tokenfactory::v1beta1::MsgBurn, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::injective::tokenfactory::v1beta1::MsgBurn, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::tokenfactory::v1beta1::MsgBurn, _impl_.sender_),
    PROTOBUF_FIELD_OFFSET(::injective::tokenfactory::v1beta1::MsgBurn, _impl_.amount_),
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::tokenfactory::v1beta1::MsgBurnResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::tokenfactory::v1beta1::MsgChangeAdmin, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::tokenfactory::v1beta1::MsgChangeAdmin, _impl_.sender_),
    PROTOBUF_FIELD_OFFSET(::injective::tokenfactory::v1beta1::MsgChangeAdmin, _impl_.denom_),
    PROTOBUF_FIELD_OFFSET(::injective::tokenfactory::v1beta1::MsgChangeAdmin, _impl_.new_admin_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::tokenfactory::v1beta1::MsgChangeAdminResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::tokenfactory::v1beta1::MsgSetDenomMetadata, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::injective::tokenfactory::v1beta1::MsgSetDenomMetadata, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::tokenfactory::v1beta1::MsgSetDenomMetadata, _impl_.sender_),
    PROTOBUF_FIELD_OFFSET(::injective::tokenfactory::v1beta1::MsgSetDenomMetadata, _impl_.metadata_),
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::tokenfactory::v1beta1::MsgSetDenomMetadataResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::tokenfactory::v1beta1::MsgUpdateParams, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::injective::tokenfactory::v1beta1::MsgUpdateParams, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::tokenfactory::v1beta1::MsgUpdateParams, _impl_.authority_),
    PROTOBUF_FIELD_OFFSET(::injective::tokenfactory::v1beta1::MsgUpdateParams, _impl_.params_),
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::tokenfactory::v1beta1::MsgUpdateParamsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::injective::tokenfactory::v1beta1::MsgCreateDenom)},
        { 10, -1, -1, sizeof(::injective::tokenfactory::v1beta1::MsgCreateDenomResponse)},
        { 19, 29, -1, sizeof(::injective::tokenfactory::v1beta1::MsgMint)},
        { 31, -1, -1, sizeof(::injective::tokenfactory::v1beta1::MsgMintResponse)},
        { 39, 49, -1, sizeof(::injective::tokenfactory::v1beta1::MsgBurn)},
        { 51, -1, -1, sizeof(::injective::tokenfactory::v1beta1::MsgBurnResponse)},
        { 59, -1, -1, sizeof(::injective::tokenfactory::v1beta1::MsgChangeAdmin)},
        { 70, -1, -1, sizeof(::injective::tokenfactory::v1beta1::MsgChangeAdminResponse)},
        { 78, 88, -1, sizeof(::injective::tokenfactory::v1beta1::MsgSetDenomMetadata)},
        { 90, -1, -1, sizeof(::injective::tokenfactory::v1beta1::MsgSetDenomMetadataResponse)},
        { 98, 108, -1, sizeof(::injective::tokenfactory::v1beta1::MsgUpdateParams)},
        { 110, -1, -1, sizeof(::injective::tokenfactory::v1beta1::MsgUpdateParamsResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::injective::tokenfactory::v1beta1::_MsgCreateDenom_default_instance_._instance,
    &::injective::tokenfactory::v1beta1::_MsgCreateDenomResponse_default_instance_._instance,
    &::injective::tokenfactory::v1beta1::_MsgMint_default_instance_._instance,
    &::injective::tokenfactory::v1beta1::_MsgMintResponse_default_instance_._instance,
    &::injective::tokenfactory::v1beta1::_MsgBurn_default_instance_._instance,
    &::injective::tokenfactory::v1beta1::_MsgBurnResponse_default_instance_._instance,
    &::injective::tokenfactory::v1beta1::_MsgChangeAdmin_default_instance_._instance,
    &::injective::tokenfactory::v1beta1::_MsgChangeAdminResponse_default_instance_._instance,
    &::injective::tokenfactory::v1beta1::_MsgSetDenomMetadata_default_instance_._instance,
    &::injective::tokenfactory::v1beta1::_MsgSetDenomMetadataResponse_default_instance_._instance,
    &::injective::tokenfactory::v1beta1::_MsgUpdateParams_default_instance_._instance,
    &::injective::tokenfactory::v1beta1::_MsgUpdateParamsResponse_default_instance_._instance,
};
const char descriptor_table_protodef_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\'injective/tokenfactory/v1beta1/tx.prot"
    "o\022\036injective.tokenfactory.v1beta1\032\024gogop"
    "roto/gogo.proto\032\036cosmos/base/v1beta1/coi"
    "n.proto\032\036cosmos/bank/v1beta1/bank.proto\032"
    "\027cosmos/msg/v1/msg.proto\032\031cosmos_proto/c"
    "osmos.proto\032+injective/tokenfactory/v1be"
    "ta1/params.proto\"y\n\016MsgCreateDenom\022)\n\006se"
    "nder\030\001 \001(\tB\021\362\336\037\ryaml:\"sender\"R\006sender\022/\n"
    "\010subdenom\030\002 \001(\tB\023\362\336\037\017yaml:\"subdenom\"R\010su"
    "bdenom:\013\202\347\260*\006sender\"\\\n\026MsgCreateDenomRes"
    "ponse\022B\n\017new_token_denom\030\001 \001(\tB\032\362\336\037\026yaml"
    ":\"new_token_denom\"R\rnewTokenDenom\"\213\001\n\007Ms"
    "gMint\022)\n\006sender\030\001 \001(\tB\021\362\336\037\ryaml:\"sender\""
    "R\006sender\022H\n\006amount\030\002 \001(\0132\031.cosmos.base.v"
    "1beta1.CoinB\025\310\336\037\000\362\336\037\ryaml:\"amount\"R\006amou"
    "nt:\013\202\347\260*\006sender\"\021\n\017MsgMintResponse\"\213\001\n\007M"
    "sgBurn\022)\n\006sender\030\001 \001(\tB\021\362\336\037\ryaml:\"sender"
    "\"R\006sender\022H\n\006amount\030\002 \001(\0132\031.cosmos.base."
    "v1beta1.CoinB\025\310\336\037\000\362\336\037\ryaml:\"amount\"R\006amo"
    "unt:\013\202\347\260*\006sender\"\021\n\017MsgBurnResponse\"\243\001\n\016"
    "MsgChangeAdmin\022)\n\006sender\030\001 \001(\tB\021\362\336\037\ryaml"
    ":\"sender\"R\006sender\022&\n\005denom\030\002 \001(\tB\020\362\336\037\014ya"
    "ml:\"denom\"R\005denom\0221\n\tnew_admin\030\003 \001(\tB\024\362\336"
    "\037\020yaml:\"new_admin\"R\010newAdmin:\013\202\347\260*\006sende"
    "r\"\030\n\026MsgChangeAdminResponse\"\241\001\n\023MsgSetDe"
    "nomMetadata\022)\n\006sender\030\001 \001(\tB\021\362\336\037\ryaml:\"s"
    "ender\"R\006sender\022R\n\010metadata\030\002 \001(\0132\035.cosmo"
    "s.bank.v1beta1.MetadataB\027\310\336\037\000\362\336\037\017yaml:\"m"
    "etadata\"R\010metadata:\013\202\347\260*\006sender\"\035\n\033MsgSe"
    "tDenomMetadataResponse\"\237\001\n\017MsgUpdatePara"
    "ms\0226\n\tauthority\030\001 \001(\tB\030\322\264-\024cosmos.Addres"
    "sStringR\tauthority\022D\n\006params\030\002 \001(\0132&.inj"
    "ective.tokenfactory.v1beta1.ParamsB\004\310\336\037\000"
    "R\006params:\016\202\347\260*\tauthority\"\031\n\027MsgUpdatePar"
    "amsResponse2\270\005\n\003Msg\022u\n\013CreateDenom\022..inj"
    "ective.tokenfactory.v1beta1.MsgCreateDen"
    "om\0326.injective.tokenfactory.v1beta1.MsgC"
    "reateDenomResponse\022`\n\004Mint\022\'.injective.t"
    "okenfactory.v1beta1.MsgMint\032/.injective."
    "tokenfactory.v1beta1.MsgMintResponse\022`\n\004"
    "Burn\022\'.injective.tokenfactory.v1beta1.Ms"
    "gBurn\032/.injective.tokenfactory.v1beta1.M"
    "sgBurnResponse\022u\n\013ChangeAdmin\022..injectiv"
    "e.tokenfactory.v1beta1.MsgChangeAdmin\0326."
    "injective.tokenfactory.v1beta1.MsgChange"
    "AdminResponse\022\204\001\n\020SetDenomMetadata\0223.inj"
    "ective.tokenfactory.v1beta1.MsgSetDenomM"
    "etadata\032;.injective.tokenfactory.v1beta1"
    ".MsgSetDenomMetadataResponse\022x\n\014UpdatePa"
    "rams\022/.injective.tokenfactory.v1beta1.Ms"
    "gUpdateParams\0327.injective.tokenfactory.v"
    "1beta1.MsgUpdateParamsResponseB\233\002\n\"com.i"
    "njective.tokenfactory.v1beta1B\007TxProtoP\001"
    "ZRgithub.com/InjectiveLabs/injective-cor"
    "e/injective-chain/modules/tokenfactory/t"
    "ypes\242\002\003ITX\252\002\036Injective.Tokenfactory.V1be"
    "ta1\312\002\036Injective\\Tokenfactory\\V1beta1\342\002*I"
    "njective\\Tokenfactory\\V1beta1\\GPBMetadat"
    "a\352\002 Injective::Tokenfactory::V1beta1b\006pr"
    "oto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto_deps[6] =
    {
        &::descriptor_table_cosmos_2fbank_2fv1beta1_2fbank_2eproto,
        &::descriptor_table_cosmos_2fbase_2fv1beta1_2fcoin_2eproto,
        &::descriptor_table_cosmos_2fmsg_2fv1_2fmsg_2eproto,
        &::descriptor_table_cosmos_5fproto_2fcosmos_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_injective_2ftokenfactory_2fv1beta1_2fparams_2eproto,
};
static ::absl::once_flag descriptor_table_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto = {
    false,
    false,
    2364,
    descriptor_table_protodef_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto,
    "injective/tokenfactory/v1beta1/tx.proto",
    &descriptor_table_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto_once,
    descriptor_table_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto_deps,
    6,
    12,
    schemas,
    file_default_instances,
    TableStruct_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto::offsets,
    file_level_metadata_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto,
    file_level_enum_descriptors_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto,
    file_level_service_descriptors_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto_getter() {
  return &descriptor_table_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto(&descriptor_table_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto);
namespace injective {
namespace tokenfactory {
namespace v1beta1 {
// ===================================================================

class MsgCreateDenom::_Internal {
 public:
};

MsgCreateDenom::MsgCreateDenom(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.tokenfactory.v1beta1.MsgCreateDenom)
}
MsgCreateDenom::MsgCreateDenom(const MsgCreateDenom& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgCreateDenom* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.sender_) {}

    , decltype(_impl_.subdenom_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sender().empty()) {
    _this->_impl_.sender_.Set(from._internal_sender(), _this->GetArenaForAllocation());
  }
  _impl_.subdenom_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.subdenom_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_subdenom().empty()) {
    _this->_impl_.subdenom_.Set(from._internal_subdenom(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:injective.tokenfactory.v1beta1.MsgCreateDenom)
}

inline void MsgCreateDenom::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.sender_) {}

    , decltype(_impl_.subdenom_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.subdenom_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.subdenom_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgCreateDenom::~MsgCreateDenom() {
  // @@protoc_insertion_point(destructor:injective.tokenfactory.v1beta1.MsgCreateDenom)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgCreateDenom::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.sender_.Destroy();
  _impl_.subdenom_.Destroy();
}

void MsgCreateDenom::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgCreateDenom::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.tokenfactory.v1beta1.MsgCreateDenom)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sender_.ClearToEmpty();
  _impl_.subdenom_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgCreateDenom::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string sender = 1 [json_name = "sender", (.gogoproto.moretags) = "yaml:\"sender\""];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_sender();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.tokenfactory.v1beta1.MsgCreateDenom.sender"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string subdenom = 2 [json_name = "subdenom", (.gogoproto.moretags) = "yaml:\"subdenom\""];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_subdenom();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.tokenfactory.v1beta1.MsgCreateDenom.subdenom"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgCreateDenom::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.tokenfactory.v1beta1.MsgCreateDenom)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string sender = 1 [json_name = "sender", (.gogoproto.moretags) = "yaml:\"sender\""];
  if (!this->_internal_sender().empty()) {
    const std::string& _s = this->_internal_sender();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.tokenfactory.v1beta1.MsgCreateDenom.sender");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string subdenom = 2 [json_name = "subdenom", (.gogoproto.moretags) = "yaml:\"subdenom\""];
  if (!this->_internal_subdenom().empty()) {
    const std::string& _s = this->_internal_subdenom();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.tokenfactory.v1beta1.MsgCreateDenom.subdenom");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.tokenfactory.v1beta1.MsgCreateDenom)
  return target;
}

::size_t MsgCreateDenom::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.tokenfactory.v1beta1.MsgCreateDenom)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string sender = 1 [json_name = "sender", (.gogoproto.moretags) = "yaml:\"sender\""];
  if (!this->_internal_sender().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_sender());
  }

  // string subdenom = 2 [json_name = "subdenom", (.gogoproto.moretags) = "yaml:\"subdenom\""];
  if (!this->_internal_subdenom().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_subdenom());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgCreateDenom::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgCreateDenom::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgCreateDenom::GetClassData() const { return &_class_data_; }


void MsgCreateDenom::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgCreateDenom*>(&to_msg);
  auto& from = static_cast<const MsgCreateDenom&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.tokenfactory.v1beta1.MsgCreateDenom)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sender().empty()) {
    _this->_internal_set_sender(from._internal_sender());
  }
  if (!from._internal_subdenom().empty()) {
    _this->_internal_set_subdenom(from._internal_subdenom());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgCreateDenom::CopyFrom(const MsgCreateDenom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.tokenfactory.v1beta1.MsgCreateDenom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgCreateDenom::IsInitialized() const {
  return true;
}

void MsgCreateDenom::InternalSwap(MsgCreateDenom* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_, lhs_arena,
                                       &other->_impl_.sender_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.subdenom_, lhs_arena,
                                       &other->_impl_.subdenom_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgCreateDenom::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto[0]);
}
// ===================================================================

class MsgCreateDenomResponse::_Internal {
 public:
};

MsgCreateDenomResponse::MsgCreateDenomResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.tokenfactory.v1beta1.MsgCreateDenomResponse)
}
MsgCreateDenomResponse::MsgCreateDenomResponse(const MsgCreateDenomResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgCreateDenomResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.new_token_denom_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.new_token_denom_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.new_token_denom_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_new_token_denom().empty()) {
    _this->_impl_.new_token_denom_.Set(from._internal_new_token_denom(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:injective.tokenfactory.v1beta1.MsgCreateDenomResponse)
}

inline void MsgCreateDenomResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.new_token_denom_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.new_token_denom_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.new_token_denom_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgCreateDenomResponse::~MsgCreateDenomResponse() {
  // @@protoc_insertion_point(destructor:injective.tokenfactory.v1beta1.MsgCreateDenomResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgCreateDenomResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.new_token_denom_.Destroy();
}

void MsgCreateDenomResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgCreateDenomResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.tokenfactory.v1beta1.MsgCreateDenomResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.new_token_denom_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgCreateDenomResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string new_token_denom = 1 [json_name = "newTokenDenom", (.gogoproto.moretags) = "yaml:\"new_token_denom\""];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_new_token_denom();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.tokenfactory.v1beta1.MsgCreateDenomResponse.new_token_denom"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgCreateDenomResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.tokenfactory.v1beta1.MsgCreateDenomResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string new_token_denom = 1 [json_name = "newTokenDenom", (.gogoproto.moretags) = "yaml:\"new_token_denom\""];
  if (!this->_internal_new_token_denom().empty()) {
    const std::string& _s = this->_internal_new_token_denom();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.tokenfactory.v1beta1.MsgCreateDenomResponse.new_token_denom");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.tokenfactory.v1beta1.MsgCreateDenomResponse)
  return target;
}

::size_t MsgCreateDenomResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.tokenfactory.v1beta1.MsgCreateDenomResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string new_token_denom = 1 [json_name = "newTokenDenom", (.gogoproto.moretags) = "yaml:\"new_token_denom\""];
  if (!this->_internal_new_token_denom().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_new_token_denom());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgCreateDenomResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgCreateDenomResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgCreateDenomResponse::GetClassData() const { return &_class_data_; }


void MsgCreateDenomResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgCreateDenomResponse*>(&to_msg);
  auto& from = static_cast<const MsgCreateDenomResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.tokenfactory.v1beta1.MsgCreateDenomResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_new_token_denom().empty()) {
    _this->_internal_set_new_token_denom(from._internal_new_token_denom());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgCreateDenomResponse::CopyFrom(const MsgCreateDenomResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.tokenfactory.v1beta1.MsgCreateDenomResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgCreateDenomResponse::IsInitialized() const {
  return true;
}

void MsgCreateDenomResponse::InternalSwap(MsgCreateDenomResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.new_token_denom_, lhs_arena,
                                       &other->_impl_.new_token_denom_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgCreateDenomResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto[1]);
}
// ===================================================================

class MsgMint::_Internal {
 public:
  using HasBits = decltype(std::declval<MsgMint>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MsgMint, _impl_._has_bits_);
  static const ::cosmos::base::v1beta1::Coin& amount(const MsgMint* msg);
  static void set_has_amount(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::v1beta1::Coin&
MsgMint::_Internal::amount(const MsgMint* msg) {
  return *msg->_impl_.amount_;
}
void MsgMint::clear_amount() {
  if (_impl_.amount_ != nullptr) _impl_.amount_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
MsgMint::MsgMint(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.tokenfactory.v1beta1.MsgMint)
}
MsgMint::MsgMint(const MsgMint& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgMint* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.sender_) {}

    , decltype(_impl_.amount_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sender().empty()) {
    _this->_impl_.sender_.Set(from._internal_sender(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.amount_ = new ::cosmos::base::v1beta1::Coin(*from._impl_.amount_);
  }
  // @@protoc_insertion_point(copy_constructor:injective.tokenfactory.v1beta1.MsgMint)
}

inline void MsgMint::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.sender_) {}

    , decltype(_impl_.amount_){nullptr}
  };
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgMint::~MsgMint() {
  // @@protoc_insertion_point(destructor:injective.tokenfactory.v1beta1.MsgMint)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgMint::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.sender_.Destroy();
  if (this != internal_default_instance()) delete _impl_.amount_;
}

void MsgMint::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgMint::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.tokenfactory.v1beta1.MsgMint)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sender_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.amount_ != nullptr);
    _impl_.amount_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgMint::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string sender = 1 [json_name = "sender", (.gogoproto.moretags) = "yaml:\"sender\""];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_sender();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.tokenfactory.v1beta1.MsgMint.sender"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.v1beta1.Coin amount = 2 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"amount\""];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_amount(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgMint::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.tokenfactory.v1beta1.MsgMint)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string sender = 1 [json_name = "sender", (.gogoproto.moretags) = "yaml:\"sender\""];
  if (!this->_internal_sender().empty()) {
    const std::string& _s = this->_internal_sender();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.tokenfactory.v1beta1.MsgMint.sender");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.v1beta1.Coin amount = 2 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"amount\""];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::amount(this),
        _Internal::amount(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.tokenfactory.v1beta1.MsgMint)
  return target;
}

::size_t MsgMint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.tokenfactory.v1beta1.MsgMint)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string sender = 1 [json_name = "sender", (.gogoproto.moretags) = "yaml:\"sender\""];
  if (!this->_internal_sender().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_sender());
  }

  // .cosmos.base.v1beta1.Coin amount = 2 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"amount\""];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.amount_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgMint::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgMint::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgMint::GetClassData() const { return &_class_data_; }


void MsgMint::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgMint*>(&to_msg);
  auto& from = static_cast<const MsgMint&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.tokenfactory.v1beta1.MsgMint)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sender().empty()) {
    _this->_internal_set_sender(from._internal_sender());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_amount()->::cosmos::base::v1beta1::Coin::MergeFrom(
        from._internal_amount());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgMint::CopyFrom(const MsgMint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.tokenfactory.v1beta1.MsgMint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMint::IsInitialized() const {
  return true;
}

void MsgMint::InternalSwap(MsgMint* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_, lhs_arena,
                                       &other->_impl_.sender_, rhs_arena);
  swap(_impl_.amount_, other->_impl_.amount_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgMint::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto[2]);
}
// ===================================================================

class MsgMintResponse::_Internal {
 public:
};

MsgMintResponse::MsgMintResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.tokenfactory.v1beta1.MsgMintResponse)
}
MsgMintResponse::MsgMintResponse(const MsgMintResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgMintResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.tokenfactory.v1beta1.MsgMintResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgMintResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgMintResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgMintResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto[3]);
}
// ===================================================================

class MsgBurn::_Internal {
 public:
  using HasBits = decltype(std::declval<MsgBurn>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MsgBurn, _impl_._has_bits_);
  static const ::cosmos::base::v1beta1::Coin& amount(const MsgBurn* msg);
  static void set_has_amount(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::v1beta1::Coin&
MsgBurn::_Internal::amount(const MsgBurn* msg) {
  return *msg->_impl_.amount_;
}
void MsgBurn::clear_amount() {
  if (_impl_.amount_ != nullptr) _impl_.amount_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
MsgBurn::MsgBurn(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.tokenfactory.v1beta1.MsgBurn)
}
MsgBurn::MsgBurn(const MsgBurn& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgBurn* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.sender_) {}

    , decltype(_impl_.amount_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sender().empty()) {
    _this->_impl_.sender_.Set(from._internal_sender(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.amount_ = new ::cosmos::base::v1beta1::Coin(*from._impl_.amount_);
  }
  // @@protoc_insertion_point(copy_constructor:injective.tokenfactory.v1beta1.MsgBurn)
}

inline void MsgBurn::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.sender_) {}

    , decltype(_impl_.amount_){nullptr}
  };
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgBurn::~MsgBurn() {
  // @@protoc_insertion_point(destructor:injective.tokenfactory.v1beta1.MsgBurn)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgBurn::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.sender_.Destroy();
  if (this != internal_default_instance()) delete _impl_.amount_;
}

void MsgBurn::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgBurn::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.tokenfactory.v1beta1.MsgBurn)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sender_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.amount_ != nullptr);
    _impl_.amount_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgBurn::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string sender = 1 [json_name = "sender", (.gogoproto.moretags) = "yaml:\"sender\""];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_sender();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.tokenfactory.v1beta1.MsgBurn.sender"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.v1beta1.Coin amount = 2 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"amount\""];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_amount(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgBurn::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.tokenfactory.v1beta1.MsgBurn)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string sender = 1 [json_name = "sender", (.gogoproto.moretags) = "yaml:\"sender\""];
  if (!this->_internal_sender().empty()) {
    const std::string& _s = this->_internal_sender();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.tokenfactory.v1beta1.MsgBurn.sender");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.v1beta1.Coin amount = 2 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"amount\""];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::amount(this),
        _Internal::amount(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.tokenfactory.v1beta1.MsgBurn)
  return target;
}

::size_t MsgBurn::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.tokenfactory.v1beta1.MsgBurn)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string sender = 1 [json_name = "sender", (.gogoproto.moretags) = "yaml:\"sender\""];
  if (!this->_internal_sender().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_sender());
  }

  // .cosmos.base.v1beta1.Coin amount = 2 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"amount\""];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.amount_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgBurn::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgBurn::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgBurn::GetClassData() const { return &_class_data_; }


void MsgBurn::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgBurn*>(&to_msg);
  auto& from = static_cast<const MsgBurn&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.tokenfactory.v1beta1.MsgBurn)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sender().empty()) {
    _this->_internal_set_sender(from._internal_sender());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_amount()->::cosmos::base::v1beta1::Coin::MergeFrom(
        from._internal_amount());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgBurn::CopyFrom(const MsgBurn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.tokenfactory.v1beta1.MsgBurn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBurn::IsInitialized() const {
  return true;
}

void MsgBurn::InternalSwap(MsgBurn* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_, lhs_arena,
                                       &other->_impl_.sender_, rhs_arena);
  swap(_impl_.amount_, other->_impl_.amount_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgBurn::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto[4]);
}
// ===================================================================

class MsgBurnResponse::_Internal {
 public:
};

MsgBurnResponse::MsgBurnResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.tokenfactory.v1beta1.MsgBurnResponse)
}
MsgBurnResponse::MsgBurnResponse(const MsgBurnResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgBurnResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.tokenfactory.v1beta1.MsgBurnResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgBurnResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgBurnResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgBurnResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto[5]);
}
// ===================================================================

class MsgChangeAdmin::_Internal {
 public:
};

MsgChangeAdmin::MsgChangeAdmin(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.tokenfactory.v1beta1.MsgChangeAdmin)
}
MsgChangeAdmin::MsgChangeAdmin(const MsgChangeAdmin& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgChangeAdmin* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.sender_) {}

    , decltype(_impl_.denom_) {}

    , decltype(_impl_.new_admin_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sender().empty()) {
    _this->_impl_.sender_.Set(from._internal_sender(), _this->GetArenaForAllocation());
  }
  _impl_.denom_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.denom_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_denom().empty()) {
    _this->_impl_.denom_.Set(from._internal_denom(), _this->GetArenaForAllocation());
  }
  _impl_.new_admin_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.new_admin_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_new_admin().empty()) {
    _this->_impl_.new_admin_.Set(from._internal_new_admin(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:injective.tokenfactory.v1beta1.MsgChangeAdmin)
}

inline void MsgChangeAdmin::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.sender_) {}

    , decltype(_impl_.denom_) {}

    , decltype(_impl_.new_admin_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.denom_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.denom_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.new_admin_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.new_admin_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgChangeAdmin::~MsgChangeAdmin() {
  // @@protoc_insertion_point(destructor:injective.tokenfactory.v1beta1.MsgChangeAdmin)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgChangeAdmin::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.sender_.Destroy();
  _impl_.denom_.Destroy();
  _impl_.new_admin_.Destroy();
}

void MsgChangeAdmin::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgChangeAdmin::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.tokenfactory.v1beta1.MsgChangeAdmin)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sender_.ClearToEmpty();
  _impl_.denom_.ClearToEmpty();
  _impl_.new_admin_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgChangeAdmin::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string sender = 1 [json_name = "sender", (.gogoproto.moretags) = "yaml:\"sender\""];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_sender();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.tokenfactory.v1beta1.MsgChangeAdmin.sender"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string denom = 2 [json_name = "denom", (.gogoproto.moretags) = "yaml:\"denom\""];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_denom();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.tokenfactory.v1beta1.MsgChangeAdmin.denom"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string new_admin = 3 [json_name = "newAdmin", (.gogoproto.moretags) = "yaml:\"new_admin\""];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_new_admin();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.tokenfactory.v1beta1.MsgChangeAdmin.new_admin"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgChangeAdmin::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.tokenfactory.v1beta1.MsgChangeAdmin)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string sender = 1 [json_name = "sender", (.gogoproto.moretags) = "yaml:\"sender\""];
  if (!this->_internal_sender().empty()) {
    const std::string& _s = this->_internal_sender();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.tokenfactory.v1beta1.MsgChangeAdmin.sender");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string denom = 2 [json_name = "denom", (.gogoproto.moretags) = "yaml:\"denom\""];
  if (!this->_internal_denom().empty()) {
    const std::string& _s = this->_internal_denom();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.tokenfactory.v1beta1.MsgChangeAdmin.denom");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string new_admin = 3 [json_name = "newAdmin", (.gogoproto.moretags) = "yaml:\"new_admin\""];
  if (!this->_internal_new_admin().empty()) {
    const std::string& _s = this->_internal_new_admin();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.tokenfactory.v1beta1.MsgChangeAdmin.new_admin");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.tokenfactory.v1beta1.MsgChangeAdmin)
  return target;
}

::size_t MsgChangeAdmin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.tokenfactory.v1beta1.MsgChangeAdmin)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string sender = 1 [json_name = "sender", (.gogoproto.moretags) = "yaml:\"sender\""];
  if (!this->_internal_sender().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_sender());
  }

  // string denom = 2 [json_name = "denom", (.gogoproto.moretags) = "yaml:\"denom\""];
  if (!this->_internal_denom().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_denom());
  }

  // string new_admin = 3 [json_name = "newAdmin", (.gogoproto.moretags) = "yaml:\"new_admin\""];
  if (!this->_internal_new_admin().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_new_admin());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgChangeAdmin::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgChangeAdmin::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgChangeAdmin::GetClassData() const { return &_class_data_; }


void MsgChangeAdmin::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgChangeAdmin*>(&to_msg);
  auto& from = static_cast<const MsgChangeAdmin&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.tokenfactory.v1beta1.MsgChangeAdmin)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sender().empty()) {
    _this->_internal_set_sender(from._internal_sender());
  }
  if (!from._internal_denom().empty()) {
    _this->_internal_set_denom(from._internal_denom());
  }
  if (!from._internal_new_admin().empty()) {
    _this->_internal_set_new_admin(from._internal_new_admin());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgChangeAdmin::CopyFrom(const MsgChangeAdmin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.tokenfactory.v1beta1.MsgChangeAdmin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgChangeAdmin::IsInitialized() const {
  return true;
}

void MsgChangeAdmin::InternalSwap(MsgChangeAdmin* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_, lhs_arena,
                                       &other->_impl_.sender_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.denom_, lhs_arena,
                                       &other->_impl_.denom_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.new_admin_, lhs_arena,
                                       &other->_impl_.new_admin_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgChangeAdmin::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto[6]);
}
// ===================================================================

class MsgChangeAdminResponse::_Internal {
 public:
};

MsgChangeAdminResponse::MsgChangeAdminResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.tokenfactory.v1beta1.MsgChangeAdminResponse)
}
MsgChangeAdminResponse::MsgChangeAdminResponse(const MsgChangeAdminResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgChangeAdminResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.tokenfactory.v1beta1.MsgChangeAdminResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgChangeAdminResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgChangeAdminResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgChangeAdminResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto[7]);
}
// ===================================================================

class MsgSetDenomMetadata::_Internal {
 public:
  using HasBits = decltype(std::declval<MsgSetDenomMetadata>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MsgSetDenomMetadata, _impl_._has_bits_);
  static const ::cosmos::bank::v1beta1::Metadata& metadata(const MsgSetDenomMetadata* msg);
  static void set_has_metadata(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::bank::v1beta1::Metadata&
MsgSetDenomMetadata::_Internal::metadata(const MsgSetDenomMetadata* msg) {
  return *msg->_impl_.metadata_;
}
void MsgSetDenomMetadata::clear_metadata() {
  if (_impl_.metadata_ != nullptr) _impl_.metadata_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
MsgSetDenomMetadata::MsgSetDenomMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.tokenfactory.v1beta1.MsgSetDenomMetadata)
}
MsgSetDenomMetadata::MsgSetDenomMetadata(const MsgSetDenomMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgSetDenomMetadata* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.sender_) {}

    , decltype(_impl_.metadata_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sender().empty()) {
    _this->_impl_.sender_.Set(from._internal_sender(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.metadata_ = new ::cosmos::bank::v1beta1::Metadata(*from._impl_.metadata_);
  }
  // @@protoc_insertion_point(copy_constructor:injective.tokenfactory.v1beta1.MsgSetDenomMetadata)
}

inline void MsgSetDenomMetadata::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.sender_) {}

    , decltype(_impl_.metadata_){nullptr}
  };
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgSetDenomMetadata::~MsgSetDenomMetadata() {
  // @@protoc_insertion_point(destructor:injective.tokenfactory.v1beta1.MsgSetDenomMetadata)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgSetDenomMetadata::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.sender_.Destroy();
  if (this != internal_default_instance()) delete _impl_.metadata_;
}

void MsgSetDenomMetadata::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgSetDenomMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.tokenfactory.v1beta1.MsgSetDenomMetadata)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sender_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.metadata_ != nullptr);
    _impl_.metadata_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgSetDenomMetadata::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string sender = 1 [json_name = "sender", (.gogoproto.moretags) = "yaml:\"sender\""];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_sender();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.tokenfactory.v1beta1.MsgSetDenomMetadata.sender"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.bank.v1beta1.Metadata metadata = 2 [json_name = "metadata", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"metadata\""];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_metadata(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgSetDenomMetadata::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.tokenfactory.v1beta1.MsgSetDenomMetadata)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string sender = 1 [json_name = "sender", (.gogoproto.moretags) = "yaml:\"sender\""];
  if (!this->_internal_sender().empty()) {
    const std::string& _s = this->_internal_sender();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.tokenfactory.v1beta1.MsgSetDenomMetadata.sender");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.bank.v1beta1.Metadata metadata = 2 [json_name = "metadata", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"metadata\""];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::metadata(this),
        _Internal::metadata(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.tokenfactory.v1beta1.MsgSetDenomMetadata)
  return target;
}

::size_t MsgSetDenomMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.tokenfactory.v1beta1.MsgSetDenomMetadata)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string sender = 1 [json_name = "sender", (.gogoproto.moretags) = "yaml:\"sender\""];
  if (!this->_internal_sender().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_sender());
  }

  // .cosmos.bank.v1beta1.Metadata metadata = 2 [json_name = "metadata", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"metadata\""];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metadata_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgSetDenomMetadata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgSetDenomMetadata::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgSetDenomMetadata::GetClassData() const { return &_class_data_; }


void MsgSetDenomMetadata::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgSetDenomMetadata*>(&to_msg);
  auto& from = static_cast<const MsgSetDenomMetadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.tokenfactory.v1beta1.MsgSetDenomMetadata)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sender().empty()) {
    _this->_internal_set_sender(from._internal_sender());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_metadata()->::cosmos::bank::v1beta1::Metadata::MergeFrom(
        from._internal_metadata());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgSetDenomMetadata::CopyFrom(const MsgSetDenomMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.tokenfactory.v1beta1.MsgSetDenomMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSetDenomMetadata::IsInitialized() const {
  return true;
}

void MsgSetDenomMetadata::InternalSwap(MsgSetDenomMetadata* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_, lhs_arena,
                                       &other->_impl_.sender_, rhs_arena);
  swap(_impl_.metadata_, other->_impl_.metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgSetDenomMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto[8]);
}
// ===================================================================

class MsgSetDenomMetadataResponse::_Internal {
 public:
};

MsgSetDenomMetadataResponse::MsgSetDenomMetadataResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.tokenfactory.v1beta1.MsgSetDenomMetadataResponse)
}
MsgSetDenomMetadataResponse::MsgSetDenomMetadataResponse(const MsgSetDenomMetadataResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgSetDenomMetadataResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.tokenfactory.v1beta1.MsgSetDenomMetadataResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgSetDenomMetadataResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgSetDenomMetadataResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgSetDenomMetadataResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto[9]);
}
// ===================================================================

class MsgUpdateParams::_Internal {
 public:
  using HasBits = decltype(std::declval<MsgUpdateParams>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MsgUpdateParams, _impl_._has_bits_);
  static const ::injective::tokenfactory::v1beta1::Params& params(const MsgUpdateParams* msg);
  static void set_has_params(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::injective::tokenfactory::v1beta1::Params&
MsgUpdateParams::_Internal::params(const MsgUpdateParams* msg) {
  return *msg->_impl_.params_;
}
void MsgUpdateParams::clear_params() {
  if (_impl_.params_ != nullptr) _impl_.params_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
MsgUpdateParams::MsgUpdateParams(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.tokenfactory.v1beta1.MsgUpdateParams)
}
MsgUpdateParams::MsgUpdateParams(const MsgUpdateParams& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgUpdateParams* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.authority_) {}

    , decltype(_impl_.params_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.authority_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.authority_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_authority().empty()) {
    _this->_impl_.authority_.Set(from._internal_authority(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.params_ = new ::injective::tokenfactory::v1beta1::Params(*from._impl_.params_);
  }
  // @@protoc_insertion_point(copy_constructor:injective.tokenfactory.v1beta1.MsgUpdateParams)
}

inline void MsgUpdateParams::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.authority_) {}

    , decltype(_impl_.params_){nullptr}
  };
  _impl_.authority_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.authority_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgUpdateParams::~MsgUpdateParams() {
  // @@protoc_insertion_point(destructor:injective.tokenfactory.v1beta1.MsgUpdateParams)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgUpdateParams::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.authority_.Destroy();
  if (this != internal_default_instance()) delete _impl_.params_;
}

void MsgUpdateParams::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgUpdateParams::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.tokenfactory.v1beta1.MsgUpdateParams)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.authority_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.params_ != nullptr);
    _impl_.params_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgUpdateParams::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_authority();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.tokenfactory.v1beta1.MsgUpdateParams.authority"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .injective.tokenfactory.v1beta1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgUpdateParams::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.tokenfactory.v1beta1.MsgUpdateParams)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_authority().empty()) {
    const std::string& _s = this->_internal_authority();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.tokenfactory.v1beta1.MsgUpdateParams.authority");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .injective.tokenfactory.v1beta1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.tokenfactory.v1beta1.MsgUpdateParams)
  return target;
}

::size_t MsgUpdateParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.tokenfactory.v1beta1.MsgUpdateParams)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_authority().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_authority());
  }

  // .injective.tokenfactory.v1beta1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgUpdateParams::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgUpdateParams::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgUpdateParams::GetClassData() const { return &_class_data_; }


void MsgUpdateParams::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgUpdateParams*>(&to_msg);
  auto& from = static_cast<const MsgUpdateParams&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.tokenfactory.v1beta1.MsgUpdateParams)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_authority().empty()) {
    _this->_internal_set_authority(from._internal_authority());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_params()->::injective::tokenfactory::v1beta1::Params::MergeFrom(
        from._internal_params());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgUpdateParams::CopyFrom(const MsgUpdateParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.tokenfactory.v1beta1.MsgUpdateParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgUpdateParams::IsInitialized() const {
  return true;
}

void MsgUpdateParams::InternalSwap(MsgUpdateParams* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.authority_, lhs_arena,
                                       &other->_impl_.authority_, rhs_arena);
  swap(_impl_.params_, other->_impl_.params_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgUpdateParams::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto[10]);
}
// ===================================================================

class MsgUpdateParamsResponse::_Internal {
 public:
};

MsgUpdateParamsResponse::MsgUpdateParamsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.tokenfactory.v1beta1.MsgUpdateParamsResponse)
}
MsgUpdateParamsResponse::MsgUpdateParamsResponse(const MsgUpdateParamsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgUpdateParamsResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.tokenfactory.v1beta1.MsgUpdateParamsResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgUpdateParamsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgUpdateParamsResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgUpdateParamsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_injective_2ftokenfactory_2fv1beta1_2ftx_2eproto[11]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace tokenfactory
}  // namespace injective
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::injective::tokenfactory::v1beta1::MsgCreateDenom*
Arena::CreateMaybeMessage< ::injective::tokenfactory::v1beta1::MsgCreateDenom >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::tokenfactory::v1beta1::MsgCreateDenom >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::tokenfactory::v1beta1::MsgCreateDenomResponse*
Arena::CreateMaybeMessage< ::injective::tokenfactory::v1beta1::MsgCreateDenomResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::tokenfactory::v1beta1::MsgCreateDenomResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::tokenfactory::v1beta1::MsgMint*
Arena::CreateMaybeMessage< ::injective::tokenfactory::v1beta1::MsgMint >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::tokenfactory::v1beta1::MsgMint >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::tokenfactory::v1beta1::MsgMintResponse*
Arena::CreateMaybeMessage< ::injective::tokenfactory::v1beta1::MsgMintResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::tokenfactory::v1beta1::MsgMintResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::tokenfactory::v1beta1::MsgBurn*
Arena::CreateMaybeMessage< ::injective::tokenfactory::v1beta1::MsgBurn >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::tokenfactory::v1beta1::MsgBurn >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::tokenfactory::v1beta1::MsgBurnResponse*
Arena::CreateMaybeMessage< ::injective::tokenfactory::v1beta1::MsgBurnResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::tokenfactory::v1beta1::MsgBurnResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::tokenfactory::v1beta1::MsgChangeAdmin*
Arena::CreateMaybeMessage< ::injective::tokenfactory::v1beta1::MsgChangeAdmin >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::tokenfactory::v1beta1::MsgChangeAdmin >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::tokenfactory::v1beta1::MsgChangeAdminResponse*
Arena::CreateMaybeMessage< ::injective::tokenfactory::v1beta1::MsgChangeAdminResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::tokenfactory::v1beta1::MsgChangeAdminResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::tokenfactory::v1beta1::MsgSetDenomMetadata*
Arena::CreateMaybeMessage< ::injective::tokenfactory::v1beta1::MsgSetDenomMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::tokenfactory::v1beta1::MsgSetDenomMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::tokenfactory::v1beta1::MsgSetDenomMetadataResponse*
Arena::CreateMaybeMessage< ::injective::tokenfactory::v1beta1::MsgSetDenomMetadataResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::tokenfactory::v1beta1::MsgSetDenomMetadataResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::tokenfactory::v1beta1::MsgUpdateParams*
Arena::CreateMaybeMessage< ::injective::tokenfactory::v1beta1::MsgUpdateParams >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::tokenfactory::v1beta1::MsgUpdateParams >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::tokenfactory::v1beta1::MsgUpdateParamsResponse*
Arena::CreateMaybeMessage< ::injective::tokenfactory::v1beta1::MsgUpdateParamsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::tokenfactory::v1beta1::MsgUpdateParamsResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
