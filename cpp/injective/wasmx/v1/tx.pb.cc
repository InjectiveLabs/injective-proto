// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: injective/wasmx/v1/tx.proto

#include "injective/wasmx/v1/tx.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace injective {
namespace wasmx {
namespace v1 {
template <typename>
PROTOBUF_CONSTEXPR MsgExecuteContractCompat::MsgExecuteContractCompat(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.sender_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.contract_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.msg_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.funds_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgExecuteContractCompatDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgExecuteContractCompatDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgExecuteContractCompatDefaultTypeInternal() {}
  union {
    MsgExecuteContractCompat _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgExecuteContractCompatDefaultTypeInternal _MsgExecuteContractCompat_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgExecuteContractCompatResponse::MsgExecuteContractCompatResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgExecuteContractCompatResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgExecuteContractCompatResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgExecuteContractCompatResponseDefaultTypeInternal() {}
  union {
    MsgExecuteContractCompatResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgExecuteContractCompatResponseDefaultTypeInternal _MsgExecuteContractCompatResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgUpdateContract::MsgUpdateContract(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.sender_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.contract_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.admin_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.gas_limit_)*/ ::uint64_t{0u}

  , /*decltype(_impl_.gas_price_)*/ ::uint64_t{0u}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgUpdateContractDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgUpdateContractDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgUpdateContractDefaultTypeInternal() {}
  union {
    MsgUpdateContract _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgUpdateContractDefaultTypeInternal _MsgUpdateContract_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgUpdateContractResponse::MsgUpdateContractResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgUpdateContractResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgUpdateContractResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgUpdateContractResponseDefaultTypeInternal() {}
  union {
    MsgUpdateContractResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgUpdateContractResponseDefaultTypeInternal _MsgUpdateContractResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgActivateContract::MsgActivateContract(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.sender_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.contract_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgActivateContractDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgActivateContractDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgActivateContractDefaultTypeInternal() {}
  union {
    MsgActivateContract _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgActivateContractDefaultTypeInternal _MsgActivateContract_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgActivateContractResponse::MsgActivateContractResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgActivateContractResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgActivateContractResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgActivateContractResponseDefaultTypeInternal() {}
  union {
    MsgActivateContractResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgActivateContractResponseDefaultTypeInternal _MsgActivateContractResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgDeactivateContract::MsgDeactivateContract(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.sender_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.contract_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgDeactivateContractDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgDeactivateContractDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgDeactivateContractDefaultTypeInternal() {}
  union {
    MsgDeactivateContract _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgDeactivateContractDefaultTypeInternal _MsgDeactivateContract_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgDeactivateContractResponse::MsgDeactivateContractResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgDeactivateContractResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgDeactivateContractResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgDeactivateContractResponseDefaultTypeInternal() {}
  union {
    MsgDeactivateContractResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgDeactivateContractResponseDefaultTypeInternal _MsgDeactivateContractResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgUpdateParams::MsgUpdateParams(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.authority_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.params_)*/nullptr} {}
struct MsgUpdateParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgUpdateParamsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgUpdateParamsDefaultTypeInternal() {}
  union {
    MsgUpdateParams _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgUpdateParamsDefaultTypeInternal _MsgUpdateParams_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgUpdateParamsResponse::MsgUpdateParamsResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgUpdateParamsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgUpdateParamsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgUpdateParamsResponseDefaultTypeInternal() {}
  union {
    MsgUpdateParamsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgUpdateParamsResponseDefaultTypeInternal _MsgUpdateParamsResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgRegisterContract::MsgRegisterContract(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.sender_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.contract_registration_request_)*/nullptr} {}
struct MsgRegisterContractDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgRegisterContractDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgRegisterContractDefaultTypeInternal() {}
  union {
    MsgRegisterContract _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgRegisterContractDefaultTypeInternal _MsgRegisterContract_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgRegisterContractResponse::MsgRegisterContractResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgRegisterContractResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgRegisterContractResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgRegisterContractResponseDefaultTypeInternal() {}
  union {
    MsgRegisterContractResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgRegisterContractResponseDefaultTypeInternal _MsgRegisterContractResponse_default_instance_;
}  // namespace v1
}  // namespace wasmx
}  // namespace injective
static ::_pb::Metadata file_level_metadata_injective_2fwasmx_2fv1_2ftx_2eproto[12];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_injective_2fwasmx_2fv1_2ftx_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_injective_2fwasmx_2fv1_2ftx_2eproto = nullptr;
const ::uint32_t TableStruct_injective_2fwasmx_2fv1_2ftx_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::wasmx::v1::MsgExecuteContractCompat, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::wasmx::v1::MsgExecuteContractCompat, _impl_.sender_),
    PROTOBUF_FIELD_OFFSET(::injective::wasmx::v1::MsgExecuteContractCompat, _impl_.contract_),
    PROTOBUF_FIELD_OFFSET(::injective::wasmx::v1::MsgExecuteContractCompat, _impl_.msg_),
    PROTOBUF_FIELD_OFFSET(::injective::wasmx::v1::MsgExecuteContractCompat, _impl_.funds_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::wasmx::v1::MsgExecuteContractCompatResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::wasmx::v1::MsgExecuteContractCompatResponse, _impl_.data_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::wasmx::v1::MsgUpdateContract, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::wasmx::v1::MsgUpdateContract, _impl_.sender_),
    PROTOBUF_FIELD_OFFSET(::injective::wasmx::v1::MsgUpdateContract, _impl_.contract_address_),
    PROTOBUF_FIELD_OFFSET(::injective::wasmx::v1::MsgUpdateContract, _impl_.gas_limit_),
    PROTOBUF_FIELD_OFFSET(::injective::wasmx::v1::MsgUpdateContract, _impl_.gas_price_),
    PROTOBUF_FIELD_OFFSET(::injective::wasmx::v1::MsgUpdateContract, _impl_.admin_address_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::wasmx::v1::MsgUpdateContractResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::wasmx::v1::MsgActivateContract, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::wasmx::v1::MsgActivateContract, _impl_.sender_),
    PROTOBUF_FIELD_OFFSET(::injective::wasmx::v1::MsgActivateContract, _impl_.contract_address_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::wasmx::v1::MsgActivateContractResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::wasmx::v1::MsgDeactivateContract, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::wasmx::v1::MsgDeactivateContract, _impl_.sender_),
    PROTOBUF_FIELD_OFFSET(::injective::wasmx::v1::MsgDeactivateContract, _impl_.contract_address_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::wasmx::v1::MsgDeactivateContractResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::wasmx::v1::MsgUpdateParams, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::injective::wasmx::v1::MsgUpdateParams, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::wasmx::v1::MsgUpdateParams, _impl_.authority_),
    PROTOBUF_FIELD_OFFSET(::injective::wasmx::v1::MsgUpdateParams, _impl_.params_),
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::wasmx::v1::MsgUpdateParamsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::wasmx::v1::MsgRegisterContract, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::injective::wasmx::v1::MsgRegisterContract, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::wasmx::v1::MsgRegisterContract, _impl_.sender_),
    PROTOBUF_FIELD_OFFSET(::injective::wasmx::v1::MsgRegisterContract, _impl_.contract_registration_request_),
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::wasmx::v1::MsgRegisterContractResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::injective::wasmx::v1::MsgExecuteContractCompat)},
        { 12, -1, -1, sizeof(::injective::wasmx::v1::MsgExecuteContractCompatResponse)},
        { 21, -1, -1, sizeof(::injective::wasmx::v1::MsgUpdateContract)},
        { 34, -1, -1, sizeof(::injective::wasmx::v1::MsgUpdateContractResponse)},
        { 42, -1, -1, sizeof(::injective::wasmx::v1::MsgActivateContract)},
        { 52, -1, -1, sizeof(::injective::wasmx::v1::MsgActivateContractResponse)},
        { 60, -1, -1, sizeof(::injective::wasmx::v1::MsgDeactivateContract)},
        { 70, -1, -1, sizeof(::injective::wasmx::v1::MsgDeactivateContractResponse)},
        { 78, 88, -1, sizeof(::injective::wasmx::v1::MsgUpdateParams)},
        { 90, -1, -1, sizeof(::injective::wasmx::v1::MsgUpdateParamsResponse)},
        { 98, 108, -1, sizeof(::injective::wasmx::v1::MsgRegisterContract)},
        { 110, -1, -1, sizeof(::injective::wasmx::v1::MsgRegisterContractResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::injective::wasmx::v1::_MsgExecuteContractCompat_default_instance_._instance,
    &::injective::wasmx::v1::_MsgExecuteContractCompatResponse_default_instance_._instance,
    &::injective::wasmx::v1::_MsgUpdateContract_default_instance_._instance,
    &::injective::wasmx::v1::_MsgUpdateContractResponse_default_instance_._instance,
    &::injective::wasmx::v1::_MsgActivateContract_default_instance_._instance,
    &::injective::wasmx::v1::_MsgActivateContractResponse_default_instance_._instance,
    &::injective::wasmx::v1::_MsgDeactivateContract_default_instance_._instance,
    &::injective::wasmx::v1::_MsgDeactivateContractResponse_default_instance_._instance,
    &::injective::wasmx::v1::_MsgUpdateParams_default_instance_._instance,
    &::injective::wasmx::v1::_MsgUpdateParamsResponse_default_instance_._instance,
    &::injective::wasmx::v1::_MsgRegisterContract_default_instance_._instance,
    &::injective::wasmx::v1::_MsgRegisterContractResponse_default_instance_._instance,
};
const char descriptor_table_protodef_injective_2fwasmx_2fv1_2ftx_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\033injective/wasmx/v1/tx.proto\022\022injective"
    ".wasmx.v1\032\024gogoproto/gogo.proto\032\031google/"
    "protobuf/any.proto\032\031cosmos_proto/cosmos."
    "proto\032\027cosmos/msg/v1/msg.proto\032\036injectiv"
    "e/wasmx/v1/wasmx.proto\032!injective/wasmx/"
    "v1/proposal.proto\"\203\001\n\030MsgExecuteContract"
    "Compat\022\026\n\006sender\030\001 \001(\tR\006sender\022\032\n\010contra"
    "ct\030\002 \001(\tR\010contract\022\020\n\003msg\030\003 \001(\tR\003msg\022\024\n\005"
    "funds\030\004 \001(\tR\005funds:\013\202\347\260*\006sender\"6\n MsgEx"
    "ecuteContractCompatResponse\022\022\n\004data\030\001 \001("
    "\014R\004data\"\310\001\n\021MsgUpdateContract\022\026\n\006sender\030"
    "\001 \001(\tR\006sender\022)\n\020contract_address\030\002 \001(\tR"
    "\017contractAddress\022\033\n\tgas_limit\030\003 \001(\004R\010gas"
    "Limit\022\033\n\tgas_price\030\004 \001(\004R\010gasPrice\022)\n\rad"
    "min_address\030\005 \001(\tB\004\310\336\037\001R\014adminAddress:\013\202"
    "\347\260*\006sender\"\033\n\031MsgUpdateContractResponse\""
    "e\n\023MsgActivateContract\022\026\n\006sender\030\001 \001(\tR\006"
    "sender\022)\n\020contract_address\030\002 \001(\tR\017contra"
    "ctAddress:\013\202\347\260*\006sender\"\035\n\033MsgActivateCon"
    "tractResponse\"g\n\025MsgDeactivateContract\022\026"
    "\n\006sender\030\001 \001(\tR\006sender\022)\n\020contract_addre"
    "ss\030\002 \001(\tR\017contractAddress:\013\202\347\260*\006sender\"\037"
    "\n\035MsgDeactivateContractResponse\"\223\001\n\017MsgU"
    "pdateParams\0226\n\tauthority\030\001 \001(\tB\030\322\264-\024cosm"
    "os.AddressStringR\tauthority\0228\n\006params\030\002 "
    "\001(\0132\032.injective.wasmx.v1.ParamsB\004\310\336\037\000R\006p"
    "arams:\016\202\347\260*\tauthority\"\031\n\027MsgUpdateParams"
    "Response\"\265\001\n\023MsgRegisterContract\022\026\n\006send"
    "er\030\001 \001(\tR\006sender\022y\n\035contract_registratio"
    "n_request\030\002 \001(\0132/.injective.wasmx.v1.Con"
    "tractRegistrationRequestB\004\310\336\037\000R\033contract"
    "RegistrationRequest:\013\202\347\260*\006sender\"\035\n\033MsgR"
    "egisterContractResponse2\272\005\n\003Msg\022t\n\034Updat"
    "eRegistryContractParams\022%.injective.wasm"
    "x.v1.MsgUpdateContract\032-.injective.wasmx"
    ".v1.MsgUpdateContractResponse\022t\n\030Activat"
    "eRegistryContract\022\'.injective.wasmx.v1.M"
    "sgActivateContract\032/.injective.wasmx.v1."
    "MsgActivateContractResponse\022z\n\032Deactivat"
    "eRegistryContract\022).injective.wasmx.v1.M"
    "sgDeactivateContract\0321.injective.wasmx.v"
    "1.MsgDeactivateContractResponse\022{\n\025Execu"
    "teContractCompat\022,.injective.wasmx.v1.Ms"
    "gExecuteContractCompat\0324.injective.wasmx"
    ".v1.MsgExecuteContractCompatResponse\022`\n\014"
    "UpdateParams\022#.injective.wasmx.v1.MsgUpd"
    "ateParams\032+.injective.wasmx.v1.MsgUpdate"
    "ParamsResponse\022l\n\020RegisterContract\022\'.inj"
    "ective.wasmx.v1.MsgRegisterContract\032/.in"
    "jective.wasmx.v1.MsgRegisterContractResp"
    "onseB\330\001\n\026com.injective.wasmx.v1B\007TxProto"
    "P\001ZKgithub.com/InjectiveLabs/injective-c"
    "ore/injective-chain/modules/wasmx/types\242"
    "\002\003IWX\252\002\022Injective.Wasmx.V1\312\002\022Injective\\W"
    "asmx\\V1\342\002\036Injective\\Wasmx\\V1\\GPBMetadata"
    "\352\002\024Injective::Wasmx::V1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_injective_2fwasmx_2fv1_2ftx_2eproto_deps[6] =
    {
        &::descriptor_table_cosmos_2fmsg_2fv1_2fmsg_2eproto,
        &::descriptor_table_cosmos_5fproto_2fcosmos_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_google_2fprotobuf_2fany_2eproto,
        &::descriptor_table_injective_2fwasmx_2fv1_2fproposal_2eproto,
        &::descriptor_table_injective_2fwasmx_2fv1_2fwasmx_2eproto,
};
static ::absl::once_flag descriptor_table_injective_2fwasmx_2fv1_2ftx_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_injective_2fwasmx_2fv1_2ftx_2eproto = {
    false,
    false,
    2231,
    descriptor_table_protodef_injective_2fwasmx_2fv1_2ftx_2eproto,
    "injective/wasmx/v1/tx.proto",
    &descriptor_table_injective_2fwasmx_2fv1_2ftx_2eproto_once,
    descriptor_table_injective_2fwasmx_2fv1_2ftx_2eproto_deps,
    6,
    12,
    schemas,
    file_default_instances,
    TableStruct_injective_2fwasmx_2fv1_2ftx_2eproto::offsets,
    file_level_metadata_injective_2fwasmx_2fv1_2ftx_2eproto,
    file_level_enum_descriptors_injective_2fwasmx_2fv1_2ftx_2eproto,
    file_level_service_descriptors_injective_2fwasmx_2fv1_2ftx_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_injective_2fwasmx_2fv1_2ftx_2eproto_getter() {
  return &descriptor_table_injective_2fwasmx_2fv1_2ftx_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_injective_2fwasmx_2fv1_2ftx_2eproto(&descriptor_table_injective_2fwasmx_2fv1_2ftx_2eproto);
namespace injective {
namespace wasmx {
namespace v1 {
// ===================================================================

class MsgExecuteContractCompat::_Internal {
 public:
};

MsgExecuteContractCompat::MsgExecuteContractCompat(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.wasmx.v1.MsgExecuteContractCompat)
}
MsgExecuteContractCompat::MsgExecuteContractCompat(const MsgExecuteContractCompat& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgExecuteContractCompat* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.sender_) {}

    , decltype(_impl_.contract_) {}

    , decltype(_impl_.msg_) {}

    , decltype(_impl_.funds_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sender().empty()) {
    _this->_impl_.sender_.Set(from._internal_sender(), _this->GetArenaForAllocation());
  }
  _impl_.contract_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.contract_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_contract().empty()) {
    _this->_impl_.contract_.Set(from._internal_contract(), _this->GetArenaForAllocation());
  }
  _impl_.msg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.msg_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_msg().empty()) {
    _this->_impl_.msg_.Set(from._internal_msg(), _this->GetArenaForAllocation());
  }
  _impl_.funds_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.funds_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_funds().empty()) {
    _this->_impl_.funds_.Set(from._internal_funds(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:injective.wasmx.v1.MsgExecuteContractCompat)
}

inline void MsgExecuteContractCompat::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.sender_) {}

    , decltype(_impl_.contract_) {}

    , decltype(_impl_.msg_) {}

    , decltype(_impl_.funds_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.contract_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.contract_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.msg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.msg_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.funds_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.funds_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgExecuteContractCompat::~MsgExecuteContractCompat() {
  // @@protoc_insertion_point(destructor:injective.wasmx.v1.MsgExecuteContractCompat)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgExecuteContractCompat::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.sender_.Destroy();
  _impl_.contract_.Destroy();
  _impl_.msg_.Destroy();
  _impl_.funds_.Destroy();
}

void MsgExecuteContractCompat::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgExecuteContractCompat::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.wasmx.v1.MsgExecuteContractCompat)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sender_.ClearToEmpty();
  _impl_.contract_.ClearToEmpty();
  _impl_.msg_.ClearToEmpty();
  _impl_.funds_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgExecuteContractCompat::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string sender = 1 [json_name = "sender"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_sender();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.wasmx.v1.MsgExecuteContractCompat.sender"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string contract = 2 [json_name = "contract"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_contract();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.wasmx.v1.MsgExecuteContractCompat.contract"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string msg = 3 [json_name = "msg"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_msg();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.wasmx.v1.MsgExecuteContractCompat.msg"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string funds = 4 [json_name = "funds"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_funds();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.wasmx.v1.MsgExecuteContractCompat.funds"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgExecuteContractCompat::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.wasmx.v1.MsgExecuteContractCompat)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string sender = 1 [json_name = "sender"];
  if (!this->_internal_sender().empty()) {
    const std::string& _s = this->_internal_sender();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.wasmx.v1.MsgExecuteContractCompat.sender");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string contract = 2 [json_name = "contract"];
  if (!this->_internal_contract().empty()) {
    const std::string& _s = this->_internal_contract();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.wasmx.v1.MsgExecuteContractCompat.contract");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string msg = 3 [json_name = "msg"];
  if (!this->_internal_msg().empty()) {
    const std::string& _s = this->_internal_msg();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.wasmx.v1.MsgExecuteContractCompat.msg");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string funds = 4 [json_name = "funds"];
  if (!this->_internal_funds().empty()) {
    const std::string& _s = this->_internal_funds();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.wasmx.v1.MsgExecuteContractCompat.funds");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.wasmx.v1.MsgExecuteContractCompat)
  return target;
}

::size_t MsgExecuteContractCompat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.wasmx.v1.MsgExecuteContractCompat)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string sender = 1 [json_name = "sender"];
  if (!this->_internal_sender().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_sender());
  }

  // string contract = 2 [json_name = "contract"];
  if (!this->_internal_contract().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_contract());
  }

  // string msg = 3 [json_name = "msg"];
  if (!this->_internal_msg().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_msg());
  }

  // string funds = 4 [json_name = "funds"];
  if (!this->_internal_funds().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_funds());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgExecuteContractCompat::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgExecuteContractCompat::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgExecuteContractCompat::GetClassData() const { return &_class_data_; }


void MsgExecuteContractCompat::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgExecuteContractCompat*>(&to_msg);
  auto& from = static_cast<const MsgExecuteContractCompat&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.wasmx.v1.MsgExecuteContractCompat)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sender().empty()) {
    _this->_internal_set_sender(from._internal_sender());
  }
  if (!from._internal_contract().empty()) {
    _this->_internal_set_contract(from._internal_contract());
  }
  if (!from._internal_msg().empty()) {
    _this->_internal_set_msg(from._internal_msg());
  }
  if (!from._internal_funds().empty()) {
    _this->_internal_set_funds(from._internal_funds());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgExecuteContractCompat::CopyFrom(const MsgExecuteContractCompat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.wasmx.v1.MsgExecuteContractCompat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgExecuteContractCompat::IsInitialized() const {
  return true;
}

void MsgExecuteContractCompat::InternalSwap(MsgExecuteContractCompat* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_, lhs_arena,
                                       &other->_impl_.sender_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.contract_, lhs_arena,
                                       &other->_impl_.contract_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.msg_, lhs_arena,
                                       &other->_impl_.msg_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.funds_, lhs_arena,
                                       &other->_impl_.funds_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgExecuteContractCompat::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fwasmx_2fv1_2ftx_2eproto_getter, &descriptor_table_injective_2fwasmx_2fv1_2ftx_2eproto_once,
      file_level_metadata_injective_2fwasmx_2fv1_2ftx_2eproto[0]);
}
// ===================================================================

class MsgExecuteContractCompatResponse::_Internal {
 public:
};

MsgExecuteContractCompatResponse::MsgExecuteContractCompatResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.wasmx.v1.MsgExecuteContractCompatResponse)
}
MsgExecuteContractCompatResponse::MsgExecuteContractCompatResponse(const MsgExecuteContractCompatResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgExecuteContractCompatResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data().empty()) {
    _this->_impl_.data_.Set(from._internal_data(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:injective.wasmx.v1.MsgExecuteContractCompatResponse)
}

inline void MsgExecuteContractCompatResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.data_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgExecuteContractCompatResponse::~MsgExecuteContractCompatResponse() {
  // @@protoc_insertion_point(destructor:injective.wasmx.v1.MsgExecuteContractCompatResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgExecuteContractCompatResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.data_.Destroy();
}

void MsgExecuteContractCompatResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgExecuteContractCompatResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.wasmx.v1.MsgExecuteContractCompatResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgExecuteContractCompatResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes data = 1 [json_name = "data"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_data();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgExecuteContractCompatResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.wasmx.v1.MsgExecuteContractCompatResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1 [json_name = "data"];
  if (!this->_internal_data().empty()) {
    const std::string& _s = this->_internal_data();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.wasmx.v1.MsgExecuteContractCompatResponse)
  return target;
}

::size_t MsgExecuteContractCompatResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.wasmx.v1.MsgExecuteContractCompatResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes data = 1 [json_name = "data"];
  if (!this->_internal_data().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
                                    this->_internal_data());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgExecuteContractCompatResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgExecuteContractCompatResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgExecuteContractCompatResponse::GetClassData() const { return &_class_data_; }


void MsgExecuteContractCompatResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgExecuteContractCompatResponse*>(&to_msg);
  auto& from = static_cast<const MsgExecuteContractCompatResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.wasmx.v1.MsgExecuteContractCompatResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgExecuteContractCompatResponse::CopyFrom(const MsgExecuteContractCompatResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.wasmx.v1.MsgExecuteContractCompatResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgExecuteContractCompatResponse::IsInitialized() const {
  return true;
}

void MsgExecuteContractCompatResponse::InternalSwap(MsgExecuteContractCompatResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, lhs_arena,
                                       &other->_impl_.data_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgExecuteContractCompatResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fwasmx_2fv1_2ftx_2eproto_getter, &descriptor_table_injective_2fwasmx_2fv1_2ftx_2eproto_once,
      file_level_metadata_injective_2fwasmx_2fv1_2ftx_2eproto[1]);
}
// ===================================================================

class MsgUpdateContract::_Internal {
 public:
};

MsgUpdateContract::MsgUpdateContract(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.wasmx.v1.MsgUpdateContract)
}
MsgUpdateContract::MsgUpdateContract(const MsgUpdateContract& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgUpdateContract* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.sender_) {}

    , decltype(_impl_.contract_address_) {}

    , decltype(_impl_.admin_address_) {}

    , decltype(_impl_.gas_limit_) {}

    , decltype(_impl_.gas_price_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sender().empty()) {
    _this->_impl_.sender_.Set(from._internal_sender(), _this->GetArenaForAllocation());
  }
  _impl_.contract_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.contract_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_contract_address().empty()) {
    _this->_impl_.contract_address_.Set(from._internal_contract_address(), _this->GetArenaForAllocation());
  }
  _impl_.admin_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.admin_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_admin_address().empty()) {
    _this->_impl_.admin_address_.Set(from._internal_admin_address(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.gas_limit_, &from._impl_.gas_limit_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.gas_price_) -
    reinterpret_cast<char*>(&_impl_.gas_limit_)) + sizeof(_impl_.gas_price_));
  // @@protoc_insertion_point(copy_constructor:injective.wasmx.v1.MsgUpdateContract)
}

inline void MsgUpdateContract::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.sender_) {}

    , decltype(_impl_.contract_address_) {}

    , decltype(_impl_.admin_address_) {}

    , decltype(_impl_.gas_limit_) { ::uint64_t{0u} }

    , decltype(_impl_.gas_price_) { ::uint64_t{0u} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.contract_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.contract_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.admin_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.admin_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgUpdateContract::~MsgUpdateContract() {
  // @@protoc_insertion_point(destructor:injective.wasmx.v1.MsgUpdateContract)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgUpdateContract::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.sender_.Destroy();
  _impl_.contract_address_.Destroy();
  _impl_.admin_address_.Destroy();
}

void MsgUpdateContract::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgUpdateContract::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.wasmx.v1.MsgUpdateContract)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sender_.ClearToEmpty();
  _impl_.contract_address_.ClearToEmpty();
  _impl_.admin_address_.ClearToEmpty();
  ::memset(&_impl_.gas_limit_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.gas_price_) -
      reinterpret_cast<char*>(&_impl_.gas_limit_)) + sizeof(_impl_.gas_price_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgUpdateContract::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string sender = 1 [json_name = "sender"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_sender();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.wasmx.v1.MsgUpdateContract.sender"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string contract_address = 2 [json_name = "contractAddress"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_contract_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.wasmx.v1.MsgUpdateContract.contract_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      // uint64 gas_limit = 3 [json_name = "gasLimit"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 24)) {
          _impl_.gas_limit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // uint64 gas_price = 4 [json_name = "gasPrice"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 32)) {
          _impl_.gas_price_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string admin_address = 5 [json_name = "adminAddress", (.gogoproto.nullable) = true];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_admin_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.wasmx.v1.MsgUpdateContract.admin_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgUpdateContract::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.wasmx.v1.MsgUpdateContract)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string sender = 1 [json_name = "sender"];
  if (!this->_internal_sender().empty()) {
    const std::string& _s = this->_internal_sender();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.wasmx.v1.MsgUpdateContract.sender");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string contract_address = 2 [json_name = "contractAddress"];
  if (!this->_internal_contract_address().empty()) {
    const std::string& _s = this->_internal_contract_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.wasmx.v1.MsgUpdateContract.contract_address");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // uint64 gas_limit = 3 [json_name = "gasLimit"];
  if (this->_internal_gas_limit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_gas_limit(), target);
  }

  // uint64 gas_price = 4 [json_name = "gasPrice"];
  if (this->_internal_gas_price() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this->_internal_gas_price(), target);
  }

  // string admin_address = 5 [json_name = "adminAddress", (.gogoproto.nullable) = true];
  if (!this->_internal_admin_address().empty()) {
    const std::string& _s = this->_internal_admin_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.wasmx.v1.MsgUpdateContract.admin_address");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.wasmx.v1.MsgUpdateContract)
  return target;
}

::size_t MsgUpdateContract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.wasmx.v1.MsgUpdateContract)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string sender = 1 [json_name = "sender"];
  if (!this->_internal_sender().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_sender());
  }

  // string contract_address = 2 [json_name = "contractAddress"];
  if (!this->_internal_contract_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_contract_address());
  }

  // string admin_address = 5 [json_name = "adminAddress", (.gogoproto.nullable) = true];
  if (!this->_internal_admin_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_admin_address());
  }

  // uint64 gas_limit = 3 [json_name = "gasLimit"];
  if (this->_internal_gas_limit() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_gas_limit());
  }

  // uint64 gas_price = 4 [json_name = "gasPrice"];
  if (this->_internal_gas_price() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_gas_price());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgUpdateContract::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgUpdateContract::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgUpdateContract::GetClassData() const { return &_class_data_; }


void MsgUpdateContract::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgUpdateContract*>(&to_msg);
  auto& from = static_cast<const MsgUpdateContract&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.wasmx.v1.MsgUpdateContract)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sender().empty()) {
    _this->_internal_set_sender(from._internal_sender());
  }
  if (!from._internal_contract_address().empty()) {
    _this->_internal_set_contract_address(from._internal_contract_address());
  }
  if (!from._internal_admin_address().empty()) {
    _this->_internal_set_admin_address(from._internal_admin_address());
  }
  if (from._internal_gas_limit() != 0) {
    _this->_internal_set_gas_limit(from._internal_gas_limit());
  }
  if (from._internal_gas_price() != 0) {
    _this->_internal_set_gas_price(from._internal_gas_price());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgUpdateContract::CopyFrom(const MsgUpdateContract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.wasmx.v1.MsgUpdateContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgUpdateContract::IsInitialized() const {
  return true;
}

void MsgUpdateContract::InternalSwap(MsgUpdateContract* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_, lhs_arena,
                                       &other->_impl_.sender_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.contract_address_, lhs_arena,
                                       &other->_impl_.contract_address_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.admin_address_, lhs_arena,
                                       &other->_impl_.admin_address_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MsgUpdateContract, _impl_.gas_price_)
      + sizeof(MsgUpdateContract::_impl_.gas_price_)
      - PROTOBUF_FIELD_OFFSET(MsgUpdateContract, _impl_.gas_limit_)>(
          reinterpret_cast<char*>(&_impl_.gas_limit_),
          reinterpret_cast<char*>(&other->_impl_.gas_limit_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgUpdateContract::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fwasmx_2fv1_2ftx_2eproto_getter, &descriptor_table_injective_2fwasmx_2fv1_2ftx_2eproto_once,
      file_level_metadata_injective_2fwasmx_2fv1_2ftx_2eproto[2]);
}
// ===================================================================

class MsgUpdateContractResponse::_Internal {
 public:
};

MsgUpdateContractResponse::MsgUpdateContractResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.wasmx.v1.MsgUpdateContractResponse)
}
MsgUpdateContractResponse::MsgUpdateContractResponse(const MsgUpdateContractResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgUpdateContractResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.wasmx.v1.MsgUpdateContractResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgUpdateContractResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgUpdateContractResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgUpdateContractResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fwasmx_2fv1_2ftx_2eproto_getter, &descriptor_table_injective_2fwasmx_2fv1_2ftx_2eproto_once,
      file_level_metadata_injective_2fwasmx_2fv1_2ftx_2eproto[3]);
}
// ===================================================================

class MsgActivateContract::_Internal {
 public:
};

MsgActivateContract::MsgActivateContract(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.wasmx.v1.MsgActivateContract)
}
MsgActivateContract::MsgActivateContract(const MsgActivateContract& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgActivateContract* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.sender_) {}

    , decltype(_impl_.contract_address_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sender().empty()) {
    _this->_impl_.sender_.Set(from._internal_sender(), _this->GetArenaForAllocation());
  }
  _impl_.contract_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.contract_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_contract_address().empty()) {
    _this->_impl_.contract_address_.Set(from._internal_contract_address(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:injective.wasmx.v1.MsgActivateContract)
}

inline void MsgActivateContract::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.sender_) {}

    , decltype(_impl_.contract_address_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.contract_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.contract_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgActivateContract::~MsgActivateContract() {
  // @@protoc_insertion_point(destructor:injective.wasmx.v1.MsgActivateContract)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgActivateContract::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.sender_.Destroy();
  _impl_.contract_address_.Destroy();
}

void MsgActivateContract::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgActivateContract::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.wasmx.v1.MsgActivateContract)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sender_.ClearToEmpty();
  _impl_.contract_address_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgActivateContract::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string sender = 1 [json_name = "sender"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_sender();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.wasmx.v1.MsgActivateContract.sender"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string contract_address = 2 [json_name = "contractAddress"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_contract_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.wasmx.v1.MsgActivateContract.contract_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgActivateContract::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.wasmx.v1.MsgActivateContract)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string sender = 1 [json_name = "sender"];
  if (!this->_internal_sender().empty()) {
    const std::string& _s = this->_internal_sender();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.wasmx.v1.MsgActivateContract.sender");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string contract_address = 2 [json_name = "contractAddress"];
  if (!this->_internal_contract_address().empty()) {
    const std::string& _s = this->_internal_contract_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.wasmx.v1.MsgActivateContract.contract_address");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.wasmx.v1.MsgActivateContract)
  return target;
}

::size_t MsgActivateContract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.wasmx.v1.MsgActivateContract)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string sender = 1 [json_name = "sender"];
  if (!this->_internal_sender().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_sender());
  }

  // string contract_address = 2 [json_name = "contractAddress"];
  if (!this->_internal_contract_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_contract_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgActivateContract::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgActivateContract::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgActivateContract::GetClassData() const { return &_class_data_; }


void MsgActivateContract::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgActivateContract*>(&to_msg);
  auto& from = static_cast<const MsgActivateContract&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.wasmx.v1.MsgActivateContract)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sender().empty()) {
    _this->_internal_set_sender(from._internal_sender());
  }
  if (!from._internal_contract_address().empty()) {
    _this->_internal_set_contract_address(from._internal_contract_address());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgActivateContract::CopyFrom(const MsgActivateContract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.wasmx.v1.MsgActivateContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgActivateContract::IsInitialized() const {
  return true;
}

void MsgActivateContract::InternalSwap(MsgActivateContract* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_, lhs_arena,
                                       &other->_impl_.sender_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.contract_address_, lhs_arena,
                                       &other->_impl_.contract_address_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgActivateContract::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fwasmx_2fv1_2ftx_2eproto_getter, &descriptor_table_injective_2fwasmx_2fv1_2ftx_2eproto_once,
      file_level_metadata_injective_2fwasmx_2fv1_2ftx_2eproto[4]);
}
// ===================================================================

class MsgActivateContractResponse::_Internal {
 public:
};

MsgActivateContractResponse::MsgActivateContractResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.wasmx.v1.MsgActivateContractResponse)
}
MsgActivateContractResponse::MsgActivateContractResponse(const MsgActivateContractResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgActivateContractResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.wasmx.v1.MsgActivateContractResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgActivateContractResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgActivateContractResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgActivateContractResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fwasmx_2fv1_2ftx_2eproto_getter, &descriptor_table_injective_2fwasmx_2fv1_2ftx_2eproto_once,
      file_level_metadata_injective_2fwasmx_2fv1_2ftx_2eproto[5]);
}
// ===================================================================

class MsgDeactivateContract::_Internal {
 public:
};

MsgDeactivateContract::MsgDeactivateContract(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.wasmx.v1.MsgDeactivateContract)
}
MsgDeactivateContract::MsgDeactivateContract(const MsgDeactivateContract& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgDeactivateContract* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.sender_) {}

    , decltype(_impl_.contract_address_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sender().empty()) {
    _this->_impl_.sender_.Set(from._internal_sender(), _this->GetArenaForAllocation());
  }
  _impl_.contract_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.contract_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_contract_address().empty()) {
    _this->_impl_.contract_address_.Set(from._internal_contract_address(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:injective.wasmx.v1.MsgDeactivateContract)
}

inline void MsgDeactivateContract::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.sender_) {}

    , decltype(_impl_.contract_address_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.contract_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.contract_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgDeactivateContract::~MsgDeactivateContract() {
  // @@protoc_insertion_point(destructor:injective.wasmx.v1.MsgDeactivateContract)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgDeactivateContract::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.sender_.Destroy();
  _impl_.contract_address_.Destroy();
}

void MsgDeactivateContract::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgDeactivateContract::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.wasmx.v1.MsgDeactivateContract)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sender_.ClearToEmpty();
  _impl_.contract_address_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgDeactivateContract::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string sender = 1 [json_name = "sender"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_sender();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.wasmx.v1.MsgDeactivateContract.sender"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string contract_address = 2 [json_name = "contractAddress"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_contract_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.wasmx.v1.MsgDeactivateContract.contract_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgDeactivateContract::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.wasmx.v1.MsgDeactivateContract)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string sender = 1 [json_name = "sender"];
  if (!this->_internal_sender().empty()) {
    const std::string& _s = this->_internal_sender();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.wasmx.v1.MsgDeactivateContract.sender");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string contract_address = 2 [json_name = "contractAddress"];
  if (!this->_internal_contract_address().empty()) {
    const std::string& _s = this->_internal_contract_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.wasmx.v1.MsgDeactivateContract.contract_address");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.wasmx.v1.MsgDeactivateContract)
  return target;
}

::size_t MsgDeactivateContract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.wasmx.v1.MsgDeactivateContract)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string sender = 1 [json_name = "sender"];
  if (!this->_internal_sender().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_sender());
  }

  // string contract_address = 2 [json_name = "contractAddress"];
  if (!this->_internal_contract_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_contract_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgDeactivateContract::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgDeactivateContract::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgDeactivateContract::GetClassData() const { return &_class_data_; }


void MsgDeactivateContract::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgDeactivateContract*>(&to_msg);
  auto& from = static_cast<const MsgDeactivateContract&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.wasmx.v1.MsgDeactivateContract)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sender().empty()) {
    _this->_internal_set_sender(from._internal_sender());
  }
  if (!from._internal_contract_address().empty()) {
    _this->_internal_set_contract_address(from._internal_contract_address());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgDeactivateContract::CopyFrom(const MsgDeactivateContract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.wasmx.v1.MsgDeactivateContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDeactivateContract::IsInitialized() const {
  return true;
}

void MsgDeactivateContract::InternalSwap(MsgDeactivateContract* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_, lhs_arena,
                                       &other->_impl_.sender_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.contract_address_, lhs_arena,
                                       &other->_impl_.contract_address_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgDeactivateContract::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fwasmx_2fv1_2ftx_2eproto_getter, &descriptor_table_injective_2fwasmx_2fv1_2ftx_2eproto_once,
      file_level_metadata_injective_2fwasmx_2fv1_2ftx_2eproto[6]);
}
// ===================================================================

class MsgDeactivateContractResponse::_Internal {
 public:
};

MsgDeactivateContractResponse::MsgDeactivateContractResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.wasmx.v1.MsgDeactivateContractResponse)
}
MsgDeactivateContractResponse::MsgDeactivateContractResponse(const MsgDeactivateContractResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgDeactivateContractResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.wasmx.v1.MsgDeactivateContractResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgDeactivateContractResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgDeactivateContractResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgDeactivateContractResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fwasmx_2fv1_2ftx_2eproto_getter, &descriptor_table_injective_2fwasmx_2fv1_2ftx_2eproto_once,
      file_level_metadata_injective_2fwasmx_2fv1_2ftx_2eproto[7]);
}
// ===================================================================

class MsgUpdateParams::_Internal {
 public:
  using HasBits = decltype(std::declval<MsgUpdateParams>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MsgUpdateParams, _impl_._has_bits_);
  static const ::injective::wasmx::v1::Params& params(const MsgUpdateParams* msg);
  static void set_has_params(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::injective::wasmx::v1::Params&
MsgUpdateParams::_Internal::params(const MsgUpdateParams* msg) {
  return *msg->_impl_.params_;
}
void MsgUpdateParams::clear_params() {
  if (_impl_.params_ != nullptr) _impl_.params_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
MsgUpdateParams::MsgUpdateParams(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.wasmx.v1.MsgUpdateParams)
}
MsgUpdateParams::MsgUpdateParams(const MsgUpdateParams& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgUpdateParams* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.authority_) {}

    , decltype(_impl_.params_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.authority_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.authority_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_authority().empty()) {
    _this->_impl_.authority_.Set(from._internal_authority(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.params_ = new ::injective::wasmx::v1::Params(*from._impl_.params_);
  }
  // @@protoc_insertion_point(copy_constructor:injective.wasmx.v1.MsgUpdateParams)
}

inline void MsgUpdateParams::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.authority_) {}

    , decltype(_impl_.params_){nullptr}
  };
  _impl_.authority_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.authority_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgUpdateParams::~MsgUpdateParams() {
  // @@protoc_insertion_point(destructor:injective.wasmx.v1.MsgUpdateParams)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgUpdateParams::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.authority_.Destroy();
  if (this != internal_default_instance()) delete _impl_.params_;
}

void MsgUpdateParams::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgUpdateParams::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.wasmx.v1.MsgUpdateParams)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.authority_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.params_ != nullptr);
    _impl_.params_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgUpdateParams::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_authority();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.wasmx.v1.MsgUpdateParams.authority"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .injective.wasmx.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgUpdateParams::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.wasmx.v1.MsgUpdateParams)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_authority().empty()) {
    const std::string& _s = this->_internal_authority();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.wasmx.v1.MsgUpdateParams.authority");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .injective.wasmx.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.wasmx.v1.MsgUpdateParams)
  return target;
}

::size_t MsgUpdateParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.wasmx.v1.MsgUpdateParams)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_authority().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_authority());
  }

  // .injective.wasmx.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgUpdateParams::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgUpdateParams::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgUpdateParams::GetClassData() const { return &_class_data_; }


void MsgUpdateParams::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgUpdateParams*>(&to_msg);
  auto& from = static_cast<const MsgUpdateParams&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.wasmx.v1.MsgUpdateParams)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_authority().empty()) {
    _this->_internal_set_authority(from._internal_authority());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_params()->::injective::wasmx::v1::Params::MergeFrom(
        from._internal_params());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgUpdateParams::CopyFrom(const MsgUpdateParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.wasmx.v1.MsgUpdateParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgUpdateParams::IsInitialized() const {
  return true;
}

void MsgUpdateParams::InternalSwap(MsgUpdateParams* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.authority_, lhs_arena,
                                       &other->_impl_.authority_, rhs_arena);
  swap(_impl_.params_, other->_impl_.params_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgUpdateParams::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fwasmx_2fv1_2ftx_2eproto_getter, &descriptor_table_injective_2fwasmx_2fv1_2ftx_2eproto_once,
      file_level_metadata_injective_2fwasmx_2fv1_2ftx_2eproto[8]);
}
// ===================================================================

class MsgUpdateParamsResponse::_Internal {
 public:
};

MsgUpdateParamsResponse::MsgUpdateParamsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.wasmx.v1.MsgUpdateParamsResponse)
}
MsgUpdateParamsResponse::MsgUpdateParamsResponse(const MsgUpdateParamsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgUpdateParamsResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.wasmx.v1.MsgUpdateParamsResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgUpdateParamsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgUpdateParamsResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgUpdateParamsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fwasmx_2fv1_2ftx_2eproto_getter, &descriptor_table_injective_2fwasmx_2fv1_2ftx_2eproto_once,
      file_level_metadata_injective_2fwasmx_2fv1_2ftx_2eproto[9]);
}
// ===================================================================

class MsgRegisterContract::_Internal {
 public:
  using HasBits = decltype(std::declval<MsgRegisterContract>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MsgRegisterContract, _impl_._has_bits_);
  static const ::injective::wasmx::v1::ContractRegistrationRequest& contract_registration_request(const MsgRegisterContract* msg);
  static void set_has_contract_registration_request(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::injective::wasmx::v1::ContractRegistrationRequest&
MsgRegisterContract::_Internal::contract_registration_request(const MsgRegisterContract* msg) {
  return *msg->_impl_.contract_registration_request_;
}
void MsgRegisterContract::clear_contract_registration_request() {
  if (_impl_.contract_registration_request_ != nullptr) _impl_.contract_registration_request_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
MsgRegisterContract::MsgRegisterContract(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.wasmx.v1.MsgRegisterContract)
}
MsgRegisterContract::MsgRegisterContract(const MsgRegisterContract& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgRegisterContract* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.sender_) {}

    , decltype(_impl_.contract_registration_request_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sender().empty()) {
    _this->_impl_.sender_.Set(from._internal_sender(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.contract_registration_request_ = new ::injective::wasmx::v1::ContractRegistrationRequest(*from._impl_.contract_registration_request_);
  }
  // @@protoc_insertion_point(copy_constructor:injective.wasmx.v1.MsgRegisterContract)
}

inline void MsgRegisterContract::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.sender_) {}

    , decltype(_impl_.contract_registration_request_){nullptr}
  };
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgRegisterContract::~MsgRegisterContract() {
  // @@protoc_insertion_point(destructor:injective.wasmx.v1.MsgRegisterContract)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgRegisterContract::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.sender_.Destroy();
  if (this != internal_default_instance()) delete _impl_.contract_registration_request_;
}

void MsgRegisterContract::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgRegisterContract::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.wasmx.v1.MsgRegisterContract)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sender_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.contract_registration_request_ != nullptr);
    _impl_.contract_registration_request_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgRegisterContract::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string sender = 1 [json_name = "sender"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_sender();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.wasmx.v1.MsgRegisterContract.sender"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .injective.wasmx.v1.ContractRegistrationRequest contract_registration_request = 2 [json_name = "contractRegistrationRequest", (.gogoproto.nullable) = false];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_contract_registration_request(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgRegisterContract::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.wasmx.v1.MsgRegisterContract)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string sender = 1 [json_name = "sender"];
  if (!this->_internal_sender().empty()) {
    const std::string& _s = this->_internal_sender();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.wasmx.v1.MsgRegisterContract.sender");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .injective.wasmx.v1.ContractRegistrationRequest contract_registration_request = 2 [json_name = "contractRegistrationRequest", (.gogoproto.nullable) = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::contract_registration_request(this),
        _Internal::contract_registration_request(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.wasmx.v1.MsgRegisterContract)
  return target;
}

::size_t MsgRegisterContract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.wasmx.v1.MsgRegisterContract)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string sender = 1 [json_name = "sender"];
  if (!this->_internal_sender().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_sender());
  }

  // .injective.wasmx.v1.ContractRegistrationRequest contract_registration_request = 2 [json_name = "contractRegistrationRequest", (.gogoproto.nullable) = false];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.contract_registration_request_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgRegisterContract::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgRegisterContract::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgRegisterContract::GetClassData() const { return &_class_data_; }


void MsgRegisterContract::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgRegisterContract*>(&to_msg);
  auto& from = static_cast<const MsgRegisterContract&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.wasmx.v1.MsgRegisterContract)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sender().empty()) {
    _this->_internal_set_sender(from._internal_sender());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_contract_registration_request()->::injective::wasmx::v1::ContractRegistrationRequest::MergeFrom(
        from._internal_contract_registration_request());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgRegisterContract::CopyFrom(const MsgRegisterContract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.wasmx.v1.MsgRegisterContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgRegisterContract::IsInitialized() const {
  return true;
}

void MsgRegisterContract::InternalSwap(MsgRegisterContract* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_, lhs_arena,
                                       &other->_impl_.sender_, rhs_arena);
  swap(_impl_.contract_registration_request_, other->_impl_.contract_registration_request_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgRegisterContract::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fwasmx_2fv1_2ftx_2eproto_getter, &descriptor_table_injective_2fwasmx_2fv1_2ftx_2eproto_once,
      file_level_metadata_injective_2fwasmx_2fv1_2ftx_2eproto[10]);
}
// ===================================================================

class MsgRegisterContractResponse::_Internal {
 public:
};

MsgRegisterContractResponse::MsgRegisterContractResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.wasmx.v1.MsgRegisterContractResponse)
}
MsgRegisterContractResponse::MsgRegisterContractResponse(const MsgRegisterContractResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgRegisterContractResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.wasmx.v1.MsgRegisterContractResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgRegisterContractResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgRegisterContractResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgRegisterContractResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fwasmx_2fv1_2ftx_2eproto_getter, &descriptor_table_injective_2fwasmx_2fv1_2ftx_2eproto_once,
      file_level_metadata_injective_2fwasmx_2fv1_2ftx_2eproto[11]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace wasmx
}  // namespace injective
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::injective::wasmx::v1::MsgExecuteContractCompat*
Arena::CreateMaybeMessage< ::injective::wasmx::v1::MsgExecuteContractCompat >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::wasmx::v1::MsgExecuteContractCompat >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::wasmx::v1::MsgExecuteContractCompatResponse*
Arena::CreateMaybeMessage< ::injective::wasmx::v1::MsgExecuteContractCompatResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::wasmx::v1::MsgExecuteContractCompatResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::wasmx::v1::MsgUpdateContract*
Arena::CreateMaybeMessage< ::injective::wasmx::v1::MsgUpdateContract >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::wasmx::v1::MsgUpdateContract >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::wasmx::v1::MsgUpdateContractResponse*
Arena::CreateMaybeMessage< ::injective::wasmx::v1::MsgUpdateContractResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::wasmx::v1::MsgUpdateContractResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::wasmx::v1::MsgActivateContract*
Arena::CreateMaybeMessage< ::injective::wasmx::v1::MsgActivateContract >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::wasmx::v1::MsgActivateContract >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::wasmx::v1::MsgActivateContractResponse*
Arena::CreateMaybeMessage< ::injective::wasmx::v1::MsgActivateContractResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::wasmx::v1::MsgActivateContractResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::wasmx::v1::MsgDeactivateContract*
Arena::CreateMaybeMessage< ::injective::wasmx::v1::MsgDeactivateContract >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::wasmx::v1::MsgDeactivateContract >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::wasmx::v1::MsgDeactivateContractResponse*
Arena::CreateMaybeMessage< ::injective::wasmx::v1::MsgDeactivateContractResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::wasmx::v1::MsgDeactivateContractResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::wasmx::v1::MsgUpdateParams*
Arena::CreateMaybeMessage< ::injective::wasmx::v1::MsgUpdateParams >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::wasmx::v1::MsgUpdateParams >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::wasmx::v1::MsgUpdateParamsResponse*
Arena::CreateMaybeMessage< ::injective::wasmx::v1::MsgUpdateParamsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::wasmx::v1::MsgUpdateParamsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::wasmx::v1::MsgRegisterContract*
Arena::CreateMaybeMessage< ::injective::wasmx::v1::MsgRegisterContract >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::wasmx::v1::MsgRegisterContract >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::wasmx::v1::MsgRegisterContractResponse*
Arena::CreateMaybeMessage< ::injective::wasmx::v1::MsgRegisterContractResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::wasmx::v1::MsgRegisterContractResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
