// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: injective/wasmx/v1/query.proto

#include "injective/wasmx/v1/query.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace injective {
namespace wasmx {
namespace v1 {
template <typename>
PROTOBUF_CONSTEXPR QueryWasmxParamsRequest::QueryWasmxParamsRequest(
    ::_pbi::ConstantInitialized) {}
struct QueryWasmxParamsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryWasmxParamsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryWasmxParamsRequestDefaultTypeInternal() {}
  union {
    QueryWasmxParamsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryWasmxParamsRequestDefaultTypeInternal _QueryWasmxParamsRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryWasmxParamsResponse::QueryWasmxParamsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.params_)*/nullptr} {}
struct QueryWasmxParamsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryWasmxParamsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryWasmxParamsResponseDefaultTypeInternal() {}
  union {
    QueryWasmxParamsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryWasmxParamsResponseDefaultTypeInternal _QueryWasmxParamsResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryModuleStateRequest::QueryModuleStateRequest(
    ::_pbi::ConstantInitialized) {}
struct QueryModuleStateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryModuleStateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryModuleStateRequestDefaultTypeInternal() {}
  union {
    QueryModuleStateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryModuleStateRequestDefaultTypeInternal _QueryModuleStateRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryModuleStateResponse::QueryModuleStateResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.state_)*/nullptr} {}
struct QueryModuleStateResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryModuleStateResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryModuleStateResponseDefaultTypeInternal() {}
  union {
    QueryModuleStateResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryModuleStateResponseDefaultTypeInternal _QueryModuleStateResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryContractRegistrationInfoRequest::QueryContractRegistrationInfoRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.contract_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryContractRegistrationInfoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryContractRegistrationInfoRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryContractRegistrationInfoRequestDefaultTypeInternal() {}
  union {
    QueryContractRegistrationInfoRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryContractRegistrationInfoRequestDefaultTypeInternal _QueryContractRegistrationInfoRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryContractRegistrationInfoResponse::QueryContractRegistrationInfoResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.contract_)*/nullptr} {}
struct QueryContractRegistrationInfoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryContractRegistrationInfoResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryContractRegistrationInfoResponseDefaultTypeInternal() {}
  union {
    QueryContractRegistrationInfoResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryContractRegistrationInfoResponseDefaultTypeInternal _QueryContractRegistrationInfoResponse_default_instance_;
}  // namespace v1
}  // namespace wasmx
}  // namespace injective
static ::_pb::Metadata file_level_metadata_injective_2fwasmx_2fv1_2fquery_2eproto[6];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_injective_2fwasmx_2fv1_2fquery_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_injective_2fwasmx_2fv1_2fquery_2eproto = nullptr;
const ::uint32_t TableStruct_injective_2fwasmx_2fv1_2fquery_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::wasmx::v1::QueryWasmxParamsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::wasmx::v1::QueryWasmxParamsResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::injective::wasmx::v1::QueryWasmxParamsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::wasmx::v1::QueryWasmxParamsResponse, _impl_.params_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::wasmx::v1::QueryModuleStateRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::wasmx::v1::QueryModuleStateResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::injective::wasmx::v1::QueryModuleStateResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::wasmx::v1::QueryModuleStateResponse, _impl_.state_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::wasmx::v1::QueryContractRegistrationInfoRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::wasmx::v1::QueryContractRegistrationInfoRequest, _impl_.contract_address_),
    PROTOBUF_FIELD_OFFSET(::injective::wasmx::v1::QueryContractRegistrationInfoResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::injective::wasmx::v1::QueryContractRegistrationInfoResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::wasmx::v1::QueryContractRegistrationInfoResponse, _impl_.contract_),
    0,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::injective::wasmx::v1::QueryWasmxParamsRequest)},
        { 8, 17, -1, sizeof(::injective::wasmx::v1::QueryWasmxParamsResponse)},
        { 18, -1, -1, sizeof(::injective::wasmx::v1::QueryModuleStateRequest)},
        { 26, 35, -1, sizeof(::injective::wasmx::v1::QueryModuleStateResponse)},
        { 36, -1, -1, sizeof(::injective::wasmx::v1::QueryContractRegistrationInfoRequest)},
        { 45, 54, -1, sizeof(::injective::wasmx::v1::QueryContractRegistrationInfoResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::injective::wasmx::v1::_QueryWasmxParamsRequest_default_instance_._instance,
    &::injective::wasmx::v1::_QueryWasmxParamsResponse_default_instance_._instance,
    &::injective::wasmx::v1::_QueryModuleStateRequest_default_instance_._instance,
    &::injective::wasmx::v1::_QueryModuleStateResponse_default_instance_._instance,
    &::injective::wasmx::v1::_QueryContractRegistrationInfoRequest_default_instance_._instance,
    &::injective::wasmx::v1::_QueryContractRegistrationInfoResponse_default_instance_._instance,
};
const char descriptor_table_protodef_injective_2fwasmx_2fv1_2fquery_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\036injective/wasmx/v1/query.proto\022\022inject"
    "ive.wasmx.v1\032\034google/api/annotations.pro"
    "to\032\036injective/wasmx/v1/wasmx.proto\032 inje"
    "ctive/wasmx/v1/genesis.proto\032\024gogoproto/"
    "gogo.proto\"\031\n\027QueryWasmxParamsRequest\"T\n"
    "\030QueryWasmxParamsResponse\0228\n\006params\030\001 \001("
    "\0132\032.injective.wasmx.v1.ParamsB\004\310\336\037\000R\006par"
    "ams\"\031\n\027QueryModuleStateRequest\"R\n\030QueryM"
    "oduleStateResponse\0226\n\005state\030\001 \001(\0132 .inje"
    "ctive.wasmx.v1.GenesisStateR\005state\"Q\n$Qu"
    "eryContractRegistrationInfoRequest\022)\n\020co"
    "ntract_address\030\001 \001(\tR\017contractAddress\"k\n"
    "%QueryContractRegistrationInfoResponse\022B"
    "\n\010contract\030\001 \001(\0132&.injective.wasmx.v1.Re"
    "gisteredContractR\010contract2\204\004\n\005Query\022\214\001\n"
    "\013WasmxParams\022+.injective.wasmx.v1.QueryW"
    "asmxParamsRequest\032,.injective.wasmx.v1.Q"
    "ueryWasmxParamsResponse\"\"\202\323\344\223\002\034\022\032/inject"
    "ive/wasmx/v1/params\022\321\001\n\030ContractRegistra"
    "tionInfo\0228.injective.wasmx.v1.QueryContr"
    "actRegistrationInfoRequest\0329.injective.w"
    "asmx.v1.QueryContractRegistrationInfoRes"
    "ponse\"@\202\323\344\223\002:\0228/injective/wasmx/v1/regis"
    "tration_info/{contract_address}\022\227\001\n\020Wasm"
    "xModuleState\022+.injective.wasmx.v1.QueryM"
    "oduleStateRequest\032,.injective.wasmx.v1.Q"
    "ueryModuleStateResponse\"(\202\323\344\223\002\"\022 /inject"
    "ive/wasmx/v1/module_stateB\333\001\n\026com.inject"
    "ive.wasmx.v1B\nQueryProtoP\001ZKgithub.com/I"
    "njectiveLabs/injective-core/injective-ch"
    "ain/modules/wasmx/types\242\002\003IWX\252\002\022Injectiv"
    "e.Wasmx.V1\312\002\022Injective\\Wasmx\\V1\342\002\036Inject"
    "ive\\Wasmx\\V1\\GPBMetadata\352\002\024Injective::Wa"
    "smx::V1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_injective_2fwasmx_2fv1_2fquery_2eproto_deps[4] =
    {
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_google_2fapi_2fannotations_2eproto,
        &::descriptor_table_injective_2fwasmx_2fv1_2fgenesis_2eproto,
        &::descriptor_table_injective_2fwasmx_2fv1_2fwasmx_2eproto,
};
static ::absl::once_flag descriptor_table_injective_2fwasmx_2fv1_2fquery_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_injective_2fwasmx_2fv1_2fquery_2eproto = {
    false,
    false,
    1335,
    descriptor_table_protodef_injective_2fwasmx_2fv1_2fquery_2eproto,
    "injective/wasmx/v1/query.proto",
    &descriptor_table_injective_2fwasmx_2fv1_2fquery_2eproto_once,
    descriptor_table_injective_2fwasmx_2fv1_2fquery_2eproto_deps,
    4,
    6,
    schemas,
    file_default_instances,
    TableStruct_injective_2fwasmx_2fv1_2fquery_2eproto::offsets,
    file_level_metadata_injective_2fwasmx_2fv1_2fquery_2eproto,
    file_level_enum_descriptors_injective_2fwasmx_2fv1_2fquery_2eproto,
    file_level_service_descriptors_injective_2fwasmx_2fv1_2fquery_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_injective_2fwasmx_2fv1_2fquery_2eproto_getter() {
  return &descriptor_table_injective_2fwasmx_2fv1_2fquery_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_injective_2fwasmx_2fv1_2fquery_2eproto(&descriptor_table_injective_2fwasmx_2fv1_2fquery_2eproto);
namespace injective {
namespace wasmx {
namespace v1 {
// ===================================================================

class QueryWasmxParamsRequest::_Internal {
 public:
};

QueryWasmxParamsRequest::QueryWasmxParamsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.wasmx.v1.QueryWasmxParamsRequest)
}
QueryWasmxParamsRequest::QueryWasmxParamsRequest(const QueryWasmxParamsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  QueryWasmxParamsRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.wasmx.v1.QueryWasmxParamsRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryWasmxParamsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryWasmxParamsRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata QueryWasmxParamsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fwasmx_2fv1_2fquery_2eproto_getter, &descriptor_table_injective_2fwasmx_2fv1_2fquery_2eproto_once,
      file_level_metadata_injective_2fwasmx_2fv1_2fquery_2eproto[0]);
}
// ===================================================================

class QueryWasmxParamsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryWasmxParamsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryWasmxParamsResponse, _impl_._has_bits_);
  static const ::injective::wasmx::v1::Params& params(const QueryWasmxParamsResponse* msg);
  static void set_has_params(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::injective::wasmx::v1::Params&
QueryWasmxParamsResponse::_Internal::params(const QueryWasmxParamsResponse* msg) {
  return *msg->_impl_.params_;
}
void QueryWasmxParamsResponse::clear_params() {
  if (_impl_.params_ != nullptr) _impl_.params_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryWasmxParamsResponse::QueryWasmxParamsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.wasmx.v1.QueryWasmxParamsResponse)
}
QueryWasmxParamsResponse::QueryWasmxParamsResponse(const QueryWasmxParamsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryWasmxParamsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.params_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.params_ = new ::injective::wasmx::v1::Params(*from._impl_.params_);
  }
  // @@protoc_insertion_point(copy_constructor:injective.wasmx.v1.QueryWasmxParamsResponse)
}

inline void QueryWasmxParamsResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.params_){nullptr}
  };
}

QueryWasmxParamsResponse::~QueryWasmxParamsResponse() {
  // @@protoc_insertion_point(destructor:injective.wasmx.v1.QueryWasmxParamsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryWasmxParamsResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.params_;
}

void QueryWasmxParamsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryWasmxParamsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.wasmx.v1.QueryWasmxParamsResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.params_ != nullptr);
    _impl_.params_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryWasmxParamsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .injective.wasmx.v1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryWasmxParamsResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.wasmx.v1.QueryWasmxParamsResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .injective.wasmx.v1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.wasmx.v1.QueryWasmxParamsResponse)
  return target;
}

::size_t QueryWasmxParamsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.wasmx.v1.QueryWasmxParamsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .injective.wasmx.v1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryWasmxParamsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryWasmxParamsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryWasmxParamsResponse::GetClassData() const { return &_class_data_; }


void QueryWasmxParamsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryWasmxParamsResponse*>(&to_msg);
  auto& from = static_cast<const QueryWasmxParamsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.wasmx.v1.QueryWasmxParamsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_params()->::injective::wasmx::v1::Params::MergeFrom(
        from._internal_params());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryWasmxParamsResponse::CopyFrom(const QueryWasmxParamsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.wasmx.v1.QueryWasmxParamsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryWasmxParamsResponse::IsInitialized() const {
  return true;
}

void QueryWasmxParamsResponse::InternalSwap(QueryWasmxParamsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.params_, other->_impl_.params_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryWasmxParamsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fwasmx_2fv1_2fquery_2eproto_getter, &descriptor_table_injective_2fwasmx_2fv1_2fquery_2eproto_once,
      file_level_metadata_injective_2fwasmx_2fv1_2fquery_2eproto[1]);
}
// ===================================================================

class QueryModuleStateRequest::_Internal {
 public:
};

QueryModuleStateRequest::QueryModuleStateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.wasmx.v1.QueryModuleStateRequest)
}
QueryModuleStateRequest::QueryModuleStateRequest(const QueryModuleStateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  QueryModuleStateRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.wasmx.v1.QueryModuleStateRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryModuleStateRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryModuleStateRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata QueryModuleStateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fwasmx_2fv1_2fquery_2eproto_getter, &descriptor_table_injective_2fwasmx_2fv1_2fquery_2eproto_once,
      file_level_metadata_injective_2fwasmx_2fv1_2fquery_2eproto[2]);
}
// ===================================================================

class QueryModuleStateResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryModuleStateResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryModuleStateResponse, _impl_._has_bits_);
  static const ::injective::wasmx::v1::GenesisState& state(const QueryModuleStateResponse* msg);
  static void set_has_state(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::injective::wasmx::v1::GenesisState&
QueryModuleStateResponse::_Internal::state(const QueryModuleStateResponse* msg) {
  return *msg->_impl_.state_;
}
void QueryModuleStateResponse::clear_state() {
  if (_impl_.state_ != nullptr) _impl_.state_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryModuleStateResponse::QueryModuleStateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.wasmx.v1.QueryModuleStateResponse)
}
QueryModuleStateResponse::QueryModuleStateResponse(const QueryModuleStateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryModuleStateResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.state_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.state_ = new ::injective::wasmx::v1::GenesisState(*from._impl_.state_);
  }
  // @@protoc_insertion_point(copy_constructor:injective.wasmx.v1.QueryModuleStateResponse)
}

inline void QueryModuleStateResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.state_){nullptr}
  };
}

QueryModuleStateResponse::~QueryModuleStateResponse() {
  // @@protoc_insertion_point(destructor:injective.wasmx.v1.QueryModuleStateResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryModuleStateResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.state_;
}

void QueryModuleStateResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryModuleStateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.wasmx.v1.QueryModuleStateResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.state_ != nullptr);
    _impl_.state_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryModuleStateResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .injective.wasmx.v1.GenesisState state = 1 [json_name = "state"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_state(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryModuleStateResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.wasmx.v1.QueryModuleStateResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .injective.wasmx.v1.GenesisState state = 1 [json_name = "state"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::state(this),
        _Internal::state(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.wasmx.v1.QueryModuleStateResponse)
  return target;
}

::size_t QueryModuleStateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.wasmx.v1.QueryModuleStateResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .injective.wasmx.v1.GenesisState state = 1 [json_name = "state"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.state_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryModuleStateResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryModuleStateResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryModuleStateResponse::GetClassData() const { return &_class_data_; }


void QueryModuleStateResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryModuleStateResponse*>(&to_msg);
  auto& from = static_cast<const QueryModuleStateResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.wasmx.v1.QueryModuleStateResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_state()->::injective::wasmx::v1::GenesisState::MergeFrom(
        from._internal_state());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryModuleStateResponse::CopyFrom(const QueryModuleStateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.wasmx.v1.QueryModuleStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryModuleStateResponse::IsInitialized() const {
  return true;
}

void QueryModuleStateResponse::InternalSwap(QueryModuleStateResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.state_, other->_impl_.state_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryModuleStateResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fwasmx_2fv1_2fquery_2eproto_getter, &descriptor_table_injective_2fwasmx_2fv1_2fquery_2eproto_once,
      file_level_metadata_injective_2fwasmx_2fv1_2fquery_2eproto[3]);
}
// ===================================================================

class QueryContractRegistrationInfoRequest::_Internal {
 public:
};

QueryContractRegistrationInfoRequest::QueryContractRegistrationInfoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.wasmx.v1.QueryContractRegistrationInfoRequest)
}
QueryContractRegistrationInfoRequest::QueryContractRegistrationInfoRequest(const QueryContractRegistrationInfoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryContractRegistrationInfoRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.contract_address_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.contract_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.contract_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_contract_address().empty()) {
    _this->_impl_.contract_address_.Set(from._internal_contract_address(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:injective.wasmx.v1.QueryContractRegistrationInfoRequest)
}

inline void QueryContractRegistrationInfoRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.contract_address_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.contract_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.contract_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryContractRegistrationInfoRequest::~QueryContractRegistrationInfoRequest() {
  // @@protoc_insertion_point(destructor:injective.wasmx.v1.QueryContractRegistrationInfoRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryContractRegistrationInfoRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.contract_address_.Destroy();
}

void QueryContractRegistrationInfoRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryContractRegistrationInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.wasmx.v1.QueryContractRegistrationInfoRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.contract_address_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryContractRegistrationInfoRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string contract_address = 1 [json_name = "contractAddress"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_contract_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.wasmx.v1.QueryContractRegistrationInfoRequest.contract_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryContractRegistrationInfoRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.wasmx.v1.QueryContractRegistrationInfoRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string contract_address = 1 [json_name = "contractAddress"];
  if (!this->_internal_contract_address().empty()) {
    const std::string& _s = this->_internal_contract_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.wasmx.v1.QueryContractRegistrationInfoRequest.contract_address");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.wasmx.v1.QueryContractRegistrationInfoRequest)
  return target;
}

::size_t QueryContractRegistrationInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.wasmx.v1.QueryContractRegistrationInfoRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string contract_address = 1 [json_name = "contractAddress"];
  if (!this->_internal_contract_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_contract_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryContractRegistrationInfoRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryContractRegistrationInfoRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryContractRegistrationInfoRequest::GetClassData() const { return &_class_data_; }


void QueryContractRegistrationInfoRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryContractRegistrationInfoRequest*>(&to_msg);
  auto& from = static_cast<const QueryContractRegistrationInfoRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.wasmx.v1.QueryContractRegistrationInfoRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_contract_address().empty()) {
    _this->_internal_set_contract_address(from._internal_contract_address());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryContractRegistrationInfoRequest::CopyFrom(const QueryContractRegistrationInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.wasmx.v1.QueryContractRegistrationInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryContractRegistrationInfoRequest::IsInitialized() const {
  return true;
}

void QueryContractRegistrationInfoRequest::InternalSwap(QueryContractRegistrationInfoRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.contract_address_, lhs_arena,
                                       &other->_impl_.contract_address_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryContractRegistrationInfoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fwasmx_2fv1_2fquery_2eproto_getter, &descriptor_table_injective_2fwasmx_2fv1_2fquery_2eproto_once,
      file_level_metadata_injective_2fwasmx_2fv1_2fquery_2eproto[4]);
}
// ===================================================================

class QueryContractRegistrationInfoResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryContractRegistrationInfoResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryContractRegistrationInfoResponse, _impl_._has_bits_);
  static const ::injective::wasmx::v1::RegisteredContract& contract(const QueryContractRegistrationInfoResponse* msg);
  static void set_has_contract(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::injective::wasmx::v1::RegisteredContract&
QueryContractRegistrationInfoResponse::_Internal::contract(const QueryContractRegistrationInfoResponse* msg) {
  return *msg->_impl_.contract_;
}
void QueryContractRegistrationInfoResponse::clear_contract() {
  if (_impl_.contract_ != nullptr) _impl_.contract_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryContractRegistrationInfoResponse::QueryContractRegistrationInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.wasmx.v1.QueryContractRegistrationInfoResponse)
}
QueryContractRegistrationInfoResponse::QueryContractRegistrationInfoResponse(const QueryContractRegistrationInfoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryContractRegistrationInfoResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.contract_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.contract_ = new ::injective::wasmx::v1::RegisteredContract(*from._impl_.contract_);
  }
  // @@protoc_insertion_point(copy_constructor:injective.wasmx.v1.QueryContractRegistrationInfoResponse)
}

inline void QueryContractRegistrationInfoResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.contract_){nullptr}
  };
}

QueryContractRegistrationInfoResponse::~QueryContractRegistrationInfoResponse() {
  // @@protoc_insertion_point(destructor:injective.wasmx.v1.QueryContractRegistrationInfoResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryContractRegistrationInfoResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.contract_;
}

void QueryContractRegistrationInfoResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryContractRegistrationInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.wasmx.v1.QueryContractRegistrationInfoResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.contract_ != nullptr);
    _impl_.contract_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryContractRegistrationInfoResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .injective.wasmx.v1.RegisteredContract contract = 1 [json_name = "contract"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_contract(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryContractRegistrationInfoResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.wasmx.v1.QueryContractRegistrationInfoResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .injective.wasmx.v1.RegisteredContract contract = 1 [json_name = "contract"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::contract(this),
        _Internal::contract(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.wasmx.v1.QueryContractRegistrationInfoResponse)
  return target;
}

::size_t QueryContractRegistrationInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.wasmx.v1.QueryContractRegistrationInfoResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .injective.wasmx.v1.RegisteredContract contract = 1 [json_name = "contract"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.contract_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryContractRegistrationInfoResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryContractRegistrationInfoResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryContractRegistrationInfoResponse::GetClassData() const { return &_class_data_; }


void QueryContractRegistrationInfoResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryContractRegistrationInfoResponse*>(&to_msg);
  auto& from = static_cast<const QueryContractRegistrationInfoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.wasmx.v1.QueryContractRegistrationInfoResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_contract()->::injective::wasmx::v1::RegisteredContract::MergeFrom(
        from._internal_contract());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryContractRegistrationInfoResponse::CopyFrom(const QueryContractRegistrationInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.wasmx.v1.QueryContractRegistrationInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryContractRegistrationInfoResponse::IsInitialized() const {
  return true;
}

void QueryContractRegistrationInfoResponse::InternalSwap(QueryContractRegistrationInfoResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.contract_, other->_impl_.contract_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryContractRegistrationInfoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fwasmx_2fv1_2fquery_2eproto_getter, &descriptor_table_injective_2fwasmx_2fv1_2fquery_2eproto_once,
      file_level_metadata_injective_2fwasmx_2fv1_2fquery_2eproto[5]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace wasmx
}  // namespace injective
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::injective::wasmx::v1::QueryWasmxParamsRequest*
Arena::CreateMaybeMessage< ::injective::wasmx::v1::QueryWasmxParamsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::wasmx::v1::QueryWasmxParamsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::wasmx::v1::QueryWasmxParamsResponse*
Arena::CreateMaybeMessage< ::injective::wasmx::v1::QueryWasmxParamsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::wasmx::v1::QueryWasmxParamsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::wasmx::v1::QueryModuleStateRequest*
Arena::CreateMaybeMessage< ::injective::wasmx::v1::QueryModuleStateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::wasmx::v1::QueryModuleStateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::wasmx::v1::QueryModuleStateResponse*
Arena::CreateMaybeMessage< ::injective::wasmx::v1::QueryModuleStateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::wasmx::v1::QueryModuleStateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::wasmx::v1::QueryContractRegistrationInfoRequest*
Arena::CreateMaybeMessage< ::injective::wasmx::v1::QueryContractRegistrationInfoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::wasmx::v1::QueryContractRegistrationInfoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::wasmx::v1::QueryContractRegistrationInfoResponse*
Arena::CreateMaybeMessage< ::injective::wasmx::v1::QueryContractRegistrationInfoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::wasmx::v1::QueryContractRegistrationInfoResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
