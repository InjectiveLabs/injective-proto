// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: injective/auction/v1beta1/query.proto

#include "injective/auction/v1beta1/query.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace injective {
namespace auction {
namespace v1beta1 {
template <typename>
PROTOBUF_CONSTEXPR QueryAuctionParamsRequest::QueryAuctionParamsRequest(
    ::_pbi::ConstantInitialized) {}
struct QueryAuctionParamsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryAuctionParamsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryAuctionParamsRequestDefaultTypeInternal() {}
  union {
    QueryAuctionParamsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryAuctionParamsRequestDefaultTypeInternal _QueryAuctionParamsRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryAuctionParamsResponse::QueryAuctionParamsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.params_)*/nullptr} {}
struct QueryAuctionParamsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryAuctionParamsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryAuctionParamsResponseDefaultTypeInternal() {}
  union {
    QueryAuctionParamsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryAuctionParamsResponseDefaultTypeInternal _QueryAuctionParamsResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryCurrentAuctionBasketRequest::QueryCurrentAuctionBasketRequest(
    ::_pbi::ConstantInitialized) {}
struct QueryCurrentAuctionBasketRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryCurrentAuctionBasketRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryCurrentAuctionBasketRequestDefaultTypeInternal() {}
  union {
    QueryCurrentAuctionBasketRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryCurrentAuctionBasketRequestDefaultTypeInternal _QueryCurrentAuctionBasketRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryCurrentAuctionBasketResponse::QueryCurrentAuctionBasketResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.amount_)*/{}
  , /*decltype(_impl_.highestbidder_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.highestbidamount_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.auctionround_)*/ ::uint64_t{0u}

  , /*decltype(_impl_.auctionclosingtime_)*/ ::int64_t{0}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryCurrentAuctionBasketResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryCurrentAuctionBasketResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryCurrentAuctionBasketResponseDefaultTypeInternal() {}
  union {
    QueryCurrentAuctionBasketResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryCurrentAuctionBasketResponseDefaultTypeInternal _QueryCurrentAuctionBasketResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryModuleStateRequest::QueryModuleStateRequest(
    ::_pbi::ConstantInitialized) {}
struct QueryModuleStateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryModuleStateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryModuleStateRequestDefaultTypeInternal() {}
  union {
    QueryModuleStateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryModuleStateRequestDefaultTypeInternal _QueryModuleStateRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryModuleStateResponse::QueryModuleStateResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.state_)*/nullptr} {}
struct QueryModuleStateResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryModuleStateResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryModuleStateResponseDefaultTypeInternal() {}
  union {
    QueryModuleStateResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryModuleStateResponseDefaultTypeInternal _QueryModuleStateResponse_default_instance_;
}  // namespace v1beta1
}  // namespace auction
}  // namespace injective
static ::_pb::Metadata file_level_metadata_injective_2fauction_2fv1beta1_2fquery_2eproto[6];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_injective_2fauction_2fv1beta1_2fquery_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_injective_2fauction_2fv1beta1_2fquery_2eproto = nullptr;
const ::uint32_t TableStruct_injective_2fauction_2fv1beta1_2fquery_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::auction::v1beta1::QueryAuctionParamsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::auction::v1beta1::QueryAuctionParamsResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::injective::auction::v1beta1::QueryAuctionParamsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::auction::v1beta1::QueryAuctionParamsResponse, _impl_.params_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::auction::v1beta1::QueryCurrentAuctionBasketRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::auction::v1beta1::QueryCurrentAuctionBasketResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::auction::v1beta1::QueryCurrentAuctionBasketResponse, _impl_.amount_),
    PROTOBUF_FIELD_OFFSET(::injective::auction::v1beta1::QueryCurrentAuctionBasketResponse, _impl_.auctionround_),
    PROTOBUF_FIELD_OFFSET(::injective::auction::v1beta1::QueryCurrentAuctionBasketResponse, _impl_.auctionclosingtime_),
    PROTOBUF_FIELD_OFFSET(::injective::auction::v1beta1::QueryCurrentAuctionBasketResponse, _impl_.highestbidder_),
    PROTOBUF_FIELD_OFFSET(::injective::auction::v1beta1::QueryCurrentAuctionBasketResponse, _impl_.highestbidamount_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::auction::v1beta1::QueryModuleStateRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::auction::v1beta1::QueryModuleStateResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::injective::auction::v1beta1::QueryModuleStateResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::auction::v1beta1::QueryModuleStateResponse, _impl_.state_),
    0,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::injective::auction::v1beta1::QueryAuctionParamsRequest)},
        { 8, 17, -1, sizeof(::injective::auction::v1beta1::QueryAuctionParamsResponse)},
        { 18, -1, -1, sizeof(::injective::auction::v1beta1::QueryCurrentAuctionBasketRequest)},
        { 26, -1, -1, sizeof(::injective::auction::v1beta1::QueryCurrentAuctionBasketResponse)},
        { 39, -1, -1, sizeof(::injective::auction::v1beta1::QueryModuleStateRequest)},
        { 47, 56, -1, sizeof(::injective::auction::v1beta1::QueryModuleStateResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::injective::auction::v1beta1::_QueryAuctionParamsRequest_default_instance_._instance,
    &::injective::auction::v1beta1::_QueryAuctionParamsResponse_default_instance_._instance,
    &::injective::auction::v1beta1::_QueryCurrentAuctionBasketRequest_default_instance_._instance,
    &::injective::auction::v1beta1::_QueryCurrentAuctionBasketResponse_default_instance_._instance,
    &::injective::auction::v1beta1::_QueryModuleStateRequest_default_instance_._instance,
    &::injective::auction::v1beta1::_QueryModuleStateResponse_default_instance_._instance,
};
const char descriptor_table_protodef_injective_2fauction_2fv1beta1_2fquery_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n%injective/auction/v1beta1/query.proto\022"
    "\031injective.auction.v1beta1\032\034google/api/a"
    "nnotations.proto\032\'injective/auction/v1be"
    "ta1/auction.proto\032\'injective/auction/v1b"
    "eta1/genesis.proto\032\024gogoproto/gogo.proto"
    "\032\036cosmos/base/v1beta1/coin.proto\"\033\n\031Quer"
    "yAuctionParamsRequest\"]\n\032QueryAuctionPar"
    "amsResponse\022\?\n\006params\030\001 \001(\0132!.injective."
    "auction.v1beta1.ParamsB\004\310\336\037\000R\006params\"\"\n "
    "QueryCurrentAuctionBasketRequest\"\336\002\n!Que"
    "ryCurrentAuctionBasketResponse\022c\n\006amount"
    "\030\001 \003(\0132\031.cosmos.base.v1beta1.CoinB0\310\336\037\000\252"
    "\337\037(github.com/cosmos/cosmos-sdk/types.Co"
    "insR\006amount\022\"\n\014auctionRound\030\002 \001(\004R\014aucti"
    "onRound\022.\n\022auctionClosingTime\030\003 \001(\003R\022auc"
    "tionClosingTime\022$\n\rhighestBidder\030\004 \001(\tR\r"
    "highestBidder\022Z\n\020highestBidAmount\030\005 \001(\tB"
    ".\310\336\037\000\332\336\037&github.com/cosmos/cosmos-sdk/ty"
    "pes.IntR\020highestBidAmount\"\031\n\027QueryModule"
    "StateRequest\"Y\n\030QueryModuleStateResponse"
    "\022=\n\005state\030\001 \001(\0132\'.injective.auction.v1be"
    "ta1.GenesisStateR\005state2\241\004\n\005Query\022\247\001\n\rAu"
    "ctionParams\0224.injective.auction.v1beta1."
    "QueryAuctionParamsRequest\0325.injective.au"
    "ction.v1beta1.QueryAuctionParamsResponse"
    "\")\202\323\344\223\002#\022!/injective/auction/v1beta1/par"
    "ams\022\274\001\n\024CurrentAuctionBasket\022;.injective"
    ".auction.v1beta1.QueryCurrentAuctionBask"
    "etRequest\032<.injective.auction.v1beta1.Qu"
    "eryCurrentAuctionBasketResponse\")\202\323\344\223\002#\022"
    "!/injective/auction/v1beta1/basket\022\256\001\n\022A"
    "uctionModuleState\0222.injective.auction.v1"
    "beta1.QueryModuleStateRequest\0323.injectiv"
    "e.auction.v1beta1.QueryModuleStateRespon"
    "se\"/\202\323\344\223\002)\022\'/injective/auction/v1beta1/m"
    "odule_stateB\200\002\n\035com.injective.auction.v1"
    "beta1B\nQueryProtoP\001ZMgithub.com/Injectiv"
    "eLabs/injective-core/injective-chain/mod"
    "ules/auction/types\242\002\003IAX\252\002\031Injective.Auc"
    "tion.V1beta1\312\002\031Injective\\Auction\\V1beta1"
    "\342\002%Injective\\Auction\\V1beta1\\GPBMetadata"
    "\352\002\033Injective::Auction::V1beta1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_injective_2fauction_2fv1beta1_2fquery_2eproto_deps[5] =
    {
        &::descriptor_table_cosmos_2fbase_2fv1beta1_2fcoin_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_google_2fapi_2fannotations_2eproto,
        &::descriptor_table_injective_2fauction_2fv1beta1_2fauction_2eproto,
        &::descriptor_table_injective_2fauction_2fv1beta1_2fgenesis_2eproto,
};
static ::absl::once_flag descriptor_table_injective_2fauction_2fv1beta1_2fquery_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_injective_2fauction_2fv1beta1_2fquery_2eproto = {
    false,
    false,
    1678,
    descriptor_table_protodef_injective_2fauction_2fv1beta1_2fquery_2eproto,
    "injective/auction/v1beta1/query.proto",
    &descriptor_table_injective_2fauction_2fv1beta1_2fquery_2eproto_once,
    descriptor_table_injective_2fauction_2fv1beta1_2fquery_2eproto_deps,
    5,
    6,
    schemas,
    file_default_instances,
    TableStruct_injective_2fauction_2fv1beta1_2fquery_2eproto::offsets,
    file_level_metadata_injective_2fauction_2fv1beta1_2fquery_2eproto,
    file_level_enum_descriptors_injective_2fauction_2fv1beta1_2fquery_2eproto,
    file_level_service_descriptors_injective_2fauction_2fv1beta1_2fquery_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_injective_2fauction_2fv1beta1_2fquery_2eproto_getter() {
  return &descriptor_table_injective_2fauction_2fv1beta1_2fquery_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_injective_2fauction_2fv1beta1_2fquery_2eproto(&descriptor_table_injective_2fauction_2fv1beta1_2fquery_2eproto);
namespace injective {
namespace auction {
namespace v1beta1 {
// ===================================================================

class QueryAuctionParamsRequest::_Internal {
 public:
};

QueryAuctionParamsRequest::QueryAuctionParamsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.auction.v1beta1.QueryAuctionParamsRequest)
}
QueryAuctionParamsRequest::QueryAuctionParamsRequest(const QueryAuctionParamsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  QueryAuctionParamsRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.auction.v1beta1.QueryAuctionParamsRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryAuctionParamsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryAuctionParamsRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata QueryAuctionParamsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fauction_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_injective_2fauction_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_injective_2fauction_2fv1beta1_2fquery_2eproto[0]);
}
// ===================================================================

class QueryAuctionParamsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryAuctionParamsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryAuctionParamsResponse, _impl_._has_bits_);
  static const ::injective::auction::v1beta1::Params& params(const QueryAuctionParamsResponse* msg);
  static void set_has_params(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::injective::auction::v1beta1::Params&
QueryAuctionParamsResponse::_Internal::params(const QueryAuctionParamsResponse* msg) {
  return *msg->_impl_.params_;
}
void QueryAuctionParamsResponse::clear_params() {
  if (_impl_.params_ != nullptr) _impl_.params_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryAuctionParamsResponse::QueryAuctionParamsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.auction.v1beta1.QueryAuctionParamsResponse)
}
QueryAuctionParamsResponse::QueryAuctionParamsResponse(const QueryAuctionParamsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryAuctionParamsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.params_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.params_ = new ::injective::auction::v1beta1::Params(*from._impl_.params_);
  }
  // @@protoc_insertion_point(copy_constructor:injective.auction.v1beta1.QueryAuctionParamsResponse)
}

inline void QueryAuctionParamsResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.params_){nullptr}
  };
}

QueryAuctionParamsResponse::~QueryAuctionParamsResponse() {
  // @@protoc_insertion_point(destructor:injective.auction.v1beta1.QueryAuctionParamsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryAuctionParamsResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.params_;
}

void QueryAuctionParamsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryAuctionParamsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.auction.v1beta1.QueryAuctionParamsResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.params_ != nullptr);
    _impl_.params_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryAuctionParamsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .injective.auction.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryAuctionParamsResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.auction.v1beta1.QueryAuctionParamsResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .injective.auction.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.auction.v1beta1.QueryAuctionParamsResponse)
  return target;
}

::size_t QueryAuctionParamsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.auction.v1beta1.QueryAuctionParamsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .injective.auction.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryAuctionParamsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryAuctionParamsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryAuctionParamsResponse::GetClassData() const { return &_class_data_; }


void QueryAuctionParamsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryAuctionParamsResponse*>(&to_msg);
  auto& from = static_cast<const QueryAuctionParamsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.auction.v1beta1.QueryAuctionParamsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_params()->::injective::auction::v1beta1::Params::MergeFrom(
        from._internal_params());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryAuctionParamsResponse::CopyFrom(const QueryAuctionParamsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.auction.v1beta1.QueryAuctionParamsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryAuctionParamsResponse::IsInitialized() const {
  return true;
}

void QueryAuctionParamsResponse::InternalSwap(QueryAuctionParamsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.params_, other->_impl_.params_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryAuctionParamsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fauction_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_injective_2fauction_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_injective_2fauction_2fv1beta1_2fquery_2eproto[1]);
}
// ===================================================================

class QueryCurrentAuctionBasketRequest::_Internal {
 public:
};

QueryCurrentAuctionBasketRequest::QueryCurrentAuctionBasketRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.auction.v1beta1.QueryCurrentAuctionBasketRequest)
}
QueryCurrentAuctionBasketRequest::QueryCurrentAuctionBasketRequest(const QueryCurrentAuctionBasketRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  QueryCurrentAuctionBasketRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.auction.v1beta1.QueryCurrentAuctionBasketRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryCurrentAuctionBasketRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryCurrentAuctionBasketRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata QueryCurrentAuctionBasketRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fauction_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_injective_2fauction_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_injective_2fauction_2fv1beta1_2fquery_2eproto[2]);
}
// ===================================================================

class QueryCurrentAuctionBasketResponse::_Internal {
 public:
};

void QueryCurrentAuctionBasketResponse::clear_amount() {
  _internal_mutable_amount()->Clear();
}
QueryCurrentAuctionBasketResponse::QueryCurrentAuctionBasketResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.auction.v1beta1.QueryCurrentAuctionBasketResponse)
}
QueryCurrentAuctionBasketResponse::QueryCurrentAuctionBasketResponse(const QueryCurrentAuctionBasketResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryCurrentAuctionBasketResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.amount_){from._impl_.amount_}
    , decltype(_impl_.highestbidder_) {}

    , decltype(_impl_.highestbidamount_) {}

    , decltype(_impl_.auctionround_) {}

    , decltype(_impl_.auctionclosingtime_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.highestbidder_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.highestbidder_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_highestbidder().empty()) {
    _this->_impl_.highestbidder_.Set(from._internal_highestbidder(), _this->GetArenaForAllocation());
  }
  _impl_.highestbidamount_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.highestbidamount_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_highestbidamount().empty()) {
    _this->_impl_.highestbidamount_.Set(from._internal_highestbidamount(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.auctionround_, &from._impl_.auctionround_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.auctionclosingtime_) -
    reinterpret_cast<char*>(&_impl_.auctionround_)) + sizeof(_impl_.auctionclosingtime_));
  // @@protoc_insertion_point(copy_constructor:injective.auction.v1beta1.QueryCurrentAuctionBasketResponse)
}

inline void QueryCurrentAuctionBasketResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.amount_){arena}
    , decltype(_impl_.highestbidder_) {}

    , decltype(_impl_.highestbidamount_) {}

    , decltype(_impl_.auctionround_) { ::uint64_t{0u} }

    , decltype(_impl_.auctionclosingtime_) { ::int64_t{0} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.highestbidder_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.highestbidder_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.highestbidamount_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.highestbidamount_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryCurrentAuctionBasketResponse::~QueryCurrentAuctionBasketResponse() {
  // @@protoc_insertion_point(destructor:injective.auction.v1beta1.QueryCurrentAuctionBasketResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryCurrentAuctionBasketResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_amount()->~RepeatedPtrField();
  _impl_.highestbidder_.Destroy();
  _impl_.highestbidamount_.Destroy();
}

void QueryCurrentAuctionBasketResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryCurrentAuctionBasketResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.auction.v1beta1.QueryCurrentAuctionBasketResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_amount()->Clear();
  _impl_.highestbidder_.ClearToEmpty();
  _impl_.highestbidamount_.ClearToEmpty();
  ::memset(&_impl_.auctionround_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.auctionclosingtime_) -
      reinterpret_cast<char*>(&_impl_.auctionround_)) + sizeof(_impl_.auctionclosingtime_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryCurrentAuctionBasketResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .cosmos.base.v1beta1.Coin amount = 1 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_amount(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // uint64 auctionRound = 2 [json_name = "auctionRound"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          _impl_.auctionround_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // int64 auctionClosingTime = 3 [json_name = "auctionClosingTime"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 24)) {
          _impl_.auctionclosingtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string highestBidder = 4 [json_name = "highestBidder"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_highestbidder();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.auction.v1beta1.QueryCurrentAuctionBasketResponse.highestBidder"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string highestBidAmount = 5 [json_name = "highestBidAmount", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_highestbidamount();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.auction.v1beta1.QueryCurrentAuctionBasketResponse.highestBidAmount"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryCurrentAuctionBasketResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.auction.v1beta1.QueryCurrentAuctionBasketResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cosmos.base.v1beta1.Coin amount = 1 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_amount_size()); i < n; i++) {
    const auto& repfield = this->_internal_amount(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // uint64 auctionRound = 2 [json_name = "auctionRound"];
  if (this->_internal_auctionround() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_auctionround(), target);
  }

  // int64 auctionClosingTime = 3 [json_name = "auctionClosingTime"];
  if (this->_internal_auctionclosingtime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        3, this->_internal_auctionclosingtime(), target);
  }

  // string highestBidder = 4 [json_name = "highestBidder"];
  if (!this->_internal_highestbidder().empty()) {
    const std::string& _s = this->_internal_highestbidder();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.auction.v1beta1.QueryCurrentAuctionBasketResponse.highestBidder");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string highestBidAmount = 5 [json_name = "highestBidAmount", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"];
  if (!this->_internal_highestbidamount().empty()) {
    const std::string& _s = this->_internal_highestbidamount();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.auction.v1beta1.QueryCurrentAuctionBasketResponse.highestBidAmount");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.auction.v1beta1.QueryCurrentAuctionBasketResponse)
  return target;
}

::size_t QueryCurrentAuctionBasketResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.auction.v1beta1.QueryCurrentAuctionBasketResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cosmos.base.v1beta1.Coin amount = 1 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
  total_size += 1UL * this->_internal_amount_size();
  for (const auto& msg : this->_internal_amount()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string highestBidder = 4 [json_name = "highestBidder"];
  if (!this->_internal_highestbidder().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_highestbidder());
  }

  // string highestBidAmount = 5 [json_name = "highestBidAmount", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"];
  if (!this->_internal_highestbidamount().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_highestbidamount());
  }

  // uint64 auctionRound = 2 [json_name = "auctionRound"];
  if (this->_internal_auctionround() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_auctionround());
  }

  // int64 auctionClosingTime = 3 [json_name = "auctionClosingTime"];
  if (this->_internal_auctionclosingtime() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_auctionclosingtime());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryCurrentAuctionBasketResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryCurrentAuctionBasketResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryCurrentAuctionBasketResponse::GetClassData() const { return &_class_data_; }


void QueryCurrentAuctionBasketResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryCurrentAuctionBasketResponse*>(&to_msg);
  auto& from = static_cast<const QueryCurrentAuctionBasketResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.auction.v1beta1.QueryCurrentAuctionBasketResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_amount()->MergeFrom(from._internal_amount());
  if (!from._internal_highestbidder().empty()) {
    _this->_internal_set_highestbidder(from._internal_highestbidder());
  }
  if (!from._internal_highestbidamount().empty()) {
    _this->_internal_set_highestbidamount(from._internal_highestbidamount());
  }
  if (from._internal_auctionround() != 0) {
    _this->_internal_set_auctionround(from._internal_auctionround());
  }
  if (from._internal_auctionclosingtime() != 0) {
    _this->_internal_set_auctionclosingtime(from._internal_auctionclosingtime());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryCurrentAuctionBasketResponse::CopyFrom(const QueryCurrentAuctionBasketResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.auction.v1beta1.QueryCurrentAuctionBasketResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryCurrentAuctionBasketResponse::IsInitialized() const {
  return true;
}

void QueryCurrentAuctionBasketResponse::InternalSwap(QueryCurrentAuctionBasketResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_amount()->InternalSwap(other->_internal_mutable_amount());
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.highestbidder_, lhs_arena,
                                       &other->_impl_.highestbidder_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.highestbidamount_, lhs_arena,
                                       &other->_impl_.highestbidamount_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(QueryCurrentAuctionBasketResponse, _impl_.auctionclosingtime_)
      + sizeof(QueryCurrentAuctionBasketResponse::_impl_.auctionclosingtime_)
      - PROTOBUF_FIELD_OFFSET(QueryCurrentAuctionBasketResponse, _impl_.auctionround_)>(
          reinterpret_cast<char*>(&_impl_.auctionround_),
          reinterpret_cast<char*>(&other->_impl_.auctionround_));
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryCurrentAuctionBasketResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fauction_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_injective_2fauction_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_injective_2fauction_2fv1beta1_2fquery_2eproto[3]);
}
// ===================================================================

class QueryModuleStateRequest::_Internal {
 public:
};

QueryModuleStateRequest::QueryModuleStateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.auction.v1beta1.QueryModuleStateRequest)
}
QueryModuleStateRequest::QueryModuleStateRequest(const QueryModuleStateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  QueryModuleStateRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.auction.v1beta1.QueryModuleStateRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryModuleStateRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryModuleStateRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata QueryModuleStateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fauction_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_injective_2fauction_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_injective_2fauction_2fv1beta1_2fquery_2eproto[4]);
}
// ===================================================================

class QueryModuleStateResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryModuleStateResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryModuleStateResponse, _impl_._has_bits_);
  static const ::injective::auction::v1beta1::GenesisState& state(const QueryModuleStateResponse* msg);
  static void set_has_state(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::injective::auction::v1beta1::GenesisState&
QueryModuleStateResponse::_Internal::state(const QueryModuleStateResponse* msg) {
  return *msg->_impl_.state_;
}
void QueryModuleStateResponse::clear_state() {
  if (_impl_.state_ != nullptr) _impl_.state_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryModuleStateResponse::QueryModuleStateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.auction.v1beta1.QueryModuleStateResponse)
}
QueryModuleStateResponse::QueryModuleStateResponse(const QueryModuleStateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryModuleStateResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.state_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.state_ = new ::injective::auction::v1beta1::GenesisState(*from._impl_.state_);
  }
  // @@protoc_insertion_point(copy_constructor:injective.auction.v1beta1.QueryModuleStateResponse)
}

inline void QueryModuleStateResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.state_){nullptr}
  };
}

QueryModuleStateResponse::~QueryModuleStateResponse() {
  // @@protoc_insertion_point(destructor:injective.auction.v1beta1.QueryModuleStateResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryModuleStateResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.state_;
}

void QueryModuleStateResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryModuleStateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.auction.v1beta1.QueryModuleStateResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.state_ != nullptr);
    _impl_.state_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryModuleStateResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .injective.auction.v1beta1.GenesisState state = 1 [json_name = "state"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_state(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryModuleStateResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.auction.v1beta1.QueryModuleStateResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .injective.auction.v1beta1.GenesisState state = 1 [json_name = "state"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::state(this),
        _Internal::state(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.auction.v1beta1.QueryModuleStateResponse)
  return target;
}

::size_t QueryModuleStateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.auction.v1beta1.QueryModuleStateResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .injective.auction.v1beta1.GenesisState state = 1 [json_name = "state"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.state_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryModuleStateResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryModuleStateResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryModuleStateResponse::GetClassData() const { return &_class_data_; }


void QueryModuleStateResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryModuleStateResponse*>(&to_msg);
  auto& from = static_cast<const QueryModuleStateResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.auction.v1beta1.QueryModuleStateResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_state()->::injective::auction::v1beta1::GenesisState::MergeFrom(
        from._internal_state());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryModuleStateResponse::CopyFrom(const QueryModuleStateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.auction.v1beta1.QueryModuleStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryModuleStateResponse::IsInitialized() const {
  return true;
}

void QueryModuleStateResponse::InternalSwap(QueryModuleStateResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.state_, other->_impl_.state_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryModuleStateResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fauction_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_injective_2fauction_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_injective_2fauction_2fv1beta1_2fquery_2eproto[5]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace auction
}  // namespace injective
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::injective::auction::v1beta1::QueryAuctionParamsRequest*
Arena::CreateMaybeMessage< ::injective::auction::v1beta1::QueryAuctionParamsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::auction::v1beta1::QueryAuctionParamsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::auction::v1beta1::QueryAuctionParamsResponse*
Arena::CreateMaybeMessage< ::injective::auction::v1beta1::QueryAuctionParamsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::auction::v1beta1::QueryAuctionParamsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::auction::v1beta1::QueryCurrentAuctionBasketRequest*
Arena::CreateMaybeMessage< ::injective::auction::v1beta1::QueryCurrentAuctionBasketRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::auction::v1beta1::QueryCurrentAuctionBasketRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::auction::v1beta1::QueryCurrentAuctionBasketResponse*
Arena::CreateMaybeMessage< ::injective::auction::v1beta1::QueryCurrentAuctionBasketResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::auction::v1beta1::QueryCurrentAuctionBasketResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::auction::v1beta1::QueryModuleStateRequest*
Arena::CreateMaybeMessage< ::injective::auction::v1beta1::QueryModuleStateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::auction::v1beta1::QueryModuleStateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::auction::v1beta1::QueryModuleStateResponse*
Arena::CreateMaybeMessage< ::injective::auction::v1beta1::QueryModuleStateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::auction::v1beta1::QueryModuleStateResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
