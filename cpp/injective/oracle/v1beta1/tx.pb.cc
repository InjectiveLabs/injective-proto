// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: injective/oracle/v1beta1/tx.proto

#include "injective/oracle/v1beta1/tx.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace injective {
namespace oracle {
namespace v1beta1 {
template <typename>
PROTOBUF_CONSTEXPR MsgRelayProviderPrices::MsgRelayProviderPrices(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.symbols_)*/{}
  , /*decltype(_impl_.prices_)*/{}
  , /*decltype(_impl_.sender_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.provider_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgRelayProviderPricesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgRelayProviderPricesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgRelayProviderPricesDefaultTypeInternal() {}
  union {
    MsgRelayProviderPrices _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgRelayProviderPricesDefaultTypeInternal _MsgRelayProviderPrices_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgRelayProviderPricesResponse::MsgRelayProviderPricesResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgRelayProviderPricesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgRelayProviderPricesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgRelayProviderPricesResponseDefaultTypeInternal() {}
  union {
    MsgRelayProviderPricesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgRelayProviderPricesResponseDefaultTypeInternal _MsgRelayProviderPricesResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgRelayPriceFeedPrice::MsgRelayPriceFeedPrice(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.base_)*/{}
  , /*decltype(_impl_.quote_)*/{}
  , /*decltype(_impl_.price_)*/{}
  , /*decltype(_impl_.sender_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgRelayPriceFeedPriceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgRelayPriceFeedPriceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgRelayPriceFeedPriceDefaultTypeInternal() {}
  union {
    MsgRelayPriceFeedPrice _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgRelayPriceFeedPriceDefaultTypeInternal _MsgRelayPriceFeedPrice_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgRelayPriceFeedPriceResponse::MsgRelayPriceFeedPriceResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgRelayPriceFeedPriceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgRelayPriceFeedPriceResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgRelayPriceFeedPriceResponseDefaultTypeInternal() {}
  union {
    MsgRelayPriceFeedPriceResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgRelayPriceFeedPriceResponseDefaultTypeInternal _MsgRelayPriceFeedPriceResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgRelayBandRates::MsgRelayBandRates(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.symbols_)*/{}
  , /*decltype(_impl_.rates_)*/ {}
  ,/* _impl_._rates_cached_byte_size_ = */ { 0 }

  , /*decltype(_impl_.resolve_times_)*/ {}
  ,/* _impl_._resolve_times_cached_byte_size_ = */ { 0 }

  , /*decltype(_impl_.requestids_)*/ {}
  ,/* _impl_._requestids_cached_byte_size_ = */ { 0 }

  , /*decltype(_impl_.relayer_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgRelayBandRatesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgRelayBandRatesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgRelayBandRatesDefaultTypeInternal() {}
  union {
    MsgRelayBandRates _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgRelayBandRatesDefaultTypeInternal _MsgRelayBandRates_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgRelayBandRatesResponse::MsgRelayBandRatesResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgRelayBandRatesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgRelayBandRatesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgRelayBandRatesResponseDefaultTypeInternal() {}
  union {
    MsgRelayBandRatesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgRelayBandRatesResponseDefaultTypeInternal _MsgRelayBandRatesResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgRelayCoinbaseMessages::MsgRelayCoinbaseMessages(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.messages_)*/{}
  , /*decltype(_impl_.signatures_)*/{}
  , /*decltype(_impl_.sender_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgRelayCoinbaseMessagesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgRelayCoinbaseMessagesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgRelayCoinbaseMessagesDefaultTypeInternal() {}
  union {
    MsgRelayCoinbaseMessages _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgRelayCoinbaseMessagesDefaultTypeInternal _MsgRelayCoinbaseMessages_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgRelayCoinbaseMessagesResponse::MsgRelayCoinbaseMessagesResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgRelayCoinbaseMessagesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgRelayCoinbaseMessagesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgRelayCoinbaseMessagesResponseDefaultTypeInternal() {}
  union {
    MsgRelayCoinbaseMessagesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgRelayCoinbaseMessagesResponseDefaultTypeInternal _MsgRelayCoinbaseMessagesResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgRequestBandIBCRates::MsgRequestBandIBCRates(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.sender_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.request_id_)*/ ::uint64_t{0u}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgRequestBandIBCRatesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgRequestBandIBCRatesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgRequestBandIBCRatesDefaultTypeInternal() {}
  union {
    MsgRequestBandIBCRates _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgRequestBandIBCRatesDefaultTypeInternal _MsgRequestBandIBCRates_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgRequestBandIBCRatesResponse::MsgRequestBandIBCRatesResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgRequestBandIBCRatesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgRequestBandIBCRatesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgRequestBandIBCRatesResponseDefaultTypeInternal() {}
  union {
    MsgRequestBandIBCRatesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgRequestBandIBCRatesResponseDefaultTypeInternal _MsgRequestBandIBCRatesResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgRelayPythPrices::MsgRelayPythPrices(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.price_attestations_)*/{}
  , /*decltype(_impl_.sender_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgRelayPythPricesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgRelayPythPricesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgRelayPythPricesDefaultTypeInternal() {}
  union {
    MsgRelayPythPrices _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgRelayPythPricesDefaultTypeInternal _MsgRelayPythPrices_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgRelayPythPricesResponse::MsgRelayPythPricesResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgRelayPythPricesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgRelayPythPricesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgRelayPythPricesResponseDefaultTypeInternal() {}
  union {
    MsgRelayPythPricesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgRelayPythPricesResponseDefaultTypeInternal _MsgRelayPythPricesResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgUpdateParams::MsgUpdateParams(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.authority_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.params_)*/nullptr} {}
struct MsgUpdateParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgUpdateParamsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgUpdateParamsDefaultTypeInternal() {}
  union {
    MsgUpdateParams _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgUpdateParamsDefaultTypeInternal _MsgUpdateParams_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgUpdateParamsResponse::MsgUpdateParamsResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgUpdateParamsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgUpdateParamsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgUpdateParamsResponseDefaultTypeInternal() {}
  union {
    MsgUpdateParamsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgUpdateParamsResponseDefaultTypeInternal _MsgUpdateParamsResponse_default_instance_;
}  // namespace v1beta1
}  // namespace oracle
}  // namespace injective
static ::_pb::Metadata file_level_metadata_injective_2foracle_2fv1beta1_2ftx_2eproto[14];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_injective_2foracle_2fv1beta1_2ftx_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_injective_2foracle_2fv1beta1_2ftx_2eproto = nullptr;
const ::uint32_t TableStruct_injective_2foracle_2fv1beta1_2ftx_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::oracle::v1beta1::MsgRelayProviderPrices, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::oracle::v1beta1::MsgRelayProviderPrices, _impl_.sender_),
    PROTOBUF_FIELD_OFFSET(::injective::oracle::v1beta1::MsgRelayProviderPrices, _impl_.provider_),
    PROTOBUF_FIELD_OFFSET(::injective::oracle::v1beta1::MsgRelayProviderPrices, _impl_.symbols_),
    PROTOBUF_FIELD_OFFSET(::injective::oracle::v1beta1::MsgRelayProviderPrices, _impl_.prices_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::oracle::v1beta1::MsgRelayProviderPricesResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::oracle::v1beta1::MsgRelayPriceFeedPrice, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::oracle::v1beta1::MsgRelayPriceFeedPrice, _impl_.sender_),
    PROTOBUF_FIELD_OFFSET(::injective::oracle::v1beta1::MsgRelayPriceFeedPrice, _impl_.base_),
    PROTOBUF_FIELD_OFFSET(::injective::oracle::v1beta1::MsgRelayPriceFeedPrice, _impl_.quote_),
    PROTOBUF_FIELD_OFFSET(::injective::oracle::v1beta1::MsgRelayPriceFeedPrice, _impl_.price_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::oracle::v1beta1::MsgRelayPriceFeedPriceResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::oracle::v1beta1::MsgRelayBandRates, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::oracle::v1beta1::MsgRelayBandRates, _impl_.relayer_),
    PROTOBUF_FIELD_OFFSET(::injective::oracle::v1beta1::MsgRelayBandRates, _impl_.symbols_),
    PROTOBUF_FIELD_OFFSET(::injective::oracle::v1beta1::MsgRelayBandRates, _impl_.rates_),
    PROTOBUF_FIELD_OFFSET(::injective::oracle::v1beta1::MsgRelayBandRates, _impl_.resolve_times_),
    PROTOBUF_FIELD_OFFSET(::injective::oracle::v1beta1::MsgRelayBandRates, _impl_.requestids_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::oracle::v1beta1::MsgRelayBandRatesResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::oracle::v1beta1::MsgRelayCoinbaseMessages, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::oracle::v1beta1::MsgRelayCoinbaseMessages, _impl_.sender_),
    PROTOBUF_FIELD_OFFSET(::injective::oracle::v1beta1::MsgRelayCoinbaseMessages, _impl_.messages_),
    PROTOBUF_FIELD_OFFSET(::injective::oracle::v1beta1::MsgRelayCoinbaseMessages, _impl_.signatures_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::oracle::v1beta1::MsgRelayCoinbaseMessagesResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::oracle::v1beta1::MsgRequestBandIBCRates, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::oracle::v1beta1::MsgRequestBandIBCRates, _impl_.sender_),
    PROTOBUF_FIELD_OFFSET(::injective::oracle::v1beta1::MsgRequestBandIBCRates, _impl_.request_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::oracle::v1beta1::MsgRequestBandIBCRatesResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::oracle::v1beta1::MsgRelayPythPrices, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::oracle::v1beta1::MsgRelayPythPrices, _impl_.sender_),
    PROTOBUF_FIELD_OFFSET(::injective::oracle::v1beta1::MsgRelayPythPrices, _impl_.price_attestations_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::oracle::v1beta1::MsgRelayPythPricesResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::oracle::v1beta1::MsgUpdateParams, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::injective::oracle::v1beta1::MsgUpdateParams, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::oracle::v1beta1::MsgUpdateParams, _impl_.authority_),
    PROTOBUF_FIELD_OFFSET(::injective::oracle::v1beta1::MsgUpdateParams, _impl_.params_),
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::oracle::v1beta1::MsgUpdateParamsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::injective::oracle::v1beta1::MsgRelayProviderPrices)},
        { 12, -1, -1, sizeof(::injective::oracle::v1beta1::MsgRelayProviderPricesResponse)},
        { 20, -1, -1, sizeof(::injective::oracle::v1beta1::MsgRelayPriceFeedPrice)},
        { 32, -1, -1, sizeof(::injective::oracle::v1beta1::MsgRelayPriceFeedPriceResponse)},
        { 40, -1, -1, sizeof(::injective::oracle::v1beta1::MsgRelayBandRates)},
        { 53, -1, -1, sizeof(::injective::oracle::v1beta1::MsgRelayBandRatesResponse)},
        { 61, -1, -1, sizeof(::injective::oracle::v1beta1::MsgRelayCoinbaseMessages)},
        { 72, -1, -1, sizeof(::injective::oracle::v1beta1::MsgRelayCoinbaseMessagesResponse)},
        { 80, -1, -1, sizeof(::injective::oracle::v1beta1::MsgRequestBandIBCRates)},
        { 90, -1, -1, sizeof(::injective::oracle::v1beta1::MsgRequestBandIBCRatesResponse)},
        { 98, -1, -1, sizeof(::injective::oracle::v1beta1::MsgRelayPythPrices)},
        { 108, -1, -1, sizeof(::injective::oracle::v1beta1::MsgRelayPythPricesResponse)},
        { 116, 126, -1, sizeof(::injective::oracle::v1beta1::MsgUpdateParams)},
        { 128, -1, -1, sizeof(::injective::oracle::v1beta1::MsgUpdateParamsResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::injective::oracle::v1beta1::_MsgRelayProviderPrices_default_instance_._instance,
    &::injective::oracle::v1beta1::_MsgRelayProviderPricesResponse_default_instance_._instance,
    &::injective::oracle::v1beta1::_MsgRelayPriceFeedPrice_default_instance_._instance,
    &::injective::oracle::v1beta1::_MsgRelayPriceFeedPriceResponse_default_instance_._instance,
    &::injective::oracle::v1beta1::_MsgRelayBandRates_default_instance_._instance,
    &::injective::oracle::v1beta1::_MsgRelayBandRatesResponse_default_instance_._instance,
    &::injective::oracle::v1beta1::_MsgRelayCoinbaseMessages_default_instance_._instance,
    &::injective::oracle::v1beta1::_MsgRelayCoinbaseMessagesResponse_default_instance_._instance,
    &::injective::oracle::v1beta1::_MsgRequestBandIBCRates_default_instance_._instance,
    &::injective::oracle::v1beta1::_MsgRequestBandIBCRatesResponse_default_instance_._instance,
    &::injective::oracle::v1beta1::_MsgRelayPythPrices_default_instance_._instance,
    &::injective::oracle::v1beta1::_MsgRelayPythPricesResponse_default_instance_._instance,
    &::injective::oracle::v1beta1::_MsgUpdateParams_default_instance_._instance,
    &::injective::oracle::v1beta1::_MsgUpdateParamsResponse_default_instance_._instance,
};
const char descriptor_table_protodef_injective_2foracle_2fv1beta1_2ftx_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n!injective/oracle/v1beta1/tx.proto\022\030inj"
    "ective.oracle.v1beta1\032\024gogoproto/gogo.pr"
    "oto\032%injective/oracle/v1beta1/oracle.pro"
    "to\032\027cosmos/msg/v1/msg.proto\032\031cosmos_prot"
    "o/cosmos.proto\"\303\001\n\026MsgRelayProviderPrice"
    "s\022\026\n\006sender\030\001 \001(\tR\006sender\022\032\n\010provider\030\002 "
    "\001(\tR\010provider\022\030\n\007symbols\030\003 \003(\tR\007symbols\022"
    "F\n\006prices\030\004 \003(\tB.\310\336\037\000\332\336\037&github.com/cosm"
    "os/cosmos-sdk/types.DecR\006prices:\023\210\240\037\000\350\240\037"
    "\000\202\347\260*\006sender\" \n\036MsgRelayProviderPricesRe"
    "sponse\"\265\001\n\026MsgRelayPriceFeedPrice\022\026\n\006sen"
    "der\030\001 \001(\tR\006sender\022\022\n\004base\030\002 \003(\tR\004base\022\024\n"
    "\005quote\030\003 \003(\tR\005quote\022D\n\005price\030\004 \003(\tB.\310\336\037\000"
    "\332\336\037&github.com/cosmos/cosmos-sdk/types.D"
    "ecR\005price:\023\210\240\037\000\350\240\037\000\202\347\260*\006sender\" \n\036MsgRel"
    "ayPriceFeedPriceResponse\"\260\001\n\021MsgRelayBan"
    "dRates\022\030\n\007relayer\030\001 \001(\tR\007relayer\022\030\n\007symb"
    "ols\030\002 \003(\tR\007symbols\022\024\n\005rates\030\003 \003(\004R\005rates"
    "\022#\n\rresolve_times\030\004 \003(\004R\014resolveTimes\022\036\n"
    "\nrequestIDs\030\005 \003(\004R\nrequestIDs:\014\202\347\260*\007rela"
    "yer\"\033\n\031MsgRelayBandRatesResponse\"\203\001\n\030Msg"
    "RelayCoinbaseMessages\022\026\n\006sender\030\001 \001(\tR\006s"
    "ender\022\032\n\010messages\030\002 \003(\014R\010messages\022\036\n\nsig"
    "natures\030\003 \003(\014R\nsignatures:\023\210\240\037\000\350\240\037\000\202\347\260*\006"
    "sender\"\"\n MsgRelayCoinbaseMessagesRespon"
    "se\"d\n\026MsgRequestBandIBCRates\022\026\n\006sender\030\001"
    " \001(\tR\006sender\022\035\n\nrequest_id\030\002 \001(\004R\treques"
    "tId:\023\210\240\037\000\350\240\037\000\202\347\260*\006sender\" \n\036MsgRequestBa"
    "ndIBCRatesResponse\"\234\001\n\022MsgRelayPythPrice"
    "s\022\026\n\006sender\030\001 \001(\tR\006sender\022Y\n\022price_attes"
    "tations\030\002 \003(\0132*.injective.oracle.v1beta1"
    ".PriceAttestationR\021priceAttestations:\023\210\240"
    "\037\000\350\240\037\000\202\347\260*\006sender\"\034\n\032MsgRelayPythPricesR"
    "esponse\"\231\001\n\017MsgUpdateParams\0226\n\tauthority"
    "\030\001 \001(\tB\030\322\264-\024cosmos.AddressStringR\tauthor"
    "ity\022>\n\006params\030\002 \001(\0132 .injective.oracle.v"
    "1beta1.ParamsB\004\310\336\037\000R\006params:\016\202\347\260*\tauthor"
    "ity\"\031\n\027MsgUpdateParamsResponse2\364\006\n\003Msg\022\201"
    "\001\n\023RelayProviderPrices\0220.injective.oracl"
    "e.v1beta1.MsgRelayProviderPrices\0328.injec"
    "tive.oracle.v1beta1.MsgRelayProviderPric"
    "esResponse\022\201\001\n\023RelayPriceFeedPrice\0220.inj"
    "ective.oracle.v1beta1.MsgRelayPriceFeedP"
    "rice\0328.injective.oracle.v1beta1.MsgRelay"
    "PriceFeedPriceResponse\022r\n\016RelayBandRates"
    "\022+.injective.oracle.v1beta1.MsgRelayBand"
    "Rates\0323.injective.oracle.v1beta1.MsgRela"
    "yBandRatesResponse\022\201\001\n\023RequestBandIBCRat"
    "es\0220.injective.oracle.v1beta1.MsgRequest"
    "BandIBCRates\0328.injective.oracle.v1beta1."
    "MsgRequestBandIBCRatesResponse\022\207\001\n\025Relay"
    "CoinbaseMessages\0222.injective.oracle.v1be"
    "ta1.MsgRelayCoinbaseMessages\032:.injective"
    ".oracle.v1beta1.MsgRelayCoinbaseMessages"
    "Response\022u\n\017RelayPythPrices\022,.injective."
    "oracle.v1beta1.MsgRelayPythPrices\0324.inje"
    "ctive.oracle.v1beta1.MsgRelayPythPricesR"
    "esponse\022l\n\014UpdateParams\022).injective.orac"
    "le.v1beta1.MsgUpdateParams\0321.injective.o"
    "racle.v1beta1.MsgUpdateParamsResponseB\367\001"
    "\n\034com.injective.oracle.v1beta1B\007TxProtoP"
    "\001ZLgithub.com/InjectiveLabs/injective-co"
    "re/injective-chain/modules/oracle/types\242"
    "\002\003IOX\252\002\030Injective.Oracle.V1beta1\312\002\030Injec"
    "tive\\Oracle\\V1beta1\342\002$Injective\\Oracle\\V"
    "1beta1\\GPBMetadata\352\002\032Injective::Oracle::"
    "V1beta1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_injective_2foracle_2fv1beta1_2ftx_2eproto_deps[4] =
    {
        &::descriptor_table_cosmos_2fmsg_2fv1_2fmsg_2eproto,
        &::descriptor_table_cosmos_5fproto_2fcosmos_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_injective_2foracle_2fv1beta1_2foracle_2eproto,
};
static ::absl::once_flag descriptor_table_injective_2foracle_2fv1beta1_2ftx_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_injective_2foracle_2fv1beta1_2ftx_2eproto = {
    false,
    false,
    2655,
    descriptor_table_protodef_injective_2foracle_2fv1beta1_2ftx_2eproto,
    "injective/oracle/v1beta1/tx.proto",
    &descriptor_table_injective_2foracle_2fv1beta1_2ftx_2eproto_once,
    descriptor_table_injective_2foracle_2fv1beta1_2ftx_2eproto_deps,
    4,
    14,
    schemas,
    file_default_instances,
    TableStruct_injective_2foracle_2fv1beta1_2ftx_2eproto::offsets,
    file_level_metadata_injective_2foracle_2fv1beta1_2ftx_2eproto,
    file_level_enum_descriptors_injective_2foracle_2fv1beta1_2ftx_2eproto,
    file_level_service_descriptors_injective_2foracle_2fv1beta1_2ftx_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_injective_2foracle_2fv1beta1_2ftx_2eproto_getter() {
  return &descriptor_table_injective_2foracle_2fv1beta1_2ftx_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_injective_2foracle_2fv1beta1_2ftx_2eproto(&descriptor_table_injective_2foracle_2fv1beta1_2ftx_2eproto);
namespace injective {
namespace oracle {
namespace v1beta1 {
// ===================================================================

class MsgRelayProviderPrices::_Internal {
 public:
};

MsgRelayProviderPrices::MsgRelayProviderPrices(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.oracle.v1beta1.MsgRelayProviderPrices)
}
MsgRelayProviderPrices::MsgRelayProviderPrices(const MsgRelayProviderPrices& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgRelayProviderPrices* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.symbols_){from._impl_.symbols_}
    , decltype(_impl_.prices_){from._impl_.prices_}
    , decltype(_impl_.sender_) {}

    , decltype(_impl_.provider_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sender().empty()) {
    _this->_impl_.sender_.Set(from._internal_sender(), _this->GetArenaForAllocation());
  }
  _impl_.provider_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.provider_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_provider().empty()) {
    _this->_impl_.provider_.Set(from._internal_provider(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:injective.oracle.v1beta1.MsgRelayProviderPrices)
}

inline void MsgRelayProviderPrices::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.symbols_){arena}
    , decltype(_impl_.prices_){arena}
    , decltype(_impl_.sender_) {}

    , decltype(_impl_.provider_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.provider_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.provider_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgRelayProviderPrices::~MsgRelayProviderPrices() {
  // @@protoc_insertion_point(destructor:injective.oracle.v1beta1.MsgRelayProviderPrices)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgRelayProviderPrices::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_symbols()->~RepeatedPtrField();
  _internal_mutable_prices()->~RepeatedPtrField();
  _impl_.sender_.Destroy();
  _impl_.provider_.Destroy();
}

void MsgRelayProviderPrices::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgRelayProviderPrices::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.oracle.v1beta1.MsgRelayProviderPrices)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_symbols()->Clear();
  _internal_mutable_prices()->Clear();
  _impl_.sender_.ClearToEmpty();
  _impl_.provider_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgRelayProviderPrices::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string sender = 1 [json_name = "sender"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_sender();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.oracle.v1beta1.MsgRelayProviderPrices.sender"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string provider = 2 [json_name = "provider"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_provider();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.oracle.v1beta1.MsgRelayProviderPrices.provider"));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated string symbols = 3 [json_name = "symbols"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_symbols();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "injective.oracle.v1beta1.MsgRelayProviderPrices.symbols"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated string prices = 4 [json_name = "prices", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_prices();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "injective.oracle.v1beta1.MsgRelayProviderPrices.prices"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgRelayProviderPrices::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.oracle.v1beta1.MsgRelayProviderPrices)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string sender = 1 [json_name = "sender"];
  if (!this->_internal_sender().empty()) {
    const std::string& _s = this->_internal_sender();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.oracle.v1beta1.MsgRelayProviderPrices.sender");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string provider = 2 [json_name = "provider"];
  if (!this->_internal_provider().empty()) {
    const std::string& _s = this->_internal_provider();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.oracle.v1beta1.MsgRelayProviderPrices.provider");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // repeated string symbols = 3 [json_name = "symbols"];
  for (int i = 0, n = this->_internal_symbols_size(); i < n; ++i) {
    const auto& s = this->_internal_symbols(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.oracle.v1beta1.MsgRelayProviderPrices.symbols");
    target = stream->WriteString(3, s, target);
  }

  // repeated string prices = 4 [json_name = "prices", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];
  for (int i = 0, n = this->_internal_prices_size(); i < n; ++i) {
    const auto& s = this->_internal_prices(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.oracle.v1beta1.MsgRelayProviderPrices.prices");
    target = stream->WriteString(4, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.oracle.v1beta1.MsgRelayProviderPrices)
  return target;
}

::size_t MsgRelayProviderPrices::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.oracle.v1beta1.MsgRelayProviderPrices)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string symbols = 3 [json_name = "symbols"];
  total_size += 1 * ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_internal_symbols().size());
  for (int i = 0, n = _internal_symbols().size(); i < n; ++i) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        _internal_symbols().Get(i));
  }

  // repeated string prices = 4 [json_name = "prices", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];
  total_size += 1 * ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_internal_prices().size());
  for (int i = 0, n = _internal_prices().size(); i < n; ++i) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        _internal_prices().Get(i));
  }

  // string sender = 1 [json_name = "sender"];
  if (!this->_internal_sender().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_sender());
  }

  // string provider = 2 [json_name = "provider"];
  if (!this->_internal_provider().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_provider());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgRelayProviderPrices::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgRelayProviderPrices::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgRelayProviderPrices::GetClassData() const { return &_class_data_; }


void MsgRelayProviderPrices::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgRelayProviderPrices*>(&to_msg);
  auto& from = static_cast<const MsgRelayProviderPrices&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.oracle.v1beta1.MsgRelayProviderPrices)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_symbols()->MergeFrom(from._internal_symbols());
  _this->_internal_mutable_prices()->MergeFrom(from._internal_prices());
  if (!from._internal_sender().empty()) {
    _this->_internal_set_sender(from._internal_sender());
  }
  if (!from._internal_provider().empty()) {
    _this->_internal_set_provider(from._internal_provider());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgRelayProviderPrices::CopyFrom(const MsgRelayProviderPrices& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.oracle.v1beta1.MsgRelayProviderPrices)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgRelayProviderPrices::IsInitialized() const {
  return true;
}

void MsgRelayProviderPrices::InternalSwap(MsgRelayProviderPrices* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_symbols()->InternalSwap(
      other->_internal_mutable_symbols());
  _internal_mutable_prices()->InternalSwap(
      other->_internal_mutable_prices());
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_, lhs_arena,
                                       &other->_impl_.sender_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.provider_, lhs_arena,
                                       &other->_impl_.provider_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgRelayProviderPrices::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2foracle_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_injective_2foracle_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_injective_2foracle_2fv1beta1_2ftx_2eproto[0]);
}
// ===================================================================

class MsgRelayProviderPricesResponse::_Internal {
 public:
};

MsgRelayProviderPricesResponse::MsgRelayProviderPricesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.oracle.v1beta1.MsgRelayProviderPricesResponse)
}
MsgRelayProviderPricesResponse::MsgRelayProviderPricesResponse(const MsgRelayProviderPricesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgRelayProviderPricesResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.oracle.v1beta1.MsgRelayProviderPricesResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgRelayProviderPricesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgRelayProviderPricesResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgRelayProviderPricesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2foracle_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_injective_2foracle_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_injective_2foracle_2fv1beta1_2ftx_2eproto[1]);
}
// ===================================================================

class MsgRelayPriceFeedPrice::_Internal {
 public:
};

MsgRelayPriceFeedPrice::MsgRelayPriceFeedPrice(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.oracle.v1beta1.MsgRelayPriceFeedPrice)
}
MsgRelayPriceFeedPrice::MsgRelayPriceFeedPrice(const MsgRelayPriceFeedPrice& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgRelayPriceFeedPrice* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.base_){from._impl_.base_}
    , decltype(_impl_.quote_){from._impl_.quote_}
    , decltype(_impl_.price_){from._impl_.price_}
    , decltype(_impl_.sender_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sender().empty()) {
    _this->_impl_.sender_.Set(from._internal_sender(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:injective.oracle.v1beta1.MsgRelayPriceFeedPrice)
}

inline void MsgRelayPriceFeedPrice::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.base_){arena}
    , decltype(_impl_.quote_){arena}
    , decltype(_impl_.price_){arena}
    , decltype(_impl_.sender_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgRelayPriceFeedPrice::~MsgRelayPriceFeedPrice() {
  // @@protoc_insertion_point(destructor:injective.oracle.v1beta1.MsgRelayPriceFeedPrice)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgRelayPriceFeedPrice::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_base()->~RepeatedPtrField();
  _internal_mutable_quote()->~RepeatedPtrField();
  _internal_mutable_price()->~RepeatedPtrField();
  _impl_.sender_.Destroy();
}

void MsgRelayPriceFeedPrice::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgRelayPriceFeedPrice::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.oracle.v1beta1.MsgRelayPriceFeedPrice)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_base()->Clear();
  _internal_mutable_quote()->Clear();
  _internal_mutable_price()->Clear();
  _impl_.sender_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgRelayPriceFeedPrice::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string sender = 1 [json_name = "sender"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_sender();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.oracle.v1beta1.MsgRelayPriceFeedPrice.sender"));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated string base = 2 [json_name = "base"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_base();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "injective.oracle.v1beta1.MsgRelayPriceFeedPrice.base"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated string quote = 3 [json_name = "quote"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_quote();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "injective.oracle.v1beta1.MsgRelayPriceFeedPrice.quote"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated string price = 4 [json_name = "price", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_price();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "injective.oracle.v1beta1.MsgRelayPriceFeedPrice.price"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgRelayPriceFeedPrice::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.oracle.v1beta1.MsgRelayPriceFeedPrice)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string sender = 1 [json_name = "sender"];
  if (!this->_internal_sender().empty()) {
    const std::string& _s = this->_internal_sender();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.oracle.v1beta1.MsgRelayPriceFeedPrice.sender");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated string base = 2 [json_name = "base"];
  for (int i = 0, n = this->_internal_base_size(); i < n; ++i) {
    const auto& s = this->_internal_base(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.oracle.v1beta1.MsgRelayPriceFeedPrice.base");
    target = stream->WriteString(2, s, target);
  }

  // repeated string quote = 3 [json_name = "quote"];
  for (int i = 0, n = this->_internal_quote_size(); i < n; ++i) {
    const auto& s = this->_internal_quote(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.oracle.v1beta1.MsgRelayPriceFeedPrice.quote");
    target = stream->WriteString(3, s, target);
  }

  // repeated string price = 4 [json_name = "price", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];
  for (int i = 0, n = this->_internal_price_size(); i < n; ++i) {
    const auto& s = this->_internal_price(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.oracle.v1beta1.MsgRelayPriceFeedPrice.price");
    target = stream->WriteString(4, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.oracle.v1beta1.MsgRelayPriceFeedPrice)
  return target;
}

::size_t MsgRelayPriceFeedPrice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.oracle.v1beta1.MsgRelayPriceFeedPrice)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string base = 2 [json_name = "base"];
  total_size += 1 * ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_internal_base().size());
  for (int i = 0, n = _internal_base().size(); i < n; ++i) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        _internal_base().Get(i));
  }

  // repeated string quote = 3 [json_name = "quote"];
  total_size += 1 * ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_internal_quote().size());
  for (int i = 0, n = _internal_quote().size(); i < n; ++i) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        _internal_quote().Get(i));
  }

  // repeated string price = 4 [json_name = "price", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];
  total_size += 1 * ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_internal_price().size());
  for (int i = 0, n = _internal_price().size(); i < n; ++i) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        _internal_price().Get(i));
  }

  // string sender = 1 [json_name = "sender"];
  if (!this->_internal_sender().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_sender());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgRelayPriceFeedPrice::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgRelayPriceFeedPrice::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgRelayPriceFeedPrice::GetClassData() const { return &_class_data_; }


void MsgRelayPriceFeedPrice::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgRelayPriceFeedPrice*>(&to_msg);
  auto& from = static_cast<const MsgRelayPriceFeedPrice&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.oracle.v1beta1.MsgRelayPriceFeedPrice)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_base()->MergeFrom(from._internal_base());
  _this->_internal_mutable_quote()->MergeFrom(from._internal_quote());
  _this->_internal_mutable_price()->MergeFrom(from._internal_price());
  if (!from._internal_sender().empty()) {
    _this->_internal_set_sender(from._internal_sender());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgRelayPriceFeedPrice::CopyFrom(const MsgRelayPriceFeedPrice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.oracle.v1beta1.MsgRelayPriceFeedPrice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgRelayPriceFeedPrice::IsInitialized() const {
  return true;
}

void MsgRelayPriceFeedPrice::InternalSwap(MsgRelayPriceFeedPrice* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_base()->InternalSwap(
      other->_internal_mutable_base());
  _internal_mutable_quote()->InternalSwap(
      other->_internal_mutable_quote());
  _internal_mutable_price()->InternalSwap(
      other->_internal_mutable_price());
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_, lhs_arena,
                                       &other->_impl_.sender_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgRelayPriceFeedPrice::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2foracle_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_injective_2foracle_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_injective_2foracle_2fv1beta1_2ftx_2eproto[2]);
}
// ===================================================================

class MsgRelayPriceFeedPriceResponse::_Internal {
 public:
};

MsgRelayPriceFeedPriceResponse::MsgRelayPriceFeedPriceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.oracle.v1beta1.MsgRelayPriceFeedPriceResponse)
}
MsgRelayPriceFeedPriceResponse::MsgRelayPriceFeedPriceResponse(const MsgRelayPriceFeedPriceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgRelayPriceFeedPriceResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.oracle.v1beta1.MsgRelayPriceFeedPriceResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgRelayPriceFeedPriceResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgRelayPriceFeedPriceResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgRelayPriceFeedPriceResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2foracle_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_injective_2foracle_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_injective_2foracle_2fv1beta1_2ftx_2eproto[3]);
}
// ===================================================================

class MsgRelayBandRates::_Internal {
 public:
};

MsgRelayBandRates::MsgRelayBandRates(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.oracle.v1beta1.MsgRelayBandRates)
}
MsgRelayBandRates::MsgRelayBandRates(const MsgRelayBandRates& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgRelayBandRates* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.symbols_){from._impl_.symbols_}
    , decltype(_impl_.rates_) { from._impl_.rates_ }
    ,/* _impl_._rates_cached_byte_size_ = */ { 0 }

    , decltype(_impl_.resolve_times_) { from._impl_.resolve_times_ }
    ,/* _impl_._resolve_times_cached_byte_size_ = */ { 0 }

    , decltype(_impl_.requestids_) { from._impl_.requestids_ }
    ,/* _impl_._requestids_cached_byte_size_ = */ { 0 }

    , decltype(_impl_.relayer_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.relayer_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.relayer_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_relayer().empty()) {
    _this->_impl_.relayer_.Set(from._internal_relayer(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:injective.oracle.v1beta1.MsgRelayBandRates)
}

inline void MsgRelayBandRates::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.symbols_){arena}
    , decltype(_impl_.rates_) { arena }
    ,/* _impl_._rates_cached_byte_size_ = */ { 0 }

    , decltype(_impl_.resolve_times_) { arena }
    ,/* _impl_._resolve_times_cached_byte_size_ = */ { 0 }

    , decltype(_impl_.requestids_) { arena }
    ,/* _impl_._requestids_cached_byte_size_ = */ { 0 }

    , decltype(_impl_.relayer_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.relayer_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.relayer_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgRelayBandRates::~MsgRelayBandRates() {
  // @@protoc_insertion_point(destructor:injective.oracle.v1beta1.MsgRelayBandRates)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgRelayBandRates::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_symbols()->~RepeatedPtrField();
  _impl_.rates_.~RepeatedField();
  _impl_.resolve_times_.~RepeatedField();
  _impl_.requestids_.~RepeatedField();
  _impl_.relayer_.Destroy();
}

void MsgRelayBandRates::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgRelayBandRates::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.oracle.v1beta1.MsgRelayBandRates)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_symbols()->Clear();
  _internal_mutable_rates()->Clear();
  _internal_mutable_resolve_times()->Clear();
  _internal_mutable_requestids()->Clear();
  _impl_.relayer_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgRelayBandRates::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string relayer = 1 [json_name = "relayer"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_relayer();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.oracle.v1beta1.MsgRelayBandRates.relayer"));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated string symbols = 2 [json_name = "symbols"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_symbols();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "injective.oracle.v1beta1.MsgRelayBandRates.symbols"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated uint64 rates = 3 [json_name = "rates"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_rates(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::uint8_t>(tag) == 24) {
          _internal_add_rates(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated uint64 resolve_times = 4 [json_name = "resolveTimes"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_resolve_times(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::uint8_t>(tag) == 32) {
          _internal_add_resolve_times(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated uint64 requestIDs = 5 [json_name = "requestIDs"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_requestids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::uint8_t>(tag) == 40) {
          _internal_add_requestids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgRelayBandRates::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.oracle.v1beta1.MsgRelayBandRates)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string relayer = 1 [json_name = "relayer"];
  if (!this->_internal_relayer().empty()) {
    const std::string& _s = this->_internal_relayer();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.oracle.v1beta1.MsgRelayBandRates.relayer");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated string symbols = 2 [json_name = "symbols"];
  for (int i = 0, n = this->_internal_symbols_size(); i < n; ++i) {
    const auto& s = this->_internal_symbols(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.oracle.v1beta1.MsgRelayBandRates.symbols");
    target = stream->WriteString(2, s, target);
  }

  // repeated uint64 rates = 3 [json_name = "rates"];
  {
    int byte_size = _impl_._rates_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(3, _internal_rates(),
                                                 byte_size, target);
    }
  }

  // repeated uint64 resolve_times = 4 [json_name = "resolveTimes"];
  {
    int byte_size = _impl_._resolve_times_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(4, _internal_resolve_times(),
                                                 byte_size, target);
    }
  }

  // repeated uint64 requestIDs = 5 [json_name = "requestIDs"];
  {
    int byte_size = _impl_._requestids_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(5, _internal_requestids(),
                                                 byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.oracle.v1beta1.MsgRelayBandRates)
  return target;
}

::size_t MsgRelayBandRates::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.oracle.v1beta1.MsgRelayBandRates)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string symbols = 2 [json_name = "symbols"];
  total_size += 1 * ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_internal_symbols().size());
  for (int i = 0, n = _internal_symbols().size(); i < n; ++i) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        _internal_symbols().Get(i));
  }

  // repeated uint64 rates = 3 [json_name = "rates"];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt64Size(
        this->_internal_rates())
    ;
    _impl_._rates_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }

  // repeated uint64 resolve_times = 4 [json_name = "resolveTimes"];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt64Size(
        this->_internal_resolve_times())
    ;
    _impl_._resolve_times_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }

  // repeated uint64 requestIDs = 5 [json_name = "requestIDs"];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt64Size(
        this->_internal_requestids())
    ;
    _impl_._requestids_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }

  // string relayer = 1 [json_name = "relayer"];
  if (!this->_internal_relayer().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_relayer());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgRelayBandRates::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgRelayBandRates::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgRelayBandRates::GetClassData() const { return &_class_data_; }


void MsgRelayBandRates::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgRelayBandRates*>(&to_msg);
  auto& from = static_cast<const MsgRelayBandRates&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.oracle.v1beta1.MsgRelayBandRates)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_symbols()->MergeFrom(from._internal_symbols());
  _this->_impl_.rates_.MergeFrom(from._impl_.rates_);
  _this->_impl_.resolve_times_.MergeFrom(from._impl_.resolve_times_);
  _this->_impl_.requestids_.MergeFrom(from._impl_.requestids_);
  if (!from._internal_relayer().empty()) {
    _this->_internal_set_relayer(from._internal_relayer());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgRelayBandRates::CopyFrom(const MsgRelayBandRates& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.oracle.v1beta1.MsgRelayBandRates)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgRelayBandRates::IsInitialized() const {
  return true;
}

void MsgRelayBandRates::InternalSwap(MsgRelayBandRates* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_symbols()->InternalSwap(
      other->_internal_mutable_symbols());
  _impl_.rates_.InternalSwap(&other->_impl_.rates_);
  _impl_.resolve_times_.InternalSwap(&other->_impl_.resolve_times_);
  _impl_.requestids_.InternalSwap(&other->_impl_.requestids_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.relayer_, lhs_arena,
                                       &other->_impl_.relayer_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgRelayBandRates::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2foracle_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_injective_2foracle_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_injective_2foracle_2fv1beta1_2ftx_2eproto[4]);
}
// ===================================================================

class MsgRelayBandRatesResponse::_Internal {
 public:
};

MsgRelayBandRatesResponse::MsgRelayBandRatesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.oracle.v1beta1.MsgRelayBandRatesResponse)
}
MsgRelayBandRatesResponse::MsgRelayBandRatesResponse(const MsgRelayBandRatesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgRelayBandRatesResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.oracle.v1beta1.MsgRelayBandRatesResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgRelayBandRatesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgRelayBandRatesResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgRelayBandRatesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2foracle_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_injective_2foracle_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_injective_2foracle_2fv1beta1_2ftx_2eproto[5]);
}
// ===================================================================

class MsgRelayCoinbaseMessages::_Internal {
 public:
};

MsgRelayCoinbaseMessages::MsgRelayCoinbaseMessages(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.oracle.v1beta1.MsgRelayCoinbaseMessages)
}
MsgRelayCoinbaseMessages::MsgRelayCoinbaseMessages(const MsgRelayCoinbaseMessages& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgRelayCoinbaseMessages* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.messages_){from._impl_.messages_}
    , decltype(_impl_.signatures_){from._impl_.signatures_}
    , decltype(_impl_.sender_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sender().empty()) {
    _this->_impl_.sender_.Set(from._internal_sender(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:injective.oracle.v1beta1.MsgRelayCoinbaseMessages)
}

inline void MsgRelayCoinbaseMessages::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.messages_){arena}
    , decltype(_impl_.signatures_){arena}
    , decltype(_impl_.sender_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgRelayCoinbaseMessages::~MsgRelayCoinbaseMessages() {
  // @@protoc_insertion_point(destructor:injective.oracle.v1beta1.MsgRelayCoinbaseMessages)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgRelayCoinbaseMessages::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_messages()->~RepeatedPtrField();
  _internal_mutable_signatures()->~RepeatedPtrField();
  _impl_.sender_.Destroy();
}

void MsgRelayCoinbaseMessages::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgRelayCoinbaseMessages::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.oracle.v1beta1.MsgRelayCoinbaseMessages)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_messages()->Clear();
  _internal_mutable_signatures()->Clear();
  _impl_.sender_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgRelayCoinbaseMessages::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string sender = 1 [json_name = "sender"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_sender();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.oracle.v1beta1.MsgRelayCoinbaseMessages.sender"));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated bytes messages = 2 [json_name = "messages"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_messages();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated bytes signatures = 3 [json_name = "signatures"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_signatures();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgRelayCoinbaseMessages::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.oracle.v1beta1.MsgRelayCoinbaseMessages)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string sender = 1 [json_name = "sender"];
  if (!this->_internal_sender().empty()) {
    const std::string& _s = this->_internal_sender();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.oracle.v1beta1.MsgRelayCoinbaseMessages.sender");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated bytes messages = 2 [json_name = "messages"];
  for (int i = 0, n = this->_internal_messages_size(); i < n; ++i) {
    const auto& s = this->_internal_messages(i);
    target = stream->WriteBytes(2, s, target);
  }

  // repeated bytes signatures = 3 [json_name = "signatures"];
  for (int i = 0, n = this->_internal_signatures_size(); i < n; ++i) {
    const auto& s = this->_internal_signatures(i);
    target = stream->WriteBytes(3, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.oracle.v1beta1.MsgRelayCoinbaseMessages)
  return target;
}

::size_t MsgRelayCoinbaseMessages::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.oracle.v1beta1.MsgRelayCoinbaseMessages)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes messages = 2 [json_name = "messages"];
  total_size += 1 * ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_internal_messages().size());
  for (int i = 0, n = _internal_messages().size(); i < n; ++i) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        _internal_messages().Get(i));
  }

  // repeated bytes signatures = 3 [json_name = "signatures"];
  total_size += 1 * ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_internal_signatures().size());
  for (int i = 0, n = _internal_signatures().size(); i < n; ++i) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        _internal_signatures().Get(i));
  }

  // string sender = 1 [json_name = "sender"];
  if (!this->_internal_sender().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_sender());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgRelayCoinbaseMessages::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgRelayCoinbaseMessages::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgRelayCoinbaseMessages::GetClassData() const { return &_class_data_; }


void MsgRelayCoinbaseMessages::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgRelayCoinbaseMessages*>(&to_msg);
  auto& from = static_cast<const MsgRelayCoinbaseMessages&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.oracle.v1beta1.MsgRelayCoinbaseMessages)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_messages()->MergeFrom(from._internal_messages());
  _this->_internal_mutable_signatures()->MergeFrom(from._internal_signatures());
  if (!from._internal_sender().empty()) {
    _this->_internal_set_sender(from._internal_sender());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgRelayCoinbaseMessages::CopyFrom(const MsgRelayCoinbaseMessages& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.oracle.v1beta1.MsgRelayCoinbaseMessages)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgRelayCoinbaseMessages::IsInitialized() const {
  return true;
}

void MsgRelayCoinbaseMessages::InternalSwap(MsgRelayCoinbaseMessages* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_messages()->InternalSwap(
      other->_internal_mutable_messages());
  _internal_mutable_signatures()->InternalSwap(
      other->_internal_mutable_signatures());
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_, lhs_arena,
                                       &other->_impl_.sender_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgRelayCoinbaseMessages::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2foracle_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_injective_2foracle_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_injective_2foracle_2fv1beta1_2ftx_2eproto[6]);
}
// ===================================================================

class MsgRelayCoinbaseMessagesResponse::_Internal {
 public:
};

MsgRelayCoinbaseMessagesResponse::MsgRelayCoinbaseMessagesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.oracle.v1beta1.MsgRelayCoinbaseMessagesResponse)
}
MsgRelayCoinbaseMessagesResponse::MsgRelayCoinbaseMessagesResponse(const MsgRelayCoinbaseMessagesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgRelayCoinbaseMessagesResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.oracle.v1beta1.MsgRelayCoinbaseMessagesResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgRelayCoinbaseMessagesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgRelayCoinbaseMessagesResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgRelayCoinbaseMessagesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2foracle_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_injective_2foracle_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_injective_2foracle_2fv1beta1_2ftx_2eproto[7]);
}
// ===================================================================

class MsgRequestBandIBCRates::_Internal {
 public:
};

MsgRequestBandIBCRates::MsgRequestBandIBCRates(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.oracle.v1beta1.MsgRequestBandIBCRates)
}
MsgRequestBandIBCRates::MsgRequestBandIBCRates(const MsgRequestBandIBCRates& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgRequestBandIBCRates* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.sender_) {}

    , decltype(_impl_.request_id_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sender().empty()) {
    _this->_impl_.sender_.Set(from._internal_sender(), _this->GetArenaForAllocation());
  }
  _this->_impl_.request_id_ = from._impl_.request_id_;
  // @@protoc_insertion_point(copy_constructor:injective.oracle.v1beta1.MsgRequestBandIBCRates)
}

inline void MsgRequestBandIBCRates::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.sender_) {}

    , decltype(_impl_.request_id_) { ::uint64_t{0u} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgRequestBandIBCRates::~MsgRequestBandIBCRates() {
  // @@protoc_insertion_point(destructor:injective.oracle.v1beta1.MsgRequestBandIBCRates)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgRequestBandIBCRates::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.sender_.Destroy();
}

void MsgRequestBandIBCRates::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgRequestBandIBCRates::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.oracle.v1beta1.MsgRequestBandIBCRates)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sender_.ClearToEmpty();
  _impl_.request_id_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgRequestBandIBCRates::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string sender = 1 [json_name = "sender"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_sender();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.oracle.v1beta1.MsgRequestBandIBCRates.sender"));
        } else {
          goto handle_unusual;
        }
        continue;
      // uint64 request_id = 2 [json_name = "requestId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          _impl_.request_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgRequestBandIBCRates::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.oracle.v1beta1.MsgRequestBandIBCRates)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string sender = 1 [json_name = "sender"];
  if (!this->_internal_sender().empty()) {
    const std::string& _s = this->_internal_sender();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.oracle.v1beta1.MsgRequestBandIBCRates.sender");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // uint64 request_id = 2 [json_name = "requestId"];
  if (this->_internal_request_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_request_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.oracle.v1beta1.MsgRequestBandIBCRates)
  return target;
}

::size_t MsgRequestBandIBCRates::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.oracle.v1beta1.MsgRequestBandIBCRates)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string sender = 1 [json_name = "sender"];
  if (!this->_internal_sender().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_sender());
  }

  // uint64 request_id = 2 [json_name = "requestId"];
  if (this->_internal_request_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_request_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgRequestBandIBCRates::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgRequestBandIBCRates::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgRequestBandIBCRates::GetClassData() const { return &_class_data_; }


void MsgRequestBandIBCRates::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgRequestBandIBCRates*>(&to_msg);
  auto& from = static_cast<const MsgRequestBandIBCRates&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.oracle.v1beta1.MsgRequestBandIBCRates)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sender().empty()) {
    _this->_internal_set_sender(from._internal_sender());
  }
  if (from._internal_request_id() != 0) {
    _this->_internal_set_request_id(from._internal_request_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgRequestBandIBCRates::CopyFrom(const MsgRequestBandIBCRates& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.oracle.v1beta1.MsgRequestBandIBCRates)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgRequestBandIBCRates::IsInitialized() const {
  return true;
}

void MsgRequestBandIBCRates::InternalSwap(MsgRequestBandIBCRates* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_, lhs_arena,
                                       &other->_impl_.sender_, rhs_arena);

  swap(_impl_.request_id_, other->_impl_.request_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgRequestBandIBCRates::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2foracle_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_injective_2foracle_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_injective_2foracle_2fv1beta1_2ftx_2eproto[8]);
}
// ===================================================================

class MsgRequestBandIBCRatesResponse::_Internal {
 public:
};

MsgRequestBandIBCRatesResponse::MsgRequestBandIBCRatesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.oracle.v1beta1.MsgRequestBandIBCRatesResponse)
}
MsgRequestBandIBCRatesResponse::MsgRequestBandIBCRatesResponse(const MsgRequestBandIBCRatesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgRequestBandIBCRatesResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.oracle.v1beta1.MsgRequestBandIBCRatesResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgRequestBandIBCRatesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgRequestBandIBCRatesResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgRequestBandIBCRatesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2foracle_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_injective_2foracle_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_injective_2foracle_2fv1beta1_2ftx_2eproto[9]);
}
// ===================================================================

class MsgRelayPythPrices::_Internal {
 public:
};

void MsgRelayPythPrices::clear_price_attestations() {
  _internal_mutable_price_attestations()->Clear();
}
MsgRelayPythPrices::MsgRelayPythPrices(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.oracle.v1beta1.MsgRelayPythPrices)
}
MsgRelayPythPrices::MsgRelayPythPrices(const MsgRelayPythPrices& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgRelayPythPrices* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.price_attestations_){from._impl_.price_attestations_}
    , decltype(_impl_.sender_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sender().empty()) {
    _this->_impl_.sender_.Set(from._internal_sender(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:injective.oracle.v1beta1.MsgRelayPythPrices)
}

inline void MsgRelayPythPrices::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.price_attestations_){arena}
    , decltype(_impl_.sender_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgRelayPythPrices::~MsgRelayPythPrices() {
  // @@protoc_insertion_point(destructor:injective.oracle.v1beta1.MsgRelayPythPrices)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgRelayPythPrices::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_price_attestations()->~RepeatedPtrField();
  _impl_.sender_.Destroy();
}

void MsgRelayPythPrices::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgRelayPythPrices::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.oracle.v1beta1.MsgRelayPythPrices)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_price_attestations()->Clear();
  _impl_.sender_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgRelayPythPrices::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string sender = 1 [json_name = "sender"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_sender();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.oracle.v1beta1.MsgRelayPythPrices.sender"));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated .injective.oracle.v1beta1.PriceAttestation price_attestations = 2 [json_name = "priceAttestations"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_price_attestations(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgRelayPythPrices::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.oracle.v1beta1.MsgRelayPythPrices)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string sender = 1 [json_name = "sender"];
  if (!this->_internal_sender().empty()) {
    const std::string& _s = this->_internal_sender();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.oracle.v1beta1.MsgRelayPythPrices.sender");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .injective.oracle.v1beta1.PriceAttestation price_attestations = 2 [json_name = "priceAttestations"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_price_attestations_size()); i < n; i++) {
    const auto& repfield = this->_internal_price_attestations(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.oracle.v1beta1.MsgRelayPythPrices)
  return target;
}

::size_t MsgRelayPythPrices::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.oracle.v1beta1.MsgRelayPythPrices)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .injective.oracle.v1beta1.PriceAttestation price_attestations = 2 [json_name = "priceAttestations"];
  total_size += 1UL * this->_internal_price_attestations_size();
  for (const auto& msg : this->_internal_price_attestations()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string sender = 1 [json_name = "sender"];
  if (!this->_internal_sender().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_sender());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgRelayPythPrices::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgRelayPythPrices::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgRelayPythPrices::GetClassData() const { return &_class_data_; }


void MsgRelayPythPrices::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgRelayPythPrices*>(&to_msg);
  auto& from = static_cast<const MsgRelayPythPrices&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.oracle.v1beta1.MsgRelayPythPrices)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_price_attestations()->MergeFrom(from._internal_price_attestations());
  if (!from._internal_sender().empty()) {
    _this->_internal_set_sender(from._internal_sender());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgRelayPythPrices::CopyFrom(const MsgRelayPythPrices& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.oracle.v1beta1.MsgRelayPythPrices)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgRelayPythPrices::IsInitialized() const {
  return true;
}

void MsgRelayPythPrices::InternalSwap(MsgRelayPythPrices* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_price_attestations()->InternalSwap(other->_internal_mutable_price_attestations());
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_, lhs_arena,
                                       &other->_impl_.sender_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgRelayPythPrices::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2foracle_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_injective_2foracle_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_injective_2foracle_2fv1beta1_2ftx_2eproto[10]);
}
// ===================================================================

class MsgRelayPythPricesResponse::_Internal {
 public:
};

MsgRelayPythPricesResponse::MsgRelayPythPricesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.oracle.v1beta1.MsgRelayPythPricesResponse)
}
MsgRelayPythPricesResponse::MsgRelayPythPricesResponse(const MsgRelayPythPricesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgRelayPythPricesResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.oracle.v1beta1.MsgRelayPythPricesResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgRelayPythPricesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgRelayPythPricesResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgRelayPythPricesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2foracle_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_injective_2foracle_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_injective_2foracle_2fv1beta1_2ftx_2eproto[11]);
}
// ===================================================================

class MsgUpdateParams::_Internal {
 public:
  using HasBits = decltype(std::declval<MsgUpdateParams>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MsgUpdateParams, _impl_._has_bits_);
  static const ::injective::oracle::v1beta1::Params& params(const MsgUpdateParams* msg);
  static void set_has_params(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::injective::oracle::v1beta1::Params&
MsgUpdateParams::_Internal::params(const MsgUpdateParams* msg) {
  return *msg->_impl_.params_;
}
void MsgUpdateParams::clear_params() {
  if (_impl_.params_ != nullptr) _impl_.params_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
MsgUpdateParams::MsgUpdateParams(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.oracle.v1beta1.MsgUpdateParams)
}
MsgUpdateParams::MsgUpdateParams(const MsgUpdateParams& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgUpdateParams* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.authority_) {}

    , decltype(_impl_.params_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.authority_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.authority_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_authority().empty()) {
    _this->_impl_.authority_.Set(from._internal_authority(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.params_ = new ::injective::oracle::v1beta1::Params(*from._impl_.params_);
  }
  // @@protoc_insertion_point(copy_constructor:injective.oracle.v1beta1.MsgUpdateParams)
}

inline void MsgUpdateParams::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.authority_) {}

    , decltype(_impl_.params_){nullptr}
  };
  _impl_.authority_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.authority_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgUpdateParams::~MsgUpdateParams() {
  // @@protoc_insertion_point(destructor:injective.oracle.v1beta1.MsgUpdateParams)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgUpdateParams::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.authority_.Destroy();
  if (this != internal_default_instance()) delete _impl_.params_;
}

void MsgUpdateParams::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgUpdateParams::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.oracle.v1beta1.MsgUpdateParams)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.authority_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.params_ != nullptr);
    _impl_.params_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgUpdateParams::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_authority();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.oracle.v1beta1.MsgUpdateParams.authority"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .injective.oracle.v1beta1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgUpdateParams::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.oracle.v1beta1.MsgUpdateParams)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_authority().empty()) {
    const std::string& _s = this->_internal_authority();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.oracle.v1beta1.MsgUpdateParams.authority");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .injective.oracle.v1beta1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.oracle.v1beta1.MsgUpdateParams)
  return target;
}

::size_t MsgUpdateParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.oracle.v1beta1.MsgUpdateParams)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_authority().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_authority());
  }

  // .injective.oracle.v1beta1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgUpdateParams::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgUpdateParams::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgUpdateParams::GetClassData() const { return &_class_data_; }


void MsgUpdateParams::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgUpdateParams*>(&to_msg);
  auto& from = static_cast<const MsgUpdateParams&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.oracle.v1beta1.MsgUpdateParams)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_authority().empty()) {
    _this->_internal_set_authority(from._internal_authority());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_params()->::injective::oracle::v1beta1::Params::MergeFrom(
        from._internal_params());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgUpdateParams::CopyFrom(const MsgUpdateParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.oracle.v1beta1.MsgUpdateParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgUpdateParams::IsInitialized() const {
  return true;
}

void MsgUpdateParams::InternalSwap(MsgUpdateParams* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.authority_, lhs_arena,
                                       &other->_impl_.authority_, rhs_arena);
  swap(_impl_.params_, other->_impl_.params_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgUpdateParams::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2foracle_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_injective_2foracle_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_injective_2foracle_2fv1beta1_2ftx_2eproto[12]);
}
// ===================================================================

class MsgUpdateParamsResponse::_Internal {
 public:
};

MsgUpdateParamsResponse::MsgUpdateParamsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.oracle.v1beta1.MsgUpdateParamsResponse)
}
MsgUpdateParamsResponse::MsgUpdateParamsResponse(const MsgUpdateParamsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgUpdateParamsResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.oracle.v1beta1.MsgUpdateParamsResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgUpdateParamsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgUpdateParamsResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgUpdateParamsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2foracle_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_injective_2foracle_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_injective_2foracle_2fv1beta1_2ftx_2eproto[13]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace oracle
}  // namespace injective
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::injective::oracle::v1beta1::MsgRelayProviderPrices*
Arena::CreateMaybeMessage< ::injective::oracle::v1beta1::MsgRelayProviderPrices >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::oracle::v1beta1::MsgRelayProviderPrices >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::oracle::v1beta1::MsgRelayProviderPricesResponse*
Arena::CreateMaybeMessage< ::injective::oracle::v1beta1::MsgRelayProviderPricesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::oracle::v1beta1::MsgRelayProviderPricesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::oracle::v1beta1::MsgRelayPriceFeedPrice*
Arena::CreateMaybeMessage< ::injective::oracle::v1beta1::MsgRelayPriceFeedPrice >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::oracle::v1beta1::MsgRelayPriceFeedPrice >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::oracle::v1beta1::MsgRelayPriceFeedPriceResponse*
Arena::CreateMaybeMessage< ::injective::oracle::v1beta1::MsgRelayPriceFeedPriceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::oracle::v1beta1::MsgRelayPriceFeedPriceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::oracle::v1beta1::MsgRelayBandRates*
Arena::CreateMaybeMessage< ::injective::oracle::v1beta1::MsgRelayBandRates >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::oracle::v1beta1::MsgRelayBandRates >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::oracle::v1beta1::MsgRelayBandRatesResponse*
Arena::CreateMaybeMessage< ::injective::oracle::v1beta1::MsgRelayBandRatesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::oracle::v1beta1::MsgRelayBandRatesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::oracle::v1beta1::MsgRelayCoinbaseMessages*
Arena::CreateMaybeMessage< ::injective::oracle::v1beta1::MsgRelayCoinbaseMessages >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::oracle::v1beta1::MsgRelayCoinbaseMessages >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::oracle::v1beta1::MsgRelayCoinbaseMessagesResponse*
Arena::CreateMaybeMessage< ::injective::oracle::v1beta1::MsgRelayCoinbaseMessagesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::oracle::v1beta1::MsgRelayCoinbaseMessagesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::oracle::v1beta1::MsgRequestBandIBCRates*
Arena::CreateMaybeMessage< ::injective::oracle::v1beta1::MsgRequestBandIBCRates >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::oracle::v1beta1::MsgRequestBandIBCRates >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::oracle::v1beta1::MsgRequestBandIBCRatesResponse*
Arena::CreateMaybeMessage< ::injective::oracle::v1beta1::MsgRequestBandIBCRatesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::oracle::v1beta1::MsgRequestBandIBCRatesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::oracle::v1beta1::MsgRelayPythPrices*
Arena::CreateMaybeMessage< ::injective::oracle::v1beta1::MsgRelayPythPrices >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::oracle::v1beta1::MsgRelayPythPrices >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::oracle::v1beta1::MsgRelayPythPricesResponse*
Arena::CreateMaybeMessage< ::injective::oracle::v1beta1::MsgRelayPythPricesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::oracle::v1beta1::MsgRelayPythPricesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::oracle::v1beta1::MsgUpdateParams*
Arena::CreateMaybeMessage< ::injective::oracle::v1beta1::MsgUpdateParams >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::oracle::v1beta1::MsgUpdateParams >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::oracle::v1beta1::MsgUpdateParamsResponse*
Arena::CreateMaybeMessage< ::injective::oracle::v1beta1::MsgUpdateParamsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::oracle::v1beta1::MsgUpdateParamsResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
