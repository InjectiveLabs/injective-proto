// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: injective/oracle/v1beta1/genesis.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_injective_2foracle_2fv1beta1_2fgenesis_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_injective_2foracle_2fv1beta1_2fgenesis_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4023000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4023004 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "injective/oracle/v1beta1/oracle.pb.h"
#include "gogoproto/gogo.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_injective_2foracle_2fv1beta1_2fgenesis_2eproto

PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_injective_2foracle_2fv1beta1_2fgenesis_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable
    descriptor_table_injective_2foracle_2fv1beta1_2fgenesis_2eproto;
namespace injective {
namespace oracle {
namespace v1beta1 {
class CalldataRecord;
struct CalldataRecordDefaultTypeInternal;
extern CalldataRecordDefaultTypeInternal _CalldataRecord_default_instance_;
class GenesisState;
struct GenesisStateDefaultTypeInternal;
extern GenesisStateDefaultTypeInternal _GenesisState_default_instance_;
}  // namespace v1beta1
}  // namespace oracle
}  // namespace injective
PROTOBUF_NAMESPACE_OPEN
template <>
::injective::oracle::v1beta1::CalldataRecord* Arena::CreateMaybeMessage<::injective::oracle::v1beta1::CalldataRecord>(Arena*);
template <>
::injective::oracle::v1beta1::GenesisState* Arena::CreateMaybeMessage<::injective::oracle::v1beta1::GenesisState>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

namespace injective {
namespace oracle {
namespace v1beta1 {

// ===================================================================


// -------------------------------------------------------------------

class GenesisState final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:injective.oracle.v1beta1.GenesisState) */ {
 public:
  inline GenesisState() : GenesisState(nullptr) {}
  ~GenesisState() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GenesisState(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GenesisState(const GenesisState& from);
  GenesisState(GenesisState&& from) noexcept
    : GenesisState() {
    *this = ::std::move(from);
  }

  inline GenesisState& operator=(const GenesisState& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenesisState& operator=(GenesisState&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GenesisState& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenesisState* internal_default_instance() {
    return reinterpret_cast<const GenesisState*>(
               &_GenesisState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(GenesisState& a, GenesisState& b) {
    a.Swap(&b);
  }
  inline void Swap(GenesisState* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenesisState* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GenesisState* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GenesisState>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GenesisState& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GenesisState& from) {
    GenesisState::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenesisState* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "injective.oracle.v1beta1.GenesisState";
  }
  protected:
  explicit GenesisState(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBandRelayersFieldNumber = 2,
    kBandPriceStatesFieldNumber = 3,
    kPriceFeedPriceStatesFieldNumber = 4,
    kCoinbasePriceStatesFieldNumber = 5,
    kBandIbcPriceStatesFieldNumber = 6,
    kBandIbcOracleRequestsFieldNumber = 7,
    kCalldataRecordsFieldNumber = 10,
    kChainlinkPriceStatesFieldNumber = 12,
    kHistoricalPriceRecordsFieldNumber = 13,
    kProviderStatesFieldNumber = 14,
    kPythPriceStatesFieldNumber = 15,
    kParamsFieldNumber = 1,
    kBandIbcParamsFieldNumber = 8,
    kBandIbcLatestClientIdFieldNumber = 9,
    kBandIbcLatestRequestIdFieldNumber = 11,
  };
  // repeated string band_relayers = 2 [json_name = "bandRelayers"];
  int band_relayers_size() const;
  private:
  int _internal_band_relayers_size() const;

  public:
  void clear_band_relayers() ;
  const std::string& band_relayers(int index) const;
  std::string* mutable_band_relayers(int index);
  void set_band_relayers(int index, const std::string& value);
  void set_band_relayers(int index, std::string&& value);
  void set_band_relayers(int index, const char* value);
  void set_band_relayers(int index, const char* value, std::size_t size);
  void set_band_relayers(int index, absl::string_view value);
  std::string* add_band_relayers();
  void add_band_relayers(const std::string& value);
  void add_band_relayers(std::string&& value);
  void add_band_relayers(const char* value);
  void add_band_relayers(const char* value, std::size_t size);
  void add_band_relayers(absl::string_view value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& band_relayers() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_band_relayers();

  private:
  const std::string& _internal_band_relayers(int index) const;
  std::string* _internal_add_band_relayers();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& _internal_band_relayers() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* _internal_mutable_band_relayers();

  public:
  // repeated .injective.oracle.v1beta1.BandPriceState band_price_states = 3 [json_name = "bandPriceStates"];
  int band_price_states_size() const;
  private:
  int _internal_band_price_states_size() const;

  public:
  void clear_band_price_states() ;
  ::injective::oracle::v1beta1::BandPriceState* mutable_band_price_states(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::injective::oracle::v1beta1::BandPriceState >*
      mutable_band_price_states();
  private:
  const ::injective::oracle::v1beta1::BandPriceState& _internal_band_price_states(int index) const;
  ::injective::oracle::v1beta1::BandPriceState* _internal_add_band_price_states();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::injective::oracle::v1beta1::BandPriceState>& _internal_band_price_states() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::injective::oracle::v1beta1::BandPriceState>* _internal_mutable_band_price_states();
  public:
  const ::injective::oracle::v1beta1::BandPriceState& band_price_states(int index) const;
  ::injective::oracle::v1beta1::BandPriceState* add_band_price_states();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::injective::oracle::v1beta1::BandPriceState >&
      band_price_states() const;
  // repeated .injective.oracle.v1beta1.PriceFeedState price_feed_price_states = 4 [json_name = "priceFeedPriceStates"];
  int price_feed_price_states_size() const;
  private:
  int _internal_price_feed_price_states_size() const;

  public:
  void clear_price_feed_price_states() ;
  ::injective::oracle::v1beta1::PriceFeedState* mutable_price_feed_price_states(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::injective::oracle::v1beta1::PriceFeedState >*
      mutable_price_feed_price_states();
  private:
  const ::injective::oracle::v1beta1::PriceFeedState& _internal_price_feed_price_states(int index) const;
  ::injective::oracle::v1beta1::PriceFeedState* _internal_add_price_feed_price_states();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::injective::oracle::v1beta1::PriceFeedState>& _internal_price_feed_price_states() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::injective::oracle::v1beta1::PriceFeedState>* _internal_mutable_price_feed_price_states();
  public:
  const ::injective::oracle::v1beta1::PriceFeedState& price_feed_price_states(int index) const;
  ::injective::oracle::v1beta1::PriceFeedState* add_price_feed_price_states();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::injective::oracle::v1beta1::PriceFeedState >&
      price_feed_price_states() const;
  // repeated .injective.oracle.v1beta1.CoinbasePriceState coinbase_price_states = 5 [json_name = "coinbasePriceStates"];
  int coinbase_price_states_size() const;
  private:
  int _internal_coinbase_price_states_size() const;

  public:
  void clear_coinbase_price_states() ;
  ::injective::oracle::v1beta1::CoinbasePriceState* mutable_coinbase_price_states(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::injective::oracle::v1beta1::CoinbasePriceState >*
      mutable_coinbase_price_states();
  private:
  const ::injective::oracle::v1beta1::CoinbasePriceState& _internal_coinbase_price_states(int index) const;
  ::injective::oracle::v1beta1::CoinbasePriceState* _internal_add_coinbase_price_states();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::injective::oracle::v1beta1::CoinbasePriceState>& _internal_coinbase_price_states() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::injective::oracle::v1beta1::CoinbasePriceState>* _internal_mutable_coinbase_price_states();
  public:
  const ::injective::oracle::v1beta1::CoinbasePriceState& coinbase_price_states(int index) const;
  ::injective::oracle::v1beta1::CoinbasePriceState* add_coinbase_price_states();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::injective::oracle::v1beta1::CoinbasePriceState >&
      coinbase_price_states() const;
  // repeated .injective.oracle.v1beta1.BandPriceState band_ibc_price_states = 6 [json_name = "bandIbcPriceStates"];
  int band_ibc_price_states_size() const;
  private:
  int _internal_band_ibc_price_states_size() const;

  public:
  void clear_band_ibc_price_states() ;
  ::injective::oracle::v1beta1::BandPriceState* mutable_band_ibc_price_states(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::injective::oracle::v1beta1::BandPriceState >*
      mutable_band_ibc_price_states();
  private:
  const ::injective::oracle::v1beta1::BandPriceState& _internal_band_ibc_price_states(int index) const;
  ::injective::oracle::v1beta1::BandPriceState* _internal_add_band_ibc_price_states();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::injective::oracle::v1beta1::BandPriceState>& _internal_band_ibc_price_states() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::injective::oracle::v1beta1::BandPriceState>* _internal_mutable_band_ibc_price_states();
  public:
  const ::injective::oracle::v1beta1::BandPriceState& band_ibc_price_states(int index) const;
  ::injective::oracle::v1beta1::BandPriceState* add_band_ibc_price_states();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::injective::oracle::v1beta1::BandPriceState >&
      band_ibc_price_states() const;
  // repeated .injective.oracle.v1beta1.BandOracleRequest band_ibc_oracle_requests = 7 [json_name = "bandIbcOracleRequests"];
  int band_ibc_oracle_requests_size() const;
  private:
  int _internal_band_ibc_oracle_requests_size() const;

  public:
  void clear_band_ibc_oracle_requests() ;
  ::injective::oracle::v1beta1::BandOracleRequest* mutable_band_ibc_oracle_requests(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::injective::oracle::v1beta1::BandOracleRequest >*
      mutable_band_ibc_oracle_requests();
  private:
  const ::injective::oracle::v1beta1::BandOracleRequest& _internal_band_ibc_oracle_requests(int index) const;
  ::injective::oracle::v1beta1::BandOracleRequest* _internal_add_band_ibc_oracle_requests();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::injective::oracle::v1beta1::BandOracleRequest>& _internal_band_ibc_oracle_requests() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::injective::oracle::v1beta1::BandOracleRequest>* _internal_mutable_band_ibc_oracle_requests();
  public:
  const ::injective::oracle::v1beta1::BandOracleRequest& band_ibc_oracle_requests(int index) const;
  ::injective::oracle::v1beta1::BandOracleRequest* add_band_ibc_oracle_requests();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::injective::oracle::v1beta1::BandOracleRequest >&
      band_ibc_oracle_requests() const;
  // repeated .injective.oracle.v1beta1.CalldataRecord calldata_records = 10 [json_name = "calldataRecords"];
  int calldata_records_size() const;
  private:
  int _internal_calldata_records_size() const;

  public:
  void clear_calldata_records() ;
  ::injective::oracle::v1beta1::CalldataRecord* mutable_calldata_records(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::injective::oracle::v1beta1::CalldataRecord >*
      mutable_calldata_records();
  private:
  const ::injective::oracle::v1beta1::CalldataRecord& _internal_calldata_records(int index) const;
  ::injective::oracle::v1beta1::CalldataRecord* _internal_add_calldata_records();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::injective::oracle::v1beta1::CalldataRecord>& _internal_calldata_records() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::injective::oracle::v1beta1::CalldataRecord>* _internal_mutable_calldata_records();
  public:
  const ::injective::oracle::v1beta1::CalldataRecord& calldata_records(int index) const;
  ::injective::oracle::v1beta1::CalldataRecord* add_calldata_records();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::injective::oracle::v1beta1::CalldataRecord >&
      calldata_records() const;
  // repeated .injective.oracle.v1beta1.ChainlinkPriceState chainlink_price_states = 12 [json_name = "chainlinkPriceStates"];
  int chainlink_price_states_size() const;
  private:
  int _internal_chainlink_price_states_size() const;

  public:
  void clear_chainlink_price_states() ;
  ::injective::oracle::v1beta1::ChainlinkPriceState* mutable_chainlink_price_states(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::injective::oracle::v1beta1::ChainlinkPriceState >*
      mutable_chainlink_price_states();
  private:
  const ::injective::oracle::v1beta1::ChainlinkPriceState& _internal_chainlink_price_states(int index) const;
  ::injective::oracle::v1beta1::ChainlinkPriceState* _internal_add_chainlink_price_states();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::injective::oracle::v1beta1::ChainlinkPriceState>& _internal_chainlink_price_states() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::injective::oracle::v1beta1::ChainlinkPriceState>* _internal_mutable_chainlink_price_states();
  public:
  const ::injective::oracle::v1beta1::ChainlinkPriceState& chainlink_price_states(int index) const;
  ::injective::oracle::v1beta1::ChainlinkPriceState* add_chainlink_price_states();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::injective::oracle::v1beta1::ChainlinkPriceState >&
      chainlink_price_states() const;
  // repeated .injective.oracle.v1beta1.PriceRecords historical_price_records = 13 [json_name = "historicalPriceRecords"];
  int historical_price_records_size() const;
  private:
  int _internal_historical_price_records_size() const;

  public:
  void clear_historical_price_records() ;
  ::injective::oracle::v1beta1::PriceRecords* mutable_historical_price_records(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::injective::oracle::v1beta1::PriceRecords >*
      mutable_historical_price_records();
  private:
  const ::injective::oracle::v1beta1::PriceRecords& _internal_historical_price_records(int index) const;
  ::injective::oracle::v1beta1::PriceRecords* _internal_add_historical_price_records();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::injective::oracle::v1beta1::PriceRecords>& _internal_historical_price_records() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::injective::oracle::v1beta1::PriceRecords>* _internal_mutable_historical_price_records();
  public:
  const ::injective::oracle::v1beta1::PriceRecords& historical_price_records(int index) const;
  ::injective::oracle::v1beta1::PriceRecords* add_historical_price_records();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::injective::oracle::v1beta1::PriceRecords >&
      historical_price_records() const;
  // repeated .injective.oracle.v1beta1.ProviderState provider_states = 14 [json_name = "providerStates"];
  int provider_states_size() const;
  private:
  int _internal_provider_states_size() const;

  public:
  void clear_provider_states() ;
  ::injective::oracle::v1beta1::ProviderState* mutable_provider_states(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::injective::oracle::v1beta1::ProviderState >*
      mutable_provider_states();
  private:
  const ::injective::oracle::v1beta1::ProviderState& _internal_provider_states(int index) const;
  ::injective::oracle::v1beta1::ProviderState* _internal_add_provider_states();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::injective::oracle::v1beta1::ProviderState>& _internal_provider_states() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::injective::oracle::v1beta1::ProviderState>* _internal_mutable_provider_states();
  public:
  const ::injective::oracle::v1beta1::ProviderState& provider_states(int index) const;
  ::injective::oracle::v1beta1::ProviderState* add_provider_states();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::injective::oracle::v1beta1::ProviderState >&
      provider_states() const;
  // repeated .injective.oracle.v1beta1.PythPriceState pyth_price_states = 15 [json_name = "pythPriceStates"];
  int pyth_price_states_size() const;
  private:
  int _internal_pyth_price_states_size() const;

  public:
  void clear_pyth_price_states() ;
  ::injective::oracle::v1beta1::PythPriceState* mutable_pyth_price_states(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::injective::oracle::v1beta1::PythPriceState >*
      mutable_pyth_price_states();
  private:
  const ::injective::oracle::v1beta1::PythPriceState& _internal_pyth_price_states(int index) const;
  ::injective::oracle::v1beta1::PythPriceState* _internal_add_pyth_price_states();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::injective::oracle::v1beta1::PythPriceState>& _internal_pyth_price_states() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::injective::oracle::v1beta1::PythPriceState>* _internal_mutable_pyth_price_states();
  public:
  const ::injective::oracle::v1beta1::PythPriceState& pyth_price_states(int index) const;
  ::injective::oracle::v1beta1::PythPriceState* add_pyth_price_states();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::injective::oracle::v1beta1::PythPriceState >&
      pyth_price_states() const;
  // .injective.oracle.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];
  bool has_params() const;
  void clear_params() ;
  const ::injective::oracle::v1beta1::Params& params() const;
  PROTOBUF_NODISCARD ::injective::oracle::v1beta1::Params* release_params();
  ::injective::oracle::v1beta1::Params* mutable_params();
  void set_allocated_params(::injective::oracle::v1beta1::Params* params);
  private:
  const ::injective::oracle::v1beta1::Params& _internal_params() const;
  ::injective::oracle::v1beta1::Params* _internal_mutable_params();
  public:
  void unsafe_arena_set_allocated_params(
      ::injective::oracle::v1beta1::Params* params);
  ::injective::oracle::v1beta1::Params* unsafe_arena_release_params();
  // .injective.oracle.v1beta1.BandIBCParams band_ibc_params = 8 [json_name = "bandIbcParams", (.gogoproto.nullable) = false];
  bool has_band_ibc_params() const;
  void clear_band_ibc_params() ;
  const ::injective::oracle::v1beta1::BandIBCParams& band_ibc_params() const;
  PROTOBUF_NODISCARD ::injective::oracle::v1beta1::BandIBCParams* release_band_ibc_params();
  ::injective::oracle::v1beta1::BandIBCParams* mutable_band_ibc_params();
  void set_allocated_band_ibc_params(::injective::oracle::v1beta1::BandIBCParams* band_ibc_params);
  private:
  const ::injective::oracle::v1beta1::BandIBCParams& _internal_band_ibc_params() const;
  ::injective::oracle::v1beta1::BandIBCParams* _internal_mutable_band_ibc_params();
  public:
  void unsafe_arena_set_allocated_band_ibc_params(
      ::injective::oracle::v1beta1::BandIBCParams* band_ibc_params);
  ::injective::oracle::v1beta1::BandIBCParams* unsafe_arena_release_band_ibc_params();
  // uint64 band_ibc_latest_client_id = 9 [json_name = "bandIbcLatestClientId"];
  void clear_band_ibc_latest_client_id() ;
  ::uint64_t band_ibc_latest_client_id() const;
  void set_band_ibc_latest_client_id(::uint64_t value);

  private:
  ::uint64_t _internal_band_ibc_latest_client_id() const;
  void _internal_set_band_ibc_latest_client_id(::uint64_t value);

  public:
  // uint64 band_ibc_latest_request_id = 11 [json_name = "bandIbcLatestRequestId"];
  void clear_band_ibc_latest_request_id() ;
  ::uint64_t band_ibc_latest_request_id() const;
  void set_band_ibc_latest_request_id(::uint64_t value);

  private:
  ::uint64_t _internal_band_ibc_latest_request_id() const;
  void _internal_set_band_ibc_latest_request_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:injective.oracle.v1beta1.GenesisState)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> band_relayers_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::injective::oracle::v1beta1::BandPriceState > band_price_states_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::injective::oracle::v1beta1::PriceFeedState > price_feed_price_states_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::injective::oracle::v1beta1::CoinbasePriceState > coinbase_price_states_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::injective::oracle::v1beta1::BandPriceState > band_ibc_price_states_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::injective::oracle::v1beta1::BandOracleRequest > band_ibc_oracle_requests_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::injective::oracle::v1beta1::CalldataRecord > calldata_records_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::injective::oracle::v1beta1::ChainlinkPriceState > chainlink_price_states_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::injective::oracle::v1beta1::PriceRecords > historical_price_records_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::injective::oracle::v1beta1::ProviderState > provider_states_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::injective::oracle::v1beta1::PythPriceState > pyth_price_states_;
    ::injective::oracle::v1beta1::Params* params_;
    ::injective::oracle::v1beta1::BandIBCParams* band_ibc_params_;
    ::uint64_t band_ibc_latest_client_id_;
    ::uint64_t band_ibc_latest_request_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_injective_2foracle_2fv1beta1_2fgenesis_2eproto;
};// -------------------------------------------------------------------

class CalldataRecord final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:injective.oracle.v1beta1.CalldataRecord) */ {
 public:
  inline CalldataRecord() : CalldataRecord(nullptr) {}
  ~CalldataRecord() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CalldataRecord(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CalldataRecord(const CalldataRecord& from);
  CalldataRecord(CalldataRecord&& from) noexcept
    : CalldataRecord() {
    *this = ::std::move(from);
  }

  inline CalldataRecord& operator=(const CalldataRecord& from) {
    CopyFrom(from);
    return *this;
  }
  inline CalldataRecord& operator=(CalldataRecord&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CalldataRecord& default_instance() {
    return *internal_default_instance();
  }
  static inline const CalldataRecord* internal_default_instance() {
    return reinterpret_cast<const CalldataRecord*>(
               &_CalldataRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CalldataRecord& a, CalldataRecord& b) {
    a.Swap(&b);
  }
  inline void Swap(CalldataRecord* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CalldataRecord* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CalldataRecord* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CalldataRecord>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CalldataRecord& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CalldataRecord& from) {
    CalldataRecord::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CalldataRecord* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "injective.oracle.v1beta1.CalldataRecord";
  }
  protected:
  explicit CalldataRecord(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCalldataFieldNumber = 2,
    kClientIdFieldNumber = 1,
  };
  // bytes calldata = 2 [json_name = "calldata"];
  void clear_calldata() ;
  const std::string& calldata() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_calldata(Arg_&& arg, Args_... args);
  std::string* mutable_calldata();
  PROTOBUF_NODISCARD std::string* release_calldata();
  void set_allocated_calldata(std::string* ptr);

  private:
  const std::string& _internal_calldata() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_calldata(
      const std::string& value);
  std::string* _internal_mutable_calldata();

  public:
  // uint64 client_id = 1 [json_name = "clientId"];
  void clear_client_id() ;
  ::uint64_t client_id() const;
  void set_client_id(::uint64_t value);

  private:
  ::uint64_t _internal_client_id() const;
  void _internal_set_client_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:injective.oracle.v1beta1.CalldataRecord)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr calldata_;
    ::uint64_t client_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_injective_2foracle_2fv1beta1_2fgenesis_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// GenesisState

// .injective.oracle.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];
inline bool GenesisState::has_params() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.params_ != nullptr);
  return value;
}
inline const ::injective::oracle::v1beta1::Params& GenesisState::_internal_params() const {
  const ::injective::oracle::v1beta1::Params* p = _impl_.params_;
  return p != nullptr ? *p : reinterpret_cast<const ::injective::oracle::v1beta1::Params&>(
      ::injective::oracle::v1beta1::_Params_default_instance_);
}
inline const ::injective::oracle::v1beta1::Params& GenesisState::params() const {
  // @@protoc_insertion_point(field_get:injective.oracle.v1beta1.GenesisState.params)
  return _internal_params();
}
inline void GenesisState::unsafe_arena_set_allocated_params(
    ::injective::oracle::v1beta1::Params* params) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.params_);
  }
  _impl_.params_ = params;
  if (params) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:injective.oracle.v1beta1.GenesisState.params)
}
inline ::injective::oracle::v1beta1::Params* GenesisState::release_params() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::injective::oracle::v1beta1::Params* temp = _impl_.params_;
  _impl_.params_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::injective::oracle::v1beta1::Params* GenesisState::unsafe_arena_release_params() {
  // @@protoc_insertion_point(field_release:injective.oracle.v1beta1.GenesisState.params)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::injective::oracle::v1beta1::Params* temp = _impl_.params_;
  _impl_.params_ = nullptr;
  return temp;
}
inline ::injective::oracle::v1beta1::Params* GenesisState::_internal_mutable_params() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.params_ == nullptr) {
    auto* p = CreateMaybeMessage<::injective::oracle::v1beta1::Params>(GetArenaForAllocation());
    _impl_.params_ = p;
  }
  return _impl_.params_;
}
inline ::injective::oracle::v1beta1::Params* GenesisState::mutable_params() {
  ::injective::oracle::v1beta1::Params* _msg = _internal_mutable_params();
  // @@protoc_insertion_point(field_mutable:injective.oracle.v1beta1.GenesisState.params)
  return _msg;
}
inline void GenesisState::set_allocated_params(::injective::oracle::v1beta1::Params* params) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.params_);
  }
  if (params) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(params));
    if (message_arena != submessage_arena) {
      params = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, params, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.params_ = params;
  // @@protoc_insertion_point(field_set_allocated:injective.oracle.v1beta1.GenesisState.params)
}

// repeated string band_relayers = 2 [json_name = "bandRelayers"];
inline int GenesisState::_internal_band_relayers_size() const {
  return _impl_.band_relayers_.size();
}
inline int GenesisState::band_relayers_size() const {
  return _internal_band_relayers_size();
}
inline void GenesisState::clear_band_relayers() {
  _internal_mutable_band_relayers()->Clear();
}
inline std::string* GenesisState::add_band_relayers() {
  std::string* _s = _internal_add_band_relayers();
  // @@protoc_insertion_point(field_add_mutable:injective.oracle.v1beta1.GenesisState.band_relayers)
  return _s;
}
inline const std::string& GenesisState::band_relayers(int index) const {
  // @@protoc_insertion_point(field_get:injective.oracle.v1beta1.GenesisState.band_relayers)
  return _internal_band_relayers(index);
}
inline std::string* GenesisState::mutable_band_relayers(int index) {
  // @@protoc_insertion_point(field_mutable:injective.oracle.v1beta1.GenesisState.band_relayers)
  return _internal_mutable_band_relayers()->Mutable(index);
}
inline void GenesisState::set_band_relayers(int index, const std::string& value) {
  _internal_mutable_band_relayers()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:injective.oracle.v1beta1.GenesisState.band_relayers)
}
inline void GenesisState::set_band_relayers(int index, std::string&& value) {
  _internal_mutable_band_relayers()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:injective.oracle.v1beta1.GenesisState.band_relayers)
}
inline void GenesisState::set_band_relayers(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_band_relayers()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:injective.oracle.v1beta1.GenesisState.band_relayers)
}
inline void GenesisState::set_band_relayers(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_band_relayers()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:injective.oracle.v1beta1.GenesisState.band_relayers)
}
inline void GenesisState::set_band_relayers(int index, absl::string_view value) {
  _internal_mutable_band_relayers()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:injective.oracle.v1beta1.GenesisState.band_relayers)
}
inline void GenesisState::add_band_relayers(const std::string& value) {
  _internal_mutable_band_relayers()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:injective.oracle.v1beta1.GenesisState.band_relayers)
}
inline void GenesisState::add_band_relayers(std::string&& value) {
  _internal_mutable_band_relayers()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:injective.oracle.v1beta1.GenesisState.band_relayers)
}
inline void GenesisState::add_band_relayers(const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_band_relayers()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:injective.oracle.v1beta1.GenesisState.band_relayers)
}
inline void GenesisState::add_band_relayers(const char* value, std::size_t size) {
  _internal_mutable_band_relayers()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:injective.oracle.v1beta1.GenesisState.band_relayers)
}
inline void GenesisState::add_band_relayers(absl::string_view value) {
  _internal_mutable_band_relayers()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:injective.oracle.v1beta1.GenesisState.band_relayers)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
GenesisState::band_relayers() const {
  // @@protoc_insertion_point(field_list:injective.oracle.v1beta1.GenesisState.band_relayers)
  return _internal_band_relayers();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* GenesisState::mutable_band_relayers() {
  // @@protoc_insertion_point(field_mutable_list:injective.oracle.v1beta1.GenesisState.band_relayers)
  return _internal_mutable_band_relayers();
}
inline const std::string& GenesisState::_internal_band_relayers(int index) const {
  return _internal_band_relayers().Get(index);
}
inline std::string* GenesisState::_internal_add_band_relayers() {
  return _internal_mutable_band_relayers()->Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
GenesisState::_internal_band_relayers() const {
  return _impl_.band_relayers_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
GenesisState::_internal_mutable_band_relayers() {
  return &_impl_.band_relayers_;
}

// repeated .injective.oracle.v1beta1.BandPriceState band_price_states = 3 [json_name = "bandPriceStates"];
inline int GenesisState::_internal_band_price_states_size() const {
  return _impl_.band_price_states_.size();
}
inline int GenesisState::band_price_states_size() const {
  return _internal_band_price_states_size();
}
inline ::injective::oracle::v1beta1::BandPriceState* GenesisState::mutable_band_price_states(int index) {
  // @@protoc_insertion_point(field_mutable:injective.oracle.v1beta1.GenesisState.band_price_states)
  return _internal_mutable_band_price_states()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::injective::oracle::v1beta1::BandPriceState >*
GenesisState::mutable_band_price_states() {
  // @@protoc_insertion_point(field_mutable_list:injective.oracle.v1beta1.GenesisState.band_price_states)
  return _internal_mutable_band_price_states();
}
inline const ::injective::oracle::v1beta1::BandPriceState& GenesisState::_internal_band_price_states(int index) const {
  return _internal_band_price_states().Get(index);
}
inline const ::injective::oracle::v1beta1::BandPriceState& GenesisState::band_price_states(int index) const {
  // @@protoc_insertion_point(field_get:injective.oracle.v1beta1.GenesisState.band_price_states)
  return _internal_band_price_states(index);
}
inline ::injective::oracle::v1beta1::BandPriceState* GenesisState::_internal_add_band_price_states() {
  return _internal_mutable_band_price_states()->Add();
}
inline ::injective::oracle::v1beta1::BandPriceState* GenesisState::add_band_price_states() {
  ::injective::oracle::v1beta1::BandPriceState* _add = _internal_add_band_price_states();
  // @@protoc_insertion_point(field_add:injective.oracle.v1beta1.GenesisState.band_price_states)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::injective::oracle::v1beta1::BandPriceState >&
GenesisState::band_price_states() const {
  // @@protoc_insertion_point(field_list:injective.oracle.v1beta1.GenesisState.band_price_states)
  return _internal_band_price_states();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::injective::oracle::v1beta1::BandPriceState>&
GenesisState::_internal_band_price_states() const {
  return _impl_.band_price_states_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::injective::oracle::v1beta1::BandPriceState>*
GenesisState::_internal_mutable_band_price_states() {
  return &_impl_.band_price_states_;
}

// repeated .injective.oracle.v1beta1.PriceFeedState price_feed_price_states = 4 [json_name = "priceFeedPriceStates"];
inline int GenesisState::_internal_price_feed_price_states_size() const {
  return _impl_.price_feed_price_states_.size();
}
inline int GenesisState::price_feed_price_states_size() const {
  return _internal_price_feed_price_states_size();
}
inline ::injective::oracle::v1beta1::PriceFeedState* GenesisState::mutable_price_feed_price_states(int index) {
  // @@protoc_insertion_point(field_mutable:injective.oracle.v1beta1.GenesisState.price_feed_price_states)
  return _internal_mutable_price_feed_price_states()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::injective::oracle::v1beta1::PriceFeedState >*
GenesisState::mutable_price_feed_price_states() {
  // @@protoc_insertion_point(field_mutable_list:injective.oracle.v1beta1.GenesisState.price_feed_price_states)
  return _internal_mutable_price_feed_price_states();
}
inline const ::injective::oracle::v1beta1::PriceFeedState& GenesisState::_internal_price_feed_price_states(int index) const {
  return _internal_price_feed_price_states().Get(index);
}
inline const ::injective::oracle::v1beta1::PriceFeedState& GenesisState::price_feed_price_states(int index) const {
  // @@protoc_insertion_point(field_get:injective.oracle.v1beta1.GenesisState.price_feed_price_states)
  return _internal_price_feed_price_states(index);
}
inline ::injective::oracle::v1beta1::PriceFeedState* GenesisState::_internal_add_price_feed_price_states() {
  return _internal_mutable_price_feed_price_states()->Add();
}
inline ::injective::oracle::v1beta1::PriceFeedState* GenesisState::add_price_feed_price_states() {
  ::injective::oracle::v1beta1::PriceFeedState* _add = _internal_add_price_feed_price_states();
  // @@protoc_insertion_point(field_add:injective.oracle.v1beta1.GenesisState.price_feed_price_states)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::injective::oracle::v1beta1::PriceFeedState >&
GenesisState::price_feed_price_states() const {
  // @@protoc_insertion_point(field_list:injective.oracle.v1beta1.GenesisState.price_feed_price_states)
  return _internal_price_feed_price_states();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::injective::oracle::v1beta1::PriceFeedState>&
GenesisState::_internal_price_feed_price_states() const {
  return _impl_.price_feed_price_states_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::injective::oracle::v1beta1::PriceFeedState>*
GenesisState::_internal_mutable_price_feed_price_states() {
  return &_impl_.price_feed_price_states_;
}

// repeated .injective.oracle.v1beta1.CoinbasePriceState coinbase_price_states = 5 [json_name = "coinbasePriceStates"];
inline int GenesisState::_internal_coinbase_price_states_size() const {
  return _impl_.coinbase_price_states_.size();
}
inline int GenesisState::coinbase_price_states_size() const {
  return _internal_coinbase_price_states_size();
}
inline ::injective::oracle::v1beta1::CoinbasePriceState* GenesisState::mutable_coinbase_price_states(int index) {
  // @@protoc_insertion_point(field_mutable:injective.oracle.v1beta1.GenesisState.coinbase_price_states)
  return _internal_mutable_coinbase_price_states()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::injective::oracle::v1beta1::CoinbasePriceState >*
GenesisState::mutable_coinbase_price_states() {
  // @@protoc_insertion_point(field_mutable_list:injective.oracle.v1beta1.GenesisState.coinbase_price_states)
  return _internal_mutable_coinbase_price_states();
}
inline const ::injective::oracle::v1beta1::CoinbasePriceState& GenesisState::_internal_coinbase_price_states(int index) const {
  return _internal_coinbase_price_states().Get(index);
}
inline const ::injective::oracle::v1beta1::CoinbasePriceState& GenesisState::coinbase_price_states(int index) const {
  // @@protoc_insertion_point(field_get:injective.oracle.v1beta1.GenesisState.coinbase_price_states)
  return _internal_coinbase_price_states(index);
}
inline ::injective::oracle::v1beta1::CoinbasePriceState* GenesisState::_internal_add_coinbase_price_states() {
  return _internal_mutable_coinbase_price_states()->Add();
}
inline ::injective::oracle::v1beta1::CoinbasePriceState* GenesisState::add_coinbase_price_states() {
  ::injective::oracle::v1beta1::CoinbasePriceState* _add = _internal_add_coinbase_price_states();
  // @@protoc_insertion_point(field_add:injective.oracle.v1beta1.GenesisState.coinbase_price_states)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::injective::oracle::v1beta1::CoinbasePriceState >&
GenesisState::coinbase_price_states() const {
  // @@protoc_insertion_point(field_list:injective.oracle.v1beta1.GenesisState.coinbase_price_states)
  return _internal_coinbase_price_states();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::injective::oracle::v1beta1::CoinbasePriceState>&
GenesisState::_internal_coinbase_price_states() const {
  return _impl_.coinbase_price_states_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::injective::oracle::v1beta1::CoinbasePriceState>*
GenesisState::_internal_mutable_coinbase_price_states() {
  return &_impl_.coinbase_price_states_;
}

// repeated .injective.oracle.v1beta1.BandPriceState band_ibc_price_states = 6 [json_name = "bandIbcPriceStates"];
inline int GenesisState::_internal_band_ibc_price_states_size() const {
  return _impl_.band_ibc_price_states_.size();
}
inline int GenesisState::band_ibc_price_states_size() const {
  return _internal_band_ibc_price_states_size();
}
inline ::injective::oracle::v1beta1::BandPriceState* GenesisState::mutable_band_ibc_price_states(int index) {
  // @@protoc_insertion_point(field_mutable:injective.oracle.v1beta1.GenesisState.band_ibc_price_states)
  return _internal_mutable_band_ibc_price_states()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::injective::oracle::v1beta1::BandPriceState >*
GenesisState::mutable_band_ibc_price_states() {
  // @@protoc_insertion_point(field_mutable_list:injective.oracle.v1beta1.GenesisState.band_ibc_price_states)
  return _internal_mutable_band_ibc_price_states();
}
inline const ::injective::oracle::v1beta1::BandPriceState& GenesisState::_internal_band_ibc_price_states(int index) const {
  return _internal_band_ibc_price_states().Get(index);
}
inline const ::injective::oracle::v1beta1::BandPriceState& GenesisState::band_ibc_price_states(int index) const {
  // @@protoc_insertion_point(field_get:injective.oracle.v1beta1.GenesisState.band_ibc_price_states)
  return _internal_band_ibc_price_states(index);
}
inline ::injective::oracle::v1beta1::BandPriceState* GenesisState::_internal_add_band_ibc_price_states() {
  return _internal_mutable_band_ibc_price_states()->Add();
}
inline ::injective::oracle::v1beta1::BandPriceState* GenesisState::add_band_ibc_price_states() {
  ::injective::oracle::v1beta1::BandPriceState* _add = _internal_add_band_ibc_price_states();
  // @@protoc_insertion_point(field_add:injective.oracle.v1beta1.GenesisState.band_ibc_price_states)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::injective::oracle::v1beta1::BandPriceState >&
GenesisState::band_ibc_price_states() const {
  // @@protoc_insertion_point(field_list:injective.oracle.v1beta1.GenesisState.band_ibc_price_states)
  return _internal_band_ibc_price_states();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::injective::oracle::v1beta1::BandPriceState>&
GenesisState::_internal_band_ibc_price_states() const {
  return _impl_.band_ibc_price_states_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::injective::oracle::v1beta1::BandPriceState>*
GenesisState::_internal_mutable_band_ibc_price_states() {
  return &_impl_.band_ibc_price_states_;
}

// repeated .injective.oracle.v1beta1.BandOracleRequest band_ibc_oracle_requests = 7 [json_name = "bandIbcOracleRequests"];
inline int GenesisState::_internal_band_ibc_oracle_requests_size() const {
  return _impl_.band_ibc_oracle_requests_.size();
}
inline int GenesisState::band_ibc_oracle_requests_size() const {
  return _internal_band_ibc_oracle_requests_size();
}
inline ::injective::oracle::v1beta1::BandOracleRequest* GenesisState::mutable_band_ibc_oracle_requests(int index) {
  // @@protoc_insertion_point(field_mutable:injective.oracle.v1beta1.GenesisState.band_ibc_oracle_requests)
  return _internal_mutable_band_ibc_oracle_requests()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::injective::oracle::v1beta1::BandOracleRequest >*
GenesisState::mutable_band_ibc_oracle_requests() {
  // @@protoc_insertion_point(field_mutable_list:injective.oracle.v1beta1.GenesisState.band_ibc_oracle_requests)
  return _internal_mutable_band_ibc_oracle_requests();
}
inline const ::injective::oracle::v1beta1::BandOracleRequest& GenesisState::_internal_band_ibc_oracle_requests(int index) const {
  return _internal_band_ibc_oracle_requests().Get(index);
}
inline const ::injective::oracle::v1beta1::BandOracleRequest& GenesisState::band_ibc_oracle_requests(int index) const {
  // @@protoc_insertion_point(field_get:injective.oracle.v1beta1.GenesisState.band_ibc_oracle_requests)
  return _internal_band_ibc_oracle_requests(index);
}
inline ::injective::oracle::v1beta1::BandOracleRequest* GenesisState::_internal_add_band_ibc_oracle_requests() {
  return _internal_mutable_band_ibc_oracle_requests()->Add();
}
inline ::injective::oracle::v1beta1::BandOracleRequest* GenesisState::add_band_ibc_oracle_requests() {
  ::injective::oracle::v1beta1::BandOracleRequest* _add = _internal_add_band_ibc_oracle_requests();
  // @@protoc_insertion_point(field_add:injective.oracle.v1beta1.GenesisState.band_ibc_oracle_requests)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::injective::oracle::v1beta1::BandOracleRequest >&
GenesisState::band_ibc_oracle_requests() const {
  // @@protoc_insertion_point(field_list:injective.oracle.v1beta1.GenesisState.band_ibc_oracle_requests)
  return _internal_band_ibc_oracle_requests();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::injective::oracle::v1beta1::BandOracleRequest>&
GenesisState::_internal_band_ibc_oracle_requests() const {
  return _impl_.band_ibc_oracle_requests_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::injective::oracle::v1beta1::BandOracleRequest>*
GenesisState::_internal_mutable_band_ibc_oracle_requests() {
  return &_impl_.band_ibc_oracle_requests_;
}

// .injective.oracle.v1beta1.BandIBCParams band_ibc_params = 8 [json_name = "bandIbcParams", (.gogoproto.nullable) = false];
inline bool GenesisState::has_band_ibc_params() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.band_ibc_params_ != nullptr);
  return value;
}
inline const ::injective::oracle::v1beta1::BandIBCParams& GenesisState::_internal_band_ibc_params() const {
  const ::injective::oracle::v1beta1::BandIBCParams* p = _impl_.band_ibc_params_;
  return p != nullptr ? *p : reinterpret_cast<const ::injective::oracle::v1beta1::BandIBCParams&>(
      ::injective::oracle::v1beta1::_BandIBCParams_default_instance_);
}
inline const ::injective::oracle::v1beta1::BandIBCParams& GenesisState::band_ibc_params() const {
  // @@protoc_insertion_point(field_get:injective.oracle.v1beta1.GenesisState.band_ibc_params)
  return _internal_band_ibc_params();
}
inline void GenesisState::unsafe_arena_set_allocated_band_ibc_params(
    ::injective::oracle::v1beta1::BandIBCParams* band_ibc_params) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.band_ibc_params_);
  }
  _impl_.band_ibc_params_ = band_ibc_params;
  if (band_ibc_params) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:injective.oracle.v1beta1.GenesisState.band_ibc_params)
}
inline ::injective::oracle::v1beta1::BandIBCParams* GenesisState::release_band_ibc_params() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::injective::oracle::v1beta1::BandIBCParams* temp = _impl_.band_ibc_params_;
  _impl_.band_ibc_params_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::injective::oracle::v1beta1::BandIBCParams* GenesisState::unsafe_arena_release_band_ibc_params() {
  // @@protoc_insertion_point(field_release:injective.oracle.v1beta1.GenesisState.band_ibc_params)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::injective::oracle::v1beta1::BandIBCParams* temp = _impl_.band_ibc_params_;
  _impl_.band_ibc_params_ = nullptr;
  return temp;
}
inline ::injective::oracle::v1beta1::BandIBCParams* GenesisState::_internal_mutable_band_ibc_params() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.band_ibc_params_ == nullptr) {
    auto* p = CreateMaybeMessage<::injective::oracle::v1beta1::BandIBCParams>(GetArenaForAllocation());
    _impl_.band_ibc_params_ = p;
  }
  return _impl_.band_ibc_params_;
}
inline ::injective::oracle::v1beta1::BandIBCParams* GenesisState::mutable_band_ibc_params() {
  ::injective::oracle::v1beta1::BandIBCParams* _msg = _internal_mutable_band_ibc_params();
  // @@protoc_insertion_point(field_mutable:injective.oracle.v1beta1.GenesisState.band_ibc_params)
  return _msg;
}
inline void GenesisState::set_allocated_band_ibc_params(::injective::oracle::v1beta1::BandIBCParams* band_ibc_params) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.band_ibc_params_);
  }
  if (band_ibc_params) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(band_ibc_params));
    if (message_arena != submessage_arena) {
      band_ibc_params = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, band_ibc_params, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.band_ibc_params_ = band_ibc_params;
  // @@protoc_insertion_point(field_set_allocated:injective.oracle.v1beta1.GenesisState.band_ibc_params)
}

// uint64 band_ibc_latest_client_id = 9 [json_name = "bandIbcLatestClientId"];
inline void GenesisState::clear_band_ibc_latest_client_id() {
  _impl_.band_ibc_latest_client_id_ = ::uint64_t{0u};
}
inline ::uint64_t GenesisState::band_ibc_latest_client_id() const {
  // @@protoc_insertion_point(field_get:injective.oracle.v1beta1.GenesisState.band_ibc_latest_client_id)
  return _internal_band_ibc_latest_client_id();
}
inline void GenesisState::set_band_ibc_latest_client_id(::uint64_t value) {
  _internal_set_band_ibc_latest_client_id(value);
  // @@protoc_insertion_point(field_set:injective.oracle.v1beta1.GenesisState.band_ibc_latest_client_id)
}
inline ::uint64_t GenesisState::_internal_band_ibc_latest_client_id() const {
  return _impl_.band_ibc_latest_client_id_;
}
inline void GenesisState::_internal_set_band_ibc_latest_client_id(::uint64_t value) {
  ;
  _impl_.band_ibc_latest_client_id_ = value;
}

// repeated .injective.oracle.v1beta1.CalldataRecord calldata_records = 10 [json_name = "calldataRecords"];
inline int GenesisState::_internal_calldata_records_size() const {
  return _impl_.calldata_records_.size();
}
inline int GenesisState::calldata_records_size() const {
  return _internal_calldata_records_size();
}
inline void GenesisState::clear_calldata_records() {
  _internal_mutable_calldata_records()->Clear();
}
inline ::injective::oracle::v1beta1::CalldataRecord* GenesisState::mutable_calldata_records(int index) {
  // @@protoc_insertion_point(field_mutable:injective.oracle.v1beta1.GenesisState.calldata_records)
  return _internal_mutable_calldata_records()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::injective::oracle::v1beta1::CalldataRecord >*
GenesisState::mutable_calldata_records() {
  // @@protoc_insertion_point(field_mutable_list:injective.oracle.v1beta1.GenesisState.calldata_records)
  return _internal_mutable_calldata_records();
}
inline const ::injective::oracle::v1beta1::CalldataRecord& GenesisState::_internal_calldata_records(int index) const {
  return _internal_calldata_records().Get(index);
}
inline const ::injective::oracle::v1beta1::CalldataRecord& GenesisState::calldata_records(int index) const {
  // @@protoc_insertion_point(field_get:injective.oracle.v1beta1.GenesisState.calldata_records)
  return _internal_calldata_records(index);
}
inline ::injective::oracle::v1beta1::CalldataRecord* GenesisState::_internal_add_calldata_records() {
  return _internal_mutable_calldata_records()->Add();
}
inline ::injective::oracle::v1beta1::CalldataRecord* GenesisState::add_calldata_records() {
  ::injective::oracle::v1beta1::CalldataRecord* _add = _internal_add_calldata_records();
  // @@protoc_insertion_point(field_add:injective.oracle.v1beta1.GenesisState.calldata_records)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::injective::oracle::v1beta1::CalldataRecord >&
GenesisState::calldata_records() const {
  // @@protoc_insertion_point(field_list:injective.oracle.v1beta1.GenesisState.calldata_records)
  return _internal_calldata_records();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::injective::oracle::v1beta1::CalldataRecord>&
GenesisState::_internal_calldata_records() const {
  return _impl_.calldata_records_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::injective::oracle::v1beta1::CalldataRecord>*
GenesisState::_internal_mutable_calldata_records() {
  return &_impl_.calldata_records_;
}

// uint64 band_ibc_latest_request_id = 11 [json_name = "bandIbcLatestRequestId"];
inline void GenesisState::clear_band_ibc_latest_request_id() {
  _impl_.band_ibc_latest_request_id_ = ::uint64_t{0u};
}
inline ::uint64_t GenesisState::band_ibc_latest_request_id() const {
  // @@protoc_insertion_point(field_get:injective.oracle.v1beta1.GenesisState.band_ibc_latest_request_id)
  return _internal_band_ibc_latest_request_id();
}
inline void GenesisState::set_band_ibc_latest_request_id(::uint64_t value) {
  _internal_set_band_ibc_latest_request_id(value);
  // @@protoc_insertion_point(field_set:injective.oracle.v1beta1.GenesisState.band_ibc_latest_request_id)
}
inline ::uint64_t GenesisState::_internal_band_ibc_latest_request_id() const {
  return _impl_.band_ibc_latest_request_id_;
}
inline void GenesisState::_internal_set_band_ibc_latest_request_id(::uint64_t value) {
  ;
  _impl_.band_ibc_latest_request_id_ = value;
}

// repeated .injective.oracle.v1beta1.ChainlinkPriceState chainlink_price_states = 12 [json_name = "chainlinkPriceStates"];
inline int GenesisState::_internal_chainlink_price_states_size() const {
  return _impl_.chainlink_price_states_.size();
}
inline int GenesisState::chainlink_price_states_size() const {
  return _internal_chainlink_price_states_size();
}
inline ::injective::oracle::v1beta1::ChainlinkPriceState* GenesisState::mutable_chainlink_price_states(int index) {
  // @@protoc_insertion_point(field_mutable:injective.oracle.v1beta1.GenesisState.chainlink_price_states)
  return _internal_mutable_chainlink_price_states()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::injective::oracle::v1beta1::ChainlinkPriceState >*
GenesisState::mutable_chainlink_price_states() {
  // @@protoc_insertion_point(field_mutable_list:injective.oracle.v1beta1.GenesisState.chainlink_price_states)
  return _internal_mutable_chainlink_price_states();
}
inline const ::injective::oracle::v1beta1::ChainlinkPriceState& GenesisState::_internal_chainlink_price_states(int index) const {
  return _internal_chainlink_price_states().Get(index);
}
inline const ::injective::oracle::v1beta1::ChainlinkPriceState& GenesisState::chainlink_price_states(int index) const {
  // @@protoc_insertion_point(field_get:injective.oracle.v1beta1.GenesisState.chainlink_price_states)
  return _internal_chainlink_price_states(index);
}
inline ::injective::oracle::v1beta1::ChainlinkPriceState* GenesisState::_internal_add_chainlink_price_states() {
  return _internal_mutable_chainlink_price_states()->Add();
}
inline ::injective::oracle::v1beta1::ChainlinkPriceState* GenesisState::add_chainlink_price_states() {
  ::injective::oracle::v1beta1::ChainlinkPriceState* _add = _internal_add_chainlink_price_states();
  // @@protoc_insertion_point(field_add:injective.oracle.v1beta1.GenesisState.chainlink_price_states)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::injective::oracle::v1beta1::ChainlinkPriceState >&
GenesisState::chainlink_price_states() const {
  // @@protoc_insertion_point(field_list:injective.oracle.v1beta1.GenesisState.chainlink_price_states)
  return _internal_chainlink_price_states();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::injective::oracle::v1beta1::ChainlinkPriceState>&
GenesisState::_internal_chainlink_price_states() const {
  return _impl_.chainlink_price_states_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::injective::oracle::v1beta1::ChainlinkPriceState>*
GenesisState::_internal_mutable_chainlink_price_states() {
  return &_impl_.chainlink_price_states_;
}

// repeated .injective.oracle.v1beta1.PriceRecords historical_price_records = 13 [json_name = "historicalPriceRecords"];
inline int GenesisState::_internal_historical_price_records_size() const {
  return _impl_.historical_price_records_.size();
}
inline int GenesisState::historical_price_records_size() const {
  return _internal_historical_price_records_size();
}
inline ::injective::oracle::v1beta1::PriceRecords* GenesisState::mutable_historical_price_records(int index) {
  // @@protoc_insertion_point(field_mutable:injective.oracle.v1beta1.GenesisState.historical_price_records)
  return _internal_mutable_historical_price_records()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::injective::oracle::v1beta1::PriceRecords >*
GenesisState::mutable_historical_price_records() {
  // @@protoc_insertion_point(field_mutable_list:injective.oracle.v1beta1.GenesisState.historical_price_records)
  return _internal_mutable_historical_price_records();
}
inline const ::injective::oracle::v1beta1::PriceRecords& GenesisState::_internal_historical_price_records(int index) const {
  return _internal_historical_price_records().Get(index);
}
inline const ::injective::oracle::v1beta1::PriceRecords& GenesisState::historical_price_records(int index) const {
  // @@protoc_insertion_point(field_get:injective.oracle.v1beta1.GenesisState.historical_price_records)
  return _internal_historical_price_records(index);
}
inline ::injective::oracle::v1beta1::PriceRecords* GenesisState::_internal_add_historical_price_records() {
  return _internal_mutable_historical_price_records()->Add();
}
inline ::injective::oracle::v1beta1::PriceRecords* GenesisState::add_historical_price_records() {
  ::injective::oracle::v1beta1::PriceRecords* _add = _internal_add_historical_price_records();
  // @@protoc_insertion_point(field_add:injective.oracle.v1beta1.GenesisState.historical_price_records)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::injective::oracle::v1beta1::PriceRecords >&
GenesisState::historical_price_records() const {
  // @@protoc_insertion_point(field_list:injective.oracle.v1beta1.GenesisState.historical_price_records)
  return _internal_historical_price_records();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::injective::oracle::v1beta1::PriceRecords>&
GenesisState::_internal_historical_price_records() const {
  return _impl_.historical_price_records_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::injective::oracle::v1beta1::PriceRecords>*
GenesisState::_internal_mutable_historical_price_records() {
  return &_impl_.historical_price_records_;
}

// repeated .injective.oracle.v1beta1.ProviderState provider_states = 14 [json_name = "providerStates"];
inline int GenesisState::_internal_provider_states_size() const {
  return _impl_.provider_states_.size();
}
inline int GenesisState::provider_states_size() const {
  return _internal_provider_states_size();
}
inline ::injective::oracle::v1beta1::ProviderState* GenesisState::mutable_provider_states(int index) {
  // @@protoc_insertion_point(field_mutable:injective.oracle.v1beta1.GenesisState.provider_states)
  return _internal_mutable_provider_states()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::injective::oracle::v1beta1::ProviderState >*
GenesisState::mutable_provider_states() {
  // @@protoc_insertion_point(field_mutable_list:injective.oracle.v1beta1.GenesisState.provider_states)
  return _internal_mutable_provider_states();
}
inline const ::injective::oracle::v1beta1::ProviderState& GenesisState::_internal_provider_states(int index) const {
  return _internal_provider_states().Get(index);
}
inline const ::injective::oracle::v1beta1::ProviderState& GenesisState::provider_states(int index) const {
  // @@protoc_insertion_point(field_get:injective.oracle.v1beta1.GenesisState.provider_states)
  return _internal_provider_states(index);
}
inline ::injective::oracle::v1beta1::ProviderState* GenesisState::_internal_add_provider_states() {
  return _internal_mutable_provider_states()->Add();
}
inline ::injective::oracle::v1beta1::ProviderState* GenesisState::add_provider_states() {
  ::injective::oracle::v1beta1::ProviderState* _add = _internal_add_provider_states();
  // @@protoc_insertion_point(field_add:injective.oracle.v1beta1.GenesisState.provider_states)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::injective::oracle::v1beta1::ProviderState >&
GenesisState::provider_states() const {
  // @@protoc_insertion_point(field_list:injective.oracle.v1beta1.GenesisState.provider_states)
  return _internal_provider_states();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::injective::oracle::v1beta1::ProviderState>&
GenesisState::_internal_provider_states() const {
  return _impl_.provider_states_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::injective::oracle::v1beta1::ProviderState>*
GenesisState::_internal_mutable_provider_states() {
  return &_impl_.provider_states_;
}

// repeated .injective.oracle.v1beta1.PythPriceState pyth_price_states = 15 [json_name = "pythPriceStates"];
inline int GenesisState::_internal_pyth_price_states_size() const {
  return _impl_.pyth_price_states_.size();
}
inline int GenesisState::pyth_price_states_size() const {
  return _internal_pyth_price_states_size();
}
inline ::injective::oracle::v1beta1::PythPriceState* GenesisState::mutable_pyth_price_states(int index) {
  // @@protoc_insertion_point(field_mutable:injective.oracle.v1beta1.GenesisState.pyth_price_states)
  return _internal_mutable_pyth_price_states()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::injective::oracle::v1beta1::PythPriceState >*
GenesisState::mutable_pyth_price_states() {
  // @@protoc_insertion_point(field_mutable_list:injective.oracle.v1beta1.GenesisState.pyth_price_states)
  return _internal_mutable_pyth_price_states();
}
inline const ::injective::oracle::v1beta1::PythPriceState& GenesisState::_internal_pyth_price_states(int index) const {
  return _internal_pyth_price_states().Get(index);
}
inline const ::injective::oracle::v1beta1::PythPriceState& GenesisState::pyth_price_states(int index) const {
  // @@protoc_insertion_point(field_get:injective.oracle.v1beta1.GenesisState.pyth_price_states)
  return _internal_pyth_price_states(index);
}
inline ::injective::oracle::v1beta1::PythPriceState* GenesisState::_internal_add_pyth_price_states() {
  return _internal_mutable_pyth_price_states()->Add();
}
inline ::injective::oracle::v1beta1::PythPriceState* GenesisState::add_pyth_price_states() {
  ::injective::oracle::v1beta1::PythPriceState* _add = _internal_add_pyth_price_states();
  // @@protoc_insertion_point(field_add:injective.oracle.v1beta1.GenesisState.pyth_price_states)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::injective::oracle::v1beta1::PythPriceState >&
GenesisState::pyth_price_states() const {
  // @@protoc_insertion_point(field_list:injective.oracle.v1beta1.GenesisState.pyth_price_states)
  return _internal_pyth_price_states();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::injective::oracle::v1beta1::PythPriceState>&
GenesisState::_internal_pyth_price_states() const {
  return _impl_.pyth_price_states_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::injective::oracle::v1beta1::PythPriceState>*
GenesisState::_internal_mutable_pyth_price_states() {
  return &_impl_.pyth_price_states_;
}

// -------------------------------------------------------------------

// CalldataRecord

// uint64 client_id = 1 [json_name = "clientId"];
inline void CalldataRecord::clear_client_id() {
  _impl_.client_id_ = ::uint64_t{0u};
}
inline ::uint64_t CalldataRecord::client_id() const {
  // @@protoc_insertion_point(field_get:injective.oracle.v1beta1.CalldataRecord.client_id)
  return _internal_client_id();
}
inline void CalldataRecord::set_client_id(::uint64_t value) {
  _internal_set_client_id(value);
  // @@protoc_insertion_point(field_set:injective.oracle.v1beta1.CalldataRecord.client_id)
}
inline ::uint64_t CalldataRecord::_internal_client_id() const {
  return _impl_.client_id_;
}
inline void CalldataRecord::_internal_set_client_id(::uint64_t value) {
  ;
  _impl_.client_id_ = value;
}

// bytes calldata = 2 [json_name = "calldata"];
inline void CalldataRecord::clear_calldata() {
  _impl_.calldata_.ClearToEmpty();
}
inline const std::string& CalldataRecord::calldata() const {
  // @@protoc_insertion_point(field_get:injective.oracle.v1beta1.CalldataRecord.calldata)
  return _internal_calldata();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CalldataRecord::set_calldata(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.calldata_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:injective.oracle.v1beta1.CalldataRecord.calldata)
}
inline std::string* CalldataRecord::mutable_calldata() {
  std::string* _s = _internal_mutable_calldata();
  // @@protoc_insertion_point(field_mutable:injective.oracle.v1beta1.CalldataRecord.calldata)
  return _s;
}
inline const std::string& CalldataRecord::_internal_calldata() const {
  return _impl_.calldata_.Get();
}
inline void CalldataRecord::_internal_set_calldata(const std::string& value) {
  ;


  _impl_.calldata_.Set(value, GetArenaForAllocation());
}
inline std::string* CalldataRecord::_internal_mutable_calldata() {
  ;
  return _impl_.calldata_.Mutable( GetArenaForAllocation());
}
inline std::string* CalldataRecord::release_calldata() {
  // @@protoc_insertion_point(field_release:injective.oracle.v1beta1.CalldataRecord.calldata)
  return _impl_.calldata_.Release();
}
inline void CalldataRecord::set_allocated_calldata(std::string* value) {
  _impl_.calldata_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.calldata_.IsDefault()) {
          _impl_.calldata_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:injective.oracle.v1beta1.CalldataRecord.calldata)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace oracle
}  // namespace injective


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_injective_2foracle_2fv1beta1_2fgenesis_2eproto_2epb_2eh
