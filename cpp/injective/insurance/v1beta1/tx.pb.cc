// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: injective/insurance/v1beta1/tx.proto

#include "injective/insurance/v1beta1/tx.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace injective {
namespace insurance {
namespace v1beta1 {
template <typename>
PROTOBUF_CONSTEXPR MsgCreateInsuranceFund::MsgCreateInsuranceFund(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.sender_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.ticker_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.quote_denom_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.oracle_base_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.oracle_quote_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.initial_deposit_)*/nullptr
  , /*decltype(_impl_.expiry_)*/ ::int64_t{0}

  , /*decltype(_impl_.oracle_type_)*/ 0
} {}
struct MsgCreateInsuranceFundDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgCreateInsuranceFundDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgCreateInsuranceFundDefaultTypeInternal() {}
  union {
    MsgCreateInsuranceFund _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgCreateInsuranceFundDefaultTypeInternal _MsgCreateInsuranceFund_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgCreateInsuranceFundResponse::MsgCreateInsuranceFundResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgCreateInsuranceFundResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgCreateInsuranceFundResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgCreateInsuranceFundResponseDefaultTypeInternal() {}
  union {
    MsgCreateInsuranceFundResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgCreateInsuranceFundResponseDefaultTypeInternal _MsgCreateInsuranceFundResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgUnderwrite::MsgUnderwrite(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.sender_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.market_id_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.deposit_)*/nullptr} {}
struct MsgUnderwriteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgUnderwriteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgUnderwriteDefaultTypeInternal() {}
  union {
    MsgUnderwrite _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgUnderwriteDefaultTypeInternal _MsgUnderwrite_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgUnderwriteResponse::MsgUnderwriteResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgUnderwriteResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgUnderwriteResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgUnderwriteResponseDefaultTypeInternal() {}
  union {
    MsgUnderwriteResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgUnderwriteResponseDefaultTypeInternal _MsgUnderwriteResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgRequestRedemption::MsgRequestRedemption(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.sender_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.market_id_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.amount_)*/nullptr} {}
struct MsgRequestRedemptionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgRequestRedemptionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgRequestRedemptionDefaultTypeInternal() {}
  union {
    MsgRequestRedemption _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgRequestRedemptionDefaultTypeInternal _MsgRequestRedemption_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgRequestRedemptionResponse::MsgRequestRedemptionResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgRequestRedemptionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgRequestRedemptionResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgRequestRedemptionResponseDefaultTypeInternal() {}
  union {
    MsgRequestRedemptionResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgRequestRedemptionResponseDefaultTypeInternal _MsgRequestRedemptionResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgUpdateParams::MsgUpdateParams(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.authority_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.params_)*/nullptr} {}
struct MsgUpdateParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgUpdateParamsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgUpdateParamsDefaultTypeInternal() {}
  union {
    MsgUpdateParams _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgUpdateParamsDefaultTypeInternal _MsgUpdateParams_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgUpdateParamsResponse::MsgUpdateParamsResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgUpdateParamsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgUpdateParamsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgUpdateParamsResponseDefaultTypeInternal() {}
  union {
    MsgUpdateParamsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgUpdateParamsResponseDefaultTypeInternal _MsgUpdateParamsResponse_default_instance_;
}  // namespace v1beta1
}  // namespace insurance
}  // namespace injective
static ::_pb::Metadata file_level_metadata_injective_2finsurance_2fv1beta1_2ftx_2eproto[8];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_injective_2finsurance_2fv1beta1_2ftx_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_injective_2finsurance_2fv1beta1_2ftx_2eproto = nullptr;
const ::uint32_t TableStruct_injective_2finsurance_2fv1beta1_2ftx_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::MsgCreateInsuranceFund, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::MsgCreateInsuranceFund, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::MsgCreateInsuranceFund, _impl_.sender_),
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::MsgCreateInsuranceFund, _impl_.ticker_),
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::MsgCreateInsuranceFund, _impl_.quote_denom_),
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::MsgCreateInsuranceFund, _impl_.oracle_base_),
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::MsgCreateInsuranceFund, _impl_.oracle_quote_),
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::MsgCreateInsuranceFund, _impl_.oracle_type_),
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::MsgCreateInsuranceFund, _impl_.expiry_),
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::MsgCreateInsuranceFund, _impl_.initial_deposit_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::MsgCreateInsuranceFundResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::MsgUnderwrite, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::MsgUnderwrite, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::MsgUnderwrite, _impl_.sender_),
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::MsgUnderwrite, _impl_.market_id_),
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::MsgUnderwrite, _impl_.deposit_),
    ~0u,
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::MsgUnderwriteResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::MsgRequestRedemption, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::MsgRequestRedemption, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::MsgRequestRedemption, _impl_.sender_),
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::MsgRequestRedemption, _impl_.market_id_),
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::MsgRequestRedemption, _impl_.amount_),
    ~0u,
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::MsgRequestRedemptionResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::MsgUpdateParams, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::MsgUpdateParams, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::MsgUpdateParams, _impl_.authority_),
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::MsgUpdateParams, _impl_.params_),
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::MsgUpdateParamsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, 16, -1, sizeof(::injective::insurance::v1beta1::MsgCreateInsuranceFund)},
        { 24, -1, -1, sizeof(::injective::insurance::v1beta1::MsgCreateInsuranceFundResponse)},
        { 32, 43, -1, sizeof(::injective::insurance::v1beta1::MsgUnderwrite)},
        { 46, -1, -1, sizeof(::injective::insurance::v1beta1::MsgUnderwriteResponse)},
        { 54, 65, -1, sizeof(::injective::insurance::v1beta1::MsgRequestRedemption)},
        { 68, -1, -1, sizeof(::injective::insurance::v1beta1::MsgRequestRedemptionResponse)},
        { 76, 86, -1, sizeof(::injective::insurance::v1beta1::MsgUpdateParams)},
        { 88, -1, -1, sizeof(::injective::insurance::v1beta1::MsgUpdateParamsResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::injective::insurance::v1beta1::_MsgCreateInsuranceFund_default_instance_._instance,
    &::injective::insurance::v1beta1::_MsgCreateInsuranceFundResponse_default_instance_._instance,
    &::injective::insurance::v1beta1::_MsgUnderwrite_default_instance_._instance,
    &::injective::insurance::v1beta1::_MsgUnderwriteResponse_default_instance_._instance,
    &::injective::insurance::v1beta1::_MsgRequestRedemption_default_instance_._instance,
    &::injective::insurance::v1beta1::_MsgRequestRedemptionResponse_default_instance_._instance,
    &::injective::insurance::v1beta1::_MsgUpdateParams_default_instance_._instance,
    &::injective::insurance::v1beta1::_MsgUpdateParamsResponse_default_instance_._instance,
};
const char descriptor_table_protodef_injective_2finsurance_2fv1beta1_2ftx_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n$injective/insurance/v1beta1/tx.proto\022\033"
    "injective.insurance.v1beta1\032\024gogoproto/g"
    "ogo.proto\032\036cosmos/base/v1beta1/coin.prot"
    "o\032\027cosmos/msg/v1/msg.proto\032\031cosmos_proto"
    "/cosmos.proto\032+injective/insurance/v1bet"
    "a1/insurance.proto\032%injective/oracle/v1b"
    "eta1/oracle.proto\"\353\002\n\026MsgCreateInsurance"
    "Fund\022\026\n\006sender\030\001 \001(\tR\006sender\022\026\n\006ticker\030\002"
    " \001(\tR\006ticker\022\037\n\013quote_denom\030\003 \001(\tR\nquote"
    "Denom\022\037\n\013oracle_base\030\004 \001(\tR\noracleBase\022!"
    "\n\014oracle_quote\030\005 \001(\tR\013oracleQuote\022E\n\013ora"
    "cle_type\030\006 \001(\0162$.injective.oracle.v1beta"
    "1.OracleTypeR\noracleType\022\026\n\006expiry\030\007 \001(\003"
    "R\006expiry\022H\n\017initial_deposit\030\010 \001(\0132\031.cosm"
    "os.base.v1beta1.CoinB\004\310\336\037\000R\016initialDepos"
    "it:\023\210\240\037\000\350\240\037\000\202\347\260*\006sender\" \n\036MsgCreateInsu"
    "ranceFundResponse\"\224\001\n\rMsgUnderwrite\022\026\n\006s"
    "ender\030\001 \001(\tR\006sender\022\033\n\tmarket_id\030\002 \001(\tR\010"
    "marketId\0229\n\007deposit\030\003 \001(\0132\031.cosmos.base."
    "v1beta1.CoinB\004\310\336\037\000R\007deposit:\023\210\240\037\000\350\240\037\000\202\347\260"
    "*\006sender\"\027\n\025MsgUnderwriteResponse\"\231\001\n\024Ms"
    "gRequestRedemption\022\026\n\006sender\030\001 \001(\tR\006send"
    "er\022\033\n\tmarket_id\030\002 \001(\tR\010marketId\0227\n\006amoun"
    "t\030\003 \001(\0132\031.cosmos.base.v1beta1.CoinB\004\310\336\037\000"
    "R\006amount:\023\210\240\037\000\350\240\037\000\202\347\260*\006sender\"\036\n\034MsgRequ"
    "estRedemptionResponse\"\234\001\n\017MsgUpdateParam"
    "s\0226\n\tauthority\030\001 \001(\tB\030\322\264-\024cosmos.Address"
    "StringR\tauthority\022A\n\006params\030\002 \001(\0132#.inje"
    "ctive.insurance.v1beta1.ParamsB\004\310\336\037\000R\006pa"
    "rams:\016\202\347\260*\tauthority\"\031\n\027MsgUpdateParamsR"
    "esponse2\365\003\n\003Msg\022\207\001\n\023CreateInsuranceFund\022"
    "3.injective.insurance.v1beta1.MsgCreateI"
    "nsuranceFund\032;.injective.insurance.v1bet"
    "a1.MsgCreateInsuranceFundResponse\022l\n\nUnd"
    "erwrite\022*.injective.insurance.v1beta1.Ms"
    "gUnderwrite\0322.injective.insurance.v1beta"
    "1.MsgUnderwriteResponse\022\201\001\n\021RequestRedem"
    "ption\0221.injective.insurance.v1beta1.MsgR"
    "equestRedemption\0329.injective.insurance.v"
    "1beta1.MsgRequestRedemptionResponse\022r\n\014U"
    "pdateParams\022,.injective.insurance.v1beta"
    "1.MsgUpdateParams\0324.injective.insurance."
    "v1beta1.MsgUpdateParamsResponseB\211\002\n\037com."
    "injective.insurance.v1beta1B\007TxProtoP\001ZO"
    "github.com/InjectiveLabs/injective-core/"
    "injective-chain/modules/insurance/types\242"
    "\002\003IIX\252\002\033Injective.Insurance.V1beta1\312\002\033In"
    "jective\\Insurance\\V1beta1\342\002\'Injective\\In"
    "surance\\V1beta1\\GPBMetadata\352\002\035Injective:"
    ":Insurance::V1beta1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_injective_2finsurance_2fv1beta1_2ftx_2eproto_deps[6] =
    {
        &::descriptor_table_cosmos_2fbase_2fv1beta1_2fcoin_2eproto,
        &::descriptor_table_cosmos_2fmsg_2fv1_2fmsg_2eproto,
        &::descriptor_table_cosmos_5fproto_2fcosmos_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_injective_2finsurance_2fv1beta1_2finsurance_2eproto,
        &::descriptor_table_injective_2foracle_2fv1beta1_2foracle_2eproto,
};
static ::absl::once_flag descriptor_table_injective_2finsurance_2fv1beta1_2ftx_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_injective_2finsurance_2fv1beta1_2ftx_2eproto = {
    false,
    false,
    1987,
    descriptor_table_protodef_injective_2finsurance_2fv1beta1_2ftx_2eproto,
    "injective/insurance/v1beta1/tx.proto",
    &descriptor_table_injective_2finsurance_2fv1beta1_2ftx_2eproto_once,
    descriptor_table_injective_2finsurance_2fv1beta1_2ftx_2eproto_deps,
    6,
    8,
    schemas,
    file_default_instances,
    TableStruct_injective_2finsurance_2fv1beta1_2ftx_2eproto::offsets,
    file_level_metadata_injective_2finsurance_2fv1beta1_2ftx_2eproto,
    file_level_enum_descriptors_injective_2finsurance_2fv1beta1_2ftx_2eproto,
    file_level_service_descriptors_injective_2finsurance_2fv1beta1_2ftx_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_injective_2finsurance_2fv1beta1_2ftx_2eproto_getter() {
  return &descriptor_table_injective_2finsurance_2fv1beta1_2ftx_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_injective_2finsurance_2fv1beta1_2ftx_2eproto(&descriptor_table_injective_2finsurance_2fv1beta1_2ftx_2eproto);
namespace injective {
namespace insurance {
namespace v1beta1 {
// ===================================================================

class MsgCreateInsuranceFund::_Internal {
 public:
  using HasBits = decltype(std::declval<MsgCreateInsuranceFund>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MsgCreateInsuranceFund, _impl_._has_bits_);
  static const ::cosmos::base::v1beta1::Coin& initial_deposit(const MsgCreateInsuranceFund* msg);
  static void set_has_initial_deposit(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::v1beta1::Coin&
MsgCreateInsuranceFund::_Internal::initial_deposit(const MsgCreateInsuranceFund* msg) {
  return *msg->_impl_.initial_deposit_;
}
void MsgCreateInsuranceFund::clear_initial_deposit() {
  if (_impl_.initial_deposit_ != nullptr) _impl_.initial_deposit_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
MsgCreateInsuranceFund::MsgCreateInsuranceFund(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.insurance.v1beta1.MsgCreateInsuranceFund)
}
MsgCreateInsuranceFund::MsgCreateInsuranceFund(const MsgCreateInsuranceFund& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgCreateInsuranceFund* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.sender_) {}

    , decltype(_impl_.ticker_) {}

    , decltype(_impl_.quote_denom_) {}

    , decltype(_impl_.oracle_base_) {}

    , decltype(_impl_.oracle_quote_) {}

    , decltype(_impl_.initial_deposit_){nullptr}
    , decltype(_impl_.expiry_) {}

    , decltype(_impl_.oracle_type_) {}
  };

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sender().empty()) {
    _this->_impl_.sender_.Set(from._internal_sender(), _this->GetArenaForAllocation());
  }
  _impl_.ticker_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.ticker_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_ticker().empty()) {
    _this->_impl_.ticker_.Set(from._internal_ticker(), _this->GetArenaForAllocation());
  }
  _impl_.quote_denom_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.quote_denom_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_quote_denom().empty()) {
    _this->_impl_.quote_denom_.Set(from._internal_quote_denom(), _this->GetArenaForAllocation());
  }
  _impl_.oracle_base_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.oracle_base_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_oracle_base().empty()) {
    _this->_impl_.oracle_base_.Set(from._internal_oracle_base(), _this->GetArenaForAllocation());
  }
  _impl_.oracle_quote_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.oracle_quote_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_oracle_quote().empty()) {
    _this->_impl_.oracle_quote_.Set(from._internal_oracle_quote(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.initial_deposit_ = new ::cosmos::base::v1beta1::Coin(*from._impl_.initial_deposit_);
  }
  ::memcpy(&_impl_.expiry_, &from._impl_.expiry_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.oracle_type_) -
    reinterpret_cast<char*>(&_impl_.expiry_)) + sizeof(_impl_.oracle_type_));
  // @@protoc_insertion_point(copy_constructor:injective.insurance.v1beta1.MsgCreateInsuranceFund)
}

inline void MsgCreateInsuranceFund::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.sender_) {}

    , decltype(_impl_.ticker_) {}

    , decltype(_impl_.quote_denom_) {}

    , decltype(_impl_.oracle_base_) {}

    , decltype(_impl_.oracle_quote_) {}

    , decltype(_impl_.initial_deposit_){nullptr}
    , decltype(_impl_.expiry_) { ::int64_t{0} }

    , decltype(_impl_.oracle_type_) { 0 }

  };
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.ticker_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.ticker_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.quote_denom_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.quote_denom_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.oracle_base_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.oracle_base_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.oracle_quote_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.oracle_quote_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgCreateInsuranceFund::~MsgCreateInsuranceFund() {
  // @@protoc_insertion_point(destructor:injective.insurance.v1beta1.MsgCreateInsuranceFund)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgCreateInsuranceFund::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.sender_.Destroy();
  _impl_.ticker_.Destroy();
  _impl_.quote_denom_.Destroy();
  _impl_.oracle_base_.Destroy();
  _impl_.oracle_quote_.Destroy();
  if (this != internal_default_instance()) delete _impl_.initial_deposit_;
}

void MsgCreateInsuranceFund::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgCreateInsuranceFund::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.insurance.v1beta1.MsgCreateInsuranceFund)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sender_.ClearToEmpty();
  _impl_.ticker_.ClearToEmpty();
  _impl_.quote_denom_.ClearToEmpty();
  _impl_.oracle_base_.ClearToEmpty();
  _impl_.oracle_quote_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.initial_deposit_ != nullptr);
    _impl_.initial_deposit_->Clear();
  }
  ::memset(&_impl_.expiry_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.oracle_type_) -
      reinterpret_cast<char*>(&_impl_.expiry_)) + sizeof(_impl_.oracle_type_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgCreateInsuranceFund::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string sender = 1 [json_name = "sender"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_sender();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.insurance.v1beta1.MsgCreateInsuranceFund.sender"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string ticker = 2 [json_name = "ticker"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_ticker();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.insurance.v1beta1.MsgCreateInsuranceFund.ticker"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string quote_denom = 3 [json_name = "quoteDenom"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_quote_denom();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.insurance.v1beta1.MsgCreateInsuranceFund.quote_denom"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string oracle_base = 4 [json_name = "oracleBase"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_oracle_base();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.insurance.v1beta1.MsgCreateInsuranceFund.oracle_base"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string oracle_quote = 5 [json_name = "oracleQuote"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_oracle_quote();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.insurance.v1beta1.MsgCreateInsuranceFund.oracle_quote"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .injective.oracle.v1beta1.OracleType oracle_type = 6 [json_name = "oracleType"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 48)) {
          ::int32_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
          _internal_set_oracle_type(static_cast<::injective::oracle::v1beta1::OracleType>(val));
        } else {
          goto handle_unusual;
        }
        continue;
      // int64 expiry = 7 [json_name = "expiry"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 56)) {
          _impl_.expiry_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.v1beta1.Coin initial_deposit = 8 [json_name = "initialDeposit", (.gogoproto.nullable) = false];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_initial_deposit(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgCreateInsuranceFund::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.insurance.v1beta1.MsgCreateInsuranceFund)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string sender = 1 [json_name = "sender"];
  if (!this->_internal_sender().empty()) {
    const std::string& _s = this->_internal_sender();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.insurance.v1beta1.MsgCreateInsuranceFund.sender");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string ticker = 2 [json_name = "ticker"];
  if (!this->_internal_ticker().empty()) {
    const std::string& _s = this->_internal_ticker();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.insurance.v1beta1.MsgCreateInsuranceFund.ticker");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string quote_denom = 3 [json_name = "quoteDenom"];
  if (!this->_internal_quote_denom().empty()) {
    const std::string& _s = this->_internal_quote_denom();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.insurance.v1beta1.MsgCreateInsuranceFund.quote_denom");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string oracle_base = 4 [json_name = "oracleBase"];
  if (!this->_internal_oracle_base().empty()) {
    const std::string& _s = this->_internal_oracle_base();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.insurance.v1beta1.MsgCreateInsuranceFund.oracle_base");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string oracle_quote = 5 [json_name = "oracleQuote"];
  if (!this->_internal_oracle_quote().empty()) {
    const std::string& _s = this->_internal_oracle_quote();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.insurance.v1beta1.MsgCreateInsuranceFund.oracle_quote");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // .injective.oracle.v1beta1.OracleType oracle_type = 6 [json_name = "oracleType"];
  if (this->_internal_oracle_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        6, this->_internal_oracle_type(), target);
  }

  // int64 expiry = 7 [json_name = "expiry"];
  if (this->_internal_expiry() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        7, this->_internal_expiry(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.v1beta1.Coin initial_deposit = 8 [json_name = "initialDeposit", (.gogoproto.nullable) = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::initial_deposit(this),
        _Internal::initial_deposit(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.insurance.v1beta1.MsgCreateInsuranceFund)
  return target;
}

::size_t MsgCreateInsuranceFund::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.insurance.v1beta1.MsgCreateInsuranceFund)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string sender = 1 [json_name = "sender"];
  if (!this->_internal_sender().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_sender());
  }

  // string ticker = 2 [json_name = "ticker"];
  if (!this->_internal_ticker().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_ticker());
  }

  // string quote_denom = 3 [json_name = "quoteDenom"];
  if (!this->_internal_quote_denom().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_quote_denom());
  }

  // string oracle_base = 4 [json_name = "oracleBase"];
  if (!this->_internal_oracle_base().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_oracle_base());
  }

  // string oracle_quote = 5 [json_name = "oracleQuote"];
  if (!this->_internal_oracle_quote().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_oracle_quote());
  }

  // .cosmos.base.v1beta1.Coin initial_deposit = 8 [json_name = "initialDeposit", (.gogoproto.nullable) = false];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.initial_deposit_);
  }

  // int64 expiry = 7 [json_name = "expiry"];
  if (this->_internal_expiry() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_expiry());
  }

  // .injective.oracle.v1beta1.OracleType oracle_type = 6 [json_name = "oracleType"];
  if (this->_internal_oracle_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_oracle_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgCreateInsuranceFund::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgCreateInsuranceFund::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgCreateInsuranceFund::GetClassData() const { return &_class_data_; }


void MsgCreateInsuranceFund::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgCreateInsuranceFund*>(&to_msg);
  auto& from = static_cast<const MsgCreateInsuranceFund&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.insurance.v1beta1.MsgCreateInsuranceFund)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sender().empty()) {
    _this->_internal_set_sender(from._internal_sender());
  }
  if (!from._internal_ticker().empty()) {
    _this->_internal_set_ticker(from._internal_ticker());
  }
  if (!from._internal_quote_denom().empty()) {
    _this->_internal_set_quote_denom(from._internal_quote_denom());
  }
  if (!from._internal_oracle_base().empty()) {
    _this->_internal_set_oracle_base(from._internal_oracle_base());
  }
  if (!from._internal_oracle_quote().empty()) {
    _this->_internal_set_oracle_quote(from._internal_oracle_quote());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_initial_deposit()->::cosmos::base::v1beta1::Coin::MergeFrom(
        from._internal_initial_deposit());
  }
  if (from._internal_expiry() != 0) {
    _this->_internal_set_expiry(from._internal_expiry());
  }
  if (from._internal_oracle_type() != 0) {
    _this->_internal_set_oracle_type(from._internal_oracle_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgCreateInsuranceFund::CopyFrom(const MsgCreateInsuranceFund& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.insurance.v1beta1.MsgCreateInsuranceFund)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgCreateInsuranceFund::IsInitialized() const {
  return true;
}

void MsgCreateInsuranceFund::InternalSwap(MsgCreateInsuranceFund* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_, lhs_arena,
                                       &other->_impl_.sender_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ticker_, lhs_arena,
                                       &other->_impl_.ticker_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.quote_denom_, lhs_arena,
                                       &other->_impl_.quote_denom_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.oracle_base_, lhs_arena,
                                       &other->_impl_.oracle_base_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.oracle_quote_, lhs_arena,
                                       &other->_impl_.oracle_quote_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MsgCreateInsuranceFund, _impl_.oracle_type_)
      + sizeof(MsgCreateInsuranceFund::_impl_.oracle_type_)
      - PROTOBUF_FIELD_OFFSET(MsgCreateInsuranceFund, _impl_.initial_deposit_)>(
          reinterpret_cast<char*>(&_impl_.initial_deposit_),
          reinterpret_cast<char*>(&other->_impl_.initial_deposit_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgCreateInsuranceFund::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2finsurance_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_injective_2finsurance_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_injective_2finsurance_2fv1beta1_2ftx_2eproto[0]);
}
// ===================================================================

class MsgCreateInsuranceFundResponse::_Internal {
 public:
};

MsgCreateInsuranceFundResponse::MsgCreateInsuranceFundResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.insurance.v1beta1.MsgCreateInsuranceFundResponse)
}
MsgCreateInsuranceFundResponse::MsgCreateInsuranceFundResponse(const MsgCreateInsuranceFundResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgCreateInsuranceFundResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.insurance.v1beta1.MsgCreateInsuranceFundResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgCreateInsuranceFundResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgCreateInsuranceFundResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgCreateInsuranceFundResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2finsurance_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_injective_2finsurance_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_injective_2finsurance_2fv1beta1_2ftx_2eproto[1]);
}
// ===================================================================

class MsgUnderwrite::_Internal {
 public:
  using HasBits = decltype(std::declval<MsgUnderwrite>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MsgUnderwrite, _impl_._has_bits_);
  static const ::cosmos::base::v1beta1::Coin& deposit(const MsgUnderwrite* msg);
  static void set_has_deposit(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::v1beta1::Coin&
MsgUnderwrite::_Internal::deposit(const MsgUnderwrite* msg) {
  return *msg->_impl_.deposit_;
}
void MsgUnderwrite::clear_deposit() {
  if (_impl_.deposit_ != nullptr) _impl_.deposit_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
MsgUnderwrite::MsgUnderwrite(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.insurance.v1beta1.MsgUnderwrite)
}
MsgUnderwrite::MsgUnderwrite(const MsgUnderwrite& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgUnderwrite* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.sender_) {}

    , decltype(_impl_.market_id_) {}

    , decltype(_impl_.deposit_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sender().empty()) {
    _this->_impl_.sender_.Set(from._internal_sender(), _this->GetArenaForAllocation());
  }
  _impl_.market_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.market_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_market_id().empty()) {
    _this->_impl_.market_id_.Set(from._internal_market_id(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.deposit_ = new ::cosmos::base::v1beta1::Coin(*from._impl_.deposit_);
  }
  // @@protoc_insertion_point(copy_constructor:injective.insurance.v1beta1.MsgUnderwrite)
}

inline void MsgUnderwrite::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.sender_) {}

    , decltype(_impl_.market_id_) {}

    , decltype(_impl_.deposit_){nullptr}
  };
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.market_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.market_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgUnderwrite::~MsgUnderwrite() {
  // @@protoc_insertion_point(destructor:injective.insurance.v1beta1.MsgUnderwrite)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgUnderwrite::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.sender_.Destroy();
  _impl_.market_id_.Destroy();
  if (this != internal_default_instance()) delete _impl_.deposit_;
}

void MsgUnderwrite::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgUnderwrite::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.insurance.v1beta1.MsgUnderwrite)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sender_.ClearToEmpty();
  _impl_.market_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.deposit_ != nullptr);
    _impl_.deposit_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgUnderwrite::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string sender = 1 [json_name = "sender"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_sender();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.insurance.v1beta1.MsgUnderwrite.sender"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string market_id = 2 [json_name = "marketId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_market_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.insurance.v1beta1.MsgUnderwrite.market_id"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.v1beta1.Coin deposit = 3 [json_name = "deposit", (.gogoproto.nullable) = false];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_deposit(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgUnderwrite::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.insurance.v1beta1.MsgUnderwrite)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string sender = 1 [json_name = "sender"];
  if (!this->_internal_sender().empty()) {
    const std::string& _s = this->_internal_sender();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.insurance.v1beta1.MsgUnderwrite.sender");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string market_id = 2 [json_name = "marketId"];
  if (!this->_internal_market_id().empty()) {
    const std::string& _s = this->_internal_market_id();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.insurance.v1beta1.MsgUnderwrite.market_id");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.v1beta1.Coin deposit = 3 [json_name = "deposit", (.gogoproto.nullable) = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::deposit(this),
        _Internal::deposit(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.insurance.v1beta1.MsgUnderwrite)
  return target;
}

::size_t MsgUnderwrite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.insurance.v1beta1.MsgUnderwrite)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string sender = 1 [json_name = "sender"];
  if (!this->_internal_sender().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_sender());
  }

  // string market_id = 2 [json_name = "marketId"];
  if (!this->_internal_market_id().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_market_id());
  }

  // .cosmos.base.v1beta1.Coin deposit = 3 [json_name = "deposit", (.gogoproto.nullable) = false];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.deposit_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgUnderwrite::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgUnderwrite::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgUnderwrite::GetClassData() const { return &_class_data_; }


void MsgUnderwrite::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgUnderwrite*>(&to_msg);
  auto& from = static_cast<const MsgUnderwrite&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.insurance.v1beta1.MsgUnderwrite)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sender().empty()) {
    _this->_internal_set_sender(from._internal_sender());
  }
  if (!from._internal_market_id().empty()) {
    _this->_internal_set_market_id(from._internal_market_id());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_deposit()->::cosmos::base::v1beta1::Coin::MergeFrom(
        from._internal_deposit());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgUnderwrite::CopyFrom(const MsgUnderwrite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.insurance.v1beta1.MsgUnderwrite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgUnderwrite::IsInitialized() const {
  return true;
}

void MsgUnderwrite::InternalSwap(MsgUnderwrite* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_, lhs_arena,
                                       &other->_impl_.sender_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.market_id_, lhs_arena,
                                       &other->_impl_.market_id_, rhs_arena);
  swap(_impl_.deposit_, other->_impl_.deposit_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgUnderwrite::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2finsurance_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_injective_2finsurance_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_injective_2finsurance_2fv1beta1_2ftx_2eproto[2]);
}
// ===================================================================

class MsgUnderwriteResponse::_Internal {
 public:
};

MsgUnderwriteResponse::MsgUnderwriteResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.insurance.v1beta1.MsgUnderwriteResponse)
}
MsgUnderwriteResponse::MsgUnderwriteResponse(const MsgUnderwriteResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgUnderwriteResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.insurance.v1beta1.MsgUnderwriteResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgUnderwriteResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgUnderwriteResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgUnderwriteResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2finsurance_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_injective_2finsurance_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_injective_2finsurance_2fv1beta1_2ftx_2eproto[3]);
}
// ===================================================================

class MsgRequestRedemption::_Internal {
 public:
  using HasBits = decltype(std::declval<MsgRequestRedemption>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MsgRequestRedemption, _impl_._has_bits_);
  static const ::cosmos::base::v1beta1::Coin& amount(const MsgRequestRedemption* msg);
  static void set_has_amount(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::v1beta1::Coin&
MsgRequestRedemption::_Internal::amount(const MsgRequestRedemption* msg) {
  return *msg->_impl_.amount_;
}
void MsgRequestRedemption::clear_amount() {
  if (_impl_.amount_ != nullptr) _impl_.amount_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
MsgRequestRedemption::MsgRequestRedemption(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.insurance.v1beta1.MsgRequestRedemption)
}
MsgRequestRedemption::MsgRequestRedemption(const MsgRequestRedemption& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgRequestRedemption* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.sender_) {}

    , decltype(_impl_.market_id_) {}

    , decltype(_impl_.amount_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sender().empty()) {
    _this->_impl_.sender_.Set(from._internal_sender(), _this->GetArenaForAllocation());
  }
  _impl_.market_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.market_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_market_id().empty()) {
    _this->_impl_.market_id_.Set(from._internal_market_id(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.amount_ = new ::cosmos::base::v1beta1::Coin(*from._impl_.amount_);
  }
  // @@protoc_insertion_point(copy_constructor:injective.insurance.v1beta1.MsgRequestRedemption)
}

inline void MsgRequestRedemption::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.sender_) {}

    , decltype(_impl_.market_id_) {}

    , decltype(_impl_.amount_){nullptr}
  };
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.market_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.market_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgRequestRedemption::~MsgRequestRedemption() {
  // @@protoc_insertion_point(destructor:injective.insurance.v1beta1.MsgRequestRedemption)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgRequestRedemption::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.sender_.Destroy();
  _impl_.market_id_.Destroy();
  if (this != internal_default_instance()) delete _impl_.amount_;
}

void MsgRequestRedemption::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgRequestRedemption::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.insurance.v1beta1.MsgRequestRedemption)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sender_.ClearToEmpty();
  _impl_.market_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.amount_ != nullptr);
    _impl_.amount_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgRequestRedemption::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string sender = 1 [json_name = "sender"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_sender();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.insurance.v1beta1.MsgRequestRedemption.sender"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string market_id = 2 [json_name = "marketId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_market_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.insurance.v1beta1.MsgRequestRedemption.market_id"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_amount(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgRequestRedemption::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.insurance.v1beta1.MsgRequestRedemption)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string sender = 1 [json_name = "sender"];
  if (!this->_internal_sender().empty()) {
    const std::string& _s = this->_internal_sender();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.insurance.v1beta1.MsgRequestRedemption.sender");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string market_id = 2 [json_name = "marketId"];
  if (!this->_internal_market_id().empty()) {
    const std::string& _s = this->_internal_market_id();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.insurance.v1beta1.MsgRequestRedemption.market_id");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::amount(this),
        _Internal::amount(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.insurance.v1beta1.MsgRequestRedemption)
  return target;
}

::size_t MsgRequestRedemption::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.insurance.v1beta1.MsgRequestRedemption)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string sender = 1 [json_name = "sender"];
  if (!this->_internal_sender().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_sender());
  }

  // string market_id = 2 [json_name = "marketId"];
  if (!this->_internal_market_id().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_market_id());
  }

  // .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.amount_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgRequestRedemption::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgRequestRedemption::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgRequestRedemption::GetClassData() const { return &_class_data_; }


void MsgRequestRedemption::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgRequestRedemption*>(&to_msg);
  auto& from = static_cast<const MsgRequestRedemption&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.insurance.v1beta1.MsgRequestRedemption)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sender().empty()) {
    _this->_internal_set_sender(from._internal_sender());
  }
  if (!from._internal_market_id().empty()) {
    _this->_internal_set_market_id(from._internal_market_id());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_amount()->::cosmos::base::v1beta1::Coin::MergeFrom(
        from._internal_amount());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgRequestRedemption::CopyFrom(const MsgRequestRedemption& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.insurance.v1beta1.MsgRequestRedemption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgRequestRedemption::IsInitialized() const {
  return true;
}

void MsgRequestRedemption::InternalSwap(MsgRequestRedemption* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_, lhs_arena,
                                       &other->_impl_.sender_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.market_id_, lhs_arena,
                                       &other->_impl_.market_id_, rhs_arena);
  swap(_impl_.amount_, other->_impl_.amount_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgRequestRedemption::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2finsurance_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_injective_2finsurance_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_injective_2finsurance_2fv1beta1_2ftx_2eproto[4]);
}
// ===================================================================

class MsgRequestRedemptionResponse::_Internal {
 public:
};

MsgRequestRedemptionResponse::MsgRequestRedemptionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.insurance.v1beta1.MsgRequestRedemptionResponse)
}
MsgRequestRedemptionResponse::MsgRequestRedemptionResponse(const MsgRequestRedemptionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgRequestRedemptionResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.insurance.v1beta1.MsgRequestRedemptionResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgRequestRedemptionResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgRequestRedemptionResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgRequestRedemptionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2finsurance_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_injective_2finsurance_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_injective_2finsurance_2fv1beta1_2ftx_2eproto[5]);
}
// ===================================================================

class MsgUpdateParams::_Internal {
 public:
  using HasBits = decltype(std::declval<MsgUpdateParams>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MsgUpdateParams, _impl_._has_bits_);
  static const ::injective::insurance::v1beta1::Params& params(const MsgUpdateParams* msg);
  static void set_has_params(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::injective::insurance::v1beta1::Params&
MsgUpdateParams::_Internal::params(const MsgUpdateParams* msg) {
  return *msg->_impl_.params_;
}
void MsgUpdateParams::clear_params() {
  if (_impl_.params_ != nullptr) _impl_.params_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
MsgUpdateParams::MsgUpdateParams(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.insurance.v1beta1.MsgUpdateParams)
}
MsgUpdateParams::MsgUpdateParams(const MsgUpdateParams& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgUpdateParams* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.authority_) {}

    , decltype(_impl_.params_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.authority_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.authority_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_authority().empty()) {
    _this->_impl_.authority_.Set(from._internal_authority(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.params_ = new ::injective::insurance::v1beta1::Params(*from._impl_.params_);
  }
  // @@protoc_insertion_point(copy_constructor:injective.insurance.v1beta1.MsgUpdateParams)
}

inline void MsgUpdateParams::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.authority_) {}

    , decltype(_impl_.params_){nullptr}
  };
  _impl_.authority_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.authority_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgUpdateParams::~MsgUpdateParams() {
  // @@protoc_insertion_point(destructor:injective.insurance.v1beta1.MsgUpdateParams)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgUpdateParams::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.authority_.Destroy();
  if (this != internal_default_instance()) delete _impl_.params_;
}

void MsgUpdateParams::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgUpdateParams::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.insurance.v1beta1.MsgUpdateParams)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.authority_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.params_ != nullptr);
    _impl_.params_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgUpdateParams::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_authority();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.insurance.v1beta1.MsgUpdateParams.authority"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .injective.insurance.v1beta1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgUpdateParams::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.insurance.v1beta1.MsgUpdateParams)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_authority().empty()) {
    const std::string& _s = this->_internal_authority();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.insurance.v1beta1.MsgUpdateParams.authority");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .injective.insurance.v1beta1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.insurance.v1beta1.MsgUpdateParams)
  return target;
}

::size_t MsgUpdateParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.insurance.v1beta1.MsgUpdateParams)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_authority().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_authority());
  }

  // .injective.insurance.v1beta1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgUpdateParams::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgUpdateParams::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgUpdateParams::GetClassData() const { return &_class_data_; }


void MsgUpdateParams::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgUpdateParams*>(&to_msg);
  auto& from = static_cast<const MsgUpdateParams&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.insurance.v1beta1.MsgUpdateParams)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_authority().empty()) {
    _this->_internal_set_authority(from._internal_authority());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_params()->::injective::insurance::v1beta1::Params::MergeFrom(
        from._internal_params());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgUpdateParams::CopyFrom(const MsgUpdateParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.insurance.v1beta1.MsgUpdateParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgUpdateParams::IsInitialized() const {
  return true;
}

void MsgUpdateParams::InternalSwap(MsgUpdateParams* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.authority_, lhs_arena,
                                       &other->_impl_.authority_, rhs_arena);
  swap(_impl_.params_, other->_impl_.params_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgUpdateParams::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2finsurance_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_injective_2finsurance_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_injective_2finsurance_2fv1beta1_2ftx_2eproto[6]);
}
// ===================================================================

class MsgUpdateParamsResponse::_Internal {
 public:
};

MsgUpdateParamsResponse::MsgUpdateParamsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.insurance.v1beta1.MsgUpdateParamsResponse)
}
MsgUpdateParamsResponse::MsgUpdateParamsResponse(const MsgUpdateParamsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgUpdateParamsResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.insurance.v1beta1.MsgUpdateParamsResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgUpdateParamsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgUpdateParamsResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgUpdateParamsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2finsurance_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_injective_2finsurance_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_injective_2finsurance_2fv1beta1_2ftx_2eproto[7]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace insurance
}  // namespace injective
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::injective::insurance::v1beta1::MsgCreateInsuranceFund*
Arena::CreateMaybeMessage< ::injective::insurance::v1beta1::MsgCreateInsuranceFund >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::insurance::v1beta1::MsgCreateInsuranceFund >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::insurance::v1beta1::MsgCreateInsuranceFundResponse*
Arena::CreateMaybeMessage< ::injective::insurance::v1beta1::MsgCreateInsuranceFundResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::insurance::v1beta1::MsgCreateInsuranceFundResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::insurance::v1beta1::MsgUnderwrite*
Arena::CreateMaybeMessage< ::injective::insurance::v1beta1::MsgUnderwrite >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::insurance::v1beta1::MsgUnderwrite >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::insurance::v1beta1::MsgUnderwriteResponse*
Arena::CreateMaybeMessage< ::injective::insurance::v1beta1::MsgUnderwriteResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::insurance::v1beta1::MsgUnderwriteResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::insurance::v1beta1::MsgRequestRedemption*
Arena::CreateMaybeMessage< ::injective::insurance::v1beta1::MsgRequestRedemption >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::insurance::v1beta1::MsgRequestRedemption >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::insurance::v1beta1::MsgRequestRedemptionResponse*
Arena::CreateMaybeMessage< ::injective::insurance::v1beta1::MsgRequestRedemptionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::insurance::v1beta1::MsgRequestRedemptionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::insurance::v1beta1::MsgUpdateParams*
Arena::CreateMaybeMessage< ::injective::insurance::v1beta1::MsgUpdateParams >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::insurance::v1beta1::MsgUpdateParams >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::insurance::v1beta1::MsgUpdateParamsResponse*
Arena::CreateMaybeMessage< ::injective::insurance::v1beta1::MsgUpdateParamsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::insurance::v1beta1::MsgUpdateParamsResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
