// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: injective/insurance/v1beta1/query.proto

#include "injective/insurance/v1beta1/query.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace injective {
namespace insurance {
namespace v1beta1 {
template <typename>
PROTOBUF_CONSTEXPR QueryInsuranceParamsRequest::QueryInsuranceParamsRequest(
    ::_pbi::ConstantInitialized) {}
struct QueryInsuranceParamsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryInsuranceParamsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryInsuranceParamsRequestDefaultTypeInternal() {}
  union {
    QueryInsuranceParamsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryInsuranceParamsRequestDefaultTypeInternal _QueryInsuranceParamsRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryInsuranceParamsResponse::QueryInsuranceParamsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.params_)*/nullptr} {}
struct QueryInsuranceParamsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryInsuranceParamsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryInsuranceParamsResponseDefaultTypeInternal() {}
  union {
    QueryInsuranceParamsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryInsuranceParamsResponseDefaultTypeInternal _QueryInsuranceParamsResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryInsuranceFundRequest::QueryInsuranceFundRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.market_id_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryInsuranceFundRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryInsuranceFundRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryInsuranceFundRequestDefaultTypeInternal() {}
  union {
    QueryInsuranceFundRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryInsuranceFundRequestDefaultTypeInternal _QueryInsuranceFundRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryInsuranceFundResponse::QueryInsuranceFundResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.fund_)*/nullptr} {}
struct QueryInsuranceFundResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryInsuranceFundResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryInsuranceFundResponseDefaultTypeInternal() {}
  union {
    QueryInsuranceFundResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryInsuranceFundResponseDefaultTypeInternal _QueryInsuranceFundResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryInsuranceFundsRequest::QueryInsuranceFundsRequest(
    ::_pbi::ConstantInitialized) {}
struct QueryInsuranceFundsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryInsuranceFundsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryInsuranceFundsRequestDefaultTypeInternal() {}
  union {
    QueryInsuranceFundsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryInsuranceFundsRequestDefaultTypeInternal _QueryInsuranceFundsRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryInsuranceFundsResponse::QueryInsuranceFundsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.funds_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryInsuranceFundsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryInsuranceFundsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryInsuranceFundsResponseDefaultTypeInternal() {}
  union {
    QueryInsuranceFundsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryInsuranceFundsResponseDefaultTypeInternal _QueryInsuranceFundsResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryEstimatedRedemptionsRequest::QueryEstimatedRedemptionsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.marketid_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryEstimatedRedemptionsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryEstimatedRedemptionsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryEstimatedRedemptionsRequestDefaultTypeInternal() {}
  union {
    QueryEstimatedRedemptionsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryEstimatedRedemptionsRequestDefaultTypeInternal _QueryEstimatedRedemptionsRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryEstimatedRedemptionsResponse::QueryEstimatedRedemptionsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.amount_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryEstimatedRedemptionsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryEstimatedRedemptionsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryEstimatedRedemptionsResponseDefaultTypeInternal() {}
  union {
    QueryEstimatedRedemptionsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryEstimatedRedemptionsResponseDefaultTypeInternal _QueryEstimatedRedemptionsResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryPendingRedemptionsRequest::QueryPendingRedemptionsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.marketid_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryPendingRedemptionsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryPendingRedemptionsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryPendingRedemptionsRequestDefaultTypeInternal() {}
  union {
    QueryPendingRedemptionsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryPendingRedemptionsRequestDefaultTypeInternal _QueryPendingRedemptionsRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryPendingRedemptionsResponse::QueryPendingRedemptionsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.amount_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryPendingRedemptionsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryPendingRedemptionsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryPendingRedemptionsResponseDefaultTypeInternal() {}
  union {
    QueryPendingRedemptionsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryPendingRedemptionsResponseDefaultTypeInternal _QueryPendingRedemptionsResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryModuleStateRequest::QueryModuleStateRequest(
    ::_pbi::ConstantInitialized) {}
struct QueryModuleStateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryModuleStateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryModuleStateRequestDefaultTypeInternal() {}
  union {
    QueryModuleStateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryModuleStateRequestDefaultTypeInternal _QueryModuleStateRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryModuleStateResponse::QueryModuleStateResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.state_)*/nullptr} {}
struct QueryModuleStateResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryModuleStateResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryModuleStateResponseDefaultTypeInternal() {}
  union {
    QueryModuleStateResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryModuleStateResponseDefaultTypeInternal _QueryModuleStateResponse_default_instance_;
}  // namespace v1beta1
}  // namespace insurance
}  // namespace injective
static ::_pb::Metadata file_level_metadata_injective_2finsurance_2fv1beta1_2fquery_2eproto[12];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_injective_2finsurance_2fv1beta1_2fquery_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_injective_2finsurance_2fv1beta1_2fquery_2eproto = nullptr;
const ::uint32_t TableStruct_injective_2finsurance_2fv1beta1_2fquery_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::QueryInsuranceParamsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::QueryInsuranceParamsResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::QueryInsuranceParamsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::QueryInsuranceParamsResponse, _impl_.params_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::QueryInsuranceFundRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::QueryInsuranceFundRequest, _impl_.market_id_),
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::QueryInsuranceFundResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::QueryInsuranceFundResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::QueryInsuranceFundResponse, _impl_.fund_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::QueryInsuranceFundsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::QueryInsuranceFundsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::QueryInsuranceFundsResponse, _impl_.funds_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::QueryEstimatedRedemptionsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::QueryEstimatedRedemptionsRequest, _impl_.marketid_),
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::QueryEstimatedRedemptionsRequest, _impl_.address_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::QueryEstimatedRedemptionsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::QueryEstimatedRedemptionsResponse, _impl_.amount_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::QueryPendingRedemptionsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::QueryPendingRedemptionsRequest, _impl_.marketid_),
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::QueryPendingRedemptionsRequest, _impl_.address_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::QueryPendingRedemptionsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::QueryPendingRedemptionsResponse, _impl_.amount_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::QueryModuleStateRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::QueryModuleStateResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::QueryModuleStateResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::insurance::v1beta1::QueryModuleStateResponse, _impl_.state_),
    0,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::injective::insurance::v1beta1::QueryInsuranceParamsRequest)},
        { 8, 17, -1, sizeof(::injective::insurance::v1beta1::QueryInsuranceParamsResponse)},
        { 18, -1, -1, sizeof(::injective::insurance::v1beta1::QueryInsuranceFundRequest)},
        { 27, 36, -1, sizeof(::injective::insurance::v1beta1::QueryInsuranceFundResponse)},
        { 37, -1, -1, sizeof(::injective::insurance::v1beta1::QueryInsuranceFundsRequest)},
        { 45, -1, -1, sizeof(::injective::insurance::v1beta1::QueryInsuranceFundsResponse)},
        { 54, -1, -1, sizeof(::injective::insurance::v1beta1::QueryEstimatedRedemptionsRequest)},
        { 64, -1, -1, sizeof(::injective::insurance::v1beta1::QueryEstimatedRedemptionsResponse)},
        { 73, -1, -1, sizeof(::injective::insurance::v1beta1::QueryPendingRedemptionsRequest)},
        { 83, -1, -1, sizeof(::injective::insurance::v1beta1::QueryPendingRedemptionsResponse)},
        { 92, -1, -1, sizeof(::injective::insurance::v1beta1::QueryModuleStateRequest)},
        { 100, 109, -1, sizeof(::injective::insurance::v1beta1::QueryModuleStateResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::injective::insurance::v1beta1::_QueryInsuranceParamsRequest_default_instance_._instance,
    &::injective::insurance::v1beta1::_QueryInsuranceParamsResponse_default_instance_._instance,
    &::injective::insurance::v1beta1::_QueryInsuranceFundRequest_default_instance_._instance,
    &::injective::insurance::v1beta1::_QueryInsuranceFundResponse_default_instance_._instance,
    &::injective::insurance::v1beta1::_QueryInsuranceFundsRequest_default_instance_._instance,
    &::injective::insurance::v1beta1::_QueryInsuranceFundsResponse_default_instance_._instance,
    &::injective::insurance::v1beta1::_QueryEstimatedRedemptionsRequest_default_instance_._instance,
    &::injective::insurance::v1beta1::_QueryEstimatedRedemptionsResponse_default_instance_._instance,
    &::injective::insurance::v1beta1::_QueryPendingRedemptionsRequest_default_instance_._instance,
    &::injective::insurance::v1beta1::_QueryPendingRedemptionsResponse_default_instance_._instance,
    &::injective::insurance::v1beta1::_QueryModuleStateRequest_default_instance_._instance,
    &::injective::insurance::v1beta1::_QueryModuleStateResponse_default_instance_._instance,
};
const char descriptor_table_protodef_injective_2finsurance_2fv1beta1_2fquery_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\'injective/insurance/v1beta1/query.prot"
    "o\022\033injective.insurance.v1beta1\032\034google/a"
    "pi/annotations.proto\032+injective/insuranc"
    "e/v1beta1/insurance.proto\032\024gogoproto/gog"
    "o.proto\032\036cosmos/base/v1beta1/coin.proto\032"
    ")injective/insurance/v1beta1/genesis.pro"
    "to\"\035\n\033QueryInsuranceParamsRequest\"a\n\034Que"
    "ryInsuranceParamsResponse\022A\n\006params\030\001 \001("
    "\0132#.injective.insurance.v1beta1.ParamsB\004"
    "\310\336\037\000R\006params\"8\n\031QueryInsuranceFundReques"
    "t\022\033\n\tmarket_id\030\001 \001(\tR\010marketId\"\\\n\032QueryI"
    "nsuranceFundResponse\022>\n\004fund\030\001 \001(\0132*.inj"
    "ective.insurance.v1beta1.InsuranceFundR\004"
    "fund\"\034\n\032QueryInsuranceFundsRequest\"e\n\033Qu"
    "eryInsuranceFundsResponse\022F\n\005funds\030\001 \003(\013"
    "2*.injective.insurance.v1beta1.Insurance"
    "FundB\004\310\336\037\000R\005funds\"X\n QueryEstimatedRedem"
    "ptionsRequest\022\032\n\010marketId\030\001 \001(\tR\010marketI"
    "d\022\030\n\007address\030\002 \001(\tR\007address\"\\\n!QueryEsti"
    "matedRedemptionsResponse\0227\n\006amount\030\001 \003(\013"
    "2\031.cosmos.base.v1beta1.CoinB\004\310\336\037\000R\006amoun"
    "t\"V\n\036QueryPendingRedemptionsRequest\022\032\n\010m"
    "arketId\030\001 \001(\tR\010marketId\022\030\n\007address\030\002 \001(\t"
    "R\007address\"Z\n\037QueryPendingRedemptionsResp"
    "onse\0227\n\006amount\030\001 \003(\0132\031.cosmos.base.v1bet"
    "a1.CoinB\004\310\336\037\000R\006amount\"\031\n\027QueryModuleStat"
    "eRequest\"[\n\030QueryModuleStateResponse\022\?\n\005"
    "state\030\001 \001(\0132).injective.insurance.v1beta"
    "1.GenesisStateR\005state2\226\t\n\005Query\022\263\001\n\017Insu"
    "ranceParams\0228.injective.insurance.v1beta"
    "1.QueryInsuranceParamsRequest\0329.injectiv"
    "e.insurance.v1beta1.QueryInsuranceParams"
    "Response\"+\202\323\344\223\002%\022#/injective/insurance/v"
    "1beta1/params\022\301\001\n\rInsuranceFund\0226.inject"
    "ive.insurance.v1beta1.QueryInsuranceFund"
    "Request\0327.injective.insurance.v1beta1.Qu"
    "eryInsuranceFundResponse\"\?\202\323\344\223\0029\0227/injec"
    "tive/insurance/v1beta1/insurance_fund/{m"
    "arket_id}\022\271\001\n\016InsuranceFunds\0227.injective"
    ".insurance.v1beta1.QueryInsuranceFundsRe"
    "quest\0328.injective.insurance.v1beta1.Quer"
    "yInsuranceFundsResponse\"4\202\323\344\223\002.\022,/inject"
    "ive/insurance/v1beta1/insurance_funds\022\321\001"
    "\n\024EstimatedRedemptions\022=.injective.insur"
    "ance.v1beta1.QueryEstimatedRedemptionsRe"
    "quest\032>.injective.insurance.v1beta1.Quer"
    "yEstimatedRedemptionsResponse\":\202\323\344\223\0024\0222/"
    "injective/insurance/v1beta1/estimated_re"
    "demptions\022\311\001\n\022PendingRedemptions\022;.injec"
    "tive.insurance.v1beta1.QueryPendingRedem"
    "ptionsRequest\032<.injective.insurance.v1be"
    "ta1.QueryPendingRedemptionsResponse\"8\202\323\344"
    "\223\0022\0220/injective/insurance/v1beta1/pendin"
    "g_redemptions\022\266\001\n\024InsuranceModuleState\0224"
    ".injective.insurance.v1beta1.QueryModule"
    "StateRequest\0325.injective.insurance.v1bet"
    "a1.QueryModuleStateResponse\"1\202\323\344\223\002+\022)/in"
    "jective/insurance/v1beta1/module_stateB\214"
    "\002\n\037com.injective.insurance.v1beta1B\nQuer"
    "yProtoP\001ZOgithub.com/InjectiveLabs/injec"
    "tive-core/injective-chain/modules/insura"
    "nce/types\242\002\003IIX\252\002\033Injective.Insurance.V1"
    "beta1\312\002\033Injective\\Insurance\\V1beta1\342\002\'In"
    "jective\\Insurance\\V1beta1\\GPBMetadata\352\002\035"
    "Injective::Insurance::V1beta1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_injective_2finsurance_2fv1beta1_2fquery_2eproto_deps[5] =
    {
        &::descriptor_table_cosmos_2fbase_2fv1beta1_2fcoin_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_google_2fapi_2fannotations_2eproto,
        &::descriptor_table_injective_2finsurance_2fv1beta1_2fgenesis_2eproto,
        &::descriptor_table_injective_2finsurance_2fv1beta1_2finsurance_2eproto,
};
static ::absl::once_flag descriptor_table_injective_2finsurance_2fv1beta1_2fquery_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_injective_2finsurance_2fv1beta1_2fquery_2eproto = {
    false,
    false,
    2597,
    descriptor_table_protodef_injective_2finsurance_2fv1beta1_2fquery_2eproto,
    "injective/insurance/v1beta1/query.proto",
    &descriptor_table_injective_2finsurance_2fv1beta1_2fquery_2eproto_once,
    descriptor_table_injective_2finsurance_2fv1beta1_2fquery_2eproto_deps,
    5,
    12,
    schemas,
    file_default_instances,
    TableStruct_injective_2finsurance_2fv1beta1_2fquery_2eproto::offsets,
    file_level_metadata_injective_2finsurance_2fv1beta1_2fquery_2eproto,
    file_level_enum_descriptors_injective_2finsurance_2fv1beta1_2fquery_2eproto,
    file_level_service_descriptors_injective_2finsurance_2fv1beta1_2fquery_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_injective_2finsurance_2fv1beta1_2fquery_2eproto_getter() {
  return &descriptor_table_injective_2finsurance_2fv1beta1_2fquery_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_injective_2finsurance_2fv1beta1_2fquery_2eproto(&descriptor_table_injective_2finsurance_2fv1beta1_2fquery_2eproto);
namespace injective {
namespace insurance {
namespace v1beta1 {
// ===================================================================

class QueryInsuranceParamsRequest::_Internal {
 public:
};

QueryInsuranceParamsRequest::QueryInsuranceParamsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.insurance.v1beta1.QueryInsuranceParamsRequest)
}
QueryInsuranceParamsRequest::QueryInsuranceParamsRequest(const QueryInsuranceParamsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  QueryInsuranceParamsRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.insurance.v1beta1.QueryInsuranceParamsRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryInsuranceParamsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryInsuranceParamsRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata QueryInsuranceParamsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2finsurance_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_injective_2finsurance_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_injective_2finsurance_2fv1beta1_2fquery_2eproto[0]);
}
// ===================================================================

class QueryInsuranceParamsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryInsuranceParamsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryInsuranceParamsResponse, _impl_._has_bits_);
  static const ::injective::insurance::v1beta1::Params& params(const QueryInsuranceParamsResponse* msg);
  static void set_has_params(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::injective::insurance::v1beta1::Params&
QueryInsuranceParamsResponse::_Internal::params(const QueryInsuranceParamsResponse* msg) {
  return *msg->_impl_.params_;
}
void QueryInsuranceParamsResponse::clear_params() {
  if (_impl_.params_ != nullptr) _impl_.params_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryInsuranceParamsResponse::QueryInsuranceParamsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.insurance.v1beta1.QueryInsuranceParamsResponse)
}
QueryInsuranceParamsResponse::QueryInsuranceParamsResponse(const QueryInsuranceParamsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryInsuranceParamsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.params_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.params_ = new ::injective::insurance::v1beta1::Params(*from._impl_.params_);
  }
  // @@protoc_insertion_point(copy_constructor:injective.insurance.v1beta1.QueryInsuranceParamsResponse)
}

inline void QueryInsuranceParamsResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.params_){nullptr}
  };
}

QueryInsuranceParamsResponse::~QueryInsuranceParamsResponse() {
  // @@protoc_insertion_point(destructor:injective.insurance.v1beta1.QueryInsuranceParamsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryInsuranceParamsResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.params_;
}

void QueryInsuranceParamsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryInsuranceParamsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.insurance.v1beta1.QueryInsuranceParamsResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.params_ != nullptr);
    _impl_.params_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryInsuranceParamsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .injective.insurance.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryInsuranceParamsResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.insurance.v1beta1.QueryInsuranceParamsResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .injective.insurance.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.insurance.v1beta1.QueryInsuranceParamsResponse)
  return target;
}

::size_t QueryInsuranceParamsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.insurance.v1beta1.QueryInsuranceParamsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .injective.insurance.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryInsuranceParamsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryInsuranceParamsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryInsuranceParamsResponse::GetClassData() const { return &_class_data_; }


void QueryInsuranceParamsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryInsuranceParamsResponse*>(&to_msg);
  auto& from = static_cast<const QueryInsuranceParamsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.insurance.v1beta1.QueryInsuranceParamsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_params()->::injective::insurance::v1beta1::Params::MergeFrom(
        from._internal_params());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryInsuranceParamsResponse::CopyFrom(const QueryInsuranceParamsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.insurance.v1beta1.QueryInsuranceParamsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryInsuranceParamsResponse::IsInitialized() const {
  return true;
}

void QueryInsuranceParamsResponse::InternalSwap(QueryInsuranceParamsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.params_, other->_impl_.params_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryInsuranceParamsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2finsurance_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_injective_2finsurance_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_injective_2finsurance_2fv1beta1_2fquery_2eproto[1]);
}
// ===================================================================

class QueryInsuranceFundRequest::_Internal {
 public:
};

QueryInsuranceFundRequest::QueryInsuranceFundRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.insurance.v1beta1.QueryInsuranceFundRequest)
}
QueryInsuranceFundRequest::QueryInsuranceFundRequest(const QueryInsuranceFundRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryInsuranceFundRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.market_id_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.market_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.market_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_market_id().empty()) {
    _this->_impl_.market_id_.Set(from._internal_market_id(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:injective.insurance.v1beta1.QueryInsuranceFundRequest)
}

inline void QueryInsuranceFundRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.market_id_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.market_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.market_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryInsuranceFundRequest::~QueryInsuranceFundRequest() {
  // @@protoc_insertion_point(destructor:injective.insurance.v1beta1.QueryInsuranceFundRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryInsuranceFundRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.market_id_.Destroy();
}

void QueryInsuranceFundRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryInsuranceFundRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.insurance.v1beta1.QueryInsuranceFundRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.market_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryInsuranceFundRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string market_id = 1 [json_name = "marketId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_market_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.insurance.v1beta1.QueryInsuranceFundRequest.market_id"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryInsuranceFundRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.insurance.v1beta1.QueryInsuranceFundRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string market_id = 1 [json_name = "marketId"];
  if (!this->_internal_market_id().empty()) {
    const std::string& _s = this->_internal_market_id();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.insurance.v1beta1.QueryInsuranceFundRequest.market_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.insurance.v1beta1.QueryInsuranceFundRequest)
  return target;
}

::size_t QueryInsuranceFundRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.insurance.v1beta1.QueryInsuranceFundRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string market_id = 1 [json_name = "marketId"];
  if (!this->_internal_market_id().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_market_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryInsuranceFundRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryInsuranceFundRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryInsuranceFundRequest::GetClassData() const { return &_class_data_; }


void QueryInsuranceFundRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryInsuranceFundRequest*>(&to_msg);
  auto& from = static_cast<const QueryInsuranceFundRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.insurance.v1beta1.QueryInsuranceFundRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_market_id().empty()) {
    _this->_internal_set_market_id(from._internal_market_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryInsuranceFundRequest::CopyFrom(const QueryInsuranceFundRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.insurance.v1beta1.QueryInsuranceFundRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryInsuranceFundRequest::IsInitialized() const {
  return true;
}

void QueryInsuranceFundRequest::InternalSwap(QueryInsuranceFundRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.market_id_, lhs_arena,
                                       &other->_impl_.market_id_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryInsuranceFundRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2finsurance_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_injective_2finsurance_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_injective_2finsurance_2fv1beta1_2fquery_2eproto[2]);
}
// ===================================================================

class QueryInsuranceFundResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryInsuranceFundResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryInsuranceFundResponse, _impl_._has_bits_);
  static const ::injective::insurance::v1beta1::InsuranceFund& fund(const QueryInsuranceFundResponse* msg);
  static void set_has_fund(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::injective::insurance::v1beta1::InsuranceFund&
QueryInsuranceFundResponse::_Internal::fund(const QueryInsuranceFundResponse* msg) {
  return *msg->_impl_.fund_;
}
void QueryInsuranceFundResponse::clear_fund() {
  if (_impl_.fund_ != nullptr) _impl_.fund_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryInsuranceFundResponse::QueryInsuranceFundResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.insurance.v1beta1.QueryInsuranceFundResponse)
}
QueryInsuranceFundResponse::QueryInsuranceFundResponse(const QueryInsuranceFundResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryInsuranceFundResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.fund_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.fund_ = new ::injective::insurance::v1beta1::InsuranceFund(*from._impl_.fund_);
  }
  // @@protoc_insertion_point(copy_constructor:injective.insurance.v1beta1.QueryInsuranceFundResponse)
}

inline void QueryInsuranceFundResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.fund_){nullptr}
  };
}

QueryInsuranceFundResponse::~QueryInsuranceFundResponse() {
  // @@protoc_insertion_point(destructor:injective.insurance.v1beta1.QueryInsuranceFundResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryInsuranceFundResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.fund_;
}

void QueryInsuranceFundResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryInsuranceFundResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.insurance.v1beta1.QueryInsuranceFundResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.fund_ != nullptr);
    _impl_.fund_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryInsuranceFundResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .injective.insurance.v1beta1.InsuranceFund fund = 1 [json_name = "fund"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_fund(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryInsuranceFundResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.insurance.v1beta1.QueryInsuranceFundResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .injective.insurance.v1beta1.InsuranceFund fund = 1 [json_name = "fund"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::fund(this),
        _Internal::fund(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.insurance.v1beta1.QueryInsuranceFundResponse)
  return target;
}

::size_t QueryInsuranceFundResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.insurance.v1beta1.QueryInsuranceFundResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .injective.insurance.v1beta1.InsuranceFund fund = 1 [json_name = "fund"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.fund_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryInsuranceFundResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryInsuranceFundResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryInsuranceFundResponse::GetClassData() const { return &_class_data_; }


void QueryInsuranceFundResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryInsuranceFundResponse*>(&to_msg);
  auto& from = static_cast<const QueryInsuranceFundResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.insurance.v1beta1.QueryInsuranceFundResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_fund()->::injective::insurance::v1beta1::InsuranceFund::MergeFrom(
        from._internal_fund());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryInsuranceFundResponse::CopyFrom(const QueryInsuranceFundResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.insurance.v1beta1.QueryInsuranceFundResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryInsuranceFundResponse::IsInitialized() const {
  return true;
}

void QueryInsuranceFundResponse::InternalSwap(QueryInsuranceFundResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.fund_, other->_impl_.fund_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryInsuranceFundResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2finsurance_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_injective_2finsurance_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_injective_2finsurance_2fv1beta1_2fquery_2eproto[3]);
}
// ===================================================================

class QueryInsuranceFundsRequest::_Internal {
 public:
};

QueryInsuranceFundsRequest::QueryInsuranceFundsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.insurance.v1beta1.QueryInsuranceFundsRequest)
}
QueryInsuranceFundsRequest::QueryInsuranceFundsRequest(const QueryInsuranceFundsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  QueryInsuranceFundsRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.insurance.v1beta1.QueryInsuranceFundsRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryInsuranceFundsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryInsuranceFundsRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata QueryInsuranceFundsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2finsurance_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_injective_2finsurance_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_injective_2finsurance_2fv1beta1_2fquery_2eproto[4]);
}
// ===================================================================

class QueryInsuranceFundsResponse::_Internal {
 public:
};

void QueryInsuranceFundsResponse::clear_funds() {
  _internal_mutable_funds()->Clear();
}
QueryInsuranceFundsResponse::QueryInsuranceFundsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.insurance.v1beta1.QueryInsuranceFundsResponse)
}
QueryInsuranceFundsResponse::QueryInsuranceFundsResponse(const QueryInsuranceFundsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryInsuranceFundsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.funds_){from._impl_.funds_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.insurance.v1beta1.QueryInsuranceFundsResponse)
}

inline void QueryInsuranceFundsResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.funds_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

QueryInsuranceFundsResponse::~QueryInsuranceFundsResponse() {
  // @@protoc_insertion_point(destructor:injective.insurance.v1beta1.QueryInsuranceFundsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryInsuranceFundsResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_funds()->~RepeatedPtrField();
}

void QueryInsuranceFundsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryInsuranceFundsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.insurance.v1beta1.QueryInsuranceFundsResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_funds()->Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryInsuranceFundsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .injective.insurance.v1beta1.InsuranceFund funds = 1 [json_name = "funds", (.gogoproto.nullable) = false];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_funds(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryInsuranceFundsResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.insurance.v1beta1.QueryInsuranceFundsResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .injective.insurance.v1beta1.InsuranceFund funds = 1 [json_name = "funds", (.gogoproto.nullable) = false];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_funds_size()); i < n; i++) {
    const auto& repfield = this->_internal_funds(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.insurance.v1beta1.QueryInsuranceFundsResponse)
  return target;
}

::size_t QueryInsuranceFundsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.insurance.v1beta1.QueryInsuranceFundsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .injective.insurance.v1beta1.InsuranceFund funds = 1 [json_name = "funds", (.gogoproto.nullable) = false];
  total_size += 1UL * this->_internal_funds_size();
  for (const auto& msg : this->_internal_funds()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryInsuranceFundsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryInsuranceFundsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryInsuranceFundsResponse::GetClassData() const { return &_class_data_; }


void QueryInsuranceFundsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryInsuranceFundsResponse*>(&to_msg);
  auto& from = static_cast<const QueryInsuranceFundsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.insurance.v1beta1.QueryInsuranceFundsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_funds()->MergeFrom(from._internal_funds());
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryInsuranceFundsResponse::CopyFrom(const QueryInsuranceFundsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.insurance.v1beta1.QueryInsuranceFundsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryInsuranceFundsResponse::IsInitialized() const {
  return true;
}

void QueryInsuranceFundsResponse::InternalSwap(QueryInsuranceFundsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_funds()->InternalSwap(other->_internal_mutable_funds());
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryInsuranceFundsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2finsurance_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_injective_2finsurance_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_injective_2finsurance_2fv1beta1_2fquery_2eproto[5]);
}
// ===================================================================

class QueryEstimatedRedemptionsRequest::_Internal {
 public:
};

QueryEstimatedRedemptionsRequest::QueryEstimatedRedemptionsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.insurance.v1beta1.QueryEstimatedRedemptionsRequest)
}
QueryEstimatedRedemptionsRequest::QueryEstimatedRedemptionsRequest(const QueryEstimatedRedemptionsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryEstimatedRedemptionsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.marketid_) {}

    , decltype(_impl_.address_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.marketid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.marketid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_marketid().empty()) {
    _this->_impl_.marketid_.Set(from._internal_marketid(), _this->GetArenaForAllocation());
  }
  _impl_.address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_address().empty()) {
    _this->_impl_.address_.Set(from._internal_address(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:injective.insurance.v1beta1.QueryEstimatedRedemptionsRequest)
}

inline void QueryEstimatedRedemptionsRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.marketid_) {}

    , decltype(_impl_.address_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.marketid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.marketid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryEstimatedRedemptionsRequest::~QueryEstimatedRedemptionsRequest() {
  // @@protoc_insertion_point(destructor:injective.insurance.v1beta1.QueryEstimatedRedemptionsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryEstimatedRedemptionsRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.marketid_.Destroy();
  _impl_.address_.Destroy();
}

void QueryEstimatedRedemptionsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryEstimatedRedemptionsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.insurance.v1beta1.QueryEstimatedRedemptionsRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.marketid_.ClearToEmpty();
  _impl_.address_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryEstimatedRedemptionsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string marketId = 1 [json_name = "marketId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_marketid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.insurance.v1beta1.QueryEstimatedRedemptionsRequest.marketId"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string address = 2 [json_name = "address"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.insurance.v1beta1.QueryEstimatedRedemptionsRequest.address"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryEstimatedRedemptionsRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.insurance.v1beta1.QueryEstimatedRedemptionsRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string marketId = 1 [json_name = "marketId"];
  if (!this->_internal_marketid().empty()) {
    const std::string& _s = this->_internal_marketid();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.insurance.v1beta1.QueryEstimatedRedemptionsRequest.marketId");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string address = 2 [json_name = "address"];
  if (!this->_internal_address().empty()) {
    const std::string& _s = this->_internal_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.insurance.v1beta1.QueryEstimatedRedemptionsRequest.address");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.insurance.v1beta1.QueryEstimatedRedemptionsRequest)
  return target;
}

::size_t QueryEstimatedRedemptionsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.insurance.v1beta1.QueryEstimatedRedemptionsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string marketId = 1 [json_name = "marketId"];
  if (!this->_internal_marketid().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_marketid());
  }

  // string address = 2 [json_name = "address"];
  if (!this->_internal_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryEstimatedRedemptionsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryEstimatedRedemptionsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryEstimatedRedemptionsRequest::GetClassData() const { return &_class_data_; }


void QueryEstimatedRedemptionsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryEstimatedRedemptionsRequest*>(&to_msg);
  auto& from = static_cast<const QueryEstimatedRedemptionsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.insurance.v1beta1.QueryEstimatedRedemptionsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_marketid().empty()) {
    _this->_internal_set_marketid(from._internal_marketid());
  }
  if (!from._internal_address().empty()) {
    _this->_internal_set_address(from._internal_address());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryEstimatedRedemptionsRequest::CopyFrom(const QueryEstimatedRedemptionsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.insurance.v1beta1.QueryEstimatedRedemptionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryEstimatedRedemptionsRequest::IsInitialized() const {
  return true;
}

void QueryEstimatedRedemptionsRequest::InternalSwap(QueryEstimatedRedemptionsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.marketid_, lhs_arena,
                                       &other->_impl_.marketid_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.address_, lhs_arena,
                                       &other->_impl_.address_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryEstimatedRedemptionsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2finsurance_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_injective_2finsurance_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_injective_2finsurance_2fv1beta1_2fquery_2eproto[6]);
}
// ===================================================================

class QueryEstimatedRedemptionsResponse::_Internal {
 public:
};

void QueryEstimatedRedemptionsResponse::clear_amount() {
  _internal_mutable_amount()->Clear();
}
QueryEstimatedRedemptionsResponse::QueryEstimatedRedemptionsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.insurance.v1beta1.QueryEstimatedRedemptionsResponse)
}
QueryEstimatedRedemptionsResponse::QueryEstimatedRedemptionsResponse(const QueryEstimatedRedemptionsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryEstimatedRedemptionsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.amount_){from._impl_.amount_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.insurance.v1beta1.QueryEstimatedRedemptionsResponse)
}

inline void QueryEstimatedRedemptionsResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.amount_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

QueryEstimatedRedemptionsResponse::~QueryEstimatedRedemptionsResponse() {
  // @@protoc_insertion_point(destructor:injective.insurance.v1beta1.QueryEstimatedRedemptionsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryEstimatedRedemptionsResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_amount()->~RepeatedPtrField();
}

void QueryEstimatedRedemptionsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryEstimatedRedemptionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.insurance.v1beta1.QueryEstimatedRedemptionsResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_amount()->Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryEstimatedRedemptionsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .cosmos.base.v1beta1.Coin amount = 1 [json_name = "amount", (.gogoproto.nullable) = false];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_amount(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryEstimatedRedemptionsResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.insurance.v1beta1.QueryEstimatedRedemptionsResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cosmos.base.v1beta1.Coin amount = 1 [json_name = "amount", (.gogoproto.nullable) = false];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_amount_size()); i < n; i++) {
    const auto& repfield = this->_internal_amount(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.insurance.v1beta1.QueryEstimatedRedemptionsResponse)
  return target;
}

::size_t QueryEstimatedRedemptionsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.insurance.v1beta1.QueryEstimatedRedemptionsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cosmos.base.v1beta1.Coin amount = 1 [json_name = "amount", (.gogoproto.nullable) = false];
  total_size += 1UL * this->_internal_amount_size();
  for (const auto& msg : this->_internal_amount()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryEstimatedRedemptionsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryEstimatedRedemptionsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryEstimatedRedemptionsResponse::GetClassData() const { return &_class_data_; }


void QueryEstimatedRedemptionsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryEstimatedRedemptionsResponse*>(&to_msg);
  auto& from = static_cast<const QueryEstimatedRedemptionsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.insurance.v1beta1.QueryEstimatedRedemptionsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_amount()->MergeFrom(from._internal_amount());
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryEstimatedRedemptionsResponse::CopyFrom(const QueryEstimatedRedemptionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.insurance.v1beta1.QueryEstimatedRedemptionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryEstimatedRedemptionsResponse::IsInitialized() const {
  return true;
}

void QueryEstimatedRedemptionsResponse::InternalSwap(QueryEstimatedRedemptionsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_amount()->InternalSwap(other->_internal_mutable_amount());
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryEstimatedRedemptionsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2finsurance_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_injective_2finsurance_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_injective_2finsurance_2fv1beta1_2fquery_2eproto[7]);
}
// ===================================================================

class QueryPendingRedemptionsRequest::_Internal {
 public:
};

QueryPendingRedemptionsRequest::QueryPendingRedemptionsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.insurance.v1beta1.QueryPendingRedemptionsRequest)
}
QueryPendingRedemptionsRequest::QueryPendingRedemptionsRequest(const QueryPendingRedemptionsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryPendingRedemptionsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.marketid_) {}

    , decltype(_impl_.address_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.marketid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.marketid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_marketid().empty()) {
    _this->_impl_.marketid_.Set(from._internal_marketid(), _this->GetArenaForAllocation());
  }
  _impl_.address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_address().empty()) {
    _this->_impl_.address_.Set(from._internal_address(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:injective.insurance.v1beta1.QueryPendingRedemptionsRequest)
}

inline void QueryPendingRedemptionsRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.marketid_) {}

    , decltype(_impl_.address_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.marketid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.marketid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryPendingRedemptionsRequest::~QueryPendingRedemptionsRequest() {
  // @@protoc_insertion_point(destructor:injective.insurance.v1beta1.QueryPendingRedemptionsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryPendingRedemptionsRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.marketid_.Destroy();
  _impl_.address_.Destroy();
}

void QueryPendingRedemptionsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryPendingRedemptionsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.insurance.v1beta1.QueryPendingRedemptionsRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.marketid_.ClearToEmpty();
  _impl_.address_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryPendingRedemptionsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string marketId = 1 [json_name = "marketId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_marketid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.insurance.v1beta1.QueryPendingRedemptionsRequest.marketId"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string address = 2 [json_name = "address"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.insurance.v1beta1.QueryPendingRedemptionsRequest.address"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryPendingRedemptionsRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.insurance.v1beta1.QueryPendingRedemptionsRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string marketId = 1 [json_name = "marketId"];
  if (!this->_internal_marketid().empty()) {
    const std::string& _s = this->_internal_marketid();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.insurance.v1beta1.QueryPendingRedemptionsRequest.marketId");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string address = 2 [json_name = "address"];
  if (!this->_internal_address().empty()) {
    const std::string& _s = this->_internal_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.insurance.v1beta1.QueryPendingRedemptionsRequest.address");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.insurance.v1beta1.QueryPendingRedemptionsRequest)
  return target;
}

::size_t QueryPendingRedemptionsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.insurance.v1beta1.QueryPendingRedemptionsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string marketId = 1 [json_name = "marketId"];
  if (!this->_internal_marketid().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_marketid());
  }

  // string address = 2 [json_name = "address"];
  if (!this->_internal_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryPendingRedemptionsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryPendingRedemptionsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryPendingRedemptionsRequest::GetClassData() const { return &_class_data_; }


void QueryPendingRedemptionsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryPendingRedemptionsRequest*>(&to_msg);
  auto& from = static_cast<const QueryPendingRedemptionsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.insurance.v1beta1.QueryPendingRedemptionsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_marketid().empty()) {
    _this->_internal_set_marketid(from._internal_marketid());
  }
  if (!from._internal_address().empty()) {
    _this->_internal_set_address(from._internal_address());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryPendingRedemptionsRequest::CopyFrom(const QueryPendingRedemptionsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.insurance.v1beta1.QueryPendingRedemptionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryPendingRedemptionsRequest::IsInitialized() const {
  return true;
}

void QueryPendingRedemptionsRequest::InternalSwap(QueryPendingRedemptionsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.marketid_, lhs_arena,
                                       &other->_impl_.marketid_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.address_, lhs_arena,
                                       &other->_impl_.address_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryPendingRedemptionsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2finsurance_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_injective_2finsurance_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_injective_2finsurance_2fv1beta1_2fquery_2eproto[8]);
}
// ===================================================================

class QueryPendingRedemptionsResponse::_Internal {
 public:
};

void QueryPendingRedemptionsResponse::clear_amount() {
  _internal_mutable_amount()->Clear();
}
QueryPendingRedemptionsResponse::QueryPendingRedemptionsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.insurance.v1beta1.QueryPendingRedemptionsResponse)
}
QueryPendingRedemptionsResponse::QueryPendingRedemptionsResponse(const QueryPendingRedemptionsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryPendingRedemptionsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.amount_){from._impl_.amount_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.insurance.v1beta1.QueryPendingRedemptionsResponse)
}

inline void QueryPendingRedemptionsResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.amount_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

QueryPendingRedemptionsResponse::~QueryPendingRedemptionsResponse() {
  // @@protoc_insertion_point(destructor:injective.insurance.v1beta1.QueryPendingRedemptionsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryPendingRedemptionsResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_amount()->~RepeatedPtrField();
}

void QueryPendingRedemptionsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryPendingRedemptionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.insurance.v1beta1.QueryPendingRedemptionsResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_amount()->Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryPendingRedemptionsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .cosmos.base.v1beta1.Coin amount = 1 [json_name = "amount", (.gogoproto.nullable) = false];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_amount(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryPendingRedemptionsResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.insurance.v1beta1.QueryPendingRedemptionsResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cosmos.base.v1beta1.Coin amount = 1 [json_name = "amount", (.gogoproto.nullable) = false];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_amount_size()); i < n; i++) {
    const auto& repfield = this->_internal_amount(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.insurance.v1beta1.QueryPendingRedemptionsResponse)
  return target;
}

::size_t QueryPendingRedemptionsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.insurance.v1beta1.QueryPendingRedemptionsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cosmos.base.v1beta1.Coin amount = 1 [json_name = "amount", (.gogoproto.nullable) = false];
  total_size += 1UL * this->_internal_amount_size();
  for (const auto& msg : this->_internal_amount()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryPendingRedemptionsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryPendingRedemptionsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryPendingRedemptionsResponse::GetClassData() const { return &_class_data_; }


void QueryPendingRedemptionsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryPendingRedemptionsResponse*>(&to_msg);
  auto& from = static_cast<const QueryPendingRedemptionsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.insurance.v1beta1.QueryPendingRedemptionsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_amount()->MergeFrom(from._internal_amount());
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryPendingRedemptionsResponse::CopyFrom(const QueryPendingRedemptionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.insurance.v1beta1.QueryPendingRedemptionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryPendingRedemptionsResponse::IsInitialized() const {
  return true;
}

void QueryPendingRedemptionsResponse::InternalSwap(QueryPendingRedemptionsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_amount()->InternalSwap(other->_internal_mutable_amount());
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryPendingRedemptionsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2finsurance_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_injective_2finsurance_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_injective_2finsurance_2fv1beta1_2fquery_2eproto[9]);
}
// ===================================================================

class QueryModuleStateRequest::_Internal {
 public:
};

QueryModuleStateRequest::QueryModuleStateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.insurance.v1beta1.QueryModuleStateRequest)
}
QueryModuleStateRequest::QueryModuleStateRequest(const QueryModuleStateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  QueryModuleStateRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.insurance.v1beta1.QueryModuleStateRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryModuleStateRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryModuleStateRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata QueryModuleStateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2finsurance_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_injective_2finsurance_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_injective_2finsurance_2fv1beta1_2fquery_2eproto[10]);
}
// ===================================================================

class QueryModuleStateResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryModuleStateResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryModuleStateResponse, _impl_._has_bits_);
  static const ::injective::insurance::v1beta1::GenesisState& state(const QueryModuleStateResponse* msg);
  static void set_has_state(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::injective::insurance::v1beta1::GenesisState&
QueryModuleStateResponse::_Internal::state(const QueryModuleStateResponse* msg) {
  return *msg->_impl_.state_;
}
void QueryModuleStateResponse::clear_state() {
  if (_impl_.state_ != nullptr) _impl_.state_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryModuleStateResponse::QueryModuleStateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.insurance.v1beta1.QueryModuleStateResponse)
}
QueryModuleStateResponse::QueryModuleStateResponse(const QueryModuleStateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryModuleStateResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.state_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.state_ = new ::injective::insurance::v1beta1::GenesisState(*from._impl_.state_);
  }
  // @@protoc_insertion_point(copy_constructor:injective.insurance.v1beta1.QueryModuleStateResponse)
}

inline void QueryModuleStateResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.state_){nullptr}
  };
}

QueryModuleStateResponse::~QueryModuleStateResponse() {
  // @@protoc_insertion_point(destructor:injective.insurance.v1beta1.QueryModuleStateResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryModuleStateResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.state_;
}

void QueryModuleStateResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryModuleStateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.insurance.v1beta1.QueryModuleStateResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.state_ != nullptr);
    _impl_.state_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryModuleStateResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .injective.insurance.v1beta1.GenesisState state = 1 [json_name = "state"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_state(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryModuleStateResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.insurance.v1beta1.QueryModuleStateResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .injective.insurance.v1beta1.GenesisState state = 1 [json_name = "state"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::state(this),
        _Internal::state(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.insurance.v1beta1.QueryModuleStateResponse)
  return target;
}

::size_t QueryModuleStateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.insurance.v1beta1.QueryModuleStateResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .injective.insurance.v1beta1.GenesisState state = 1 [json_name = "state"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.state_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryModuleStateResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryModuleStateResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryModuleStateResponse::GetClassData() const { return &_class_data_; }


void QueryModuleStateResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryModuleStateResponse*>(&to_msg);
  auto& from = static_cast<const QueryModuleStateResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.insurance.v1beta1.QueryModuleStateResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_state()->::injective::insurance::v1beta1::GenesisState::MergeFrom(
        from._internal_state());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryModuleStateResponse::CopyFrom(const QueryModuleStateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.insurance.v1beta1.QueryModuleStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryModuleStateResponse::IsInitialized() const {
  return true;
}

void QueryModuleStateResponse::InternalSwap(QueryModuleStateResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.state_, other->_impl_.state_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryModuleStateResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2finsurance_2fv1beta1_2fquery_2eproto_getter, &descriptor_table_injective_2finsurance_2fv1beta1_2fquery_2eproto_once,
      file_level_metadata_injective_2finsurance_2fv1beta1_2fquery_2eproto[11]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace insurance
}  // namespace injective
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::injective::insurance::v1beta1::QueryInsuranceParamsRequest*
Arena::CreateMaybeMessage< ::injective::insurance::v1beta1::QueryInsuranceParamsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::insurance::v1beta1::QueryInsuranceParamsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::insurance::v1beta1::QueryInsuranceParamsResponse*
Arena::CreateMaybeMessage< ::injective::insurance::v1beta1::QueryInsuranceParamsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::insurance::v1beta1::QueryInsuranceParamsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::insurance::v1beta1::QueryInsuranceFundRequest*
Arena::CreateMaybeMessage< ::injective::insurance::v1beta1::QueryInsuranceFundRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::insurance::v1beta1::QueryInsuranceFundRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::insurance::v1beta1::QueryInsuranceFundResponse*
Arena::CreateMaybeMessage< ::injective::insurance::v1beta1::QueryInsuranceFundResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::insurance::v1beta1::QueryInsuranceFundResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::insurance::v1beta1::QueryInsuranceFundsRequest*
Arena::CreateMaybeMessage< ::injective::insurance::v1beta1::QueryInsuranceFundsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::insurance::v1beta1::QueryInsuranceFundsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::insurance::v1beta1::QueryInsuranceFundsResponse*
Arena::CreateMaybeMessage< ::injective::insurance::v1beta1::QueryInsuranceFundsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::insurance::v1beta1::QueryInsuranceFundsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::insurance::v1beta1::QueryEstimatedRedemptionsRequest*
Arena::CreateMaybeMessage< ::injective::insurance::v1beta1::QueryEstimatedRedemptionsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::insurance::v1beta1::QueryEstimatedRedemptionsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::insurance::v1beta1::QueryEstimatedRedemptionsResponse*
Arena::CreateMaybeMessage< ::injective::insurance::v1beta1::QueryEstimatedRedemptionsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::insurance::v1beta1::QueryEstimatedRedemptionsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::insurance::v1beta1::QueryPendingRedemptionsRequest*
Arena::CreateMaybeMessage< ::injective::insurance::v1beta1::QueryPendingRedemptionsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::insurance::v1beta1::QueryPendingRedemptionsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::insurance::v1beta1::QueryPendingRedemptionsResponse*
Arena::CreateMaybeMessage< ::injective::insurance::v1beta1::QueryPendingRedemptionsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::insurance::v1beta1::QueryPendingRedemptionsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::insurance::v1beta1::QueryModuleStateRequest*
Arena::CreateMaybeMessage< ::injective::insurance::v1beta1::QueryModuleStateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::insurance::v1beta1::QueryModuleStateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::insurance::v1beta1::QueryModuleStateResponse*
Arena::CreateMaybeMessage< ::injective::insurance::v1beta1::QueryModuleStateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::insurance::v1beta1::QueryModuleStateResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
