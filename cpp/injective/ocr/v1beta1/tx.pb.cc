// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: injective/ocr/v1beta1/tx.proto

#include "injective/ocr/v1beta1/tx.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace injective {
namespace ocr {
namespace v1beta1 {
template <typename>
PROTOBUF_CONSTEXPR MsgCreateFeed::MsgCreateFeed(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.sender_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.config_)*/nullptr} {}
struct MsgCreateFeedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgCreateFeedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgCreateFeedDefaultTypeInternal() {}
  union {
    MsgCreateFeed _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgCreateFeedDefaultTypeInternal _MsgCreateFeed_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgCreateFeedResponse::MsgCreateFeedResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgCreateFeedResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgCreateFeedResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgCreateFeedResponseDefaultTypeInternal() {}
  union {
    MsgCreateFeedResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgCreateFeedResponseDefaultTypeInternal _MsgCreateFeedResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgUpdateFeed::MsgUpdateFeed(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.signers_)*/{}
  , /*decltype(_impl_.transmitters_)*/{}
  , /*decltype(_impl_.sender_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.feed_id_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.link_per_observation_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.link_per_transmission_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.link_denom_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.feed_admin_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.billing_admin_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgUpdateFeedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgUpdateFeedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgUpdateFeedDefaultTypeInternal() {}
  union {
    MsgUpdateFeed _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgUpdateFeedDefaultTypeInternal _MsgUpdateFeed_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgUpdateFeedResponse::MsgUpdateFeedResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgUpdateFeedResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgUpdateFeedResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgUpdateFeedResponseDefaultTypeInternal() {}
  union {
    MsgUpdateFeedResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgUpdateFeedResponseDefaultTypeInternal _MsgUpdateFeedResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgTransmit::MsgTransmit(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.signatures_)*/{}
  , /*decltype(_impl_.transmitter_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.config_digest_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.feed_id_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.extra_hash_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.report_)*/nullptr
  , /*decltype(_impl_.epoch_)*/ ::uint64_t{0u}

  , /*decltype(_impl_.round_)*/ ::uint64_t{0u}
} {}
struct MsgTransmitDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgTransmitDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgTransmitDefaultTypeInternal() {}
  union {
    MsgTransmit _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgTransmitDefaultTypeInternal _MsgTransmit_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgTransmitResponse::MsgTransmitResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgTransmitResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgTransmitResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgTransmitResponseDefaultTypeInternal() {}
  union {
    MsgTransmitResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgTransmitResponseDefaultTypeInternal _MsgTransmitResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgFundFeedRewardPool::MsgFundFeedRewardPool(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.sender_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.feed_id_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.amount_)*/nullptr} {}
struct MsgFundFeedRewardPoolDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgFundFeedRewardPoolDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgFundFeedRewardPoolDefaultTypeInternal() {}
  union {
    MsgFundFeedRewardPool _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgFundFeedRewardPoolDefaultTypeInternal _MsgFundFeedRewardPool_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgFundFeedRewardPoolResponse::MsgFundFeedRewardPoolResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgFundFeedRewardPoolResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgFundFeedRewardPoolResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgFundFeedRewardPoolResponseDefaultTypeInternal() {}
  union {
    MsgFundFeedRewardPoolResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgFundFeedRewardPoolResponseDefaultTypeInternal _MsgFundFeedRewardPoolResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgWithdrawFeedRewardPool::MsgWithdrawFeedRewardPool(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.sender_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.feed_id_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.amount_)*/nullptr} {}
struct MsgWithdrawFeedRewardPoolDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgWithdrawFeedRewardPoolDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgWithdrawFeedRewardPoolDefaultTypeInternal() {}
  union {
    MsgWithdrawFeedRewardPool _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgWithdrawFeedRewardPoolDefaultTypeInternal _MsgWithdrawFeedRewardPool_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgWithdrawFeedRewardPoolResponse::MsgWithdrawFeedRewardPoolResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgWithdrawFeedRewardPoolResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgWithdrawFeedRewardPoolResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgWithdrawFeedRewardPoolResponseDefaultTypeInternal() {}
  union {
    MsgWithdrawFeedRewardPoolResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgWithdrawFeedRewardPoolResponseDefaultTypeInternal _MsgWithdrawFeedRewardPoolResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgSetPayees::MsgSetPayees(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.transmitters_)*/{}
  , /*decltype(_impl_.payees_)*/{}
  , /*decltype(_impl_.sender_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.feed_id_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgSetPayeesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgSetPayeesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgSetPayeesDefaultTypeInternal() {}
  union {
    MsgSetPayees _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgSetPayeesDefaultTypeInternal _MsgSetPayees_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgSetPayeesResponse::MsgSetPayeesResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgSetPayeesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgSetPayeesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgSetPayeesResponseDefaultTypeInternal() {}
  union {
    MsgSetPayeesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgSetPayeesResponseDefaultTypeInternal _MsgSetPayeesResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgTransferPayeeship::MsgTransferPayeeship(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.sender_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.transmitter_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.feed_id_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.proposed_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgTransferPayeeshipDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgTransferPayeeshipDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgTransferPayeeshipDefaultTypeInternal() {}
  union {
    MsgTransferPayeeship _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgTransferPayeeshipDefaultTypeInternal _MsgTransferPayeeship_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgTransferPayeeshipResponse::MsgTransferPayeeshipResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgTransferPayeeshipResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgTransferPayeeshipResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgTransferPayeeshipResponseDefaultTypeInternal() {}
  union {
    MsgTransferPayeeshipResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgTransferPayeeshipResponseDefaultTypeInternal _MsgTransferPayeeshipResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgAcceptPayeeship::MsgAcceptPayeeship(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.payee_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.transmitter_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.feed_id_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgAcceptPayeeshipDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgAcceptPayeeshipDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgAcceptPayeeshipDefaultTypeInternal() {}
  union {
    MsgAcceptPayeeship _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgAcceptPayeeshipDefaultTypeInternal _MsgAcceptPayeeship_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgAcceptPayeeshipResponse::MsgAcceptPayeeshipResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgAcceptPayeeshipResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgAcceptPayeeshipResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgAcceptPayeeshipResponseDefaultTypeInternal() {}
  union {
    MsgAcceptPayeeshipResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgAcceptPayeeshipResponseDefaultTypeInternal _MsgAcceptPayeeshipResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgUpdateParams::MsgUpdateParams(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.authority_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.params_)*/nullptr} {}
struct MsgUpdateParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgUpdateParamsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgUpdateParamsDefaultTypeInternal() {}
  union {
    MsgUpdateParams _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgUpdateParamsDefaultTypeInternal _MsgUpdateParams_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgUpdateParamsResponse::MsgUpdateParamsResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgUpdateParamsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgUpdateParamsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgUpdateParamsResponseDefaultTypeInternal() {}
  union {
    MsgUpdateParamsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgUpdateParamsResponseDefaultTypeInternal _MsgUpdateParamsResponse_default_instance_;
}  // namespace v1beta1
}  // namespace ocr
}  // namespace injective
static ::_pb::Metadata file_level_metadata_injective_2focr_2fv1beta1_2ftx_2eproto[18];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_injective_2focr_2fv1beta1_2ftx_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_injective_2focr_2fv1beta1_2ftx_2eproto = nullptr;
const ::uint32_t TableStruct_injective_2focr_2fv1beta1_2ftx_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgCreateFeed, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgCreateFeed, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgCreateFeed, _impl_.sender_),
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgCreateFeed, _impl_.config_),
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgCreateFeedResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgUpdateFeed, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgUpdateFeed, _impl_.sender_),
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgUpdateFeed, _impl_.feed_id_),
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgUpdateFeed, _impl_.signers_),
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgUpdateFeed, _impl_.transmitters_),
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgUpdateFeed, _impl_.link_per_observation_),
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgUpdateFeed, _impl_.link_per_transmission_),
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgUpdateFeed, _impl_.link_denom_),
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgUpdateFeed, _impl_.feed_admin_),
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgUpdateFeed, _impl_.billing_admin_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgUpdateFeedResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgTransmit, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgTransmit, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgTransmit, _impl_.transmitter_),
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgTransmit, _impl_.config_digest_),
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgTransmit, _impl_.feed_id_),
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgTransmit, _impl_.epoch_),
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgTransmit, _impl_.round_),
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgTransmit, _impl_.extra_hash_),
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgTransmit, _impl_.report_),
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgTransmit, _impl_.signatures_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgTransmitResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgFundFeedRewardPool, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgFundFeedRewardPool, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgFundFeedRewardPool, _impl_.sender_),
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgFundFeedRewardPool, _impl_.feed_id_),
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgFundFeedRewardPool, _impl_.amount_),
    ~0u,
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgFundFeedRewardPoolResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgWithdrawFeedRewardPool, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgWithdrawFeedRewardPool, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgWithdrawFeedRewardPool, _impl_.sender_),
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgWithdrawFeedRewardPool, _impl_.feed_id_),
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgWithdrawFeedRewardPool, _impl_.amount_),
    ~0u,
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgWithdrawFeedRewardPoolResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgSetPayees, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgSetPayees, _impl_.sender_),
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgSetPayees, _impl_.feed_id_),
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgSetPayees, _impl_.transmitters_),
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgSetPayees, _impl_.payees_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgSetPayeesResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgTransferPayeeship, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgTransferPayeeship, _impl_.sender_),
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgTransferPayeeship, _impl_.transmitter_),
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgTransferPayeeship, _impl_.feed_id_),
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgTransferPayeeship, _impl_.proposed_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgTransferPayeeshipResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgAcceptPayeeship, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgAcceptPayeeship, _impl_.payee_),
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgAcceptPayeeship, _impl_.transmitter_),
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgAcceptPayeeship, _impl_.feed_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgAcceptPayeeshipResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgUpdateParams, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgUpdateParams, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgUpdateParams, _impl_.authority_),
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgUpdateParams, _impl_.params_),
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::ocr::v1beta1::MsgUpdateParamsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, 10, -1, sizeof(::injective::ocr::v1beta1::MsgCreateFeed)},
        { 12, -1, -1, sizeof(::injective::ocr::v1beta1::MsgCreateFeedResponse)},
        { 20, -1, -1, sizeof(::injective::ocr::v1beta1::MsgUpdateFeed)},
        { 37, -1, -1, sizeof(::injective::ocr::v1beta1::MsgUpdateFeedResponse)},
        { 45, 61, -1, sizeof(::injective::ocr::v1beta1::MsgTransmit)},
        { 69, -1, -1, sizeof(::injective::ocr::v1beta1::MsgTransmitResponse)},
        { 77, 88, -1, sizeof(::injective::ocr::v1beta1::MsgFundFeedRewardPool)},
        { 91, -1, -1, sizeof(::injective::ocr::v1beta1::MsgFundFeedRewardPoolResponse)},
        { 99, 110, -1, sizeof(::injective::ocr::v1beta1::MsgWithdrawFeedRewardPool)},
        { 113, -1, -1, sizeof(::injective::ocr::v1beta1::MsgWithdrawFeedRewardPoolResponse)},
        { 121, -1, -1, sizeof(::injective::ocr::v1beta1::MsgSetPayees)},
        { 133, -1, -1, sizeof(::injective::ocr::v1beta1::MsgSetPayeesResponse)},
        { 141, -1, -1, sizeof(::injective::ocr::v1beta1::MsgTransferPayeeship)},
        { 153, -1, -1, sizeof(::injective::ocr::v1beta1::MsgTransferPayeeshipResponse)},
        { 161, -1, -1, sizeof(::injective::ocr::v1beta1::MsgAcceptPayeeship)},
        { 172, -1, -1, sizeof(::injective::ocr::v1beta1::MsgAcceptPayeeshipResponse)},
        { 180, 190, -1, sizeof(::injective::ocr::v1beta1::MsgUpdateParams)},
        { 192, -1, -1, sizeof(::injective::ocr::v1beta1::MsgUpdateParamsResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::injective::ocr::v1beta1::_MsgCreateFeed_default_instance_._instance,
    &::injective::ocr::v1beta1::_MsgCreateFeedResponse_default_instance_._instance,
    &::injective::ocr::v1beta1::_MsgUpdateFeed_default_instance_._instance,
    &::injective::ocr::v1beta1::_MsgUpdateFeedResponse_default_instance_._instance,
    &::injective::ocr::v1beta1::_MsgTransmit_default_instance_._instance,
    &::injective::ocr::v1beta1::_MsgTransmitResponse_default_instance_._instance,
    &::injective::ocr::v1beta1::_MsgFundFeedRewardPool_default_instance_._instance,
    &::injective::ocr::v1beta1::_MsgFundFeedRewardPoolResponse_default_instance_._instance,
    &::injective::ocr::v1beta1::_MsgWithdrawFeedRewardPool_default_instance_._instance,
    &::injective::ocr::v1beta1::_MsgWithdrawFeedRewardPoolResponse_default_instance_._instance,
    &::injective::ocr::v1beta1::_MsgSetPayees_default_instance_._instance,
    &::injective::ocr::v1beta1::_MsgSetPayeesResponse_default_instance_._instance,
    &::injective::ocr::v1beta1::_MsgTransferPayeeship_default_instance_._instance,
    &::injective::ocr::v1beta1::_MsgTransferPayeeshipResponse_default_instance_._instance,
    &::injective::ocr::v1beta1::_MsgAcceptPayeeship_default_instance_._instance,
    &::injective::ocr::v1beta1::_MsgAcceptPayeeshipResponse_default_instance_._instance,
    &::injective::ocr::v1beta1::_MsgUpdateParams_default_instance_._instance,
    &::injective::ocr::v1beta1::_MsgUpdateParamsResponse_default_instance_._instance,
};
const char descriptor_table_protodef_injective_2focr_2fv1beta1_2ftx_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\036injective/ocr/v1beta1/tx.proto\022\025inject"
    "ive.ocr.v1beta1\032\036cosmos/base/v1beta1/coi"
    "n.proto\032\027cosmos/msg/v1/msg.proto\032\024gogopr"
    "oto/gogo.proto\032\037injective/ocr/v1beta1/oc"
    "r.proto\032\031cosmos_proto/cosmos.proto\"w\n\rMs"
    "gCreateFeed\022\026\n\006sender\030\001 \001(\tR\006sender\0229\n\006c"
    "onfig\030\002 \001(\0132!.injective.ocr.v1beta1.Feed"
    "ConfigR\006config:\023\210\240\037\000\350\240\037\000\202\347\260*\006sender\"\027\n\025M"
    "sgCreateFeedResponse\"\274\003\n\rMsgUpdateFeed\022\026"
    "\n\006sender\030\001 \001(\tR\006sender\022\027\n\007feed_id\030\002 \001(\tR"
    "\006feedId\022\030\n\007signers\030\003 \003(\tR\007signers\022\"\n\014tra"
    "nsmitters\030\004 \003(\tR\014transmitters\022`\n\024link_pe"
    "r_observation\030\005 \001(\tB.\310\336\037\001\332\336\037&github.com/"
    "cosmos/cosmos-sdk/types.IntR\022linkPerObse"
    "rvation\022b\n\025link_per_transmission\030\006 \001(\tB."
    "\310\336\037\001\332\336\037&github.com/cosmos/cosmos-sdk/typ"
    "es.IntR\023linkPerTransmission\022\035\n\nlink_deno"
    "m\030\007 \001(\tR\tlinkDenom\022\035\n\nfeed_admin\030\010 \001(\tR\t"
    "feedAdmin\022#\n\rbilling_admin\030\t \001(\tR\014billin"
    "gAdmin:\023\210\240\037\000\350\240\037\000\202\347\260*\006sender\"\027\n\025MsgUpdate"
    "FeedResponse\"\251\002\n\013MsgTransmit\022 \n\013transmit"
    "ter\030\001 \001(\tR\013transmitter\022#\n\rconfig_digest\030"
    "\002 \001(\014R\014configDigest\022\027\n\007feed_id\030\003 \001(\tR\006fe"
    "edId\022\024\n\005epoch\030\004 \001(\004R\005epoch\022\024\n\005round\030\005 \001("
    "\004R\005round\022\035\n\nextra_hash\030\006 \001(\014R\textraHash\022"
    "5\n\006report\030\007 \001(\0132\035.injective.ocr.v1beta1."
    "ReportR\006report\022\036\n\nsignatures\030\010 \003(\014R\nsign"
    "atures:\030\210\240\037\000\350\240\037\000\202\347\260*\013transmitter\"\025\n\023MsgT"
    "ransmitResponse\"\226\001\n\025MsgFundFeedRewardPoo"
    "l\022\026\n\006sender\030\001 \001(\tR\006sender\022\027\n\007feed_id\030\002 \001"
    "(\tR\006feedId\0227\n\006amount\030\003 \001(\0132\031.cosmos.base"
    ".v1beta1.CoinB\004\310\336\037\000R\006amount:\023\210\240\037\000\350\240\037\000\202\347\260"
    "*\006sender\"\037\n\035MsgFundFeedRewardPoolRespons"
    "e\"\232\001\n\031MsgWithdrawFeedRewardPool\022\026\n\006sende"
    "r\030\001 \001(\tR\006sender\022\027\n\007feed_id\030\002 \001(\tR\006feedId"
    "\0227\n\006amount\030\003 \001(\0132\031.cosmos.base.v1beta1.C"
    "oinB\004\310\336\037\000R\006amount:\023\210\240\037\000\350\240\037\000\202\347\260*\006sender\"#"
    "\n!MsgWithdrawFeedRewardPoolResponse\"\220\001\n\014"
    "MsgSetPayees\022\026\n\006sender\030\001 \001(\tR\006sender\022\027\n\007"
    "feed_id\030\002 \001(\tR\006feedId\022\"\n\014transmitters\030\003 "
    "\003(\tR\014transmitters\022\026\n\006payees\030\004 \003(\tR\006payee"
    "s:\023\210\240\037\000\350\240\037\000\202\347\260*\006sender\"\026\n\024MsgSetPayeesRe"
    "sponse\"\232\001\n\024MsgTransferPayeeship\022\026\n\006sende"
    "r\030\001 \001(\tR\006sender\022 \n\013transmitter\030\002 \001(\tR\013tr"
    "ansmitter\022\027\n\007feed_id\030\003 \001(\tR\006feedId\022\032\n\010pr"
    "oposed\030\004 \001(\tR\010proposed:\023\210\240\037\000\350\240\037\000\202\347\260*\006sen"
    "der\"\036\n\034MsgTransferPayeeshipResponse\"\177\n\022M"
    "sgAcceptPayeeship\022\024\n\005payee\030\001 \001(\tR\005payee\022"
    " \n\013transmitter\030\002 \001(\tR\013transmitter\022\027\n\007fee"
    "d_id\030\003 \001(\tR\006feedId:\030\210\240\037\000\350\240\037\000\202\347\260*\013transmi"
    "tter\"\034\n\032MsgAcceptPayeeshipResponse\"\226\001\n\017M"
    "sgUpdateParams\0226\n\tauthority\030\001 \001(\tB\030\322\264-\024c"
    "osmos.AddressStringR\tauthority\022;\n\006params"
    "\030\002 \001(\0132\035.injective.ocr.v1beta1.ParamsB\004\310"
    "\336\037\000R\006params:\016\202\347\260*\tauthority\"\031\n\027MsgUpdate"
    "ParamsResponse2\325\007\n\003Msg\022`\n\nCreateFeed\022$.i"
    "njective.ocr.v1beta1.MsgCreateFeed\032,.inj"
    "ective.ocr.v1beta1.MsgCreateFeedResponse"
    "\022`\n\nUpdateFeed\022$.injective.ocr.v1beta1.M"
    "sgUpdateFeed\032,.injective.ocr.v1beta1.Msg"
    "UpdateFeedResponse\022Z\n\010Transmit\022\".injecti"
    "ve.ocr.v1beta1.MsgTransmit\032*.injective.o"
    "cr.v1beta1.MsgTransmitResponse\022x\n\022FundFe"
    "edRewardPool\022,.injective.ocr.v1beta1.Msg"
    "FundFeedRewardPool\0324.injective.ocr.v1bet"
    "a1.MsgFundFeedRewardPoolResponse\022\204\001\n\026Wit"
    "hdrawFeedRewardPool\0220.injective.ocr.v1be"
    "ta1.MsgWithdrawFeedRewardPool\0328.injectiv"
    "e.ocr.v1beta1.MsgWithdrawFeedRewardPoolR"
    "esponse\022]\n\tSetPayees\022#.injective.ocr.v1b"
    "eta1.MsgSetPayees\032+.injective.ocr.v1beta"
    "1.MsgSetPayeesResponse\022u\n\021TransferPayees"
    "hip\022+.injective.ocr.v1beta1.MsgTransferP"
    "ayeeship\0323.injective.ocr.v1beta1.MsgTran"
    "sferPayeeshipResponse\022o\n\017AcceptPayeeship"
    "\022).injective.ocr.v1beta1.MsgAcceptPayees"
    "hip\0321.injective.ocr.v1beta1.MsgAcceptPay"
    "eeshipResponse\022f\n\014UpdateParams\022&.injecti"
    "ve.ocr.v1beta1.MsgUpdateParams\032..injecti"
    "ve.ocr.v1beta1.MsgUpdateParamsResponseB\345"
    "\001\n\031com.injective.ocr.v1beta1B\007TxProtoP\001Z"
    "Igithub.com/InjectiveLabs/injective-core"
    "/injective-chain/modules/ocr/types\242\002\003IOX"
    "\252\002\025Injective.Ocr.V1beta1\312\002\025Injective\\Ocr"
    "\\V1beta1\342\002!Injective\\Ocr\\V1beta1\\GPBMeta"
    "data\352\002\027Injective::Ocr::V1beta1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_injective_2focr_2fv1beta1_2ftx_2eproto_deps[5] =
    {
        &::descriptor_table_cosmos_2fbase_2fv1beta1_2fcoin_2eproto,
        &::descriptor_table_cosmos_2fmsg_2fv1_2fmsg_2eproto,
        &::descriptor_table_cosmos_5fproto_2fcosmos_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_injective_2focr_2fv1beta1_2focr_2eproto,
};
static ::absl::once_flag descriptor_table_injective_2focr_2fv1beta1_2ftx_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_injective_2focr_2fv1beta1_2ftx_2eproto = {
    false,
    false,
    3438,
    descriptor_table_protodef_injective_2focr_2fv1beta1_2ftx_2eproto,
    "injective/ocr/v1beta1/tx.proto",
    &descriptor_table_injective_2focr_2fv1beta1_2ftx_2eproto_once,
    descriptor_table_injective_2focr_2fv1beta1_2ftx_2eproto_deps,
    5,
    18,
    schemas,
    file_default_instances,
    TableStruct_injective_2focr_2fv1beta1_2ftx_2eproto::offsets,
    file_level_metadata_injective_2focr_2fv1beta1_2ftx_2eproto,
    file_level_enum_descriptors_injective_2focr_2fv1beta1_2ftx_2eproto,
    file_level_service_descriptors_injective_2focr_2fv1beta1_2ftx_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_injective_2focr_2fv1beta1_2ftx_2eproto_getter() {
  return &descriptor_table_injective_2focr_2fv1beta1_2ftx_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_injective_2focr_2fv1beta1_2ftx_2eproto(&descriptor_table_injective_2focr_2fv1beta1_2ftx_2eproto);
namespace injective {
namespace ocr {
namespace v1beta1 {
// ===================================================================

class MsgCreateFeed::_Internal {
 public:
  using HasBits = decltype(std::declval<MsgCreateFeed>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MsgCreateFeed, _impl_._has_bits_);
  static const ::injective::ocr::v1beta1::FeedConfig& config(const MsgCreateFeed* msg);
  static void set_has_config(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::injective::ocr::v1beta1::FeedConfig&
MsgCreateFeed::_Internal::config(const MsgCreateFeed* msg) {
  return *msg->_impl_.config_;
}
void MsgCreateFeed::clear_config() {
  if (_impl_.config_ != nullptr) _impl_.config_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
MsgCreateFeed::MsgCreateFeed(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.ocr.v1beta1.MsgCreateFeed)
}
MsgCreateFeed::MsgCreateFeed(const MsgCreateFeed& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgCreateFeed* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.sender_) {}

    , decltype(_impl_.config_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sender().empty()) {
    _this->_impl_.sender_.Set(from._internal_sender(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.config_ = new ::injective::ocr::v1beta1::FeedConfig(*from._impl_.config_);
  }
  // @@protoc_insertion_point(copy_constructor:injective.ocr.v1beta1.MsgCreateFeed)
}

inline void MsgCreateFeed::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.sender_) {}

    , decltype(_impl_.config_){nullptr}
  };
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgCreateFeed::~MsgCreateFeed() {
  // @@protoc_insertion_point(destructor:injective.ocr.v1beta1.MsgCreateFeed)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgCreateFeed::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.sender_.Destroy();
  if (this != internal_default_instance()) delete _impl_.config_;
}

void MsgCreateFeed::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgCreateFeed::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.ocr.v1beta1.MsgCreateFeed)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sender_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.config_ != nullptr);
    _impl_.config_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgCreateFeed::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string sender = 1 [json_name = "sender"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_sender();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.ocr.v1beta1.MsgCreateFeed.sender"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .injective.ocr.v1beta1.FeedConfig config = 2 [json_name = "config"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_config(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgCreateFeed::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.ocr.v1beta1.MsgCreateFeed)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string sender = 1 [json_name = "sender"];
  if (!this->_internal_sender().empty()) {
    const std::string& _s = this->_internal_sender();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.ocr.v1beta1.MsgCreateFeed.sender");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .injective.ocr.v1beta1.FeedConfig config = 2 [json_name = "config"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::config(this),
        _Internal::config(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.ocr.v1beta1.MsgCreateFeed)
  return target;
}

::size_t MsgCreateFeed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.ocr.v1beta1.MsgCreateFeed)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string sender = 1 [json_name = "sender"];
  if (!this->_internal_sender().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_sender());
  }

  // .injective.ocr.v1beta1.FeedConfig config = 2 [json_name = "config"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.config_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgCreateFeed::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgCreateFeed::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgCreateFeed::GetClassData() const { return &_class_data_; }


void MsgCreateFeed::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgCreateFeed*>(&to_msg);
  auto& from = static_cast<const MsgCreateFeed&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.ocr.v1beta1.MsgCreateFeed)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sender().empty()) {
    _this->_internal_set_sender(from._internal_sender());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_config()->::injective::ocr::v1beta1::FeedConfig::MergeFrom(
        from._internal_config());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgCreateFeed::CopyFrom(const MsgCreateFeed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.ocr.v1beta1.MsgCreateFeed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgCreateFeed::IsInitialized() const {
  return true;
}

void MsgCreateFeed::InternalSwap(MsgCreateFeed* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_, lhs_arena,
                                       &other->_impl_.sender_, rhs_arena);
  swap(_impl_.config_, other->_impl_.config_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgCreateFeed::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2focr_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_injective_2focr_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_injective_2focr_2fv1beta1_2ftx_2eproto[0]);
}
// ===================================================================

class MsgCreateFeedResponse::_Internal {
 public:
};

MsgCreateFeedResponse::MsgCreateFeedResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.ocr.v1beta1.MsgCreateFeedResponse)
}
MsgCreateFeedResponse::MsgCreateFeedResponse(const MsgCreateFeedResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgCreateFeedResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.ocr.v1beta1.MsgCreateFeedResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgCreateFeedResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgCreateFeedResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgCreateFeedResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2focr_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_injective_2focr_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_injective_2focr_2fv1beta1_2ftx_2eproto[1]);
}
// ===================================================================

class MsgUpdateFeed::_Internal {
 public:
};

MsgUpdateFeed::MsgUpdateFeed(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.ocr.v1beta1.MsgUpdateFeed)
}
MsgUpdateFeed::MsgUpdateFeed(const MsgUpdateFeed& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgUpdateFeed* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.signers_){from._impl_.signers_}
    , decltype(_impl_.transmitters_){from._impl_.transmitters_}
    , decltype(_impl_.sender_) {}

    , decltype(_impl_.feed_id_) {}

    , decltype(_impl_.link_per_observation_) {}

    , decltype(_impl_.link_per_transmission_) {}

    , decltype(_impl_.link_denom_) {}

    , decltype(_impl_.feed_admin_) {}

    , decltype(_impl_.billing_admin_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sender().empty()) {
    _this->_impl_.sender_.Set(from._internal_sender(), _this->GetArenaForAllocation());
  }
  _impl_.feed_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.feed_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_feed_id().empty()) {
    _this->_impl_.feed_id_.Set(from._internal_feed_id(), _this->GetArenaForAllocation());
  }
  _impl_.link_per_observation_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.link_per_observation_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_link_per_observation().empty()) {
    _this->_impl_.link_per_observation_.Set(from._internal_link_per_observation(), _this->GetArenaForAllocation());
  }
  _impl_.link_per_transmission_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.link_per_transmission_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_link_per_transmission().empty()) {
    _this->_impl_.link_per_transmission_.Set(from._internal_link_per_transmission(), _this->GetArenaForAllocation());
  }
  _impl_.link_denom_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.link_denom_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_link_denom().empty()) {
    _this->_impl_.link_denom_.Set(from._internal_link_denom(), _this->GetArenaForAllocation());
  }
  _impl_.feed_admin_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.feed_admin_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_feed_admin().empty()) {
    _this->_impl_.feed_admin_.Set(from._internal_feed_admin(), _this->GetArenaForAllocation());
  }
  _impl_.billing_admin_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.billing_admin_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_billing_admin().empty()) {
    _this->_impl_.billing_admin_.Set(from._internal_billing_admin(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:injective.ocr.v1beta1.MsgUpdateFeed)
}

inline void MsgUpdateFeed::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.signers_){arena}
    , decltype(_impl_.transmitters_){arena}
    , decltype(_impl_.sender_) {}

    , decltype(_impl_.feed_id_) {}

    , decltype(_impl_.link_per_observation_) {}

    , decltype(_impl_.link_per_transmission_) {}

    , decltype(_impl_.link_denom_) {}

    , decltype(_impl_.feed_admin_) {}

    , decltype(_impl_.billing_admin_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.feed_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.feed_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.link_per_observation_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.link_per_observation_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.link_per_transmission_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.link_per_transmission_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.link_denom_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.link_denom_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.feed_admin_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.feed_admin_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.billing_admin_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.billing_admin_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgUpdateFeed::~MsgUpdateFeed() {
  // @@protoc_insertion_point(destructor:injective.ocr.v1beta1.MsgUpdateFeed)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgUpdateFeed::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_signers()->~RepeatedPtrField();
  _internal_mutable_transmitters()->~RepeatedPtrField();
  _impl_.sender_.Destroy();
  _impl_.feed_id_.Destroy();
  _impl_.link_per_observation_.Destroy();
  _impl_.link_per_transmission_.Destroy();
  _impl_.link_denom_.Destroy();
  _impl_.feed_admin_.Destroy();
  _impl_.billing_admin_.Destroy();
}

void MsgUpdateFeed::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgUpdateFeed::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.ocr.v1beta1.MsgUpdateFeed)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_signers()->Clear();
  _internal_mutable_transmitters()->Clear();
  _impl_.sender_.ClearToEmpty();
  _impl_.feed_id_.ClearToEmpty();
  _impl_.link_per_observation_.ClearToEmpty();
  _impl_.link_per_transmission_.ClearToEmpty();
  _impl_.link_denom_.ClearToEmpty();
  _impl_.feed_admin_.ClearToEmpty();
  _impl_.billing_admin_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgUpdateFeed::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string sender = 1 [json_name = "sender"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_sender();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.ocr.v1beta1.MsgUpdateFeed.sender"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string feed_id = 2 [json_name = "feedId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_feed_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.ocr.v1beta1.MsgUpdateFeed.feed_id"));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated string signers = 3 [json_name = "signers"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_signers();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "injective.ocr.v1beta1.MsgUpdateFeed.signers"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated string transmitters = 4 [json_name = "transmitters"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_transmitters();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "injective.ocr.v1beta1.MsgUpdateFeed.transmitters"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // string link_per_observation = 5 [json_name = "linkPerObservation", (.gogoproto.nullable) = true, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_link_per_observation();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.ocr.v1beta1.MsgUpdateFeed.link_per_observation"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string link_per_transmission = 6 [json_name = "linkPerTransmission", (.gogoproto.nullable) = true, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_link_per_transmission();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.ocr.v1beta1.MsgUpdateFeed.link_per_transmission"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string link_denom = 7 [json_name = "linkDenom"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_link_denom();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.ocr.v1beta1.MsgUpdateFeed.link_denom"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string feed_admin = 8 [json_name = "feedAdmin"];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_feed_admin();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.ocr.v1beta1.MsgUpdateFeed.feed_admin"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string billing_admin = 9 [json_name = "billingAdmin"];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_billing_admin();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.ocr.v1beta1.MsgUpdateFeed.billing_admin"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgUpdateFeed::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.ocr.v1beta1.MsgUpdateFeed)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string sender = 1 [json_name = "sender"];
  if (!this->_internal_sender().empty()) {
    const std::string& _s = this->_internal_sender();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.ocr.v1beta1.MsgUpdateFeed.sender");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string feed_id = 2 [json_name = "feedId"];
  if (!this->_internal_feed_id().empty()) {
    const std::string& _s = this->_internal_feed_id();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.ocr.v1beta1.MsgUpdateFeed.feed_id");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // repeated string signers = 3 [json_name = "signers"];
  for (int i = 0, n = this->_internal_signers_size(); i < n; ++i) {
    const auto& s = this->_internal_signers(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.ocr.v1beta1.MsgUpdateFeed.signers");
    target = stream->WriteString(3, s, target);
  }

  // repeated string transmitters = 4 [json_name = "transmitters"];
  for (int i = 0, n = this->_internal_transmitters_size(); i < n; ++i) {
    const auto& s = this->_internal_transmitters(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.ocr.v1beta1.MsgUpdateFeed.transmitters");
    target = stream->WriteString(4, s, target);
  }

  // string link_per_observation = 5 [json_name = "linkPerObservation", (.gogoproto.nullable) = true, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"];
  if (!this->_internal_link_per_observation().empty()) {
    const std::string& _s = this->_internal_link_per_observation();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.ocr.v1beta1.MsgUpdateFeed.link_per_observation");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // string link_per_transmission = 6 [json_name = "linkPerTransmission", (.gogoproto.nullable) = true, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"];
  if (!this->_internal_link_per_transmission().empty()) {
    const std::string& _s = this->_internal_link_per_transmission();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.ocr.v1beta1.MsgUpdateFeed.link_per_transmission");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // string link_denom = 7 [json_name = "linkDenom"];
  if (!this->_internal_link_denom().empty()) {
    const std::string& _s = this->_internal_link_denom();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.ocr.v1beta1.MsgUpdateFeed.link_denom");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // string feed_admin = 8 [json_name = "feedAdmin"];
  if (!this->_internal_feed_admin().empty()) {
    const std::string& _s = this->_internal_feed_admin();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.ocr.v1beta1.MsgUpdateFeed.feed_admin");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  // string billing_admin = 9 [json_name = "billingAdmin"];
  if (!this->_internal_billing_admin().empty()) {
    const std::string& _s = this->_internal_billing_admin();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.ocr.v1beta1.MsgUpdateFeed.billing_admin");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.ocr.v1beta1.MsgUpdateFeed)
  return target;
}

::size_t MsgUpdateFeed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.ocr.v1beta1.MsgUpdateFeed)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string signers = 3 [json_name = "signers"];
  total_size += 1 * ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_internal_signers().size());
  for (int i = 0, n = _internal_signers().size(); i < n; ++i) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        _internal_signers().Get(i));
  }

  // repeated string transmitters = 4 [json_name = "transmitters"];
  total_size += 1 * ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_internal_transmitters().size());
  for (int i = 0, n = _internal_transmitters().size(); i < n; ++i) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        _internal_transmitters().Get(i));
  }

  // string sender = 1 [json_name = "sender"];
  if (!this->_internal_sender().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_sender());
  }

  // string feed_id = 2 [json_name = "feedId"];
  if (!this->_internal_feed_id().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_feed_id());
  }

  // string link_per_observation = 5 [json_name = "linkPerObservation", (.gogoproto.nullable) = true, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"];
  if (!this->_internal_link_per_observation().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_link_per_observation());
  }

  // string link_per_transmission = 6 [json_name = "linkPerTransmission", (.gogoproto.nullable) = true, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"];
  if (!this->_internal_link_per_transmission().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_link_per_transmission());
  }

  // string link_denom = 7 [json_name = "linkDenom"];
  if (!this->_internal_link_denom().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_link_denom());
  }

  // string feed_admin = 8 [json_name = "feedAdmin"];
  if (!this->_internal_feed_admin().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_feed_admin());
  }

  // string billing_admin = 9 [json_name = "billingAdmin"];
  if (!this->_internal_billing_admin().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_billing_admin());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgUpdateFeed::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgUpdateFeed::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgUpdateFeed::GetClassData() const { return &_class_data_; }


void MsgUpdateFeed::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgUpdateFeed*>(&to_msg);
  auto& from = static_cast<const MsgUpdateFeed&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.ocr.v1beta1.MsgUpdateFeed)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_signers()->MergeFrom(from._internal_signers());
  _this->_internal_mutable_transmitters()->MergeFrom(from._internal_transmitters());
  if (!from._internal_sender().empty()) {
    _this->_internal_set_sender(from._internal_sender());
  }
  if (!from._internal_feed_id().empty()) {
    _this->_internal_set_feed_id(from._internal_feed_id());
  }
  if (!from._internal_link_per_observation().empty()) {
    _this->_internal_set_link_per_observation(from._internal_link_per_observation());
  }
  if (!from._internal_link_per_transmission().empty()) {
    _this->_internal_set_link_per_transmission(from._internal_link_per_transmission());
  }
  if (!from._internal_link_denom().empty()) {
    _this->_internal_set_link_denom(from._internal_link_denom());
  }
  if (!from._internal_feed_admin().empty()) {
    _this->_internal_set_feed_admin(from._internal_feed_admin());
  }
  if (!from._internal_billing_admin().empty()) {
    _this->_internal_set_billing_admin(from._internal_billing_admin());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgUpdateFeed::CopyFrom(const MsgUpdateFeed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.ocr.v1beta1.MsgUpdateFeed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgUpdateFeed::IsInitialized() const {
  return true;
}

void MsgUpdateFeed::InternalSwap(MsgUpdateFeed* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_signers()->InternalSwap(
      other->_internal_mutable_signers());
  _internal_mutable_transmitters()->InternalSwap(
      other->_internal_mutable_transmitters());
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_, lhs_arena,
                                       &other->_impl_.sender_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.feed_id_, lhs_arena,
                                       &other->_impl_.feed_id_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.link_per_observation_, lhs_arena,
                                       &other->_impl_.link_per_observation_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.link_per_transmission_, lhs_arena,
                                       &other->_impl_.link_per_transmission_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.link_denom_, lhs_arena,
                                       &other->_impl_.link_denom_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.feed_admin_, lhs_arena,
                                       &other->_impl_.feed_admin_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.billing_admin_, lhs_arena,
                                       &other->_impl_.billing_admin_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgUpdateFeed::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2focr_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_injective_2focr_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_injective_2focr_2fv1beta1_2ftx_2eproto[2]);
}
// ===================================================================

class MsgUpdateFeedResponse::_Internal {
 public:
};

MsgUpdateFeedResponse::MsgUpdateFeedResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.ocr.v1beta1.MsgUpdateFeedResponse)
}
MsgUpdateFeedResponse::MsgUpdateFeedResponse(const MsgUpdateFeedResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgUpdateFeedResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.ocr.v1beta1.MsgUpdateFeedResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgUpdateFeedResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgUpdateFeedResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgUpdateFeedResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2focr_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_injective_2focr_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_injective_2focr_2fv1beta1_2ftx_2eproto[3]);
}
// ===================================================================

class MsgTransmit::_Internal {
 public:
  using HasBits = decltype(std::declval<MsgTransmit>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MsgTransmit, _impl_._has_bits_);
  static const ::injective::ocr::v1beta1::Report& report(const MsgTransmit* msg);
  static void set_has_report(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::injective::ocr::v1beta1::Report&
MsgTransmit::_Internal::report(const MsgTransmit* msg) {
  return *msg->_impl_.report_;
}
void MsgTransmit::clear_report() {
  if (_impl_.report_ != nullptr) _impl_.report_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
MsgTransmit::MsgTransmit(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.ocr.v1beta1.MsgTransmit)
}
MsgTransmit::MsgTransmit(const MsgTransmit& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgTransmit* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.signatures_){from._impl_.signatures_}
    , decltype(_impl_.transmitter_) {}

    , decltype(_impl_.config_digest_) {}

    , decltype(_impl_.feed_id_) {}

    , decltype(_impl_.extra_hash_) {}

    , decltype(_impl_.report_){nullptr}
    , decltype(_impl_.epoch_) {}

    , decltype(_impl_.round_) {}
  };

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.transmitter_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.transmitter_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_transmitter().empty()) {
    _this->_impl_.transmitter_.Set(from._internal_transmitter(), _this->GetArenaForAllocation());
  }
  _impl_.config_digest_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.config_digest_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_config_digest().empty()) {
    _this->_impl_.config_digest_.Set(from._internal_config_digest(), _this->GetArenaForAllocation());
  }
  _impl_.feed_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.feed_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_feed_id().empty()) {
    _this->_impl_.feed_id_.Set(from._internal_feed_id(), _this->GetArenaForAllocation());
  }
  _impl_.extra_hash_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.extra_hash_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_extra_hash().empty()) {
    _this->_impl_.extra_hash_.Set(from._internal_extra_hash(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.report_ = new ::injective::ocr::v1beta1::Report(*from._impl_.report_);
  }
  ::memcpy(&_impl_.epoch_, &from._impl_.epoch_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.round_) -
    reinterpret_cast<char*>(&_impl_.epoch_)) + sizeof(_impl_.round_));
  // @@protoc_insertion_point(copy_constructor:injective.ocr.v1beta1.MsgTransmit)
}

inline void MsgTransmit::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.signatures_){arena}
    , decltype(_impl_.transmitter_) {}

    , decltype(_impl_.config_digest_) {}

    , decltype(_impl_.feed_id_) {}

    , decltype(_impl_.extra_hash_) {}

    , decltype(_impl_.report_){nullptr}
    , decltype(_impl_.epoch_) { ::uint64_t{0u} }

    , decltype(_impl_.round_) { ::uint64_t{0u} }

  };
  _impl_.transmitter_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.transmitter_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.config_digest_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.config_digest_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.feed_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.feed_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.extra_hash_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.extra_hash_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgTransmit::~MsgTransmit() {
  // @@protoc_insertion_point(destructor:injective.ocr.v1beta1.MsgTransmit)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgTransmit::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_signatures()->~RepeatedPtrField();
  _impl_.transmitter_.Destroy();
  _impl_.config_digest_.Destroy();
  _impl_.feed_id_.Destroy();
  _impl_.extra_hash_.Destroy();
  if (this != internal_default_instance()) delete _impl_.report_;
}

void MsgTransmit::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgTransmit::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.ocr.v1beta1.MsgTransmit)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_signatures()->Clear();
  _impl_.transmitter_.ClearToEmpty();
  _impl_.config_digest_.ClearToEmpty();
  _impl_.feed_id_.ClearToEmpty();
  _impl_.extra_hash_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.report_ != nullptr);
    _impl_.report_->Clear();
  }
  ::memset(&_impl_.epoch_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.round_) -
      reinterpret_cast<char*>(&_impl_.epoch_)) + sizeof(_impl_.round_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgTransmit::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string transmitter = 1 [json_name = "transmitter"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_transmitter();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.ocr.v1beta1.MsgTransmit.transmitter"));
        } else {
          goto handle_unusual;
        }
        continue;
      // bytes config_digest = 2 [json_name = "configDigest"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_config_digest();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string feed_id = 3 [json_name = "feedId"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_feed_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.ocr.v1beta1.MsgTransmit.feed_id"));
        } else {
          goto handle_unusual;
        }
        continue;
      // uint64 epoch = 4 [json_name = "epoch"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 32)) {
          _impl_.epoch_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // uint64 round = 5 [json_name = "round"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 40)) {
          _impl_.round_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // bytes extra_hash = 6 [json_name = "extraHash"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_extra_hash();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .injective.ocr.v1beta1.Report report = 7 [json_name = "report"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_report(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated bytes signatures = 8 [json_name = "signatures"];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_signatures();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgTransmit::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.ocr.v1beta1.MsgTransmit)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string transmitter = 1 [json_name = "transmitter"];
  if (!this->_internal_transmitter().empty()) {
    const std::string& _s = this->_internal_transmitter();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.ocr.v1beta1.MsgTransmit.transmitter");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // bytes config_digest = 2 [json_name = "configDigest"];
  if (!this->_internal_config_digest().empty()) {
    const std::string& _s = this->_internal_config_digest();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  // string feed_id = 3 [json_name = "feedId"];
  if (!this->_internal_feed_id().empty()) {
    const std::string& _s = this->_internal_feed_id();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.ocr.v1beta1.MsgTransmit.feed_id");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // uint64 epoch = 4 [json_name = "epoch"];
  if (this->_internal_epoch() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this->_internal_epoch(), target);
  }

  // uint64 round = 5 [json_name = "round"];
  if (this->_internal_round() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        5, this->_internal_round(), target);
  }

  // bytes extra_hash = 6 [json_name = "extraHash"];
  if (!this->_internal_extra_hash().empty()) {
    const std::string& _s = this->_internal_extra_hash();
    target = stream->WriteBytesMaybeAliased(6, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .injective.ocr.v1beta1.Report report = 7 [json_name = "report"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::report(this),
        _Internal::report(this).GetCachedSize(), target, stream);
  }

  // repeated bytes signatures = 8 [json_name = "signatures"];
  for (int i = 0, n = this->_internal_signatures_size(); i < n; ++i) {
    const auto& s = this->_internal_signatures(i);
    target = stream->WriteBytes(8, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.ocr.v1beta1.MsgTransmit)
  return target;
}

::size_t MsgTransmit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.ocr.v1beta1.MsgTransmit)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes signatures = 8 [json_name = "signatures"];
  total_size += 1 * ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_internal_signatures().size());
  for (int i = 0, n = _internal_signatures().size(); i < n; ++i) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        _internal_signatures().Get(i));
  }

  // string transmitter = 1 [json_name = "transmitter"];
  if (!this->_internal_transmitter().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_transmitter());
  }

  // bytes config_digest = 2 [json_name = "configDigest"];
  if (!this->_internal_config_digest().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
                                    this->_internal_config_digest());
  }

  // string feed_id = 3 [json_name = "feedId"];
  if (!this->_internal_feed_id().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_feed_id());
  }

  // bytes extra_hash = 6 [json_name = "extraHash"];
  if (!this->_internal_extra_hash().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
                                    this->_internal_extra_hash());
  }

  // .injective.ocr.v1beta1.Report report = 7 [json_name = "report"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.report_);
  }

  // uint64 epoch = 4 [json_name = "epoch"];
  if (this->_internal_epoch() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_epoch());
  }

  // uint64 round = 5 [json_name = "round"];
  if (this->_internal_round() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_round());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgTransmit::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgTransmit::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgTransmit::GetClassData() const { return &_class_data_; }


void MsgTransmit::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgTransmit*>(&to_msg);
  auto& from = static_cast<const MsgTransmit&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.ocr.v1beta1.MsgTransmit)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_signatures()->MergeFrom(from._internal_signatures());
  if (!from._internal_transmitter().empty()) {
    _this->_internal_set_transmitter(from._internal_transmitter());
  }
  if (!from._internal_config_digest().empty()) {
    _this->_internal_set_config_digest(from._internal_config_digest());
  }
  if (!from._internal_feed_id().empty()) {
    _this->_internal_set_feed_id(from._internal_feed_id());
  }
  if (!from._internal_extra_hash().empty()) {
    _this->_internal_set_extra_hash(from._internal_extra_hash());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_report()->::injective::ocr::v1beta1::Report::MergeFrom(
        from._internal_report());
  }
  if (from._internal_epoch() != 0) {
    _this->_internal_set_epoch(from._internal_epoch());
  }
  if (from._internal_round() != 0) {
    _this->_internal_set_round(from._internal_round());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgTransmit::CopyFrom(const MsgTransmit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.ocr.v1beta1.MsgTransmit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgTransmit::IsInitialized() const {
  return true;
}

void MsgTransmit::InternalSwap(MsgTransmit* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _internal_mutable_signatures()->InternalSwap(
      other->_internal_mutable_signatures());
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.transmitter_, lhs_arena,
                                       &other->_impl_.transmitter_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.config_digest_, lhs_arena,
                                       &other->_impl_.config_digest_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.feed_id_, lhs_arena,
                                       &other->_impl_.feed_id_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.extra_hash_, lhs_arena,
                                       &other->_impl_.extra_hash_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MsgTransmit, _impl_.round_)
      + sizeof(MsgTransmit::_impl_.round_)
      - PROTOBUF_FIELD_OFFSET(MsgTransmit, _impl_.report_)>(
          reinterpret_cast<char*>(&_impl_.report_),
          reinterpret_cast<char*>(&other->_impl_.report_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgTransmit::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2focr_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_injective_2focr_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_injective_2focr_2fv1beta1_2ftx_2eproto[4]);
}
// ===================================================================

class MsgTransmitResponse::_Internal {
 public:
};

MsgTransmitResponse::MsgTransmitResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.ocr.v1beta1.MsgTransmitResponse)
}
MsgTransmitResponse::MsgTransmitResponse(const MsgTransmitResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgTransmitResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.ocr.v1beta1.MsgTransmitResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgTransmitResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgTransmitResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgTransmitResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2focr_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_injective_2focr_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_injective_2focr_2fv1beta1_2ftx_2eproto[5]);
}
// ===================================================================

class MsgFundFeedRewardPool::_Internal {
 public:
  using HasBits = decltype(std::declval<MsgFundFeedRewardPool>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MsgFundFeedRewardPool, _impl_._has_bits_);
  static const ::cosmos::base::v1beta1::Coin& amount(const MsgFundFeedRewardPool* msg);
  static void set_has_amount(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::v1beta1::Coin&
MsgFundFeedRewardPool::_Internal::amount(const MsgFundFeedRewardPool* msg) {
  return *msg->_impl_.amount_;
}
void MsgFundFeedRewardPool::clear_amount() {
  if (_impl_.amount_ != nullptr) _impl_.amount_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
MsgFundFeedRewardPool::MsgFundFeedRewardPool(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.ocr.v1beta1.MsgFundFeedRewardPool)
}
MsgFundFeedRewardPool::MsgFundFeedRewardPool(const MsgFundFeedRewardPool& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgFundFeedRewardPool* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.sender_) {}

    , decltype(_impl_.feed_id_) {}

    , decltype(_impl_.amount_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sender().empty()) {
    _this->_impl_.sender_.Set(from._internal_sender(), _this->GetArenaForAllocation());
  }
  _impl_.feed_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.feed_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_feed_id().empty()) {
    _this->_impl_.feed_id_.Set(from._internal_feed_id(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.amount_ = new ::cosmos::base::v1beta1::Coin(*from._impl_.amount_);
  }
  // @@protoc_insertion_point(copy_constructor:injective.ocr.v1beta1.MsgFundFeedRewardPool)
}

inline void MsgFundFeedRewardPool::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.sender_) {}

    , decltype(_impl_.feed_id_) {}

    , decltype(_impl_.amount_){nullptr}
  };
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.feed_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.feed_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgFundFeedRewardPool::~MsgFundFeedRewardPool() {
  // @@protoc_insertion_point(destructor:injective.ocr.v1beta1.MsgFundFeedRewardPool)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgFundFeedRewardPool::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.sender_.Destroy();
  _impl_.feed_id_.Destroy();
  if (this != internal_default_instance()) delete _impl_.amount_;
}

void MsgFundFeedRewardPool::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgFundFeedRewardPool::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.ocr.v1beta1.MsgFundFeedRewardPool)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sender_.ClearToEmpty();
  _impl_.feed_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.amount_ != nullptr);
    _impl_.amount_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgFundFeedRewardPool::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string sender = 1 [json_name = "sender"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_sender();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.ocr.v1beta1.MsgFundFeedRewardPool.sender"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string feed_id = 2 [json_name = "feedId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_feed_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.ocr.v1beta1.MsgFundFeedRewardPool.feed_id"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_amount(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgFundFeedRewardPool::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.ocr.v1beta1.MsgFundFeedRewardPool)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string sender = 1 [json_name = "sender"];
  if (!this->_internal_sender().empty()) {
    const std::string& _s = this->_internal_sender();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.ocr.v1beta1.MsgFundFeedRewardPool.sender");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string feed_id = 2 [json_name = "feedId"];
  if (!this->_internal_feed_id().empty()) {
    const std::string& _s = this->_internal_feed_id();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.ocr.v1beta1.MsgFundFeedRewardPool.feed_id");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::amount(this),
        _Internal::amount(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.ocr.v1beta1.MsgFundFeedRewardPool)
  return target;
}

::size_t MsgFundFeedRewardPool::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.ocr.v1beta1.MsgFundFeedRewardPool)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string sender = 1 [json_name = "sender"];
  if (!this->_internal_sender().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_sender());
  }

  // string feed_id = 2 [json_name = "feedId"];
  if (!this->_internal_feed_id().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_feed_id());
  }

  // .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.amount_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgFundFeedRewardPool::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgFundFeedRewardPool::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgFundFeedRewardPool::GetClassData() const { return &_class_data_; }


void MsgFundFeedRewardPool::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgFundFeedRewardPool*>(&to_msg);
  auto& from = static_cast<const MsgFundFeedRewardPool&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.ocr.v1beta1.MsgFundFeedRewardPool)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sender().empty()) {
    _this->_internal_set_sender(from._internal_sender());
  }
  if (!from._internal_feed_id().empty()) {
    _this->_internal_set_feed_id(from._internal_feed_id());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_amount()->::cosmos::base::v1beta1::Coin::MergeFrom(
        from._internal_amount());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgFundFeedRewardPool::CopyFrom(const MsgFundFeedRewardPool& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.ocr.v1beta1.MsgFundFeedRewardPool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgFundFeedRewardPool::IsInitialized() const {
  return true;
}

void MsgFundFeedRewardPool::InternalSwap(MsgFundFeedRewardPool* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_, lhs_arena,
                                       &other->_impl_.sender_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.feed_id_, lhs_arena,
                                       &other->_impl_.feed_id_, rhs_arena);
  swap(_impl_.amount_, other->_impl_.amount_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgFundFeedRewardPool::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2focr_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_injective_2focr_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_injective_2focr_2fv1beta1_2ftx_2eproto[6]);
}
// ===================================================================

class MsgFundFeedRewardPoolResponse::_Internal {
 public:
};

MsgFundFeedRewardPoolResponse::MsgFundFeedRewardPoolResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.ocr.v1beta1.MsgFundFeedRewardPoolResponse)
}
MsgFundFeedRewardPoolResponse::MsgFundFeedRewardPoolResponse(const MsgFundFeedRewardPoolResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgFundFeedRewardPoolResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.ocr.v1beta1.MsgFundFeedRewardPoolResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgFundFeedRewardPoolResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgFundFeedRewardPoolResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgFundFeedRewardPoolResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2focr_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_injective_2focr_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_injective_2focr_2fv1beta1_2ftx_2eproto[7]);
}
// ===================================================================

class MsgWithdrawFeedRewardPool::_Internal {
 public:
  using HasBits = decltype(std::declval<MsgWithdrawFeedRewardPool>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MsgWithdrawFeedRewardPool, _impl_._has_bits_);
  static const ::cosmos::base::v1beta1::Coin& amount(const MsgWithdrawFeedRewardPool* msg);
  static void set_has_amount(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::v1beta1::Coin&
MsgWithdrawFeedRewardPool::_Internal::amount(const MsgWithdrawFeedRewardPool* msg) {
  return *msg->_impl_.amount_;
}
void MsgWithdrawFeedRewardPool::clear_amount() {
  if (_impl_.amount_ != nullptr) _impl_.amount_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
MsgWithdrawFeedRewardPool::MsgWithdrawFeedRewardPool(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.ocr.v1beta1.MsgWithdrawFeedRewardPool)
}
MsgWithdrawFeedRewardPool::MsgWithdrawFeedRewardPool(const MsgWithdrawFeedRewardPool& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgWithdrawFeedRewardPool* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.sender_) {}

    , decltype(_impl_.feed_id_) {}

    , decltype(_impl_.amount_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sender().empty()) {
    _this->_impl_.sender_.Set(from._internal_sender(), _this->GetArenaForAllocation());
  }
  _impl_.feed_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.feed_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_feed_id().empty()) {
    _this->_impl_.feed_id_.Set(from._internal_feed_id(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.amount_ = new ::cosmos::base::v1beta1::Coin(*from._impl_.amount_);
  }
  // @@protoc_insertion_point(copy_constructor:injective.ocr.v1beta1.MsgWithdrawFeedRewardPool)
}

inline void MsgWithdrawFeedRewardPool::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.sender_) {}

    , decltype(_impl_.feed_id_) {}

    , decltype(_impl_.amount_){nullptr}
  };
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.feed_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.feed_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgWithdrawFeedRewardPool::~MsgWithdrawFeedRewardPool() {
  // @@protoc_insertion_point(destructor:injective.ocr.v1beta1.MsgWithdrawFeedRewardPool)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgWithdrawFeedRewardPool::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.sender_.Destroy();
  _impl_.feed_id_.Destroy();
  if (this != internal_default_instance()) delete _impl_.amount_;
}

void MsgWithdrawFeedRewardPool::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgWithdrawFeedRewardPool::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.ocr.v1beta1.MsgWithdrawFeedRewardPool)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sender_.ClearToEmpty();
  _impl_.feed_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.amount_ != nullptr);
    _impl_.amount_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgWithdrawFeedRewardPool::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string sender = 1 [json_name = "sender"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_sender();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.ocr.v1beta1.MsgWithdrawFeedRewardPool.sender"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string feed_id = 2 [json_name = "feedId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_feed_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.ocr.v1beta1.MsgWithdrawFeedRewardPool.feed_id"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_amount(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgWithdrawFeedRewardPool::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.ocr.v1beta1.MsgWithdrawFeedRewardPool)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string sender = 1 [json_name = "sender"];
  if (!this->_internal_sender().empty()) {
    const std::string& _s = this->_internal_sender();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.ocr.v1beta1.MsgWithdrawFeedRewardPool.sender");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string feed_id = 2 [json_name = "feedId"];
  if (!this->_internal_feed_id().empty()) {
    const std::string& _s = this->_internal_feed_id();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.ocr.v1beta1.MsgWithdrawFeedRewardPool.feed_id");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::amount(this),
        _Internal::amount(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.ocr.v1beta1.MsgWithdrawFeedRewardPool)
  return target;
}

::size_t MsgWithdrawFeedRewardPool::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.ocr.v1beta1.MsgWithdrawFeedRewardPool)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string sender = 1 [json_name = "sender"];
  if (!this->_internal_sender().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_sender());
  }

  // string feed_id = 2 [json_name = "feedId"];
  if (!this->_internal_feed_id().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_feed_id());
  }

  // .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.amount_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgWithdrawFeedRewardPool::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgWithdrawFeedRewardPool::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgWithdrawFeedRewardPool::GetClassData() const { return &_class_data_; }


void MsgWithdrawFeedRewardPool::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgWithdrawFeedRewardPool*>(&to_msg);
  auto& from = static_cast<const MsgWithdrawFeedRewardPool&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.ocr.v1beta1.MsgWithdrawFeedRewardPool)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sender().empty()) {
    _this->_internal_set_sender(from._internal_sender());
  }
  if (!from._internal_feed_id().empty()) {
    _this->_internal_set_feed_id(from._internal_feed_id());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_amount()->::cosmos::base::v1beta1::Coin::MergeFrom(
        from._internal_amount());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgWithdrawFeedRewardPool::CopyFrom(const MsgWithdrawFeedRewardPool& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.ocr.v1beta1.MsgWithdrawFeedRewardPool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgWithdrawFeedRewardPool::IsInitialized() const {
  return true;
}

void MsgWithdrawFeedRewardPool::InternalSwap(MsgWithdrawFeedRewardPool* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_, lhs_arena,
                                       &other->_impl_.sender_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.feed_id_, lhs_arena,
                                       &other->_impl_.feed_id_, rhs_arena);
  swap(_impl_.amount_, other->_impl_.amount_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgWithdrawFeedRewardPool::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2focr_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_injective_2focr_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_injective_2focr_2fv1beta1_2ftx_2eproto[8]);
}
// ===================================================================

class MsgWithdrawFeedRewardPoolResponse::_Internal {
 public:
};

MsgWithdrawFeedRewardPoolResponse::MsgWithdrawFeedRewardPoolResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.ocr.v1beta1.MsgWithdrawFeedRewardPoolResponse)
}
MsgWithdrawFeedRewardPoolResponse::MsgWithdrawFeedRewardPoolResponse(const MsgWithdrawFeedRewardPoolResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgWithdrawFeedRewardPoolResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.ocr.v1beta1.MsgWithdrawFeedRewardPoolResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgWithdrawFeedRewardPoolResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgWithdrawFeedRewardPoolResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgWithdrawFeedRewardPoolResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2focr_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_injective_2focr_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_injective_2focr_2fv1beta1_2ftx_2eproto[9]);
}
// ===================================================================

class MsgSetPayees::_Internal {
 public:
};

MsgSetPayees::MsgSetPayees(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.ocr.v1beta1.MsgSetPayees)
}
MsgSetPayees::MsgSetPayees(const MsgSetPayees& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgSetPayees* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.transmitters_){from._impl_.transmitters_}
    , decltype(_impl_.payees_){from._impl_.payees_}
    , decltype(_impl_.sender_) {}

    , decltype(_impl_.feed_id_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sender().empty()) {
    _this->_impl_.sender_.Set(from._internal_sender(), _this->GetArenaForAllocation());
  }
  _impl_.feed_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.feed_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_feed_id().empty()) {
    _this->_impl_.feed_id_.Set(from._internal_feed_id(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:injective.ocr.v1beta1.MsgSetPayees)
}

inline void MsgSetPayees::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.transmitters_){arena}
    , decltype(_impl_.payees_){arena}
    , decltype(_impl_.sender_) {}

    , decltype(_impl_.feed_id_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.feed_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.feed_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgSetPayees::~MsgSetPayees() {
  // @@protoc_insertion_point(destructor:injective.ocr.v1beta1.MsgSetPayees)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgSetPayees::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_transmitters()->~RepeatedPtrField();
  _internal_mutable_payees()->~RepeatedPtrField();
  _impl_.sender_.Destroy();
  _impl_.feed_id_.Destroy();
}

void MsgSetPayees::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgSetPayees::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.ocr.v1beta1.MsgSetPayees)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_transmitters()->Clear();
  _internal_mutable_payees()->Clear();
  _impl_.sender_.ClearToEmpty();
  _impl_.feed_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgSetPayees::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string sender = 1 [json_name = "sender"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_sender();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.ocr.v1beta1.MsgSetPayees.sender"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string feed_id = 2 [json_name = "feedId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_feed_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.ocr.v1beta1.MsgSetPayees.feed_id"));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated string transmitters = 3 [json_name = "transmitters"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_transmitters();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "injective.ocr.v1beta1.MsgSetPayees.transmitters"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated string payees = 4 [json_name = "payees"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_payees();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "injective.ocr.v1beta1.MsgSetPayees.payees"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgSetPayees::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.ocr.v1beta1.MsgSetPayees)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string sender = 1 [json_name = "sender"];
  if (!this->_internal_sender().empty()) {
    const std::string& _s = this->_internal_sender();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.ocr.v1beta1.MsgSetPayees.sender");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string feed_id = 2 [json_name = "feedId"];
  if (!this->_internal_feed_id().empty()) {
    const std::string& _s = this->_internal_feed_id();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.ocr.v1beta1.MsgSetPayees.feed_id");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // repeated string transmitters = 3 [json_name = "transmitters"];
  for (int i = 0, n = this->_internal_transmitters_size(); i < n; ++i) {
    const auto& s = this->_internal_transmitters(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.ocr.v1beta1.MsgSetPayees.transmitters");
    target = stream->WriteString(3, s, target);
  }

  // repeated string payees = 4 [json_name = "payees"];
  for (int i = 0, n = this->_internal_payees_size(); i < n; ++i) {
    const auto& s = this->_internal_payees(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.ocr.v1beta1.MsgSetPayees.payees");
    target = stream->WriteString(4, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.ocr.v1beta1.MsgSetPayees)
  return target;
}

::size_t MsgSetPayees::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.ocr.v1beta1.MsgSetPayees)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string transmitters = 3 [json_name = "transmitters"];
  total_size += 1 * ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_internal_transmitters().size());
  for (int i = 0, n = _internal_transmitters().size(); i < n; ++i) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        _internal_transmitters().Get(i));
  }

  // repeated string payees = 4 [json_name = "payees"];
  total_size += 1 * ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_internal_payees().size());
  for (int i = 0, n = _internal_payees().size(); i < n; ++i) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        _internal_payees().Get(i));
  }

  // string sender = 1 [json_name = "sender"];
  if (!this->_internal_sender().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_sender());
  }

  // string feed_id = 2 [json_name = "feedId"];
  if (!this->_internal_feed_id().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_feed_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgSetPayees::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgSetPayees::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgSetPayees::GetClassData() const { return &_class_data_; }


void MsgSetPayees::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgSetPayees*>(&to_msg);
  auto& from = static_cast<const MsgSetPayees&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.ocr.v1beta1.MsgSetPayees)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_transmitters()->MergeFrom(from._internal_transmitters());
  _this->_internal_mutable_payees()->MergeFrom(from._internal_payees());
  if (!from._internal_sender().empty()) {
    _this->_internal_set_sender(from._internal_sender());
  }
  if (!from._internal_feed_id().empty()) {
    _this->_internal_set_feed_id(from._internal_feed_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgSetPayees::CopyFrom(const MsgSetPayees& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.ocr.v1beta1.MsgSetPayees)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSetPayees::IsInitialized() const {
  return true;
}

void MsgSetPayees::InternalSwap(MsgSetPayees* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_transmitters()->InternalSwap(
      other->_internal_mutable_transmitters());
  _internal_mutable_payees()->InternalSwap(
      other->_internal_mutable_payees());
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_, lhs_arena,
                                       &other->_impl_.sender_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.feed_id_, lhs_arena,
                                       &other->_impl_.feed_id_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgSetPayees::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2focr_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_injective_2focr_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_injective_2focr_2fv1beta1_2ftx_2eproto[10]);
}
// ===================================================================

class MsgSetPayeesResponse::_Internal {
 public:
};

MsgSetPayeesResponse::MsgSetPayeesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.ocr.v1beta1.MsgSetPayeesResponse)
}
MsgSetPayeesResponse::MsgSetPayeesResponse(const MsgSetPayeesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgSetPayeesResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.ocr.v1beta1.MsgSetPayeesResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgSetPayeesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgSetPayeesResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgSetPayeesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2focr_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_injective_2focr_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_injective_2focr_2fv1beta1_2ftx_2eproto[11]);
}
// ===================================================================

class MsgTransferPayeeship::_Internal {
 public:
};

MsgTransferPayeeship::MsgTransferPayeeship(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.ocr.v1beta1.MsgTransferPayeeship)
}
MsgTransferPayeeship::MsgTransferPayeeship(const MsgTransferPayeeship& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgTransferPayeeship* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.sender_) {}

    , decltype(_impl_.transmitter_) {}

    , decltype(_impl_.feed_id_) {}

    , decltype(_impl_.proposed_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sender().empty()) {
    _this->_impl_.sender_.Set(from._internal_sender(), _this->GetArenaForAllocation());
  }
  _impl_.transmitter_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.transmitter_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_transmitter().empty()) {
    _this->_impl_.transmitter_.Set(from._internal_transmitter(), _this->GetArenaForAllocation());
  }
  _impl_.feed_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.feed_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_feed_id().empty()) {
    _this->_impl_.feed_id_.Set(from._internal_feed_id(), _this->GetArenaForAllocation());
  }
  _impl_.proposed_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.proposed_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_proposed().empty()) {
    _this->_impl_.proposed_.Set(from._internal_proposed(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:injective.ocr.v1beta1.MsgTransferPayeeship)
}

inline void MsgTransferPayeeship::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.sender_) {}

    , decltype(_impl_.transmitter_) {}

    , decltype(_impl_.feed_id_) {}

    , decltype(_impl_.proposed_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.transmitter_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.transmitter_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.feed_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.feed_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.proposed_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.proposed_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgTransferPayeeship::~MsgTransferPayeeship() {
  // @@protoc_insertion_point(destructor:injective.ocr.v1beta1.MsgTransferPayeeship)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgTransferPayeeship::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.sender_.Destroy();
  _impl_.transmitter_.Destroy();
  _impl_.feed_id_.Destroy();
  _impl_.proposed_.Destroy();
}

void MsgTransferPayeeship::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgTransferPayeeship::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.ocr.v1beta1.MsgTransferPayeeship)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sender_.ClearToEmpty();
  _impl_.transmitter_.ClearToEmpty();
  _impl_.feed_id_.ClearToEmpty();
  _impl_.proposed_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgTransferPayeeship::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string sender = 1 [json_name = "sender"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_sender();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.ocr.v1beta1.MsgTransferPayeeship.sender"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string transmitter = 2 [json_name = "transmitter"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_transmitter();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.ocr.v1beta1.MsgTransferPayeeship.transmitter"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string feed_id = 3 [json_name = "feedId"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_feed_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.ocr.v1beta1.MsgTransferPayeeship.feed_id"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string proposed = 4 [json_name = "proposed"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_proposed();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.ocr.v1beta1.MsgTransferPayeeship.proposed"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgTransferPayeeship::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.ocr.v1beta1.MsgTransferPayeeship)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string sender = 1 [json_name = "sender"];
  if (!this->_internal_sender().empty()) {
    const std::string& _s = this->_internal_sender();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.ocr.v1beta1.MsgTransferPayeeship.sender");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string transmitter = 2 [json_name = "transmitter"];
  if (!this->_internal_transmitter().empty()) {
    const std::string& _s = this->_internal_transmitter();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.ocr.v1beta1.MsgTransferPayeeship.transmitter");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string feed_id = 3 [json_name = "feedId"];
  if (!this->_internal_feed_id().empty()) {
    const std::string& _s = this->_internal_feed_id();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.ocr.v1beta1.MsgTransferPayeeship.feed_id");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string proposed = 4 [json_name = "proposed"];
  if (!this->_internal_proposed().empty()) {
    const std::string& _s = this->_internal_proposed();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.ocr.v1beta1.MsgTransferPayeeship.proposed");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.ocr.v1beta1.MsgTransferPayeeship)
  return target;
}

::size_t MsgTransferPayeeship::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.ocr.v1beta1.MsgTransferPayeeship)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string sender = 1 [json_name = "sender"];
  if (!this->_internal_sender().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_sender());
  }

  // string transmitter = 2 [json_name = "transmitter"];
  if (!this->_internal_transmitter().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_transmitter());
  }

  // string feed_id = 3 [json_name = "feedId"];
  if (!this->_internal_feed_id().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_feed_id());
  }

  // string proposed = 4 [json_name = "proposed"];
  if (!this->_internal_proposed().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_proposed());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgTransferPayeeship::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgTransferPayeeship::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgTransferPayeeship::GetClassData() const { return &_class_data_; }


void MsgTransferPayeeship::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgTransferPayeeship*>(&to_msg);
  auto& from = static_cast<const MsgTransferPayeeship&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.ocr.v1beta1.MsgTransferPayeeship)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sender().empty()) {
    _this->_internal_set_sender(from._internal_sender());
  }
  if (!from._internal_transmitter().empty()) {
    _this->_internal_set_transmitter(from._internal_transmitter());
  }
  if (!from._internal_feed_id().empty()) {
    _this->_internal_set_feed_id(from._internal_feed_id());
  }
  if (!from._internal_proposed().empty()) {
    _this->_internal_set_proposed(from._internal_proposed());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgTransferPayeeship::CopyFrom(const MsgTransferPayeeship& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.ocr.v1beta1.MsgTransferPayeeship)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgTransferPayeeship::IsInitialized() const {
  return true;
}

void MsgTransferPayeeship::InternalSwap(MsgTransferPayeeship* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_, lhs_arena,
                                       &other->_impl_.sender_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.transmitter_, lhs_arena,
                                       &other->_impl_.transmitter_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.feed_id_, lhs_arena,
                                       &other->_impl_.feed_id_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.proposed_, lhs_arena,
                                       &other->_impl_.proposed_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgTransferPayeeship::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2focr_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_injective_2focr_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_injective_2focr_2fv1beta1_2ftx_2eproto[12]);
}
// ===================================================================

class MsgTransferPayeeshipResponse::_Internal {
 public:
};

MsgTransferPayeeshipResponse::MsgTransferPayeeshipResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.ocr.v1beta1.MsgTransferPayeeshipResponse)
}
MsgTransferPayeeshipResponse::MsgTransferPayeeshipResponse(const MsgTransferPayeeshipResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgTransferPayeeshipResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.ocr.v1beta1.MsgTransferPayeeshipResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgTransferPayeeshipResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgTransferPayeeshipResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgTransferPayeeshipResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2focr_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_injective_2focr_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_injective_2focr_2fv1beta1_2ftx_2eproto[13]);
}
// ===================================================================

class MsgAcceptPayeeship::_Internal {
 public:
};

MsgAcceptPayeeship::MsgAcceptPayeeship(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.ocr.v1beta1.MsgAcceptPayeeship)
}
MsgAcceptPayeeship::MsgAcceptPayeeship(const MsgAcceptPayeeship& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgAcceptPayeeship* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.payee_) {}

    , decltype(_impl_.transmitter_) {}

    , decltype(_impl_.feed_id_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.payee_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.payee_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_payee().empty()) {
    _this->_impl_.payee_.Set(from._internal_payee(), _this->GetArenaForAllocation());
  }
  _impl_.transmitter_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.transmitter_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_transmitter().empty()) {
    _this->_impl_.transmitter_.Set(from._internal_transmitter(), _this->GetArenaForAllocation());
  }
  _impl_.feed_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.feed_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_feed_id().empty()) {
    _this->_impl_.feed_id_.Set(from._internal_feed_id(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:injective.ocr.v1beta1.MsgAcceptPayeeship)
}

inline void MsgAcceptPayeeship::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.payee_) {}

    , decltype(_impl_.transmitter_) {}

    , decltype(_impl_.feed_id_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.payee_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.payee_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.transmitter_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.transmitter_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.feed_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.feed_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgAcceptPayeeship::~MsgAcceptPayeeship() {
  // @@protoc_insertion_point(destructor:injective.ocr.v1beta1.MsgAcceptPayeeship)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgAcceptPayeeship::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.payee_.Destroy();
  _impl_.transmitter_.Destroy();
  _impl_.feed_id_.Destroy();
}

void MsgAcceptPayeeship::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgAcceptPayeeship::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.ocr.v1beta1.MsgAcceptPayeeship)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.payee_.ClearToEmpty();
  _impl_.transmitter_.ClearToEmpty();
  _impl_.feed_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgAcceptPayeeship::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string payee = 1 [json_name = "payee"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_payee();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.ocr.v1beta1.MsgAcceptPayeeship.payee"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string transmitter = 2 [json_name = "transmitter"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_transmitter();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.ocr.v1beta1.MsgAcceptPayeeship.transmitter"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string feed_id = 3 [json_name = "feedId"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_feed_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.ocr.v1beta1.MsgAcceptPayeeship.feed_id"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgAcceptPayeeship::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.ocr.v1beta1.MsgAcceptPayeeship)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string payee = 1 [json_name = "payee"];
  if (!this->_internal_payee().empty()) {
    const std::string& _s = this->_internal_payee();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.ocr.v1beta1.MsgAcceptPayeeship.payee");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string transmitter = 2 [json_name = "transmitter"];
  if (!this->_internal_transmitter().empty()) {
    const std::string& _s = this->_internal_transmitter();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.ocr.v1beta1.MsgAcceptPayeeship.transmitter");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string feed_id = 3 [json_name = "feedId"];
  if (!this->_internal_feed_id().empty()) {
    const std::string& _s = this->_internal_feed_id();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.ocr.v1beta1.MsgAcceptPayeeship.feed_id");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.ocr.v1beta1.MsgAcceptPayeeship)
  return target;
}

::size_t MsgAcceptPayeeship::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.ocr.v1beta1.MsgAcceptPayeeship)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string payee = 1 [json_name = "payee"];
  if (!this->_internal_payee().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_payee());
  }

  // string transmitter = 2 [json_name = "transmitter"];
  if (!this->_internal_transmitter().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_transmitter());
  }

  // string feed_id = 3 [json_name = "feedId"];
  if (!this->_internal_feed_id().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_feed_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgAcceptPayeeship::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgAcceptPayeeship::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgAcceptPayeeship::GetClassData() const { return &_class_data_; }


void MsgAcceptPayeeship::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgAcceptPayeeship*>(&to_msg);
  auto& from = static_cast<const MsgAcceptPayeeship&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.ocr.v1beta1.MsgAcceptPayeeship)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_payee().empty()) {
    _this->_internal_set_payee(from._internal_payee());
  }
  if (!from._internal_transmitter().empty()) {
    _this->_internal_set_transmitter(from._internal_transmitter());
  }
  if (!from._internal_feed_id().empty()) {
    _this->_internal_set_feed_id(from._internal_feed_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgAcceptPayeeship::CopyFrom(const MsgAcceptPayeeship& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.ocr.v1beta1.MsgAcceptPayeeship)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgAcceptPayeeship::IsInitialized() const {
  return true;
}

void MsgAcceptPayeeship::InternalSwap(MsgAcceptPayeeship* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.payee_, lhs_arena,
                                       &other->_impl_.payee_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.transmitter_, lhs_arena,
                                       &other->_impl_.transmitter_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.feed_id_, lhs_arena,
                                       &other->_impl_.feed_id_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgAcceptPayeeship::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2focr_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_injective_2focr_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_injective_2focr_2fv1beta1_2ftx_2eproto[14]);
}
// ===================================================================

class MsgAcceptPayeeshipResponse::_Internal {
 public:
};

MsgAcceptPayeeshipResponse::MsgAcceptPayeeshipResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.ocr.v1beta1.MsgAcceptPayeeshipResponse)
}
MsgAcceptPayeeshipResponse::MsgAcceptPayeeshipResponse(const MsgAcceptPayeeshipResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgAcceptPayeeshipResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.ocr.v1beta1.MsgAcceptPayeeshipResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgAcceptPayeeshipResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgAcceptPayeeshipResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgAcceptPayeeshipResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2focr_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_injective_2focr_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_injective_2focr_2fv1beta1_2ftx_2eproto[15]);
}
// ===================================================================

class MsgUpdateParams::_Internal {
 public:
  using HasBits = decltype(std::declval<MsgUpdateParams>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MsgUpdateParams, _impl_._has_bits_);
  static const ::injective::ocr::v1beta1::Params& params(const MsgUpdateParams* msg);
  static void set_has_params(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::injective::ocr::v1beta1::Params&
MsgUpdateParams::_Internal::params(const MsgUpdateParams* msg) {
  return *msg->_impl_.params_;
}
void MsgUpdateParams::clear_params() {
  if (_impl_.params_ != nullptr) _impl_.params_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
MsgUpdateParams::MsgUpdateParams(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.ocr.v1beta1.MsgUpdateParams)
}
MsgUpdateParams::MsgUpdateParams(const MsgUpdateParams& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgUpdateParams* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.authority_) {}

    , decltype(_impl_.params_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.authority_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.authority_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_authority().empty()) {
    _this->_impl_.authority_.Set(from._internal_authority(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.params_ = new ::injective::ocr::v1beta1::Params(*from._impl_.params_);
  }
  // @@protoc_insertion_point(copy_constructor:injective.ocr.v1beta1.MsgUpdateParams)
}

inline void MsgUpdateParams::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.authority_) {}

    , decltype(_impl_.params_){nullptr}
  };
  _impl_.authority_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.authority_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgUpdateParams::~MsgUpdateParams() {
  // @@protoc_insertion_point(destructor:injective.ocr.v1beta1.MsgUpdateParams)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgUpdateParams::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.authority_.Destroy();
  if (this != internal_default_instance()) delete _impl_.params_;
}

void MsgUpdateParams::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgUpdateParams::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.ocr.v1beta1.MsgUpdateParams)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.authority_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.params_ != nullptr);
    _impl_.params_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgUpdateParams::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_authority();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.ocr.v1beta1.MsgUpdateParams.authority"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .injective.ocr.v1beta1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgUpdateParams::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.ocr.v1beta1.MsgUpdateParams)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_authority().empty()) {
    const std::string& _s = this->_internal_authority();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.ocr.v1beta1.MsgUpdateParams.authority");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .injective.ocr.v1beta1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.ocr.v1beta1.MsgUpdateParams)
  return target;
}

::size_t MsgUpdateParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.ocr.v1beta1.MsgUpdateParams)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_authority().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_authority());
  }

  // .injective.ocr.v1beta1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgUpdateParams::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgUpdateParams::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgUpdateParams::GetClassData() const { return &_class_data_; }


void MsgUpdateParams::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgUpdateParams*>(&to_msg);
  auto& from = static_cast<const MsgUpdateParams&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.ocr.v1beta1.MsgUpdateParams)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_authority().empty()) {
    _this->_internal_set_authority(from._internal_authority());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_params()->::injective::ocr::v1beta1::Params::MergeFrom(
        from._internal_params());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgUpdateParams::CopyFrom(const MsgUpdateParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.ocr.v1beta1.MsgUpdateParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgUpdateParams::IsInitialized() const {
  return true;
}

void MsgUpdateParams::InternalSwap(MsgUpdateParams* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.authority_, lhs_arena,
                                       &other->_impl_.authority_, rhs_arena);
  swap(_impl_.params_, other->_impl_.params_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgUpdateParams::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2focr_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_injective_2focr_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_injective_2focr_2fv1beta1_2ftx_2eproto[16]);
}
// ===================================================================

class MsgUpdateParamsResponse::_Internal {
 public:
};

MsgUpdateParamsResponse::MsgUpdateParamsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.ocr.v1beta1.MsgUpdateParamsResponse)
}
MsgUpdateParamsResponse::MsgUpdateParamsResponse(const MsgUpdateParamsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgUpdateParamsResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.ocr.v1beta1.MsgUpdateParamsResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgUpdateParamsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgUpdateParamsResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgUpdateParamsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2focr_2fv1beta1_2ftx_2eproto_getter, &descriptor_table_injective_2focr_2fv1beta1_2ftx_2eproto_once,
      file_level_metadata_injective_2focr_2fv1beta1_2ftx_2eproto[17]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace ocr
}  // namespace injective
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::injective::ocr::v1beta1::MsgCreateFeed*
Arena::CreateMaybeMessage< ::injective::ocr::v1beta1::MsgCreateFeed >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::ocr::v1beta1::MsgCreateFeed >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::ocr::v1beta1::MsgCreateFeedResponse*
Arena::CreateMaybeMessage< ::injective::ocr::v1beta1::MsgCreateFeedResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::ocr::v1beta1::MsgCreateFeedResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::ocr::v1beta1::MsgUpdateFeed*
Arena::CreateMaybeMessage< ::injective::ocr::v1beta1::MsgUpdateFeed >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::ocr::v1beta1::MsgUpdateFeed >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::ocr::v1beta1::MsgUpdateFeedResponse*
Arena::CreateMaybeMessage< ::injective::ocr::v1beta1::MsgUpdateFeedResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::ocr::v1beta1::MsgUpdateFeedResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::ocr::v1beta1::MsgTransmit*
Arena::CreateMaybeMessage< ::injective::ocr::v1beta1::MsgTransmit >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::ocr::v1beta1::MsgTransmit >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::ocr::v1beta1::MsgTransmitResponse*
Arena::CreateMaybeMessage< ::injective::ocr::v1beta1::MsgTransmitResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::ocr::v1beta1::MsgTransmitResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::ocr::v1beta1::MsgFundFeedRewardPool*
Arena::CreateMaybeMessage< ::injective::ocr::v1beta1::MsgFundFeedRewardPool >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::ocr::v1beta1::MsgFundFeedRewardPool >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::ocr::v1beta1::MsgFundFeedRewardPoolResponse*
Arena::CreateMaybeMessage< ::injective::ocr::v1beta1::MsgFundFeedRewardPoolResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::ocr::v1beta1::MsgFundFeedRewardPoolResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::ocr::v1beta1::MsgWithdrawFeedRewardPool*
Arena::CreateMaybeMessage< ::injective::ocr::v1beta1::MsgWithdrawFeedRewardPool >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::ocr::v1beta1::MsgWithdrawFeedRewardPool >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::ocr::v1beta1::MsgWithdrawFeedRewardPoolResponse*
Arena::CreateMaybeMessage< ::injective::ocr::v1beta1::MsgWithdrawFeedRewardPoolResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::ocr::v1beta1::MsgWithdrawFeedRewardPoolResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::ocr::v1beta1::MsgSetPayees*
Arena::CreateMaybeMessage< ::injective::ocr::v1beta1::MsgSetPayees >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::ocr::v1beta1::MsgSetPayees >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::ocr::v1beta1::MsgSetPayeesResponse*
Arena::CreateMaybeMessage< ::injective::ocr::v1beta1::MsgSetPayeesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::ocr::v1beta1::MsgSetPayeesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::ocr::v1beta1::MsgTransferPayeeship*
Arena::CreateMaybeMessage< ::injective::ocr::v1beta1::MsgTransferPayeeship >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::ocr::v1beta1::MsgTransferPayeeship >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::ocr::v1beta1::MsgTransferPayeeshipResponse*
Arena::CreateMaybeMessage< ::injective::ocr::v1beta1::MsgTransferPayeeshipResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::ocr::v1beta1::MsgTransferPayeeshipResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::ocr::v1beta1::MsgAcceptPayeeship*
Arena::CreateMaybeMessage< ::injective::ocr::v1beta1::MsgAcceptPayeeship >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::ocr::v1beta1::MsgAcceptPayeeship >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::ocr::v1beta1::MsgAcceptPayeeshipResponse*
Arena::CreateMaybeMessage< ::injective::ocr::v1beta1::MsgAcceptPayeeshipResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::ocr::v1beta1::MsgAcceptPayeeshipResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::ocr::v1beta1::MsgUpdateParams*
Arena::CreateMaybeMessage< ::injective::ocr::v1beta1::MsgUpdateParams >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::ocr::v1beta1::MsgUpdateParams >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::ocr::v1beta1::MsgUpdateParamsResponse*
Arena::CreateMaybeMessage< ::injective::ocr::v1beta1::MsgUpdateParamsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::ocr::v1beta1::MsgUpdateParamsResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
