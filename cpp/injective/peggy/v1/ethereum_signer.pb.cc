// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: injective/peggy/v1/ethereum_signer.proto

#include "injective/peggy/v1/ethereum_signer.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace injective {
namespace peggy {
namespace v1 {
}  // namespace v1
}  // namespace peggy
}  // namespace injective
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_injective_2fpeggy_2fv1_2fethereum_5fsigner_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_injective_2fpeggy_2fv1_2fethereum_5fsigner_2eproto = nullptr;
const ::uint32_t TableStruct_injective_2fpeggy_2fv1_2fethereum_5fsigner_2eproto::offsets[1] = {};
static constexpr ::_pbi::MigrationSchema* schemas = nullptr;
static constexpr ::_pb::Message* const* file_default_instances = nullptr;
const char descriptor_table_protodef_injective_2fpeggy_2fv1_2fethereum_5fsigner_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n(injective/peggy/v1/ethereum_signer.pro"
    "to\022\022injective.peggy.v1\032\024gogoproto/gogo.p"
    "roto*\221\001\n\010SignType\022\025\n\021SIGN_TYPE_UNKNOWN\020\000"
    "\0222\n.SIGN_TYPE_ORCHESTRATOR_SIGNED_MULTI_"
    "SIG_UPDATE\020\001\0220\n,SIGN_TYPE_ORCHESTRATOR_S"
    "IGNED_WITHDRAW_BATCH\020\002\032\010\210\243\036\000\250\244\036\000B\344\001\n\026com"
    ".injective.peggy.v1B\023EthereumSignerProto"
    "P\001ZKgithub.com/InjectiveLabs/injective-c"
    "ore/injective-chain/modules/peggy/types\242"
    "\002\003IPX\252\002\022Injective.Peggy.V1\312\002\022Injective\\P"
    "eggy\\V1\342\002\036Injective\\Peggy\\V1\\GPBMetadata"
    "\352\002\024Injective::Peggy::V1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_injective_2fpeggy_2fv1_2fethereum_5fsigner_2eproto_deps[1] =
    {
        &::descriptor_table_gogoproto_2fgogo_2eproto,
};
static ::absl::once_flag descriptor_table_injective_2fpeggy_2fv1_2fethereum_5fsigner_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_injective_2fpeggy_2fv1_2fethereum_5fsigner_2eproto = {
    false,
    false,
    471,
    descriptor_table_protodef_injective_2fpeggy_2fv1_2fethereum_5fsigner_2eproto,
    "injective/peggy/v1/ethereum_signer.proto",
    &descriptor_table_injective_2fpeggy_2fv1_2fethereum_5fsigner_2eproto_once,
    descriptor_table_injective_2fpeggy_2fv1_2fethereum_5fsigner_2eproto_deps,
    1,
    0,
    schemas,
    file_default_instances,
    TableStruct_injective_2fpeggy_2fv1_2fethereum_5fsigner_2eproto::offsets,
    nullptr,
    file_level_enum_descriptors_injective_2fpeggy_2fv1_2fethereum_5fsigner_2eproto,
    file_level_service_descriptors_injective_2fpeggy_2fv1_2fethereum_5fsigner_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_injective_2fpeggy_2fv1_2fethereum_5fsigner_2eproto_getter() {
  return &descriptor_table_injective_2fpeggy_2fv1_2fethereum_5fsigner_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_injective_2fpeggy_2fv1_2fethereum_5fsigner_2eproto(&descriptor_table_injective_2fpeggy_2fv1_2fethereum_5fsigner_2eproto);
namespace injective {
namespace peggy {
namespace v1 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SignType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_injective_2fpeggy_2fv1_2fethereum_5fsigner_2eproto);
  return file_level_enum_descriptors_injective_2fpeggy_2fv1_2fethereum_5fsigner_2eproto[0];
}
bool SignType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace peggy
}  // namespace injective
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
