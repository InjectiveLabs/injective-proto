// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: injective/peggy/v1/proposal.proto

#include "injective/peggy/v1/proposal.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace injective {
namespace peggy {
namespace v1 {
template <typename>
PROTOBUF_CONSTEXPR BlacklistEthereumAddressesProposal::BlacklistEthereumAddressesProposal(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.blacklist_addresses_)*/{}
  , /*decltype(_impl_.title_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.description_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BlacklistEthereumAddressesProposalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlacklistEthereumAddressesProposalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlacklistEthereumAddressesProposalDefaultTypeInternal() {}
  union {
    BlacklistEthereumAddressesProposal _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlacklistEthereumAddressesProposalDefaultTypeInternal _BlacklistEthereumAddressesProposal_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR RevokeEthereumBlacklistProposal::RevokeEthereumBlacklistProposal(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.blacklist_addresses_)*/{}
  , /*decltype(_impl_.title_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.description_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RevokeEthereumBlacklistProposalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RevokeEthereumBlacklistProposalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RevokeEthereumBlacklistProposalDefaultTypeInternal() {}
  union {
    RevokeEthereumBlacklistProposal _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RevokeEthereumBlacklistProposalDefaultTypeInternal _RevokeEthereumBlacklistProposal_default_instance_;
}  // namespace v1
}  // namespace peggy
}  // namespace injective
static ::_pb::Metadata file_level_metadata_injective_2fpeggy_2fv1_2fproposal_2eproto[2];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_injective_2fpeggy_2fv1_2fproposal_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_injective_2fpeggy_2fv1_2fproposal_2eproto = nullptr;
const ::uint32_t TableStruct_injective_2fpeggy_2fv1_2fproposal_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::BlacklistEthereumAddressesProposal, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::BlacklistEthereumAddressesProposal, _impl_.title_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::BlacklistEthereumAddressesProposal, _impl_.description_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::BlacklistEthereumAddressesProposal, _impl_.blacklist_addresses_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::RevokeEthereumBlacklistProposal, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::RevokeEthereumBlacklistProposal, _impl_.title_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::RevokeEthereumBlacklistProposal, _impl_.description_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::RevokeEthereumBlacklistProposal, _impl_.blacklist_addresses_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::injective::peggy::v1::BlacklistEthereumAddressesProposal)},
        { 11, -1, -1, sizeof(::injective::peggy::v1::RevokeEthereumBlacklistProposal)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::injective::peggy::v1::_BlacklistEthereumAddressesProposal_default_instance_._instance,
    &::injective::peggy::v1::_RevokeEthereumBlacklistProposal_default_instance_._instance,
};
const char descriptor_table_protodef_injective_2fpeggy_2fv1_2fproposal_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n!injective/peggy/v1/proposal.proto\022\022inj"
    "ective.peggy.v1\032\031cosmos_proto/cosmos.pro"
    "to\032\024gogoproto/gogo.proto\"\265\001\n\"BlacklistEt"
    "hereumAddressesProposal\022\024\n\005title\030\001 \001(\tR\005"
    "title\022 \n\013description\030\002 \001(\tR\013description\022"
    "/\n\023blacklist_addresses\030\003 \003(\tR\022blacklistA"
    "ddresses:&\210\240\037\000\350\240\037\000\312\264-\032cosmos.gov.v1beta1"
    ".Content\"\262\001\n\037RevokeEthereumBlacklistProp"
    "osal\022\024\n\005title\030\001 \001(\tR\005title\022 \n\013descriptio"
    "n\030\002 \001(\tR\013description\022/\n\023blacklist_addres"
    "ses\030\003 \003(\tR\022blacklistAddresses:&\210\240\037\000\350\240\037\000\312"
    "\264-\032cosmos.gov.v1beta1.ContentB\336\001\n\026com.in"
    "jective.peggy.v1B\rProposalProtoP\001ZKgithu"
    "b.com/InjectiveLabs/injective-core/injec"
    "tive-chain/modules/peggy/types\242\002\003IPX\252\002\022I"
    "njective.Peggy.V1\312\002\022Injective\\Peggy\\V1\342\002"
    "\036Injective\\Peggy\\V1\\GPBMetadata\352\002\024Inject"
    "ive::Peggy::V1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_injective_2fpeggy_2fv1_2fproposal_2eproto_deps[2] =
    {
        &::descriptor_table_cosmos_5fproto_2fcosmos_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
};
static ::absl::once_flag descriptor_table_injective_2fpeggy_2fv1_2fproposal_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_injective_2fpeggy_2fv1_2fproposal_2eproto = {
    false,
    false,
    702,
    descriptor_table_protodef_injective_2fpeggy_2fv1_2fproposal_2eproto,
    "injective/peggy/v1/proposal.proto",
    &descriptor_table_injective_2fpeggy_2fv1_2fproposal_2eproto_once,
    descriptor_table_injective_2fpeggy_2fv1_2fproposal_2eproto_deps,
    2,
    2,
    schemas,
    file_default_instances,
    TableStruct_injective_2fpeggy_2fv1_2fproposal_2eproto::offsets,
    file_level_metadata_injective_2fpeggy_2fv1_2fproposal_2eproto,
    file_level_enum_descriptors_injective_2fpeggy_2fv1_2fproposal_2eproto,
    file_level_service_descriptors_injective_2fpeggy_2fv1_2fproposal_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_injective_2fpeggy_2fv1_2fproposal_2eproto_getter() {
  return &descriptor_table_injective_2fpeggy_2fv1_2fproposal_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_injective_2fpeggy_2fv1_2fproposal_2eproto(&descriptor_table_injective_2fpeggy_2fv1_2fproposal_2eproto);
namespace injective {
namespace peggy {
namespace v1 {
// ===================================================================

class BlacklistEthereumAddressesProposal::_Internal {
 public:
};

BlacklistEthereumAddressesProposal::BlacklistEthereumAddressesProposal(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.BlacklistEthereumAddressesProposal)
}
BlacklistEthereumAddressesProposal::BlacklistEthereumAddressesProposal(const BlacklistEthereumAddressesProposal& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BlacklistEthereumAddressesProposal* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.blacklist_addresses_){from._impl_.blacklist_addresses_}
    , decltype(_impl_.title_) {}

    , decltype(_impl_.description_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.title_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.title_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_title().empty()) {
    _this->_impl_.title_.Set(from._internal_title(), _this->GetArenaForAllocation());
  }
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.description_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    _this->_impl_.description_.Set(from._internal_description(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.BlacklistEthereumAddressesProposal)
}

inline void BlacklistEthereumAddressesProposal::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.blacklist_addresses_){arena}
    , decltype(_impl_.title_) {}

    , decltype(_impl_.description_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.title_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.title_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.description_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

BlacklistEthereumAddressesProposal::~BlacklistEthereumAddressesProposal() {
  // @@protoc_insertion_point(destructor:injective.peggy.v1.BlacklistEthereumAddressesProposal)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BlacklistEthereumAddressesProposal::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_blacklist_addresses()->~RepeatedPtrField();
  _impl_.title_.Destroy();
  _impl_.description_.Destroy();
}

void BlacklistEthereumAddressesProposal::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BlacklistEthereumAddressesProposal::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.peggy.v1.BlacklistEthereumAddressesProposal)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_blacklist_addresses()->Clear();
  _impl_.title_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BlacklistEthereumAddressesProposal::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string title = 1 [json_name = "title"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_title();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.BlacklistEthereumAddressesProposal.title"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string description = 2 [json_name = "description"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.BlacklistEthereumAddressesProposal.description"));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated string blacklist_addresses = 3 [json_name = "blacklistAddresses"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_blacklist_addresses();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.BlacklistEthereumAddressesProposal.blacklist_addresses"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* BlacklistEthereumAddressesProposal::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.peggy.v1.BlacklistEthereumAddressesProposal)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string title = 1 [json_name = "title"];
  if (!this->_internal_title().empty()) {
    const std::string& _s = this->_internal_title();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.BlacklistEthereumAddressesProposal.title");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string description = 2 [json_name = "description"];
  if (!this->_internal_description().empty()) {
    const std::string& _s = this->_internal_description();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.BlacklistEthereumAddressesProposal.description");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // repeated string blacklist_addresses = 3 [json_name = "blacklistAddresses"];
  for (int i = 0, n = this->_internal_blacklist_addresses_size(); i < n; ++i) {
    const auto& s = this->_internal_blacklist_addresses(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.BlacklistEthereumAddressesProposal.blacklist_addresses");
    target = stream->WriteString(3, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.peggy.v1.BlacklistEthereumAddressesProposal)
  return target;
}

::size_t BlacklistEthereumAddressesProposal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.peggy.v1.BlacklistEthereumAddressesProposal)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string blacklist_addresses = 3 [json_name = "blacklistAddresses"];
  total_size += 1 * ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_internal_blacklist_addresses().size());
  for (int i = 0, n = _internal_blacklist_addresses().size(); i < n; ++i) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        _internal_blacklist_addresses().Get(i));
  }

  // string title = 1 [json_name = "title"];
  if (!this->_internal_title().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_title());
  }

  // string description = 2 [json_name = "description"];
  if (!this->_internal_description().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_description());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BlacklistEthereumAddressesProposal::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BlacklistEthereumAddressesProposal::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BlacklistEthereumAddressesProposal::GetClassData() const { return &_class_data_; }


void BlacklistEthereumAddressesProposal::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BlacklistEthereumAddressesProposal*>(&to_msg);
  auto& from = static_cast<const BlacklistEthereumAddressesProposal&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.peggy.v1.BlacklistEthereumAddressesProposal)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_blacklist_addresses()->MergeFrom(from._internal_blacklist_addresses());
  if (!from._internal_title().empty()) {
    _this->_internal_set_title(from._internal_title());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BlacklistEthereumAddressesProposal::CopyFrom(const BlacklistEthereumAddressesProposal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.peggy.v1.BlacklistEthereumAddressesProposal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlacklistEthereumAddressesProposal::IsInitialized() const {
  return true;
}

void BlacklistEthereumAddressesProposal::InternalSwap(BlacklistEthereumAddressesProposal* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_blacklist_addresses()->InternalSwap(
      other->_internal_mutable_blacklist_addresses());
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, lhs_arena,
                                       &other->_impl_.title_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, lhs_arena,
                                       &other->_impl_.description_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata BlacklistEthereumAddressesProposal::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fproposal_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fproposal_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fproposal_2eproto[0]);
}
// ===================================================================

class RevokeEthereumBlacklistProposal::_Internal {
 public:
};

RevokeEthereumBlacklistProposal::RevokeEthereumBlacklistProposal(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.RevokeEthereumBlacklistProposal)
}
RevokeEthereumBlacklistProposal::RevokeEthereumBlacklistProposal(const RevokeEthereumBlacklistProposal& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RevokeEthereumBlacklistProposal* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.blacklist_addresses_){from._impl_.blacklist_addresses_}
    , decltype(_impl_.title_) {}

    , decltype(_impl_.description_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.title_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.title_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_title().empty()) {
    _this->_impl_.title_.Set(from._internal_title(), _this->GetArenaForAllocation());
  }
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.description_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    _this->_impl_.description_.Set(from._internal_description(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.RevokeEthereumBlacklistProposal)
}

inline void RevokeEthereumBlacklistProposal::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.blacklist_addresses_){arena}
    , decltype(_impl_.title_) {}

    , decltype(_impl_.description_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.title_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.title_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.description_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RevokeEthereumBlacklistProposal::~RevokeEthereumBlacklistProposal() {
  // @@protoc_insertion_point(destructor:injective.peggy.v1.RevokeEthereumBlacklistProposal)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RevokeEthereumBlacklistProposal::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_blacklist_addresses()->~RepeatedPtrField();
  _impl_.title_.Destroy();
  _impl_.description_.Destroy();
}

void RevokeEthereumBlacklistProposal::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RevokeEthereumBlacklistProposal::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.peggy.v1.RevokeEthereumBlacklistProposal)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_blacklist_addresses()->Clear();
  _impl_.title_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RevokeEthereumBlacklistProposal::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string title = 1 [json_name = "title"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_title();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.RevokeEthereumBlacklistProposal.title"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string description = 2 [json_name = "description"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.RevokeEthereumBlacklistProposal.description"));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated string blacklist_addresses = 3 [json_name = "blacklistAddresses"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_blacklist_addresses();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.RevokeEthereumBlacklistProposal.blacklist_addresses"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* RevokeEthereumBlacklistProposal::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.peggy.v1.RevokeEthereumBlacklistProposal)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string title = 1 [json_name = "title"];
  if (!this->_internal_title().empty()) {
    const std::string& _s = this->_internal_title();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.RevokeEthereumBlacklistProposal.title");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string description = 2 [json_name = "description"];
  if (!this->_internal_description().empty()) {
    const std::string& _s = this->_internal_description();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.RevokeEthereumBlacklistProposal.description");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // repeated string blacklist_addresses = 3 [json_name = "blacklistAddresses"];
  for (int i = 0, n = this->_internal_blacklist_addresses_size(); i < n; ++i) {
    const auto& s = this->_internal_blacklist_addresses(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.RevokeEthereumBlacklistProposal.blacklist_addresses");
    target = stream->WriteString(3, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.peggy.v1.RevokeEthereumBlacklistProposal)
  return target;
}

::size_t RevokeEthereumBlacklistProposal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.peggy.v1.RevokeEthereumBlacklistProposal)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string blacklist_addresses = 3 [json_name = "blacklistAddresses"];
  total_size += 1 * ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_internal_blacklist_addresses().size());
  for (int i = 0, n = _internal_blacklist_addresses().size(); i < n; ++i) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        _internal_blacklist_addresses().Get(i));
  }

  // string title = 1 [json_name = "title"];
  if (!this->_internal_title().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_title());
  }

  // string description = 2 [json_name = "description"];
  if (!this->_internal_description().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_description());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RevokeEthereumBlacklistProposal::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RevokeEthereumBlacklistProposal::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RevokeEthereumBlacklistProposal::GetClassData() const { return &_class_data_; }


void RevokeEthereumBlacklistProposal::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RevokeEthereumBlacklistProposal*>(&to_msg);
  auto& from = static_cast<const RevokeEthereumBlacklistProposal&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.peggy.v1.RevokeEthereumBlacklistProposal)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_blacklist_addresses()->MergeFrom(from._internal_blacklist_addresses());
  if (!from._internal_title().empty()) {
    _this->_internal_set_title(from._internal_title());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RevokeEthereumBlacklistProposal::CopyFrom(const RevokeEthereumBlacklistProposal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.peggy.v1.RevokeEthereumBlacklistProposal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RevokeEthereumBlacklistProposal::IsInitialized() const {
  return true;
}

void RevokeEthereumBlacklistProposal::InternalSwap(RevokeEthereumBlacklistProposal* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_blacklist_addresses()->InternalSwap(
      other->_internal_mutable_blacklist_addresses());
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, lhs_arena,
                                       &other->_impl_.title_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, lhs_arena,
                                       &other->_impl_.description_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata RevokeEthereumBlacklistProposal::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fproposal_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fproposal_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fproposal_2eproto[1]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace peggy
}  // namespace injective
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::BlacklistEthereumAddressesProposal*
Arena::CreateMaybeMessage< ::injective::peggy::v1::BlacklistEthereumAddressesProposal >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::BlacklistEthereumAddressesProposal >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::RevokeEthereumBlacklistProposal*
Arena::CreateMaybeMessage< ::injective::peggy::v1::RevokeEthereumBlacklistProposal >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::RevokeEthereumBlacklistProposal >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
