// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: injective/peggy/v1/query.proto

#include "injective/peggy/v1/query.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace injective {
namespace peggy {
namespace v1 {
template <typename>
PROTOBUF_CONSTEXPR QueryParamsRequest::QueryParamsRequest(
    ::_pbi::ConstantInitialized) {}
struct QueryParamsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryParamsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryParamsRequestDefaultTypeInternal() {}
  union {
    QueryParamsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryParamsRequestDefaultTypeInternal _QueryParamsRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryParamsResponse::QueryParamsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.params_)*/nullptr} {}
struct QueryParamsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryParamsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryParamsResponseDefaultTypeInternal() {}
  union {
    QueryParamsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryParamsResponseDefaultTypeInternal _QueryParamsResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryCurrentValsetRequest::QueryCurrentValsetRequest(
    ::_pbi::ConstantInitialized) {}
struct QueryCurrentValsetRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryCurrentValsetRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryCurrentValsetRequestDefaultTypeInternal() {}
  union {
    QueryCurrentValsetRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryCurrentValsetRequestDefaultTypeInternal _QueryCurrentValsetRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryCurrentValsetResponse::QueryCurrentValsetResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.valset_)*/nullptr} {}
struct QueryCurrentValsetResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryCurrentValsetResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryCurrentValsetResponseDefaultTypeInternal() {}
  union {
    QueryCurrentValsetResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryCurrentValsetResponseDefaultTypeInternal _QueryCurrentValsetResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryValsetRequestRequest::QueryValsetRequestRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.nonce_)*/ ::uint64_t{0u}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryValsetRequestRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryValsetRequestRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryValsetRequestRequestDefaultTypeInternal() {}
  union {
    QueryValsetRequestRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryValsetRequestRequestDefaultTypeInternal _QueryValsetRequestRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryValsetRequestResponse::QueryValsetRequestResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.valset_)*/nullptr} {}
struct QueryValsetRequestResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryValsetRequestResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryValsetRequestResponseDefaultTypeInternal() {}
  union {
    QueryValsetRequestResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryValsetRequestResponseDefaultTypeInternal _QueryValsetRequestResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryValsetConfirmRequest::QueryValsetConfirmRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.nonce_)*/ ::uint64_t{0u}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryValsetConfirmRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryValsetConfirmRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryValsetConfirmRequestDefaultTypeInternal() {}
  union {
    QueryValsetConfirmRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryValsetConfirmRequestDefaultTypeInternal _QueryValsetConfirmRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryValsetConfirmResponse::QueryValsetConfirmResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.confirm_)*/nullptr} {}
struct QueryValsetConfirmResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryValsetConfirmResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryValsetConfirmResponseDefaultTypeInternal() {}
  union {
    QueryValsetConfirmResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryValsetConfirmResponseDefaultTypeInternal _QueryValsetConfirmResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryValsetConfirmsByNonceRequest::QueryValsetConfirmsByNonceRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.nonce_)*/ ::uint64_t{0u}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryValsetConfirmsByNonceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryValsetConfirmsByNonceRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryValsetConfirmsByNonceRequestDefaultTypeInternal() {}
  union {
    QueryValsetConfirmsByNonceRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryValsetConfirmsByNonceRequestDefaultTypeInternal _QueryValsetConfirmsByNonceRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryValsetConfirmsByNonceResponse::QueryValsetConfirmsByNonceResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.confirms_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryValsetConfirmsByNonceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryValsetConfirmsByNonceResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryValsetConfirmsByNonceResponseDefaultTypeInternal() {}
  union {
    QueryValsetConfirmsByNonceResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryValsetConfirmsByNonceResponseDefaultTypeInternal _QueryValsetConfirmsByNonceResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryLastValsetRequestsRequest::QueryLastValsetRequestsRequest(
    ::_pbi::ConstantInitialized) {}
struct QueryLastValsetRequestsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryLastValsetRequestsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryLastValsetRequestsRequestDefaultTypeInternal() {}
  union {
    QueryLastValsetRequestsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryLastValsetRequestsRequestDefaultTypeInternal _QueryLastValsetRequestsRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryLastValsetRequestsResponse::QueryLastValsetRequestsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.valsets_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryLastValsetRequestsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryLastValsetRequestsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryLastValsetRequestsResponseDefaultTypeInternal() {}
  union {
    QueryLastValsetRequestsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryLastValsetRequestsResponseDefaultTypeInternal _QueryLastValsetRequestsResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryLastPendingValsetRequestByAddrRequest::QueryLastPendingValsetRequestByAddrRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryLastPendingValsetRequestByAddrRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryLastPendingValsetRequestByAddrRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryLastPendingValsetRequestByAddrRequestDefaultTypeInternal() {}
  union {
    QueryLastPendingValsetRequestByAddrRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryLastPendingValsetRequestByAddrRequestDefaultTypeInternal _QueryLastPendingValsetRequestByAddrRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryLastPendingValsetRequestByAddrResponse::QueryLastPendingValsetRequestByAddrResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.valsets_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryLastPendingValsetRequestByAddrResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryLastPendingValsetRequestByAddrResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryLastPendingValsetRequestByAddrResponseDefaultTypeInternal() {}
  union {
    QueryLastPendingValsetRequestByAddrResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryLastPendingValsetRequestByAddrResponseDefaultTypeInternal _QueryLastPendingValsetRequestByAddrResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryBatchFeeRequest::QueryBatchFeeRequest(
    ::_pbi::ConstantInitialized) {}
struct QueryBatchFeeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryBatchFeeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryBatchFeeRequestDefaultTypeInternal() {}
  union {
    QueryBatchFeeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryBatchFeeRequestDefaultTypeInternal _QueryBatchFeeRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryBatchFeeResponse::QueryBatchFeeResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.batchfees_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryBatchFeeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryBatchFeeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryBatchFeeResponseDefaultTypeInternal() {}
  union {
    QueryBatchFeeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryBatchFeeResponseDefaultTypeInternal _QueryBatchFeeResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryLastPendingBatchRequestByAddrRequest::QueryLastPendingBatchRequestByAddrRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryLastPendingBatchRequestByAddrRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryLastPendingBatchRequestByAddrRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryLastPendingBatchRequestByAddrRequestDefaultTypeInternal() {}
  union {
    QueryLastPendingBatchRequestByAddrRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryLastPendingBatchRequestByAddrRequestDefaultTypeInternal _QueryLastPendingBatchRequestByAddrRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryLastPendingBatchRequestByAddrResponse::QueryLastPendingBatchRequestByAddrResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.batch_)*/nullptr} {}
struct QueryLastPendingBatchRequestByAddrResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryLastPendingBatchRequestByAddrResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryLastPendingBatchRequestByAddrResponseDefaultTypeInternal() {}
  union {
    QueryLastPendingBatchRequestByAddrResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryLastPendingBatchRequestByAddrResponseDefaultTypeInternal _QueryLastPendingBatchRequestByAddrResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryOutgoingTxBatchesRequest::QueryOutgoingTxBatchesRequest(
    ::_pbi::ConstantInitialized) {}
struct QueryOutgoingTxBatchesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryOutgoingTxBatchesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryOutgoingTxBatchesRequestDefaultTypeInternal() {}
  union {
    QueryOutgoingTxBatchesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryOutgoingTxBatchesRequestDefaultTypeInternal _QueryOutgoingTxBatchesRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryOutgoingTxBatchesResponse::QueryOutgoingTxBatchesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.batches_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryOutgoingTxBatchesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryOutgoingTxBatchesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryOutgoingTxBatchesResponseDefaultTypeInternal() {}
  union {
    QueryOutgoingTxBatchesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryOutgoingTxBatchesResponseDefaultTypeInternal _QueryOutgoingTxBatchesResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryBatchRequestByNonceRequest::QueryBatchRequestByNonceRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.contract_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.nonce_)*/ ::uint64_t{0u}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryBatchRequestByNonceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryBatchRequestByNonceRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryBatchRequestByNonceRequestDefaultTypeInternal() {}
  union {
    QueryBatchRequestByNonceRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryBatchRequestByNonceRequestDefaultTypeInternal _QueryBatchRequestByNonceRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryBatchRequestByNonceResponse::QueryBatchRequestByNonceResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.batch_)*/nullptr} {}
struct QueryBatchRequestByNonceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryBatchRequestByNonceResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryBatchRequestByNonceResponseDefaultTypeInternal() {}
  union {
    QueryBatchRequestByNonceResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryBatchRequestByNonceResponseDefaultTypeInternal _QueryBatchRequestByNonceResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryBatchConfirmsRequest::QueryBatchConfirmsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.contract_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.nonce_)*/ ::uint64_t{0u}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryBatchConfirmsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryBatchConfirmsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryBatchConfirmsRequestDefaultTypeInternal() {}
  union {
    QueryBatchConfirmsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryBatchConfirmsRequestDefaultTypeInternal _QueryBatchConfirmsRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryBatchConfirmsResponse::QueryBatchConfirmsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.confirms_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryBatchConfirmsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryBatchConfirmsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryBatchConfirmsResponseDefaultTypeInternal() {}
  union {
    QueryBatchConfirmsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryBatchConfirmsResponseDefaultTypeInternal _QueryBatchConfirmsResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryLastEventByAddrRequest::QueryLastEventByAddrRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryLastEventByAddrRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryLastEventByAddrRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryLastEventByAddrRequestDefaultTypeInternal() {}
  union {
    QueryLastEventByAddrRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryLastEventByAddrRequestDefaultTypeInternal _QueryLastEventByAddrRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryLastEventByAddrResponse::QueryLastEventByAddrResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.last_claim_event_)*/nullptr} {}
struct QueryLastEventByAddrResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryLastEventByAddrResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryLastEventByAddrResponseDefaultTypeInternal() {}
  union {
    QueryLastEventByAddrResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryLastEventByAddrResponseDefaultTypeInternal _QueryLastEventByAddrResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryERC20ToDenomRequest::QueryERC20ToDenomRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.erc20_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryERC20ToDenomRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryERC20ToDenomRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryERC20ToDenomRequestDefaultTypeInternal() {}
  union {
    QueryERC20ToDenomRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryERC20ToDenomRequestDefaultTypeInternal _QueryERC20ToDenomRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryERC20ToDenomResponse::QueryERC20ToDenomResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.denom_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.cosmos_originated_)*/ false

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryERC20ToDenomResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryERC20ToDenomResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryERC20ToDenomResponseDefaultTypeInternal() {}
  union {
    QueryERC20ToDenomResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryERC20ToDenomResponseDefaultTypeInternal _QueryERC20ToDenomResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryDenomToERC20Request::QueryDenomToERC20Request(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.denom_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryDenomToERC20RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryDenomToERC20RequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryDenomToERC20RequestDefaultTypeInternal() {}
  union {
    QueryDenomToERC20Request _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryDenomToERC20RequestDefaultTypeInternal _QueryDenomToERC20Request_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryDenomToERC20Response::QueryDenomToERC20Response(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.erc20_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.cosmos_originated_)*/ false

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryDenomToERC20ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryDenomToERC20ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryDenomToERC20ResponseDefaultTypeInternal() {}
  union {
    QueryDenomToERC20Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryDenomToERC20ResponseDefaultTypeInternal _QueryDenomToERC20Response_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryDelegateKeysByValidatorAddress::QueryDelegateKeysByValidatorAddress(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.validator_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryDelegateKeysByValidatorAddressDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryDelegateKeysByValidatorAddressDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryDelegateKeysByValidatorAddressDefaultTypeInternal() {}
  union {
    QueryDelegateKeysByValidatorAddress _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryDelegateKeysByValidatorAddressDefaultTypeInternal _QueryDelegateKeysByValidatorAddress_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryDelegateKeysByValidatorAddressResponse::QueryDelegateKeysByValidatorAddressResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.eth_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.orchestrator_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryDelegateKeysByValidatorAddressResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryDelegateKeysByValidatorAddressResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryDelegateKeysByValidatorAddressResponseDefaultTypeInternal() {}
  union {
    QueryDelegateKeysByValidatorAddressResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryDelegateKeysByValidatorAddressResponseDefaultTypeInternal _QueryDelegateKeysByValidatorAddressResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryDelegateKeysByEthAddress::QueryDelegateKeysByEthAddress(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.eth_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryDelegateKeysByEthAddressDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryDelegateKeysByEthAddressDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryDelegateKeysByEthAddressDefaultTypeInternal() {}
  union {
    QueryDelegateKeysByEthAddress _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryDelegateKeysByEthAddressDefaultTypeInternal _QueryDelegateKeysByEthAddress_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryDelegateKeysByEthAddressResponse::QueryDelegateKeysByEthAddressResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.validator_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.orchestrator_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryDelegateKeysByEthAddressResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryDelegateKeysByEthAddressResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryDelegateKeysByEthAddressResponseDefaultTypeInternal() {}
  union {
    QueryDelegateKeysByEthAddressResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryDelegateKeysByEthAddressResponseDefaultTypeInternal _QueryDelegateKeysByEthAddressResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryDelegateKeysByOrchestratorAddress::QueryDelegateKeysByOrchestratorAddress(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.orchestrator_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryDelegateKeysByOrchestratorAddressDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryDelegateKeysByOrchestratorAddressDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryDelegateKeysByOrchestratorAddressDefaultTypeInternal() {}
  union {
    QueryDelegateKeysByOrchestratorAddress _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryDelegateKeysByOrchestratorAddressDefaultTypeInternal _QueryDelegateKeysByOrchestratorAddress_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryDelegateKeysByOrchestratorAddressResponse::QueryDelegateKeysByOrchestratorAddressResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.validator_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.eth_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryDelegateKeysByOrchestratorAddressResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryDelegateKeysByOrchestratorAddressResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryDelegateKeysByOrchestratorAddressResponseDefaultTypeInternal() {}
  union {
    QueryDelegateKeysByOrchestratorAddressResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryDelegateKeysByOrchestratorAddressResponseDefaultTypeInternal _QueryDelegateKeysByOrchestratorAddressResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryPendingSendToEth::QueryPendingSendToEth(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.sender_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryPendingSendToEthDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryPendingSendToEthDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryPendingSendToEthDefaultTypeInternal() {}
  union {
    QueryPendingSendToEth _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryPendingSendToEthDefaultTypeInternal _QueryPendingSendToEth_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryPendingSendToEthResponse::QueryPendingSendToEthResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.transfers_in_batches_)*/{}
  , /*decltype(_impl_.unbatched_transfers_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryPendingSendToEthResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryPendingSendToEthResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryPendingSendToEthResponseDefaultTypeInternal() {}
  union {
    QueryPendingSendToEthResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryPendingSendToEthResponseDefaultTypeInternal _QueryPendingSendToEthResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryModuleStateRequest::QueryModuleStateRequest(
    ::_pbi::ConstantInitialized) {}
struct QueryModuleStateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryModuleStateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryModuleStateRequestDefaultTypeInternal() {}
  union {
    QueryModuleStateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryModuleStateRequestDefaultTypeInternal _QueryModuleStateRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryModuleStateResponse::QueryModuleStateResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.state_)*/nullptr} {}
struct QueryModuleStateResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryModuleStateResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryModuleStateResponseDefaultTypeInternal() {}
  union {
    QueryModuleStateResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryModuleStateResponseDefaultTypeInternal _QueryModuleStateResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MissingNoncesRequest::MissingNoncesRequest(
    ::_pbi::ConstantInitialized) {}
struct MissingNoncesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MissingNoncesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MissingNoncesRequestDefaultTypeInternal() {}
  union {
    MissingNoncesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MissingNoncesRequestDefaultTypeInternal _MissingNoncesRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MissingNoncesResponse::MissingNoncesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.operator_addresses_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MissingNoncesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MissingNoncesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MissingNoncesResponseDefaultTypeInternal() {}
  union {
    MissingNoncesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MissingNoncesResponseDefaultTypeInternal _MissingNoncesResponse_default_instance_;
}  // namespace v1
}  // namespace peggy
}  // namespace injective
static ::_pb::Metadata file_level_metadata_injective_2fpeggy_2fv1_2fquery_2eproto[42];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_injective_2fpeggy_2fv1_2fquery_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_injective_2fpeggy_2fv1_2fquery_2eproto = nullptr;
const ::uint32_t TableStruct_injective_2fpeggy_2fv1_2fquery_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryParamsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryParamsResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryParamsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryParamsResponse, _impl_.params_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryCurrentValsetRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryCurrentValsetResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryCurrentValsetResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryCurrentValsetResponse, _impl_.valset_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryValsetRequestRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryValsetRequestRequest, _impl_.nonce_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryValsetRequestResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryValsetRequestResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryValsetRequestResponse, _impl_.valset_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryValsetConfirmRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryValsetConfirmRequest, _impl_.nonce_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryValsetConfirmRequest, _impl_.address_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryValsetConfirmResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryValsetConfirmResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryValsetConfirmResponse, _impl_.confirm_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryValsetConfirmsByNonceRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryValsetConfirmsByNonceRequest, _impl_.nonce_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryValsetConfirmsByNonceResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryValsetConfirmsByNonceResponse, _impl_.confirms_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryLastValsetRequestsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryLastValsetRequestsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryLastValsetRequestsResponse, _impl_.valsets_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryLastPendingValsetRequestByAddrRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryLastPendingValsetRequestByAddrRequest, _impl_.address_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryLastPendingValsetRequestByAddrResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryLastPendingValsetRequestByAddrResponse, _impl_.valsets_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryBatchFeeRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryBatchFeeResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryBatchFeeResponse, _impl_.batchfees_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryLastPendingBatchRequestByAddrRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryLastPendingBatchRequestByAddrRequest, _impl_.address_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryLastPendingBatchRequestByAddrResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryLastPendingBatchRequestByAddrResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryLastPendingBatchRequestByAddrResponse, _impl_.batch_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryOutgoingTxBatchesRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryOutgoingTxBatchesResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryOutgoingTxBatchesResponse, _impl_.batches_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryBatchRequestByNonceRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryBatchRequestByNonceRequest, _impl_.nonce_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryBatchRequestByNonceRequest, _impl_.contract_address_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryBatchRequestByNonceResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryBatchRequestByNonceResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryBatchRequestByNonceResponse, _impl_.batch_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryBatchConfirmsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryBatchConfirmsRequest, _impl_.nonce_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryBatchConfirmsRequest, _impl_.contract_address_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryBatchConfirmsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryBatchConfirmsResponse, _impl_.confirms_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryLastEventByAddrRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryLastEventByAddrRequest, _impl_.address_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryLastEventByAddrResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryLastEventByAddrResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryLastEventByAddrResponse, _impl_.last_claim_event_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryERC20ToDenomRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryERC20ToDenomRequest, _impl_.erc20_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryERC20ToDenomResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryERC20ToDenomResponse, _impl_.denom_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryERC20ToDenomResponse, _impl_.cosmos_originated_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryDenomToERC20Request, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryDenomToERC20Request, _impl_.denom_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryDenomToERC20Response, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryDenomToERC20Response, _impl_.erc20_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryDenomToERC20Response, _impl_.cosmos_originated_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryDelegateKeysByValidatorAddress, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryDelegateKeysByValidatorAddress, _impl_.validator_address_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryDelegateKeysByValidatorAddressResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryDelegateKeysByValidatorAddressResponse, _impl_.eth_address_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryDelegateKeysByValidatorAddressResponse, _impl_.orchestrator_address_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryDelegateKeysByEthAddress, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryDelegateKeysByEthAddress, _impl_.eth_address_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryDelegateKeysByEthAddressResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryDelegateKeysByEthAddressResponse, _impl_.validator_address_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryDelegateKeysByEthAddressResponse, _impl_.orchestrator_address_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryDelegateKeysByOrchestratorAddress, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryDelegateKeysByOrchestratorAddress, _impl_.orchestrator_address_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryDelegateKeysByOrchestratorAddressResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryDelegateKeysByOrchestratorAddressResponse, _impl_.validator_address_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryDelegateKeysByOrchestratorAddressResponse, _impl_.eth_address_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryPendingSendToEth, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryPendingSendToEth, _impl_.sender_address_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryPendingSendToEthResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryPendingSendToEthResponse, _impl_.transfers_in_batches_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryPendingSendToEthResponse, _impl_.unbatched_transfers_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryModuleStateRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryModuleStateResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryModuleStateResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::QueryModuleStateResponse, _impl_.state_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MissingNoncesRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MissingNoncesResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MissingNoncesResponse, _impl_.operator_addresses_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::injective::peggy::v1::QueryParamsRequest)},
        { 8, 17, -1, sizeof(::injective::peggy::v1::QueryParamsResponse)},
        { 18, -1, -1, sizeof(::injective::peggy::v1::QueryCurrentValsetRequest)},
        { 26, 35, -1, sizeof(::injective::peggy::v1::QueryCurrentValsetResponse)},
        { 36, -1, -1, sizeof(::injective::peggy::v1::QueryValsetRequestRequest)},
        { 45, 54, -1, sizeof(::injective::peggy::v1::QueryValsetRequestResponse)},
        { 55, -1, -1, sizeof(::injective::peggy::v1::QueryValsetConfirmRequest)},
        { 65, 74, -1, sizeof(::injective::peggy::v1::QueryValsetConfirmResponse)},
        { 75, -1, -1, sizeof(::injective::peggy::v1::QueryValsetConfirmsByNonceRequest)},
        { 84, -1, -1, sizeof(::injective::peggy::v1::QueryValsetConfirmsByNonceResponse)},
        { 93, -1, -1, sizeof(::injective::peggy::v1::QueryLastValsetRequestsRequest)},
        { 101, -1, -1, sizeof(::injective::peggy::v1::QueryLastValsetRequestsResponse)},
        { 110, -1, -1, sizeof(::injective::peggy::v1::QueryLastPendingValsetRequestByAddrRequest)},
        { 119, -1, -1, sizeof(::injective::peggy::v1::QueryLastPendingValsetRequestByAddrResponse)},
        { 128, -1, -1, sizeof(::injective::peggy::v1::QueryBatchFeeRequest)},
        { 136, -1, -1, sizeof(::injective::peggy::v1::QueryBatchFeeResponse)},
        { 145, -1, -1, sizeof(::injective::peggy::v1::QueryLastPendingBatchRequestByAddrRequest)},
        { 154, 163, -1, sizeof(::injective::peggy::v1::QueryLastPendingBatchRequestByAddrResponse)},
        { 164, -1, -1, sizeof(::injective::peggy::v1::QueryOutgoingTxBatchesRequest)},
        { 172, -1, -1, sizeof(::injective::peggy::v1::QueryOutgoingTxBatchesResponse)},
        { 181, -1, -1, sizeof(::injective::peggy::v1::QueryBatchRequestByNonceRequest)},
        { 191, 200, -1, sizeof(::injective::peggy::v1::QueryBatchRequestByNonceResponse)},
        { 201, -1, -1, sizeof(::injective::peggy::v1::QueryBatchConfirmsRequest)},
        { 211, -1, -1, sizeof(::injective::peggy::v1::QueryBatchConfirmsResponse)},
        { 220, -1, -1, sizeof(::injective::peggy::v1::QueryLastEventByAddrRequest)},
        { 229, 238, -1, sizeof(::injective::peggy::v1::QueryLastEventByAddrResponse)},
        { 239, -1, -1, sizeof(::injective::peggy::v1::QueryERC20ToDenomRequest)},
        { 248, -1, -1, sizeof(::injective::peggy::v1::QueryERC20ToDenomResponse)},
        { 258, -1, -1, sizeof(::injective::peggy::v1::QueryDenomToERC20Request)},
        { 267, -1, -1, sizeof(::injective::peggy::v1::QueryDenomToERC20Response)},
        { 277, -1, -1, sizeof(::injective::peggy::v1::QueryDelegateKeysByValidatorAddress)},
        { 286, -1, -1, sizeof(::injective::peggy::v1::QueryDelegateKeysByValidatorAddressResponse)},
        { 296, -1, -1, sizeof(::injective::peggy::v1::QueryDelegateKeysByEthAddress)},
        { 305, -1, -1, sizeof(::injective::peggy::v1::QueryDelegateKeysByEthAddressResponse)},
        { 315, -1, -1, sizeof(::injective::peggy::v1::QueryDelegateKeysByOrchestratorAddress)},
        { 324, -1, -1, sizeof(::injective::peggy::v1::QueryDelegateKeysByOrchestratorAddressResponse)},
        { 334, -1, -1, sizeof(::injective::peggy::v1::QueryPendingSendToEth)},
        { 343, -1, -1, sizeof(::injective::peggy::v1::QueryPendingSendToEthResponse)},
        { 353, -1, -1, sizeof(::injective::peggy::v1::QueryModuleStateRequest)},
        { 361, 370, -1, sizeof(::injective::peggy::v1::QueryModuleStateResponse)},
        { 371, -1, -1, sizeof(::injective::peggy::v1::MissingNoncesRequest)},
        { 379, -1, -1, sizeof(::injective::peggy::v1::MissingNoncesResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::injective::peggy::v1::_QueryParamsRequest_default_instance_._instance,
    &::injective::peggy::v1::_QueryParamsResponse_default_instance_._instance,
    &::injective::peggy::v1::_QueryCurrentValsetRequest_default_instance_._instance,
    &::injective::peggy::v1::_QueryCurrentValsetResponse_default_instance_._instance,
    &::injective::peggy::v1::_QueryValsetRequestRequest_default_instance_._instance,
    &::injective::peggy::v1::_QueryValsetRequestResponse_default_instance_._instance,
    &::injective::peggy::v1::_QueryValsetConfirmRequest_default_instance_._instance,
    &::injective::peggy::v1::_QueryValsetConfirmResponse_default_instance_._instance,
    &::injective::peggy::v1::_QueryValsetConfirmsByNonceRequest_default_instance_._instance,
    &::injective::peggy::v1::_QueryValsetConfirmsByNonceResponse_default_instance_._instance,
    &::injective::peggy::v1::_QueryLastValsetRequestsRequest_default_instance_._instance,
    &::injective::peggy::v1::_QueryLastValsetRequestsResponse_default_instance_._instance,
    &::injective::peggy::v1::_QueryLastPendingValsetRequestByAddrRequest_default_instance_._instance,
    &::injective::peggy::v1::_QueryLastPendingValsetRequestByAddrResponse_default_instance_._instance,
    &::injective::peggy::v1::_QueryBatchFeeRequest_default_instance_._instance,
    &::injective::peggy::v1::_QueryBatchFeeResponse_default_instance_._instance,
    &::injective::peggy::v1::_QueryLastPendingBatchRequestByAddrRequest_default_instance_._instance,
    &::injective::peggy::v1::_QueryLastPendingBatchRequestByAddrResponse_default_instance_._instance,
    &::injective::peggy::v1::_QueryOutgoingTxBatchesRequest_default_instance_._instance,
    &::injective::peggy::v1::_QueryOutgoingTxBatchesResponse_default_instance_._instance,
    &::injective::peggy::v1::_QueryBatchRequestByNonceRequest_default_instance_._instance,
    &::injective::peggy::v1::_QueryBatchRequestByNonceResponse_default_instance_._instance,
    &::injective::peggy::v1::_QueryBatchConfirmsRequest_default_instance_._instance,
    &::injective::peggy::v1::_QueryBatchConfirmsResponse_default_instance_._instance,
    &::injective::peggy::v1::_QueryLastEventByAddrRequest_default_instance_._instance,
    &::injective::peggy::v1::_QueryLastEventByAddrResponse_default_instance_._instance,
    &::injective::peggy::v1::_QueryERC20ToDenomRequest_default_instance_._instance,
    &::injective::peggy::v1::_QueryERC20ToDenomResponse_default_instance_._instance,
    &::injective::peggy::v1::_QueryDenomToERC20Request_default_instance_._instance,
    &::injective::peggy::v1::_QueryDenomToERC20Response_default_instance_._instance,
    &::injective::peggy::v1::_QueryDelegateKeysByValidatorAddress_default_instance_._instance,
    &::injective::peggy::v1::_QueryDelegateKeysByValidatorAddressResponse_default_instance_._instance,
    &::injective::peggy::v1::_QueryDelegateKeysByEthAddress_default_instance_._instance,
    &::injective::peggy::v1::_QueryDelegateKeysByEthAddressResponse_default_instance_._instance,
    &::injective::peggy::v1::_QueryDelegateKeysByOrchestratorAddress_default_instance_._instance,
    &::injective::peggy::v1::_QueryDelegateKeysByOrchestratorAddressResponse_default_instance_._instance,
    &::injective::peggy::v1::_QueryPendingSendToEth_default_instance_._instance,
    &::injective::peggy::v1::_QueryPendingSendToEthResponse_default_instance_._instance,
    &::injective::peggy::v1::_QueryModuleStateRequest_default_instance_._instance,
    &::injective::peggy::v1::_QueryModuleStateResponse_default_instance_._instance,
    &::injective::peggy::v1::_MissingNoncesRequest_default_instance_._instance,
    &::injective::peggy::v1::_MissingNoncesResponse_default_instance_._instance,
};
const char descriptor_table_protodef_injective_2fpeggy_2fv1_2fquery_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\036injective/peggy/v1/query.proto\022\022inject"
    "ive.peggy.v1\032 injective/peggy/v1/genesis"
    ".proto\032\037injective/peggy/v1/params.proto\032"
    "\036injective/peggy/v1/types.proto\032\035injecti"
    "ve/peggy/v1/msgs.proto\032\035injective/peggy/"
    "v1/pool.proto\032\036injective/peggy/v1/batch."
    "proto\032\034google/api/annotations.proto\032\024gog"
    "oproto/gogo.proto\"\024\n\022QueryParamsRequest\""
    "O\n\023QueryParamsResponse\0228\n\006params\030\001 \001(\0132\032"
    ".injective.peggy.v1.ParamsB\004\310\336\037\000R\006params"
    "\"\033\n\031QueryCurrentValsetRequest\"P\n\032QueryCu"
    "rrentValsetResponse\0222\n\006valset\030\001 \001(\0132\032.in"
    "jective.peggy.v1.ValsetR\006valset\"1\n\031Query"
    "ValsetRequestRequest\022\024\n\005nonce\030\001 \001(\004R\005non"
    "ce\"P\n\032QueryValsetRequestResponse\0222\n\006vals"
    "et\030\001 \001(\0132\032.injective.peggy.v1.ValsetR\006va"
    "lset\"K\n\031QueryValsetConfirmRequest\022\024\n\005non"
    "ce\030\001 \001(\004R\005nonce\022\030\n\007address\030\002 \001(\tR\007addres"
    "s\"\\\n\032QueryValsetConfirmResponse\022>\n\007confi"
    "rm\030\001 \001(\0132$.injective.peggy.v1.MsgValsetC"
    "onfirmR\007confirm\"9\n!QueryValsetConfirmsBy"
    "NonceRequest\022\024\n\005nonce\030\001 \001(\004R\005nonce\"f\n\"Qu"
    "eryValsetConfirmsByNonceResponse\022@\n\010conf"
    "irms\030\001 \003(\0132$.injective.peggy.v1.MsgValse"
    "tConfirmR\010confirms\" \n\036QueryLastValsetReq"
    "uestsRequest\"W\n\037QueryLastValsetRequestsR"
    "esponse\0224\n\007valsets\030\001 \003(\0132\032.injective.peg"
    "gy.v1.ValsetR\007valsets\"F\n*QueryLastPendin"
    "gValsetRequestByAddrRequest\022\030\n\007address\030\001"
    " \001(\tR\007address\"c\n+QueryLastPendingValsetR"
    "equestByAddrResponse\0224\n\007valsets\030\001 \003(\0132\032."
    "injective.peggy.v1.ValsetR\007valsets\"\026\n\024Qu"
    "eryBatchFeeRequest\"T\n\025QueryBatchFeeRespo"
    "nse\022;\n\tbatchFees\030\001 \003(\0132\035.injective.peggy"
    ".v1.BatchFeesR\tbatchFees\"E\n)QueryLastPen"
    "dingBatchRequestByAddrRequest\022\030\n\007address"
    "\030\001 \001(\tR\007address\"g\n*QueryLastPendingBatch"
    "RequestByAddrResponse\0229\n\005batch\030\001 \001(\0132#.i"
    "njective.peggy.v1.OutgoingTxBatchR\005batch"
    "\"\037\n\035QueryOutgoingTxBatchesRequest\"_\n\036Que"
    "ryOutgoingTxBatchesResponse\022=\n\007batches\030\001"
    " \003(\0132#.injective.peggy.v1.OutgoingTxBatc"
    "hR\007batches\"b\n\037QueryBatchRequestByNonceRe"
    "quest\022\024\n\005nonce\030\001 \001(\004R\005nonce\022)\n\020contract_"
    "address\030\002 \001(\tR\017contractAddress\"]\n QueryB"
    "atchRequestByNonceResponse\0229\n\005batch\030\001 \001("
    "\0132#.injective.peggy.v1.OutgoingTxBatchR\005"
    "batch\"\\\n\031QueryBatchConfirmsRequest\022\024\n\005no"
    "nce\030\001 \001(\004R\005nonce\022)\n\020contract_address\030\002 \001"
    "(\tR\017contractAddress\"]\n\032QueryBatchConfirm"
    "sResponse\022\?\n\010confirms\030\001 \003(\0132#.injective."
    "peggy.v1.MsgConfirmBatchR\010confirms\"7\n\033Qu"
    "eryLastEventByAddrRequest\022\030\n\007address\030\001 \001"
    "(\tR\007address\"l\n\034QueryLastEventByAddrRespo"
    "nse\022L\n\020last_claim_event\030\001 \001(\0132\".injectiv"
    "e.peggy.v1.LastClaimEventR\016lastClaimEven"
    "t\"0\n\030QueryERC20ToDenomRequest\022\024\n\005erc20\030\001"
    " \001(\tR\005erc20\"^\n\031QueryERC20ToDenomResponse"
    "\022\024\n\005denom\030\001 \001(\tR\005denom\022+\n\021cosmos_origina"
    "ted\030\002 \001(\010R\020cosmosOriginated\"0\n\030QueryDeno"
    "mToERC20Request\022\024\n\005denom\030\001 \001(\tR\005denom\"^\n"
    "\031QueryDenomToERC20Response\022\024\n\005erc20\030\001 \001("
    "\tR\005erc20\022+\n\021cosmos_originated\030\002 \001(\010R\020cos"
    "mosOriginated\"R\n#QueryDelegateKeysByVali"
    "datorAddress\022+\n\021validator_address\030\001 \001(\tR"
    "\020validatorAddress\"\201\001\n+QueryDelegateKeysB"
    "yValidatorAddressResponse\022\037\n\013eth_address"
    "\030\001 \001(\tR\nethAddress\0221\n\024orchestrator_addre"
    "ss\030\002 \001(\tR\023orchestratorAddress\"@\n\035QueryDe"
    "legateKeysByEthAddress\022\037\n\013eth_address\030\001 "
    "\001(\tR\nethAddress\"\207\001\n%QueryDelegateKeysByE"
    "thAddressResponse\022+\n\021validator_address\030\001"
    " \001(\tR\020validatorAddress\0221\n\024orchestrator_a"
    "ddress\030\002 \001(\tR\023orchestratorAddress\"[\n&Que"
    "ryDelegateKeysByOrchestratorAddress\0221\n\024o"
    "rchestrator_address\030\001 \001(\tR\023orchestratorA"
    "ddress\"~\n.QueryDelegateKeysByOrchestrato"
    "rAddressResponse\022+\n\021validator_address\030\001 "
    "\001(\tR\020validatorAddress\022\037\n\013eth_address\030\002 \001"
    "(\tR\nethAddress\">\n\025QueryPendingSendToEth\022"
    "%\n\016sender_address\030\001 \001(\tR\rsenderAddress\"\322"
    "\001\n\035QueryPendingSendToEthResponse\022X\n\024tran"
    "sfers_in_batches\030\001 \003(\0132&.injective.peggy"
    ".v1.OutgoingTransferTxR\022transfersInBatch"
    "es\022W\n\023unbatched_transfers\030\002 \003(\0132&.inject"
    "ive.peggy.v1.OutgoingTransferTxR\022unbatch"
    "edTransfers\"\031\n\027QueryModuleStateRequest\"R"
    "\n\030QueryModuleStateResponse\0226\n\005state\030\001 \001("
    "\0132 .injective.peggy.v1.GenesisStateR\005sta"
    "te\"\026\n\024MissingNoncesRequest\"F\n\025MissingNon"
    "cesResponse\022-\n\022operator_addresses\030\001 \003(\tR"
    "\021operatorAddresses2\306\032\n\005Query\022s\n\006Params\022&"
    ".injective.peggy.v1.QueryParamsRequest\032\'"
    ".injective.peggy.v1.QueryParamsResponse\""
    "\030\202\323\344\223\002\022\022\020/peggy/v1/params\022\220\001\n\rCurrentVal"
    "set\022-.injective.peggy.v1.QueryCurrentVal"
    "setRequest\032..injective.peggy.v1.QueryCur"
    "rentValsetResponse\" \202\323\344\223\002\032\022\030/peggy/v1/va"
    "lset/current\022\210\001\n\rValsetRequest\022-.injecti"
    "ve.peggy.v1.QueryValsetRequestRequest\032.."
    "injective.peggy.v1.QueryValsetRequestRes"
    "ponse\"\030\202\323\344\223\002\022\022\020/peggy/v1/valset\022\220\001\n\rVals"
    "etConfirm\022-.injective.peggy.v1.QueryVals"
    "etConfirmRequest\032..injective.peggy.v1.Qu"
    "eryValsetConfirmResponse\" \202\323\344\223\002\032\022\030/peggy"
    "/v1/valset/confirm\022\252\001\n\025ValsetConfirmsByN"
    "once\0225.injective.peggy.v1.QueryValsetCon"
    "firmsByNonceRequest\0326.injective.peggy.v1"
    ".QueryValsetConfirmsByNonceResponse\"\"\202\323\344"
    "\223\002\034\022\032/peggy/v1/confirms/{nonce}\022\240\001\n\022Last"
    "ValsetRequests\0222.injective.peggy.v1.Quer"
    "yLastValsetRequestsRequest\0323.injective.p"
    "eggy.v1.QueryLastValsetRequestsResponse\""
    "!\202\323\344\223\002\033\022\031/peggy/v1/valset/requests\022\300\001\n\036L"
    "astPendingValsetRequestByAddr\022>.injectiv"
    "e.peggy.v1.QueryLastPendingValsetRequest"
    "ByAddrRequest\032\?.injective.peggy.v1.Query"
    "LastPendingValsetRequestByAddrResponse\"\035"
    "\202\323\344\223\002\027\022\025/peggy/v1/valset/last\022\236\001\n\017LastEv"
    "entByAddr\022/.injective.peggy.v1.QueryLast"
    "EventByAddrRequest\0320.injective.peggy.v1."
    "QueryLastEventByAddrResponse\"(\202\323\344\223\002\"\022 /p"
    "eggy/v1/oracle/event/{address}\022\232\001\n\023GetPe"
    "ndingSendToEth\022).injective.peggy.v1.Quer"
    "yPendingSendToEth\0321.injective.peggy.v1.Q"
    "ueryPendingSendToEthResponse\"%\202\323\344\223\002\037\022\035/p"
    "eggy/v1/pending_send_to_eth\022}\n\tBatchFees"
    "\022(.injective.peggy.v1.QueryBatchFeeReque"
    "st\032).injective.peggy.v1.QueryBatchFeeRes"
    "ponse\"\033\202\323\344\223\002\025\022\023/peggy/v1/batchfees\022\236\001\n\021O"
    "utgoingTxBatches\0221.injective.peggy.v1.Qu"
    "eryOutgoingTxBatchesRequest\0322.injective."
    "peggy.v1.QueryOutgoingTxBatchesResponse\""
    "\"\202\323\344\223\002\034\022\032/peggy/v1/batch/outgoingtx\022\274\001\n\035"
    "LastPendingBatchRequestByAddr\022=.injectiv"
    "e.peggy.v1.QueryLastPendingBatchRequestB"
    "yAddrRequest\032>.injective.peggy.v1.QueryL"
    "astPendingBatchRequestByAddrResponse\"\034\202\323"
    "\344\223\002\026\022\024/peggy/v1/batch/last\022\231\001\n\023BatchRequ"
    "estByNonce\0223.injective.peggy.v1.QueryBat"
    "chRequestByNonceRequest\0324.injective.pegg"
    "y.v1.QueryBatchRequestByNonceResponse\"\027\202"
    "\323\344\223\002\021\022\017/peggy/v1/batch\022\220\001\n\rBatchConfirms"
    "\022-.injective.peggy.v1.QueryBatchConfirms"
    "Request\032..injective.peggy.v1.QueryBatchC"
    "onfirmsResponse\" \202\323\344\223\002\032\022\030/peggy/v1/batch"
    "/confirms\022\237\001\n\014ERC20ToDenom\022,.injective.p"
    "eggy.v1.QueryERC20ToDenomRequest\032-.injec"
    "tive.peggy.v1.QueryERC20ToDenomResponse\""
    "2\202\323\344\223\002,\022*/peggy/v1/cosmos_originated/erc"
    "20_to_denom\022\237\001\n\014DenomToERC20\022,.injective"
    ".peggy.v1.QueryDenomToERC20Request\032-.inj"
    "ective.peggy.v1.QueryDenomToERC20Respons"
    "e\"2\202\323\344\223\002,\022*/peggy/v1/cosmos_originated/d"
    "enom_to_erc20\022\311\001\n\031GetDelegateKeyByValida"
    "tor\0227.injective.peggy.v1.QueryDelegateKe"
    "ysByValidatorAddress\032\?.injective.peggy.v"
    "1.QueryDelegateKeysByValidatorAddressRes"
    "ponse\"2\202\323\344\223\002,\022*/peggy/v1/query_delegate_"
    "keys_by_validator\022\261\001\n\023GetDelegateKeyByEt"
    "h\0221.injective.peggy.v1.QueryDelegateKeys"
    "ByEthAddress\0329.injective.peggy.v1.QueryD"
    "elegateKeysByEthAddressResponse\",\202\323\344\223\002&\022"
    "$/peggy/v1/query_delegate_keys_by_eth\022\325\001"
    "\n\034GetDelegateKeyByOrchestrator\022:.injecti"
    "ve.peggy.v1.QueryDelegateKeysByOrchestra"
    "torAddress\032B.injective.peggy.v1.QueryDel"
    "egateKeysByOrchestratorAddressResponse\"5"
    "\202\323\344\223\002/\022-/peggy/v1/query_delegate_keys_by"
    "_orchestrator\022\215\001\n\020PeggyModuleState\022+.inj"
    "ective.peggy.v1.QueryModuleStateRequest\032"
    ",.injective.peggy.v1.QueryModuleStateRes"
    "ponse\"\036\202\323\344\223\002\030\022\026/peggy/v1/module_state\022\213\001"
    "\n\022MissingPeggoNonces\022(.injective.peggy.v"
    "1.MissingNoncesRequest\032).injective.peggy"
    ".v1.MissingNoncesResponse\" \202\323\344\223\002\032\022\030/pegg"
    "y/v1/missing_noncesB\333\001\n\026com.injective.pe"
    "ggy.v1B\nQueryProtoP\001ZKgithub.com/Injecti"
    "veLabs/injective-core/injective-chain/mo"
    "dules/peggy/types\242\002\003IPX\252\002\022Injective.Pegg"
    "y.V1\312\002\022Injective\\Peggy\\V1\342\002\036Injective\\Pe"
    "ggy\\V1\\GPBMetadata\352\002\024Injective::Peggy::V"
    "1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_deps[8] =
    {
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_google_2fapi_2fannotations_2eproto,
        &::descriptor_table_injective_2fpeggy_2fv1_2fbatch_2eproto,
        &::descriptor_table_injective_2fpeggy_2fv1_2fgenesis_2eproto,
        &::descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto,
        &::descriptor_table_injective_2fpeggy_2fv1_2fparams_2eproto,
        &::descriptor_table_injective_2fpeggy_2fv1_2fpool_2eproto,
        &::descriptor_table_injective_2fpeggy_2fv1_2ftypes_2eproto,
};
static ::absl::once_flag descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto = {
    false,
    false,
    7289,
    descriptor_table_protodef_injective_2fpeggy_2fv1_2fquery_2eproto,
    "injective/peggy/v1/query.proto",
    &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_once,
    descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_deps,
    8,
    42,
    schemas,
    file_default_instances,
    TableStruct_injective_2fpeggy_2fv1_2fquery_2eproto::offsets,
    file_level_metadata_injective_2fpeggy_2fv1_2fquery_2eproto,
    file_level_enum_descriptors_injective_2fpeggy_2fv1_2fquery_2eproto,
    file_level_service_descriptors_injective_2fpeggy_2fv1_2fquery_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_getter() {
  return &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_injective_2fpeggy_2fv1_2fquery_2eproto(&descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto);
namespace injective {
namespace peggy {
namespace v1 {
// ===================================================================

class QueryParamsRequest::_Internal {
 public:
};

QueryParamsRequest::QueryParamsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.QueryParamsRequest)
}
QueryParamsRequest::QueryParamsRequest(const QueryParamsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  QueryParamsRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.QueryParamsRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryParamsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryParamsRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata QueryParamsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fquery_2eproto[0]);
}
// ===================================================================

class QueryParamsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryParamsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryParamsResponse, _impl_._has_bits_);
  static const ::injective::peggy::v1::Params& params(const QueryParamsResponse* msg);
  static void set_has_params(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::injective::peggy::v1::Params&
QueryParamsResponse::_Internal::params(const QueryParamsResponse* msg) {
  return *msg->_impl_.params_;
}
void QueryParamsResponse::clear_params() {
  if (_impl_.params_ != nullptr) _impl_.params_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryParamsResponse::QueryParamsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.QueryParamsResponse)
}
QueryParamsResponse::QueryParamsResponse(const QueryParamsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryParamsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.params_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.params_ = new ::injective::peggy::v1::Params(*from._impl_.params_);
  }
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.QueryParamsResponse)
}

inline void QueryParamsResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.params_){nullptr}
  };
}

QueryParamsResponse::~QueryParamsResponse() {
  // @@protoc_insertion_point(destructor:injective.peggy.v1.QueryParamsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryParamsResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.params_;
}

void QueryParamsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryParamsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.peggy.v1.QueryParamsResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.params_ != nullptr);
    _impl_.params_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryParamsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .injective.peggy.v1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryParamsResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.peggy.v1.QueryParamsResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .injective.peggy.v1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.peggy.v1.QueryParamsResponse)
  return target;
}

::size_t QueryParamsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.peggy.v1.QueryParamsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .injective.peggy.v1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryParamsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryParamsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryParamsResponse::GetClassData() const { return &_class_data_; }


void QueryParamsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryParamsResponse*>(&to_msg);
  auto& from = static_cast<const QueryParamsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.peggy.v1.QueryParamsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_params()->::injective::peggy::v1::Params::MergeFrom(
        from._internal_params());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryParamsResponse::CopyFrom(const QueryParamsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.peggy.v1.QueryParamsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryParamsResponse::IsInitialized() const {
  return true;
}

void QueryParamsResponse::InternalSwap(QueryParamsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.params_, other->_impl_.params_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryParamsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fquery_2eproto[1]);
}
// ===================================================================

class QueryCurrentValsetRequest::_Internal {
 public:
};

QueryCurrentValsetRequest::QueryCurrentValsetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.QueryCurrentValsetRequest)
}
QueryCurrentValsetRequest::QueryCurrentValsetRequest(const QueryCurrentValsetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  QueryCurrentValsetRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.QueryCurrentValsetRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryCurrentValsetRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryCurrentValsetRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata QueryCurrentValsetRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fquery_2eproto[2]);
}
// ===================================================================

class QueryCurrentValsetResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryCurrentValsetResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryCurrentValsetResponse, _impl_._has_bits_);
  static const ::injective::peggy::v1::Valset& valset(const QueryCurrentValsetResponse* msg);
  static void set_has_valset(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::injective::peggy::v1::Valset&
QueryCurrentValsetResponse::_Internal::valset(const QueryCurrentValsetResponse* msg) {
  return *msg->_impl_.valset_;
}
void QueryCurrentValsetResponse::clear_valset() {
  if (_impl_.valset_ != nullptr) _impl_.valset_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryCurrentValsetResponse::QueryCurrentValsetResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.QueryCurrentValsetResponse)
}
QueryCurrentValsetResponse::QueryCurrentValsetResponse(const QueryCurrentValsetResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryCurrentValsetResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.valset_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.valset_ = new ::injective::peggy::v1::Valset(*from._impl_.valset_);
  }
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.QueryCurrentValsetResponse)
}

inline void QueryCurrentValsetResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.valset_){nullptr}
  };
}

QueryCurrentValsetResponse::~QueryCurrentValsetResponse() {
  // @@protoc_insertion_point(destructor:injective.peggy.v1.QueryCurrentValsetResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryCurrentValsetResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.valset_;
}

void QueryCurrentValsetResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryCurrentValsetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.peggy.v1.QueryCurrentValsetResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.valset_ != nullptr);
    _impl_.valset_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryCurrentValsetResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .injective.peggy.v1.Valset valset = 1 [json_name = "valset"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_valset(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryCurrentValsetResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.peggy.v1.QueryCurrentValsetResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .injective.peggy.v1.Valset valset = 1 [json_name = "valset"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::valset(this),
        _Internal::valset(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.peggy.v1.QueryCurrentValsetResponse)
  return target;
}

::size_t QueryCurrentValsetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.peggy.v1.QueryCurrentValsetResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .injective.peggy.v1.Valset valset = 1 [json_name = "valset"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.valset_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryCurrentValsetResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryCurrentValsetResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryCurrentValsetResponse::GetClassData() const { return &_class_data_; }


void QueryCurrentValsetResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryCurrentValsetResponse*>(&to_msg);
  auto& from = static_cast<const QueryCurrentValsetResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.peggy.v1.QueryCurrentValsetResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_valset()->::injective::peggy::v1::Valset::MergeFrom(
        from._internal_valset());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryCurrentValsetResponse::CopyFrom(const QueryCurrentValsetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.peggy.v1.QueryCurrentValsetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryCurrentValsetResponse::IsInitialized() const {
  return true;
}

void QueryCurrentValsetResponse::InternalSwap(QueryCurrentValsetResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.valset_, other->_impl_.valset_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryCurrentValsetResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fquery_2eproto[3]);
}
// ===================================================================

class QueryValsetRequestRequest::_Internal {
 public:
};

QueryValsetRequestRequest::QueryValsetRequestRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.QueryValsetRequestRequest)
}
QueryValsetRequestRequest::QueryValsetRequestRequest(const QueryValsetRequestRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.QueryValsetRequestRequest)
}

inline void QueryValsetRequestRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.nonce_) { ::uint64_t{0u} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

QueryValsetRequestRequest::~QueryValsetRequestRequest() {
  // @@protoc_insertion_point(destructor:injective.peggy.v1.QueryValsetRequestRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryValsetRequestRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}

void QueryValsetRequestRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryValsetRequestRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.peggy.v1.QueryValsetRequestRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.nonce_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryValsetRequestRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 nonce = 1 [json_name = "nonce"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.nonce_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryValsetRequestRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.peggy.v1.QueryValsetRequestRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 nonce = 1 [json_name = "nonce"];
  if (this->_internal_nonce() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_nonce(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.peggy.v1.QueryValsetRequestRequest)
  return target;
}

::size_t QueryValsetRequestRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.peggy.v1.QueryValsetRequestRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 nonce = 1 [json_name = "nonce"];
  if (this->_internal_nonce() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_nonce());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryValsetRequestRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryValsetRequestRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryValsetRequestRequest::GetClassData() const { return &_class_data_; }


void QueryValsetRequestRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryValsetRequestRequest*>(&to_msg);
  auto& from = static_cast<const QueryValsetRequestRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.peggy.v1.QueryValsetRequestRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_nonce() != 0) {
    _this->_internal_set_nonce(from._internal_nonce());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryValsetRequestRequest::CopyFrom(const QueryValsetRequestRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.peggy.v1.QueryValsetRequestRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryValsetRequestRequest::IsInitialized() const {
  return true;
}

void QueryValsetRequestRequest::InternalSwap(QueryValsetRequestRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);

  swap(_impl_.nonce_, other->_impl_.nonce_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryValsetRequestRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fquery_2eproto[4]);
}
// ===================================================================

class QueryValsetRequestResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryValsetRequestResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryValsetRequestResponse, _impl_._has_bits_);
  static const ::injective::peggy::v1::Valset& valset(const QueryValsetRequestResponse* msg);
  static void set_has_valset(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::injective::peggy::v1::Valset&
QueryValsetRequestResponse::_Internal::valset(const QueryValsetRequestResponse* msg) {
  return *msg->_impl_.valset_;
}
void QueryValsetRequestResponse::clear_valset() {
  if (_impl_.valset_ != nullptr) _impl_.valset_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryValsetRequestResponse::QueryValsetRequestResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.QueryValsetRequestResponse)
}
QueryValsetRequestResponse::QueryValsetRequestResponse(const QueryValsetRequestResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryValsetRequestResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.valset_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.valset_ = new ::injective::peggy::v1::Valset(*from._impl_.valset_);
  }
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.QueryValsetRequestResponse)
}

inline void QueryValsetRequestResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.valset_){nullptr}
  };
}

QueryValsetRequestResponse::~QueryValsetRequestResponse() {
  // @@protoc_insertion_point(destructor:injective.peggy.v1.QueryValsetRequestResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryValsetRequestResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.valset_;
}

void QueryValsetRequestResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryValsetRequestResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.peggy.v1.QueryValsetRequestResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.valset_ != nullptr);
    _impl_.valset_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryValsetRequestResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .injective.peggy.v1.Valset valset = 1 [json_name = "valset"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_valset(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryValsetRequestResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.peggy.v1.QueryValsetRequestResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .injective.peggy.v1.Valset valset = 1 [json_name = "valset"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::valset(this),
        _Internal::valset(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.peggy.v1.QueryValsetRequestResponse)
  return target;
}

::size_t QueryValsetRequestResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.peggy.v1.QueryValsetRequestResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .injective.peggy.v1.Valset valset = 1 [json_name = "valset"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.valset_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryValsetRequestResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryValsetRequestResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryValsetRequestResponse::GetClassData() const { return &_class_data_; }


void QueryValsetRequestResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryValsetRequestResponse*>(&to_msg);
  auto& from = static_cast<const QueryValsetRequestResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.peggy.v1.QueryValsetRequestResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_valset()->::injective::peggy::v1::Valset::MergeFrom(
        from._internal_valset());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryValsetRequestResponse::CopyFrom(const QueryValsetRequestResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.peggy.v1.QueryValsetRequestResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryValsetRequestResponse::IsInitialized() const {
  return true;
}

void QueryValsetRequestResponse::InternalSwap(QueryValsetRequestResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.valset_, other->_impl_.valset_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryValsetRequestResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fquery_2eproto[5]);
}
// ===================================================================

class QueryValsetConfirmRequest::_Internal {
 public:
};

QueryValsetConfirmRequest::QueryValsetConfirmRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.QueryValsetConfirmRequest)
}
QueryValsetConfirmRequest::QueryValsetConfirmRequest(const QueryValsetConfirmRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryValsetConfirmRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.address_) {}

    , decltype(_impl_.nonce_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_address().empty()) {
    _this->_impl_.address_.Set(from._internal_address(), _this->GetArenaForAllocation());
  }
  _this->_impl_.nonce_ = from._impl_.nonce_;
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.QueryValsetConfirmRequest)
}

inline void QueryValsetConfirmRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.address_) {}

    , decltype(_impl_.nonce_) { ::uint64_t{0u} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryValsetConfirmRequest::~QueryValsetConfirmRequest() {
  // @@protoc_insertion_point(destructor:injective.peggy.v1.QueryValsetConfirmRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryValsetConfirmRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.address_.Destroy();
}

void QueryValsetConfirmRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryValsetConfirmRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.peggy.v1.QueryValsetConfirmRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.address_.ClearToEmpty();
  _impl_.nonce_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryValsetConfirmRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 nonce = 1 [json_name = "nonce"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.nonce_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string address = 2 [json_name = "address"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.QueryValsetConfirmRequest.address"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryValsetConfirmRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.peggy.v1.QueryValsetConfirmRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 nonce = 1 [json_name = "nonce"];
  if (this->_internal_nonce() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_nonce(), target);
  }

  // string address = 2 [json_name = "address"];
  if (!this->_internal_address().empty()) {
    const std::string& _s = this->_internal_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.QueryValsetConfirmRequest.address");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.peggy.v1.QueryValsetConfirmRequest)
  return target;
}

::size_t QueryValsetConfirmRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.peggy.v1.QueryValsetConfirmRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string address = 2 [json_name = "address"];
  if (!this->_internal_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_address());
  }

  // uint64 nonce = 1 [json_name = "nonce"];
  if (this->_internal_nonce() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_nonce());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryValsetConfirmRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryValsetConfirmRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryValsetConfirmRequest::GetClassData() const { return &_class_data_; }


void QueryValsetConfirmRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryValsetConfirmRequest*>(&to_msg);
  auto& from = static_cast<const QueryValsetConfirmRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.peggy.v1.QueryValsetConfirmRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_address().empty()) {
    _this->_internal_set_address(from._internal_address());
  }
  if (from._internal_nonce() != 0) {
    _this->_internal_set_nonce(from._internal_nonce());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryValsetConfirmRequest::CopyFrom(const QueryValsetConfirmRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.peggy.v1.QueryValsetConfirmRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryValsetConfirmRequest::IsInitialized() const {
  return true;
}

void QueryValsetConfirmRequest::InternalSwap(QueryValsetConfirmRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.address_, lhs_arena,
                                       &other->_impl_.address_, rhs_arena);

  swap(_impl_.nonce_, other->_impl_.nonce_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryValsetConfirmRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fquery_2eproto[6]);
}
// ===================================================================

class QueryValsetConfirmResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryValsetConfirmResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryValsetConfirmResponse, _impl_._has_bits_);
  static const ::injective::peggy::v1::MsgValsetConfirm& confirm(const QueryValsetConfirmResponse* msg);
  static void set_has_confirm(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::injective::peggy::v1::MsgValsetConfirm&
QueryValsetConfirmResponse::_Internal::confirm(const QueryValsetConfirmResponse* msg) {
  return *msg->_impl_.confirm_;
}
void QueryValsetConfirmResponse::clear_confirm() {
  if (_impl_.confirm_ != nullptr) _impl_.confirm_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryValsetConfirmResponse::QueryValsetConfirmResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.QueryValsetConfirmResponse)
}
QueryValsetConfirmResponse::QueryValsetConfirmResponse(const QueryValsetConfirmResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryValsetConfirmResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.confirm_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.confirm_ = new ::injective::peggy::v1::MsgValsetConfirm(*from._impl_.confirm_);
  }
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.QueryValsetConfirmResponse)
}

inline void QueryValsetConfirmResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.confirm_){nullptr}
  };
}

QueryValsetConfirmResponse::~QueryValsetConfirmResponse() {
  // @@protoc_insertion_point(destructor:injective.peggy.v1.QueryValsetConfirmResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryValsetConfirmResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.confirm_;
}

void QueryValsetConfirmResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryValsetConfirmResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.peggy.v1.QueryValsetConfirmResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.confirm_ != nullptr);
    _impl_.confirm_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryValsetConfirmResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .injective.peggy.v1.MsgValsetConfirm confirm = 1 [json_name = "confirm"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_confirm(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryValsetConfirmResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.peggy.v1.QueryValsetConfirmResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .injective.peggy.v1.MsgValsetConfirm confirm = 1 [json_name = "confirm"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::confirm(this),
        _Internal::confirm(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.peggy.v1.QueryValsetConfirmResponse)
  return target;
}

::size_t QueryValsetConfirmResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.peggy.v1.QueryValsetConfirmResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .injective.peggy.v1.MsgValsetConfirm confirm = 1 [json_name = "confirm"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.confirm_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryValsetConfirmResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryValsetConfirmResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryValsetConfirmResponse::GetClassData() const { return &_class_data_; }


void QueryValsetConfirmResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryValsetConfirmResponse*>(&to_msg);
  auto& from = static_cast<const QueryValsetConfirmResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.peggy.v1.QueryValsetConfirmResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_confirm()->::injective::peggy::v1::MsgValsetConfirm::MergeFrom(
        from._internal_confirm());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryValsetConfirmResponse::CopyFrom(const QueryValsetConfirmResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.peggy.v1.QueryValsetConfirmResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryValsetConfirmResponse::IsInitialized() const {
  return true;
}

void QueryValsetConfirmResponse::InternalSwap(QueryValsetConfirmResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.confirm_, other->_impl_.confirm_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryValsetConfirmResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fquery_2eproto[7]);
}
// ===================================================================

class QueryValsetConfirmsByNonceRequest::_Internal {
 public:
};

QueryValsetConfirmsByNonceRequest::QueryValsetConfirmsByNonceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.QueryValsetConfirmsByNonceRequest)
}
QueryValsetConfirmsByNonceRequest::QueryValsetConfirmsByNonceRequest(const QueryValsetConfirmsByNonceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.QueryValsetConfirmsByNonceRequest)
}

inline void QueryValsetConfirmsByNonceRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.nonce_) { ::uint64_t{0u} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

QueryValsetConfirmsByNonceRequest::~QueryValsetConfirmsByNonceRequest() {
  // @@protoc_insertion_point(destructor:injective.peggy.v1.QueryValsetConfirmsByNonceRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryValsetConfirmsByNonceRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}

void QueryValsetConfirmsByNonceRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryValsetConfirmsByNonceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.peggy.v1.QueryValsetConfirmsByNonceRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.nonce_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryValsetConfirmsByNonceRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 nonce = 1 [json_name = "nonce"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.nonce_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryValsetConfirmsByNonceRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.peggy.v1.QueryValsetConfirmsByNonceRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 nonce = 1 [json_name = "nonce"];
  if (this->_internal_nonce() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_nonce(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.peggy.v1.QueryValsetConfirmsByNonceRequest)
  return target;
}

::size_t QueryValsetConfirmsByNonceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.peggy.v1.QueryValsetConfirmsByNonceRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 nonce = 1 [json_name = "nonce"];
  if (this->_internal_nonce() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_nonce());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryValsetConfirmsByNonceRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryValsetConfirmsByNonceRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryValsetConfirmsByNonceRequest::GetClassData() const { return &_class_data_; }


void QueryValsetConfirmsByNonceRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryValsetConfirmsByNonceRequest*>(&to_msg);
  auto& from = static_cast<const QueryValsetConfirmsByNonceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.peggy.v1.QueryValsetConfirmsByNonceRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_nonce() != 0) {
    _this->_internal_set_nonce(from._internal_nonce());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryValsetConfirmsByNonceRequest::CopyFrom(const QueryValsetConfirmsByNonceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.peggy.v1.QueryValsetConfirmsByNonceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryValsetConfirmsByNonceRequest::IsInitialized() const {
  return true;
}

void QueryValsetConfirmsByNonceRequest::InternalSwap(QueryValsetConfirmsByNonceRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);

  swap(_impl_.nonce_, other->_impl_.nonce_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryValsetConfirmsByNonceRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fquery_2eproto[8]);
}
// ===================================================================

class QueryValsetConfirmsByNonceResponse::_Internal {
 public:
};

void QueryValsetConfirmsByNonceResponse::clear_confirms() {
  _internal_mutable_confirms()->Clear();
}
QueryValsetConfirmsByNonceResponse::QueryValsetConfirmsByNonceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.QueryValsetConfirmsByNonceResponse)
}
QueryValsetConfirmsByNonceResponse::QueryValsetConfirmsByNonceResponse(const QueryValsetConfirmsByNonceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryValsetConfirmsByNonceResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.confirms_){from._impl_.confirms_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.QueryValsetConfirmsByNonceResponse)
}

inline void QueryValsetConfirmsByNonceResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.confirms_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

QueryValsetConfirmsByNonceResponse::~QueryValsetConfirmsByNonceResponse() {
  // @@protoc_insertion_point(destructor:injective.peggy.v1.QueryValsetConfirmsByNonceResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryValsetConfirmsByNonceResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_confirms()->~RepeatedPtrField();
}

void QueryValsetConfirmsByNonceResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryValsetConfirmsByNonceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.peggy.v1.QueryValsetConfirmsByNonceResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_confirms()->Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryValsetConfirmsByNonceResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .injective.peggy.v1.MsgValsetConfirm confirms = 1 [json_name = "confirms"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_confirms(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryValsetConfirmsByNonceResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.peggy.v1.QueryValsetConfirmsByNonceResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .injective.peggy.v1.MsgValsetConfirm confirms = 1 [json_name = "confirms"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_confirms_size()); i < n; i++) {
    const auto& repfield = this->_internal_confirms(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.peggy.v1.QueryValsetConfirmsByNonceResponse)
  return target;
}

::size_t QueryValsetConfirmsByNonceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.peggy.v1.QueryValsetConfirmsByNonceResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .injective.peggy.v1.MsgValsetConfirm confirms = 1 [json_name = "confirms"];
  total_size += 1UL * this->_internal_confirms_size();
  for (const auto& msg : this->_internal_confirms()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryValsetConfirmsByNonceResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryValsetConfirmsByNonceResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryValsetConfirmsByNonceResponse::GetClassData() const { return &_class_data_; }


void QueryValsetConfirmsByNonceResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryValsetConfirmsByNonceResponse*>(&to_msg);
  auto& from = static_cast<const QueryValsetConfirmsByNonceResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.peggy.v1.QueryValsetConfirmsByNonceResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_confirms()->MergeFrom(from._internal_confirms());
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryValsetConfirmsByNonceResponse::CopyFrom(const QueryValsetConfirmsByNonceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.peggy.v1.QueryValsetConfirmsByNonceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryValsetConfirmsByNonceResponse::IsInitialized() const {
  return true;
}

void QueryValsetConfirmsByNonceResponse::InternalSwap(QueryValsetConfirmsByNonceResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_confirms()->InternalSwap(other->_internal_mutable_confirms());
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryValsetConfirmsByNonceResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fquery_2eproto[9]);
}
// ===================================================================

class QueryLastValsetRequestsRequest::_Internal {
 public:
};

QueryLastValsetRequestsRequest::QueryLastValsetRequestsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.QueryLastValsetRequestsRequest)
}
QueryLastValsetRequestsRequest::QueryLastValsetRequestsRequest(const QueryLastValsetRequestsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  QueryLastValsetRequestsRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.QueryLastValsetRequestsRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryLastValsetRequestsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryLastValsetRequestsRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata QueryLastValsetRequestsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fquery_2eproto[10]);
}
// ===================================================================

class QueryLastValsetRequestsResponse::_Internal {
 public:
};

void QueryLastValsetRequestsResponse::clear_valsets() {
  _internal_mutable_valsets()->Clear();
}
QueryLastValsetRequestsResponse::QueryLastValsetRequestsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.QueryLastValsetRequestsResponse)
}
QueryLastValsetRequestsResponse::QueryLastValsetRequestsResponse(const QueryLastValsetRequestsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryLastValsetRequestsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.valsets_){from._impl_.valsets_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.QueryLastValsetRequestsResponse)
}

inline void QueryLastValsetRequestsResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.valsets_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

QueryLastValsetRequestsResponse::~QueryLastValsetRequestsResponse() {
  // @@protoc_insertion_point(destructor:injective.peggy.v1.QueryLastValsetRequestsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryLastValsetRequestsResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_valsets()->~RepeatedPtrField();
}

void QueryLastValsetRequestsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryLastValsetRequestsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.peggy.v1.QueryLastValsetRequestsResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_valsets()->Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryLastValsetRequestsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .injective.peggy.v1.Valset valsets = 1 [json_name = "valsets"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_valsets(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryLastValsetRequestsResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.peggy.v1.QueryLastValsetRequestsResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .injective.peggy.v1.Valset valsets = 1 [json_name = "valsets"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_valsets_size()); i < n; i++) {
    const auto& repfield = this->_internal_valsets(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.peggy.v1.QueryLastValsetRequestsResponse)
  return target;
}

::size_t QueryLastValsetRequestsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.peggy.v1.QueryLastValsetRequestsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .injective.peggy.v1.Valset valsets = 1 [json_name = "valsets"];
  total_size += 1UL * this->_internal_valsets_size();
  for (const auto& msg : this->_internal_valsets()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryLastValsetRequestsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryLastValsetRequestsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryLastValsetRequestsResponse::GetClassData() const { return &_class_data_; }


void QueryLastValsetRequestsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryLastValsetRequestsResponse*>(&to_msg);
  auto& from = static_cast<const QueryLastValsetRequestsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.peggy.v1.QueryLastValsetRequestsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_valsets()->MergeFrom(from._internal_valsets());
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryLastValsetRequestsResponse::CopyFrom(const QueryLastValsetRequestsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.peggy.v1.QueryLastValsetRequestsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryLastValsetRequestsResponse::IsInitialized() const {
  return true;
}

void QueryLastValsetRequestsResponse::InternalSwap(QueryLastValsetRequestsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_valsets()->InternalSwap(other->_internal_mutable_valsets());
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryLastValsetRequestsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fquery_2eproto[11]);
}
// ===================================================================

class QueryLastPendingValsetRequestByAddrRequest::_Internal {
 public:
};

QueryLastPendingValsetRequestByAddrRequest::QueryLastPendingValsetRequestByAddrRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.QueryLastPendingValsetRequestByAddrRequest)
}
QueryLastPendingValsetRequestByAddrRequest::QueryLastPendingValsetRequestByAddrRequest(const QueryLastPendingValsetRequestByAddrRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryLastPendingValsetRequestByAddrRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.address_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_address().empty()) {
    _this->_impl_.address_.Set(from._internal_address(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.QueryLastPendingValsetRequestByAddrRequest)
}

inline void QueryLastPendingValsetRequestByAddrRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.address_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryLastPendingValsetRequestByAddrRequest::~QueryLastPendingValsetRequestByAddrRequest() {
  // @@protoc_insertion_point(destructor:injective.peggy.v1.QueryLastPendingValsetRequestByAddrRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryLastPendingValsetRequestByAddrRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.address_.Destroy();
}

void QueryLastPendingValsetRequestByAddrRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryLastPendingValsetRequestByAddrRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.peggy.v1.QueryLastPendingValsetRequestByAddrRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.address_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryLastPendingValsetRequestByAddrRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string address = 1 [json_name = "address"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.QueryLastPendingValsetRequestByAddrRequest.address"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryLastPendingValsetRequestByAddrRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.peggy.v1.QueryLastPendingValsetRequestByAddrRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1 [json_name = "address"];
  if (!this->_internal_address().empty()) {
    const std::string& _s = this->_internal_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.QueryLastPendingValsetRequestByAddrRequest.address");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.peggy.v1.QueryLastPendingValsetRequestByAddrRequest)
  return target;
}

::size_t QueryLastPendingValsetRequestByAddrRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.peggy.v1.QueryLastPendingValsetRequestByAddrRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string address = 1 [json_name = "address"];
  if (!this->_internal_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryLastPendingValsetRequestByAddrRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryLastPendingValsetRequestByAddrRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryLastPendingValsetRequestByAddrRequest::GetClassData() const { return &_class_data_; }


void QueryLastPendingValsetRequestByAddrRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryLastPendingValsetRequestByAddrRequest*>(&to_msg);
  auto& from = static_cast<const QueryLastPendingValsetRequestByAddrRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.peggy.v1.QueryLastPendingValsetRequestByAddrRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_address().empty()) {
    _this->_internal_set_address(from._internal_address());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryLastPendingValsetRequestByAddrRequest::CopyFrom(const QueryLastPendingValsetRequestByAddrRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.peggy.v1.QueryLastPendingValsetRequestByAddrRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryLastPendingValsetRequestByAddrRequest::IsInitialized() const {
  return true;
}

void QueryLastPendingValsetRequestByAddrRequest::InternalSwap(QueryLastPendingValsetRequestByAddrRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.address_, lhs_arena,
                                       &other->_impl_.address_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryLastPendingValsetRequestByAddrRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fquery_2eproto[12]);
}
// ===================================================================

class QueryLastPendingValsetRequestByAddrResponse::_Internal {
 public:
};

void QueryLastPendingValsetRequestByAddrResponse::clear_valsets() {
  _internal_mutable_valsets()->Clear();
}
QueryLastPendingValsetRequestByAddrResponse::QueryLastPendingValsetRequestByAddrResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.QueryLastPendingValsetRequestByAddrResponse)
}
QueryLastPendingValsetRequestByAddrResponse::QueryLastPendingValsetRequestByAddrResponse(const QueryLastPendingValsetRequestByAddrResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryLastPendingValsetRequestByAddrResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.valsets_){from._impl_.valsets_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.QueryLastPendingValsetRequestByAddrResponse)
}

inline void QueryLastPendingValsetRequestByAddrResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.valsets_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

QueryLastPendingValsetRequestByAddrResponse::~QueryLastPendingValsetRequestByAddrResponse() {
  // @@protoc_insertion_point(destructor:injective.peggy.v1.QueryLastPendingValsetRequestByAddrResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryLastPendingValsetRequestByAddrResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_valsets()->~RepeatedPtrField();
}

void QueryLastPendingValsetRequestByAddrResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryLastPendingValsetRequestByAddrResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.peggy.v1.QueryLastPendingValsetRequestByAddrResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_valsets()->Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryLastPendingValsetRequestByAddrResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .injective.peggy.v1.Valset valsets = 1 [json_name = "valsets"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_valsets(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryLastPendingValsetRequestByAddrResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.peggy.v1.QueryLastPendingValsetRequestByAddrResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .injective.peggy.v1.Valset valsets = 1 [json_name = "valsets"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_valsets_size()); i < n; i++) {
    const auto& repfield = this->_internal_valsets(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.peggy.v1.QueryLastPendingValsetRequestByAddrResponse)
  return target;
}

::size_t QueryLastPendingValsetRequestByAddrResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.peggy.v1.QueryLastPendingValsetRequestByAddrResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .injective.peggy.v1.Valset valsets = 1 [json_name = "valsets"];
  total_size += 1UL * this->_internal_valsets_size();
  for (const auto& msg : this->_internal_valsets()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryLastPendingValsetRequestByAddrResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryLastPendingValsetRequestByAddrResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryLastPendingValsetRequestByAddrResponse::GetClassData() const { return &_class_data_; }


void QueryLastPendingValsetRequestByAddrResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryLastPendingValsetRequestByAddrResponse*>(&to_msg);
  auto& from = static_cast<const QueryLastPendingValsetRequestByAddrResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.peggy.v1.QueryLastPendingValsetRequestByAddrResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_valsets()->MergeFrom(from._internal_valsets());
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryLastPendingValsetRequestByAddrResponse::CopyFrom(const QueryLastPendingValsetRequestByAddrResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.peggy.v1.QueryLastPendingValsetRequestByAddrResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryLastPendingValsetRequestByAddrResponse::IsInitialized() const {
  return true;
}

void QueryLastPendingValsetRequestByAddrResponse::InternalSwap(QueryLastPendingValsetRequestByAddrResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_valsets()->InternalSwap(other->_internal_mutable_valsets());
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryLastPendingValsetRequestByAddrResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fquery_2eproto[13]);
}
// ===================================================================

class QueryBatchFeeRequest::_Internal {
 public:
};

QueryBatchFeeRequest::QueryBatchFeeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.QueryBatchFeeRequest)
}
QueryBatchFeeRequest::QueryBatchFeeRequest(const QueryBatchFeeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  QueryBatchFeeRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.QueryBatchFeeRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryBatchFeeRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryBatchFeeRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata QueryBatchFeeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fquery_2eproto[14]);
}
// ===================================================================

class QueryBatchFeeResponse::_Internal {
 public:
};

void QueryBatchFeeResponse::clear_batchfees() {
  _internal_mutable_batchfees()->Clear();
}
QueryBatchFeeResponse::QueryBatchFeeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.QueryBatchFeeResponse)
}
QueryBatchFeeResponse::QueryBatchFeeResponse(const QueryBatchFeeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryBatchFeeResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.batchfees_){from._impl_.batchfees_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.QueryBatchFeeResponse)
}

inline void QueryBatchFeeResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.batchfees_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

QueryBatchFeeResponse::~QueryBatchFeeResponse() {
  // @@protoc_insertion_point(destructor:injective.peggy.v1.QueryBatchFeeResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryBatchFeeResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_batchfees()->~RepeatedPtrField();
}

void QueryBatchFeeResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryBatchFeeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.peggy.v1.QueryBatchFeeResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_batchfees()->Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryBatchFeeResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .injective.peggy.v1.BatchFees batchFees = 1 [json_name = "batchFees"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_batchfees(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryBatchFeeResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.peggy.v1.QueryBatchFeeResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .injective.peggy.v1.BatchFees batchFees = 1 [json_name = "batchFees"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_batchfees_size()); i < n; i++) {
    const auto& repfield = this->_internal_batchfees(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.peggy.v1.QueryBatchFeeResponse)
  return target;
}

::size_t QueryBatchFeeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.peggy.v1.QueryBatchFeeResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .injective.peggy.v1.BatchFees batchFees = 1 [json_name = "batchFees"];
  total_size += 1UL * this->_internal_batchfees_size();
  for (const auto& msg : this->_internal_batchfees()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryBatchFeeResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryBatchFeeResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryBatchFeeResponse::GetClassData() const { return &_class_data_; }


void QueryBatchFeeResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryBatchFeeResponse*>(&to_msg);
  auto& from = static_cast<const QueryBatchFeeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.peggy.v1.QueryBatchFeeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_batchfees()->MergeFrom(from._internal_batchfees());
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryBatchFeeResponse::CopyFrom(const QueryBatchFeeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.peggy.v1.QueryBatchFeeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryBatchFeeResponse::IsInitialized() const {
  return true;
}

void QueryBatchFeeResponse::InternalSwap(QueryBatchFeeResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_batchfees()->InternalSwap(other->_internal_mutable_batchfees());
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryBatchFeeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fquery_2eproto[15]);
}
// ===================================================================

class QueryLastPendingBatchRequestByAddrRequest::_Internal {
 public:
};

QueryLastPendingBatchRequestByAddrRequest::QueryLastPendingBatchRequestByAddrRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.QueryLastPendingBatchRequestByAddrRequest)
}
QueryLastPendingBatchRequestByAddrRequest::QueryLastPendingBatchRequestByAddrRequest(const QueryLastPendingBatchRequestByAddrRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryLastPendingBatchRequestByAddrRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.address_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_address().empty()) {
    _this->_impl_.address_.Set(from._internal_address(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.QueryLastPendingBatchRequestByAddrRequest)
}

inline void QueryLastPendingBatchRequestByAddrRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.address_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryLastPendingBatchRequestByAddrRequest::~QueryLastPendingBatchRequestByAddrRequest() {
  // @@protoc_insertion_point(destructor:injective.peggy.v1.QueryLastPendingBatchRequestByAddrRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryLastPendingBatchRequestByAddrRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.address_.Destroy();
}

void QueryLastPendingBatchRequestByAddrRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryLastPendingBatchRequestByAddrRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.peggy.v1.QueryLastPendingBatchRequestByAddrRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.address_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryLastPendingBatchRequestByAddrRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string address = 1 [json_name = "address"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.QueryLastPendingBatchRequestByAddrRequest.address"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryLastPendingBatchRequestByAddrRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.peggy.v1.QueryLastPendingBatchRequestByAddrRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1 [json_name = "address"];
  if (!this->_internal_address().empty()) {
    const std::string& _s = this->_internal_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.QueryLastPendingBatchRequestByAddrRequest.address");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.peggy.v1.QueryLastPendingBatchRequestByAddrRequest)
  return target;
}

::size_t QueryLastPendingBatchRequestByAddrRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.peggy.v1.QueryLastPendingBatchRequestByAddrRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string address = 1 [json_name = "address"];
  if (!this->_internal_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryLastPendingBatchRequestByAddrRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryLastPendingBatchRequestByAddrRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryLastPendingBatchRequestByAddrRequest::GetClassData() const { return &_class_data_; }


void QueryLastPendingBatchRequestByAddrRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryLastPendingBatchRequestByAddrRequest*>(&to_msg);
  auto& from = static_cast<const QueryLastPendingBatchRequestByAddrRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.peggy.v1.QueryLastPendingBatchRequestByAddrRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_address().empty()) {
    _this->_internal_set_address(from._internal_address());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryLastPendingBatchRequestByAddrRequest::CopyFrom(const QueryLastPendingBatchRequestByAddrRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.peggy.v1.QueryLastPendingBatchRequestByAddrRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryLastPendingBatchRequestByAddrRequest::IsInitialized() const {
  return true;
}

void QueryLastPendingBatchRequestByAddrRequest::InternalSwap(QueryLastPendingBatchRequestByAddrRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.address_, lhs_arena,
                                       &other->_impl_.address_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryLastPendingBatchRequestByAddrRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fquery_2eproto[16]);
}
// ===================================================================

class QueryLastPendingBatchRequestByAddrResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryLastPendingBatchRequestByAddrResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryLastPendingBatchRequestByAddrResponse, _impl_._has_bits_);
  static const ::injective::peggy::v1::OutgoingTxBatch& batch(const QueryLastPendingBatchRequestByAddrResponse* msg);
  static void set_has_batch(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::injective::peggy::v1::OutgoingTxBatch&
QueryLastPendingBatchRequestByAddrResponse::_Internal::batch(const QueryLastPendingBatchRequestByAddrResponse* msg) {
  return *msg->_impl_.batch_;
}
void QueryLastPendingBatchRequestByAddrResponse::clear_batch() {
  if (_impl_.batch_ != nullptr) _impl_.batch_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryLastPendingBatchRequestByAddrResponse::QueryLastPendingBatchRequestByAddrResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.QueryLastPendingBatchRequestByAddrResponse)
}
QueryLastPendingBatchRequestByAddrResponse::QueryLastPendingBatchRequestByAddrResponse(const QueryLastPendingBatchRequestByAddrResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryLastPendingBatchRequestByAddrResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.batch_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.batch_ = new ::injective::peggy::v1::OutgoingTxBatch(*from._impl_.batch_);
  }
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.QueryLastPendingBatchRequestByAddrResponse)
}

inline void QueryLastPendingBatchRequestByAddrResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.batch_){nullptr}
  };
}

QueryLastPendingBatchRequestByAddrResponse::~QueryLastPendingBatchRequestByAddrResponse() {
  // @@protoc_insertion_point(destructor:injective.peggy.v1.QueryLastPendingBatchRequestByAddrResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryLastPendingBatchRequestByAddrResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.batch_;
}

void QueryLastPendingBatchRequestByAddrResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryLastPendingBatchRequestByAddrResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.peggy.v1.QueryLastPendingBatchRequestByAddrResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.batch_ != nullptr);
    _impl_.batch_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryLastPendingBatchRequestByAddrResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .injective.peggy.v1.OutgoingTxBatch batch = 1 [json_name = "batch"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_batch(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryLastPendingBatchRequestByAddrResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.peggy.v1.QueryLastPendingBatchRequestByAddrResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .injective.peggy.v1.OutgoingTxBatch batch = 1 [json_name = "batch"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::batch(this),
        _Internal::batch(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.peggy.v1.QueryLastPendingBatchRequestByAddrResponse)
  return target;
}

::size_t QueryLastPendingBatchRequestByAddrResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.peggy.v1.QueryLastPendingBatchRequestByAddrResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .injective.peggy.v1.OutgoingTxBatch batch = 1 [json_name = "batch"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.batch_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryLastPendingBatchRequestByAddrResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryLastPendingBatchRequestByAddrResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryLastPendingBatchRequestByAddrResponse::GetClassData() const { return &_class_data_; }


void QueryLastPendingBatchRequestByAddrResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryLastPendingBatchRequestByAddrResponse*>(&to_msg);
  auto& from = static_cast<const QueryLastPendingBatchRequestByAddrResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.peggy.v1.QueryLastPendingBatchRequestByAddrResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_batch()->::injective::peggy::v1::OutgoingTxBatch::MergeFrom(
        from._internal_batch());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryLastPendingBatchRequestByAddrResponse::CopyFrom(const QueryLastPendingBatchRequestByAddrResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.peggy.v1.QueryLastPendingBatchRequestByAddrResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryLastPendingBatchRequestByAddrResponse::IsInitialized() const {
  return true;
}

void QueryLastPendingBatchRequestByAddrResponse::InternalSwap(QueryLastPendingBatchRequestByAddrResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.batch_, other->_impl_.batch_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryLastPendingBatchRequestByAddrResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fquery_2eproto[17]);
}
// ===================================================================

class QueryOutgoingTxBatchesRequest::_Internal {
 public:
};

QueryOutgoingTxBatchesRequest::QueryOutgoingTxBatchesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.QueryOutgoingTxBatchesRequest)
}
QueryOutgoingTxBatchesRequest::QueryOutgoingTxBatchesRequest(const QueryOutgoingTxBatchesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  QueryOutgoingTxBatchesRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.QueryOutgoingTxBatchesRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryOutgoingTxBatchesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryOutgoingTxBatchesRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata QueryOutgoingTxBatchesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fquery_2eproto[18]);
}
// ===================================================================

class QueryOutgoingTxBatchesResponse::_Internal {
 public:
};

void QueryOutgoingTxBatchesResponse::clear_batches() {
  _internal_mutable_batches()->Clear();
}
QueryOutgoingTxBatchesResponse::QueryOutgoingTxBatchesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.QueryOutgoingTxBatchesResponse)
}
QueryOutgoingTxBatchesResponse::QueryOutgoingTxBatchesResponse(const QueryOutgoingTxBatchesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryOutgoingTxBatchesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.batches_){from._impl_.batches_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.QueryOutgoingTxBatchesResponse)
}

inline void QueryOutgoingTxBatchesResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.batches_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

QueryOutgoingTxBatchesResponse::~QueryOutgoingTxBatchesResponse() {
  // @@protoc_insertion_point(destructor:injective.peggy.v1.QueryOutgoingTxBatchesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryOutgoingTxBatchesResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_batches()->~RepeatedPtrField();
}

void QueryOutgoingTxBatchesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryOutgoingTxBatchesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.peggy.v1.QueryOutgoingTxBatchesResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_batches()->Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryOutgoingTxBatchesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .injective.peggy.v1.OutgoingTxBatch batches = 1 [json_name = "batches"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_batches(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryOutgoingTxBatchesResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.peggy.v1.QueryOutgoingTxBatchesResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .injective.peggy.v1.OutgoingTxBatch batches = 1 [json_name = "batches"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_batches_size()); i < n; i++) {
    const auto& repfield = this->_internal_batches(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.peggy.v1.QueryOutgoingTxBatchesResponse)
  return target;
}

::size_t QueryOutgoingTxBatchesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.peggy.v1.QueryOutgoingTxBatchesResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .injective.peggy.v1.OutgoingTxBatch batches = 1 [json_name = "batches"];
  total_size += 1UL * this->_internal_batches_size();
  for (const auto& msg : this->_internal_batches()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryOutgoingTxBatchesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryOutgoingTxBatchesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryOutgoingTxBatchesResponse::GetClassData() const { return &_class_data_; }


void QueryOutgoingTxBatchesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryOutgoingTxBatchesResponse*>(&to_msg);
  auto& from = static_cast<const QueryOutgoingTxBatchesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.peggy.v1.QueryOutgoingTxBatchesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_batches()->MergeFrom(from._internal_batches());
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryOutgoingTxBatchesResponse::CopyFrom(const QueryOutgoingTxBatchesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.peggy.v1.QueryOutgoingTxBatchesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryOutgoingTxBatchesResponse::IsInitialized() const {
  return true;
}

void QueryOutgoingTxBatchesResponse::InternalSwap(QueryOutgoingTxBatchesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_batches()->InternalSwap(other->_internal_mutable_batches());
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryOutgoingTxBatchesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fquery_2eproto[19]);
}
// ===================================================================

class QueryBatchRequestByNonceRequest::_Internal {
 public:
};

QueryBatchRequestByNonceRequest::QueryBatchRequestByNonceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.QueryBatchRequestByNonceRequest)
}
QueryBatchRequestByNonceRequest::QueryBatchRequestByNonceRequest(const QueryBatchRequestByNonceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryBatchRequestByNonceRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.contract_address_) {}

    , decltype(_impl_.nonce_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.contract_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.contract_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_contract_address().empty()) {
    _this->_impl_.contract_address_.Set(from._internal_contract_address(), _this->GetArenaForAllocation());
  }
  _this->_impl_.nonce_ = from._impl_.nonce_;
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.QueryBatchRequestByNonceRequest)
}

inline void QueryBatchRequestByNonceRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.contract_address_) {}

    , decltype(_impl_.nonce_) { ::uint64_t{0u} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.contract_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.contract_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryBatchRequestByNonceRequest::~QueryBatchRequestByNonceRequest() {
  // @@protoc_insertion_point(destructor:injective.peggy.v1.QueryBatchRequestByNonceRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryBatchRequestByNonceRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.contract_address_.Destroy();
}

void QueryBatchRequestByNonceRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryBatchRequestByNonceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.peggy.v1.QueryBatchRequestByNonceRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.contract_address_.ClearToEmpty();
  _impl_.nonce_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryBatchRequestByNonceRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 nonce = 1 [json_name = "nonce"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.nonce_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string contract_address = 2 [json_name = "contractAddress"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_contract_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.QueryBatchRequestByNonceRequest.contract_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryBatchRequestByNonceRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.peggy.v1.QueryBatchRequestByNonceRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 nonce = 1 [json_name = "nonce"];
  if (this->_internal_nonce() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_nonce(), target);
  }

  // string contract_address = 2 [json_name = "contractAddress"];
  if (!this->_internal_contract_address().empty()) {
    const std::string& _s = this->_internal_contract_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.QueryBatchRequestByNonceRequest.contract_address");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.peggy.v1.QueryBatchRequestByNonceRequest)
  return target;
}

::size_t QueryBatchRequestByNonceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.peggy.v1.QueryBatchRequestByNonceRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string contract_address = 2 [json_name = "contractAddress"];
  if (!this->_internal_contract_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_contract_address());
  }

  // uint64 nonce = 1 [json_name = "nonce"];
  if (this->_internal_nonce() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_nonce());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryBatchRequestByNonceRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryBatchRequestByNonceRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryBatchRequestByNonceRequest::GetClassData() const { return &_class_data_; }


void QueryBatchRequestByNonceRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryBatchRequestByNonceRequest*>(&to_msg);
  auto& from = static_cast<const QueryBatchRequestByNonceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.peggy.v1.QueryBatchRequestByNonceRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_contract_address().empty()) {
    _this->_internal_set_contract_address(from._internal_contract_address());
  }
  if (from._internal_nonce() != 0) {
    _this->_internal_set_nonce(from._internal_nonce());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryBatchRequestByNonceRequest::CopyFrom(const QueryBatchRequestByNonceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.peggy.v1.QueryBatchRequestByNonceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryBatchRequestByNonceRequest::IsInitialized() const {
  return true;
}

void QueryBatchRequestByNonceRequest::InternalSwap(QueryBatchRequestByNonceRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.contract_address_, lhs_arena,
                                       &other->_impl_.contract_address_, rhs_arena);

  swap(_impl_.nonce_, other->_impl_.nonce_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryBatchRequestByNonceRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fquery_2eproto[20]);
}
// ===================================================================

class QueryBatchRequestByNonceResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryBatchRequestByNonceResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryBatchRequestByNonceResponse, _impl_._has_bits_);
  static const ::injective::peggy::v1::OutgoingTxBatch& batch(const QueryBatchRequestByNonceResponse* msg);
  static void set_has_batch(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::injective::peggy::v1::OutgoingTxBatch&
QueryBatchRequestByNonceResponse::_Internal::batch(const QueryBatchRequestByNonceResponse* msg) {
  return *msg->_impl_.batch_;
}
void QueryBatchRequestByNonceResponse::clear_batch() {
  if (_impl_.batch_ != nullptr) _impl_.batch_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryBatchRequestByNonceResponse::QueryBatchRequestByNonceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.QueryBatchRequestByNonceResponse)
}
QueryBatchRequestByNonceResponse::QueryBatchRequestByNonceResponse(const QueryBatchRequestByNonceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryBatchRequestByNonceResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.batch_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.batch_ = new ::injective::peggy::v1::OutgoingTxBatch(*from._impl_.batch_);
  }
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.QueryBatchRequestByNonceResponse)
}

inline void QueryBatchRequestByNonceResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.batch_){nullptr}
  };
}

QueryBatchRequestByNonceResponse::~QueryBatchRequestByNonceResponse() {
  // @@protoc_insertion_point(destructor:injective.peggy.v1.QueryBatchRequestByNonceResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryBatchRequestByNonceResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.batch_;
}

void QueryBatchRequestByNonceResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryBatchRequestByNonceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.peggy.v1.QueryBatchRequestByNonceResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.batch_ != nullptr);
    _impl_.batch_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryBatchRequestByNonceResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .injective.peggy.v1.OutgoingTxBatch batch = 1 [json_name = "batch"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_batch(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryBatchRequestByNonceResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.peggy.v1.QueryBatchRequestByNonceResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .injective.peggy.v1.OutgoingTxBatch batch = 1 [json_name = "batch"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::batch(this),
        _Internal::batch(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.peggy.v1.QueryBatchRequestByNonceResponse)
  return target;
}

::size_t QueryBatchRequestByNonceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.peggy.v1.QueryBatchRequestByNonceResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .injective.peggy.v1.OutgoingTxBatch batch = 1 [json_name = "batch"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.batch_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryBatchRequestByNonceResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryBatchRequestByNonceResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryBatchRequestByNonceResponse::GetClassData() const { return &_class_data_; }


void QueryBatchRequestByNonceResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryBatchRequestByNonceResponse*>(&to_msg);
  auto& from = static_cast<const QueryBatchRequestByNonceResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.peggy.v1.QueryBatchRequestByNonceResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_batch()->::injective::peggy::v1::OutgoingTxBatch::MergeFrom(
        from._internal_batch());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryBatchRequestByNonceResponse::CopyFrom(const QueryBatchRequestByNonceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.peggy.v1.QueryBatchRequestByNonceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryBatchRequestByNonceResponse::IsInitialized() const {
  return true;
}

void QueryBatchRequestByNonceResponse::InternalSwap(QueryBatchRequestByNonceResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.batch_, other->_impl_.batch_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryBatchRequestByNonceResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fquery_2eproto[21]);
}
// ===================================================================

class QueryBatchConfirmsRequest::_Internal {
 public:
};

QueryBatchConfirmsRequest::QueryBatchConfirmsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.QueryBatchConfirmsRequest)
}
QueryBatchConfirmsRequest::QueryBatchConfirmsRequest(const QueryBatchConfirmsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryBatchConfirmsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.contract_address_) {}

    , decltype(_impl_.nonce_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.contract_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.contract_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_contract_address().empty()) {
    _this->_impl_.contract_address_.Set(from._internal_contract_address(), _this->GetArenaForAllocation());
  }
  _this->_impl_.nonce_ = from._impl_.nonce_;
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.QueryBatchConfirmsRequest)
}

inline void QueryBatchConfirmsRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.contract_address_) {}

    , decltype(_impl_.nonce_) { ::uint64_t{0u} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.contract_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.contract_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryBatchConfirmsRequest::~QueryBatchConfirmsRequest() {
  // @@protoc_insertion_point(destructor:injective.peggy.v1.QueryBatchConfirmsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryBatchConfirmsRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.contract_address_.Destroy();
}

void QueryBatchConfirmsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryBatchConfirmsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.peggy.v1.QueryBatchConfirmsRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.contract_address_.ClearToEmpty();
  _impl_.nonce_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryBatchConfirmsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 nonce = 1 [json_name = "nonce"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.nonce_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string contract_address = 2 [json_name = "contractAddress"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_contract_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.QueryBatchConfirmsRequest.contract_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryBatchConfirmsRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.peggy.v1.QueryBatchConfirmsRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 nonce = 1 [json_name = "nonce"];
  if (this->_internal_nonce() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_nonce(), target);
  }

  // string contract_address = 2 [json_name = "contractAddress"];
  if (!this->_internal_contract_address().empty()) {
    const std::string& _s = this->_internal_contract_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.QueryBatchConfirmsRequest.contract_address");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.peggy.v1.QueryBatchConfirmsRequest)
  return target;
}

::size_t QueryBatchConfirmsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.peggy.v1.QueryBatchConfirmsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string contract_address = 2 [json_name = "contractAddress"];
  if (!this->_internal_contract_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_contract_address());
  }

  // uint64 nonce = 1 [json_name = "nonce"];
  if (this->_internal_nonce() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_nonce());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryBatchConfirmsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryBatchConfirmsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryBatchConfirmsRequest::GetClassData() const { return &_class_data_; }


void QueryBatchConfirmsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryBatchConfirmsRequest*>(&to_msg);
  auto& from = static_cast<const QueryBatchConfirmsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.peggy.v1.QueryBatchConfirmsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_contract_address().empty()) {
    _this->_internal_set_contract_address(from._internal_contract_address());
  }
  if (from._internal_nonce() != 0) {
    _this->_internal_set_nonce(from._internal_nonce());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryBatchConfirmsRequest::CopyFrom(const QueryBatchConfirmsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.peggy.v1.QueryBatchConfirmsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryBatchConfirmsRequest::IsInitialized() const {
  return true;
}

void QueryBatchConfirmsRequest::InternalSwap(QueryBatchConfirmsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.contract_address_, lhs_arena,
                                       &other->_impl_.contract_address_, rhs_arena);

  swap(_impl_.nonce_, other->_impl_.nonce_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryBatchConfirmsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fquery_2eproto[22]);
}
// ===================================================================

class QueryBatchConfirmsResponse::_Internal {
 public:
};

void QueryBatchConfirmsResponse::clear_confirms() {
  _internal_mutable_confirms()->Clear();
}
QueryBatchConfirmsResponse::QueryBatchConfirmsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.QueryBatchConfirmsResponse)
}
QueryBatchConfirmsResponse::QueryBatchConfirmsResponse(const QueryBatchConfirmsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryBatchConfirmsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.confirms_){from._impl_.confirms_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.QueryBatchConfirmsResponse)
}

inline void QueryBatchConfirmsResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.confirms_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

QueryBatchConfirmsResponse::~QueryBatchConfirmsResponse() {
  // @@protoc_insertion_point(destructor:injective.peggy.v1.QueryBatchConfirmsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryBatchConfirmsResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_confirms()->~RepeatedPtrField();
}

void QueryBatchConfirmsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryBatchConfirmsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.peggy.v1.QueryBatchConfirmsResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_confirms()->Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryBatchConfirmsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .injective.peggy.v1.MsgConfirmBatch confirms = 1 [json_name = "confirms"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_confirms(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryBatchConfirmsResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.peggy.v1.QueryBatchConfirmsResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .injective.peggy.v1.MsgConfirmBatch confirms = 1 [json_name = "confirms"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_confirms_size()); i < n; i++) {
    const auto& repfield = this->_internal_confirms(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.peggy.v1.QueryBatchConfirmsResponse)
  return target;
}

::size_t QueryBatchConfirmsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.peggy.v1.QueryBatchConfirmsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .injective.peggy.v1.MsgConfirmBatch confirms = 1 [json_name = "confirms"];
  total_size += 1UL * this->_internal_confirms_size();
  for (const auto& msg : this->_internal_confirms()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryBatchConfirmsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryBatchConfirmsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryBatchConfirmsResponse::GetClassData() const { return &_class_data_; }


void QueryBatchConfirmsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryBatchConfirmsResponse*>(&to_msg);
  auto& from = static_cast<const QueryBatchConfirmsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.peggy.v1.QueryBatchConfirmsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_confirms()->MergeFrom(from._internal_confirms());
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryBatchConfirmsResponse::CopyFrom(const QueryBatchConfirmsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.peggy.v1.QueryBatchConfirmsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryBatchConfirmsResponse::IsInitialized() const {
  return true;
}

void QueryBatchConfirmsResponse::InternalSwap(QueryBatchConfirmsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_confirms()->InternalSwap(other->_internal_mutable_confirms());
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryBatchConfirmsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fquery_2eproto[23]);
}
// ===================================================================

class QueryLastEventByAddrRequest::_Internal {
 public:
};

QueryLastEventByAddrRequest::QueryLastEventByAddrRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.QueryLastEventByAddrRequest)
}
QueryLastEventByAddrRequest::QueryLastEventByAddrRequest(const QueryLastEventByAddrRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryLastEventByAddrRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.address_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_address().empty()) {
    _this->_impl_.address_.Set(from._internal_address(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.QueryLastEventByAddrRequest)
}

inline void QueryLastEventByAddrRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.address_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryLastEventByAddrRequest::~QueryLastEventByAddrRequest() {
  // @@protoc_insertion_point(destructor:injective.peggy.v1.QueryLastEventByAddrRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryLastEventByAddrRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.address_.Destroy();
}

void QueryLastEventByAddrRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryLastEventByAddrRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.peggy.v1.QueryLastEventByAddrRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.address_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryLastEventByAddrRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string address = 1 [json_name = "address"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.QueryLastEventByAddrRequest.address"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryLastEventByAddrRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.peggy.v1.QueryLastEventByAddrRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1 [json_name = "address"];
  if (!this->_internal_address().empty()) {
    const std::string& _s = this->_internal_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.QueryLastEventByAddrRequest.address");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.peggy.v1.QueryLastEventByAddrRequest)
  return target;
}

::size_t QueryLastEventByAddrRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.peggy.v1.QueryLastEventByAddrRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string address = 1 [json_name = "address"];
  if (!this->_internal_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryLastEventByAddrRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryLastEventByAddrRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryLastEventByAddrRequest::GetClassData() const { return &_class_data_; }


void QueryLastEventByAddrRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryLastEventByAddrRequest*>(&to_msg);
  auto& from = static_cast<const QueryLastEventByAddrRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.peggy.v1.QueryLastEventByAddrRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_address().empty()) {
    _this->_internal_set_address(from._internal_address());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryLastEventByAddrRequest::CopyFrom(const QueryLastEventByAddrRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.peggy.v1.QueryLastEventByAddrRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryLastEventByAddrRequest::IsInitialized() const {
  return true;
}

void QueryLastEventByAddrRequest::InternalSwap(QueryLastEventByAddrRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.address_, lhs_arena,
                                       &other->_impl_.address_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryLastEventByAddrRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fquery_2eproto[24]);
}
// ===================================================================

class QueryLastEventByAddrResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryLastEventByAddrResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryLastEventByAddrResponse, _impl_._has_bits_);
  static const ::injective::peggy::v1::LastClaimEvent& last_claim_event(const QueryLastEventByAddrResponse* msg);
  static void set_has_last_claim_event(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::injective::peggy::v1::LastClaimEvent&
QueryLastEventByAddrResponse::_Internal::last_claim_event(const QueryLastEventByAddrResponse* msg) {
  return *msg->_impl_.last_claim_event_;
}
void QueryLastEventByAddrResponse::clear_last_claim_event() {
  if (_impl_.last_claim_event_ != nullptr) _impl_.last_claim_event_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryLastEventByAddrResponse::QueryLastEventByAddrResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.QueryLastEventByAddrResponse)
}
QueryLastEventByAddrResponse::QueryLastEventByAddrResponse(const QueryLastEventByAddrResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryLastEventByAddrResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.last_claim_event_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.last_claim_event_ = new ::injective::peggy::v1::LastClaimEvent(*from._impl_.last_claim_event_);
  }
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.QueryLastEventByAddrResponse)
}

inline void QueryLastEventByAddrResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.last_claim_event_){nullptr}
  };
}

QueryLastEventByAddrResponse::~QueryLastEventByAddrResponse() {
  // @@protoc_insertion_point(destructor:injective.peggy.v1.QueryLastEventByAddrResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryLastEventByAddrResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.last_claim_event_;
}

void QueryLastEventByAddrResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryLastEventByAddrResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.peggy.v1.QueryLastEventByAddrResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.last_claim_event_ != nullptr);
    _impl_.last_claim_event_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryLastEventByAddrResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .injective.peggy.v1.LastClaimEvent last_claim_event = 1 [json_name = "lastClaimEvent"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_last_claim_event(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryLastEventByAddrResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.peggy.v1.QueryLastEventByAddrResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .injective.peggy.v1.LastClaimEvent last_claim_event = 1 [json_name = "lastClaimEvent"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::last_claim_event(this),
        _Internal::last_claim_event(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.peggy.v1.QueryLastEventByAddrResponse)
  return target;
}

::size_t QueryLastEventByAddrResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.peggy.v1.QueryLastEventByAddrResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .injective.peggy.v1.LastClaimEvent last_claim_event = 1 [json_name = "lastClaimEvent"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.last_claim_event_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryLastEventByAddrResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryLastEventByAddrResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryLastEventByAddrResponse::GetClassData() const { return &_class_data_; }


void QueryLastEventByAddrResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryLastEventByAddrResponse*>(&to_msg);
  auto& from = static_cast<const QueryLastEventByAddrResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.peggy.v1.QueryLastEventByAddrResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_last_claim_event()->::injective::peggy::v1::LastClaimEvent::MergeFrom(
        from._internal_last_claim_event());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryLastEventByAddrResponse::CopyFrom(const QueryLastEventByAddrResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.peggy.v1.QueryLastEventByAddrResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryLastEventByAddrResponse::IsInitialized() const {
  return true;
}

void QueryLastEventByAddrResponse::InternalSwap(QueryLastEventByAddrResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.last_claim_event_, other->_impl_.last_claim_event_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryLastEventByAddrResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fquery_2eproto[25]);
}
// ===================================================================

class QueryERC20ToDenomRequest::_Internal {
 public:
};

QueryERC20ToDenomRequest::QueryERC20ToDenomRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.QueryERC20ToDenomRequest)
}
QueryERC20ToDenomRequest::QueryERC20ToDenomRequest(const QueryERC20ToDenomRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryERC20ToDenomRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.erc20_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.erc20_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.erc20_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_erc20().empty()) {
    _this->_impl_.erc20_.Set(from._internal_erc20(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.QueryERC20ToDenomRequest)
}

inline void QueryERC20ToDenomRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.erc20_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.erc20_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.erc20_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryERC20ToDenomRequest::~QueryERC20ToDenomRequest() {
  // @@protoc_insertion_point(destructor:injective.peggy.v1.QueryERC20ToDenomRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryERC20ToDenomRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.erc20_.Destroy();
}

void QueryERC20ToDenomRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryERC20ToDenomRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.peggy.v1.QueryERC20ToDenomRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.erc20_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryERC20ToDenomRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string erc20 = 1 [json_name = "erc20"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_erc20();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.QueryERC20ToDenomRequest.erc20"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryERC20ToDenomRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.peggy.v1.QueryERC20ToDenomRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string erc20 = 1 [json_name = "erc20"];
  if (!this->_internal_erc20().empty()) {
    const std::string& _s = this->_internal_erc20();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.QueryERC20ToDenomRequest.erc20");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.peggy.v1.QueryERC20ToDenomRequest)
  return target;
}

::size_t QueryERC20ToDenomRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.peggy.v1.QueryERC20ToDenomRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string erc20 = 1 [json_name = "erc20"];
  if (!this->_internal_erc20().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_erc20());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryERC20ToDenomRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryERC20ToDenomRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryERC20ToDenomRequest::GetClassData() const { return &_class_data_; }


void QueryERC20ToDenomRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryERC20ToDenomRequest*>(&to_msg);
  auto& from = static_cast<const QueryERC20ToDenomRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.peggy.v1.QueryERC20ToDenomRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_erc20().empty()) {
    _this->_internal_set_erc20(from._internal_erc20());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryERC20ToDenomRequest::CopyFrom(const QueryERC20ToDenomRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.peggy.v1.QueryERC20ToDenomRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryERC20ToDenomRequest::IsInitialized() const {
  return true;
}

void QueryERC20ToDenomRequest::InternalSwap(QueryERC20ToDenomRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.erc20_, lhs_arena,
                                       &other->_impl_.erc20_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryERC20ToDenomRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fquery_2eproto[26]);
}
// ===================================================================

class QueryERC20ToDenomResponse::_Internal {
 public:
};

QueryERC20ToDenomResponse::QueryERC20ToDenomResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.QueryERC20ToDenomResponse)
}
QueryERC20ToDenomResponse::QueryERC20ToDenomResponse(const QueryERC20ToDenomResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryERC20ToDenomResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.denom_) {}

    , decltype(_impl_.cosmos_originated_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.denom_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.denom_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_denom().empty()) {
    _this->_impl_.denom_.Set(from._internal_denom(), _this->GetArenaForAllocation());
  }
  _this->_impl_.cosmos_originated_ = from._impl_.cosmos_originated_;
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.QueryERC20ToDenomResponse)
}

inline void QueryERC20ToDenomResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.denom_) {}

    , decltype(_impl_.cosmos_originated_) { false }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.denom_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.denom_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryERC20ToDenomResponse::~QueryERC20ToDenomResponse() {
  // @@protoc_insertion_point(destructor:injective.peggy.v1.QueryERC20ToDenomResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryERC20ToDenomResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.denom_.Destroy();
}

void QueryERC20ToDenomResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryERC20ToDenomResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.peggy.v1.QueryERC20ToDenomResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.denom_.ClearToEmpty();
  _impl_.cosmos_originated_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryERC20ToDenomResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string denom = 1 [json_name = "denom"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_denom();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.QueryERC20ToDenomResponse.denom"));
        } else {
          goto handle_unusual;
        }
        continue;
      // bool cosmos_originated = 2 [json_name = "cosmosOriginated"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          _impl_.cosmos_originated_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryERC20ToDenomResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.peggy.v1.QueryERC20ToDenomResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string denom = 1 [json_name = "denom"];
  if (!this->_internal_denom().empty()) {
    const std::string& _s = this->_internal_denom();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.QueryERC20ToDenomResponse.denom");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // bool cosmos_originated = 2 [json_name = "cosmosOriginated"];
  if (this->_internal_cosmos_originated() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_cosmos_originated(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.peggy.v1.QueryERC20ToDenomResponse)
  return target;
}

::size_t QueryERC20ToDenomResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.peggy.v1.QueryERC20ToDenomResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string denom = 1 [json_name = "denom"];
  if (!this->_internal_denom().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_denom());
  }

  // bool cosmos_originated = 2 [json_name = "cosmosOriginated"];
  if (this->_internal_cosmos_originated() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryERC20ToDenomResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryERC20ToDenomResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryERC20ToDenomResponse::GetClassData() const { return &_class_data_; }


void QueryERC20ToDenomResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryERC20ToDenomResponse*>(&to_msg);
  auto& from = static_cast<const QueryERC20ToDenomResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.peggy.v1.QueryERC20ToDenomResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_denom().empty()) {
    _this->_internal_set_denom(from._internal_denom());
  }
  if (from._internal_cosmos_originated() != 0) {
    _this->_internal_set_cosmos_originated(from._internal_cosmos_originated());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryERC20ToDenomResponse::CopyFrom(const QueryERC20ToDenomResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.peggy.v1.QueryERC20ToDenomResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryERC20ToDenomResponse::IsInitialized() const {
  return true;
}

void QueryERC20ToDenomResponse::InternalSwap(QueryERC20ToDenomResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.denom_, lhs_arena,
                                       &other->_impl_.denom_, rhs_arena);

  swap(_impl_.cosmos_originated_, other->_impl_.cosmos_originated_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryERC20ToDenomResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fquery_2eproto[27]);
}
// ===================================================================

class QueryDenomToERC20Request::_Internal {
 public:
};

QueryDenomToERC20Request::QueryDenomToERC20Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.QueryDenomToERC20Request)
}
QueryDenomToERC20Request::QueryDenomToERC20Request(const QueryDenomToERC20Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryDenomToERC20Request* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.denom_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.denom_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.denom_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_denom().empty()) {
    _this->_impl_.denom_.Set(from._internal_denom(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.QueryDenomToERC20Request)
}

inline void QueryDenomToERC20Request::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.denom_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.denom_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.denom_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryDenomToERC20Request::~QueryDenomToERC20Request() {
  // @@protoc_insertion_point(destructor:injective.peggy.v1.QueryDenomToERC20Request)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryDenomToERC20Request::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.denom_.Destroy();
}

void QueryDenomToERC20Request::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryDenomToERC20Request::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.peggy.v1.QueryDenomToERC20Request)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.denom_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryDenomToERC20Request::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string denom = 1 [json_name = "denom"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_denom();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.QueryDenomToERC20Request.denom"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryDenomToERC20Request::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.peggy.v1.QueryDenomToERC20Request)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string denom = 1 [json_name = "denom"];
  if (!this->_internal_denom().empty()) {
    const std::string& _s = this->_internal_denom();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.QueryDenomToERC20Request.denom");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.peggy.v1.QueryDenomToERC20Request)
  return target;
}

::size_t QueryDenomToERC20Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.peggy.v1.QueryDenomToERC20Request)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string denom = 1 [json_name = "denom"];
  if (!this->_internal_denom().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_denom());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryDenomToERC20Request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryDenomToERC20Request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryDenomToERC20Request::GetClassData() const { return &_class_data_; }


void QueryDenomToERC20Request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryDenomToERC20Request*>(&to_msg);
  auto& from = static_cast<const QueryDenomToERC20Request&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.peggy.v1.QueryDenomToERC20Request)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_denom().empty()) {
    _this->_internal_set_denom(from._internal_denom());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryDenomToERC20Request::CopyFrom(const QueryDenomToERC20Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.peggy.v1.QueryDenomToERC20Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDenomToERC20Request::IsInitialized() const {
  return true;
}

void QueryDenomToERC20Request::InternalSwap(QueryDenomToERC20Request* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.denom_, lhs_arena,
                                       &other->_impl_.denom_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryDenomToERC20Request::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fquery_2eproto[28]);
}
// ===================================================================

class QueryDenomToERC20Response::_Internal {
 public:
};

QueryDenomToERC20Response::QueryDenomToERC20Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.QueryDenomToERC20Response)
}
QueryDenomToERC20Response::QueryDenomToERC20Response(const QueryDenomToERC20Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryDenomToERC20Response* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.erc20_) {}

    , decltype(_impl_.cosmos_originated_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.erc20_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.erc20_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_erc20().empty()) {
    _this->_impl_.erc20_.Set(from._internal_erc20(), _this->GetArenaForAllocation());
  }
  _this->_impl_.cosmos_originated_ = from._impl_.cosmos_originated_;
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.QueryDenomToERC20Response)
}

inline void QueryDenomToERC20Response::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.erc20_) {}

    , decltype(_impl_.cosmos_originated_) { false }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.erc20_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.erc20_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryDenomToERC20Response::~QueryDenomToERC20Response() {
  // @@protoc_insertion_point(destructor:injective.peggy.v1.QueryDenomToERC20Response)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryDenomToERC20Response::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.erc20_.Destroy();
}

void QueryDenomToERC20Response::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryDenomToERC20Response::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.peggy.v1.QueryDenomToERC20Response)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.erc20_.ClearToEmpty();
  _impl_.cosmos_originated_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryDenomToERC20Response::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string erc20 = 1 [json_name = "erc20"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_erc20();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.QueryDenomToERC20Response.erc20"));
        } else {
          goto handle_unusual;
        }
        continue;
      // bool cosmos_originated = 2 [json_name = "cosmosOriginated"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          _impl_.cosmos_originated_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryDenomToERC20Response::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.peggy.v1.QueryDenomToERC20Response)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string erc20 = 1 [json_name = "erc20"];
  if (!this->_internal_erc20().empty()) {
    const std::string& _s = this->_internal_erc20();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.QueryDenomToERC20Response.erc20");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // bool cosmos_originated = 2 [json_name = "cosmosOriginated"];
  if (this->_internal_cosmos_originated() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_cosmos_originated(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.peggy.v1.QueryDenomToERC20Response)
  return target;
}

::size_t QueryDenomToERC20Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.peggy.v1.QueryDenomToERC20Response)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string erc20 = 1 [json_name = "erc20"];
  if (!this->_internal_erc20().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_erc20());
  }

  // bool cosmos_originated = 2 [json_name = "cosmosOriginated"];
  if (this->_internal_cosmos_originated() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryDenomToERC20Response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryDenomToERC20Response::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryDenomToERC20Response::GetClassData() const { return &_class_data_; }


void QueryDenomToERC20Response::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryDenomToERC20Response*>(&to_msg);
  auto& from = static_cast<const QueryDenomToERC20Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.peggy.v1.QueryDenomToERC20Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_erc20().empty()) {
    _this->_internal_set_erc20(from._internal_erc20());
  }
  if (from._internal_cosmos_originated() != 0) {
    _this->_internal_set_cosmos_originated(from._internal_cosmos_originated());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryDenomToERC20Response::CopyFrom(const QueryDenomToERC20Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.peggy.v1.QueryDenomToERC20Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDenomToERC20Response::IsInitialized() const {
  return true;
}

void QueryDenomToERC20Response::InternalSwap(QueryDenomToERC20Response* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.erc20_, lhs_arena,
                                       &other->_impl_.erc20_, rhs_arena);

  swap(_impl_.cosmos_originated_, other->_impl_.cosmos_originated_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryDenomToERC20Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fquery_2eproto[29]);
}
// ===================================================================

class QueryDelegateKeysByValidatorAddress::_Internal {
 public:
};

QueryDelegateKeysByValidatorAddress::QueryDelegateKeysByValidatorAddress(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.QueryDelegateKeysByValidatorAddress)
}
QueryDelegateKeysByValidatorAddress::QueryDelegateKeysByValidatorAddress(const QueryDelegateKeysByValidatorAddress& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryDelegateKeysByValidatorAddress* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.validator_address_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.validator_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.validator_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_validator_address().empty()) {
    _this->_impl_.validator_address_.Set(from._internal_validator_address(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.QueryDelegateKeysByValidatorAddress)
}

inline void QueryDelegateKeysByValidatorAddress::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.validator_address_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.validator_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.validator_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryDelegateKeysByValidatorAddress::~QueryDelegateKeysByValidatorAddress() {
  // @@protoc_insertion_point(destructor:injective.peggy.v1.QueryDelegateKeysByValidatorAddress)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryDelegateKeysByValidatorAddress::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.validator_address_.Destroy();
}

void QueryDelegateKeysByValidatorAddress::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryDelegateKeysByValidatorAddress::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.peggy.v1.QueryDelegateKeysByValidatorAddress)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.validator_address_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryDelegateKeysByValidatorAddress::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string validator_address = 1 [json_name = "validatorAddress"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_validator_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.QueryDelegateKeysByValidatorAddress.validator_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryDelegateKeysByValidatorAddress::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.peggy.v1.QueryDelegateKeysByValidatorAddress)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string validator_address = 1 [json_name = "validatorAddress"];
  if (!this->_internal_validator_address().empty()) {
    const std::string& _s = this->_internal_validator_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.QueryDelegateKeysByValidatorAddress.validator_address");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.peggy.v1.QueryDelegateKeysByValidatorAddress)
  return target;
}

::size_t QueryDelegateKeysByValidatorAddress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.peggy.v1.QueryDelegateKeysByValidatorAddress)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string validator_address = 1 [json_name = "validatorAddress"];
  if (!this->_internal_validator_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_validator_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryDelegateKeysByValidatorAddress::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryDelegateKeysByValidatorAddress::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryDelegateKeysByValidatorAddress::GetClassData() const { return &_class_data_; }


void QueryDelegateKeysByValidatorAddress::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryDelegateKeysByValidatorAddress*>(&to_msg);
  auto& from = static_cast<const QueryDelegateKeysByValidatorAddress&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.peggy.v1.QueryDelegateKeysByValidatorAddress)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_validator_address().empty()) {
    _this->_internal_set_validator_address(from._internal_validator_address());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryDelegateKeysByValidatorAddress::CopyFrom(const QueryDelegateKeysByValidatorAddress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.peggy.v1.QueryDelegateKeysByValidatorAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDelegateKeysByValidatorAddress::IsInitialized() const {
  return true;
}

void QueryDelegateKeysByValidatorAddress::InternalSwap(QueryDelegateKeysByValidatorAddress* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.validator_address_, lhs_arena,
                                       &other->_impl_.validator_address_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryDelegateKeysByValidatorAddress::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fquery_2eproto[30]);
}
// ===================================================================

class QueryDelegateKeysByValidatorAddressResponse::_Internal {
 public:
};

QueryDelegateKeysByValidatorAddressResponse::QueryDelegateKeysByValidatorAddressResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.QueryDelegateKeysByValidatorAddressResponse)
}
QueryDelegateKeysByValidatorAddressResponse::QueryDelegateKeysByValidatorAddressResponse(const QueryDelegateKeysByValidatorAddressResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryDelegateKeysByValidatorAddressResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.eth_address_) {}

    , decltype(_impl_.orchestrator_address_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.eth_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.eth_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_eth_address().empty()) {
    _this->_impl_.eth_address_.Set(from._internal_eth_address(), _this->GetArenaForAllocation());
  }
  _impl_.orchestrator_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.orchestrator_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_orchestrator_address().empty()) {
    _this->_impl_.orchestrator_address_.Set(from._internal_orchestrator_address(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.QueryDelegateKeysByValidatorAddressResponse)
}

inline void QueryDelegateKeysByValidatorAddressResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.eth_address_) {}

    , decltype(_impl_.orchestrator_address_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.eth_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.eth_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.orchestrator_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.orchestrator_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryDelegateKeysByValidatorAddressResponse::~QueryDelegateKeysByValidatorAddressResponse() {
  // @@protoc_insertion_point(destructor:injective.peggy.v1.QueryDelegateKeysByValidatorAddressResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryDelegateKeysByValidatorAddressResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.eth_address_.Destroy();
  _impl_.orchestrator_address_.Destroy();
}

void QueryDelegateKeysByValidatorAddressResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryDelegateKeysByValidatorAddressResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.peggy.v1.QueryDelegateKeysByValidatorAddressResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.eth_address_.ClearToEmpty();
  _impl_.orchestrator_address_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryDelegateKeysByValidatorAddressResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string eth_address = 1 [json_name = "ethAddress"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_eth_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.QueryDelegateKeysByValidatorAddressResponse.eth_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string orchestrator_address = 2 [json_name = "orchestratorAddress"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_orchestrator_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.QueryDelegateKeysByValidatorAddressResponse.orchestrator_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryDelegateKeysByValidatorAddressResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.peggy.v1.QueryDelegateKeysByValidatorAddressResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string eth_address = 1 [json_name = "ethAddress"];
  if (!this->_internal_eth_address().empty()) {
    const std::string& _s = this->_internal_eth_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.QueryDelegateKeysByValidatorAddressResponse.eth_address");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string orchestrator_address = 2 [json_name = "orchestratorAddress"];
  if (!this->_internal_orchestrator_address().empty()) {
    const std::string& _s = this->_internal_orchestrator_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.QueryDelegateKeysByValidatorAddressResponse.orchestrator_address");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.peggy.v1.QueryDelegateKeysByValidatorAddressResponse)
  return target;
}

::size_t QueryDelegateKeysByValidatorAddressResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.peggy.v1.QueryDelegateKeysByValidatorAddressResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string eth_address = 1 [json_name = "ethAddress"];
  if (!this->_internal_eth_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_eth_address());
  }

  // string orchestrator_address = 2 [json_name = "orchestratorAddress"];
  if (!this->_internal_orchestrator_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_orchestrator_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryDelegateKeysByValidatorAddressResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryDelegateKeysByValidatorAddressResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryDelegateKeysByValidatorAddressResponse::GetClassData() const { return &_class_data_; }


void QueryDelegateKeysByValidatorAddressResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryDelegateKeysByValidatorAddressResponse*>(&to_msg);
  auto& from = static_cast<const QueryDelegateKeysByValidatorAddressResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.peggy.v1.QueryDelegateKeysByValidatorAddressResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_eth_address().empty()) {
    _this->_internal_set_eth_address(from._internal_eth_address());
  }
  if (!from._internal_orchestrator_address().empty()) {
    _this->_internal_set_orchestrator_address(from._internal_orchestrator_address());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryDelegateKeysByValidatorAddressResponse::CopyFrom(const QueryDelegateKeysByValidatorAddressResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.peggy.v1.QueryDelegateKeysByValidatorAddressResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDelegateKeysByValidatorAddressResponse::IsInitialized() const {
  return true;
}

void QueryDelegateKeysByValidatorAddressResponse::InternalSwap(QueryDelegateKeysByValidatorAddressResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.eth_address_, lhs_arena,
                                       &other->_impl_.eth_address_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.orchestrator_address_, lhs_arena,
                                       &other->_impl_.orchestrator_address_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryDelegateKeysByValidatorAddressResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fquery_2eproto[31]);
}
// ===================================================================

class QueryDelegateKeysByEthAddress::_Internal {
 public:
};

QueryDelegateKeysByEthAddress::QueryDelegateKeysByEthAddress(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.QueryDelegateKeysByEthAddress)
}
QueryDelegateKeysByEthAddress::QueryDelegateKeysByEthAddress(const QueryDelegateKeysByEthAddress& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryDelegateKeysByEthAddress* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.eth_address_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.eth_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.eth_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_eth_address().empty()) {
    _this->_impl_.eth_address_.Set(from._internal_eth_address(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.QueryDelegateKeysByEthAddress)
}

inline void QueryDelegateKeysByEthAddress::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.eth_address_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.eth_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.eth_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryDelegateKeysByEthAddress::~QueryDelegateKeysByEthAddress() {
  // @@protoc_insertion_point(destructor:injective.peggy.v1.QueryDelegateKeysByEthAddress)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryDelegateKeysByEthAddress::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.eth_address_.Destroy();
}

void QueryDelegateKeysByEthAddress::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryDelegateKeysByEthAddress::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.peggy.v1.QueryDelegateKeysByEthAddress)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.eth_address_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryDelegateKeysByEthAddress::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string eth_address = 1 [json_name = "ethAddress"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_eth_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.QueryDelegateKeysByEthAddress.eth_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryDelegateKeysByEthAddress::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.peggy.v1.QueryDelegateKeysByEthAddress)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string eth_address = 1 [json_name = "ethAddress"];
  if (!this->_internal_eth_address().empty()) {
    const std::string& _s = this->_internal_eth_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.QueryDelegateKeysByEthAddress.eth_address");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.peggy.v1.QueryDelegateKeysByEthAddress)
  return target;
}

::size_t QueryDelegateKeysByEthAddress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.peggy.v1.QueryDelegateKeysByEthAddress)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string eth_address = 1 [json_name = "ethAddress"];
  if (!this->_internal_eth_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_eth_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryDelegateKeysByEthAddress::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryDelegateKeysByEthAddress::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryDelegateKeysByEthAddress::GetClassData() const { return &_class_data_; }


void QueryDelegateKeysByEthAddress::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryDelegateKeysByEthAddress*>(&to_msg);
  auto& from = static_cast<const QueryDelegateKeysByEthAddress&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.peggy.v1.QueryDelegateKeysByEthAddress)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_eth_address().empty()) {
    _this->_internal_set_eth_address(from._internal_eth_address());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryDelegateKeysByEthAddress::CopyFrom(const QueryDelegateKeysByEthAddress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.peggy.v1.QueryDelegateKeysByEthAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDelegateKeysByEthAddress::IsInitialized() const {
  return true;
}

void QueryDelegateKeysByEthAddress::InternalSwap(QueryDelegateKeysByEthAddress* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.eth_address_, lhs_arena,
                                       &other->_impl_.eth_address_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryDelegateKeysByEthAddress::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fquery_2eproto[32]);
}
// ===================================================================

class QueryDelegateKeysByEthAddressResponse::_Internal {
 public:
};

QueryDelegateKeysByEthAddressResponse::QueryDelegateKeysByEthAddressResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.QueryDelegateKeysByEthAddressResponse)
}
QueryDelegateKeysByEthAddressResponse::QueryDelegateKeysByEthAddressResponse(const QueryDelegateKeysByEthAddressResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryDelegateKeysByEthAddressResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.validator_address_) {}

    , decltype(_impl_.orchestrator_address_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.validator_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.validator_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_validator_address().empty()) {
    _this->_impl_.validator_address_.Set(from._internal_validator_address(), _this->GetArenaForAllocation());
  }
  _impl_.orchestrator_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.orchestrator_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_orchestrator_address().empty()) {
    _this->_impl_.orchestrator_address_.Set(from._internal_orchestrator_address(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.QueryDelegateKeysByEthAddressResponse)
}

inline void QueryDelegateKeysByEthAddressResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.validator_address_) {}

    , decltype(_impl_.orchestrator_address_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.validator_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.validator_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.orchestrator_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.orchestrator_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryDelegateKeysByEthAddressResponse::~QueryDelegateKeysByEthAddressResponse() {
  // @@protoc_insertion_point(destructor:injective.peggy.v1.QueryDelegateKeysByEthAddressResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryDelegateKeysByEthAddressResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.validator_address_.Destroy();
  _impl_.orchestrator_address_.Destroy();
}

void QueryDelegateKeysByEthAddressResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryDelegateKeysByEthAddressResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.peggy.v1.QueryDelegateKeysByEthAddressResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.validator_address_.ClearToEmpty();
  _impl_.orchestrator_address_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryDelegateKeysByEthAddressResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string validator_address = 1 [json_name = "validatorAddress"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_validator_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.QueryDelegateKeysByEthAddressResponse.validator_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string orchestrator_address = 2 [json_name = "orchestratorAddress"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_orchestrator_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.QueryDelegateKeysByEthAddressResponse.orchestrator_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryDelegateKeysByEthAddressResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.peggy.v1.QueryDelegateKeysByEthAddressResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string validator_address = 1 [json_name = "validatorAddress"];
  if (!this->_internal_validator_address().empty()) {
    const std::string& _s = this->_internal_validator_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.QueryDelegateKeysByEthAddressResponse.validator_address");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string orchestrator_address = 2 [json_name = "orchestratorAddress"];
  if (!this->_internal_orchestrator_address().empty()) {
    const std::string& _s = this->_internal_orchestrator_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.QueryDelegateKeysByEthAddressResponse.orchestrator_address");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.peggy.v1.QueryDelegateKeysByEthAddressResponse)
  return target;
}

::size_t QueryDelegateKeysByEthAddressResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.peggy.v1.QueryDelegateKeysByEthAddressResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string validator_address = 1 [json_name = "validatorAddress"];
  if (!this->_internal_validator_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_validator_address());
  }

  // string orchestrator_address = 2 [json_name = "orchestratorAddress"];
  if (!this->_internal_orchestrator_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_orchestrator_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryDelegateKeysByEthAddressResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryDelegateKeysByEthAddressResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryDelegateKeysByEthAddressResponse::GetClassData() const { return &_class_data_; }


void QueryDelegateKeysByEthAddressResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryDelegateKeysByEthAddressResponse*>(&to_msg);
  auto& from = static_cast<const QueryDelegateKeysByEthAddressResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.peggy.v1.QueryDelegateKeysByEthAddressResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_validator_address().empty()) {
    _this->_internal_set_validator_address(from._internal_validator_address());
  }
  if (!from._internal_orchestrator_address().empty()) {
    _this->_internal_set_orchestrator_address(from._internal_orchestrator_address());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryDelegateKeysByEthAddressResponse::CopyFrom(const QueryDelegateKeysByEthAddressResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.peggy.v1.QueryDelegateKeysByEthAddressResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDelegateKeysByEthAddressResponse::IsInitialized() const {
  return true;
}

void QueryDelegateKeysByEthAddressResponse::InternalSwap(QueryDelegateKeysByEthAddressResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.validator_address_, lhs_arena,
                                       &other->_impl_.validator_address_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.orchestrator_address_, lhs_arena,
                                       &other->_impl_.orchestrator_address_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryDelegateKeysByEthAddressResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fquery_2eproto[33]);
}
// ===================================================================

class QueryDelegateKeysByOrchestratorAddress::_Internal {
 public:
};

QueryDelegateKeysByOrchestratorAddress::QueryDelegateKeysByOrchestratorAddress(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.QueryDelegateKeysByOrchestratorAddress)
}
QueryDelegateKeysByOrchestratorAddress::QueryDelegateKeysByOrchestratorAddress(const QueryDelegateKeysByOrchestratorAddress& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryDelegateKeysByOrchestratorAddress* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.orchestrator_address_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.orchestrator_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.orchestrator_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_orchestrator_address().empty()) {
    _this->_impl_.orchestrator_address_.Set(from._internal_orchestrator_address(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.QueryDelegateKeysByOrchestratorAddress)
}

inline void QueryDelegateKeysByOrchestratorAddress::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.orchestrator_address_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.orchestrator_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.orchestrator_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryDelegateKeysByOrchestratorAddress::~QueryDelegateKeysByOrchestratorAddress() {
  // @@protoc_insertion_point(destructor:injective.peggy.v1.QueryDelegateKeysByOrchestratorAddress)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryDelegateKeysByOrchestratorAddress::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.orchestrator_address_.Destroy();
}

void QueryDelegateKeysByOrchestratorAddress::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryDelegateKeysByOrchestratorAddress::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.peggy.v1.QueryDelegateKeysByOrchestratorAddress)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.orchestrator_address_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryDelegateKeysByOrchestratorAddress::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string orchestrator_address = 1 [json_name = "orchestratorAddress"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_orchestrator_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.QueryDelegateKeysByOrchestratorAddress.orchestrator_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryDelegateKeysByOrchestratorAddress::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.peggy.v1.QueryDelegateKeysByOrchestratorAddress)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string orchestrator_address = 1 [json_name = "orchestratorAddress"];
  if (!this->_internal_orchestrator_address().empty()) {
    const std::string& _s = this->_internal_orchestrator_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.QueryDelegateKeysByOrchestratorAddress.orchestrator_address");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.peggy.v1.QueryDelegateKeysByOrchestratorAddress)
  return target;
}

::size_t QueryDelegateKeysByOrchestratorAddress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.peggy.v1.QueryDelegateKeysByOrchestratorAddress)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string orchestrator_address = 1 [json_name = "orchestratorAddress"];
  if (!this->_internal_orchestrator_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_orchestrator_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryDelegateKeysByOrchestratorAddress::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryDelegateKeysByOrchestratorAddress::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryDelegateKeysByOrchestratorAddress::GetClassData() const { return &_class_data_; }


void QueryDelegateKeysByOrchestratorAddress::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryDelegateKeysByOrchestratorAddress*>(&to_msg);
  auto& from = static_cast<const QueryDelegateKeysByOrchestratorAddress&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.peggy.v1.QueryDelegateKeysByOrchestratorAddress)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_orchestrator_address().empty()) {
    _this->_internal_set_orchestrator_address(from._internal_orchestrator_address());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryDelegateKeysByOrchestratorAddress::CopyFrom(const QueryDelegateKeysByOrchestratorAddress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.peggy.v1.QueryDelegateKeysByOrchestratorAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDelegateKeysByOrchestratorAddress::IsInitialized() const {
  return true;
}

void QueryDelegateKeysByOrchestratorAddress::InternalSwap(QueryDelegateKeysByOrchestratorAddress* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.orchestrator_address_, lhs_arena,
                                       &other->_impl_.orchestrator_address_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryDelegateKeysByOrchestratorAddress::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fquery_2eproto[34]);
}
// ===================================================================

class QueryDelegateKeysByOrchestratorAddressResponse::_Internal {
 public:
};

QueryDelegateKeysByOrchestratorAddressResponse::QueryDelegateKeysByOrchestratorAddressResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.QueryDelegateKeysByOrchestratorAddressResponse)
}
QueryDelegateKeysByOrchestratorAddressResponse::QueryDelegateKeysByOrchestratorAddressResponse(const QueryDelegateKeysByOrchestratorAddressResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryDelegateKeysByOrchestratorAddressResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.validator_address_) {}

    , decltype(_impl_.eth_address_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.validator_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.validator_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_validator_address().empty()) {
    _this->_impl_.validator_address_.Set(from._internal_validator_address(), _this->GetArenaForAllocation());
  }
  _impl_.eth_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.eth_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_eth_address().empty()) {
    _this->_impl_.eth_address_.Set(from._internal_eth_address(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.QueryDelegateKeysByOrchestratorAddressResponse)
}

inline void QueryDelegateKeysByOrchestratorAddressResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.validator_address_) {}

    , decltype(_impl_.eth_address_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.validator_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.validator_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.eth_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.eth_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryDelegateKeysByOrchestratorAddressResponse::~QueryDelegateKeysByOrchestratorAddressResponse() {
  // @@protoc_insertion_point(destructor:injective.peggy.v1.QueryDelegateKeysByOrchestratorAddressResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryDelegateKeysByOrchestratorAddressResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.validator_address_.Destroy();
  _impl_.eth_address_.Destroy();
}

void QueryDelegateKeysByOrchestratorAddressResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryDelegateKeysByOrchestratorAddressResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.peggy.v1.QueryDelegateKeysByOrchestratorAddressResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.validator_address_.ClearToEmpty();
  _impl_.eth_address_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryDelegateKeysByOrchestratorAddressResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string validator_address = 1 [json_name = "validatorAddress"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_validator_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.QueryDelegateKeysByOrchestratorAddressResponse.validator_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string eth_address = 2 [json_name = "ethAddress"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_eth_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.QueryDelegateKeysByOrchestratorAddressResponse.eth_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryDelegateKeysByOrchestratorAddressResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.peggy.v1.QueryDelegateKeysByOrchestratorAddressResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string validator_address = 1 [json_name = "validatorAddress"];
  if (!this->_internal_validator_address().empty()) {
    const std::string& _s = this->_internal_validator_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.QueryDelegateKeysByOrchestratorAddressResponse.validator_address");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string eth_address = 2 [json_name = "ethAddress"];
  if (!this->_internal_eth_address().empty()) {
    const std::string& _s = this->_internal_eth_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.QueryDelegateKeysByOrchestratorAddressResponse.eth_address");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.peggy.v1.QueryDelegateKeysByOrchestratorAddressResponse)
  return target;
}

::size_t QueryDelegateKeysByOrchestratorAddressResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.peggy.v1.QueryDelegateKeysByOrchestratorAddressResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string validator_address = 1 [json_name = "validatorAddress"];
  if (!this->_internal_validator_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_validator_address());
  }

  // string eth_address = 2 [json_name = "ethAddress"];
  if (!this->_internal_eth_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_eth_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryDelegateKeysByOrchestratorAddressResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryDelegateKeysByOrchestratorAddressResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryDelegateKeysByOrchestratorAddressResponse::GetClassData() const { return &_class_data_; }


void QueryDelegateKeysByOrchestratorAddressResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryDelegateKeysByOrchestratorAddressResponse*>(&to_msg);
  auto& from = static_cast<const QueryDelegateKeysByOrchestratorAddressResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.peggy.v1.QueryDelegateKeysByOrchestratorAddressResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_validator_address().empty()) {
    _this->_internal_set_validator_address(from._internal_validator_address());
  }
  if (!from._internal_eth_address().empty()) {
    _this->_internal_set_eth_address(from._internal_eth_address());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryDelegateKeysByOrchestratorAddressResponse::CopyFrom(const QueryDelegateKeysByOrchestratorAddressResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.peggy.v1.QueryDelegateKeysByOrchestratorAddressResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDelegateKeysByOrchestratorAddressResponse::IsInitialized() const {
  return true;
}

void QueryDelegateKeysByOrchestratorAddressResponse::InternalSwap(QueryDelegateKeysByOrchestratorAddressResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.validator_address_, lhs_arena,
                                       &other->_impl_.validator_address_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.eth_address_, lhs_arena,
                                       &other->_impl_.eth_address_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryDelegateKeysByOrchestratorAddressResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fquery_2eproto[35]);
}
// ===================================================================

class QueryPendingSendToEth::_Internal {
 public:
};

QueryPendingSendToEth::QueryPendingSendToEth(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.QueryPendingSendToEth)
}
QueryPendingSendToEth::QueryPendingSendToEth(const QueryPendingSendToEth& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryPendingSendToEth* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.sender_address_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.sender_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sender_address().empty()) {
    _this->_impl_.sender_address_.Set(from._internal_sender_address(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.QueryPendingSendToEth)
}

inline void QueryPendingSendToEth::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.sender_address_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.sender_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryPendingSendToEth::~QueryPendingSendToEth() {
  // @@protoc_insertion_point(destructor:injective.peggy.v1.QueryPendingSendToEth)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryPendingSendToEth::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.sender_address_.Destroy();
}

void QueryPendingSendToEth::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryPendingSendToEth::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.peggy.v1.QueryPendingSendToEth)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sender_address_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryPendingSendToEth::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string sender_address = 1 [json_name = "senderAddress"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_sender_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.QueryPendingSendToEth.sender_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryPendingSendToEth::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.peggy.v1.QueryPendingSendToEth)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string sender_address = 1 [json_name = "senderAddress"];
  if (!this->_internal_sender_address().empty()) {
    const std::string& _s = this->_internal_sender_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.QueryPendingSendToEth.sender_address");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.peggy.v1.QueryPendingSendToEth)
  return target;
}

::size_t QueryPendingSendToEth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.peggy.v1.QueryPendingSendToEth)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string sender_address = 1 [json_name = "senderAddress"];
  if (!this->_internal_sender_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_sender_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryPendingSendToEth::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryPendingSendToEth::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryPendingSendToEth::GetClassData() const { return &_class_data_; }


void QueryPendingSendToEth::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryPendingSendToEth*>(&to_msg);
  auto& from = static_cast<const QueryPendingSendToEth&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.peggy.v1.QueryPendingSendToEth)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sender_address().empty()) {
    _this->_internal_set_sender_address(from._internal_sender_address());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryPendingSendToEth::CopyFrom(const QueryPendingSendToEth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.peggy.v1.QueryPendingSendToEth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryPendingSendToEth::IsInitialized() const {
  return true;
}

void QueryPendingSendToEth::InternalSwap(QueryPendingSendToEth* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_address_, lhs_arena,
                                       &other->_impl_.sender_address_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryPendingSendToEth::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fquery_2eproto[36]);
}
// ===================================================================

class QueryPendingSendToEthResponse::_Internal {
 public:
};

void QueryPendingSendToEthResponse::clear_transfers_in_batches() {
  _internal_mutable_transfers_in_batches()->Clear();
}
void QueryPendingSendToEthResponse::clear_unbatched_transfers() {
  _internal_mutable_unbatched_transfers()->Clear();
}
QueryPendingSendToEthResponse::QueryPendingSendToEthResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.QueryPendingSendToEthResponse)
}
QueryPendingSendToEthResponse::QueryPendingSendToEthResponse(const QueryPendingSendToEthResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryPendingSendToEthResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.transfers_in_batches_){from._impl_.transfers_in_batches_}
    , decltype(_impl_.unbatched_transfers_){from._impl_.unbatched_transfers_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.QueryPendingSendToEthResponse)
}

inline void QueryPendingSendToEthResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.transfers_in_batches_){arena}
    , decltype(_impl_.unbatched_transfers_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

QueryPendingSendToEthResponse::~QueryPendingSendToEthResponse() {
  // @@protoc_insertion_point(destructor:injective.peggy.v1.QueryPendingSendToEthResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryPendingSendToEthResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_transfers_in_batches()->~RepeatedPtrField();
  _internal_mutable_unbatched_transfers()->~RepeatedPtrField();
}

void QueryPendingSendToEthResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryPendingSendToEthResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.peggy.v1.QueryPendingSendToEthResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_transfers_in_batches()->Clear();
  _internal_mutable_unbatched_transfers()->Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryPendingSendToEthResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .injective.peggy.v1.OutgoingTransferTx transfers_in_batches = 1 [json_name = "transfersInBatches"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_transfers_in_batches(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated .injective.peggy.v1.OutgoingTransferTx unbatched_transfers = 2 [json_name = "unbatchedTransfers"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_unbatched_transfers(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryPendingSendToEthResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.peggy.v1.QueryPendingSendToEthResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .injective.peggy.v1.OutgoingTransferTx transfers_in_batches = 1 [json_name = "transfersInBatches"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_transfers_in_batches_size()); i < n; i++) {
    const auto& repfield = this->_internal_transfers_in_batches(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .injective.peggy.v1.OutgoingTransferTx unbatched_transfers = 2 [json_name = "unbatchedTransfers"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_unbatched_transfers_size()); i < n; i++) {
    const auto& repfield = this->_internal_unbatched_transfers(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.peggy.v1.QueryPendingSendToEthResponse)
  return target;
}

::size_t QueryPendingSendToEthResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.peggy.v1.QueryPendingSendToEthResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .injective.peggy.v1.OutgoingTransferTx transfers_in_batches = 1 [json_name = "transfersInBatches"];
  total_size += 1UL * this->_internal_transfers_in_batches_size();
  for (const auto& msg : this->_internal_transfers_in_batches()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .injective.peggy.v1.OutgoingTransferTx unbatched_transfers = 2 [json_name = "unbatchedTransfers"];
  total_size += 1UL * this->_internal_unbatched_transfers_size();
  for (const auto& msg : this->_internal_unbatched_transfers()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryPendingSendToEthResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryPendingSendToEthResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryPendingSendToEthResponse::GetClassData() const { return &_class_data_; }


void QueryPendingSendToEthResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryPendingSendToEthResponse*>(&to_msg);
  auto& from = static_cast<const QueryPendingSendToEthResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.peggy.v1.QueryPendingSendToEthResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_transfers_in_batches()->MergeFrom(from._internal_transfers_in_batches());
  _this->_internal_mutable_unbatched_transfers()->MergeFrom(from._internal_unbatched_transfers());
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryPendingSendToEthResponse::CopyFrom(const QueryPendingSendToEthResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.peggy.v1.QueryPendingSendToEthResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryPendingSendToEthResponse::IsInitialized() const {
  return true;
}

void QueryPendingSendToEthResponse::InternalSwap(QueryPendingSendToEthResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_transfers_in_batches()->InternalSwap(other->_internal_mutable_transfers_in_batches());
  _internal_mutable_unbatched_transfers()->InternalSwap(other->_internal_mutable_unbatched_transfers());
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryPendingSendToEthResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fquery_2eproto[37]);
}
// ===================================================================

class QueryModuleStateRequest::_Internal {
 public:
};

QueryModuleStateRequest::QueryModuleStateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.QueryModuleStateRequest)
}
QueryModuleStateRequest::QueryModuleStateRequest(const QueryModuleStateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  QueryModuleStateRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.QueryModuleStateRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryModuleStateRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryModuleStateRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata QueryModuleStateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fquery_2eproto[38]);
}
// ===================================================================

class QueryModuleStateResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryModuleStateResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryModuleStateResponse, _impl_._has_bits_);
  static const ::injective::peggy::v1::GenesisState& state(const QueryModuleStateResponse* msg);
  static void set_has_state(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::injective::peggy::v1::GenesisState&
QueryModuleStateResponse::_Internal::state(const QueryModuleStateResponse* msg) {
  return *msg->_impl_.state_;
}
void QueryModuleStateResponse::clear_state() {
  if (_impl_.state_ != nullptr) _impl_.state_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryModuleStateResponse::QueryModuleStateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.QueryModuleStateResponse)
}
QueryModuleStateResponse::QueryModuleStateResponse(const QueryModuleStateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryModuleStateResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.state_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.state_ = new ::injective::peggy::v1::GenesisState(*from._impl_.state_);
  }
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.QueryModuleStateResponse)
}

inline void QueryModuleStateResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.state_){nullptr}
  };
}

QueryModuleStateResponse::~QueryModuleStateResponse() {
  // @@protoc_insertion_point(destructor:injective.peggy.v1.QueryModuleStateResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryModuleStateResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.state_;
}

void QueryModuleStateResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryModuleStateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.peggy.v1.QueryModuleStateResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.state_ != nullptr);
    _impl_.state_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryModuleStateResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .injective.peggy.v1.GenesisState state = 1 [json_name = "state"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_state(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryModuleStateResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.peggy.v1.QueryModuleStateResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .injective.peggy.v1.GenesisState state = 1 [json_name = "state"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::state(this),
        _Internal::state(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.peggy.v1.QueryModuleStateResponse)
  return target;
}

::size_t QueryModuleStateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.peggy.v1.QueryModuleStateResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .injective.peggy.v1.GenesisState state = 1 [json_name = "state"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.state_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryModuleStateResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryModuleStateResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryModuleStateResponse::GetClassData() const { return &_class_data_; }


void QueryModuleStateResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryModuleStateResponse*>(&to_msg);
  auto& from = static_cast<const QueryModuleStateResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.peggy.v1.QueryModuleStateResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_state()->::injective::peggy::v1::GenesisState::MergeFrom(
        from._internal_state());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryModuleStateResponse::CopyFrom(const QueryModuleStateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.peggy.v1.QueryModuleStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryModuleStateResponse::IsInitialized() const {
  return true;
}

void QueryModuleStateResponse::InternalSwap(QueryModuleStateResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.state_, other->_impl_.state_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryModuleStateResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fquery_2eproto[39]);
}
// ===================================================================

class MissingNoncesRequest::_Internal {
 public:
};

MissingNoncesRequest::MissingNoncesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.MissingNoncesRequest)
}
MissingNoncesRequest::MissingNoncesRequest(const MissingNoncesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MissingNoncesRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.MissingNoncesRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MissingNoncesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MissingNoncesRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MissingNoncesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fquery_2eproto[40]);
}
// ===================================================================

class MissingNoncesResponse::_Internal {
 public:
};

MissingNoncesResponse::MissingNoncesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.MissingNoncesResponse)
}
MissingNoncesResponse::MissingNoncesResponse(const MissingNoncesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MissingNoncesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.operator_addresses_){from._impl_.operator_addresses_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.MissingNoncesResponse)
}

inline void MissingNoncesResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.operator_addresses_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

MissingNoncesResponse::~MissingNoncesResponse() {
  // @@protoc_insertion_point(destructor:injective.peggy.v1.MissingNoncesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MissingNoncesResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_operator_addresses()->~RepeatedPtrField();
}

void MissingNoncesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MissingNoncesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.peggy.v1.MissingNoncesResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_operator_addresses()->Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MissingNoncesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string operator_addresses = 1 [json_name = "operatorAddresses"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_operator_addresses();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.MissingNoncesResponse.operator_addresses"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MissingNoncesResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.peggy.v1.MissingNoncesResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string operator_addresses = 1 [json_name = "operatorAddresses"];
  for (int i = 0, n = this->_internal_operator_addresses_size(); i < n; ++i) {
    const auto& s = this->_internal_operator_addresses(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.MissingNoncesResponse.operator_addresses");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.peggy.v1.MissingNoncesResponse)
  return target;
}

::size_t MissingNoncesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.peggy.v1.MissingNoncesResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string operator_addresses = 1 [json_name = "operatorAddresses"];
  total_size += 1 * ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_internal_operator_addresses().size());
  for (int i = 0, n = _internal_operator_addresses().size(); i < n; ++i) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        _internal_operator_addresses().Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MissingNoncesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MissingNoncesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MissingNoncesResponse::GetClassData() const { return &_class_data_; }


void MissingNoncesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MissingNoncesResponse*>(&to_msg);
  auto& from = static_cast<const MissingNoncesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.peggy.v1.MissingNoncesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_operator_addresses()->MergeFrom(from._internal_operator_addresses());
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MissingNoncesResponse::CopyFrom(const MissingNoncesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.peggy.v1.MissingNoncesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MissingNoncesResponse::IsInitialized() const {
  return true;
}

void MissingNoncesResponse::InternalSwap(MissingNoncesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_operator_addresses()->InternalSwap(
      other->_internal_mutable_operator_addresses());
}

::PROTOBUF_NAMESPACE_ID::Metadata MissingNoncesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fquery_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fquery_2eproto[41]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace peggy
}  // namespace injective
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::QueryParamsRequest*
Arena::CreateMaybeMessage< ::injective::peggy::v1::QueryParamsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::QueryParamsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::QueryParamsResponse*
Arena::CreateMaybeMessage< ::injective::peggy::v1::QueryParamsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::QueryParamsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::QueryCurrentValsetRequest*
Arena::CreateMaybeMessage< ::injective::peggy::v1::QueryCurrentValsetRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::QueryCurrentValsetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::QueryCurrentValsetResponse*
Arena::CreateMaybeMessage< ::injective::peggy::v1::QueryCurrentValsetResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::QueryCurrentValsetResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::QueryValsetRequestRequest*
Arena::CreateMaybeMessage< ::injective::peggy::v1::QueryValsetRequestRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::QueryValsetRequestRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::QueryValsetRequestResponse*
Arena::CreateMaybeMessage< ::injective::peggy::v1::QueryValsetRequestResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::QueryValsetRequestResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::QueryValsetConfirmRequest*
Arena::CreateMaybeMessage< ::injective::peggy::v1::QueryValsetConfirmRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::QueryValsetConfirmRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::QueryValsetConfirmResponse*
Arena::CreateMaybeMessage< ::injective::peggy::v1::QueryValsetConfirmResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::QueryValsetConfirmResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::QueryValsetConfirmsByNonceRequest*
Arena::CreateMaybeMessage< ::injective::peggy::v1::QueryValsetConfirmsByNonceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::QueryValsetConfirmsByNonceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::QueryValsetConfirmsByNonceResponse*
Arena::CreateMaybeMessage< ::injective::peggy::v1::QueryValsetConfirmsByNonceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::QueryValsetConfirmsByNonceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::QueryLastValsetRequestsRequest*
Arena::CreateMaybeMessage< ::injective::peggy::v1::QueryLastValsetRequestsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::QueryLastValsetRequestsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::QueryLastValsetRequestsResponse*
Arena::CreateMaybeMessage< ::injective::peggy::v1::QueryLastValsetRequestsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::QueryLastValsetRequestsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::QueryLastPendingValsetRequestByAddrRequest*
Arena::CreateMaybeMessage< ::injective::peggy::v1::QueryLastPendingValsetRequestByAddrRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::QueryLastPendingValsetRequestByAddrRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::QueryLastPendingValsetRequestByAddrResponse*
Arena::CreateMaybeMessage< ::injective::peggy::v1::QueryLastPendingValsetRequestByAddrResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::QueryLastPendingValsetRequestByAddrResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::QueryBatchFeeRequest*
Arena::CreateMaybeMessage< ::injective::peggy::v1::QueryBatchFeeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::QueryBatchFeeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::QueryBatchFeeResponse*
Arena::CreateMaybeMessage< ::injective::peggy::v1::QueryBatchFeeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::QueryBatchFeeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::QueryLastPendingBatchRequestByAddrRequest*
Arena::CreateMaybeMessage< ::injective::peggy::v1::QueryLastPendingBatchRequestByAddrRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::QueryLastPendingBatchRequestByAddrRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::QueryLastPendingBatchRequestByAddrResponse*
Arena::CreateMaybeMessage< ::injective::peggy::v1::QueryLastPendingBatchRequestByAddrResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::QueryLastPendingBatchRequestByAddrResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::QueryOutgoingTxBatchesRequest*
Arena::CreateMaybeMessage< ::injective::peggy::v1::QueryOutgoingTxBatchesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::QueryOutgoingTxBatchesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::QueryOutgoingTxBatchesResponse*
Arena::CreateMaybeMessage< ::injective::peggy::v1::QueryOutgoingTxBatchesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::QueryOutgoingTxBatchesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::QueryBatchRequestByNonceRequest*
Arena::CreateMaybeMessage< ::injective::peggy::v1::QueryBatchRequestByNonceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::QueryBatchRequestByNonceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::QueryBatchRequestByNonceResponse*
Arena::CreateMaybeMessage< ::injective::peggy::v1::QueryBatchRequestByNonceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::QueryBatchRequestByNonceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::QueryBatchConfirmsRequest*
Arena::CreateMaybeMessage< ::injective::peggy::v1::QueryBatchConfirmsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::QueryBatchConfirmsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::QueryBatchConfirmsResponse*
Arena::CreateMaybeMessage< ::injective::peggy::v1::QueryBatchConfirmsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::QueryBatchConfirmsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::QueryLastEventByAddrRequest*
Arena::CreateMaybeMessage< ::injective::peggy::v1::QueryLastEventByAddrRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::QueryLastEventByAddrRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::QueryLastEventByAddrResponse*
Arena::CreateMaybeMessage< ::injective::peggy::v1::QueryLastEventByAddrResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::QueryLastEventByAddrResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::QueryERC20ToDenomRequest*
Arena::CreateMaybeMessage< ::injective::peggy::v1::QueryERC20ToDenomRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::QueryERC20ToDenomRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::QueryERC20ToDenomResponse*
Arena::CreateMaybeMessage< ::injective::peggy::v1::QueryERC20ToDenomResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::QueryERC20ToDenomResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::QueryDenomToERC20Request*
Arena::CreateMaybeMessage< ::injective::peggy::v1::QueryDenomToERC20Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::QueryDenomToERC20Request >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::QueryDenomToERC20Response*
Arena::CreateMaybeMessage< ::injective::peggy::v1::QueryDenomToERC20Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::QueryDenomToERC20Response >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::QueryDelegateKeysByValidatorAddress*
Arena::CreateMaybeMessage< ::injective::peggy::v1::QueryDelegateKeysByValidatorAddress >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::QueryDelegateKeysByValidatorAddress >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::QueryDelegateKeysByValidatorAddressResponse*
Arena::CreateMaybeMessage< ::injective::peggy::v1::QueryDelegateKeysByValidatorAddressResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::QueryDelegateKeysByValidatorAddressResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::QueryDelegateKeysByEthAddress*
Arena::CreateMaybeMessage< ::injective::peggy::v1::QueryDelegateKeysByEthAddress >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::QueryDelegateKeysByEthAddress >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::QueryDelegateKeysByEthAddressResponse*
Arena::CreateMaybeMessage< ::injective::peggy::v1::QueryDelegateKeysByEthAddressResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::QueryDelegateKeysByEthAddressResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::QueryDelegateKeysByOrchestratorAddress*
Arena::CreateMaybeMessage< ::injective::peggy::v1::QueryDelegateKeysByOrchestratorAddress >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::QueryDelegateKeysByOrchestratorAddress >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::QueryDelegateKeysByOrchestratorAddressResponse*
Arena::CreateMaybeMessage< ::injective::peggy::v1::QueryDelegateKeysByOrchestratorAddressResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::QueryDelegateKeysByOrchestratorAddressResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::QueryPendingSendToEth*
Arena::CreateMaybeMessage< ::injective::peggy::v1::QueryPendingSendToEth >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::QueryPendingSendToEth >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::QueryPendingSendToEthResponse*
Arena::CreateMaybeMessage< ::injective::peggy::v1::QueryPendingSendToEthResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::QueryPendingSendToEthResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::QueryModuleStateRequest*
Arena::CreateMaybeMessage< ::injective::peggy::v1::QueryModuleStateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::QueryModuleStateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::QueryModuleStateResponse*
Arena::CreateMaybeMessage< ::injective::peggy::v1::QueryModuleStateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::QueryModuleStateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::MissingNoncesRequest*
Arena::CreateMaybeMessage< ::injective::peggy::v1::MissingNoncesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::MissingNoncesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::MissingNoncesResponse*
Arena::CreateMaybeMessage< ::injective::peggy::v1::MissingNoncesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::MissingNoncesResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
