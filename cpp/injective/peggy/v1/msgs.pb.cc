// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: injective/peggy/v1/msgs.proto

#include "injective/peggy/v1/msgs.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace injective {
namespace peggy {
namespace v1 {
template <typename>
PROTOBUF_CONSTEXPR MsgSetOrchestratorAddresses::MsgSetOrchestratorAddresses(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.sender_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.orchestrator_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.eth_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgSetOrchestratorAddressesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgSetOrchestratorAddressesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgSetOrchestratorAddressesDefaultTypeInternal() {}
  union {
    MsgSetOrchestratorAddresses _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgSetOrchestratorAddressesDefaultTypeInternal _MsgSetOrchestratorAddresses_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgSetOrchestratorAddressesResponse::MsgSetOrchestratorAddressesResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgSetOrchestratorAddressesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgSetOrchestratorAddressesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgSetOrchestratorAddressesResponseDefaultTypeInternal() {}
  union {
    MsgSetOrchestratorAddressesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgSetOrchestratorAddressesResponseDefaultTypeInternal _MsgSetOrchestratorAddressesResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgValsetConfirm::MsgValsetConfirm(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.orchestrator_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.eth_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.signature_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.nonce_)*/ ::uint64_t{0u}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgValsetConfirmDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgValsetConfirmDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgValsetConfirmDefaultTypeInternal() {}
  union {
    MsgValsetConfirm _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgValsetConfirmDefaultTypeInternal _MsgValsetConfirm_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgValsetConfirmResponse::MsgValsetConfirmResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgValsetConfirmResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgValsetConfirmResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgValsetConfirmResponseDefaultTypeInternal() {}
  union {
    MsgValsetConfirmResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgValsetConfirmResponseDefaultTypeInternal _MsgValsetConfirmResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgSendToEth::MsgSendToEth(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.sender_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.eth_dest_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.amount_)*/nullptr
  , /*decltype(_impl_.bridge_fee_)*/nullptr} {}
struct MsgSendToEthDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgSendToEthDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgSendToEthDefaultTypeInternal() {}
  union {
    MsgSendToEth _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgSendToEthDefaultTypeInternal _MsgSendToEth_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgSendToEthResponse::MsgSendToEthResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgSendToEthResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgSendToEthResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgSendToEthResponseDefaultTypeInternal() {}
  union {
    MsgSendToEthResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgSendToEthResponseDefaultTypeInternal _MsgSendToEthResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgRequestBatch::MsgRequestBatch(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.orchestrator_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.denom_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgRequestBatchDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgRequestBatchDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgRequestBatchDefaultTypeInternal() {}
  union {
    MsgRequestBatch _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgRequestBatchDefaultTypeInternal _MsgRequestBatch_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgRequestBatchResponse::MsgRequestBatchResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgRequestBatchResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgRequestBatchResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgRequestBatchResponseDefaultTypeInternal() {}
  union {
    MsgRequestBatchResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgRequestBatchResponseDefaultTypeInternal _MsgRequestBatchResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgConfirmBatch::MsgConfirmBatch(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.token_contract_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.eth_signer_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.orchestrator_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.signature_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.nonce_)*/ ::uint64_t{0u}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgConfirmBatchDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgConfirmBatchDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgConfirmBatchDefaultTypeInternal() {}
  union {
    MsgConfirmBatch _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgConfirmBatchDefaultTypeInternal _MsgConfirmBatch_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgConfirmBatchResponse::MsgConfirmBatchResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgConfirmBatchResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgConfirmBatchResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgConfirmBatchResponseDefaultTypeInternal() {}
  union {
    MsgConfirmBatchResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgConfirmBatchResponseDefaultTypeInternal _MsgConfirmBatchResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgDepositClaim::MsgDepositClaim(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.token_contract_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.amount_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.ethereum_sender_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.cosmos_receiver_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.orchestrator_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.data_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.event_nonce_)*/ ::uint64_t{0u}

  , /*decltype(_impl_.block_height_)*/ ::uint64_t{0u}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgDepositClaimDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgDepositClaimDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgDepositClaimDefaultTypeInternal() {}
  union {
    MsgDepositClaim _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgDepositClaimDefaultTypeInternal _MsgDepositClaim_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgDepositClaimResponse::MsgDepositClaimResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgDepositClaimResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgDepositClaimResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgDepositClaimResponseDefaultTypeInternal() {}
  union {
    MsgDepositClaimResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgDepositClaimResponseDefaultTypeInternal _MsgDepositClaimResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgWithdrawClaim::MsgWithdrawClaim(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.token_contract_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.orchestrator_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.event_nonce_)*/ ::uint64_t{0u}

  , /*decltype(_impl_.block_height_)*/ ::uint64_t{0u}

  , /*decltype(_impl_.batch_nonce_)*/ ::uint64_t{0u}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgWithdrawClaimDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgWithdrawClaimDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgWithdrawClaimDefaultTypeInternal() {}
  union {
    MsgWithdrawClaim _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgWithdrawClaimDefaultTypeInternal _MsgWithdrawClaim_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgWithdrawClaimResponse::MsgWithdrawClaimResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgWithdrawClaimResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgWithdrawClaimResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgWithdrawClaimResponseDefaultTypeInternal() {}
  union {
    MsgWithdrawClaimResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgWithdrawClaimResponseDefaultTypeInternal _MsgWithdrawClaimResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgERC20DeployedClaim::MsgERC20DeployedClaim(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.cosmos_denom_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.token_contract_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.name_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.symbol_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.orchestrator_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.event_nonce_)*/ ::uint64_t{0u}

  , /*decltype(_impl_.block_height_)*/ ::uint64_t{0u}

  , /*decltype(_impl_.decimals_)*/ ::uint64_t{0u}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgERC20DeployedClaimDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgERC20DeployedClaimDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgERC20DeployedClaimDefaultTypeInternal() {}
  union {
    MsgERC20DeployedClaim _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgERC20DeployedClaimDefaultTypeInternal _MsgERC20DeployedClaim_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgERC20DeployedClaimResponse::MsgERC20DeployedClaimResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgERC20DeployedClaimResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgERC20DeployedClaimResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgERC20DeployedClaimResponseDefaultTypeInternal() {}
  union {
    MsgERC20DeployedClaimResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgERC20DeployedClaimResponseDefaultTypeInternal _MsgERC20DeployedClaimResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgCancelSendToEth::MsgCancelSendToEth(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.sender_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.transaction_id_)*/ ::uint64_t{0u}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgCancelSendToEthDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgCancelSendToEthDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgCancelSendToEthDefaultTypeInternal() {}
  union {
    MsgCancelSendToEth _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgCancelSendToEthDefaultTypeInternal _MsgCancelSendToEth_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgCancelSendToEthResponse::MsgCancelSendToEthResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgCancelSendToEthResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgCancelSendToEthResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgCancelSendToEthResponseDefaultTypeInternal() {}
  union {
    MsgCancelSendToEthResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgCancelSendToEthResponseDefaultTypeInternal _MsgCancelSendToEthResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgSubmitBadSignatureEvidence::MsgSubmitBadSignatureEvidence(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.signature_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.sender_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.subject_)*/nullptr} {}
struct MsgSubmitBadSignatureEvidenceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgSubmitBadSignatureEvidenceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgSubmitBadSignatureEvidenceDefaultTypeInternal() {}
  union {
    MsgSubmitBadSignatureEvidence _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgSubmitBadSignatureEvidenceDefaultTypeInternal _MsgSubmitBadSignatureEvidence_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgSubmitBadSignatureEvidenceResponse::MsgSubmitBadSignatureEvidenceResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgSubmitBadSignatureEvidenceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgSubmitBadSignatureEvidenceResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgSubmitBadSignatureEvidenceResponseDefaultTypeInternal() {}
  union {
    MsgSubmitBadSignatureEvidenceResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgSubmitBadSignatureEvidenceResponseDefaultTypeInternal _MsgSubmitBadSignatureEvidenceResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgValsetUpdatedClaim::MsgValsetUpdatedClaim(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.members_)*/{}
  , /*decltype(_impl_.reward_amount_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.reward_token_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.orchestrator_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.event_nonce_)*/ ::uint64_t{0u}

  , /*decltype(_impl_.valset_nonce_)*/ ::uint64_t{0u}

  , /*decltype(_impl_.block_height_)*/ ::uint64_t{0u}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgValsetUpdatedClaimDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgValsetUpdatedClaimDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgValsetUpdatedClaimDefaultTypeInternal() {}
  union {
    MsgValsetUpdatedClaim _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgValsetUpdatedClaimDefaultTypeInternal _MsgValsetUpdatedClaim_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgValsetUpdatedClaimResponse::MsgValsetUpdatedClaimResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgValsetUpdatedClaimResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgValsetUpdatedClaimResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgValsetUpdatedClaimResponseDefaultTypeInternal() {}
  union {
    MsgValsetUpdatedClaimResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgValsetUpdatedClaimResponseDefaultTypeInternal _MsgValsetUpdatedClaimResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgUpdateParams::MsgUpdateParams(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.authority_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.params_)*/nullptr} {}
struct MsgUpdateParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgUpdateParamsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgUpdateParamsDefaultTypeInternal() {}
  union {
    MsgUpdateParams _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgUpdateParamsDefaultTypeInternal _MsgUpdateParams_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgUpdateParamsResponse::MsgUpdateParamsResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgUpdateParamsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgUpdateParamsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgUpdateParamsResponseDefaultTypeInternal() {}
  union {
    MsgUpdateParamsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgUpdateParamsResponseDefaultTypeInternal _MsgUpdateParamsResponse_default_instance_;
}  // namespace v1
}  // namespace peggy
}  // namespace injective
static ::_pb::Metadata file_level_metadata_injective_2fpeggy_2fv1_2fmsgs_2eproto[24];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_injective_2fpeggy_2fv1_2fmsgs_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_injective_2fpeggy_2fv1_2fmsgs_2eproto = nullptr;
const ::uint32_t TableStruct_injective_2fpeggy_2fv1_2fmsgs_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgSetOrchestratorAddresses, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgSetOrchestratorAddresses, _impl_.sender_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgSetOrchestratorAddresses, _impl_.orchestrator_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgSetOrchestratorAddresses, _impl_.eth_address_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgSetOrchestratorAddressesResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgValsetConfirm, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgValsetConfirm, _impl_.nonce_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgValsetConfirm, _impl_.orchestrator_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgValsetConfirm, _impl_.eth_address_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgValsetConfirm, _impl_.signature_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgValsetConfirmResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgSendToEth, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgSendToEth, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgSendToEth, _impl_.sender_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgSendToEth, _impl_.eth_dest_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgSendToEth, _impl_.amount_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgSendToEth, _impl_.bridge_fee_),
    ~0u,
    ~0u,
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgSendToEthResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgRequestBatch, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgRequestBatch, _impl_.orchestrator_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgRequestBatch, _impl_.denom_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgRequestBatchResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgConfirmBatch, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgConfirmBatch, _impl_.nonce_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgConfirmBatch, _impl_.token_contract_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgConfirmBatch, _impl_.eth_signer_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgConfirmBatch, _impl_.orchestrator_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgConfirmBatch, _impl_.signature_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgConfirmBatchResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgDepositClaim, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgDepositClaim, _impl_.event_nonce_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgDepositClaim, _impl_.block_height_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgDepositClaim, _impl_.token_contract_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgDepositClaim, _impl_.amount_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgDepositClaim, _impl_.ethereum_sender_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgDepositClaim, _impl_.cosmos_receiver_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgDepositClaim, _impl_.orchestrator_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgDepositClaim, _impl_.data_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgDepositClaimResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgWithdrawClaim, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgWithdrawClaim, _impl_.event_nonce_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgWithdrawClaim, _impl_.block_height_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgWithdrawClaim, _impl_.batch_nonce_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgWithdrawClaim, _impl_.token_contract_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgWithdrawClaim, _impl_.orchestrator_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgWithdrawClaimResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgERC20DeployedClaim, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgERC20DeployedClaim, _impl_.event_nonce_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgERC20DeployedClaim, _impl_.block_height_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgERC20DeployedClaim, _impl_.cosmos_denom_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgERC20DeployedClaim, _impl_.token_contract_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgERC20DeployedClaim, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgERC20DeployedClaim, _impl_.symbol_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgERC20DeployedClaim, _impl_.decimals_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgERC20DeployedClaim, _impl_.orchestrator_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgERC20DeployedClaimResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgCancelSendToEth, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgCancelSendToEth, _impl_.transaction_id_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgCancelSendToEth, _impl_.sender_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgCancelSendToEthResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgSubmitBadSignatureEvidence, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgSubmitBadSignatureEvidence, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgSubmitBadSignatureEvidence, _impl_.subject_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgSubmitBadSignatureEvidence, _impl_.signature_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgSubmitBadSignatureEvidence, _impl_.sender_),
    0,
    ~0u,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgSubmitBadSignatureEvidenceResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgValsetUpdatedClaim, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgValsetUpdatedClaim, _impl_.event_nonce_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgValsetUpdatedClaim, _impl_.valset_nonce_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgValsetUpdatedClaim, _impl_.block_height_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgValsetUpdatedClaim, _impl_.members_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgValsetUpdatedClaim, _impl_.reward_amount_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgValsetUpdatedClaim, _impl_.reward_token_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgValsetUpdatedClaim, _impl_.orchestrator_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgValsetUpdatedClaimResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgUpdateParams, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgUpdateParams, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgUpdateParams, _impl_.authority_),
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgUpdateParams, _impl_.params_),
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::injective::peggy::v1::MsgUpdateParamsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::injective::peggy::v1::MsgSetOrchestratorAddresses)},
        { 11, -1, -1, sizeof(::injective::peggy::v1::MsgSetOrchestratorAddressesResponse)},
        { 19, -1, -1, sizeof(::injective::peggy::v1::MsgValsetConfirm)},
        { 31, -1, -1, sizeof(::injective::peggy::v1::MsgValsetConfirmResponse)},
        { 39, 51, -1, sizeof(::injective::peggy::v1::MsgSendToEth)},
        { 55, -1, -1, sizeof(::injective::peggy::v1::MsgSendToEthResponse)},
        { 63, -1, -1, sizeof(::injective::peggy::v1::MsgRequestBatch)},
        { 73, -1, -1, sizeof(::injective::peggy::v1::MsgRequestBatchResponse)},
        { 81, -1, -1, sizeof(::injective::peggy::v1::MsgConfirmBatch)},
        { 94, -1, -1, sizeof(::injective::peggy::v1::MsgConfirmBatchResponse)},
        { 102, -1, -1, sizeof(::injective::peggy::v1::MsgDepositClaim)},
        { 118, -1, -1, sizeof(::injective::peggy::v1::MsgDepositClaimResponse)},
        { 126, -1, -1, sizeof(::injective::peggy::v1::MsgWithdrawClaim)},
        { 139, -1, -1, sizeof(::injective::peggy::v1::MsgWithdrawClaimResponse)},
        { 147, -1, -1, sizeof(::injective::peggy::v1::MsgERC20DeployedClaim)},
        { 163, -1, -1, sizeof(::injective::peggy::v1::MsgERC20DeployedClaimResponse)},
        { 171, -1, -1, sizeof(::injective::peggy::v1::MsgCancelSendToEth)},
        { 181, -1, -1, sizeof(::injective::peggy::v1::MsgCancelSendToEthResponse)},
        { 189, 200, -1, sizeof(::injective::peggy::v1::MsgSubmitBadSignatureEvidence)},
        { 203, -1, -1, sizeof(::injective::peggy::v1::MsgSubmitBadSignatureEvidenceResponse)},
        { 211, -1, -1, sizeof(::injective::peggy::v1::MsgValsetUpdatedClaim)},
        { 226, -1, -1, sizeof(::injective::peggy::v1::MsgValsetUpdatedClaimResponse)},
        { 234, 244, -1, sizeof(::injective::peggy::v1::MsgUpdateParams)},
        { 246, -1, -1, sizeof(::injective::peggy::v1::MsgUpdateParamsResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::injective::peggy::v1::_MsgSetOrchestratorAddresses_default_instance_._instance,
    &::injective::peggy::v1::_MsgSetOrchestratorAddressesResponse_default_instance_._instance,
    &::injective::peggy::v1::_MsgValsetConfirm_default_instance_._instance,
    &::injective::peggy::v1::_MsgValsetConfirmResponse_default_instance_._instance,
    &::injective::peggy::v1::_MsgSendToEth_default_instance_._instance,
    &::injective::peggy::v1::_MsgSendToEthResponse_default_instance_._instance,
    &::injective::peggy::v1::_MsgRequestBatch_default_instance_._instance,
    &::injective::peggy::v1::_MsgRequestBatchResponse_default_instance_._instance,
    &::injective::peggy::v1::_MsgConfirmBatch_default_instance_._instance,
    &::injective::peggy::v1::_MsgConfirmBatchResponse_default_instance_._instance,
    &::injective::peggy::v1::_MsgDepositClaim_default_instance_._instance,
    &::injective::peggy::v1::_MsgDepositClaimResponse_default_instance_._instance,
    &::injective::peggy::v1::_MsgWithdrawClaim_default_instance_._instance,
    &::injective::peggy::v1::_MsgWithdrawClaimResponse_default_instance_._instance,
    &::injective::peggy::v1::_MsgERC20DeployedClaim_default_instance_._instance,
    &::injective::peggy::v1::_MsgERC20DeployedClaimResponse_default_instance_._instance,
    &::injective::peggy::v1::_MsgCancelSendToEth_default_instance_._instance,
    &::injective::peggy::v1::_MsgCancelSendToEthResponse_default_instance_._instance,
    &::injective::peggy::v1::_MsgSubmitBadSignatureEvidence_default_instance_._instance,
    &::injective::peggy::v1::_MsgSubmitBadSignatureEvidenceResponse_default_instance_._instance,
    &::injective::peggy::v1::_MsgValsetUpdatedClaim_default_instance_._instance,
    &::injective::peggy::v1::_MsgValsetUpdatedClaimResponse_default_instance_._instance,
    &::injective::peggy::v1::_MsgUpdateParams_default_instance_._instance,
    &::injective::peggy::v1::_MsgUpdateParamsResponse_default_instance_._instance,
};
const char descriptor_table_protodef_injective_2fpeggy_2fv1_2fmsgs_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\035injective/peggy/v1/msgs.proto\022\022injecti"
    "ve.peggy.v1\032\036cosmos/base/v1beta1/coin.pr"
    "oto\032\024gogoproto/gogo.proto\032\034google/api/an"
    "notations.proto\032\036injective/peggy/v1/type"
    "s.proto\032\037injective/peggy/v1/params.proto"
    "\032\031google/protobuf/any.proto\032\027cosmos/msg/"
    "v1/msg.proto\032\031cosmos_proto/cosmos.proto\""
    "z\n\033MsgSetOrchestratorAddresses\022\026\n\006sender"
    "\030\001 \001(\tR\006sender\022\"\n\014orchestrator\030\002 \001(\tR\014or"
    "chestrator\022\037\n\013eth_address\030\003 \001(\tR\nethAddr"
    "ess\"%\n#MsgSetOrchestratorAddressesRespon"
    "se\"\236\001\n\020MsgValsetConfirm\022\024\n\005nonce\030\001 \001(\004R\005"
    "nonce\022\"\n\014orchestrator\030\002 \001(\tR\014orchestrato"
    "r\022\037\n\013eth_address\030\003 \001(\tR\nethAddress\022\034\n\tsi"
    "gnature\030\004 \001(\tR\tsignature:\021\202\347\260*\014orchestra"
    "tor\"\032\n\030MsgValsetConfirmResponse\"\307\001\n\014MsgS"
    "endToEth\022\026\n\006sender\030\001 \001(\tR\006sender\022\031\n\010eth_"
    "dest\030\002 \001(\tR\007ethDest\0227\n\006amount\030\003 \001(\0132\031.co"
    "smos.base.v1beta1.CoinB\004\310\336\037\000R\006amount\022>\n\n"
    "bridge_fee\030\004 \001(\0132\031.cosmos.base.v1beta1.C"
    "oinB\004\310\336\037\000R\tbridgeFee:\013\202\347\260*\006sender\"\026\n\024Msg"
    "SendToEthResponse\"^\n\017MsgRequestBatch\022\"\n\014"
    "orchestrator\030\001 \001(\tR\014orchestrator\022\024\n\005deno"
    "m\030\002 \001(\tR\005denom:\021\202\347\260*\014orchestrator\"\031\n\027Msg"
    "RequestBatchResponse\"\302\001\n\017MsgConfirmBatch"
    "\022\024\n\005nonce\030\001 \001(\004R\005nonce\022%\n\016token_contract"
    "\030\002 \001(\tR\rtokenContract\022\035\n\neth_signer\030\003 \001("
    "\tR\tethSigner\022\"\n\014orchestrator\030\004 \001(\tR\014orch"
    "estrator\022\034\n\tsignature\030\005 \001(\tR\tsignature:\021"
    "\202\347\260*\014orchestrator\"\031\n\027MsgConfirmBatchResp"
    "onse\"\341\002\n\017MsgDepositClaim\022\037\n\013event_nonce\030"
    "\001 \001(\004R\neventNonce\022!\n\014block_height\030\002 \001(\004R"
    "\013blockHeight\022%\n\016token_contract\030\003 \001(\tR\rto"
    "kenContract\022F\n\006amount\030\004 \001(\tB.\310\336\037\000\332\336\037&git"
    "hub.com/cosmos/cosmos-sdk/types.IntR\006amo"
    "unt\022\'\n\017ethereum_sender\030\005 \001(\tR\016ethereumSe"
    "nder\022\'\n\017cosmos_receiver\030\006 \001(\tR\016cosmosRec"
    "eiver\022\"\n\014orchestrator\030\007 \001(\tR\014orchestrato"
    "r\022\022\n\004data\030\010 \001(\tR\004data:\021\202\347\260*\014orchestrator"
    "\"\031\n\027MsgDepositClaimResponse\"\325\001\n\020MsgWithd"
    "rawClaim\022\037\n\013event_nonce\030\001 \001(\004R\neventNonc"
    "e\022!\n\014block_height\030\002 \001(\004R\013blockHeight\022\037\n\013"
    "batch_nonce\030\003 \001(\004R\nbatchNonce\022%\n\016token_c"
    "ontract\030\004 \001(\tR\rtokenContract\022\"\n\014orchestr"
    "ator\030\005 \001(\tR\014orchestrator:\021\202\347\260*\014orchestra"
    "tor\"\032\n\030MsgWithdrawClaimResponse\"\244\002\n\025MsgE"
    "RC20DeployedClaim\022\037\n\013event_nonce\030\001 \001(\004R\n"
    "eventNonce\022!\n\014block_height\030\002 \001(\004R\013blockH"
    "eight\022!\n\014cosmos_denom\030\003 \001(\tR\013cosmosDenom"
    "\022%\n\016token_contract\030\004 \001(\tR\rtokenContract\022"
    "\022\n\004name\030\005 \001(\tR\004name\022\026\n\006symbol\030\006 \001(\tR\006sym"
    "bol\022\032\n\010decimals\030\007 \001(\004R\010decimals\022\"\n\014orche"
    "strator\030\010 \001(\tR\014orchestrator:\021\202\347\260*\014orches"
    "trator\"\037\n\035MsgERC20DeployedClaimResponse\""
    "`\n\022MsgCancelSendToEth\022%\n\016transaction_id\030"
    "\001 \001(\004R\rtransactionId\022\026\n\006sender\030\002 \001(\tR\006se"
    "nder:\013\202\347\260*\006sender\"\034\n\032MsgCancelSendToEthR"
    "esponse\"\222\001\n\035MsgSubmitBadSignatureEvidenc"
    "e\022.\n\007subject\030\001 \001(\0132\024.google.protobuf.Any"
    "R\007subject\022\034\n\tsignature\030\002 \001(\tR\tsignature\022"
    "\026\n\006sender\030\003 \001(\tR\006sender:\013\202\347\260*\006sender\"\'\n%"
    "MsgSubmitBadSignatureEvidenceResponse\"\354\002"
    "\n\025MsgValsetUpdatedClaim\022\037\n\013event_nonce\030\001"
    " \001(\004R\neventNonce\022!\n\014valset_nonce\030\002 \001(\004R\013"
    "valsetNonce\022!\n\014block_height\030\003 \001(\004R\013block"
    "Height\022=\n\007members\030\004 \003(\0132#.injective.pegg"
    "y.v1.BridgeValidatorR\007members\022S\n\rreward_"
    "amount\030\005 \001(\tB.\310\336\037\000\332\336\037&github.com/cosmos/"
    "cosmos-sdk/types.IntR\014rewardAmount\022!\n\014re"
    "ward_token\030\006 \001(\tR\013rewardToken\022\"\n\014orchest"
    "rator\030\007 \001(\tR\014orchestrator:\021\202\347\260*\014orchestr"
    "ator\"\037\n\035MsgValsetUpdatedClaimResponse\"\223\001"
    "\n\017MsgUpdateParams\0226\n\tauthority\030\001 \001(\tB\030\322\264"
    "-\024cosmos.AddressStringR\tauthority\0228\n\006par"
    "ams\030\002 \001(\0132\032.injective.peggy.v1.ParamsB\004\310"
    "\336\037\000R\006params:\016\202\347\260*\tauthority\"\031\n\027MsgUpdate"
    "ParamsResponse2\246\016\n\003Msg\022\217\001\n\rValsetConfirm"
    "\022$.injective.peggy.v1.MsgValsetConfirm\032,"
    ".injective.peggy.v1.MsgValsetConfirmResp"
    "onse\"*\202\323\344\223\002$\"\"/injective/peggy/v1/valset"
    "_confirm\022\200\001\n\tSendToEth\022 .injective.peggy"
    ".v1.MsgSendToEth\032(.injective.peggy.v1.Ms"
    "gSendToEthResponse\"\'\202\323\344\223\002!\"\037/injective/p"
    "eggy/v1/send_to_eth\022\213\001\n\014RequestBatch\022#.i"
    "njective.peggy.v1.MsgRequestBatch\032+.inje"
    "ctive.peggy.v1.MsgRequestBatchResponse\")"
    "\202\323\344\223\002#\"!/injective/peggy/v1/request_batc"
    "h\022\213\001\n\014ConfirmBatch\022#.injective.peggy.v1."
    "MsgConfirmBatch\032+.injective.peggy.v1.Msg"
    "ConfirmBatchResponse\")\202\323\344\223\002#\"!/injective"
    "/peggy/v1/confirm_batch\022\213\001\n\014DepositClaim"
    "\022#.injective.peggy.v1.MsgDepositClaim\032+."
    "injective.peggy.v1.MsgDepositClaimRespon"
    "se\")\202\323\344\223\002#\"!/injective/peggy/v1/deposit_"
    "claim\022\217\001\n\rWithdrawClaim\022$.injective.pegg"
    "y.v1.MsgWithdrawClaim\032,.injective.peggy."
    "v1.MsgWithdrawClaimResponse\"*\202\323\344\223\002$\"\"/in"
    "jective/peggy/v1/withdraw_claim\022\243\001\n\021Vals"
    "etUpdateClaim\022).injective.peggy.v1.MsgVa"
    "lsetUpdatedClaim\0321.injective.peggy.v1.Ms"
    "gValsetUpdatedClaimResponse\"0\202\323\344\223\002*\"(/in"
    "jective/peggy/v1/valset_updated_claim\022\244\001"
    "\n\022ERC20DeployedClaim\022).injective.peggy.v"
    "1.MsgERC20DeployedClaim\0321.injective.pegg"
    "y.v1.MsgERC20DeployedClaimResponse\"0\202\323\344\223"
    "\002*\"(/injective/peggy/v1/erc20_deployed_c"
    "laim\022\272\001\n\030SetOrchestratorAddresses\022/.inje"
    "ctive.peggy.v1.MsgSetOrchestratorAddress"
    "es\0327.injective.peggy.v1.MsgSetOrchestrat"
    "orAddressesResponse\"4\202\323\344\223\002.\",/injective/"
    "peggy/v1/set_orchestrator_address\022\231\001\n\017Ca"
    "ncelSendToEth\022&.injective.peggy.v1.MsgCa"
    "ncelSendToEth\032..injective.peggy.v1.MsgCa"
    "ncelSendToEthResponse\".\202\323\344\223\002(\"&/injectiv"
    "e/peggy/v1/cancel_send_to_eth\022\305\001\n\032Submit"
    "BadSignatureEvidence\0221.injective.peggy.v"
    "1.MsgSubmitBadSignatureEvidence\0329.inject"
    "ive.peggy.v1.MsgSubmitBadSignatureEviden"
    "ceResponse\"9\202\323\344\223\0023\"1/injective/peggy/v1/"
    "submit_bad_signature_evidence\022`\n\014UpdateP"
    "arams\022#.injective.peggy.v1.MsgUpdatePara"
    "ms\032+.injective.peggy.v1.MsgUpdateParamsR"
    "esponseB\332\001\n\026com.injective.peggy.v1B\tMsgs"
    "ProtoP\001ZKgithub.com/InjectiveLabs/inject"
    "ive-core/injective-chain/modules/peggy/t"
    "ypes\242\002\003IPX\252\002\022Injective.Peggy.V1\312\002\022Inject"
    "ive\\Peggy\\V1\342\002\036Injective\\Peggy\\V1\\GPBMet"
    "adata\352\002\024Injective::Peggy::V1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto_deps[8] =
    {
        &::descriptor_table_cosmos_2fbase_2fv1beta1_2fcoin_2eproto,
        &::descriptor_table_cosmos_2fmsg_2fv1_2fmsg_2eproto,
        &::descriptor_table_cosmos_5fproto_2fcosmos_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_google_2fapi_2fannotations_2eproto,
        &::descriptor_table_google_2fprotobuf_2fany_2eproto,
        &::descriptor_table_injective_2fpeggy_2fv1_2fparams_2eproto,
        &::descriptor_table_injective_2fpeggy_2fv1_2ftypes_2eproto,
};
static ::absl::once_flag descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto = {
    false,
    false,
    5116,
    descriptor_table_protodef_injective_2fpeggy_2fv1_2fmsgs_2eproto,
    "injective/peggy/v1/msgs.proto",
    &descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto_once,
    descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto_deps,
    8,
    24,
    schemas,
    file_default_instances,
    TableStruct_injective_2fpeggy_2fv1_2fmsgs_2eproto::offsets,
    file_level_metadata_injective_2fpeggy_2fv1_2fmsgs_2eproto,
    file_level_enum_descriptors_injective_2fpeggy_2fv1_2fmsgs_2eproto,
    file_level_service_descriptors_injective_2fpeggy_2fv1_2fmsgs_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto_getter() {
  return &descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_injective_2fpeggy_2fv1_2fmsgs_2eproto(&descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto);
namespace injective {
namespace peggy {
namespace v1 {
// ===================================================================

class MsgSetOrchestratorAddresses::_Internal {
 public:
};

MsgSetOrchestratorAddresses::MsgSetOrchestratorAddresses(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.MsgSetOrchestratorAddresses)
}
MsgSetOrchestratorAddresses::MsgSetOrchestratorAddresses(const MsgSetOrchestratorAddresses& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgSetOrchestratorAddresses* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.sender_) {}

    , decltype(_impl_.orchestrator_) {}

    , decltype(_impl_.eth_address_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sender().empty()) {
    _this->_impl_.sender_.Set(from._internal_sender(), _this->GetArenaForAllocation());
  }
  _impl_.orchestrator_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.orchestrator_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_orchestrator().empty()) {
    _this->_impl_.orchestrator_.Set(from._internal_orchestrator(), _this->GetArenaForAllocation());
  }
  _impl_.eth_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.eth_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_eth_address().empty()) {
    _this->_impl_.eth_address_.Set(from._internal_eth_address(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.MsgSetOrchestratorAddresses)
}

inline void MsgSetOrchestratorAddresses::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.sender_) {}

    , decltype(_impl_.orchestrator_) {}

    , decltype(_impl_.eth_address_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.orchestrator_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.orchestrator_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.eth_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.eth_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgSetOrchestratorAddresses::~MsgSetOrchestratorAddresses() {
  // @@protoc_insertion_point(destructor:injective.peggy.v1.MsgSetOrchestratorAddresses)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgSetOrchestratorAddresses::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.sender_.Destroy();
  _impl_.orchestrator_.Destroy();
  _impl_.eth_address_.Destroy();
}

void MsgSetOrchestratorAddresses::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgSetOrchestratorAddresses::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.peggy.v1.MsgSetOrchestratorAddresses)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sender_.ClearToEmpty();
  _impl_.orchestrator_.ClearToEmpty();
  _impl_.eth_address_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgSetOrchestratorAddresses::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string sender = 1 [json_name = "sender"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_sender();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.MsgSetOrchestratorAddresses.sender"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string orchestrator = 2 [json_name = "orchestrator"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_orchestrator();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.MsgSetOrchestratorAddresses.orchestrator"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string eth_address = 3 [json_name = "ethAddress"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_eth_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.MsgSetOrchestratorAddresses.eth_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgSetOrchestratorAddresses::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.peggy.v1.MsgSetOrchestratorAddresses)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string sender = 1 [json_name = "sender"];
  if (!this->_internal_sender().empty()) {
    const std::string& _s = this->_internal_sender();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.MsgSetOrchestratorAddresses.sender");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string orchestrator = 2 [json_name = "orchestrator"];
  if (!this->_internal_orchestrator().empty()) {
    const std::string& _s = this->_internal_orchestrator();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.MsgSetOrchestratorAddresses.orchestrator");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string eth_address = 3 [json_name = "ethAddress"];
  if (!this->_internal_eth_address().empty()) {
    const std::string& _s = this->_internal_eth_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.MsgSetOrchestratorAddresses.eth_address");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.peggy.v1.MsgSetOrchestratorAddresses)
  return target;
}

::size_t MsgSetOrchestratorAddresses::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.peggy.v1.MsgSetOrchestratorAddresses)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string sender = 1 [json_name = "sender"];
  if (!this->_internal_sender().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_sender());
  }

  // string orchestrator = 2 [json_name = "orchestrator"];
  if (!this->_internal_orchestrator().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_orchestrator());
  }

  // string eth_address = 3 [json_name = "ethAddress"];
  if (!this->_internal_eth_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_eth_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgSetOrchestratorAddresses::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgSetOrchestratorAddresses::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgSetOrchestratorAddresses::GetClassData() const { return &_class_data_; }


void MsgSetOrchestratorAddresses::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgSetOrchestratorAddresses*>(&to_msg);
  auto& from = static_cast<const MsgSetOrchestratorAddresses&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.peggy.v1.MsgSetOrchestratorAddresses)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sender().empty()) {
    _this->_internal_set_sender(from._internal_sender());
  }
  if (!from._internal_orchestrator().empty()) {
    _this->_internal_set_orchestrator(from._internal_orchestrator());
  }
  if (!from._internal_eth_address().empty()) {
    _this->_internal_set_eth_address(from._internal_eth_address());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgSetOrchestratorAddresses::CopyFrom(const MsgSetOrchestratorAddresses& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.peggy.v1.MsgSetOrchestratorAddresses)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSetOrchestratorAddresses::IsInitialized() const {
  return true;
}

void MsgSetOrchestratorAddresses::InternalSwap(MsgSetOrchestratorAddresses* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_, lhs_arena,
                                       &other->_impl_.sender_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.orchestrator_, lhs_arena,
                                       &other->_impl_.orchestrator_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.eth_address_, lhs_arena,
                                       &other->_impl_.eth_address_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgSetOrchestratorAddresses::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fmsgs_2eproto[0]);
}
// ===================================================================

class MsgSetOrchestratorAddressesResponse::_Internal {
 public:
};

MsgSetOrchestratorAddressesResponse::MsgSetOrchestratorAddressesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.MsgSetOrchestratorAddressesResponse)
}
MsgSetOrchestratorAddressesResponse::MsgSetOrchestratorAddressesResponse(const MsgSetOrchestratorAddressesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgSetOrchestratorAddressesResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.MsgSetOrchestratorAddressesResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgSetOrchestratorAddressesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgSetOrchestratorAddressesResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgSetOrchestratorAddressesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fmsgs_2eproto[1]);
}
// ===================================================================

class MsgValsetConfirm::_Internal {
 public:
};

MsgValsetConfirm::MsgValsetConfirm(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.MsgValsetConfirm)
}
MsgValsetConfirm::MsgValsetConfirm(const MsgValsetConfirm& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgValsetConfirm* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.orchestrator_) {}

    , decltype(_impl_.eth_address_) {}

    , decltype(_impl_.signature_) {}

    , decltype(_impl_.nonce_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.orchestrator_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.orchestrator_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_orchestrator().empty()) {
    _this->_impl_.orchestrator_.Set(from._internal_orchestrator(), _this->GetArenaForAllocation());
  }
  _impl_.eth_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.eth_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_eth_address().empty()) {
    _this->_impl_.eth_address_.Set(from._internal_eth_address(), _this->GetArenaForAllocation());
  }
  _impl_.signature_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.signature_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_signature().empty()) {
    _this->_impl_.signature_.Set(from._internal_signature(), _this->GetArenaForAllocation());
  }
  _this->_impl_.nonce_ = from._impl_.nonce_;
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.MsgValsetConfirm)
}

inline void MsgValsetConfirm::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.orchestrator_) {}

    , decltype(_impl_.eth_address_) {}

    , decltype(_impl_.signature_) {}

    , decltype(_impl_.nonce_) { ::uint64_t{0u} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.orchestrator_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.orchestrator_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.eth_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.eth_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.signature_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.signature_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgValsetConfirm::~MsgValsetConfirm() {
  // @@protoc_insertion_point(destructor:injective.peggy.v1.MsgValsetConfirm)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgValsetConfirm::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.orchestrator_.Destroy();
  _impl_.eth_address_.Destroy();
  _impl_.signature_.Destroy();
}

void MsgValsetConfirm::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgValsetConfirm::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.peggy.v1.MsgValsetConfirm)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.orchestrator_.ClearToEmpty();
  _impl_.eth_address_.ClearToEmpty();
  _impl_.signature_.ClearToEmpty();
  _impl_.nonce_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgValsetConfirm::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 nonce = 1 [json_name = "nonce"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.nonce_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string orchestrator = 2 [json_name = "orchestrator"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_orchestrator();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.MsgValsetConfirm.orchestrator"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string eth_address = 3 [json_name = "ethAddress"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_eth_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.MsgValsetConfirm.eth_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string signature = 4 [json_name = "signature"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_signature();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.MsgValsetConfirm.signature"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgValsetConfirm::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.peggy.v1.MsgValsetConfirm)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 nonce = 1 [json_name = "nonce"];
  if (this->_internal_nonce() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_nonce(), target);
  }

  // string orchestrator = 2 [json_name = "orchestrator"];
  if (!this->_internal_orchestrator().empty()) {
    const std::string& _s = this->_internal_orchestrator();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.MsgValsetConfirm.orchestrator");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string eth_address = 3 [json_name = "ethAddress"];
  if (!this->_internal_eth_address().empty()) {
    const std::string& _s = this->_internal_eth_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.MsgValsetConfirm.eth_address");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string signature = 4 [json_name = "signature"];
  if (!this->_internal_signature().empty()) {
    const std::string& _s = this->_internal_signature();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.MsgValsetConfirm.signature");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.peggy.v1.MsgValsetConfirm)
  return target;
}

::size_t MsgValsetConfirm::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.peggy.v1.MsgValsetConfirm)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string orchestrator = 2 [json_name = "orchestrator"];
  if (!this->_internal_orchestrator().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_orchestrator());
  }

  // string eth_address = 3 [json_name = "ethAddress"];
  if (!this->_internal_eth_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_eth_address());
  }

  // string signature = 4 [json_name = "signature"];
  if (!this->_internal_signature().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_signature());
  }

  // uint64 nonce = 1 [json_name = "nonce"];
  if (this->_internal_nonce() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_nonce());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgValsetConfirm::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgValsetConfirm::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgValsetConfirm::GetClassData() const { return &_class_data_; }


void MsgValsetConfirm::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgValsetConfirm*>(&to_msg);
  auto& from = static_cast<const MsgValsetConfirm&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.peggy.v1.MsgValsetConfirm)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_orchestrator().empty()) {
    _this->_internal_set_orchestrator(from._internal_orchestrator());
  }
  if (!from._internal_eth_address().empty()) {
    _this->_internal_set_eth_address(from._internal_eth_address());
  }
  if (!from._internal_signature().empty()) {
    _this->_internal_set_signature(from._internal_signature());
  }
  if (from._internal_nonce() != 0) {
    _this->_internal_set_nonce(from._internal_nonce());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgValsetConfirm::CopyFrom(const MsgValsetConfirm& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.peggy.v1.MsgValsetConfirm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgValsetConfirm::IsInitialized() const {
  return true;
}

void MsgValsetConfirm::InternalSwap(MsgValsetConfirm* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.orchestrator_, lhs_arena,
                                       &other->_impl_.orchestrator_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.eth_address_, lhs_arena,
                                       &other->_impl_.eth_address_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.signature_, lhs_arena,
                                       &other->_impl_.signature_, rhs_arena);

  swap(_impl_.nonce_, other->_impl_.nonce_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgValsetConfirm::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fmsgs_2eproto[2]);
}
// ===================================================================

class MsgValsetConfirmResponse::_Internal {
 public:
};

MsgValsetConfirmResponse::MsgValsetConfirmResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.MsgValsetConfirmResponse)
}
MsgValsetConfirmResponse::MsgValsetConfirmResponse(const MsgValsetConfirmResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgValsetConfirmResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.MsgValsetConfirmResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgValsetConfirmResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgValsetConfirmResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgValsetConfirmResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fmsgs_2eproto[3]);
}
// ===================================================================

class MsgSendToEth::_Internal {
 public:
  using HasBits = decltype(std::declval<MsgSendToEth>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MsgSendToEth, _impl_._has_bits_);
  static const ::cosmos::base::v1beta1::Coin& amount(const MsgSendToEth* msg);
  static void set_has_amount(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::cosmos::base::v1beta1::Coin& bridge_fee(const MsgSendToEth* msg);
  static void set_has_bridge_fee(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::cosmos::base::v1beta1::Coin&
MsgSendToEth::_Internal::amount(const MsgSendToEth* msg) {
  return *msg->_impl_.amount_;
}
const ::cosmos::base::v1beta1::Coin&
MsgSendToEth::_Internal::bridge_fee(const MsgSendToEth* msg) {
  return *msg->_impl_.bridge_fee_;
}
void MsgSendToEth::clear_amount() {
  if (_impl_.amount_ != nullptr) _impl_.amount_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void MsgSendToEth::clear_bridge_fee() {
  if (_impl_.bridge_fee_ != nullptr) _impl_.bridge_fee_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
MsgSendToEth::MsgSendToEth(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.MsgSendToEth)
}
MsgSendToEth::MsgSendToEth(const MsgSendToEth& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgSendToEth* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.sender_) {}

    , decltype(_impl_.eth_dest_) {}

    , decltype(_impl_.amount_){nullptr}
    , decltype(_impl_.bridge_fee_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sender().empty()) {
    _this->_impl_.sender_.Set(from._internal_sender(), _this->GetArenaForAllocation());
  }
  _impl_.eth_dest_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.eth_dest_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_eth_dest().empty()) {
    _this->_impl_.eth_dest_.Set(from._internal_eth_dest(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.amount_ = new ::cosmos::base::v1beta1::Coin(*from._impl_.amount_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.bridge_fee_ = new ::cosmos::base::v1beta1::Coin(*from._impl_.bridge_fee_);
  }
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.MsgSendToEth)
}

inline void MsgSendToEth::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.sender_) {}

    , decltype(_impl_.eth_dest_) {}

    , decltype(_impl_.amount_){nullptr}
    , decltype(_impl_.bridge_fee_){nullptr}
  };
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.eth_dest_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.eth_dest_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgSendToEth::~MsgSendToEth() {
  // @@protoc_insertion_point(destructor:injective.peggy.v1.MsgSendToEth)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgSendToEth::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.sender_.Destroy();
  _impl_.eth_dest_.Destroy();
  if (this != internal_default_instance()) delete _impl_.amount_;
  if (this != internal_default_instance()) delete _impl_.bridge_fee_;
}

void MsgSendToEth::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgSendToEth::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.peggy.v1.MsgSendToEth)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sender_.ClearToEmpty();
  _impl_.eth_dest_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.amount_ != nullptr);
      _impl_.amount_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.bridge_fee_ != nullptr);
      _impl_.bridge_fee_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgSendToEth::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string sender = 1 [json_name = "sender"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_sender();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.MsgSendToEth.sender"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string eth_dest = 2 [json_name = "ethDest"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_eth_dest();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.MsgSendToEth.eth_dest"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_amount(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.v1beta1.Coin bridge_fee = 4 [json_name = "bridgeFee", (.gogoproto.nullable) = false];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_bridge_fee(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgSendToEth::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.peggy.v1.MsgSendToEth)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string sender = 1 [json_name = "sender"];
  if (!this->_internal_sender().empty()) {
    const std::string& _s = this->_internal_sender();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.MsgSendToEth.sender");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string eth_dest = 2 [json_name = "ethDest"];
  if (!this->_internal_eth_dest().empty()) {
    const std::string& _s = this->_internal_eth_dest();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.MsgSendToEth.eth_dest");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::amount(this),
        _Internal::amount(this).GetCachedSize(), target, stream);
  }

  // .cosmos.base.v1beta1.Coin bridge_fee = 4 [json_name = "bridgeFee", (.gogoproto.nullable) = false];
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::bridge_fee(this),
        _Internal::bridge_fee(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.peggy.v1.MsgSendToEth)
  return target;
}

::size_t MsgSendToEth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.peggy.v1.MsgSendToEth)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string sender = 1 [json_name = "sender"];
  if (!this->_internal_sender().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_sender());
  }

  // string eth_dest = 2 [json_name = "ethDest"];
  if (!this->_internal_eth_dest().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_eth_dest());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.amount_);
    }

    // .cosmos.base.v1beta1.Coin bridge_fee = 4 [json_name = "bridgeFee", (.gogoproto.nullable) = false];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.bridge_fee_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgSendToEth::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgSendToEth::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgSendToEth::GetClassData() const { return &_class_data_; }


void MsgSendToEth::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgSendToEth*>(&to_msg);
  auto& from = static_cast<const MsgSendToEth&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.peggy.v1.MsgSendToEth)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sender().empty()) {
    _this->_internal_set_sender(from._internal_sender());
  }
  if (!from._internal_eth_dest().empty()) {
    _this->_internal_set_eth_dest(from._internal_eth_dest());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_amount()->::cosmos::base::v1beta1::Coin::MergeFrom(
          from._internal_amount());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_bridge_fee()->::cosmos::base::v1beta1::Coin::MergeFrom(
          from._internal_bridge_fee());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgSendToEth::CopyFrom(const MsgSendToEth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.peggy.v1.MsgSendToEth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSendToEth::IsInitialized() const {
  return true;
}

void MsgSendToEth::InternalSwap(MsgSendToEth* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_, lhs_arena,
                                       &other->_impl_.sender_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.eth_dest_, lhs_arena,
                                       &other->_impl_.eth_dest_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MsgSendToEth, _impl_.bridge_fee_)
      + sizeof(MsgSendToEth::_impl_.bridge_fee_)
      - PROTOBUF_FIELD_OFFSET(MsgSendToEth, _impl_.amount_)>(
          reinterpret_cast<char*>(&_impl_.amount_),
          reinterpret_cast<char*>(&other->_impl_.amount_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgSendToEth::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fmsgs_2eproto[4]);
}
// ===================================================================

class MsgSendToEthResponse::_Internal {
 public:
};

MsgSendToEthResponse::MsgSendToEthResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.MsgSendToEthResponse)
}
MsgSendToEthResponse::MsgSendToEthResponse(const MsgSendToEthResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgSendToEthResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.MsgSendToEthResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgSendToEthResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgSendToEthResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgSendToEthResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fmsgs_2eproto[5]);
}
// ===================================================================

class MsgRequestBatch::_Internal {
 public:
};

MsgRequestBatch::MsgRequestBatch(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.MsgRequestBatch)
}
MsgRequestBatch::MsgRequestBatch(const MsgRequestBatch& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgRequestBatch* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.orchestrator_) {}

    , decltype(_impl_.denom_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.orchestrator_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.orchestrator_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_orchestrator().empty()) {
    _this->_impl_.orchestrator_.Set(from._internal_orchestrator(), _this->GetArenaForAllocation());
  }
  _impl_.denom_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.denom_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_denom().empty()) {
    _this->_impl_.denom_.Set(from._internal_denom(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.MsgRequestBatch)
}

inline void MsgRequestBatch::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.orchestrator_) {}

    , decltype(_impl_.denom_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.orchestrator_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.orchestrator_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.denom_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.denom_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgRequestBatch::~MsgRequestBatch() {
  // @@protoc_insertion_point(destructor:injective.peggy.v1.MsgRequestBatch)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgRequestBatch::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.orchestrator_.Destroy();
  _impl_.denom_.Destroy();
}

void MsgRequestBatch::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgRequestBatch::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.peggy.v1.MsgRequestBatch)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.orchestrator_.ClearToEmpty();
  _impl_.denom_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgRequestBatch::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string orchestrator = 1 [json_name = "orchestrator"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_orchestrator();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.MsgRequestBatch.orchestrator"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string denom = 2 [json_name = "denom"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_denom();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.MsgRequestBatch.denom"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgRequestBatch::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.peggy.v1.MsgRequestBatch)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string orchestrator = 1 [json_name = "orchestrator"];
  if (!this->_internal_orchestrator().empty()) {
    const std::string& _s = this->_internal_orchestrator();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.MsgRequestBatch.orchestrator");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string denom = 2 [json_name = "denom"];
  if (!this->_internal_denom().empty()) {
    const std::string& _s = this->_internal_denom();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.MsgRequestBatch.denom");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.peggy.v1.MsgRequestBatch)
  return target;
}

::size_t MsgRequestBatch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.peggy.v1.MsgRequestBatch)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string orchestrator = 1 [json_name = "orchestrator"];
  if (!this->_internal_orchestrator().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_orchestrator());
  }

  // string denom = 2 [json_name = "denom"];
  if (!this->_internal_denom().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_denom());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgRequestBatch::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgRequestBatch::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgRequestBatch::GetClassData() const { return &_class_data_; }


void MsgRequestBatch::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgRequestBatch*>(&to_msg);
  auto& from = static_cast<const MsgRequestBatch&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.peggy.v1.MsgRequestBatch)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_orchestrator().empty()) {
    _this->_internal_set_orchestrator(from._internal_orchestrator());
  }
  if (!from._internal_denom().empty()) {
    _this->_internal_set_denom(from._internal_denom());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgRequestBatch::CopyFrom(const MsgRequestBatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.peggy.v1.MsgRequestBatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgRequestBatch::IsInitialized() const {
  return true;
}

void MsgRequestBatch::InternalSwap(MsgRequestBatch* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.orchestrator_, lhs_arena,
                                       &other->_impl_.orchestrator_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.denom_, lhs_arena,
                                       &other->_impl_.denom_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgRequestBatch::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fmsgs_2eproto[6]);
}
// ===================================================================

class MsgRequestBatchResponse::_Internal {
 public:
};

MsgRequestBatchResponse::MsgRequestBatchResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.MsgRequestBatchResponse)
}
MsgRequestBatchResponse::MsgRequestBatchResponse(const MsgRequestBatchResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgRequestBatchResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.MsgRequestBatchResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgRequestBatchResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgRequestBatchResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgRequestBatchResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fmsgs_2eproto[7]);
}
// ===================================================================

class MsgConfirmBatch::_Internal {
 public:
};

MsgConfirmBatch::MsgConfirmBatch(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.MsgConfirmBatch)
}
MsgConfirmBatch::MsgConfirmBatch(const MsgConfirmBatch& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgConfirmBatch* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.token_contract_) {}

    , decltype(_impl_.eth_signer_) {}

    , decltype(_impl_.orchestrator_) {}

    , decltype(_impl_.signature_) {}

    , decltype(_impl_.nonce_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.token_contract_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.token_contract_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_token_contract().empty()) {
    _this->_impl_.token_contract_.Set(from._internal_token_contract(), _this->GetArenaForAllocation());
  }
  _impl_.eth_signer_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.eth_signer_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_eth_signer().empty()) {
    _this->_impl_.eth_signer_.Set(from._internal_eth_signer(), _this->GetArenaForAllocation());
  }
  _impl_.orchestrator_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.orchestrator_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_orchestrator().empty()) {
    _this->_impl_.orchestrator_.Set(from._internal_orchestrator(), _this->GetArenaForAllocation());
  }
  _impl_.signature_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.signature_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_signature().empty()) {
    _this->_impl_.signature_.Set(from._internal_signature(), _this->GetArenaForAllocation());
  }
  _this->_impl_.nonce_ = from._impl_.nonce_;
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.MsgConfirmBatch)
}

inline void MsgConfirmBatch::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.token_contract_) {}

    , decltype(_impl_.eth_signer_) {}

    , decltype(_impl_.orchestrator_) {}

    , decltype(_impl_.signature_) {}

    , decltype(_impl_.nonce_) { ::uint64_t{0u} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.token_contract_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.token_contract_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.eth_signer_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.eth_signer_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.orchestrator_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.orchestrator_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.signature_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.signature_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgConfirmBatch::~MsgConfirmBatch() {
  // @@protoc_insertion_point(destructor:injective.peggy.v1.MsgConfirmBatch)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgConfirmBatch::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.token_contract_.Destroy();
  _impl_.eth_signer_.Destroy();
  _impl_.orchestrator_.Destroy();
  _impl_.signature_.Destroy();
}

void MsgConfirmBatch::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgConfirmBatch::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.peggy.v1.MsgConfirmBatch)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.token_contract_.ClearToEmpty();
  _impl_.eth_signer_.ClearToEmpty();
  _impl_.orchestrator_.ClearToEmpty();
  _impl_.signature_.ClearToEmpty();
  _impl_.nonce_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgConfirmBatch::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 nonce = 1 [json_name = "nonce"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.nonce_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string token_contract = 2 [json_name = "tokenContract"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_token_contract();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.MsgConfirmBatch.token_contract"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string eth_signer = 3 [json_name = "ethSigner"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_eth_signer();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.MsgConfirmBatch.eth_signer"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string orchestrator = 4 [json_name = "orchestrator"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_orchestrator();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.MsgConfirmBatch.orchestrator"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string signature = 5 [json_name = "signature"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_signature();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.MsgConfirmBatch.signature"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgConfirmBatch::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.peggy.v1.MsgConfirmBatch)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 nonce = 1 [json_name = "nonce"];
  if (this->_internal_nonce() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_nonce(), target);
  }

  // string token_contract = 2 [json_name = "tokenContract"];
  if (!this->_internal_token_contract().empty()) {
    const std::string& _s = this->_internal_token_contract();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.MsgConfirmBatch.token_contract");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string eth_signer = 3 [json_name = "ethSigner"];
  if (!this->_internal_eth_signer().empty()) {
    const std::string& _s = this->_internal_eth_signer();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.MsgConfirmBatch.eth_signer");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string orchestrator = 4 [json_name = "orchestrator"];
  if (!this->_internal_orchestrator().empty()) {
    const std::string& _s = this->_internal_orchestrator();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.MsgConfirmBatch.orchestrator");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string signature = 5 [json_name = "signature"];
  if (!this->_internal_signature().empty()) {
    const std::string& _s = this->_internal_signature();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.MsgConfirmBatch.signature");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.peggy.v1.MsgConfirmBatch)
  return target;
}

::size_t MsgConfirmBatch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.peggy.v1.MsgConfirmBatch)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token_contract = 2 [json_name = "tokenContract"];
  if (!this->_internal_token_contract().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_token_contract());
  }

  // string eth_signer = 3 [json_name = "ethSigner"];
  if (!this->_internal_eth_signer().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_eth_signer());
  }

  // string orchestrator = 4 [json_name = "orchestrator"];
  if (!this->_internal_orchestrator().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_orchestrator());
  }

  // string signature = 5 [json_name = "signature"];
  if (!this->_internal_signature().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_signature());
  }

  // uint64 nonce = 1 [json_name = "nonce"];
  if (this->_internal_nonce() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_nonce());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgConfirmBatch::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgConfirmBatch::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgConfirmBatch::GetClassData() const { return &_class_data_; }


void MsgConfirmBatch::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgConfirmBatch*>(&to_msg);
  auto& from = static_cast<const MsgConfirmBatch&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.peggy.v1.MsgConfirmBatch)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_token_contract().empty()) {
    _this->_internal_set_token_contract(from._internal_token_contract());
  }
  if (!from._internal_eth_signer().empty()) {
    _this->_internal_set_eth_signer(from._internal_eth_signer());
  }
  if (!from._internal_orchestrator().empty()) {
    _this->_internal_set_orchestrator(from._internal_orchestrator());
  }
  if (!from._internal_signature().empty()) {
    _this->_internal_set_signature(from._internal_signature());
  }
  if (from._internal_nonce() != 0) {
    _this->_internal_set_nonce(from._internal_nonce());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgConfirmBatch::CopyFrom(const MsgConfirmBatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.peggy.v1.MsgConfirmBatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgConfirmBatch::IsInitialized() const {
  return true;
}

void MsgConfirmBatch::InternalSwap(MsgConfirmBatch* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.token_contract_, lhs_arena,
                                       &other->_impl_.token_contract_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.eth_signer_, lhs_arena,
                                       &other->_impl_.eth_signer_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.orchestrator_, lhs_arena,
                                       &other->_impl_.orchestrator_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.signature_, lhs_arena,
                                       &other->_impl_.signature_, rhs_arena);

  swap(_impl_.nonce_, other->_impl_.nonce_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgConfirmBatch::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fmsgs_2eproto[8]);
}
// ===================================================================

class MsgConfirmBatchResponse::_Internal {
 public:
};

MsgConfirmBatchResponse::MsgConfirmBatchResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.MsgConfirmBatchResponse)
}
MsgConfirmBatchResponse::MsgConfirmBatchResponse(const MsgConfirmBatchResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgConfirmBatchResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.MsgConfirmBatchResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgConfirmBatchResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgConfirmBatchResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgConfirmBatchResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fmsgs_2eproto[9]);
}
// ===================================================================

class MsgDepositClaim::_Internal {
 public:
};

MsgDepositClaim::MsgDepositClaim(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.MsgDepositClaim)
}
MsgDepositClaim::MsgDepositClaim(const MsgDepositClaim& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgDepositClaim* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.token_contract_) {}

    , decltype(_impl_.amount_) {}

    , decltype(_impl_.ethereum_sender_) {}

    , decltype(_impl_.cosmos_receiver_) {}

    , decltype(_impl_.orchestrator_) {}

    , decltype(_impl_.data_) {}

    , decltype(_impl_.event_nonce_) {}

    , decltype(_impl_.block_height_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.token_contract_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.token_contract_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_token_contract().empty()) {
    _this->_impl_.token_contract_.Set(from._internal_token_contract(), _this->GetArenaForAllocation());
  }
  _impl_.amount_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.amount_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_amount().empty()) {
    _this->_impl_.amount_.Set(from._internal_amount(), _this->GetArenaForAllocation());
  }
  _impl_.ethereum_sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.ethereum_sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_ethereum_sender().empty()) {
    _this->_impl_.ethereum_sender_.Set(from._internal_ethereum_sender(), _this->GetArenaForAllocation());
  }
  _impl_.cosmos_receiver_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.cosmos_receiver_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_cosmos_receiver().empty()) {
    _this->_impl_.cosmos_receiver_.Set(from._internal_cosmos_receiver(), _this->GetArenaForAllocation());
  }
  _impl_.orchestrator_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.orchestrator_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_orchestrator().empty()) {
    _this->_impl_.orchestrator_.Set(from._internal_orchestrator(), _this->GetArenaForAllocation());
  }
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data().empty()) {
    _this->_impl_.data_.Set(from._internal_data(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.event_nonce_, &from._impl_.event_nonce_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.block_height_) -
    reinterpret_cast<char*>(&_impl_.event_nonce_)) + sizeof(_impl_.block_height_));
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.MsgDepositClaim)
}

inline void MsgDepositClaim::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.token_contract_) {}

    , decltype(_impl_.amount_) {}

    , decltype(_impl_.ethereum_sender_) {}

    , decltype(_impl_.cosmos_receiver_) {}

    , decltype(_impl_.orchestrator_) {}

    , decltype(_impl_.data_) {}

    , decltype(_impl_.event_nonce_) { ::uint64_t{0u} }

    , decltype(_impl_.block_height_) { ::uint64_t{0u} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.token_contract_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.token_contract_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.amount_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.amount_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.ethereum_sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.ethereum_sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.cosmos_receiver_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.cosmos_receiver_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.orchestrator_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.orchestrator_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgDepositClaim::~MsgDepositClaim() {
  // @@protoc_insertion_point(destructor:injective.peggy.v1.MsgDepositClaim)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgDepositClaim::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.token_contract_.Destroy();
  _impl_.amount_.Destroy();
  _impl_.ethereum_sender_.Destroy();
  _impl_.cosmos_receiver_.Destroy();
  _impl_.orchestrator_.Destroy();
  _impl_.data_.Destroy();
}

void MsgDepositClaim::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgDepositClaim::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.peggy.v1.MsgDepositClaim)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.token_contract_.ClearToEmpty();
  _impl_.amount_.ClearToEmpty();
  _impl_.ethereum_sender_.ClearToEmpty();
  _impl_.cosmos_receiver_.ClearToEmpty();
  _impl_.orchestrator_.ClearToEmpty();
  _impl_.data_.ClearToEmpty();
  ::memset(&_impl_.event_nonce_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.block_height_) -
      reinterpret_cast<char*>(&_impl_.event_nonce_)) + sizeof(_impl_.block_height_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgDepositClaim::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 event_nonce = 1 [json_name = "eventNonce"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.event_nonce_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // uint64 block_height = 2 [json_name = "blockHeight"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          _impl_.block_height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string token_contract = 3 [json_name = "tokenContract"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_token_contract();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.MsgDepositClaim.token_contract"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string amount = 4 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_amount();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.MsgDepositClaim.amount"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string ethereum_sender = 5 [json_name = "ethereumSender"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_ethereum_sender();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.MsgDepositClaim.ethereum_sender"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string cosmos_receiver = 6 [json_name = "cosmosReceiver"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_cosmos_receiver();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.MsgDepositClaim.cosmos_receiver"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string orchestrator = 7 [json_name = "orchestrator"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_orchestrator();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.MsgDepositClaim.orchestrator"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string data = 8 [json_name = "data"];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_data();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.MsgDepositClaim.data"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgDepositClaim::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.peggy.v1.MsgDepositClaim)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 event_nonce = 1 [json_name = "eventNonce"];
  if (this->_internal_event_nonce() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_event_nonce(), target);
  }

  // uint64 block_height = 2 [json_name = "blockHeight"];
  if (this->_internal_block_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_block_height(), target);
  }

  // string token_contract = 3 [json_name = "tokenContract"];
  if (!this->_internal_token_contract().empty()) {
    const std::string& _s = this->_internal_token_contract();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.MsgDepositClaim.token_contract");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string amount = 4 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"];
  if (!this->_internal_amount().empty()) {
    const std::string& _s = this->_internal_amount();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.MsgDepositClaim.amount");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string ethereum_sender = 5 [json_name = "ethereumSender"];
  if (!this->_internal_ethereum_sender().empty()) {
    const std::string& _s = this->_internal_ethereum_sender();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.MsgDepositClaim.ethereum_sender");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // string cosmos_receiver = 6 [json_name = "cosmosReceiver"];
  if (!this->_internal_cosmos_receiver().empty()) {
    const std::string& _s = this->_internal_cosmos_receiver();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.MsgDepositClaim.cosmos_receiver");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // string orchestrator = 7 [json_name = "orchestrator"];
  if (!this->_internal_orchestrator().empty()) {
    const std::string& _s = this->_internal_orchestrator();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.MsgDepositClaim.orchestrator");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // string data = 8 [json_name = "data"];
  if (!this->_internal_data().empty()) {
    const std::string& _s = this->_internal_data();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.MsgDepositClaim.data");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.peggy.v1.MsgDepositClaim)
  return target;
}

::size_t MsgDepositClaim::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.peggy.v1.MsgDepositClaim)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token_contract = 3 [json_name = "tokenContract"];
  if (!this->_internal_token_contract().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_token_contract());
  }

  // string amount = 4 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"];
  if (!this->_internal_amount().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_amount());
  }

  // string ethereum_sender = 5 [json_name = "ethereumSender"];
  if (!this->_internal_ethereum_sender().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_ethereum_sender());
  }

  // string cosmos_receiver = 6 [json_name = "cosmosReceiver"];
  if (!this->_internal_cosmos_receiver().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_cosmos_receiver());
  }

  // string orchestrator = 7 [json_name = "orchestrator"];
  if (!this->_internal_orchestrator().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_orchestrator());
  }

  // string data = 8 [json_name = "data"];
  if (!this->_internal_data().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_data());
  }

  // uint64 event_nonce = 1 [json_name = "eventNonce"];
  if (this->_internal_event_nonce() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_event_nonce());
  }

  // uint64 block_height = 2 [json_name = "blockHeight"];
  if (this->_internal_block_height() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_block_height());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgDepositClaim::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgDepositClaim::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgDepositClaim::GetClassData() const { return &_class_data_; }


void MsgDepositClaim::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgDepositClaim*>(&to_msg);
  auto& from = static_cast<const MsgDepositClaim&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.peggy.v1.MsgDepositClaim)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_token_contract().empty()) {
    _this->_internal_set_token_contract(from._internal_token_contract());
  }
  if (!from._internal_amount().empty()) {
    _this->_internal_set_amount(from._internal_amount());
  }
  if (!from._internal_ethereum_sender().empty()) {
    _this->_internal_set_ethereum_sender(from._internal_ethereum_sender());
  }
  if (!from._internal_cosmos_receiver().empty()) {
    _this->_internal_set_cosmos_receiver(from._internal_cosmos_receiver());
  }
  if (!from._internal_orchestrator().empty()) {
    _this->_internal_set_orchestrator(from._internal_orchestrator());
  }
  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  if (from._internal_event_nonce() != 0) {
    _this->_internal_set_event_nonce(from._internal_event_nonce());
  }
  if (from._internal_block_height() != 0) {
    _this->_internal_set_block_height(from._internal_block_height());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgDepositClaim::CopyFrom(const MsgDepositClaim& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.peggy.v1.MsgDepositClaim)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDepositClaim::IsInitialized() const {
  return true;
}

void MsgDepositClaim::InternalSwap(MsgDepositClaim* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.token_contract_, lhs_arena,
                                       &other->_impl_.token_contract_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.amount_, lhs_arena,
                                       &other->_impl_.amount_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ethereum_sender_, lhs_arena,
                                       &other->_impl_.ethereum_sender_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cosmos_receiver_, lhs_arena,
                                       &other->_impl_.cosmos_receiver_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.orchestrator_, lhs_arena,
                                       &other->_impl_.orchestrator_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, lhs_arena,
                                       &other->_impl_.data_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MsgDepositClaim, _impl_.block_height_)
      + sizeof(MsgDepositClaim::_impl_.block_height_)
      - PROTOBUF_FIELD_OFFSET(MsgDepositClaim, _impl_.event_nonce_)>(
          reinterpret_cast<char*>(&_impl_.event_nonce_),
          reinterpret_cast<char*>(&other->_impl_.event_nonce_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgDepositClaim::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fmsgs_2eproto[10]);
}
// ===================================================================

class MsgDepositClaimResponse::_Internal {
 public:
};

MsgDepositClaimResponse::MsgDepositClaimResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.MsgDepositClaimResponse)
}
MsgDepositClaimResponse::MsgDepositClaimResponse(const MsgDepositClaimResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgDepositClaimResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.MsgDepositClaimResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgDepositClaimResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgDepositClaimResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgDepositClaimResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fmsgs_2eproto[11]);
}
// ===================================================================

class MsgWithdrawClaim::_Internal {
 public:
};

MsgWithdrawClaim::MsgWithdrawClaim(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.MsgWithdrawClaim)
}
MsgWithdrawClaim::MsgWithdrawClaim(const MsgWithdrawClaim& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgWithdrawClaim* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.token_contract_) {}

    , decltype(_impl_.orchestrator_) {}

    , decltype(_impl_.event_nonce_) {}

    , decltype(_impl_.block_height_) {}

    , decltype(_impl_.batch_nonce_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.token_contract_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.token_contract_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_token_contract().empty()) {
    _this->_impl_.token_contract_.Set(from._internal_token_contract(), _this->GetArenaForAllocation());
  }
  _impl_.orchestrator_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.orchestrator_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_orchestrator().empty()) {
    _this->_impl_.orchestrator_.Set(from._internal_orchestrator(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.event_nonce_, &from._impl_.event_nonce_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.batch_nonce_) -
    reinterpret_cast<char*>(&_impl_.event_nonce_)) + sizeof(_impl_.batch_nonce_));
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.MsgWithdrawClaim)
}

inline void MsgWithdrawClaim::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.token_contract_) {}

    , decltype(_impl_.orchestrator_) {}

    , decltype(_impl_.event_nonce_) { ::uint64_t{0u} }

    , decltype(_impl_.block_height_) { ::uint64_t{0u} }

    , decltype(_impl_.batch_nonce_) { ::uint64_t{0u} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.token_contract_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.token_contract_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.orchestrator_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.orchestrator_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgWithdrawClaim::~MsgWithdrawClaim() {
  // @@protoc_insertion_point(destructor:injective.peggy.v1.MsgWithdrawClaim)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgWithdrawClaim::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.token_contract_.Destroy();
  _impl_.orchestrator_.Destroy();
}

void MsgWithdrawClaim::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgWithdrawClaim::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.peggy.v1.MsgWithdrawClaim)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.token_contract_.ClearToEmpty();
  _impl_.orchestrator_.ClearToEmpty();
  ::memset(&_impl_.event_nonce_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.batch_nonce_) -
      reinterpret_cast<char*>(&_impl_.event_nonce_)) + sizeof(_impl_.batch_nonce_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgWithdrawClaim::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 event_nonce = 1 [json_name = "eventNonce"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.event_nonce_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // uint64 block_height = 2 [json_name = "blockHeight"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          _impl_.block_height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // uint64 batch_nonce = 3 [json_name = "batchNonce"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 24)) {
          _impl_.batch_nonce_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string token_contract = 4 [json_name = "tokenContract"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_token_contract();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.MsgWithdrawClaim.token_contract"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string orchestrator = 5 [json_name = "orchestrator"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_orchestrator();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.MsgWithdrawClaim.orchestrator"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgWithdrawClaim::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.peggy.v1.MsgWithdrawClaim)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 event_nonce = 1 [json_name = "eventNonce"];
  if (this->_internal_event_nonce() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_event_nonce(), target);
  }

  // uint64 block_height = 2 [json_name = "blockHeight"];
  if (this->_internal_block_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_block_height(), target);
  }

  // uint64 batch_nonce = 3 [json_name = "batchNonce"];
  if (this->_internal_batch_nonce() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_batch_nonce(), target);
  }

  // string token_contract = 4 [json_name = "tokenContract"];
  if (!this->_internal_token_contract().empty()) {
    const std::string& _s = this->_internal_token_contract();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.MsgWithdrawClaim.token_contract");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string orchestrator = 5 [json_name = "orchestrator"];
  if (!this->_internal_orchestrator().empty()) {
    const std::string& _s = this->_internal_orchestrator();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.MsgWithdrawClaim.orchestrator");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.peggy.v1.MsgWithdrawClaim)
  return target;
}

::size_t MsgWithdrawClaim::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.peggy.v1.MsgWithdrawClaim)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token_contract = 4 [json_name = "tokenContract"];
  if (!this->_internal_token_contract().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_token_contract());
  }

  // string orchestrator = 5 [json_name = "orchestrator"];
  if (!this->_internal_orchestrator().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_orchestrator());
  }

  // uint64 event_nonce = 1 [json_name = "eventNonce"];
  if (this->_internal_event_nonce() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_event_nonce());
  }

  // uint64 block_height = 2 [json_name = "blockHeight"];
  if (this->_internal_block_height() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_block_height());
  }

  // uint64 batch_nonce = 3 [json_name = "batchNonce"];
  if (this->_internal_batch_nonce() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_batch_nonce());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgWithdrawClaim::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgWithdrawClaim::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgWithdrawClaim::GetClassData() const { return &_class_data_; }


void MsgWithdrawClaim::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgWithdrawClaim*>(&to_msg);
  auto& from = static_cast<const MsgWithdrawClaim&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.peggy.v1.MsgWithdrawClaim)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_token_contract().empty()) {
    _this->_internal_set_token_contract(from._internal_token_contract());
  }
  if (!from._internal_orchestrator().empty()) {
    _this->_internal_set_orchestrator(from._internal_orchestrator());
  }
  if (from._internal_event_nonce() != 0) {
    _this->_internal_set_event_nonce(from._internal_event_nonce());
  }
  if (from._internal_block_height() != 0) {
    _this->_internal_set_block_height(from._internal_block_height());
  }
  if (from._internal_batch_nonce() != 0) {
    _this->_internal_set_batch_nonce(from._internal_batch_nonce());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgWithdrawClaim::CopyFrom(const MsgWithdrawClaim& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.peggy.v1.MsgWithdrawClaim)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgWithdrawClaim::IsInitialized() const {
  return true;
}

void MsgWithdrawClaim::InternalSwap(MsgWithdrawClaim* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.token_contract_, lhs_arena,
                                       &other->_impl_.token_contract_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.orchestrator_, lhs_arena,
                                       &other->_impl_.orchestrator_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MsgWithdrawClaim, _impl_.batch_nonce_)
      + sizeof(MsgWithdrawClaim::_impl_.batch_nonce_)
      - PROTOBUF_FIELD_OFFSET(MsgWithdrawClaim, _impl_.event_nonce_)>(
          reinterpret_cast<char*>(&_impl_.event_nonce_),
          reinterpret_cast<char*>(&other->_impl_.event_nonce_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgWithdrawClaim::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fmsgs_2eproto[12]);
}
// ===================================================================

class MsgWithdrawClaimResponse::_Internal {
 public:
};

MsgWithdrawClaimResponse::MsgWithdrawClaimResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.MsgWithdrawClaimResponse)
}
MsgWithdrawClaimResponse::MsgWithdrawClaimResponse(const MsgWithdrawClaimResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgWithdrawClaimResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.MsgWithdrawClaimResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgWithdrawClaimResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgWithdrawClaimResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgWithdrawClaimResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fmsgs_2eproto[13]);
}
// ===================================================================

class MsgERC20DeployedClaim::_Internal {
 public:
};

MsgERC20DeployedClaim::MsgERC20DeployedClaim(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.MsgERC20DeployedClaim)
}
MsgERC20DeployedClaim::MsgERC20DeployedClaim(const MsgERC20DeployedClaim& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgERC20DeployedClaim* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.cosmos_denom_) {}

    , decltype(_impl_.token_contract_) {}

    , decltype(_impl_.name_) {}

    , decltype(_impl_.symbol_) {}

    , decltype(_impl_.orchestrator_) {}

    , decltype(_impl_.event_nonce_) {}

    , decltype(_impl_.block_height_) {}

    , decltype(_impl_.decimals_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.cosmos_denom_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.cosmos_denom_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_cosmos_denom().empty()) {
    _this->_impl_.cosmos_denom_.Set(from._internal_cosmos_denom(), _this->GetArenaForAllocation());
  }
  _impl_.token_contract_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.token_contract_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_token_contract().empty()) {
    _this->_impl_.token_contract_.Set(from._internal_token_contract(), _this->GetArenaForAllocation());
  }
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_symbol().empty()) {
    _this->_impl_.symbol_.Set(from._internal_symbol(), _this->GetArenaForAllocation());
  }
  _impl_.orchestrator_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.orchestrator_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_orchestrator().empty()) {
    _this->_impl_.orchestrator_.Set(from._internal_orchestrator(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.event_nonce_, &from._impl_.event_nonce_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.decimals_) -
    reinterpret_cast<char*>(&_impl_.event_nonce_)) + sizeof(_impl_.decimals_));
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.MsgERC20DeployedClaim)
}

inline void MsgERC20DeployedClaim::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.cosmos_denom_) {}

    , decltype(_impl_.token_contract_) {}

    , decltype(_impl_.name_) {}

    , decltype(_impl_.symbol_) {}

    , decltype(_impl_.orchestrator_) {}

    , decltype(_impl_.event_nonce_) { ::uint64_t{0u} }

    , decltype(_impl_.block_height_) { ::uint64_t{0u} }

    , decltype(_impl_.decimals_) { ::uint64_t{0u} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.cosmos_denom_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.cosmos_denom_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.token_contract_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.token_contract_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.orchestrator_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.orchestrator_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgERC20DeployedClaim::~MsgERC20DeployedClaim() {
  // @@protoc_insertion_point(destructor:injective.peggy.v1.MsgERC20DeployedClaim)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgERC20DeployedClaim::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.cosmos_denom_.Destroy();
  _impl_.token_contract_.Destroy();
  _impl_.name_.Destroy();
  _impl_.symbol_.Destroy();
  _impl_.orchestrator_.Destroy();
}

void MsgERC20DeployedClaim::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgERC20DeployedClaim::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.peggy.v1.MsgERC20DeployedClaim)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.cosmos_denom_.ClearToEmpty();
  _impl_.token_contract_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.symbol_.ClearToEmpty();
  _impl_.orchestrator_.ClearToEmpty();
  ::memset(&_impl_.event_nonce_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.decimals_) -
      reinterpret_cast<char*>(&_impl_.event_nonce_)) + sizeof(_impl_.decimals_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgERC20DeployedClaim::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 event_nonce = 1 [json_name = "eventNonce"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.event_nonce_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // uint64 block_height = 2 [json_name = "blockHeight"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          _impl_.block_height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string cosmos_denom = 3 [json_name = "cosmosDenom"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_cosmos_denom();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.MsgERC20DeployedClaim.cosmos_denom"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string token_contract = 4 [json_name = "tokenContract"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_token_contract();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.MsgERC20DeployedClaim.token_contract"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string name = 5 [json_name = "name"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.MsgERC20DeployedClaim.name"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string symbol = 6 [json_name = "symbol"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_symbol();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.MsgERC20DeployedClaim.symbol"));
        } else {
          goto handle_unusual;
        }
        continue;
      // uint64 decimals = 7 [json_name = "decimals"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 56)) {
          _impl_.decimals_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string orchestrator = 8 [json_name = "orchestrator"];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_orchestrator();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.MsgERC20DeployedClaim.orchestrator"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgERC20DeployedClaim::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.peggy.v1.MsgERC20DeployedClaim)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 event_nonce = 1 [json_name = "eventNonce"];
  if (this->_internal_event_nonce() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_event_nonce(), target);
  }

  // uint64 block_height = 2 [json_name = "blockHeight"];
  if (this->_internal_block_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_block_height(), target);
  }

  // string cosmos_denom = 3 [json_name = "cosmosDenom"];
  if (!this->_internal_cosmos_denom().empty()) {
    const std::string& _s = this->_internal_cosmos_denom();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.MsgERC20DeployedClaim.cosmos_denom");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string token_contract = 4 [json_name = "tokenContract"];
  if (!this->_internal_token_contract().empty()) {
    const std::string& _s = this->_internal_token_contract();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.MsgERC20DeployedClaim.token_contract");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string name = 5 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.MsgERC20DeployedClaim.name");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // string symbol = 6 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    const std::string& _s = this->_internal_symbol();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.MsgERC20DeployedClaim.symbol");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // uint64 decimals = 7 [json_name = "decimals"];
  if (this->_internal_decimals() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        7, this->_internal_decimals(), target);
  }

  // string orchestrator = 8 [json_name = "orchestrator"];
  if (!this->_internal_orchestrator().empty()) {
    const std::string& _s = this->_internal_orchestrator();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.MsgERC20DeployedClaim.orchestrator");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.peggy.v1.MsgERC20DeployedClaim)
  return target;
}

::size_t MsgERC20DeployedClaim::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.peggy.v1.MsgERC20DeployedClaim)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string cosmos_denom = 3 [json_name = "cosmosDenom"];
  if (!this->_internal_cosmos_denom().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_cosmos_denom());
  }

  // string token_contract = 4 [json_name = "tokenContract"];
  if (!this->_internal_token_contract().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_token_contract());
  }

  // string name = 5 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string symbol = 6 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_symbol());
  }

  // string orchestrator = 8 [json_name = "orchestrator"];
  if (!this->_internal_orchestrator().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_orchestrator());
  }

  // uint64 event_nonce = 1 [json_name = "eventNonce"];
  if (this->_internal_event_nonce() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_event_nonce());
  }

  // uint64 block_height = 2 [json_name = "blockHeight"];
  if (this->_internal_block_height() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_block_height());
  }

  // uint64 decimals = 7 [json_name = "decimals"];
  if (this->_internal_decimals() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_decimals());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgERC20DeployedClaim::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgERC20DeployedClaim::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgERC20DeployedClaim::GetClassData() const { return &_class_data_; }


void MsgERC20DeployedClaim::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgERC20DeployedClaim*>(&to_msg);
  auto& from = static_cast<const MsgERC20DeployedClaim&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.peggy.v1.MsgERC20DeployedClaim)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_cosmos_denom().empty()) {
    _this->_internal_set_cosmos_denom(from._internal_cosmos_denom());
  }
  if (!from._internal_token_contract().empty()) {
    _this->_internal_set_token_contract(from._internal_token_contract());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_symbol().empty()) {
    _this->_internal_set_symbol(from._internal_symbol());
  }
  if (!from._internal_orchestrator().empty()) {
    _this->_internal_set_orchestrator(from._internal_orchestrator());
  }
  if (from._internal_event_nonce() != 0) {
    _this->_internal_set_event_nonce(from._internal_event_nonce());
  }
  if (from._internal_block_height() != 0) {
    _this->_internal_set_block_height(from._internal_block_height());
  }
  if (from._internal_decimals() != 0) {
    _this->_internal_set_decimals(from._internal_decimals());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgERC20DeployedClaim::CopyFrom(const MsgERC20DeployedClaim& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.peggy.v1.MsgERC20DeployedClaim)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgERC20DeployedClaim::IsInitialized() const {
  return true;
}

void MsgERC20DeployedClaim::InternalSwap(MsgERC20DeployedClaim* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cosmos_denom_, lhs_arena,
                                       &other->_impl_.cosmos_denom_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.token_contract_, lhs_arena,
                                       &other->_impl_.token_contract_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.symbol_, lhs_arena,
                                       &other->_impl_.symbol_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.orchestrator_, lhs_arena,
                                       &other->_impl_.orchestrator_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MsgERC20DeployedClaim, _impl_.decimals_)
      + sizeof(MsgERC20DeployedClaim::_impl_.decimals_)
      - PROTOBUF_FIELD_OFFSET(MsgERC20DeployedClaim, _impl_.event_nonce_)>(
          reinterpret_cast<char*>(&_impl_.event_nonce_),
          reinterpret_cast<char*>(&other->_impl_.event_nonce_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgERC20DeployedClaim::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fmsgs_2eproto[14]);
}
// ===================================================================

class MsgERC20DeployedClaimResponse::_Internal {
 public:
};

MsgERC20DeployedClaimResponse::MsgERC20DeployedClaimResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.MsgERC20DeployedClaimResponse)
}
MsgERC20DeployedClaimResponse::MsgERC20DeployedClaimResponse(const MsgERC20DeployedClaimResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgERC20DeployedClaimResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.MsgERC20DeployedClaimResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgERC20DeployedClaimResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgERC20DeployedClaimResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgERC20DeployedClaimResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fmsgs_2eproto[15]);
}
// ===================================================================

class MsgCancelSendToEth::_Internal {
 public:
};

MsgCancelSendToEth::MsgCancelSendToEth(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.MsgCancelSendToEth)
}
MsgCancelSendToEth::MsgCancelSendToEth(const MsgCancelSendToEth& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgCancelSendToEth* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.sender_) {}

    , decltype(_impl_.transaction_id_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sender().empty()) {
    _this->_impl_.sender_.Set(from._internal_sender(), _this->GetArenaForAllocation());
  }
  _this->_impl_.transaction_id_ = from._impl_.transaction_id_;
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.MsgCancelSendToEth)
}

inline void MsgCancelSendToEth::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.sender_) {}

    , decltype(_impl_.transaction_id_) { ::uint64_t{0u} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgCancelSendToEth::~MsgCancelSendToEth() {
  // @@protoc_insertion_point(destructor:injective.peggy.v1.MsgCancelSendToEth)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgCancelSendToEth::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.sender_.Destroy();
}

void MsgCancelSendToEth::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgCancelSendToEth::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.peggy.v1.MsgCancelSendToEth)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sender_.ClearToEmpty();
  _impl_.transaction_id_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgCancelSendToEth::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 transaction_id = 1 [json_name = "transactionId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.transaction_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string sender = 2 [json_name = "sender"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_sender();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.MsgCancelSendToEth.sender"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgCancelSendToEth::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.peggy.v1.MsgCancelSendToEth)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 transaction_id = 1 [json_name = "transactionId"];
  if (this->_internal_transaction_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_transaction_id(), target);
  }

  // string sender = 2 [json_name = "sender"];
  if (!this->_internal_sender().empty()) {
    const std::string& _s = this->_internal_sender();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.MsgCancelSendToEth.sender");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.peggy.v1.MsgCancelSendToEth)
  return target;
}

::size_t MsgCancelSendToEth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.peggy.v1.MsgCancelSendToEth)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string sender = 2 [json_name = "sender"];
  if (!this->_internal_sender().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_sender());
  }

  // uint64 transaction_id = 1 [json_name = "transactionId"];
  if (this->_internal_transaction_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_transaction_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgCancelSendToEth::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgCancelSendToEth::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgCancelSendToEth::GetClassData() const { return &_class_data_; }


void MsgCancelSendToEth::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgCancelSendToEth*>(&to_msg);
  auto& from = static_cast<const MsgCancelSendToEth&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.peggy.v1.MsgCancelSendToEth)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sender().empty()) {
    _this->_internal_set_sender(from._internal_sender());
  }
  if (from._internal_transaction_id() != 0) {
    _this->_internal_set_transaction_id(from._internal_transaction_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgCancelSendToEth::CopyFrom(const MsgCancelSendToEth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.peggy.v1.MsgCancelSendToEth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgCancelSendToEth::IsInitialized() const {
  return true;
}

void MsgCancelSendToEth::InternalSwap(MsgCancelSendToEth* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_, lhs_arena,
                                       &other->_impl_.sender_, rhs_arena);

  swap(_impl_.transaction_id_, other->_impl_.transaction_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgCancelSendToEth::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fmsgs_2eproto[16]);
}
// ===================================================================

class MsgCancelSendToEthResponse::_Internal {
 public:
};

MsgCancelSendToEthResponse::MsgCancelSendToEthResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.MsgCancelSendToEthResponse)
}
MsgCancelSendToEthResponse::MsgCancelSendToEthResponse(const MsgCancelSendToEthResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgCancelSendToEthResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.MsgCancelSendToEthResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgCancelSendToEthResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgCancelSendToEthResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgCancelSendToEthResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fmsgs_2eproto[17]);
}
// ===================================================================

class MsgSubmitBadSignatureEvidence::_Internal {
 public:
  using HasBits = decltype(std::declval<MsgSubmitBadSignatureEvidence>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MsgSubmitBadSignatureEvidence, _impl_._has_bits_);
  static const ::PROTOBUF_NAMESPACE_ID::Any& subject(const MsgSubmitBadSignatureEvidence* msg);
  static void set_has_subject(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::PROTOBUF_NAMESPACE_ID::Any&
MsgSubmitBadSignatureEvidence::_Internal::subject(const MsgSubmitBadSignatureEvidence* msg) {
  return *msg->_impl_.subject_;
}
void MsgSubmitBadSignatureEvidence::clear_subject() {
  if (_impl_.subject_ != nullptr) _impl_.subject_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
MsgSubmitBadSignatureEvidence::MsgSubmitBadSignatureEvidence(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.MsgSubmitBadSignatureEvidence)
}
MsgSubmitBadSignatureEvidence::MsgSubmitBadSignatureEvidence(const MsgSubmitBadSignatureEvidence& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgSubmitBadSignatureEvidence* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.signature_) {}

    , decltype(_impl_.sender_) {}

    , decltype(_impl_.subject_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.signature_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.signature_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_signature().empty()) {
    _this->_impl_.signature_.Set(from._internal_signature(), _this->GetArenaForAllocation());
  }
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sender().empty()) {
    _this->_impl_.sender_.Set(from._internal_sender(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.subject_ = new ::PROTOBUF_NAMESPACE_ID::Any(*from._impl_.subject_);
  }
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.MsgSubmitBadSignatureEvidence)
}

inline void MsgSubmitBadSignatureEvidence::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.signature_) {}

    , decltype(_impl_.sender_) {}

    , decltype(_impl_.subject_){nullptr}
  };
  _impl_.signature_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.signature_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgSubmitBadSignatureEvidence::~MsgSubmitBadSignatureEvidence() {
  // @@protoc_insertion_point(destructor:injective.peggy.v1.MsgSubmitBadSignatureEvidence)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgSubmitBadSignatureEvidence::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.signature_.Destroy();
  _impl_.sender_.Destroy();
  if (this != internal_default_instance()) delete _impl_.subject_;
}

void MsgSubmitBadSignatureEvidence::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgSubmitBadSignatureEvidence::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.peggy.v1.MsgSubmitBadSignatureEvidence)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.signature_.ClearToEmpty();
  _impl_.sender_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.subject_ != nullptr);
    _impl_.subject_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgSubmitBadSignatureEvidence::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.protobuf.Any subject = 1 [json_name = "subject"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_subject(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string signature = 2 [json_name = "signature"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_signature();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.MsgSubmitBadSignatureEvidence.signature"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string sender = 3 [json_name = "sender"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_sender();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.MsgSubmitBadSignatureEvidence.sender"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgSubmitBadSignatureEvidence::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.peggy.v1.MsgSubmitBadSignatureEvidence)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Any subject = 1 [json_name = "subject"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::subject(this),
        _Internal::subject(this).GetCachedSize(), target, stream);
  }

  // string signature = 2 [json_name = "signature"];
  if (!this->_internal_signature().empty()) {
    const std::string& _s = this->_internal_signature();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.MsgSubmitBadSignatureEvidence.signature");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string sender = 3 [json_name = "sender"];
  if (!this->_internal_sender().empty()) {
    const std::string& _s = this->_internal_sender();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.MsgSubmitBadSignatureEvidence.sender");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.peggy.v1.MsgSubmitBadSignatureEvidence)
  return target;
}

::size_t MsgSubmitBadSignatureEvidence::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.peggy.v1.MsgSubmitBadSignatureEvidence)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string signature = 2 [json_name = "signature"];
  if (!this->_internal_signature().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_signature());
  }

  // string sender = 3 [json_name = "sender"];
  if (!this->_internal_sender().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_sender());
  }

  // .google.protobuf.Any subject = 1 [json_name = "subject"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.subject_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgSubmitBadSignatureEvidence::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgSubmitBadSignatureEvidence::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgSubmitBadSignatureEvidence::GetClassData() const { return &_class_data_; }


void MsgSubmitBadSignatureEvidence::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgSubmitBadSignatureEvidence*>(&to_msg);
  auto& from = static_cast<const MsgSubmitBadSignatureEvidence&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.peggy.v1.MsgSubmitBadSignatureEvidence)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_signature().empty()) {
    _this->_internal_set_signature(from._internal_signature());
  }
  if (!from._internal_sender().empty()) {
    _this->_internal_set_sender(from._internal_sender());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_subject()->::PROTOBUF_NAMESPACE_ID::Any::MergeFrom(
        from._internal_subject());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgSubmitBadSignatureEvidence::CopyFrom(const MsgSubmitBadSignatureEvidence& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.peggy.v1.MsgSubmitBadSignatureEvidence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSubmitBadSignatureEvidence::IsInitialized() const {
  return true;
}

void MsgSubmitBadSignatureEvidence::InternalSwap(MsgSubmitBadSignatureEvidence* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.signature_, lhs_arena,
                                       &other->_impl_.signature_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_, lhs_arena,
                                       &other->_impl_.sender_, rhs_arena);
  swap(_impl_.subject_, other->_impl_.subject_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgSubmitBadSignatureEvidence::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fmsgs_2eproto[18]);
}
// ===================================================================

class MsgSubmitBadSignatureEvidenceResponse::_Internal {
 public:
};

MsgSubmitBadSignatureEvidenceResponse::MsgSubmitBadSignatureEvidenceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.MsgSubmitBadSignatureEvidenceResponse)
}
MsgSubmitBadSignatureEvidenceResponse::MsgSubmitBadSignatureEvidenceResponse(const MsgSubmitBadSignatureEvidenceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgSubmitBadSignatureEvidenceResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.MsgSubmitBadSignatureEvidenceResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgSubmitBadSignatureEvidenceResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgSubmitBadSignatureEvidenceResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgSubmitBadSignatureEvidenceResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fmsgs_2eproto[19]);
}
// ===================================================================

class MsgValsetUpdatedClaim::_Internal {
 public:
};

void MsgValsetUpdatedClaim::clear_members() {
  _internal_mutable_members()->Clear();
}
MsgValsetUpdatedClaim::MsgValsetUpdatedClaim(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.MsgValsetUpdatedClaim)
}
MsgValsetUpdatedClaim::MsgValsetUpdatedClaim(const MsgValsetUpdatedClaim& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgValsetUpdatedClaim* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.members_){from._impl_.members_}
    , decltype(_impl_.reward_amount_) {}

    , decltype(_impl_.reward_token_) {}

    , decltype(_impl_.orchestrator_) {}

    , decltype(_impl_.event_nonce_) {}

    , decltype(_impl_.valset_nonce_) {}

    , decltype(_impl_.block_height_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.reward_amount_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.reward_amount_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_reward_amount().empty()) {
    _this->_impl_.reward_amount_.Set(from._internal_reward_amount(), _this->GetArenaForAllocation());
  }
  _impl_.reward_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.reward_token_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_reward_token().empty()) {
    _this->_impl_.reward_token_.Set(from._internal_reward_token(), _this->GetArenaForAllocation());
  }
  _impl_.orchestrator_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.orchestrator_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_orchestrator().empty()) {
    _this->_impl_.orchestrator_.Set(from._internal_orchestrator(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.event_nonce_, &from._impl_.event_nonce_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.block_height_) -
    reinterpret_cast<char*>(&_impl_.event_nonce_)) + sizeof(_impl_.block_height_));
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.MsgValsetUpdatedClaim)
}

inline void MsgValsetUpdatedClaim::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.members_){arena}
    , decltype(_impl_.reward_amount_) {}

    , decltype(_impl_.reward_token_) {}

    , decltype(_impl_.orchestrator_) {}

    , decltype(_impl_.event_nonce_) { ::uint64_t{0u} }

    , decltype(_impl_.valset_nonce_) { ::uint64_t{0u} }

    , decltype(_impl_.block_height_) { ::uint64_t{0u} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.reward_amount_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.reward_amount_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.reward_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.reward_token_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.orchestrator_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.orchestrator_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgValsetUpdatedClaim::~MsgValsetUpdatedClaim() {
  // @@protoc_insertion_point(destructor:injective.peggy.v1.MsgValsetUpdatedClaim)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgValsetUpdatedClaim::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_members()->~RepeatedPtrField();
  _impl_.reward_amount_.Destroy();
  _impl_.reward_token_.Destroy();
  _impl_.orchestrator_.Destroy();
}

void MsgValsetUpdatedClaim::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgValsetUpdatedClaim::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.peggy.v1.MsgValsetUpdatedClaim)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_members()->Clear();
  _impl_.reward_amount_.ClearToEmpty();
  _impl_.reward_token_.ClearToEmpty();
  _impl_.orchestrator_.ClearToEmpty();
  ::memset(&_impl_.event_nonce_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.block_height_) -
      reinterpret_cast<char*>(&_impl_.event_nonce_)) + sizeof(_impl_.block_height_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgValsetUpdatedClaim::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 event_nonce = 1 [json_name = "eventNonce"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.event_nonce_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // uint64 valset_nonce = 2 [json_name = "valsetNonce"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          _impl_.valset_nonce_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // uint64 block_height = 3 [json_name = "blockHeight"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 24)) {
          _impl_.block_height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated .injective.peggy.v1.BridgeValidator members = 4 [json_name = "members"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_members(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // string reward_amount = 5 [json_name = "rewardAmount", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_reward_amount();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.MsgValsetUpdatedClaim.reward_amount"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string reward_token = 6 [json_name = "rewardToken"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_reward_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.MsgValsetUpdatedClaim.reward_token"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string orchestrator = 7 [json_name = "orchestrator"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_orchestrator();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.MsgValsetUpdatedClaim.orchestrator"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgValsetUpdatedClaim::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.peggy.v1.MsgValsetUpdatedClaim)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 event_nonce = 1 [json_name = "eventNonce"];
  if (this->_internal_event_nonce() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_event_nonce(), target);
  }

  // uint64 valset_nonce = 2 [json_name = "valsetNonce"];
  if (this->_internal_valset_nonce() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_valset_nonce(), target);
  }

  // uint64 block_height = 3 [json_name = "blockHeight"];
  if (this->_internal_block_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_block_height(), target);
  }

  // repeated .injective.peggy.v1.BridgeValidator members = 4 [json_name = "members"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_members_size()); i < n; i++) {
    const auto& repfield = this->_internal_members(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string reward_amount = 5 [json_name = "rewardAmount", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"];
  if (!this->_internal_reward_amount().empty()) {
    const std::string& _s = this->_internal_reward_amount();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.MsgValsetUpdatedClaim.reward_amount");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // string reward_token = 6 [json_name = "rewardToken"];
  if (!this->_internal_reward_token().empty()) {
    const std::string& _s = this->_internal_reward_token();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.MsgValsetUpdatedClaim.reward_token");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // string orchestrator = 7 [json_name = "orchestrator"];
  if (!this->_internal_orchestrator().empty()) {
    const std::string& _s = this->_internal_orchestrator();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.MsgValsetUpdatedClaim.orchestrator");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.peggy.v1.MsgValsetUpdatedClaim)
  return target;
}

::size_t MsgValsetUpdatedClaim::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.peggy.v1.MsgValsetUpdatedClaim)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .injective.peggy.v1.BridgeValidator members = 4 [json_name = "members"];
  total_size += 1UL * this->_internal_members_size();
  for (const auto& msg : this->_internal_members()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string reward_amount = 5 [json_name = "rewardAmount", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"];
  if (!this->_internal_reward_amount().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_reward_amount());
  }

  // string reward_token = 6 [json_name = "rewardToken"];
  if (!this->_internal_reward_token().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_reward_token());
  }

  // string orchestrator = 7 [json_name = "orchestrator"];
  if (!this->_internal_orchestrator().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_orchestrator());
  }

  // uint64 event_nonce = 1 [json_name = "eventNonce"];
  if (this->_internal_event_nonce() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_event_nonce());
  }

  // uint64 valset_nonce = 2 [json_name = "valsetNonce"];
  if (this->_internal_valset_nonce() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_valset_nonce());
  }

  // uint64 block_height = 3 [json_name = "blockHeight"];
  if (this->_internal_block_height() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_block_height());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgValsetUpdatedClaim::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgValsetUpdatedClaim::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgValsetUpdatedClaim::GetClassData() const { return &_class_data_; }


void MsgValsetUpdatedClaim::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgValsetUpdatedClaim*>(&to_msg);
  auto& from = static_cast<const MsgValsetUpdatedClaim&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.peggy.v1.MsgValsetUpdatedClaim)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_members()->MergeFrom(from._internal_members());
  if (!from._internal_reward_amount().empty()) {
    _this->_internal_set_reward_amount(from._internal_reward_amount());
  }
  if (!from._internal_reward_token().empty()) {
    _this->_internal_set_reward_token(from._internal_reward_token());
  }
  if (!from._internal_orchestrator().empty()) {
    _this->_internal_set_orchestrator(from._internal_orchestrator());
  }
  if (from._internal_event_nonce() != 0) {
    _this->_internal_set_event_nonce(from._internal_event_nonce());
  }
  if (from._internal_valset_nonce() != 0) {
    _this->_internal_set_valset_nonce(from._internal_valset_nonce());
  }
  if (from._internal_block_height() != 0) {
    _this->_internal_set_block_height(from._internal_block_height());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgValsetUpdatedClaim::CopyFrom(const MsgValsetUpdatedClaim& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.peggy.v1.MsgValsetUpdatedClaim)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgValsetUpdatedClaim::IsInitialized() const {
  return true;
}

void MsgValsetUpdatedClaim::InternalSwap(MsgValsetUpdatedClaim* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_members()->InternalSwap(other->_internal_mutable_members());
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reward_amount_, lhs_arena,
                                       &other->_impl_.reward_amount_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reward_token_, lhs_arena,
                                       &other->_impl_.reward_token_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.orchestrator_, lhs_arena,
                                       &other->_impl_.orchestrator_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MsgValsetUpdatedClaim, _impl_.block_height_)
      + sizeof(MsgValsetUpdatedClaim::_impl_.block_height_)
      - PROTOBUF_FIELD_OFFSET(MsgValsetUpdatedClaim, _impl_.event_nonce_)>(
          reinterpret_cast<char*>(&_impl_.event_nonce_),
          reinterpret_cast<char*>(&other->_impl_.event_nonce_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgValsetUpdatedClaim::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fmsgs_2eproto[20]);
}
// ===================================================================

class MsgValsetUpdatedClaimResponse::_Internal {
 public:
};

MsgValsetUpdatedClaimResponse::MsgValsetUpdatedClaimResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.MsgValsetUpdatedClaimResponse)
}
MsgValsetUpdatedClaimResponse::MsgValsetUpdatedClaimResponse(const MsgValsetUpdatedClaimResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgValsetUpdatedClaimResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.MsgValsetUpdatedClaimResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgValsetUpdatedClaimResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgValsetUpdatedClaimResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgValsetUpdatedClaimResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fmsgs_2eproto[21]);
}
// ===================================================================

class MsgUpdateParams::_Internal {
 public:
  using HasBits = decltype(std::declval<MsgUpdateParams>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MsgUpdateParams, _impl_._has_bits_);
  static const ::injective::peggy::v1::Params& params(const MsgUpdateParams* msg);
  static void set_has_params(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::injective::peggy::v1::Params&
MsgUpdateParams::_Internal::params(const MsgUpdateParams* msg) {
  return *msg->_impl_.params_;
}
void MsgUpdateParams::clear_params() {
  if (_impl_.params_ != nullptr) _impl_.params_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
MsgUpdateParams::MsgUpdateParams(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.MsgUpdateParams)
}
MsgUpdateParams::MsgUpdateParams(const MsgUpdateParams& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgUpdateParams* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.authority_) {}

    , decltype(_impl_.params_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.authority_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.authority_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_authority().empty()) {
    _this->_impl_.authority_.Set(from._internal_authority(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.params_ = new ::injective::peggy::v1::Params(*from._impl_.params_);
  }
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.MsgUpdateParams)
}

inline void MsgUpdateParams::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.authority_) {}

    , decltype(_impl_.params_){nullptr}
  };
  _impl_.authority_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.authority_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgUpdateParams::~MsgUpdateParams() {
  // @@protoc_insertion_point(destructor:injective.peggy.v1.MsgUpdateParams)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgUpdateParams::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.authority_.Destroy();
  if (this != internal_default_instance()) delete _impl_.params_;
}

void MsgUpdateParams::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgUpdateParams::Clear() {
// @@protoc_insertion_point(message_clear_start:injective.peggy.v1.MsgUpdateParams)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.authority_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.params_ != nullptr);
    _impl_.params_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgUpdateParams::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_authority();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "injective.peggy.v1.MsgUpdateParams.authority"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .injective.peggy.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgUpdateParams::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:injective.peggy.v1.MsgUpdateParams)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_authority().empty()) {
    const std::string& _s = this->_internal_authority();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "injective.peggy.v1.MsgUpdateParams.authority");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .injective.peggy.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:injective.peggy.v1.MsgUpdateParams)
  return target;
}

::size_t MsgUpdateParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:injective.peggy.v1.MsgUpdateParams)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_authority().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_authority());
  }

  // .injective.peggy.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgUpdateParams::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgUpdateParams::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgUpdateParams::GetClassData() const { return &_class_data_; }


void MsgUpdateParams::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgUpdateParams*>(&to_msg);
  auto& from = static_cast<const MsgUpdateParams&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:injective.peggy.v1.MsgUpdateParams)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_authority().empty()) {
    _this->_internal_set_authority(from._internal_authority());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_params()->::injective::peggy::v1::Params::MergeFrom(
        from._internal_params());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgUpdateParams::CopyFrom(const MsgUpdateParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:injective.peggy.v1.MsgUpdateParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgUpdateParams::IsInitialized() const {
  return true;
}

void MsgUpdateParams::InternalSwap(MsgUpdateParams* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.authority_, lhs_arena,
                                       &other->_impl_.authority_, rhs_arena);
  swap(_impl_.params_, other->_impl_.params_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgUpdateParams::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fmsgs_2eproto[22]);
}
// ===================================================================

class MsgUpdateParamsResponse::_Internal {
 public:
};

MsgUpdateParamsResponse::MsgUpdateParamsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:injective.peggy.v1.MsgUpdateParamsResponse)
}
MsgUpdateParamsResponse::MsgUpdateParamsResponse(const MsgUpdateParamsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgUpdateParamsResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:injective.peggy.v1.MsgUpdateParamsResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgUpdateParamsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgUpdateParamsResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgUpdateParamsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto_getter, &descriptor_table_injective_2fpeggy_2fv1_2fmsgs_2eproto_once,
      file_level_metadata_injective_2fpeggy_2fv1_2fmsgs_2eproto[23]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace peggy
}  // namespace injective
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::MsgSetOrchestratorAddresses*
Arena::CreateMaybeMessage< ::injective::peggy::v1::MsgSetOrchestratorAddresses >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::MsgSetOrchestratorAddresses >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::MsgSetOrchestratorAddressesResponse*
Arena::CreateMaybeMessage< ::injective::peggy::v1::MsgSetOrchestratorAddressesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::MsgSetOrchestratorAddressesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::MsgValsetConfirm*
Arena::CreateMaybeMessage< ::injective::peggy::v1::MsgValsetConfirm >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::MsgValsetConfirm >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::MsgValsetConfirmResponse*
Arena::CreateMaybeMessage< ::injective::peggy::v1::MsgValsetConfirmResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::MsgValsetConfirmResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::MsgSendToEth*
Arena::CreateMaybeMessage< ::injective::peggy::v1::MsgSendToEth >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::MsgSendToEth >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::MsgSendToEthResponse*
Arena::CreateMaybeMessage< ::injective::peggy::v1::MsgSendToEthResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::MsgSendToEthResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::MsgRequestBatch*
Arena::CreateMaybeMessage< ::injective::peggy::v1::MsgRequestBatch >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::MsgRequestBatch >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::MsgRequestBatchResponse*
Arena::CreateMaybeMessage< ::injective::peggy::v1::MsgRequestBatchResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::MsgRequestBatchResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::MsgConfirmBatch*
Arena::CreateMaybeMessage< ::injective::peggy::v1::MsgConfirmBatch >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::MsgConfirmBatch >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::MsgConfirmBatchResponse*
Arena::CreateMaybeMessage< ::injective::peggy::v1::MsgConfirmBatchResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::MsgConfirmBatchResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::MsgDepositClaim*
Arena::CreateMaybeMessage< ::injective::peggy::v1::MsgDepositClaim >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::MsgDepositClaim >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::MsgDepositClaimResponse*
Arena::CreateMaybeMessage< ::injective::peggy::v1::MsgDepositClaimResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::MsgDepositClaimResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::MsgWithdrawClaim*
Arena::CreateMaybeMessage< ::injective::peggy::v1::MsgWithdrawClaim >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::MsgWithdrawClaim >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::MsgWithdrawClaimResponse*
Arena::CreateMaybeMessage< ::injective::peggy::v1::MsgWithdrawClaimResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::MsgWithdrawClaimResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::MsgERC20DeployedClaim*
Arena::CreateMaybeMessage< ::injective::peggy::v1::MsgERC20DeployedClaim >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::MsgERC20DeployedClaim >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::MsgERC20DeployedClaimResponse*
Arena::CreateMaybeMessage< ::injective::peggy::v1::MsgERC20DeployedClaimResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::MsgERC20DeployedClaimResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::MsgCancelSendToEth*
Arena::CreateMaybeMessage< ::injective::peggy::v1::MsgCancelSendToEth >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::MsgCancelSendToEth >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::MsgCancelSendToEthResponse*
Arena::CreateMaybeMessage< ::injective::peggy::v1::MsgCancelSendToEthResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::MsgCancelSendToEthResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::MsgSubmitBadSignatureEvidence*
Arena::CreateMaybeMessage< ::injective::peggy::v1::MsgSubmitBadSignatureEvidence >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::MsgSubmitBadSignatureEvidence >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::MsgSubmitBadSignatureEvidenceResponse*
Arena::CreateMaybeMessage< ::injective::peggy::v1::MsgSubmitBadSignatureEvidenceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::MsgSubmitBadSignatureEvidenceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::MsgValsetUpdatedClaim*
Arena::CreateMaybeMessage< ::injective::peggy::v1::MsgValsetUpdatedClaim >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::MsgValsetUpdatedClaim >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::MsgValsetUpdatedClaimResponse*
Arena::CreateMaybeMessage< ::injective::peggy::v1::MsgValsetUpdatedClaimResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::MsgValsetUpdatedClaimResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::MsgUpdateParams*
Arena::CreateMaybeMessage< ::injective::peggy::v1::MsgUpdateParams >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::MsgUpdateParams >(arena);
}
template<> PROTOBUF_NOINLINE ::injective::peggy::v1::MsgUpdateParamsResponse*
Arena::CreateMaybeMessage< ::injective::peggy::v1::MsgUpdateParamsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::injective::peggy::v1::MsgUpdateParamsResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
