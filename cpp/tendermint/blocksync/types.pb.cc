// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tendermint/blocksync/types.proto

#include "tendermint/blocksync/types.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace tendermint {
namespace blocksync {
template <typename>
PROTOBUF_CONSTEXPR BlockRequest::BlockRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.height_)*/ ::int64_t{0}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BlockRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlockRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlockRequestDefaultTypeInternal() {}
  union {
    BlockRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlockRequestDefaultTypeInternal _BlockRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR NoBlockResponse::NoBlockResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.height_)*/ ::int64_t{0}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct NoBlockResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NoBlockResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NoBlockResponseDefaultTypeInternal() {}
  union {
    NoBlockResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NoBlockResponseDefaultTypeInternal _NoBlockResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR BlockResponse::BlockResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.block_)*/nullptr} {}
struct BlockResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlockResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlockResponseDefaultTypeInternal() {}
  union {
    BlockResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlockResponseDefaultTypeInternal _BlockResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR StatusRequest::StatusRequest(
    ::_pbi::ConstantInitialized) {}
struct StatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StatusRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StatusRequestDefaultTypeInternal() {}
  union {
    StatusRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StatusRequestDefaultTypeInternal _StatusRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR StatusResponse::StatusResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.height_)*/ ::int64_t{0}

  , /*decltype(_impl_.base_)*/ ::int64_t{0}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StatusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StatusResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StatusResponseDefaultTypeInternal() {}
  union {
    StatusResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StatusResponseDefaultTypeInternal _StatusResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR Message::Message(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.sum_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct MessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessageDefaultTypeInternal() {}
  union {
    Message _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageDefaultTypeInternal _Message_default_instance_;
}  // namespace blocksync
}  // namespace tendermint
static ::_pb::Metadata file_level_metadata_tendermint_2fblocksync_2ftypes_2eproto[6];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_tendermint_2fblocksync_2ftypes_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_tendermint_2fblocksync_2ftypes_2eproto = nullptr;
const ::uint32_t TableStruct_tendermint_2fblocksync_2ftypes_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tendermint::blocksync::BlockRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tendermint::blocksync::BlockRequest, _impl_.height_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tendermint::blocksync::NoBlockResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tendermint::blocksync::NoBlockResponse, _impl_.height_),
    PROTOBUF_FIELD_OFFSET(::tendermint::blocksync::BlockResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::tendermint::blocksync::BlockResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tendermint::blocksync::BlockResponse, _impl_.block_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tendermint::blocksync::StatusRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tendermint::blocksync::StatusResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tendermint::blocksync::StatusResponse, _impl_.height_),
    PROTOBUF_FIELD_OFFSET(::tendermint::blocksync::StatusResponse, _impl_.base_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tendermint::blocksync::Message, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::tendermint::blocksync::Message, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::tendermint::blocksync::Message, _impl_.sum_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::tendermint::blocksync::BlockRequest)},
        { 9, -1, -1, sizeof(::tendermint::blocksync::NoBlockResponse)},
        { 18, 27, -1, sizeof(::tendermint::blocksync::BlockResponse)},
        { 28, -1, -1, sizeof(::tendermint::blocksync::StatusRequest)},
        { 36, -1, -1, sizeof(::tendermint::blocksync::StatusResponse)},
        { 46, -1, -1, sizeof(::tendermint::blocksync::Message)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::tendermint::blocksync::_BlockRequest_default_instance_._instance,
    &::tendermint::blocksync::_NoBlockResponse_default_instance_._instance,
    &::tendermint::blocksync::_BlockResponse_default_instance_._instance,
    &::tendermint::blocksync::_StatusRequest_default_instance_._instance,
    &::tendermint::blocksync::_StatusResponse_default_instance_._instance,
    &::tendermint::blocksync::_Message_default_instance_._instance,
};
const char descriptor_table_protodef_tendermint_2fblocksync_2ftypes_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n tendermint/blocksync/types.proto\022\024tend"
    "ermint.blocksync\032\034tendermint/types/block"
    ".proto\"&\n\014BlockRequest\022\026\n\006height\030\001 \001(\003R\006"
    "height\")\n\017NoBlockResponse\022\026\n\006height\030\001 \001("
    "\003R\006height\">\n\rBlockResponse\022-\n\005block\030\001 \001("
    "\0132\027.tendermint.types.BlockR\005block\"\017\n\rSta"
    "tusRequest\"<\n\016StatusResponse\022\026\n\006height\030\001"
    " \001(\003R\006height\022\022\n\004base\030\002 \001(\003R\004base\"\235\003\n\007Mes"
    "sage\022I\n\rblock_request\030\001 \001(\0132\".tendermint"
    ".blocksync.BlockRequestH\000R\014blockRequest\022"
    "S\n\021no_block_response\030\002 \001(\0132%.tendermint."
    "blocksync.NoBlockResponseH\000R\017noBlockResp"
    "onse\022L\n\016block_response\030\003 \001(\0132#.tendermin"
    "t.blocksync.BlockResponseH\000R\rblockRespon"
    "se\022L\n\016status_request\030\004 \001(\0132#.tendermint."
    "blocksync.StatusRequestH\000R\rstatusRequest"
    "\022O\n\017status_response\030\005 \001(\0132$.tendermint.b"
    "locksync.StatusResponseH\000R\016statusRespons"
    "eB\005\n\003sumB\320\001\n\030com.tendermint.blocksyncB\nT"
    "ypesProtoP\001Z7github.com/cometbft/cometbf"
    "t/proto/tendermint/blocksync\242\002\003TBX\252\002\024Ten"
    "dermint.Blocksync\312\002\024Tendermint\\Blocksync"
    "\342\002 Tendermint\\Blocksync\\GPBMetadata\352\002\025Te"
    "ndermint::Blocksyncb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_tendermint_2fblocksync_2ftypes_2eproto_deps[1] =
    {
        &::descriptor_table_tendermint_2ftypes_2fblock_2eproto,
};
static ::absl::once_flag descriptor_table_tendermint_2fblocksync_2ftypes_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_tendermint_2fblocksync_2ftypes_2eproto = {
    false,
    false,
    947,
    descriptor_table_protodef_tendermint_2fblocksync_2ftypes_2eproto,
    "tendermint/blocksync/types.proto",
    &descriptor_table_tendermint_2fblocksync_2ftypes_2eproto_once,
    descriptor_table_tendermint_2fblocksync_2ftypes_2eproto_deps,
    1,
    6,
    schemas,
    file_default_instances,
    TableStruct_tendermint_2fblocksync_2ftypes_2eproto::offsets,
    file_level_metadata_tendermint_2fblocksync_2ftypes_2eproto,
    file_level_enum_descriptors_tendermint_2fblocksync_2ftypes_2eproto,
    file_level_service_descriptors_tendermint_2fblocksync_2ftypes_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_tendermint_2fblocksync_2ftypes_2eproto_getter() {
  return &descriptor_table_tendermint_2fblocksync_2ftypes_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_tendermint_2fblocksync_2ftypes_2eproto(&descriptor_table_tendermint_2fblocksync_2ftypes_2eproto);
namespace tendermint {
namespace blocksync {
// ===================================================================

class BlockRequest::_Internal {
 public:
};

BlockRequest::BlockRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tendermint.blocksync.BlockRequest)
}
BlockRequest::BlockRequest(const BlockRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tendermint.blocksync.BlockRequest)
}

inline void BlockRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.height_) { ::int64_t{0} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

BlockRequest::~BlockRequest() {
  // @@protoc_insertion_point(destructor:tendermint.blocksync.BlockRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BlockRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}

void BlockRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BlockRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tendermint.blocksync.BlockRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.height_ = ::int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BlockRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 height = 1 [json_name = "height"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* BlockRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tendermint.blocksync.BlockRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 height = 1 [json_name = "height"];
  if (this->_internal_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        1, this->_internal_height(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tendermint.blocksync.BlockRequest)
  return target;
}

::size_t BlockRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tendermint.blocksync.BlockRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 height = 1 [json_name = "height"];
  if (this->_internal_height() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_height());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BlockRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BlockRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BlockRequest::GetClassData() const { return &_class_data_; }


void BlockRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BlockRequest*>(&to_msg);
  auto& from = static_cast<const BlockRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tendermint.blocksync.BlockRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_height() != 0) {
    _this->_internal_set_height(from._internal_height());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BlockRequest::CopyFrom(const BlockRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tendermint.blocksync.BlockRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlockRequest::IsInitialized() const {
  return true;
}

void BlockRequest::InternalSwap(BlockRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);

  swap(_impl_.height_, other->_impl_.height_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BlockRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tendermint_2fblocksync_2ftypes_2eproto_getter, &descriptor_table_tendermint_2fblocksync_2ftypes_2eproto_once,
      file_level_metadata_tendermint_2fblocksync_2ftypes_2eproto[0]);
}
// ===================================================================

class NoBlockResponse::_Internal {
 public:
};

NoBlockResponse::NoBlockResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tendermint.blocksync.NoBlockResponse)
}
NoBlockResponse::NoBlockResponse(const NoBlockResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tendermint.blocksync.NoBlockResponse)
}

inline void NoBlockResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.height_) { ::int64_t{0} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

NoBlockResponse::~NoBlockResponse() {
  // @@protoc_insertion_point(destructor:tendermint.blocksync.NoBlockResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NoBlockResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}

void NoBlockResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NoBlockResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tendermint.blocksync.NoBlockResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.height_ = ::int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NoBlockResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 height = 1 [json_name = "height"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* NoBlockResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tendermint.blocksync.NoBlockResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 height = 1 [json_name = "height"];
  if (this->_internal_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        1, this->_internal_height(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tendermint.blocksync.NoBlockResponse)
  return target;
}

::size_t NoBlockResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tendermint.blocksync.NoBlockResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 height = 1 [json_name = "height"];
  if (this->_internal_height() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_height());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NoBlockResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NoBlockResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NoBlockResponse::GetClassData() const { return &_class_data_; }


void NoBlockResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NoBlockResponse*>(&to_msg);
  auto& from = static_cast<const NoBlockResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tendermint.blocksync.NoBlockResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_height() != 0) {
    _this->_internal_set_height(from._internal_height());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NoBlockResponse::CopyFrom(const NoBlockResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tendermint.blocksync.NoBlockResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NoBlockResponse::IsInitialized() const {
  return true;
}

void NoBlockResponse::InternalSwap(NoBlockResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);

  swap(_impl_.height_, other->_impl_.height_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NoBlockResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tendermint_2fblocksync_2ftypes_2eproto_getter, &descriptor_table_tendermint_2fblocksync_2ftypes_2eproto_once,
      file_level_metadata_tendermint_2fblocksync_2ftypes_2eproto[1]);
}
// ===================================================================

class BlockResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<BlockResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(BlockResponse, _impl_._has_bits_);
  static const ::tendermint::types::Block& block(const BlockResponse* msg);
  static void set_has_block(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::tendermint::types::Block&
BlockResponse::_Internal::block(const BlockResponse* msg) {
  return *msg->_impl_.block_;
}
void BlockResponse::clear_block() {
  if (_impl_.block_ != nullptr) _impl_.block_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
BlockResponse::BlockResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tendermint.blocksync.BlockResponse)
}
BlockResponse::BlockResponse(const BlockResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BlockResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.block_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.block_ = new ::tendermint::types::Block(*from._impl_.block_);
  }
  // @@protoc_insertion_point(copy_constructor:tendermint.blocksync.BlockResponse)
}

inline void BlockResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.block_){nullptr}
  };
}

BlockResponse::~BlockResponse() {
  // @@protoc_insertion_point(destructor:tendermint.blocksync.BlockResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BlockResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.block_;
}

void BlockResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BlockResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tendermint.blocksync.BlockResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.block_ != nullptr);
    _impl_.block_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BlockResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .tendermint.types.Block block = 1 [json_name = "block"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_block(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* BlockResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tendermint.blocksync.BlockResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .tendermint.types.Block block = 1 [json_name = "block"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::block(this),
        _Internal::block(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tendermint.blocksync.BlockResponse)
  return target;
}

::size_t BlockResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tendermint.blocksync.BlockResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .tendermint.types.Block block = 1 [json_name = "block"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.block_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BlockResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BlockResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BlockResponse::GetClassData() const { return &_class_data_; }


void BlockResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BlockResponse*>(&to_msg);
  auto& from = static_cast<const BlockResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tendermint.blocksync.BlockResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_block()->::tendermint::types::Block::MergeFrom(
        from._internal_block());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BlockResponse::CopyFrom(const BlockResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tendermint.blocksync.BlockResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlockResponse::IsInitialized() const {
  return true;
}

void BlockResponse::InternalSwap(BlockResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.block_, other->_impl_.block_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BlockResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tendermint_2fblocksync_2ftypes_2eproto_getter, &descriptor_table_tendermint_2fblocksync_2ftypes_2eproto_once,
      file_level_metadata_tendermint_2fblocksync_2ftypes_2eproto[2]);
}
// ===================================================================

class StatusRequest::_Internal {
 public:
};

StatusRequest::StatusRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:tendermint.blocksync.StatusRequest)
}
StatusRequest::StatusRequest(const StatusRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  StatusRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tendermint.blocksync.StatusRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StatusRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StatusRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata StatusRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tendermint_2fblocksync_2ftypes_2eproto_getter, &descriptor_table_tendermint_2fblocksync_2ftypes_2eproto_once,
      file_level_metadata_tendermint_2fblocksync_2ftypes_2eproto[3]);
}
// ===================================================================

class StatusResponse::_Internal {
 public:
};

StatusResponse::StatusResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tendermint.blocksync.StatusResponse)
}
StatusResponse::StatusResponse(const StatusResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tendermint.blocksync.StatusResponse)
}

inline void StatusResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.height_) { ::int64_t{0} }

    , decltype(_impl_.base_) { ::int64_t{0} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

StatusResponse::~StatusResponse() {
  // @@protoc_insertion_point(destructor:tendermint.blocksync.StatusResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StatusResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}

void StatusResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tendermint.blocksync.StatusResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.height_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.base_) -
      reinterpret_cast<char*>(&_impl_.height_)) + sizeof(_impl_.base_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StatusResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 height = 1 [json_name = "height"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // int64 base = 2 [json_name = "base"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          _impl_.base_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* StatusResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tendermint.blocksync.StatusResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 height = 1 [json_name = "height"];
  if (this->_internal_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        1, this->_internal_height(), target);
  }

  // int64 base = 2 [json_name = "base"];
  if (this->_internal_base() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        2, this->_internal_base(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tendermint.blocksync.StatusResponse)
  return target;
}

::size_t StatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tendermint.blocksync.StatusResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 height = 1 [json_name = "height"];
  if (this->_internal_height() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_height());
  }

  // int64 base = 2 [json_name = "base"];
  if (this->_internal_base() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_base());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StatusResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StatusResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StatusResponse::GetClassData() const { return &_class_data_; }


void StatusResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StatusResponse*>(&to_msg);
  auto& from = static_cast<const StatusResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tendermint.blocksync.StatusResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_height() != 0) {
    _this->_internal_set_height(from._internal_height());
  }
  if (from._internal_base() != 0) {
    _this->_internal_set_base(from._internal_base());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StatusResponse::CopyFrom(const StatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tendermint.blocksync.StatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatusResponse::IsInitialized() const {
  return true;
}

void StatusResponse::InternalSwap(StatusResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StatusResponse, _impl_.base_)
      + sizeof(StatusResponse::_impl_.base_)
      - PROTOBUF_FIELD_OFFSET(StatusResponse, _impl_.height_)>(
          reinterpret_cast<char*>(&_impl_.height_),
          reinterpret_cast<char*>(&other->_impl_.height_));
}

::PROTOBUF_NAMESPACE_ID::Metadata StatusResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tendermint_2fblocksync_2ftypes_2eproto_getter, &descriptor_table_tendermint_2fblocksync_2ftypes_2eproto_once,
      file_level_metadata_tendermint_2fblocksync_2ftypes_2eproto[4]);
}
// ===================================================================

class Message::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::tendermint::blocksync::Message, _impl_._oneof_case_);
  static const ::tendermint::blocksync::BlockRequest& block_request(const Message* msg);
  static const ::tendermint::blocksync::NoBlockResponse& no_block_response(const Message* msg);
  static const ::tendermint::blocksync::BlockResponse& block_response(const Message* msg);
  static const ::tendermint::blocksync::StatusRequest& status_request(const Message* msg);
  static const ::tendermint::blocksync::StatusResponse& status_response(const Message* msg);
};

const ::tendermint::blocksync::BlockRequest&
Message::_Internal::block_request(const Message* msg) {
  return *msg->_impl_.sum_.block_request_;
}
const ::tendermint::blocksync::NoBlockResponse&
Message::_Internal::no_block_response(const Message* msg) {
  return *msg->_impl_.sum_.no_block_response_;
}
const ::tendermint::blocksync::BlockResponse&
Message::_Internal::block_response(const Message* msg) {
  return *msg->_impl_.sum_.block_response_;
}
const ::tendermint::blocksync::StatusRequest&
Message::_Internal::status_request(const Message* msg) {
  return *msg->_impl_.sum_.status_request_;
}
const ::tendermint::blocksync::StatusResponse&
Message::_Internal::status_response(const Message* msg) {
  return *msg->_impl_.sum_.status_response_;
}
void Message::set_allocated_block_request(::tendermint::blocksync::BlockRequest* block_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_sum();
  if (block_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(block_request);
    if (message_arena != submessage_arena) {
      block_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, block_request, submessage_arena);
    }
    set_has_block_request();
    _impl_.sum_.block_request_ = block_request;
  }
  // @@protoc_insertion_point(field_set_allocated:tendermint.blocksync.Message.block_request)
}
void Message::set_allocated_no_block_response(::tendermint::blocksync::NoBlockResponse* no_block_response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_sum();
  if (no_block_response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(no_block_response);
    if (message_arena != submessage_arena) {
      no_block_response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, no_block_response, submessage_arena);
    }
    set_has_no_block_response();
    _impl_.sum_.no_block_response_ = no_block_response;
  }
  // @@protoc_insertion_point(field_set_allocated:tendermint.blocksync.Message.no_block_response)
}
void Message::set_allocated_block_response(::tendermint::blocksync::BlockResponse* block_response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_sum();
  if (block_response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(block_response);
    if (message_arena != submessage_arena) {
      block_response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, block_response, submessage_arena);
    }
    set_has_block_response();
    _impl_.sum_.block_response_ = block_response;
  }
  // @@protoc_insertion_point(field_set_allocated:tendermint.blocksync.Message.block_response)
}
void Message::set_allocated_status_request(::tendermint::blocksync::StatusRequest* status_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_sum();
  if (status_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(status_request);
    if (message_arena != submessage_arena) {
      status_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status_request, submessage_arena);
    }
    set_has_status_request();
    _impl_.sum_.status_request_ = status_request;
  }
  // @@protoc_insertion_point(field_set_allocated:tendermint.blocksync.Message.status_request)
}
void Message::set_allocated_status_response(::tendermint::blocksync::StatusResponse* status_response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_sum();
  if (status_response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(status_response);
    if (message_arena != submessage_arena) {
      status_response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status_response, submessage_arena);
    }
    set_has_status_response();
    _impl_.sum_.status_response_ = status_response;
  }
  // @@protoc_insertion_point(field_set_allocated:tendermint.blocksync.Message.status_response)
}
Message::Message(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tendermint.blocksync.Message)
}
Message::Message(const Message& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Message* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.sum_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_sum();
  switch (from.sum_case()) {
    case kBlockRequest: {
      _this->_internal_mutable_block_request()->::tendermint::blocksync::BlockRequest::MergeFrom(
          from._internal_block_request());
      break;
    }
    case kNoBlockResponse: {
      _this->_internal_mutable_no_block_response()->::tendermint::blocksync::NoBlockResponse::MergeFrom(
          from._internal_no_block_response());
      break;
    }
    case kBlockResponse: {
      _this->_internal_mutable_block_response()->::tendermint::blocksync::BlockResponse::MergeFrom(
          from._internal_block_response());
      break;
    }
    case kStatusRequest: {
      _this->_internal_mutable_status_request()->::tendermint::blocksync::StatusRequest::MergeFrom(
          from._internal_status_request());
      break;
    }
    case kStatusResponse: {
      _this->_internal_mutable_status_response()->::tendermint::blocksync::StatusResponse::MergeFrom(
          from._internal_status_response());
      break;
    }
    case SUM_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:tendermint.blocksync.Message)
}

inline void Message::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.sum_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_sum();
}

Message::~Message() {
  // @@protoc_insertion_point(destructor:tendermint.blocksync.Message)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Message::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_sum()) {
    clear_sum();
  }
}

void Message::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Message::clear_sum() {
// @@protoc_insertion_point(one_of_clear_start:tendermint.blocksync.Message)
  switch (sum_case()) {
    case kBlockRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.sum_.block_request_;
      }
      break;
    }
    case kNoBlockResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.sum_.no_block_response_;
      }
      break;
    }
    case kBlockResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.sum_.block_response_;
      }
      break;
    }
    case kStatusRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.sum_.status_request_;
      }
      break;
    }
    case kStatusResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.sum_.status_response_;
      }
      break;
    }
    case SUM_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = SUM_NOT_SET;
}


void Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tendermint.blocksync.Message)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_sum();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .tendermint.blocksync.BlockRequest block_request = 1 [json_name = "blockRequest"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_block_request(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .tendermint.blocksync.NoBlockResponse no_block_response = 2 [json_name = "noBlockResponse"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_no_block_response(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .tendermint.blocksync.BlockResponse block_response = 3 [json_name = "blockResponse"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_block_response(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .tendermint.blocksync.StatusRequest status_request = 4 [json_name = "statusRequest"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_status_request(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .tendermint.blocksync.StatusResponse status_response = 5 [json_name = "statusResponse"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_status_response(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* Message::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tendermint.blocksync.Message)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (sum_case()) {
    case kBlockRequest: {
      target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, _Internal::block_request(this),
          _Internal::block_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kNoBlockResponse: {
      target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, _Internal::no_block_response(this),
          _Internal::no_block_response(this).GetCachedSize(), target, stream);
      break;
    }
    case kBlockResponse: {
      target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, _Internal::block_response(this),
          _Internal::block_response(this).GetCachedSize(), target, stream);
      break;
    }
    case kStatusRequest: {
      target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, _Internal::status_request(this),
          _Internal::status_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kStatusResponse: {
      target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(5, _Internal::status_response(this),
          _Internal::status_response(this).GetCachedSize(), target, stream);
      break;
    }
    default: ;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tendermint.blocksync.Message)
  return target;
}

::size_t Message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tendermint.blocksync.Message)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (sum_case()) {
    // .tendermint.blocksync.BlockRequest block_request = 1 [json_name = "blockRequest"];
    case kBlockRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.sum_.block_request_);
      break;
    }
    // .tendermint.blocksync.NoBlockResponse no_block_response = 2 [json_name = "noBlockResponse"];
    case kNoBlockResponse: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.sum_.no_block_response_);
      break;
    }
    // .tendermint.blocksync.BlockResponse block_response = 3 [json_name = "blockResponse"];
    case kBlockResponse: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.sum_.block_response_);
      break;
    }
    // .tendermint.blocksync.StatusRequest status_request = 4 [json_name = "statusRequest"];
    case kStatusRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.sum_.status_request_);
      break;
    }
    // .tendermint.blocksync.StatusResponse status_response = 5 [json_name = "statusResponse"];
    case kStatusResponse: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.sum_.status_response_);
      break;
    }
    case SUM_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Message::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Message::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Message::GetClassData() const { return &_class_data_; }


void Message::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Message*>(&to_msg);
  auto& from = static_cast<const Message&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tendermint.blocksync.Message)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.sum_case()) {
    case kBlockRequest: {
      _this->_internal_mutable_block_request()->::tendermint::blocksync::BlockRequest::MergeFrom(
          from._internal_block_request());
      break;
    }
    case kNoBlockResponse: {
      _this->_internal_mutable_no_block_response()->::tendermint::blocksync::NoBlockResponse::MergeFrom(
          from._internal_no_block_response());
      break;
    }
    case kBlockResponse: {
      _this->_internal_mutable_block_response()->::tendermint::blocksync::BlockResponse::MergeFrom(
          from._internal_block_response());
      break;
    }
    case kStatusRequest: {
      _this->_internal_mutable_status_request()->::tendermint::blocksync::StatusRequest::MergeFrom(
          from._internal_status_request());
      break;
    }
    case kStatusResponse: {
      _this->_internal_mutable_status_response()->::tendermint::blocksync::StatusResponse::MergeFrom(
          from._internal_status_response());
      break;
    }
    case SUM_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Message::CopyFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tendermint.blocksync.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message::IsInitialized() const {
  return true;
}

void Message::InternalSwap(Message* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.sum_, other->_impl_.sum_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Message::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tendermint_2fblocksync_2ftypes_2eproto_getter, &descriptor_table_tendermint_2fblocksync_2ftypes_2eproto_once,
      file_level_metadata_tendermint_2fblocksync_2ftypes_2eproto[5]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace blocksync
}  // namespace tendermint
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::tendermint::blocksync::BlockRequest*
Arena::CreateMaybeMessage< ::tendermint::blocksync::BlockRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tendermint::blocksync::BlockRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::tendermint::blocksync::NoBlockResponse*
Arena::CreateMaybeMessage< ::tendermint::blocksync::NoBlockResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tendermint::blocksync::NoBlockResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::tendermint::blocksync::BlockResponse*
Arena::CreateMaybeMessage< ::tendermint::blocksync::BlockResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tendermint::blocksync::BlockResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::tendermint::blocksync::StatusRequest*
Arena::CreateMaybeMessage< ::tendermint::blocksync::StatusRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tendermint::blocksync::StatusRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::tendermint::blocksync::StatusResponse*
Arena::CreateMaybeMessage< ::tendermint::blocksync::StatusResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tendermint::blocksync::StatusResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::tendermint::blocksync::Message*
Arena::CreateMaybeMessage< ::tendermint::blocksync::Message >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tendermint::blocksync::Message >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
