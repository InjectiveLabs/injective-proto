// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ibc/applications/interchain_accounts/v1/packet.proto

#include "ibc/applications/interchain_accounts/v1/packet.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace ibc {
namespace applications {
namespace interchain_accounts {
namespace v1 {
template <typename>
PROTOBUF_CONSTEXPR InterchainAccountPacketData::InterchainAccountPacketData(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.memo_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.type_)*/ 0

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct InterchainAccountPacketDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InterchainAccountPacketDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InterchainAccountPacketDataDefaultTypeInternal() {}
  union {
    InterchainAccountPacketData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InterchainAccountPacketDataDefaultTypeInternal _InterchainAccountPacketData_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR CosmosTx::CosmosTx(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.messages_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CosmosTxDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CosmosTxDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CosmosTxDefaultTypeInternal() {}
  union {
    CosmosTx _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CosmosTxDefaultTypeInternal _CosmosTx_default_instance_;
}  // namespace v1
}  // namespace interchain_accounts
}  // namespace applications
}  // namespace ibc
static ::_pb::Metadata file_level_metadata_ibc_2fapplications_2finterchain_5faccounts_2fv1_2fpacket_2eproto[2];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_ibc_2fapplications_2finterchain_5faccounts_2fv1_2fpacket_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_ibc_2fapplications_2finterchain_5faccounts_2fv1_2fpacket_2eproto = nullptr;
const ::uint32_t TableStruct_ibc_2fapplications_2finterchain_5faccounts_2fv1_2fpacket_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ibc::applications::interchain_accounts::v1::InterchainAccountPacketData, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::applications::interchain_accounts::v1::InterchainAccountPacketData, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::ibc::applications::interchain_accounts::v1::InterchainAccountPacketData, _impl_.data_),
    PROTOBUF_FIELD_OFFSET(::ibc::applications::interchain_accounts::v1::InterchainAccountPacketData, _impl_.memo_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ibc::applications::interchain_accounts::v1::CosmosTx, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::applications::interchain_accounts::v1::CosmosTx, _impl_.messages_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::ibc::applications::interchain_accounts::v1::InterchainAccountPacketData)},
        { 11, -1, -1, sizeof(::ibc::applications::interchain_accounts::v1::CosmosTx)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::ibc::applications::interchain_accounts::v1::_InterchainAccountPacketData_default_instance_._instance,
    &::ibc::applications::interchain_accounts::v1::_CosmosTx_default_instance_._instance,
};
const char descriptor_table_protodef_ibc_2fapplications_2finterchain_5faccounts_2fv1_2fpacket_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n4ibc/applications/interchain_accounts/v"
    "1/packet.proto\022\'ibc.applications.interch"
    "ain_accounts.v1\032\031google/protobuf/any.pro"
    "to\032\024gogoproto/gogo.proto\"\210\001\n\033InterchainA"
    "ccountPacketData\022A\n\004type\030\001 \001(\0162-.ibc.app"
    "lications.interchain_accounts.v1.TypeR\004t"
    "ype\022\022\n\004data\030\002 \001(\014R\004data\022\022\n\004memo\030\003 \001(\tR\004m"
    "emo\"<\n\010CosmosTx\0220\n\010messages\030\001 \003(\0132\024.goog"
    "le.protobuf.AnyR\010messages*X\n\004Type\022%\n\020TYP"
    "E_UNSPECIFIED\020\000\032\017\212\235 \013UNSPECIFIED\022#\n\017TYPE"
    "_EXECUTE_TX\020\001\032\016\212\235 \nEXECUTE_TX\032\004\210\243\036\000B\274\002\n+"
    "com.ibc.applications.interchain_accounts"
    ".v1B\013PacketProtoP\001ZEgithub.com/cosmos/ib"
    "c-go/v7/modules/apps/27-interchain-accou"
    "nts/types\242\002\003IAI\252\002&Ibc.Applications.Inter"
    "chainAccounts.V1\312\002&Ibc\\Applications\\Inte"
    "rchainAccounts\\V1\342\0022Ibc\\Applications\\Int"
    "erchainAccounts\\V1\\GPBMetadata\352\002)Ibc::Ap"
    "plications::InterchainAccounts::V1b\006prot"
    "o3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fv1_2fpacket_2eproto_deps[2] =
    {
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_google_2fprotobuf_2fany_2eproto,
};
static ::absl::once_flag descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fv1_2fpacket_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fv1_2fpacket_2eproto = {
    false,
    false,
    762,
    descriptor_table_protodef_ibc_2fapplications_2finterchain_5faccounts_2fv1_2fpacket_2eproto,
    "ibc/applications/interchain_accounts/v1/packet.proto",
    &descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fv1_2fpacket_2eproto_once,
    descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fv1_2fpacket_2eproto_deps,
    2,
    2,
    schemas,
    file_default_instances,
    TableStruct_ibc_2fapplications_2finterchain_5faccounts_2fv1_2fpacket_2eproto::offsets,
    file_level_metadata_ibc_2fapplications_2finterchain_5faccounts_2fv1_2fpacket_2eproto,
    file_level_enum_descriptors_ibc_2fapplications_2finterchain_5faccounts_2fv1_2fpacket_2eproto,
    file_level_service_descriptors_ibc_2fapplications_2finterchain_5faccounts_2fv1_2fpacket_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fv1_2fpacket_2eproto_getter() {
  return &descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fv1_2fpacket_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_ibc_2fapplications_2finterchain_5faccounts_2fv1_2fpacket_2eproto(&descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fv1_2fpacket_2eproto);
namespace ibc {
namespace applications {
namespace interchain_accounts {
namespace v1 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Type_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fv1_2fpacket_2eproto);
  return file_level_enum_descriptors_ibc_2fapplications_2finterchain_5faccounts_2fv1_2fpacket_2eproto[0];
}
bool Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}
// ===================================================================

class InterchainAccountPacketData::_Internal {
 public:
};

InterchainAccountPacketData::InterchainAccountPacketData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.applications.interchain_accounts.v1.InterchainAccountPacketData)
}
InterchainAccountPacketData::InterchainAccountPacketData(const InterchainAccountPacketData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  InterchainAccountPacketData* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_) {}

    , decltype(_impl_.memo_) {}

    , decltype(_impl_.type_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data().empty()) {
    _this->_impl_.data_.Set(from._internal_data(), _this->GetArenaForAllocation());
  }
  _impl_.memo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.memo_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_memo().empty()) {
    _this->_impl_.memo_.Set(from._internal_memo(), _this->GetArenaForAllocation());
  }
  _this->_impl_.type_ = from._impl_.type_;
  // @@protoc_insertion_point(copy_constructor:ibc.applications.interchain_accounts.v1.InterchainAccountPacketData)
}

inline void InterchainAccountPacketData::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.data_) {}

    , decltype(_impl_.memo_) {}

    , decltype(_impl_.type_) { 0 }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.memo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.memo_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

InterchainAccountPacketData::~InterchainAccountPacketData() {
  // @@protoc_insertion_point(destructor:ibc.applications.interchain_accounts.v1.InterchainAccountPacketData)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InterchainAccountPacketData::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.data_.Destroy();
  _impl_.memo_.Destroy();
}

void InterchainAccountPacketData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void InterchainAccountPacketData::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.applications.interchain_accounts.v1.InterchainAccountPacketData)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.ClearToEmpty();
  _impl_.memo_.ClearToEmpty();
  _impl_.type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InterchainAccountPacketData::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ibc.applications.interchain_accounts.v1.Type type = 1 [json_name = "type"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          ::int32_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::ibc::applications::interchain_accounts::v1::Type>(val));
        } else {
          goto handle_unusual;
        }
        continue;
      // bytes data = 2 [json_name = "data"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_data();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string memo = 3 [json_name = "memo"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_memo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ibc.applications.interchain_accounts.v1.InterchainAccountPacketData.memo"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* InterchainAccountPacketData::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.applications.interchain_accounts.v1.InterchainAccountPacketData)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .ibc.applications.interchain_accounts.v1.Type type = 1 [json_name = "type"];
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_type(), target);
  }

  // bytes data = 2 [json_name = "data"];
  if (!this->_internal_data().empty()) {
    const std::string& _s = this->_internal_data();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  // string memo = 3 [json_name = "memo"];
  if (!this->_internal_memo().empty()) {
    const std::string& _s = this->_internal_memo();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "ibc.applications.interchain_accounts.v1.InterchainAccountPacketData.memo");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.applications.interchain_accounts.v1.InterchainAccountPacketData)
  return target;
}

::size_t InterchainAccountPacketData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.applications.interchain_accounts.v1.InterchainAccountPacketData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes data = 2 [json_name = "data"];
  if (!this->_internal_data().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
                                    this->_internal_data());
  }

  // string memo = 3 [json_name = "memo"];
  if (!this->_internal_memo().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_memo());
  }

  // .ibc.applications.interchain_accounts.v1.Type type = 1 [json_name = "type"];
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InterchainAccountPacketData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    InterchainAccountPacketData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InterchainAccountPacketData::GetClassData() const { return &_class_data_; }


void InterchainAccountPacketData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<InterchainAccountPacketData*>(&to_msg);
  auto& from = static_cast<const InterchainAccountPacketData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.applications.interchain_accounts.v1.InterchainAccountPacketData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  if (!from._internal_memo().empty()) {
    _this->_internal_set_memo(from._internal_memo());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InterchainAccountPacketData::CopyFrom(const InterchainAccountPacketData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.applications.interchain_accounts.v1.InterchainAccountPacketData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InterchainAccountPacketData::IsInitialized() const {
  return true;
}

void InterchainAccountPacketData::InternalSwap(InterchainAccountPacketData* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, lhs_arena,
                                       &other->_impl_.data_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.memo_, lhs_arena,
                                       &other->_impl_.memo_, rhs_arena);
  swap(_impl_.type_, other->_impl_.type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InterchainAccountPacketData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fv1_2fpacket_2eproto_getter, &descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fv1_2fpacket_2eproto_once,
      file_level_metadata_ibc_2fapplications_2finterchain_5faccounts_2fv1_2fpacket_2eproto[0]);
}
// ===================================================================

class CosmosTx::_Internal {
 public:
};

void CosmosTx::clear_messages() {
  _internal_mutable_messages()->Clear();
}
CosmosTx::CosmosTx(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.applications.interchain_accounts.v1.CosmosTx)
}
CosmosTx::CosmosTx(const CosmosTx& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CosmosTx* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.messages_){from._impl_.messages_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ibc.applications.interchain_accounts.v1.CosmosTx)
}

inline void CosmosTx::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.messages_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CosmosTx::~CosmosTx() {
  // @@protoc_insertion_point(destructor:ibc.applications.interchain_accounts.v1.CosmosTx)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CosmosTx::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_messages()->~RepeatedPtrField();
}

void CosmosTx::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CosmosTx::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.applications.interchain_accounts.v1.CosmosTx)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_messages()->Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CosmosTx::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .google.protobuf.Any messages = 1 [json_name = "messages"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_messages(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* CosmosTx::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.applications.interchain_accounts.v1.CosmosTx)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.protobuf.Any messages = 1 [json_name = "messages"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_messages_size()); i < n; i++) {
    const auto& repfield = this->_internal_messages(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.applications.interchain_accounts.v1.CosmosTx)
  return target;
}

::size_t CosmosTx::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.applications.interchain_accounts.v1.CosmosTx)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.protobuf.Any messages = 1 [json_name = "messages"];
  total_size += 1UL * this->_internal_messages_size();
  for (const auto& msg : this->_internal_messages()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CosmosTx::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CosmosTx::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CosmosTx::GetClassData() const { return &_class_data_; }


void CosmosTx::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CosmosTx*>(&to_msg);
  auto& from = static_cast<const CosmosTx&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.applications.interchain_accounts.v1.CosmosTx)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_messages()->MergeFrom(from._internal_messages());
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CosmosTx::CopyFrom(const CosmosTx& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.applications.interchain_accounts.v1.CosmosTx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CosmosTx::IsInitialized() const {
  return true;
}

void CosmosTx::InternalSwap(CosmosTx* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_messages()->InternalSwap(other->_internal_mutable_messages());
}

::PROTOBUF_NAMESPACE_ID::Metadata CosmosTx::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fv1_2fpacket_2eproto_getter, &descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fv1_2fpacket_2eproto_once,
      file_level_metadata_ibc_2fapplications_2finterchain_5faccounts_2fv1_2fpacket_2eproto[1]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace interchain_accounts
}  // namespace applications
}  // namespace ibc
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ibc::applications::interchain_accounts::v1::InterchainAccountPacketData*
Arena::CreateMaybeMessage< ::ibc::applications::interchain_accounts::v1::InterchainAccountPacketData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::applications::interchain_accounts::v1::InterchainAccountPacketData >(arena);
}
template<> PROTOBUF_NOINLINE ::ibc::applications::interchain_accounts::v1::CosmosTx*
Arena::CreateMaybeMessage< ::ibc::applications::interchain_accounts::v1::CosmosTx >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::applications::interchain_accounts::v1::CosmosTx >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
