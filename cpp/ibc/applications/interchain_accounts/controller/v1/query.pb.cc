// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ibc/applications/interchain_accounts/controller/v1/query.proto

#include "ibc/applications/interchain_accounts/controller/v1/query.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace ibc {
namespace applications {
namespace interchain_accounts {
namespace controller {
namespace v1 {
template <typename>
PROTOBUF_CONSTEXPR QueryInterchainAccountRequest::QueryInterchainAccountRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.owner_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.connection_id_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryInterchainAccountRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryInterchainAccountRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryInterchainAccountRequestDefaultTypeInternal() {}
  union {
    QueryInterchainAccountRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryInterchainAccountRequestDefaultTypeInternal _QueryInterchainAccountRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryInterchainAccountResponse::QueryInterchainAccountResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryInterchainAccountResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryInterchainAccountResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryInterchainAccountResponseDefaultTypeInternal() {}
  union {
    QueryInterchainAccountResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryInterchainAccountResponseDefaultTypeInternal _QueryInterchainAccountResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryParamsRequest::QueryParamsRequest(
    ::_pbi::ConstantInitialized) {}
struct QueryParamsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryParamsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryParamsRequestDefaultTypeInternal() {}
  union {
    QueryParamsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryParamsRequestDefaultTypeInternal _QueryParamsRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryParamsResponse::QueryParamsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.params_)*/nullptr} {}
struct QueryParamsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryParamsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryParamsResponseDefaultTypeInternal() {}
  union {
    QueryParamsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryParamsResponseDefaultTypeInternal _QueryParamsResponse_default_instance_;
}  // namespace v1
}  // namespace controller
}  // namespace interchain_accounts
}  // namespace applications
}  // namespace ibc
static ::_pb::Metadata file_level_metadata_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2fquery_2eproto[4];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2fquery_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2fquery_2eproto = nullptr;
const ::uint32_t TableStruct_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2fquery_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ibc::applications::interchain_accounts::controller::v1::QueryInterchainAccountRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::applications::interchain_accounts::controller::v1::QueryInterchainAccountRequest, _impl_.owner_),
    PROTOBUF_FIELD_OFFSET(::ibc::applications::interchain_accounts::controller::v1::QueryInterchainAccountRequest, _impl_.connection_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ibc::applications::interchain_accounts::controller::v1::QueryInterchainAccountResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::applications::interchain_accounts::controller::v1::QueryInterchainAccountResponse, _impl_.address_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ibc::applications::interchain_accounts::controller::v1::QueryParamsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::applications::interchain_accounts::controller::v1::QueryParamsResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::ibc::applications::interchain_accounts::controller::v1::QueryParamsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::applications::interchain_accounts::controller::v1::QueryParamsResponse, _impl_.params_),
    0,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::ibc::applications::interchain_accounts::controller::v1::QueryInterchainAccountRequest)},
        { 10, -1, -1, sizeof(::ibc::applications::interchain_accounts::controller::v1::QueryInterchainAccountResponse)},
        { 19, -1, -1, sizeof(::ibc::applications::interchain_accounts::controller::v1::QueryParamsRequest)},
        { 27, 36, -1, sizeof(::ibc::applications::interchain_accounts::controller::v1::QueryParamsResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::ibc::applications::interchain_accounts::controller::v1::_QueryInterchainAccountRequest_default_instance_._instance,
    &::ibc::applications::interchain_accounts::controller::v1::_QueryInterchainAccountResponse_default_instance_._instance,
    &::ibc::applications::interchain_accounts::controller::v1::_QueryParamsRequest_default_instance_._instance,
    &::ibc::applications::interchain_accounts::controller::v1::_QueryParamsResponse_default_instance_._instance,
};
const char descriptor_table_protodef_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2fquery_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n>ibc/applications/interchain_accounts/c"
    "ontroller/v1/query.proto\0222ibc.applicatio"
    "ns.interchain_accounts.controller.v1\032Cib"
    "c/applications/interchain_accounts/contr"
    "oller/v1/controller.proto\032\034google/api/an"
    "notations.proto\"Z\n\035QueryInterchainAccoun"
    "tRequest\022\024\n\005owner\030\001 \001(\tR\005owner\022#\n\rconnec"
    "tion_id\030\002 \001(\tR\014connectionId\":\n\036QueryInte"
    "rchainAccountResponse\022\030\n\007address\030\001 \001(\tR\007"
    "address\"\024\n\022QueryParamsRequest\"i\n\023QueryPa"
    "ramsResponse\022R\n\006params\030\001 \001(\0132:.ibc.appli"
    "cations.interchain_accounts.controller.v"
    "1.ParamsR\006params2\374\003\n\005Query\022\232\002\n\021Interchai"
    "nAccount\022Q.ibc.applications.interchain_a"
    "ccounts.controller.v1.QueryInterchainAcc"
    "ountRequest\032R.ibc.applications.interchai"
    "n_accounts.controller.v1.QueryInterchain"
    "AccountResponse\"^\202\323\344\223\002X\022V/ibc/apps/inter"
    "chain_accounts/controller/v1/owners/{own"
    "er}/connections/{connection_id}\022\325\001\n\006Para"
    "ms\022F.ibc.applications.interchain_account"
    "s.controller.v1.QueryParamsRequest\032G.ibc"
    ".applications.interchain_accounts.contro"
    "ller.v1.QueryParamsResponse\":\202\323\344\223\0024\0222/ib"
    "c/apps/interchain_accounts/controller/v1"
    "/paramsB\377\002\n6com.ibc.applications.interch"
    "ain_accounts.controller.v1B\nQueryProtoP\001"
    "ZPgithub.com/cosmos/ibc-go/v7/modules/ap"
    "ps/27-interchain-accounts/controller/typ"
    "es\242\002\004IAIC\252\0021Ibc.Applications.InterchainA"
    "ccounts.Controller.V1\312\0021Ibc\\Applications"
    "\\InterchainAccounts\\Controller\\V1\342\002=Ibc\\"
    "Applications\\InterchainAccounts\\Controll"
    "er\\V1\\GPBMetadata\352\0025Ibc::Applications::I"
    "nterchainAccounts::Controller::V1b\006proto"
    "3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2fquery_2eproto_deps[2] =
    {
        &::descriptor_table_google_2fapi_2fannotations_2eproto,
        &::descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2fcontroller_2eproto,
};
static ::absl::once_flag descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2fquery_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2fquery_2eproto = {
    false,
    false,
    1401,
    descriptor_table_protodef_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2fquery_2eproto,
    "ibc/applications/interchain_accounts/controller/v1/query.proto",
    &descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2fquery_2eproto_once,
    descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2fquery_2eproto_deps,
    2,
    4,
    schemas,
    file_default_instances,
    TableStruct_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2fquery_2eproto::offsets,
    file_level_metadata_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2fquery_2eproto,
    file_level_enum_descriptors_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2fquery_2eproto,
    file_level_service_descriptors_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2fquery_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2fquery_2eproto_getter() {
  return &descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2fquery_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2fquery_2eproto(&descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2fquery_2eproto);
namespace ibc {
namespace applications {
namespace interchain_accounts {
namespace controller {
namespace v1 {
// ===================================================================

class QueryInterchainAccountRequest::_Internal {
 public:
};

QueryInterchainAccountRequest::QueryInterchainAccountRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountRequest)
}
QueryInterchainAccountRequest::QueryInterchainAccountRequest(const QueryInterchainAccountRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryInterchainAccountRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.owner_) {}

    , decltype(_impl_.connection_id_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.owner_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.owner_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_owner().empty()) {
    _this->_impl_.owner_.Set(from._internal_owner(), _this->GetArenaForAllocation());
  }
  _impl_.connection_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.connection_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_connection_id().empty()) {
    _this->_impl_.connection_id_.Set(from._internal_connection_id(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountRequest)
}

inline void QueryInterchainAccountRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.owner_) {}

    , decltype(_impl_.connection_id_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.owner_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.owner_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.connection_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.connection_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryInterchainAccountRequest::~QueryInterchainAccountRequest() {
  // @@protoc_insertion_point(destructor:ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryInterchainAccountRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.owner_.Destroy();
  _impl_.connection_id_.Destroy();
}

void QueryInterchainAccountRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryInterchainAccountRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.owner_.ClearToEmpty();
  _impl_.connection_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryInterchainAccountRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string owner = 1 [json_name = "owner"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_owner();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountRequest.owner"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string connection_id = 2 [json_name = "connectionId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_connection_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountRequest.connection_id"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryInterchainAccountRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string owner = 1 [json_name = "owner"];
  if (!this->_internal_owner().empty()) {
    const std::string& _s = this->_internal_owner();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountRequest.owner");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string connection_id = 2 [json_name = "connectionId"];
  if (!this->_internal_connection_id().empty()) {
    const std::string& _s = this->_internal_connection_id();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountRequest.connection_id");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountRequest)
  return target;
}

::size_t QueryInterchainAccountRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string owner = 1 [json_name = "owner"];
  if (!this->_internal_owner().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_owner());
  }

  // string connection_id = 2 [json_name = "connectionId"];
  if (!this->_internal_connection_id().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_connection_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryInterchainAccountRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryInterchainAccountRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryInterchainAccountRequest::GetClassData() const { return &_class_data_; }


void QueryInterchainAccountRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryInterchainAccountRequest*>(&to_msg);
  auto& from = static_cast<const QueryInterchainAccountRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_owner().empty()) {
    _this->_internal_set_owner(from._internal_owner());
  }
  if (!from._internal_connection_id().empty()) {
    _this->_internal_set_connection_id(from._internal_connection_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryInterchainAccountRequest::CopyFrom(const QueryInterchainAccountRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryInterchainAccountRequest::IsInitialized() const {
  return true;
}

void QueryInterchainAccountRequest::InternalSwap(QueryInterchainAccountRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.owner_, lhs_arena,
                                       &other->_impl_.owner_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.connection_id_, lhs_arena,
                                       &other->_impl_.connection_id_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryInterchainAccountRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2fquery_2eproto_getter, &descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2fquery_2eproto_once,
      file_level_metadata_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2fquery_2eproto[0]);
}
// ===================================================================

class QueryInterchainAccountResponse::_Internal {
 public:
};

QueryInterchainAccountResponse::QueryInterchainAccountResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountResponse)
}
QueryInterchainAccountResponse::QueryInterchainAccountResponse(const QueryInterchainAccountResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryInterchainAccountResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.address_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_address().empty()) {
    _this->_impl_.address_.Set(from._internal_address(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountResponse)
}

inline void QueryInterchainAccountResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.address_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryInterchainAccountResponse::~QueryInterchainAccountResponse() {
  // @@protoc_insertion_point(destructor:ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryInterchainAccountResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.address_.Destroy();
}

void QueryInterchainAccountResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryInterchainAccountResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.address_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryInterchainAccountResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string address = 1 [json_name = "address"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountResponse.address"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryInterchainAccountResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1 [json_name = "address"];
  if (!this->_internal_address().empty()) {
    const std::string& _s = this->_internal_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountResponse.address");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountResponse)
  return target;
}

::size_t QueryInterchainAccountResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string address = 1 [json_name = "address"];
  if (!this->_internal_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryInterchainAccountResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryInterchainAccountResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryInterchainAccountResponse::GetClassData() const { return &_class_data_; }


void QueryInterchainAccountResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryInterchainAccountResponse*>(&to_msg);
  auto& from = static_cast<const QueryInterchainAccountResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_address().empty()) {
    _this->_internal_set_address(from._internal_address());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryInterchainAccountResponse::CopyFrom(const QueryInterchainAccountResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryInterchainAccountResponse::IsInitialized() const {
  return true;
}

void QueryInterchainAccountResponse::InternalSwap(QueryInterchainAccountResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.address_, lhs_arena,
                                       &other->_impl_.address_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryInterchainAccountResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2fquery_2eproto_getter, &descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2fquery_2eproto_once,
      file_level_metadata_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2fquery_2eproto[1]);
}
// ===================================================================

class QueryParamsRequest::_Internal {
 public:
};

QueryParamsRequest::QueryParamsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:ibc.applications.interchain_accounts.controller.v1.QueryParamsRequest)
}
QueryParamsRequest::QueryParamsRequest(const QueryParamsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  QueryParamsRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ibc.applications.interchain_accounts.controller.v1.QueryParamsRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryParamsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryParamsRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata QueryParamsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2fquery_2eproto_getter, &descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2fquery_2eproto_once,
      file_level_metadata_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2fquery_2eproto[2]);
}
// ===================================================================

class QueryParamsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryParamsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryParamsResponse, _impl_._has_bits_);
  static const ::ibc::applications::interchain_accounts::controller::v1::Params& params(const QueryParamsResponse* msg);
  static void set_has_params(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ibc::applications::interchain_accounts::controller::v1::Params&
QueryParamsResponse::_Internal::params(const QueryParamsResponse* msg) {
  return *msg->_impl_.params_;
}
void QueryParamsResponse::clear_params() {
  if (_impl_.params_ != nullptr) _impl_.params_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryParamsResponse::QueryParamsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.applications.interchain_accounts.controller.v1.QueryParamsResponse)
}
QueryParamsResponse::QueryParamsResponse(const QueryParamsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryParamsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.params_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.params_ = new ::ibc::applications::interchain_accounts::controller::v1::Params(*from._impl_.params_);
  }
  // @@protoc_insertion_point(copy_constructor:ibc.applications.interchain_accounts.controller.v1.QueryParamsResponse)
}

inline void QueryParamsResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.params_){nullptr}
  };
}

QueryParamsResponse::~QueryParamsResponse() {
  // @@protoc_insertion_point(destructor:ibc.applications.interchain_accounts.controller.v1.QueryParamsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryParamsResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.params_;
}

void QueryParamsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryParamsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.applications.interchain_accounts.controller.v1.QueryParamsResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.params_ != nullptr);
    _impl_.params_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryParamsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ibc.applications.interchain_accounts.controller.v1.Params params = 1 [json_name = "params"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryParamsResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.applications.interchain_accounts.controller.v1.QueryParamsResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .ibc.applications.interchain_accounts.controller.v1.Params params = 1 [json_name = "params"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.applications.interchain_accounts.controller.v1.QueryParamsResponse)
  return target;
}

::size_t QueryParamsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.applications.interchain_accounts.controller.v1.QueryParamsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ibc.applications.interchain_accounts.controller.v1.Params params = 1 [json_name = "params"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryParamsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryParamsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryParamsResponse::GetClassData() const { return &_class_data_; }


void QueryParamsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryParamsResponse*>(&to_msg);
  auto& from = static_cast<const QueryParamsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.applications.interchain_accounts.controller.v1.QueryParamsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_params()->::ibc::applications::interchain_accounts::controller::v1::Params::MergeFrom(
        from._internal_params());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryParamsResponse::CopyFrom(const QueryParamsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.applications.interchain_accounts.controller.v1.QueryParamsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryParamsResponse::IsInitialized() const {
  return true;
}

void QueryParamsResponse::InternalSwap(QueryParamsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.params_, other->_impl_.params_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryParamsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2fquery_2eproto_getter, &descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2fquery_2eproto_once,
      file_level_metadata_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2fquery_2eproto[3]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace controller
}  // namespace interchain_accounts
}  // namespace applications
}  // namespace ibc
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ibc::applications::interchain_accounts::controller::v1::QueryInterchainAccountRequest*
Arena::CreateMaybeMessage< ::ibc::applications::interchain_accounts::controller::v1::QueryInterchainAccountRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::applications::interchain_accounts::controller::v1::QueryInterchainAccountRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ibc::applications::interchain_accounts::controller::v1::QueryInterchainAccountResponse*
Arena::CreateMaybeMessage< ::ibc::applications::interchain_accounts::controller::v1::QueryInterchainAccountResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::applications::interchain_accounts::controller::v1::QueryInterchainAccountResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ibc::applications::interchain_accounts::controller::v1::QueryParamsRequest*
Arena::CreateMaybeMessage< ::ibc::applications::interchain_accounts::controller::v1::QueryParamsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::applications::interchain_accounts::controller::v1::QueryParamsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ibc::applications::interchain_accounts::controller::v1::QueryParamsResponse*
Arena::CreateMaybeMessage< ::ibc::applications::interchain_accounts::controller::v1::QueryParamsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::applications::interchain_accounts::controller::v1::QueryParamsResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
