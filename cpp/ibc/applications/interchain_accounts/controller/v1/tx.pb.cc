// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ibc/applications/interchain_accounts/controller/v1/tx.proto

#include "ibc/applications/interchain_accounts/controller/v1/tx.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace ibc {
namespace applications {
namespace interchain_accounts {
namespace controller {
namespace v1 {
template <typename>
PROTOBUF_CONSTEXPR MsgRegisterInterchainAccount::MsgRegisterInterchainAccount(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.owner_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.connection_id_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.version_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgRegisterInterchainAccountDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgRegisterInterchainAccountDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgRegisterInterchainAccountDefaultTypeInternal() {}
  union {
    MsgRegisterInterchainAccount _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgRegisterInterchainAccountDefaultTypeInternal _MsgRegisterInterchainAccount_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgRegisterInterchainAccountResponse::MsgRegisterInterchainAccountResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.channel_id_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.port_id_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgRegisterInterchainAccountResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgRegisterInterchainAccountResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgRegisterInterchainAccountResponseDefaultTypeInternal() {}
  union {
    MsgRegisterInterchainAccountResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgRegisterInterchainAccountResponseDefaultTypeInternal _MsgRegisterInterchainAccountResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgSendTx::MsgSendTx(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.owner_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.connection_id_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.packet_data_)*/nullptr
  , /*decltype(_impl_.relative_timeout_)*/ ::uint64_t{0u}
} {}
struct MsgSendTxDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgSendTxDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgSendTxDefaultTypeInternal() {}
  union {
    MsgSendTx _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgSendTxDefaultTypeInternal _MsgSendTx_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgSendTxResponse::MsgSendTxResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.sequence_)*/ ::uint64_t{0u}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgSendTxResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgSendTxResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgSendTxResponseDefaultTypeInternal() {}
  union {
    MsgSendTxResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgSendTxResponseDefaultTypeInternal _MsgSendTxResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgUpdateParams::MsgUpdateParams(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.authority_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.params_)*/nullptr} {}
struct MsgUpdateParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgUpdateParamsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgUpdateParamsDefaultTypeInternal() {}
  union {
    MsgUpdateParams _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgUpdateParamsDefaultTypeInternal _MsgUpdateParams_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgUpdateParamsResponse::MsgUpdateParamsResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgUpdateParamsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgUpdateParamsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgUpdateParamsResponseDefaultTypeInternal() {}
  union {
    MsgUpdateParamsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgUpdateParamsResponseDefaultTypeInternal _MsgUpdateParamsResponse_default_instance_;
}  // namespace v1
}  // namespace controller
}  // namespace interchain_accounts
}  // namespace applications
}  // namespace ibc
static ::_pb::Metadata file_level_metadata_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2ftx_2eproto[6];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2ftx_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2ftx_2eproto = nullptr;
const ::uint32_t TableStruct_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2ftx_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ibc::applications::interchain_accounts::controller::v1::MsgRegisterInterchainAccount, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::applications::interchain_accounts::controller::v1::MsgRegisterInterchainAccount, _impl_.owner_),
    PROTOBUF_FIELD_OFFSET(::ibc::applications::interchain_accounts::controller::v1::MsgRegisterInterchainAccount, _impl_.connection_id_),
    PROTOBUF_FIELD_OFFSET(::ibc::applications::interchain_accounts::controller::v1::MsgRegisterInterchainAccount, _impl_.version_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ibc::applications::interchain_accounts::controller::v1::MsgRegisterInterchainAccountResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::applications::interchain_accounts::controller::v1::MsgRegisterInterchainAccountResponse, _impl_.channel_id_),
    PROTOBUF_FIELD_OFFSET(::ibc::applications::interchain_accounts::controller::v1::MsgRegisterInterchainAccountResponse, _impl_.port_id_),
    PROTOBUF_FIELD_OFFSET(::ibc::applications::interchain_accounts::controller::v1::MsgSendTx, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::ibc::applications::interchain_accounts::controller::v1::MsgSendTx, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::applications::interchain_accounts::controller::v1::MsgSendTx, _impl_.owner_),
    PROTOBUF_FIELD_OFFSET(::ibc::applications::interchain_accounts::controller::v1::MsgSendTx, _impl_.connection_id_),
    PROTOBUF_FIELD_OFFSET(::ibc::applications::interchain_accounts::controller::v1::MsgSendTx, _impl_.packet_data_),
    PROTOBUF_FIELD_OFFSET(::ibc::applications::interchain_accounts::controller::v1::MsgSendTx, _impl_.relative_timeout_),
    ~0u,
    ~0u,
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ibc::applications::interchain_accounts::controller::v1::MsgSendTxResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::applications::interchain_accounts::controller::v1::MsgSendTxResponse, _impl_.sequence_),
    PROTOBUF_FIELD_OFFSET(::ibc::applications::interchain_accounts::controller::v1::MsgUpdateParams, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::ibc::applications::interchain_accounts::controller::v1::MsgUpdateParams, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::applications::interchain_accounts::controller::v1::MsgUpdateParams, _impl_.authority_),
    PROTOBUF_FIELD_OFFSET(::ibc::applications::interchain_accounts::controller::v1::MsgUpdateParams, _impl_.params_),
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ibc::applications::interchain_accounts::controller::v1::MsgUpdateParamsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::ibc::applications::interchain_accounts::controller::v1::MsgRegisterInterchainAccount)},
        { 11, -1, -1, sizeof(::ibc::applications::interchain_accounts::controller::v1::MsgRegisterInterchainAccountResponse)},
        { 21, 33, -1, sizeof(::ibc::applications::interchain_accounts::controller::v1::MsgSendTx)},
        { 37, -1, -1, sizeof(::ibc::applications::interchain_accounts::controller::v1::MsgSendTxResponse)},
        { 46, 56, -1, sizeof(::ibc::applications::interchain_accounts::controller::v1::MsgUpdateParams)},
        { 58, -1, -1, sizeof(::ibc::applications::interchain_accounts::controller::v1::MsgUpdateParamsResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::ibc::applications::interchain_accounts::controller::v1::_MsgRegisterInterchainAccount_default_instance_._instance,
    &::ibc::applications::interchain_accounts::controller::v1::_MsgRegisterInterchainAccountResponse_default_instance_._instance,
    &::ibc::applications::interchain_accounts::controller::v1::_MsgSendTx_default_instance_._instance,
    &::ibc::applications::interchain_accounts::controller::v1::_MsgSendTxResponse_default_instance_._instance,
    &::ibc::applications::interchain_accounts::controller::v1::_MsgUpdateParams_default_instance_._instance,
    &::ibc::applications::interchain_accounts::controller::v1::_MsgUpdateParamsResponse_default_instance_._instance,
};
const char descriptor_table_protodef_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2ftx_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n;ibc/applications/interchain_accounts/c"
    "ontroller/v1/tx.proto\0222ibc.applications."
    "interchain_accounts.controller.v1\032\024gogop"
    "roto/gogo.proto\0324ibc/applications/interc"
    "hain_accounts/v1/packet.proto\032Cibc/appli"
    "cations/interchain_accounts/controller/v"
    "1/controller.proto\032\027cosmos/msg/v1/msg.pr"
    "oto\"\203\001\n\034MsgRegisterInterchainAccount\022\024\n\005"
    "owner\030\001 \001(\tR\005owner\022#\n\rconnection_id\030\002 \001("
    "\tR\014connectionId\022\030\n\007version\030\003 \001(\tR\007versio"
    "n:\016\210\240\037\000\202\347\260*\005owner\"d\n$MsgRegisterIntercha"
    "inAccountResponse\022\035\n\nchannel_id\030\001 \001(\tR\tc"
    "hannelId\022\027\n\007port_id\030\002 \001(\tR\006portId:\004\210\240\037\000\""
    "\356\001\n\tMsgSendTx\022\024\n\005owner\030\001 \001(\tR\005owner\022#\n\rc"
    "onnection_id\030\002 \001(\tR\014connectionId\022k\n\013pack"
    "et_data\030\003 \001(\0132D.ibc.applications.interch"
    "ain_accounts.v1.InterchainAccountPacketD"
    "ataB\004\310\336\037\000R\npacketData\022)\n\020relative_timeou"
    "t\030\004 \001(\004R\017relativeTimeout:\016\210\240\037\000\202\347\260*\005owner"
    "\"5\n\021MsgSendTxResponse\022\032\n\010sequence\030\001 \001(\004R"
    "\010sequence:\004\210\240\037\000\"\235\001\n\017MsgUpdateParams\022\034\n\ta"
    "uthority\030\001 \001(\tR\tauthority\022X\n\006params\030\002 \001("
    "\0132:.ibc.applications.interchain_accounts"
    ".controller.v1.ParamsB\004\310\336\037\000R\006params:\022\210\240\037"
    "\000\202\347\260*\tauthority\"\031\n\027MsgUpdateParamsRespon"
    "se2\212\004\n\003Msg\022\307\001\n\031RegisterInterchainAccount"
    "\022P.ibc.applications.interchain_accounts."
    "controller.v1.MsgRegisterInterchainAccou"
    "nt\032X.ibc.applications.interchain_account"
    "s.controller.v1.MsgRegisterInterchainAcc"
    "ountResponse\022\216\001\n\006SendTx\022=.ibc.applicatio"
    "ns.interchain_accounts.controller.v1.Msg"
    "SendTx\032E.ibc.applications.interchain_acc"
    "ounts.controller.v1.MsgSendTxResponse\022\240\001"
    "\n\014UpdateParams\022C.ibc.applications.interc"
    "hain_accounts.controller.v1.MsgUpdatePar"
    "ams\032K.ibc.applications.interchain_accoun"
    "ts.controller.v1.MsgUpdateParamsResponse"
    "\032\005\200\347\260*\001B\374\002\n6com.ibc.applications.interch"
    "ain_accounts.controller.v1B\007TxProtoP\001ZPg"
    "ithub.com/cosmos/ibc-go/v7/modules/apps/"
    "27-interchain-accounts/controller/types\242"
    "\002\004IAIC\252\0021Ibc.Applications.InterchainAcco"
    "unts.Controller.V1\312\0021Ibc\\Applications\\In"
    "terchainAccounts\\Controller\\V1\342\002=Ibc\\App"
    "lications\\InterchainAccounts\\Controller\\"
    "V1\\GPBMetadata\352\0025Ibc::Applications::Inte"
    "rchainAccounts::Controller::V1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2ftx_2eproto_deps[4] =
    {
        &::descriptor_table_cosmos_2fmsg_2fv1_2fmsg_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2fcontroller_2eproto,
        &::descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fv1_2fpacket_2eproto,
};
static ::absl::once_flag descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2ftx_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2ftx_2eproto = {
    false,
    false,
    1918,
    descriptor_table_protodef_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2ftx_2eproto,
    "ibc/applications/interchain_accounts/controller/v1/tx.proto",
    &descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2ftx_2eproto_once,
    descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2ftx_2eproto_deps,
    4,
    6,
    schemas,
    file_default_instances,
    TableStruct_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2ftx_2eproto::offsets,
    file_level_metadata_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2ftx_2eproto,
    file_level_enum_descriptors_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2ftx_2eproto,
    file_level_service_descriptors_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2ftx_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2ftx_2eproto_getter() {
  return &descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2ftx_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2ftx_2eproto(&descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2ftx_2eproto);
namespace ibc {
namespace applications {
namespace interchain_accounts {
namespace controller {
namespace v1 {
// ===================================================================

class MsgRegisterInterchainAccount::_Internal {
 public:
};

MsgRegisterInterchainAccount::MsgRegisterInterchainAccount(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount)
}
MsgRegisterInterchainAccount::MsgRegisterInterchainAccount(const MsgRegisterInterchainAccount& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgRegisterInterchainAccount* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.owner_) {}

    , decltype(_impl_.connection_id_) {}

    , decltype(_impl_.version_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.owner_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.owner_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_owner().empty()) {
    _this->_impl_.owner_.Set(from._internal_owner(), _this->GetArenaForAllocation());
  }
  _impl_.connection_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.connection_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_connection_id().empty()) {
    _this->_impl_.connection_id_.Set(from._internal_connection_id(), _this->GetArenaForAllocation());
  }
  _impl_.version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.version_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_version().empty()) {
    _this->_impl_.version_.Set(from._internal_version(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount)
}

inline void MsgRegisterInterchainAccount::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.owner_) {}

    , decltype(_impl_.connection_id_) {}

    , decltype(_impl_.version_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.owner_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.owner_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.connection_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.connection_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.version_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgRegisterInterchainAccount::~MsgRegisterInterchainAccount() {
  // @@protoc_insertion_point(destructor:ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgRegisterInterchainAccount::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.owner_.Destroy();
  _impl_.connection_id_.Destroy();
  _impl_.version_.Destroy();
}

void MsgRegisterInterchainAccount::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgRegisterInterchainAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.owner_.ClearToEmpty();
  _impl_.connection_id_.ClearToEmpty();
  _impl_.version_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgRegisterInterchainAccount::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string owner = 1 [json_name = "owner"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_owner();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount.owner"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string connection_id = 2 [json_name = "connectionId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_connection_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount.connection_id"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string version = 3 [json_name = "version"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount.version"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgRegisterInterchainAccount::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string owner = 1 [json_name = "owner"];
  if (!this->_internal_owner().empty()) {
    const std::string& _s = this->_internal_owner();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount.owner");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string connection_id = 2 [json_name = "connectionId"];
  if (!this->_internal_connection_id().empty()) {
    const std::string& _s = this->_internal_connection_id();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount.connection_id");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string version = 3 [json_name = "version"];
  if (!this->_internal_version().empty()) {
    const std::string& _s = this->_internal_version();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount.version");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount)
  return target;
}

::size_t MsgRegisterInterchainAccount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string owner = 1 [json_name = "owner"];
  if (!this->_internal_owner().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_owner());
  }

  // string connection_id = 2 [json_name = "connectionId"];
  if (!this->_internal_connection_id().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_connection_id());
  }

  // string version = 3 [json_name = "version"];
  if (!this->_internal_version().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgRegisterInterchainAccount::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgRegisterInterchainAccount::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgRegisterInterchainAccount::GetClassData() const { return &_class_data_; }


void MsgRegisterInterchainAccount::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgRegisterInterchainAccount*>(&to_msg);
  auto& from = static_cast<const MsgRegisterInterchainAccount&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_owner().empty()) {
    _this->_internal_set_owner(from._internal_owner());
  }
  if (!from._internal_connection_id().empty()) {
    _this->_internal_set_connection_id(from._internal_connection_id());
  }
  if (!from._internal_version().empty()) {
    _this->_internal_set_version(from._internal_version());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgRegisterInterchainAccount::CopyFrom(const MsgRegisterInterchainAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgRegisterInterchainAccount::IsInitialized() const {
  return true;
}

void MsgRegisterInterchainAccount::InternalSwap(MsgRegisterInterchainAccount* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.owner_, lhs_arena,
                                       &other->_impl_.owner_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.connection_id_, lhs_arena,
                                       &other->_impl_.connection_id_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.version_, lhs_arena,
                                       &other->_impl_.version_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgRegisterInterchainAccount::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2ftx_2eproto_getter, &descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2ftx_2eproto_once,
      file_level_metadata_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2ftx_2eproto[0]);
}
// ===================================================================

class MsgRegisterInterchainAccountResponse::_Internal {
 public:
};

MsgRegisterInterchainAccountResponse::MsgRegisterInterchainAccountResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse)
}
MsgRegisterInterchainAccountResponse::MsgRegisterInterchainAccountResponse(const MsgRegisterInterchainAccountResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgRegisterInterchainAccountResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.channel_id_) {}

    , decltype(_impl_.port_id_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.channel_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.channel_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_channel_id().empty()) {
    _this->_impl_.channel_id_.Set(from._internal_channel_id(), _this->GetArenaForAllocation());
  }
  _impl_.port_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.port_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_port_id().empty()) {
    _this->_impl_.port_id_.Set(from._internal_port_id(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse)
}

inline void MsgRegisterInterchainAccountResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.channel_id_) {}

    , decltype(_impl_.port_id_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.channel_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.channel_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.port_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.port_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgRegisterInterchainAccountResponse::~MsgRegisterInterchainAccountResponse() {
  // @@protoc_insertion_point(destructor:ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgRegisterInterchainAccountResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.channel_id_.Destroy();
  _impl_.port_id_.Destroy();
}

void MsgRegisterInterchainAccountResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgRegisterInterchainAccountResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.channel_id_.ClearToEmpty();
  _impl_.port_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgRegisterInterchainAccountResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string channel_id = 1 [json_name = "channelId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_channel_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse.channel_id"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string port_id = 2 [json_name = "portId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_port_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse.port_id"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgRegisterInterchainAccountResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string channel_id = 1 [json_name = "channelId"];
  if (!this->_internal_channel_id().empty()) {
    const std::string& _s = this->_internal_channel_id();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse.channel_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string port_id = 2 [json_name = "portId"];
  if (!this->_internal_port_id().empty()) {
    const std::string& _s = this->_internal_port_id();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse.port_id");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse)
  return target;
}

::size_t MsgRegisterInterchainAccountResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string channel_id = 1 [json_name = "channelId"];
  if (!this->_internal_channel_id().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_channel_id());
  }

  // string port_id = 2 [json_name = "portId"];
  if (!this->_internal_port_id().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_port_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgRegisterInterchainAccountResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgRegisterInterchainAccountResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgRegisterInterchainAccountResponse::GetClassData() const { return &_class_data_; }


void MsgRegisterInterchainAccountResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgRegisterInterchainAccountResponse*>(&to_msg);
  auto& from = static_cast<const MsgRegisterInterchainAccountResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_channel_id().empty()) {
    _this->_internal_set_channel_id(from._internal_channel_id());
  }
  if (!from._internal_port_id().empty()) {
    _this->_internal_set_port_id(from._internal_port_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgRegisterInterchainAccountResponse::CopyFrom(const MsgRegisterInterchainAccountResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgRegisterInterchainAccountResponse::IsInitialized() const {
  return true;
}

void MsgRegisterInterchainAccountResponse::InternalSwap(MsgRegisterInterchainAccountResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.channel_id_, lhs_arena,
                                       &other->_impl_.channel_id_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.port_id_, lhs_arena,
                                       &other->_impl_.port_id_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgRegisterInterchainAccountResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2ftx_2eproto_getter, &descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2ftx_2eproto_once,
      file_level_metadata_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2ftx_2eproto[1]);
}
// ===================================================================

class MsgSendTx::_Internal {
 public:
  using HasBits = decltype(std::declval<MsgSendTx>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MsgSendTx, _impl_._has_bits_);
  static const ::ibc::applications::interchain_accounts::v1::InterchainAccountPacketData& packet_data(const MsgSendTx* msg);
  static void set_has_packet_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ibc::applications::interchain_accounts::v1::InterchainAccountPacketData&
MsgSendTx::_Internal::packet_data(const MsgSendTx* msg) {
  return *msg->_impl_.packet_data_;
}
void MsgSendTx::clear_packet_data() {
  if (_impl_.packet_data_ != nullptr) _impl_.packet_data_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
MsgSendTx::MsgSendTx(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.applications.interchain_accounts.controller.v1.MsgSendTx)
}
MsgSendTx::MsgSendTx(const MsgSendTx& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgSendTx* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.owner_) {}

    , decltype(_impl_.connection_id_) {}

    , decltype(_impl_.packet_data_){nullptr}
    , decltype(_impl_.relative_timeout_) {}
  };

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.owner_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.owner_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_owner().empty()) {
    _this->_impl_.owner_.Set(from._internal_owner(), _this->GetArenaForAllocation());
  }
  _impl_.connection_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.connection_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_connection_id().empty()) {
    _this->_impl_.connection_id_.Set(from._internal_connection_id(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.packet_data_ = new ::ibc::applications::interchain_accounts::v1::InterchainAccountPacketData(*from._impl_.packet_data_);
  }
  _this->_impl_.relative_timeout_ = from._impl_.relative_timeout_;
  // @@protoc_insertion_point(copy_constructor:ibc.applications.interchain_accounts.controller.v1.MsgSendTx)
}

inline void MsgSendTx::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.owner_) {}

    , decltype(_impl_.connection_id_) {}

    , decltype(_impl_.packet_data_){nullptr}
    , decltype(_impl_.relative_timeout_) { ::uint64_t{0u} }

  };
  _impl_.owner_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.owner_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.connection_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.connection_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgSendTx::~MsgSendTx() {
  // @@protoc_insertion_point(destructor:ibc.applications.interchain_accounts.controller.v1.MsgSendTx)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgSendTx::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.owner_.Destroy();
  _impl_.connection_id_.Destroy();
  if (this != internal_default_instance()) delete _impl_.packet_data_;
}

void MsgSendTx::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgSendTx::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.applications.interchain_accounts.controller.v1.MsgSendTx)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.owner_.ClearToEmpty();
  _impl_.connection_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.packet_data_ != nullptr);
    _impl_.packet_data_->Clear();
  }
  _impl_.relative_timeout_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgSendTx::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string owner = 1 [json_name = "owner"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_owner();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ibc.applications.interchain_accounts.controller.v1.MsgSendTx.owner"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string connection_id = 2 [json_name = "connectionId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_connection_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ibc.applications.interchain_accounts.controller.v1.MsgSendTx.connection_id"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .ibc.applications.interchain_accounts.v1.InterchainAccountPacketData packet_data = 3 [json_name = "packetData", (.gogoproto.nullable) = false];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_packet_data(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // uint64 relative_timeout = 4 [json_name = "relativeTimeout"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 32)) {
          _impl_.relative_timeout_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgSendTx::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.applications.interchain_accounts.controller.v1.MsgSendTx)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string owner = 1 [json_name = "owner"];
  if (!this->_internal_owner().empty()) {
    const std::string& _s = this->_internal_owner();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "ibc.applications.interchain_accounts.controller.v1.MsgSendTx.owner");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string connection_id = 2 [json_name = "connectionId"];
  if (!this->_internal_connection_id().empty()) {
    const std::string& _s = this->_internal_connection_id();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "ibc.applications.interchain_accounts.controller.v1.MsgSendTx.connection_id");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .ibc.applications.interchain_accounts.v1.InterchainAccountPacketData packet_data = 3 [json_name = "packetData", (.gogoproto.nullable) = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::packet_data(this),
        _Internal::packet_data(this).GetCachedSize(), target, stream);
  }

  // uint64 relative_timeout = 4 [json_name = "relativeTimeout"];
  if (this->_internal_relative_timeout() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this->_internal_relative_timeout(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.applications.interchain_accounts.controller.v1.MsgSendTx)
  return target;
}

::size_t MsgSendTx::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.applications.interchain_accounts.controller.v1.MsgSendTx)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string owner = 1 [json_name = "owner"];
  if (!this->_internal_owner().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_owner());
  }

  // string connection_id = 2 [json_name = "connectionId"];
  if (!this->_internal_connection_id().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_connection_id());
  }

  // .ibc.applications.interchain_accounts.v1.InterchainAccountPacketData packet_data = 3 [json_name = "packetData", (.gogoproto.nullable) = false];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.packet_data_);
  }

  // uint64 relative_timeout = 4 [json_name = "relativeTimeout"];
  if (this->_internal_relative_timeout() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_relative_timeout());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgSendTx::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgSendTx::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgSendTx::GetClassData() const { return &_class_data_; }


void MsgSendTx::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgSendTx*>(&to_msg);
  auto& from = static_cast<const MsgSendTx&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.applications.interchain_accounts.controller.v1.MsgSendTx)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_owner().empty()) {
    _this->_internal_set_owner(from._internal_owner());
  }
  if (!from._internal_connection_id().empty()) {
    _this->_internal_set_connection_id(from._internal_connection_id());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_packet_data()->::ibc::applications::interchain_accounts::v1::InterchainAccountPacketData::MergeFrom(
        from._internal_packet_data());
  }
  if (from._internal_relative_timeout() != 0) {
    _this->_internal_set_relative_timeout(from._internal_relative_timeout());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgSendTx::CopyFrom(const MsgSendTx& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.applications.interchain_accounts.controller.v1.MsgSendTx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSendTx::IsInitialized() const {
  return true;
}

void MsgSendTx::InternalSwap(MsgSendTx* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.owner_, lhs_arena,
                                       &other->_impl_.owner_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.connection_id_, lhs_arena,
                                       &other->_impl_.connection_id_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MsgSendTx, _impl_.relative_timeout_)
      + sizeof(MsgSendTx::_impl_.relative_timeout_)
      - PROTOBUF_FIELD_OFFSET(MsgSendTx, _impl_.packet_data_)>(
          reinterpret_cast<char*>(&_impl_.packet_data_),
          reinterpret_cast<char*>(&other->_impl_.packet_data_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgSendTx::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2ftx_2eproto_getter, &descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2ftx_2eproto_once,
      file_level_metadata_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2ftx_2eproto[2]);
}
// ===================================================================

class MsgSendTxResponse::_Internal {
 public:
};

MsgSendTxResponse::MsgSendTxResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse)
}
MsgSendTxResponse::MsgSendTxResponse(const MsgSendTxResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse)
}

inline void MsgSendTxResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.sequence_) { ::uint64_t{0u} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

MsgSendTxResponse::~MsgSendTxResponse() {
  // @@protoc_insertion_point(destructor:ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgSendTxResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}

void MsgSendTxResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgSendTxResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sequence_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgSendTxResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 sequence = 1 [json_name = "sequence"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.sequence_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgSendTxResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 sequence = 1 [json_name = "sequence"];
  if (this->_internal_sequence() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_sequence(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse)
  return target;
}

::size_t MsgSendTxResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 sequence = 1 [json_name = "sequence"];
  if (this->_internal_sequence() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_sequence());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgSendTxResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgSendTxResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgSendTxResponse::GetClassData() const { return &_class_data_; }


void MsgSendTxResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgSendTxResponse*>(&to_msg);
  auto& from = static_cast<const MsgSendTxResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_sequence() != 0) {
    _this->_internal_set_sequence(from._internal_sequence());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgSendTxResponse::CopyFrom(const MsgSendTxResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSendTxResponse::IsInitialized() const {
  return true;
}

void MsgSendTxResponse::InternalSwap(MsgSendTxResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);

  swap(_impl_.sequence_, other->_impl_.sequence_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgSendTxResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2ftx_2eproto_getter, &descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2ftx_2eproto_once,
      file_level_metadata_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2ftx_2eproto[3]);
}
// ===================================================================

class MsgUpdateParams::_Internal {
 public:
  using HasBits = decltype(std::declval<MsgUpdateParams>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MsgUpdateParams, _impl_._has_bits_);
  static const ::ibc::applications::interchain_accounts::controller::v1::Params& params(const MsgUpdateParams* msg);
  static void set_has_params(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ibc::applications::interchain_accounts::controller::v1::Params&
MsgUpdateParams::_Internal::params(const MsgUpdateParams* msg) {
  return *msg->_impl_.params_;
}
void MsgUpdateParams::clear_params() {
  if (_impl_.params_ != nullptr) _impl_.params_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
MsgUpdateParams::MsgUpdateParams(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams)
}
MsgUpdateParams::MsgUpdateParams(const MsgUpdateParams& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgUpdateParams* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.authority_) {}

    , decltype(_impl_.params_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.authority_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.authority_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_authority().empty()) {
    _this->_impl_.authority_.Set(from._internal_authority(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.params_ = new ::ibc::applications::interchain_accounts::controller::v1::Params(*from._impl_.params_);
  }
  // @@protoc_insertion_point(copy_constructor:ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams)
}

inline void MsgUpdateParams::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.authority_) {}

    , decltype(_impl_.params_){nullptr}
  };
  _impl_.authority_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.authority_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgUpdateParams::~MsgUpdateParams() {
  // @@protoc_insertion_point(destructor:ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgUpdateParams::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.authority_.Destroy();
  if (this != internal_default_instance()) delete _impl_.params_;
}

void MsgUpdateParams::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgUpdateParams::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.authority_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.params_ != nullptr);
    _impl_.params_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgUpdateParams::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string authority = 1 [json_name = "authority"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_authority();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams.authority"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .ibc.applications.interchain_accounts.controller.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgUpdateParams::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string authority = 1 [json_name = "authority"];
  if (!this->_internal_authority().empty()) {
    const std::string& _s = this->_internal_authority();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams.authority");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .ibc.applications.interchain_accounts.controller.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams)
  return target;
}

::size_t MsgUpdateParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string authority = 1 [json_name = "authority"];
  if (!this->_internal_authority().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_authority());
  }

  // .ibc.applications.interchain_accounts.controller.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgUpdateParams::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgUpdateParams::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgUpdateParams::GetClassData() const { return &_class_data_; }


void MsgUpdateParams::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgUpdateParams*>(&to_msg);
  auto& from = static_cast<const MsgUpdateParams&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_authority().empty()) {
    _this->_internal_set_authority(from._internal_authority());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_params()->::ibc::applications::interchain_accounts::controller::v1::Params::MergeFrom(
        from._internal_params());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgUpdateParams::CopyFrom(const MsgUpdateParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgUpdateParams::IsInitialized() const {
  return true;
}

void MsgUpdateParams::InternalSwap(MsgUpdateParams* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.authority_, lhs_arena,
                                       &other->_impl_.authority_, rhs_arena);
  swap(_impl_.params_, other->_impl_.params_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgUpdateParams::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2ftx_2eproto_getter, &descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2ftx_2eproto_once,
      file_level_metadata_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2ftx_2eproto[4]);
}
// ===================================================================

class MsgUpdateParamsResponse::_Internal {
 public:
};

MsgUpdateParamsResponse::MsgUpdateParamsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:ibc.applications.interchain_accounts.controller.v1.MsgUpdateParamsResponse)
}
MsgUpdateParamsResponse::MsgUpdateParamsResponse(const MsgUpdateParamsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgUpdateParamsResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ibc.applications.interchain_accounts.controller.v1.MsgUpdateParamsResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgUpdateParamsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgUpdateParamsResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgUpdateParamsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2ftx_2eproto_getter, &descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2ftx_2eproto_once,
      file_level_metadata_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2ftx_2eproto[5]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace controller
}  // namespace interchain_accounts
}  // namespace applications
}  // namespace ibc
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ibc::applications::interchain_accounts::controller::v1::MsgRegisterInterchainAccount*
Arena::CreateMaybeMessage< ::ibc::applications::interchain_accounts::controller::v1::MsgRegisterInterchainAccount >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::applications::interchain_accounts::controller::v1::MsgRegisterInterchainAccount >(arena);
}
template<> PROTOBUF_NOINLINE ::ibc::applications::interchain_accounts::controller::v1::MsgRegisterInterchainAccountResponse*
Arena::CreateMaybeMessage< ::ibc::applications::interchain_accounts::controller::v1::MsgRegisterInterchainAccountResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::applications::interchain_accounts::controller::v1::MsgRegisterInterchainAccountResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ibc::applications::interchain_accounts::controller::v1::MsgSendTx*
Arena::CreateMaybeMessage< ::ibc::applications::interchain_accounts::controller::v1::MsgSendTx >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::applications::interchain_accounts::controller::v1::MsgSendTx >(arena);
}
template<> PROTOBUF_NOINLINE ::ibc::applications::interchain_accounts::controller::v1::MsgSendTxResponse*
Arena::CreateMaybeMessage< ::ibc::applications::interchain_accounts::controller::v1::MsgSendTxResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::applications::interchain_accounts::controller::v1::MsgSendTxResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ibc::applications::interchain_accounts::controller::v1::MsgUpdateParams*
Arena::CreateMaybeMessage< ::ibc::applications::interchain_accounts::controller::v1::MsgUpdateParams >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::applications::interchain_accounts::controller::v1::MsgUpdateParams >(arena);
}
template<> PROTOBUF_NOINLINE ::ibc::applications::interchain_accounts::controller::v1::MsgUpdateParamsResponse*
Arena::CreateMaybeMessage< ::ibc::applications::interchain_accounts::controller::v1::MsgUpdateParamsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::applications::interchain_accounts::controller::v1::MsgUpdateParamsResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
