// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ibc/applications/transfer/v1/tx.proto

#include "ibc/applications/transfer/v1/tx.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace ibc {
namespace applications {
namespace transfer {
namespace v1 {
template <typename>
PROTOBUF_CONSTEXPR MsgTransfer::MsgTransfer(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.source_port_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.source_channel_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.sender_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.receiver_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.memo_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.token_)*/nullptr
  , /*decltype(_impl_.timeout_height_)*/nullptr
  , /*decltype(_impl_.timeout_timestamp_)*/ ::uint64_t{0u}
} {}
struct MsgTransferDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgTransferDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgTransferDefaultTypeInternal() {}
  union {
    MsgTransfer _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgTransferDefaultTypeInternal _MsgTransfer_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgTransferResponse::MsgTransferResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.sequence_)*/ ::uint64_t{0u}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MsgTransferResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgTransferResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgTransferResponseDefaultTypeInternal() {}
  union {
    MsgTransferResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgTransferResponseDefaultTypeInternal _MsgTransferResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgUpdateParams::MsgUpdateParams(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.authority_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.params_)*/nullptr} {}
struct MsgUpdateParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgUpdateParamsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgUpdateParamsDefaultTypeInternal() {}
  union {
    MsgUpdateParams _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgUpdateParamsDefaultTypeInternal _MsgUpdateParams_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MsgUpdateParamsResponse::MsgUpdateParamsResponse(
    ::_pbi::ConstantInitialized) {}
struct MsgUpdateParamsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgUpdateParamsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgUpdateParamsResponseDefaultTypeInternal() {}
  union {
    MsgUpdateParamsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgUpdateParamsResponseDefaultTypeInternal _MsgUpdateParamsResponse_default_instance_;
}  // namespace v1
}  // namespace transfer
}  // namespace applications
}  // namespace ibc
static ::_pb::Metadata file_level_metadata_ibc_2fapplications_2ftransfer_2fv1_2ftx_2eproto[4];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_ibc_2fapplications_2ftransfer_2fv1_2ftx_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_ibc_2fapplications_2ftransfer_2fv1_2ftx_2eproto = nullptr;
const ::uint32_t TableStruct_ibc_2fapplications_2ftransfer_2fv1_2ftx_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::MsgTransfer, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::MsgTransfer, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::MsgTransfer, _impl_.source_port_),
    PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::MsgTransfer, _impl_.source_channel_),
    PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::MsgTransfer, _impl_.token_),
    PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::MsgTransfer, _impl_.sender_),
    PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::MsgTransfer, _impl_.receiver_),
    PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::MsgTransfer, _impl_.timeout_height_),
    PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::MsgTransfer, _impl_.timeout_timestamp_),
    PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::MsgTransfer, _impl_.memo_),
    ~0u,
    ~0u,
    0,
    ~0u,
    ~0u,
    1,
    ~0u,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::MsgTransferResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::MsgTransferResponse, _impl_.sequence_),
    PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::MsgUpdateParams, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::MsgUpdateParams, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::MsgUpdateParams, _impl_.authority_),
    PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::MsgUpdateParams, _impl_.params_),
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::MsgUpdateParamsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, 16, -1, sizeof(::ibc::applications::transfer::v1::MsgTransfer)},
        { 24, -1, -1, sizeof(::ibc::applications::transfer::v1::MsgTransferResponse)},
        { 33, 43, -1, sizeof(::ibc::applications::transfer::v1::MsgUpdateParams)},
        { 45, -1, -1, sizeof(::ibc::applications::transfer::v1::MsgUpdateParamsResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::ibc::applications::transfer::v1::_MsgTransfer_default_instance_._instance,
    &::ibc::applications::transfer::v1::_MsgTransferResponse_default_instance_._instance,
    &::ibc::applications::transfer::v1::_MsgUpdateParams_default_instance_._instance,
    &::ibc::applications::transfer::v1::_MsgUpdateParamsResponse_default_instance_._instance,
};
const char descriptor_table_protodef_ibc_2fapplications_2ftransfer_2fv1_2ftx_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n%ibc/applications/transfer/v1/tx.proto\022"
    "\034ibc.applications.transfer.v1\032\024gogoproto"
    "/gogo.proto\032\027cosmos/msg/v1/msg.proto\032\036co"
    "smos/base/v1beta1/coin.proto\032\037ibc/core/c"
    "lient/v1/client.proto\032+ibc/applications/"
    "transfer/v1/transfer.proto\"\333\002\n\013MsgTransf"
    "er\022\037\n\013source_port\030\001 \001(\tR\nsourcePort\022%\n\016s"
    "ource_channel\030\002 \001(\tR\rsourceChannel\0225\n\005to"
    "ken\030\003 \001(\0132\031.cosmos.base.v1beta1.CoinB\004\310\336"
    "\037\000R\005token\022\026\n\006sender\030\004 \001(\tR\006sender\022\032\n\010rec"
    "eiver\030\005 \001(\tR\010receiver\022G\n\016timeout_height\030"
    "\006 \001(\0132\032.ibc.core.client.v1.HeightB\004\310\336\037\000R"
    "\rtimeoutHeight\022+\n\021timeout_timestamp\030\007 \001("
    "\004R\020timeoutTimestamp\022\022\n\004memo\030\010 \001(\tR\004memo:"
    "\017\210\240\037\000\202\347\260*\006sender\"7\n\023MsgTransferResponse\022"
    "\032\n\010sequence\030\001 \001(\004R\010sequence:\004\210\240\037\000\"\207\001\n\017Ms"
    "gUpdateParams\022\034\n\tauthority\030\001 \001(\tR\tauthor"
    "ity\022B\n\006params\030\002 \001(\0132$.ibc.applications.t"
    "ransfer.v1.ParamsB\004\310\336\037\000R\006params:\022\210\240\037\000\202\347\260"
    "*\tauthority\"\031\n\027MsgUpdateParamsResponse2\354"
    "\001\n\003Msg\022h\n\010Transfer\022).ibc.applications.tr"
    "ansfer.v1.MsgTransfer\0321.ibc.applications"
    ".transfer.v1.MsgTransferResponse\022t\n\014Upda"
    "teParams\022-.ibc.applications.transfer.v1."
    "MsgUpdateParams\0325.ibc.applications.trans"
    "fer.v1.MsgUpdateParamsResponse\032\005\200\347\260*\001B\367\001"
    "\n com.ibc.applications.transfer.v1B\007TxPr"
    "otoP\001Z7github.com/cosmos/ibc-go/v7/modul"
    "es/apps/transfer/types\242\002\003IAT\252\002\034Ibc.Appli"
    "cations.Transfer.V1\312\002\034Ibc\\Applications\\T"
    "ransfer\\V1\342\002(Ibc\\Applications\\Transfer\\V"
    "1\\GPBMetadata\352\002\037Ibc::Applications::Trans"
    "fer::V1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2ftx_2eproto_deps[5] =
    {
        &::descriptor_table_cosmos_2fbase_2fv1beta1_2fcoin_2eproto,
        &::descriptor_table_cosmos_2fmsg_2fv1_2fmsg_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2ftransfer_2eproto,
        &::descriptor_table_ibc_2fcore_2fclient_2fv1_2fclient_2eproto,
};
static ::absl::once_flag descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2ftx_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2ftx_2eproto = {
    false,
    false,
    1295,
    descriptor_table_protodef_ibc_2fapplications_2ftransfer_2fv1_2ftx_2eproto,
    "ibc/applications/transfer/v1/tx.proto",
    &descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2ftx_2eproto_once,
    descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2ftx_2eproto_deps,
    5,
    4,
    schemas,
    file_default_instances,
    TableStruct_ibc_2fapplications_2ftransfer_2fv1_2ftx_2eproto::offsets,
    file_level_metadata_ibc_2fapplications_2ftransfer_2fv1_2ftx_2eproto,
    file_level_enum_descriptors_ibc_2fapplications_2ftransfer_2fv1_2ftx_2eproto,
    file_level_service_descriptors_ibc_2fapplications_2ftransfer_2fv1_2ftx_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2ftx_2eproto_getter() {
  return &descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2ftx_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_ibc_2fapplications_2ftransfer_2fv1_2ftx_2eproto(&descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2ftx_2eproto);
namespace ibc {
namespace applications {
namespace transfer {
namespace v1 {
// ===================================================================

class MsgTransfer::_Internal {
 public:
  using HasBits = decltype(std::declval<MsgTransfer>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MsgTransfer, _impl_._has_bits_);
  static const ::cosmos::base::v1beta1::Coin& token(const MsgTransfer* msg);
  static void set_has_token(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::ibc::core::client::v1::Height& timeout_height(const MsgTransfer* msg);
  static void set_has_timeout_height(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::cosmos::base::v1beta1::Coin&
MsgTransfer::_Internal::token(const MsgTransfer* msg) {
  return *msg->_impl_.token_;
}
const ::ibc::core::client::v1::Height&
MsgTransfer::_Internal::timeout_height(const MsgTransfer* msg) {
  return *msg->_impl_.timeout_height_;
}
void MsgTransfer::clear_token() {
  if (_impl_.token_ != nullptr) _impl_.token_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void MsgTransfer::clear_timeout_height() {
  if (_impl_.timeout_height_ != nullptr) _impl_.timeout_height_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
MsgTransfer::MsgTransfer(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.applications.transfer.v1.MsgTransfer)
}
MsgTransfer::MsgTransfer(const MsgTransfer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgTransfer* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.source_port_) {}

    , decltype(_impl_.source_channel_) {}

    , decltype(_impl_.sender_) {}

    , decltype(_impl_.receiver_) {}

    , decltype(_impl_.memo_) {}

    , decltype(_impl_.token_){nullptr}
    , decltype(_impl_.timeout_height_){nullptr}
    , decltype(_impl_.timeout_timestamp_) {}
  };

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.source_port_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.source_port_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_source_port().empty()) {
    _this->_impl_.source_port_.Set(from._internal_source_port(), _this->GetArenaForAllocation());
  }
  _impl_.source_channel_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.source_channel_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_source_channel().empty()) {
    _this->_impl_.source_channel_.Set(from._internal_source_channel(), _this->GetArenaForAllocation());
  }
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sender().empty()) {
    _this->_impl_.sender_.Set(from._internal_sender(), _this->GetArenaForAllocation());
  }
  _impl_.receiver_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.receiver_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_receiver().empty()) {
    _this->_impl_.receiver_.Set(from._internal_receiver(), _this->GetArenaForAllocation());
  }
  _impl_.memo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.memo_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_memo().empty()) {
    _this->_impl_.memo_.Set(from._internal_memo(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.token_ = new ::cosmos::base::v1beta1::Coin(*from._impl_.token_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.timeout_height_ = new ::ibc::core::client::v1::Height(*from._impl_.timeout_height_);
  }
  _this->_impl_.timeout_timestamp_ = from._impl_.timeout_timestamp_;
  // @@protoc_insertion_point(copy_constructor:ibc.applications.transfer.v1.MsgTransfer)
}

inline void MsgTransfer::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.source_port_) {}

    , decltype(_impl_.source_channel_) {}

    , decltype(_impl_.sender_) {}

    , decltype(_impl_.receiver_) {}

    , decltype(_impl_.memo_) {}

    , decltype(_impl_.token_){nullptr}
    , decltype(_impl_.timeout_height_){nullptr}
    , decltype(_impl_.timeout_timestamp_) { ::uint64_t{0u} }

  };
  _impl_.source_port_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.source_port_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.source_channel_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.source_channel_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.receiver_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.receiver_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.memo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.memo_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgTransfer::~MsgTransfer() {
  // @@protoc_insertion_point(destructor:ibc.applications.transfer.v1.MsgTransfer)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgTransfer::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.source_port_.Destroy();
  _impl_.source_channel_.Destroy();
  _impl_.sender_.Destroy();
  _impl_.receiver_.Destroy();
  _impl_.memo_.Destroy();
  if (this != internal_default_instance()) delete _impl_.token_;
  if (this != internal_default_instance()) delete _impl_.timeout_height_;
}

void MsgTransfer::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgTransfer::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.applications.transfer.v1.MsgTransfer)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.source_port_.ClearToEmpty();
  _impl_.source_channel_.ClearToEmpty();
  _impl_.sender_.ClearToEmpty();
  _impl_.receiver_.ClearToEmpty();
  _impl_.memo_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.token_ != nullptr);
      _impl_.token_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.timeout_height_ != nullptr);
      _impl_.timeout_height_->Clear();
    }
  }
  _impl_.timeout_timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgTransfer::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string source_port = 1 [json_name = "sourcePort"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_source_port();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ibc.applications.transfer.v1.MsgTransfer.source_port"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string source_channel = 2 [json_name = "sourceChannel"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_source_channel();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ibc.applications.transfer.v1.MsgTransfer.source_channel"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.v1beta1.Coin token = 3 [json_name = "token", (.gogoproto.nullable) = false];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_token(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string sender = 4 [json_name = "sender"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_sender();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ibc.applications.transfer.v1.MsgTransfer.sender"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string receiver = 5 [json_name = "receiver"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_receiver();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ibc.applications.transfer.v1.MsgTransfer.receiver"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .ibc.core.client.v1.Height timeout_height = 6 [json_name = "timeoutHeight", (.gogoproto.nullable) = false];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_timeout_height(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // uint64 timeout_timestamp = 7 [json_name = "timeoutTimestamp"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 56)) {
          _impl_.timeout_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string memo = 8 [json_name = "memo"];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_memo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ibc.applications.transfer.v1.MsgTransfer.memo"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgTransfer::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.applications.transfer.v1.MsgTransfer)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string source_port = 1 [json_name = "sourcePort"];
  if (!this->_internal_source_port().empty()) {
    const std::string& _s = this->_internal_source_port();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "ibc.applications.transfer.v1.MsgTransfer.source_port");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string source_channel = 2 [json_name = "sourceChannel"];
  if (!this->_internal_source_channel().empty()) {
    const std::string& _s = this->_internal_source_channel();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "ibc.applications.transfer.v1.MsgTransfer.source_channel");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.v1beta1.Coin token = 3 [json_name = "token", (.gogoproto.nullable) = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::token(this),
        _Internal::token(this).GetCachedSize(), target, stream);
  }

  // string sender = 4 [json_name = "sender"];
  if (!this->_internal_sender().empty()) {
    const std::string& _s = this->_internal_sender();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "ibc.applications.transfer.v1.MsgTransfer.sender");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string receiver = 5 [json_name = "receiver"];
  if (!this->_internal_receiver().empty()) {
    const std::string& _s = this->_internal_receiver();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "ibc.applications.transfer.v1.MsgTransfer.receiver");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // .ibc.core.client.v1.Height timeout_height = 6 [json_name = "timeoutHeight", (.gogoproto.nullable) = false];
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::timeout_height(this),
        _Internal::timeout_height(this).GetCachedSize(), target, stream);
  }

  // uint64 timeout_timestamp = 7 [json_name = "timeoutTimestamp"];
  if (this->_internal_timeout_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        7, this->_internal_timeout_timestamp(), target);
  }

  // string memo = 8 [json_name = "memo"];
  if (!this->_internal_memo().empty()) {
    const std::string& _s = this->_internal_memo();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "ibc.applications.transfer.v1.MsgTransfer.memo");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.applications.transfer.v1.MsgTransfer)
  return target;
}

::size_t MsgTransfer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.applications.transfer.v1.MsgTransfer)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string source_port = 1 [json_name = "sourcePort"];
  if (!this->_internal_source_port().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_source_port());
  }

  // string source_channel = 2 [json_name = "sourceChannel"];
  if (!this->_internal_source_channel().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_source_channel());
  }

  // string sender = 4 [json_name = "sender"];
  if (!this->_internal_sender().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_sender());
  }

  // string receiver = 5 [json_name = "receiver"];
  if (!this->_internal_receiver().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_receiver());
  }

  // string memo = 8 [json_name = "memo"];
  if (!this->_internal_memo().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_memo());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .cosmos.base.v1beta1.Coin token = 3 [json_name = "token", (.gogoproto.nullable) = false];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.token_);
    }

    // .ibc.core.client.v1.Height timeout_height = 6 [json_name = "timeoutHeight", (.gogoproto.nullable) = false];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.timeout_height_);
    }

  }
  // uint64 timeout_timestamp = 7 [json_name = "timeoutTimestamp"];
  if (this->_internal_timeout_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_timeout_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgTransfer::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgTransfer::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgTransfer::GetClassData() const { return &_class_data_; }


void MsgTransfer::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgTransfer*>(&to_msg);
  auto& from = static_cast<const MsgTransfer&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.applications.transfer.v1.MsgTransfer)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_source_port().empty()) {
    _this->_internal_set_source_port(from._internal_source_port());
  }
  if (!from._internal_source_channel().empty()) {
    _this->_internal_set_source_channel(from._internal_source_channel());
  }
  if (!from._internal_sender().empty()) {
    _this->_internal_set_sender(from._internal_sender());
  }
  if (!from._internal_receiver().empty()) {
    _this->_internal_set_receiver(from._internal_receiver());
  }
  if (!from._internal_memo().empty()) {
    _this->_internal_set_memo(from._internal_memo());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_token()->::cosmos::base::v1beta1::Coin::MergeFrom(
          from._internal_token());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_timeout_height()->::ibc::core::client::v1::Height::MergeFrom(
          from._internal_timeout_height());
    }
  }
  if (from._internal_timeout_timestamp() != 0) {
    _this->_internal_set_timeout_timestamp(from._internal_timeout_timestamp());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgTransfer::CopyFrom(const MsgTransfer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.applications.transfer.v1.MsgTransfer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgTransfer::IsInitialized() const {
  return true;
}

void MsgTransfer::InternalSwap(MsgTransfer* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.source_port_, lhs_arena,
                                       &other->_impl_.source_port_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.source_channel_, lhs_arena,
                                       &other->_impl_.source_channel_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_, lhs_arena,
                                       &other->_impl_.sender_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.receiver_, lhs_arena,
                                       &other->_impl_.receiver_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.memo_, lhs_arena,
                                       &other->_impl_.memo_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MsgTransfer, _impl_.timeout_timestamp_)
      + sizeof(MsgTransfer::_impl_.timeout_timestamp_)
      - PROTOBUF_FIELD_OFFSET(MsgTransfer, _impl_.token_)>(
          reinterpret_cast<char*>(&_impl_.token_),
          reinterpret_cast<char*>(&other->_impl_.token_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgTransfer::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2ftx_2eproto_getter, &descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2ftx_2eproto_once,
      file_level_metadata_ibc_2fapplications_2ftransfer_2fv1_2ftx_2eproto[0]);
}
// ===================================================================

class MsgTransferResponse::_Internal {
 public:
};

MsgTransferResponse::MsgTransferResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.applications.transfer.v1.MsgTransferResponse)
}
MsgTransferResponse::MsgTransferResponse(const MsgTransferResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ibc.applications.transfer.v1.MsgTransferResponse)
}

inline void MsgTransferResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.sequence_) { ::uint64_t{0u} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

MsgTransferResponse::~MsgTransferResponse() {
  // @@protoc_insertion_point(destructor:ibc.applications.transfer.v1.MsgTransferResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgTransferResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}

void MsgTransferResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgTransferResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.applications.transfer.v1.MsgTransferResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sequence_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgTransferResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 sequence = 1 [json_name = "sequence"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.sequence_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgTransferResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.applications.transfer.v1.MsgTransferResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 sequence = 1 [json_name = "sequence"];
  if (this->_internal_sequence() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_sequence(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.applications.transfer.v1.MsgTransferResponse)
  return target;
}

::size_t MsgTransferResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.applications.transfer.v1.MsgTransferResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 sequence = 1 [json_name = "sequence"];
  if (this->_internal_sequence() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_sequence());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgTransferResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgTransferResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgTransferResponse::GetClassData() const { return &_class_data_; }


void MsgTransferResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgTransferResponse*>(&to_msg);
  auto& from = static_cast<const MsgTransferResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.applications.transfer.v1.MsgTransferResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_sequence() != 0) {
    _this->_internal_set_sequence(from._internal_sequence());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgTransferResponse::CopyFrom(const MsgTransferResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.applications.transfer.v1.MsgTransferResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgTransferResponse::IsInitialized() const {
  return true;
}

void MsgTransferResponse::InternalSwap(MsgTransferResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);

  swap(_impl_.sequence_, other->_impl_.sequence_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgTransferResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2ftx_2eproto_getter, &descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2ftx_2eproto_once,
      file_level_metadata_ibc_2fapplications_2ftransfer_2fv1_2ftx_2eproto[1]);
}
// ===================================================================

class MsgUpdateParams::_Internal {
 public:
  using HasBits = decltype(std::declval<MsgUpdateParams>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MsgUpdateParams, _impl_._has_bits_);
  static const ::ibc::applications::transfer::v1::Params& params(const MsgUpdateParams* msg);
  static void set_has_params(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ibc::applications::transfer::v1::Params&
MsgUpdateParams::_Internal::params(const MsgUpdateParams* msg) {
  return *msg->_impl_.params_;
}
void MsgUpdateParams::clear_params() {
  if (_impl_.params_ != nullptr) _impl_.params_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
MsgUpdateParams::MsgUpdateParams(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.applications.transfer.v1.MsgUpdateParams)
}
MsgUpdateParams::MsgUpdateParams(const MsgUpdateParams& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgUpdateParams* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.authority_) {}

    , decltype(_impl_.params_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.authority_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.authority_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_authority().empty()) {
    _this->_impl_.authority_.Set(from._internal_authority(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.params_ = new ::ibc::applications::transfer::v1::Params(*from._impl_.params_);
  }
  // @@protoc_insertion_point(copy_constructor:ibc.applications.transfer.v1.MsgUpdateParams)
}

inline void MsgUpdateParams::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.authority_) {}

    , decltype(_impl_.params_){nullptr}
  };
  _impl_.authority_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.authority_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgUpdateParams::~MsgUpdateParams() {
  // @@protoc_insertion_point(destructor:ibc.applications.transfer.v1.MsgUpdateParams)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgUpdateParams::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.authority_.Destroy();
  if (this != internal_default_instance()) delete _impl_.params_;
}

void MsgUpdateParams::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgUpdateParams::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.applications.transfer.v1.MsgUpdateParams)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.authority_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.params_ != nullptr);
    _impl_.params_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgUpdateParams::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string authority = 1 [json_name = "authority"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_authority();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ibc.applications.transfer.v1.MsgUpdateParams.authority"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .ibc.applications.transfer.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MsgUpdateParams::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.applications.transfer.v1.MsgUpdateParams)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string authority = 1 [json_name = "authority"];
  if (!this->_internal_authority().empty()) {
    const std::string& _s = this->_internal_authority();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "ibc.applications.transfer.v1.MsgUpdateParams.authority");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .ibc.applications.transfer.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.applications.transfer.v1.MsgUpdateParams)
  return target;
}

::size_t MsgUpdateParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.applications.transfer.v1.MsgUpdateParams)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string authority = 1 [json_name = "authority"];
  if (!this->_internal_authority().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_authority());
  }

  // .ibc.applications.transfer.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgUpdateParams::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgUpdateParams::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgUpdateParams::GetClassData() const { return &_class_data_; }


void MsgUpdateParams::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgUpdateParams*>(&to_msg);
  auto& from = static_cast<const MsgUpdateParams&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.applications.transfer.v1.MsgUpdateParams)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_authority().empty()) {
    _this->_internal_set_authority(from._internal_authority());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_params()->::ibc::applications::transfer::v1::Params::MergeFrom(
        from._internal_params());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgUpdateParams::CopyFrom(const MsgUpdateParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.applications.transfer.v1.MsgUpdateParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgUpdateParams::IsInitialized() const {
  return true;
}

void MsgUpdateParams::InternalSwap(MsgUpdateParams* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.authority_, lhs_arena,
                                       &other->_impl_.authority_, rhs_arena);
  swap(_impl_.params_, other->_impl_.params_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgUpdateParams::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2ftx_2eproto_getter, &descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2ftx_2eproto_once,
      file_level_metadata_ibc_2fapplications_2ftransfer_2fv1_2ftx_2eproto[2]);
}
// ===================================================================

class MsgUpdateParamsResponse::_Internal {
 public:
};

MsgUpdateParamsResponse::MsgUpdateParamsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:ibc.applications.transfer.v1.MsgUpdateParamsResponse)
}
MsgUpdateParamsResponse::MsgUpdateParamsResponse(const MsgUpdateParamsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MsgUpdateParamsResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ibc.applications.transfer.v1.MsgUpdateParamsResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgUpdateParamsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgUpdateParamsResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgUpdateParamsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2ftx_2eproto_getter, &descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2ftx_2eproto_once,
      file_level_metadata_ibc_2fapplications_2ftransfer_2fv1_2ftx_2eproto[3]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace transfer
}  // namespace applications
}  // namespace ibc
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ibc::applications::transfer::v1::MsgTransfer*
Arena::CreateMaybeMessage< ::ibc::applications::transfer::v1::MsgTransfer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::applications::transfer::v1::MsgTransfer >(arena);
}
template<> PROTOBUF_NOINLINE ::ibc::applications::transfer::v1::MsgTransferResponse*
Arena::CreateMaybeMessage< ::ibc::applications::transfer::v1::MsgTransferResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::applications::transfer::v1::MsgTransferResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ibc::applications::transfer::v1::MsgUpdateParams*
Arena::CreateMaybeMessage< ::ibc::applications::transfer::v1::MsgUpdateParams >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::applications::transfer::v1::MsgUpdateParams >(arena);
}
template<> PROTOBUF_NOINLINE ::ibc::applications::transfer::v1::MsgUpdateParamsResponse*
Arena::CreateMaybeMessage< ::ibc::applications::transfer::v1::MsgUpdateParamsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::applications::transfer::v1::MsgUpdateParamsResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
