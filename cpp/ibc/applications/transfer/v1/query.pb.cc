// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ibc/applications/transfer/v1/query.proto

#include "ibc/applications/transfer/v1/query.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace ibc {
namespace applications {
namespace transfer {
namespace v1 {
template <typename>
PROTOBUF_CONSTEXPR QueryDenomTraceRequest::QueryDenomTraceRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.hash_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryDenomTraceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryDenomTraceRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryDenomTraceRequestDefaultTypeInternal() {}
  union {
    QueryDenomTraceRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryDenomTraceRequestDefaultTypeInternal _QueryDenomTraceRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryDenomTraceResponse::QueryDenomTraceResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.denom_trace_)*/nullptr} {}
struct QueryDenomTraceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryDenomTraceResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryDenomTraceResponseDefaultTypeInternal() {}
  union {
    QueryDenomTraceResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryDenomTraceResponseDefaultTypeInternal _QueryDenomTraceResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryDenomTracesRequest::QueryDenomTracesRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.pagination_)*/nullptr} {}
struct QueryDenomTracesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryDenomTracesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryDenomTracesRequestDefaultTypeInternal() {}
  union {
    QueryDenomTracesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryDenomTracesRequestDefaultTypeInternal _QueryDenomTracesRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryDenomTracesResponse::QueryDenomTracesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.denom_traces_)*/{}
  , /*decltype(_impl_.pagination_)*/nullptr} {}
struct QueryDenomTracesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryDenomTracesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryDenomTracesResponseDefaultTypeInternal() {}
  union {
    QueryDenomTracesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryDenomTracesResponseDefaultTypeInternal _QueryDenomTracesResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryParamsRequest::QueryParamsRequest(
    ::_pbi::ConstantInitialized) {}
struct QueryParamsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryParamsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryParamsRequestDefaultTypeInternal() {}
  union {
    QueryParamsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryParamsRequestDefaultTypeInternal _QueryParamsRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryParamsResponse::QueryParamsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.params_)*/nullptr} {}
struct QueryParamsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryParamsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryParamsResponseDefaultTypeInternal() {}
  union {
    QueryParamsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryParamsResponseDefaultTypeInternal _QueryParamsResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryDenomHashRequest::QueryDenomHashRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.trace_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryDenomHashRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryDenomHashRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryDenomHashRequestDefaultTypeInternal() {}
  union {
    QueryDenomHashRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryDenomHashRequestDefaultTypeInternal _QueryDenomHashRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryDenomHashResponse::QueryDenomHashResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.hash_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryDenomHashResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryDenomHashResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryDenomHashResponseDefaultTypeInternal() {}
  union {
    QueryDenomHashResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryDenomHashResponseDefaultTypeInternal _QueryDenomHashResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryEscrowAddressRequest::QueryEscrowAddressRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.port_id_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.channel_id_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryEscrowAddressRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryEscrowAddressRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryEscrowAddressRequestDefaultTypeInternal() {}
  union {
    QueryEscrowAddressRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryEscrowAddressRequestDefaultTypeInternal _QueryEscrowAddressRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryEscrowAddressResponse::QueryEscrowAddressResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.escrow_address_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryEscrowAddressResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryEscrowAddressResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryEscrowAddressResponseDefaultTypeInternal() {}
  union {
    QueryEscrowAddressResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryEscrowAddressResponseDefaultTypeInternal _QueryEscrowAddressResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryTotalEscrowForDenomRequest::QueryTotalEscrowForDenomRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.denom_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryTotalEscrowForDenomRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryTotalEscrowForDenomRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryTotalEscrowForDenomRequestDefaultTypeInternal() {}
  union {
    QueryTotalEscrowForDenomRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryTotalEscrowForDenomRequestDefaultTypeInternal _QueryTotalEscrowForDenomRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryTotalEscrowForDenomResponse::QueryTotalEscrowForDenomResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.amount_)*/nullptr} {}
struct QueryTotalEscrowForDenomResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryTotalEscrowForDenomResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryTotalEscrowForDenomResponseDefaultTypeInternal() {}
  union {
    QueryTotalEscrowForDenomResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryTotalEscrowForDenomResponseDefaultTypeInternal _QueryTotalEscrowForDenomResponse_default_instance_;
}  // namespace v1
}  // namespace transfer
}  // namespace applications
}  // namespace ibc
static ::_pb::Metadata file_level_metadata_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto[12];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto = nullptr;
const ::uint32_t TableStruct_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::QueryDenomTraceRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::QueryDenomTraceRequest, _impl_.hash_),
    PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::QueryDenomTraceResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::QueryDenomTraceResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::QueryDenomTraceResponse, _impl_.denom_trace_),
    0,
    PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::QueryDenomTracesRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::QueryDenomTracesRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::QueryDenomTracesRequest, _impl_.pagination_),
    0,
    PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::QueryDenomTracesResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::QueryDenomTracesResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::QueryDenomTracesResponse, _impl_.denom_traces_),
    PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::QueryDenomTracesResponse, _impl_.pagination_),
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::QueryParamsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::QueryParamsResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::QueryParamsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::QueryParamsResponse, _impl_.params_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::QueryDenomHashRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::QueryDenomHashRequest, _impl_.trace_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::QueryDenomHashResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::QueryDenomHashResponse, _impl_.hash_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::QueryEscrowAddressRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::QueryEscrowAddressRequest, _impl_.port_id_),
    PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::QueryEscrowAddressRequest, _impl_.channel_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::QueryEscrowAddressResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::QueryEscrowAddressResponse, _impl_.escrow_address_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::QueryTotalEscrowForDenomRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::QueryTotalEscrowForDenomRequest, _impl_.denom_),
    PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::QueryTotalEscrowForDenomResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::QueryTotalEscrowForDenomResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::QueryTotalEscrowForDenomResponse, _impl_.amount_),
    0,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::ibc::applications::transfer::v1::QueryDenomTraceRequest)},
        { 9, 18, -1, sizeof(::ibc::applications::transfer::v1::QueryDenomTraceResponse)},
        { 19, 28, -1, sizeof(::ibc::applications::transfer::v1::QueryDenomTracesRequest)},
        { 29, 39, -1, sizeof(::ibc::applications::transfer::v1::QueryDenomTracesResponse)},
        { 41, -1, -1, sizeof(::ibc::applications::transfer::v1::QueryParamsRequest)},
        { 49, 58, -1, sizeof(::ibc::applications::transfer::v1::QueryParamsResponse)},
        { 59, -1, -1, sizeof(::ibc::applications::transfer::v1::QueryDenomHashRequest)},
        { 68, -1, -1, sizeof(::ibc::applications::transfer::v1::QueryDenomHashResponse)},
        { 77, -1, -1, sizeof(::ibc::applications::transfer::v1::QueryEscrowAddressRequest)},
        { 87, -1, -1, sizeof(::ibc::applications::transfer::v1::QueryEscrowAddressResponse)},
        { 96, -1, -1, sizeof(::ibc::applications::transfer::v1::QueryTotalEscrowForDenomRequest)},
        { 105, 114, -1, sizeof(::ibc::applications::transfer::v1::QueryTotalEscrowForDenomResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::ibc::applications::transfer::v1::_QueryDenomTraceRequest_default_instance_._instance,
    &::ibc::applications::transfer::v1::_QueryDenomTraceResponse_default_instance_._instance,
    &::ibc::applications::transfer::v1::_QueryDenomTracesRequest_default_instance_._instance,
    &::ibc::applications::transfer::v1::_QueryDenomTracesResponse_default_instance_._instance,
    &::ibc::applications::transfer::v1::_QueryParamsRequest_default_instance_._instance,
    &::ibc::applications::transfer::v1::_QueryParamsResponse_default_instance_._instance,
    &::ibc::applications::transfer::v1::_QueryDenomHashRequest_default_instance_._instance,
    &::ibc::applications::transfer::v1::_QueryDenomHashResponse_default_instance_._instance,
    &::ibc::applications::transfer::v1::_QueryEscrowAddressRequest_default_instance_._instance,
    &::ibc::applications::transfer::v1::_QueryEscrowAddressResponse_default_instance_._instance,
    &::ibc::applications::transfer::v1::_QueryTotalEscrowForDenomRequest_default_instance_._instance,
    &::ibc::applications::transfer::v1::_QueryTotalEscrowForDenomResponse_default_instance_._instance,
};
const char descriptor_table_protodef_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n(ibc/applications/transfer/v1/query.pro"
    "to\022\034ibc.applications.transfer.v1\032\024gogopr"
    "oto/gogo.proto\032\036cosmos/base/v1beta1/coin"
    ".proto\032*cosmos/base/query/v1beta1/pagina"
    "tion.proto\032+ibc/applications/transfer/v1"
    "/transfer.proto\032\034google/api/annotations."
    "proto\",\n\026QueryDenomTraceRequest\022\022\n\004hash\030"
    "\001 \001(\tR\004hash\"d\n\027QueryDenomTraceResponse\022I"
    "\n\013denom_trace\030\001 \001(\0132(.ibc.applications.t"
    "ransfer.v1.DenomTraceR\ndenomTrace\"a\n\027Que"
    "ryDenomTracesRequest\022F\n\npagination\030\001 \001(\013"
    "2&.cosmos.base.query.v1beta1.PageRequest"
    "R\npagination\"\300\001\n\030QueryDenomTracesRespons"
    "e\022[\n\014denom_traces\030\001 \003(\0132(.ibc.applicatio"
    "ns.transfer.v1.DenomTraceB\016\310\336\037\000\252\337\037\006Trace"
    "sR\013denomTraces\022G\n\npagination\030\002 \001(\0132\'.cos"
    "mos.base.query.v1beta1.PageResponseR\npag"
    "ination\"\024\n\022QueryParamsRequest\"S\n\023QueryPa"
    "ramsResponse\022<\n\006params\030\001 \001(\0132$.ibc.appli"
    "cations.transfer.v1.ParamsR\006params\"-\n\025Qu"
    "eryDenomHashRequest\022\024\n\005trace\030\001 \001(\tR\005trac"
    "e\",\n\026QueryDenomHashResponse\022\022\n\004hash\030\001 \001("
    "\tR\004hash\"S\n\031QueryEscrowAddressRequest\022\027\n\007"
    "port_id\030\001 \001(\tR\006portId\022\035\n\nchannel_id\030\002 \001("
    "\tR\tchannelId\"C\n\032QueryEscrowAddressRespon"
    "se\022%\n\016escrow_address\030\001 \001(\tR\rescrowAddres"
    "s\"7\n\037QueryTotalEscrowForDenomRequest\022\024\n\005"
    "denom\030\001 \001(\tR\005denom\"[\n QueryTotalEscrowFo"
    "rDenomResponse\0227\n\006amount\030\001 \001(\0132\031.cosmos."
    "base.v1beta1.CoinB\004\310\336\037\000R\006amount2\330\010\n\005Quer"
    "y\022\257\001\n\nDenomTrace\0224.ibc.applications.tran"
    "sfer.v1.QueryDenomTraceRequest\0325.ibc.app"
    "lications.transfer.v1.QueryDenomTraceRes"
    "ponse\"4\202\323\344\223\002.\022,/ibc/apps/transfer/v1/den"
    "om_traces/{hash=**}\022\250\001\n\013DenomTraces\0225.ib"
    "c.applications.transfer.v1.QueryDenomTra"
    "cesRequest\0326.ibc.applications.transfer.v"
    "1.QueryDenomTracesResponse\"*\202\323\344\223\002$\022\"/ibc"
    "/apps/transfer/v1/denom_traces\022\223\001\n\006Param"
    "s\0220.ibc.applications.transfer.v1.QueryPa"
    "ramsRequest\0321.ibc.applications.transfer."
    "v1.QueryParamsResponse\"$\202\323\344\223\002\036\022\034/ibc/app"
    "s/transfer/v1/params\022\255\001\n\tDenomHash\0223.ibc"
    ".applications.transfer.v1.QueryDenomHash"
    "Request\0324.ibc.applications.transfer.v1.Q"
    "ueryDenomHashResponse\"5\202\323\344\223\002/\022-/ibc/apps"
    "/transfer/v1/denom_hashes/{trace=**}\022\326\001\n"
    "\rEscrowAddress\0227.ibc.applications.transf"
    "er.v1.QueryEscrowAddressRequest\0328.ibc.ap"
    "plications.transfer.v1.QueryEscrowAddres"
    "sResponse\"R\202\323\344\223\002L\022J/ibc/apps/transfer/v1"
    "/channels/{channel_id}/ports/{port_id}/e"
    "scrow_address\022\322\001\n\023TotalEscrowForDenom\022=."
    "ibc.applications.transfer.v1.QueryTotalE"
    "scrowForDenomRequest\032>.ibc.applications."
    "transfer.v1.QueryTotalEscrowForDenomResp"
    "onse\"<\202\323\344\223\0026\0224/ibc/apps/transfer/v1/deno"
    "ms/{denom=**}/total_escrowB\372\001\n com.ibc.a"
    "pplications.transfer.v1B\nQueryProtoP\001Z7g"
    "ithub.com/cosmos/ibc-go/v7/modules/apps/"
    "transfer/types\242\002\003IAT\252\002\034Ibc.Applications."
    "Transfer.V1\312\002\034Ibc\\Applications\\Transfer\\"
    "V1\342\002(Ibc\\Applications\\Transfer\\V1\\GPBMet"
    "adata\352\002\037Ibc::Applications::Transfer::V1b"
    "\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto_deps[5] =
    {
        &::descriptor_table_cosmos_2fbase_2fquery_2fv1beta1_2fpagination_2eproto,
        &::descriptor_table_cosmos_2fbase_2fv1beta1_2fcoin_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_google_2fapi_2fannotations_2eproto,
        &::descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2ftransfer_2eproto,
};
static ::absl::once_flag descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto = {
    false,
    false,
    2567,
    descriptor_table_protodef_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto,
    "ibc/applications/transfer/v1/query.proto",
    &descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto_once,
    descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto_deps,
    5,
    12,
    schemas,
    file_default_instances,
    TableStruct_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto::offsets,
    file_level_metadata_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto,
    file_level_enum_descriptors_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto,
    file_level_service_descriptors_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto_getter() {
  return &descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto(&descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto);
namespace ibc {
namespace applications {
namespace transfer {
namespace v1 {
// ===================================================================

class QueryDenomTraceRequest::_Internal {
 public:
};

QueryDenomTraceRequest::QueryDenomTraceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.applications.transfer.v1.QueryDenomTraceRequest)
}
QueryDenomTraceRequest::QueryDenomTraceRequest(const QueryDenomTraceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryDenomTraceRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.hash_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.hash_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.hash_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_hash().empty()) {
    _this->_impl_.hash_.Set(from._internal_hash(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ibc.applications.transfer.v1.QueryDenomTraceRequest)
}

inline void QueryDenomTraceRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.hash_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.hash_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.hash_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryDenomTraceRequest::~QueryDenomTraceRequest() {
  // @@protoc_insertion_point(destructor:ibc.applications.transfer.v1.QueryDenomTraceRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryDenomTraceRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.hash_.Destroy();
}

void QueryDenomTraceRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryDenomTraceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.applications.transfer.v1.QueryDenomTraceRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.hash_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryDenomTraceRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string hash = 1 [json_name = "hash"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_hash();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ibc.applications.transfer.v1.QueryDenomTraceRequest.hash"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryDenomTraceRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.applications.transfer.v1.QueryDenomTraceRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string hash = 1 [json_name = "hash"];
  if (!this->_internal_hash().empty()) {
    const std::string& _s = this->_internal_hash();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "ibc.applications.transfer.v1.QueryDenomTraceRequest.hash");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.applications.transfer.v1.QueryDenomTraceRequest)
  return target;
}

::size_t QueryDenomTraceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.applications.transfer.v1.QueryDenomTraceRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string hash = 1 [json_name = "hash"];
  if (!this->_internal_hash().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_hash());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryDenomTraceRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryDenomTraceRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryDenomTraceRequest::GetClassData() const { return &_class_data_; }


void QueryDenomTraceRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryDenomTraceRequest*>(&to_msg);
  auto& from = static_cast<const QueryDenomTraceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.applications.transfer.v1.QueryDenomTraceRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_hash().empty()) {
    _this->_internal_set_hash(from._internal_hash());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryDenomTraceRequest::CopyFrom(const QueryDenomTraceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.applications.transfer.v1.QueryDenomTraceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDenomTraceRequest::IsInitialized() const {
  return true;
}

void QueryDenomTraceRequest::InternalSwap(QueryDenomTraceRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hash_, lhs_arena,
                                       &other->_impl_.hash_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryDenomTraceRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto_getter, &descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto_once,
      file_level_metadata_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto[0]);
}
// ===================================================================

class QueryDenomTraceResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryDenomTraceResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryDenomTraceResponse, _impl_._has_bits_);
  static const ::ibc::applications::transfer::v1::DenomTrace& denom_trace(const QueryDenomTraceResponse* msg);
  static void set_has_denom_trace(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ibc::applications::transfer::v1::DenomTrace&
QueryDenomTraceResponse::_Internal::denom_trace(const QueryDenomTraceResponse* msg) {
  return *msg->_impl_.denom_trace_;
}
void QueryDenomTraceResponse::clear_denom_trace() {
  if (_impl_.denom_trace_ != nullptr) _impl_.denom_trace_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryDenomTraceResponse::QueryDenomTraceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.applications.transfer.v1.QueryDenomTraceResponse)
}
QueryDenomTraceResponse::QueryDenomTraceResponse(const QueryDenomTraceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryDenomTraceResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.denom_trace_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.denom_trace_ = new ::ibc::applications::transfer::v1::DenomTrace(*from._impl_.denom_trace_);
  }
  // @@protoc_insertion_point(copy_constructor:ibc.applications.transfer.v1.QueryDenomTraceResponse)
}

inline void QueryDenomTraceResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.denom_trace_){nullptr}
  };
}

QueryDenomTraceResponse::~QueryDenomTraceResponse() {
  // @@protoc_insertion_point(destructor:ibc.applications.transfer.v1.QueryDenomTraceResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryDenomTraceResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.denom_trace_;
}

void QueryDenomTraceResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryDenomTraceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.applications.transfer.v1.QueryDenomTraceResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.denom_trace_ != nullptr);
    _impl_.denom_trace_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryDenomTraceResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ibc.applications.transfer.v1.DenomTrace denom_trace = 1 [json_name = "denomTrace"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_denom_trace(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryDenomTraceResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.applications.transfer.v1.QueryDenomTraceResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .ibc.applications.transfer.v1.DenomTrace denom_trace = 1 [json_name = "denomTrace"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::denom_trace(this),
        _Internal::denom_trace(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.applications.transfer.v1.QueryDenomTraceResponse)
  return target;
}

::size_t QueryDenomTraceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.applications.transfer.v1.QueryDenomTraceResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ibc.applications.transfer.v1.DenomTrace denom_trace = 1 [json_name = "denomTrace"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.denom_trace_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryDenomTraceResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryDenomTraceResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryDenomTraceResponse::GetClassData() const { return &_class_data_; }


void QueryDenomTraceResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryDenomTraceResponse*>(&to_msg);
  auto& from = static_cast<const QueryDenomTraceResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.applications.transfer.v1.QueryDenomTraceResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_denom_trace()->::ibc::applications::transfer::v1::DenomTrace::MergeFrom(
        from._internal_denom_trace());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryDenomTraceResponse::CopyFrom(const QueryDenomTraceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.applications.transfer.v1.QueryDenomTraceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDenomTraceResponse::IsInitialized() const {
  return true;
}

void QueryDenomTraceResponse::InternalSwap(QueryDenomTraceResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.denom_trace_, other->_impl_.denom_trace_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryDenomTraceResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto_getter, &descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto_once,
      file_level_metadata_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto[1]);
}
// ===================================================================

class QueryDenomTracesRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryDenomTracesRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryDenomTracesRequest, _impl_._has_bits_);
  static const ::cosmos::base::query::v1beta1::PageRequest& pagination(const QueryDenomTracesRequest* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::query::v1beta1::PageRequest&
QueryDenomTracesRequest::_Internal::pagination(const QueryDenomTracesRequest* msg) {
  return *msg->_impl_.pagination_;
}
void QueryDenomTracesRequest::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryDenomTracesRequest::QueryDenomTracesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.applications.transfer.v1.QueryDenomTracesRequest)
}
QueryDenomTracesRequest::QueryDenomTracesRequest(const QueryDenomTracesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryDenomTracesRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.pagination_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::cosmos::base::query::v1beta1::PageRequest(*from._impl_.pagination_);
  }
  // @@protoc_insertion_point(copy_constructor:ibc.applications.transfer.v1.QueryDenomTracesRequest)
}

inline void QueryDenomTracesRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.pagination_){nullptr}
  };
}

QueryDenomTracesRequest::~QueryDenomTracesRequest() {
  // @@protoc_insertion_point(destructor:ibc.applications.transfer.v1.QueryDenomTracesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryDenomTracesRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.pagination_;
}

void QueryDenomTracesRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryDenomTracesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.applications.transfer.v1.QueryDenomTracesRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryDenomTracesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cosmos.base.query.v1beta1.PageRequest pagination = 1 [json_name = "pagination"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagination(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryDenomTracesRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.applications.transfer.v1.QueryDenomTracesRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.query.v1beta1.PageRequest pagination = 1 [json_name = "pagination"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.applications.transfer.v1.QueryDenomTracesRequest)
  return target;
}

::size_t QueryDenomTracesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.applications.transfer.v1.QueryDenomTracesRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cosmos.base.query.v1beta1.PageRequest pagination = 1 [json_name = "pagination"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryDenomTracesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryDenomTracesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryDenomTracesRequest::GetClassData() const { return &_class_data_; }


void QueryDenomTracesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryDenomTracesRequest*>(&to_msg);
  auto& from = static_cast<const QueryDenomTracesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.applications.transfer.v1.QueryDenomTracesRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::cosmos::base::query::v1beta1::PageRequest::MergeFrom(
        from._internal_pagination());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryDenomTracesRequest::CopyFrom(const QueryDenomTracesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.applications.transfer.v1.QueryDenomTracesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDenomTracesRequest::IsInitialized() const {
  return true;
}

void QueryDenomTracesRequest::InternalSwap(QueryDenomTracesRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryDenomTracesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto_getter, &descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto_once,
      file_level_metadata_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto[2]);
}
// ===================================================================

class QueryDenomTracesResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryDenomTracesResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryDenomTracesResponse, _impl_._has_bits_);
  static const ::cosmos::base::query::v1beta1::PageResponse& pagination(const QueryDenomTracesResponse* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::query::v1beta1::PageResponse&
QueryDenomTracesResponse::_Internal::pagination(const QueryDenomTracesResponse* msg) {
  return *msg->_impl_.pagination_;
}
void QueryDenomTracesResponse::clear_denom_traces() {
  _internal_mutable_denom_traces()->Clear();
}
void QueryDenomTracesResponse::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryDenomTracesResponse::QueryDenomTracesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.applications.transfer.v1.QueryDenomTracesResponse)
}
QueryDenomTracesResponse::QueryDenomTracesResponse(const QueryDenomTracesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryDenomTracesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.denom_traces_){from._impl_.denom_traces_}
    , decltype(_impl_.pagination_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::cosmos::base::query::v1beta1::PageResponse(*from._impl_.pagination_);
  }
  // @@protoc_insertion_point(copy_constructor:ibc.applications.transfer.v1.QueryDenomTracesResponse)
}

inline void QueryDenomTracesResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.denom_traces_){arena}
    , decltype(_impl_.pagination_){nullptr}
  };
}

QueryDenomTracesResponse::~QueryDenomTracesResponse() {
  // @@protoc_insertion_point(destructor:ibc.applications.transfer.v1.QueryDenomTracesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryDenomTracesResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_denom_traces()->~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.pagination_;
}

void QueryDenomTracesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryDenomTracesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.applications.transfer.v1.QueryDenomTracesResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_denom_traces()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryDenomTracesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ibc.applications.transfer.v1.DenomTrace denom_traces = 1 [json_name = "denomTraces", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "Traces"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_denom_traces(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagination(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryDenomTracesResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.applications.transfer.v1.QueryDenomTracesResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ibc.applications.transfer.v1.DenomTrace denom_traces = 1 [json_name = "denomTraces", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "Traces"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_denom_traces_size()); i < n; i++) {
    const auto& repfield = this->_internal_denom_traces(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.applications.transfer.v1.QueryDenomTracesResponse)
  return target;
}

::size_t QueryDenomTracesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.applications.transfer.v1.QueryDenomTracesResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ibc.applications.transfer.v1.DenomTrace denom_traces = 1 [json_name = "denomTraces", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "Traces"];
  total_size += 1UL * this->_internal_denom_traces_size();
  for (const auto& msg : this->_internal_denom_traces()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryDenomTracesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryDenomTracesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryDenomTracesResponse::GetClassData() const { return &_class_data_; }


void QueryDenomTracesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryDenomTracesResponse*>(&to_msg);
  auto& from = static_cast<const QueryDenomTracesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.applications.transfer.v1.QueryDenomTracesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_denom_traces()->MergeFrom(from._internal_denom_traces());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::cosmos::base::query::v1beta1::PageResponse::MergeFrom(
        from._internal_pagination());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryDenomTracesResponse::CopyFrom(const QueryDenomTracesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.applications.transfer.v1.QueryDenomTracesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDenomTracesResponse::IsInitialized() const {
  return true;
}

void QueryDenomTracesResponse::InternalSwap(QueryDenomTracesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _internal_mutable_denom_traces()->InternalSwap(other->_internal_mutable_denom_traces());
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryDenomTracesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto_getter, &descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto_once,
      file_level_metadata_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto[3]);
}
// ===================================================================

class QueryParamsRequest::_Internal {
 public:
};

QueryParamsRequest::QueryParamsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:ibc.applications.transfer.v1.QueryParamsRequest)
}
QueryParamsRequest::QueryParamsRequest(const QueryParamsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  QueryParamsRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ibc.applications.transfer.v1.QueryParamsRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryParamsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryParamsRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata QueryParamsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto_getter, &descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto_once,
      file_level_metadata_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto[4]);
}
// ===================================================================

class QueryParamsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryParamsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryParamsResponse, _impl_._has_bits_);
  static const ::ibc::applications::transfer::v1::Params& params(const QueryParamsResponse* msg);
  static void set_has_params(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ibc::applications::transfer::v1::Params&
QueryParamsResponse::_Internal::params(const QueryParamsResponse* msg) {
  return *msg->_impl_.params_;
}
void QueryParamsResponse::clear_params() {
  if (_impl_.params_ != nullptr) _impl_.params_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryParamsResponse::QueryParamsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.applications.transfer.v1.QueryParamsResponse)
}
QueryParamsResponse::QueryParamsResponse(const QueryParamsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryParamsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.params_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.params_ = new ::ibc::applications::transfer::v1::Params(*from._impl_.params_);
  }
  // @@protoc_insertion_point(copy_constructor:ibc.applications.transfer.v1.QueryParamsResponse)
}

inline void QueryParamsResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.params_){nullptr}
  };
}

QueryParamsResponse::~QueryParamsResponse() {
  // @@protoc_insertion_point(destructor:ibc.applications.transfer.v1.QueryParamsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryParamsResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.params_;
}

void QueryParamsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryParamsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.applications.transfer.v1.QueryParamsResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.params_ != nullptr);
    _impl_.params_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryParamsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ibc.applications.transfer.v1.Params params = 1 [json_name = "params"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryParamsResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.applications.transfer.v1.QueryParamsResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .ibc.applications.transfer.v1.Params params = 1 [json_name = "params"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.applications.transfer.v1.QueryParamsResponse)
  return target;
}

::size_t QueryParamsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.applications.transfer.v1.QueryParamsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ibc.applications.transfer.v1.Params params = 1 [json_name = "params"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryParamsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryParamsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryParamsResponse::GetClassData() const { return &_class_data_; }


void QueryParamsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryParamsResponse*>(&to_msg);
  auto& from = static_cast<const QueryParamsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.applications.transfer.v1.QueryParamsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_params()->::ibc::applications::transfer::v1::Params::MergeFrom(
        from._internal_params());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryParamsResponse::CopyFrom(const QueryParamsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.applications.transfer.v1.QueryParamsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryParamsResponse::IsInitialized() const {
  return true;
}

void QueryParamsResponse::InternalSwap(QueryParamsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.params_, other->_impl_.params_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryParamsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto_getter, &descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto_once,
      file_level_metadata_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto[5]);
}
// ===================================================================

class QueryDenomHashRequest::_Internal {
 public:
};

QueryDenomHashRequest::QueryDenomHashRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.applications.transfer.v1.QueryDenomHashRequest)
}
QueryDenomHashRequest::QueryDenomHashRequest(const QueryDenomHashRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryDenomHashRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.trace_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.trace_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.trace_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_trace().empty()) {
    _this->_impl_.trace_.Set(from._internal_trace(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ibc.applications.transfer.v1.QueryDenomHashRequest)
}

inline void QueryDenomHashRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.trace_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.trace_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.trace_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryDenomHashRequest::~QueryDenomHashRequest() {
  // @@protoc_insertion_point(destructor:ibc.applications.transfer.v1.QueryDenomHashRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryDenomHashRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.trace_.Destroy();
}

void QueryDenomHashRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryDenomHashRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.applications.transfer.v1.QueryDenomHashRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.trace_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryDenomHashRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string trace = 1 [json_name = "trace"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_trace();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ibc.applications.transfer.v1.QueryDenomHashRequest.trace"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryDenomHashRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.applications.transfer.v1.QueryDenomHashRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string trace = 1 [json_name = "trace"];
  if (!this->_internal_trace().empty()) {
    const std::string& _s = this->_internal_trace();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "ibc.applications.transfer.v1.QueryDenomHashRequest.trace");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.applications.transfer.v1.QueryDenomHashRequest)
  return target;
}

::size_t QueryDenomHashRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.applications.transfer.v1.QueryDenomHashRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string trace = 1 [json_name = "trace"];
  if (!this->_internal_trace().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_trace());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryDenomHashRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryDenomHashRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryDenomHashRequest::GetClassData() const { return &_class_data_; }


void QueryDenomHashRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryDenomHashRequest*>(&to_msg);
  auto& from = static_cast<const QueryDenomHashRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.applications.transfer.v1.QueryDenomHashRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_trace().empty()) {
    _this->_internal_set_trace(from._internal_trace());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryDenomHashRequest::CopyFrom(const QueryDenomHashRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.applications.transfer.v1.QueryDenomHashRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDenomHashRequest::IsInitialized() const {
  return true;
}

void QueryDenomHashRequest::InternalSwap(QueryDenomHashRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.trace_, lhs_arena,
                                       &other->_impl_.trace_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryDenomHashRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto_getter, &descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto_once,
      file_level_metadata_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto[6]);
}
// ===================================================================

class QueryDenomHashResponse::_Internal {
 public:
};

QueryDenomHashResponse::QueryDenomHashResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.applications.transfer.v1.QueryDenomHashResponse)
}
QueryDenomHashResponse::QueryDenomHashResponse(const QueryDenomHashResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryDenomHashResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.hash_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.hash_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.hash_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_hash().empty()) {
    _this->_impl_.hash_.Set(from._internal_hash(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ibc.applications.transfer.v1.QueryDenomHashResponse)
}

inline void QueryDenomHashResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.hash_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.hash_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.hash_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryDenomHashResponse::~QueryDenomHashResponse() {
  // @@protoc_insertion_point(destructor:ibc.applications.transfer.v1.QueryDenomHashResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryDenomHashResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.hash_.Destroy();
}

void QueryDenomHashResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryDenomHashResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.applications.transfer.v1.QueryDenomHashResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.hash_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryDenomHashResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string hash = 1 [json_name = "hash"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_hash();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ibc.applications.transfer.v1.QueryDenomHashResponse.hash"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryDenomHashResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.applications.transfer.v1.QueryDenomHashResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string hash = 1 [json_name = "hash"];
  if (!this->_internal_hash().empty()) {
    const std::string& _s = this->_internal_hash();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "ibc.applications.transfer.v1.QueryDenomHashResponse.hash");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.applications.transfer.v1.QueryDenomHashResponse)
  return target;
}

::size_t QueryDenomHashResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.applications.transfer.v1.QueryDenomHashResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string hash = 1 [json_name = "hash"];
  if (!this->_internal_hash().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_hash());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryDenomHashResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryDenomHashResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryDenomHashResponse::GetClassData() const { return &_class_data_; }


void QueryDenomHashResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryDenomHashResponse*>(&to_msg);
  auto& from = static_cast<const QueryDenomHashResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.applications.transfer.v1.QueryDenomHashResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_hash().empty()) {
    _this->_internal_set_hash(from._internal_hash());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryDenomHashResponse::CopyFrom(const QueryDenomHashResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.applications.transfer.v1.QueryDenomHashResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDenomHashResponse::IsInitialized() const {
  return true;
}

void QueryDenomHashResponse::InternalSwap(QueryDenomHashResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hash_, lhs_arena,
                                       &other->_impl_.hash_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryDenomHashResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto_getter, &descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto_once,
      file_level_metadata_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto[7]);
}
// ===================================================================

class QueryEscrowAddressRequest::_Internal {
 public:
};

QueryEscrowAddressRequest::QueryEscrowAddressRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.applications.transfer.v1.QueryEscrowAddressRequest)
}
QueryEscrowAddressRequest::QueryEscrowAddressRequest(const QueryEscrowAddressRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryEscrowAddressRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.port_id_) {}

    , decltype(_impl_.channel_id_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.port_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.port_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_port_id().empty()) {
    _this->_impl_.port_id_.Set(from._internal_port_id(), _this->GetArenaForAllocation());
  }
  _impl_.channel_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.channel_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_channel_id().empty()) {
    _this->_impl_.channel_id_.Set(from._internal_channel_id(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ibc.applications.transfer.v1.QueryEscrowAddressRequest)
}

inline void QueryEscrowAddressRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.port_id_) {}

    , decltype(_impl_.channel_id_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.port_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.port_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.channel_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.channel_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryEscrowAddressRequest::~QueryEscrowAddressRequest() {
  // @@protoc_insertion_point(destructor:ibc.applications.transfer.v1.QueryEscrowAddressRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryEscrowAddressRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.port_id_.Destroy();
  _impl_.channel_id_.Destroy();
}

void QueryEscrowAddressRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryEscrowAddressRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.applications.transfer.v1.QueryEscrowAddressRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.port_id_.ClearToEmpty();
  _impl_.channel_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryEscrowAddressRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string port_id = 1 [json_name = "portId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_port_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ibc.applications.transfer.v1.QueryEscrowAddressRequest.port_id"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string channel_id = 2 [json_name = "channelId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_channel_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ibc.applications.transfer.v1.QueryEscrowAddressRequest.channel_id"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryEscrowAddressRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.applications.transfer.v1.QueryEscrowAddressRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string port_id = 1 [json_name = "portId"];
  if (!this->_internal_port_id().empty()) {
    const std::string& _s = this->_internal_port_id();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "ibc.applications.transfer.v1.QueryEscrowAddressRequest.port_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string channel_id = 2 [json_name = "channelId"];
  if (!this->_internal_channel_id().empty()) {
    const std::string& _s = this->_internal_channel_id();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "ibc.applications.transfer.v1.QueryEscrowAddressRequest.channel_id");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.applications.transfer.v1.QueryEscrowAddressRequest)
  return target;
}

::size_t QueryEscrowAddressRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.applications.transfer.v1.QueryEscrowAddressRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string port_id = 1 [json_name = "portId"];
  if (!this->_internal_port_id().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_port_id());
  }

  // string channel_id = 2 [json_name = "channelId"];
  if (!this->_internal_channel_id().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_channel_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryEscrowAddressRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryEscrowAddressRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryEscrowAddressRequest::GetClassData() const { return &_class_data_; }


void QueryEscrowAddressRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryEscrowAddressRequest*>(&to_msg);
  auto& from = static_cast<const QueryEscrowAddressRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.applications.transfer.v1.QueryEscrowAddressRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_port_id().empty()) {
    _this->_internal_set_port_id(from._internal_port_id());
  }
  if (!from._internal_channel_id().empty()) {
    _this->_internal_set_channel_id(from._internal_channel_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryEscrowAddressRequest::CopyFrom(const QueryEscrowAddressRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.applications.transfer.v1.QueryEscrowAddressRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryEscrowAddressRequest::IsInitialized() const {
  return true;
}

void QueryEscrowAddressRequest::InternalSwap(QueryEscrowAddressRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.port_id_, lhs_arena,
                                       &other->_impl_.port_id_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.channel_id_, lhs_arena,
                                       &other->_impl_.channel_id_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryEscrowAddressRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto_getter, &descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto_once,
      file_level_metadata_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto[8]);
}
// ===================================================================

class QueryEscrowAddressResponse::_Internal {
 public:
};

QueryEscrowAddressResponse::QueryEscrowAddressResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.applications.transfer.v1.QueryEscrowAddressResponse)
}
QueryEscrowAddressResponse::QueryEscrowAddressResponse(const QueryEscrowAddressResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryEscrowAddressResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.escrow_address_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.escrow_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.escrow_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_escrow_address().empty()) {
    _this->_impl_.escrow_address_.Set(from._internal_escrow_address(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ibc.applications.transfer.v1.QueryEscrowAddressResponse)
}

inline void QueryEscrowAddressResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.escrow_address_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.escrow_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.escrow_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryEscrowAddressResponse::~QueryEscrowAddressResponse() {
  // @@protoc_insertion_point(destructor:ibc.applications.transfer.v1.QueryEscrowAddressResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryEscrowAddressResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.escrow_address_.Destroy();
}

void QueryEscrowAddressResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryEscrowAddressResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.applications.transfer.v1.QueryEscrowAddressResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.escrow_address_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryEscrowAddressResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string escrow_address = 1 [json_name = "escrowAddress"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_escrow_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ibc.applications.transfer.v1.QueryEscrowAddressResponse.escrow_address"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryEscrowAddressResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.applications.transfer.v1.QueryEscrowAddressResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string escrow_address = 1 [json_name = "escrowAddress"];
  if (!this->_internal_escrow_address().empty()) {
    const std::string& _s = this->_internal_escrow_address();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "ibc.applications.transfer.v1.QueryEscrowAddressResponse.escrow_address");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.applications.transfer.v1.QueryEscrowAddressResponse)
  return target;
}

::size_t QueryEscrowAddressResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.applications.transfer.v1.QueryEscrowAddressResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string escrow_address = 1 [json_name = "escrowAddress"];
  if (!this->_internal_escrow_address().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_escrow_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryEscrowAddressResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryEscrowAddressResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryEscrowAddressResponse::GetClassData() const { return &_class_data_; }


void QueryEscrowAddressResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryEscrowAddressResponse*>(&to_msg);
  auto& from = static_cast<const QueryEscrowAddressResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.applications.transfer.v1.QueryEscrowAddressResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_escrow_address().empty()) {
    _this->_internal_set_escrow_address(from._internal_escrow_address());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryEscrowAddressResponse::CopyFrom(const QueryEscrowAddressResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.applications.transfer.v1.QueryEscrowAddressResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryEscrowAddressResponse::IsInitialized() const {
  return true;
}

void QueryEscrowAddressResponse::InternalSwap(QueryEscrowAddressResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.escrow_address_, lhs_arena,
                                       &other->_impl_.escrow_address_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryEscrowAddressResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto_getter, &descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto_once,
      file_level_metadata_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto[9]);
}
// ===================================================================

class QueryTotalEscrowForDenomRequest::_Internal {
 public:
};

QueryTotalEscrowForDenomRequest::QueryTotalEscrowForDenomRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.applications.transfer.v1.QueryTotalEscrowForDenomRequest)
}
QueryTotalEscrowForDenomRequest::QueryTotalEscrowForDenomRequest(const QueryTotalEscrowForDenomRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryTotalEscrowForDenomRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.denom_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.denom_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.denom_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_denom().empty()) {
    _this->_impl_.denom_.Set(from._internal_denom(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ibc.applications.transfer.v1.QueryTotalEscrowForDenomRequest)
}

inline void QueryTotalEscrowForDenomRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.denom_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.denom_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.denom_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryTotalEscrowForDenomRequest::~QueryTotalEscrowForDenomRequest() {
  // @@protoc_insertion_point(destructor:ibc.applications.transfer.v1.QueryTotalEscrowForDenomRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryTotalEscrowForDenomRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.denom_.Destroy();
}

void QueryTotalEscrowForDenomRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryTotalEscrowForDenomRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.applications.transfer.v1.QueryTotalEscrowForDenomRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.denom_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryTotalEscrowForDenomRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string denom = 1 [json_name = "denom"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_denom();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ibc.applications.transfer.v1.QueryTotalEscrowForDenomRequest.denom"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryTotalEscrowForDenomRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.applications.transfer.v1.QueryTotalEscrowForDenomRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string denom = 1 [json_name = "denom"];
  if (!this->_internal_denom().empty()) {
    const std::string& _s = this->_internal_denom();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "ibc.applications.transfer.v1.QueryTotalEscrowForDenomRequest.denom");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.applications.transfer.v1.QueryTotalEscrowForDenomRequest)
  return target;
}

::size_t QueryTotalEscrowForDenomRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.applications.transfer.v1.QueryTotalEscrowForDenomRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string denom = 1 [json_name = "denom"];
  if (!this->_internal_denom().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_denom());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryTotalEscrowForDenomRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryTotalEscrowForDenomRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryTotalEscrowForDenomRequest::GetClassData() const { return &_class_data_; }


void QueryTotalEscrowForDenomRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryTotalEscrowForDenomRequest*>(&to_msg);
  auto& from = static_cast<const QueryTotalEscrowForDenomRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.applications.transfer.v1.QueryTotalEscrowForDenomRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_denom().empty()) {
    _this->_internal_set_denom(from._internal_denom());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryTotalEscrowForDenomRequest::CopyFrom(const QueryTotalEscrowForDenomRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.applications.transfer.v1.QueryTotalEscrowForDenomRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryTotalEscrowForDenomRequest::IsInitialized() const {
  return true;
}

void QueryTotalEscrowForDenomRequest::InternalSwap(QueryTotalEscrowForDenomRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.denom_, lhs_arena,
                                       &other->_impl_.denom_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryTotalEscrowForDenomRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto_getter, &descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto_once,
      file_level_metadata_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto[10]);
}
// ===================================================================

class QueryTotalEscrowForDenomResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryTotalEscrowForDenomResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryTotalEscrowForDenomResponse, _impl_._has_bits_);
  static const ::cosmos::base::v1beta1::Coin& amount(const QueryTotalEscrowForDenomResponse* msg);
  static void set_has_amount(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::v1beta1::Coin&
QueryTotalEscrowForDenomResponse::_Internal::amount(const QueryTotalEscrowForDenomResponse* msg) {
  return *msg->_impl_.amount_;
}
void QueryTotalEscrowForDenomResponse::clear_amount() {
  if (_impl_.amount_ != nullptr) _impl_.amount_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryTotalEscrowForDenomResponse::QueryTotalEscrowForDenomResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.applications.transfer.v1.QueryTotalEscrowForDenomResponse)
}
QueryTotalEscrowForDenomResponse::QueryTotalEscrowForDenomResponse(const QueryTotalEscrowForDenomResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryTotalEscrowForDenomResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.amount_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.amount_ = new ::cosmos::base::v1beta1::Coin(*from._impl_.amount_);
  }
  // @@protoc_insertion_point(copy_constructor:ibc.applications.transfer.v1.QueryTotalEscrowForDenomResponse)
}

inline void QueryTotalEscrowForDenomResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.amount_){nullptr}
  };
}

QueryTotalEscrowForDenomResponse::~QueryTotalEscrowForDenomResponse() {
  // @@protoc_insertion_point(destructor:ibc.applications.transfer.v1.QueryTotalEscrowForDenomResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryTotalEscrowForDenomResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.amount_;
}

void QueryTotalEscrowForDenomResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryTotalEscrowForDenomResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.applications.transfer.v1.QueryTotalEscrowForDenomResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.amount_ != nullptr);
    _impl_.amount_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryTotalEscrowForDenomResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cosmos.base.v1beta1.Coin amount = 1 [json_name = "amount", (.gogoproto.nullable) = false];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_amount(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryTotalEscrowForDenomResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.applications.transfer.v1.QueryTotalEscrowForDenomResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.v1beta1.Coin amount = 1 [json_name = "amount", (.gogoproto.nullable) = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::amount(this),
        _Internal::amount(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.applications.transfer.v1.QueryTotalEscrowForDenomResponse)
  return target;
}

::size_t QueryTotalEscrowForDenomResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.applications.transfer.v1.QueryTotalEscrowForDenomResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cosmos.base.v1beta1.Coin amount = 1 [json_name = "amount", (.gogoproto.nullable) = false];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.amount_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryTotalEscrowForDenomResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryTotalEscrowForDenomResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryTotalEscrowForDenomResponse::GetClassData() const { return &_class_data_; }


void QueryTotalEscrowForDenomResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryTotalEscrowForDenomResponse*>(&to_msg);
  auto& from = static_cast<const QueryTotalEscrowForDenomResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.applications.transfer.v1.QueryTotalEscrowForDenomResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_amount()->::cosmos::base::v1beta1::Coin::MergeFrom(
        from._internal_amount());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryTotalEscrowForDenomResponse::CopyFrom(const QueryTotalEscrowForDenomResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.applications.transfer.v1.QueryTotalEscrowForDenomResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryTotalEscrowForDenomResponse::IsInitialized() const {
  return true;
}

void QueryTotalEscrowForDenomResponse::InternalSwap(QueryTotalEscrowForDenomResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.amount_, other->_impl_.amount_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryTotalEscrowForDenomResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto_getter, &descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto_once,
      file_level_metadata_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto[11]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace transfer
}  // namespace applications
}  // namespace ibc
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ibc::applications::transfer::v1::QueryDenomTraceRequest*
Arena::CreateMaybeMessage< ::ibc::applications::transfer::v1::QueryDenomTraceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::applications::transfer::v1::QueryDenomTraceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ibc::applications::transfer::v1::QueryDenomTraceResponse*
Arena::CreateMaybeMessage< ::ibc::applications::transfer::v1::QueryDenomTraceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::applications::transfer::v1::QueryDenomTraceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ibc::applications::transfer::v1::QueryDenomTracesRequest*
Arena::CreateMaybeMessage< ::ibc::applications::transfer::v1::QueryDenomTracesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::applications::transfer::v1::QueryDenomTracesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ibc::applications::transfer::v1::QueryDenomTracesResponse*
Arena::CreateMaybeMessage< ::ibc::applications::transfer::v1::QueryDenomTracesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::applications::transfer::v1::QueryDenomTracesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ibc::applications::transfer::v1::QueryParamsRequest*
Arena::CreateMaybeMessage< ::ibc::applications::transfer::v1::QueryParamsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::applications::transfer::v1::QueryParamsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ibc::applications::transfer::v1::QueryParamsResponse*
Arena::CreateMaybeMessage< ::ibc::applications::transfer::v1::QueryParamsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::applications::transfer::v1::QueryParamsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ibc::applications::transfer::v1::QueryDenomHashRequest*
Arena::CreateMaybeMessage< ::ibc::applications::transfer::v1::QueryDenomHashRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::applications::transfer::v1::QueryDenomHashRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ibc::applications::transfer::v1::QueryDenomHashResponse*
Arena::CreateMaybeMessage< ::ibc::applications::transfer::v1::QueryDenomHashResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::applications::transfer::v1::QueryDenomHashResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ibc::applications::transfer::v1::QueryEscrowAddressRequest*
Arena::CreateMaybeMessage< ::ibc::applications::transfer::v1::QueryEscrowAddressRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::applications::transfer::v1::QueryEscrowAddressRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ibc::applications::transfer::v1::QueryEscrowAddressResponse*
Arena::CreateMaybeMessage< ::ibc::applications::transfer::v1::QueryEscrowAddressResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::applications::transfer::v1::QueryEscrowAddressResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ibc::applications::transfer::v1::QueryTotalEscrowForDenomRequest*
Arena::CreateMaybeMessage< ::ibc::applications::transfer::v1::QueryTotalEscrowForDenomRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::applications::transfer::v1::QueryTotalEscrowForDenomRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ibc::applications::transfer::v1::QueryTotalEscrowForDenomResponse*
Arena::CreateMaybeMessage< ::ibc::applications::transfer::v1::QueryTotalEscrowForDenomResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::applications::transfer::v1::QueryTotalEscrowForDenomResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
