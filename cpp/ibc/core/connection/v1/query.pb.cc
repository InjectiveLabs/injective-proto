// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ibc/core/connection/v1/query.proto

#include "ibc/core/connection/v1/query.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace ibc {
namespace core {
namespace connection {
namespace v1 {
template <typename>
PROTOBUF_CONSTEXPR QueryConnectionRequest::QueryConnectionRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.connection_id_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryConnectionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryConnectionRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryConnectionRequestDefaultTypeInternal() {}
  union {
    QueryConnectionRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryConnectionRequestDefaultTypeInternal _QueryConnectionRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryConnectionResponse::QueryConnectionResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.proof_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.connection_)*/nullptr
  , /*decltype(_impl_.proof_height_)*/nullptr} {}
struct QueryConnectionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryConnectionResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryConnectionResponseDefaultTypeInternal() {}
  union {
    QueryConnectionResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryConnectionResponseDefaultTypeInternal _QueryConnectionResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryConnectionsRequest::QueryConnectionsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.pagination_)*/nullptr} {}
struct QueryConnectionsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryConnectionsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryConnectionsRequestDefaultTypeInternal() {}
  union {
    QueryConnectionsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryConnectionsRequestDefaultTypeInternal _QueryConnectionsRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryConnectionsResponse::QueryConnectionsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.connections_)*/{}
  , /*decltype(_impl_.pagination_)*/nullptr
  , /*decltype(_impl_.height_)*/nullptr} {}
struct QueryConnectionsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryConnectionsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryConnectionsResponseDefaultTypeInternal() {}
  union {
    QueryConnectionsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryConnectionsResponseDefaultTypeInternal _QueryConnectionsResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryClientConnectionsRequest::QueryClientConnectionsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.client_id_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryClientConnectionsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryClientConnectionsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryClientConnectionsRequestDefaultTypeInternal() {}
  union {
    QueryClientConnectionsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryClientConnectionsRequestDefaultTypeInternal _QueryClientConnectionsRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryClientConnectionsResponse::QueryClientConnectionsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.connection_paths_)*/{}
  , /*decltype(_impl_.proof_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.proof_height_)*/nullptr} {}
struct QueryClientConnectionsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryClientConnectionsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryClientConnectionsResponseDefaultTypeInternal() {}
  union {
    QueryClientConnectionsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryClientConnectionsResponseDefaultTypeInternal _QueryClientConnectionsResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryConnectionClientStateRequest::QueryConnectionClientStateRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.connection_id_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryConnectionClientStateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryConnectionClientStateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryConnectionClientStateRequestDefaultTypeInternal() {}
  union {
    QueryConnectionClientStateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryConnectionClientStateRequestDefaultTypeInternal _QueryConnectionClientStateRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryConnectionClientStateResponse::QueryConnectionClientStateResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.proof_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.identified_client_state_)*/nullptr
  , /*decltype(_impl_.proof_height_)*/nullptr} {}
struct QueryConnectionClientStateResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryConnectionClientStateResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryConnectionClientStateResponseDefaultTypeInternal() {}
  union {
    QueryConnectionClientStateResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryConnectionClientStateResponseDefaultTypeInternal _QueryConnectionClientStateResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryConnectionConsensusStateRequest::QueryConnectionConsensusStateRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.connection_id_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.revision_number_)*/ ::uint64_t{0u}

  , /*decltype(_impl_.revision_height_)*/ ::uint64_t{0u}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryConnectionConsensusStateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryConnectionConsensusStateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryConnectionConsensusStateRequestDefaultTypeInternal() {}
  union {
    QueryConnectionConsensusStateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryConnectionConsensusStateRequestDefaultTypeInternal _QueryConnectionConsensusStateRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryConnectionConsensusStateResponse::QueryConnectionConsensusStateResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.client_id_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.proof_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.consensus_state_)*/nullptr
  , /*decltype(_impl_.proof_height_)*/nullptr} {}
struct QueryConnectionConsensusStateResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryConnectionConsensusStateResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryConnectionConsensusStateResponseDefaultTypeInternal() {}
  union {
    QueryConnectionConsensusStateResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryConnectionConsensusStateResponseDefaultTypeInternal _QueryConnectionConsensusStateResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryConnectionParamsRequest::QueryConnectionParamsRequest(
    ::_pbi::ConstantInitialized) {}
struct QueryConnectionParamsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryConnectionParamsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryConnectionParamsRequestDefaultTypeInternal() {}
  union {
    QueryConnectionParamsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryConnectionParamsRequestDefaultTypeInternal _QueryConnectionParamsRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryConnectionParamsResponse::QueryConnectionParamsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.params_)*/nullptr} {}
struct QueryConnectionParamsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryConnectionParamsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryConnectionParamsResponseDefaultTypeInternal() {}
  union {
    QueryConnectionParamsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryConnectionParamsResponseDefaultTypeInternal _QueryConnectionParamsResponse_default_instance_;
}  // namespace v1
}  // namespace connection
}  // namespace core
}  // namespace ibc
static ::_pb::Metadata file_level_metadata_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto[12];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto = nullptr;
const ::uint32_t TableStruct_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ibc::core::connection::v1::QueryConnectionRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::core::connection::v1::QueryConnectionRequest, _impl_.connection_id_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::connection::v1::QueryConnectionResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::connection::v1::QueryConnectionResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::core::connection::v1::QueryConnectionResponse, _impl_.connection_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::connection::v1::QueryConnectionResponse, _impl_.proof_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::connection::v1::QueryConnectionResponse, _impl_.proof_height_),
    0,
    ~0u,
    1,
    PROTOBUF_FIELD_OFFSET(::ibc::core::connection::v1::QueryConnectionsRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::connection::v1::QueryConnectionsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::core::connection::v1::QueryConnectionsRequest, _impl_.pagination_),
    0,
    PROTOBUF_FIELD_OFFSET(::ibc::core::connection::v1::QueryConnectionsResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::connection::v1::QueryConnectionsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::core::connection::v1::QueryConnectionsResponse, _impl_.connections_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::connection::v1::QueryConnectionsResponse, _impl_.pagination_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::connection::v1::QueryConnectionsResponse, _impl_.height_),
    ~0u,
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ibc::core::connection::v1::QueryClientConnectionsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::core::connection::v1::QueryClientConnectionsRequest, _impl_.client_id_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::connection::v1::QueryClientConnectionsResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::connection::v1::QueryClientConnectionsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::core::connection::v1::QueryClientConnectionsResponse, _impl_.connection_paths_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::connection::v1::QueryClientConnectionsResponse, _impl_.proof_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::connection::v1::QueryClientConnectionsResponse, _impl_.proof_height_),
    ~0u,
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ibc::core::connection::v1::QueryConnectionClientStateRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::core::connection::v1::QueryConnectionClientStateRequest, _impl_.connection_id_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::connection::v1::QueryConnectionClientStateResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::connection::v1::QueryConnectionClientStateResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::core::connection::v1::QueryConnectionClientStateResponse, _impl_.identified_client_state_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::connection::v1::QueryConnectionClientStateResponse, _impl_.proof_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::connection::v1::QueryConnectionClientStateResponse, _impl_.proof_height_),
    0,
    ~0u,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ibc::core::connection::v1::QueryConnectionConsensusStateRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::core::connection::v1::QueryConnectionConsensusStateRequest, _impl_.connection_id_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::connection::v1::QueryConnectionConsensusStateRequest, _impl_.revision_number_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::connection::v1::QueryConnectionConsensusStateRequest, _impl_.revision_height_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::connection::v1::QueryConnectionConsensusStateResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::connection::v1::QueryConnectionConsensusStateResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::core::connection::v1::QueryConnectionConsensusStateResponse, _impl_.consensus_state_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::connection::v1::QueryConnectionConsensusStateResponse, _impl_.client_id_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::connection::v1::QueryConnectionConsensusStateResponse, _impl_.proof_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::connection::v1::QueryConnectionConsensusStateResponse, _impl_.proof_height_),
    0,
    ~0u,
    ~0u,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ibc::core::connection::v1::QueryConnectionParamsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::core::connection::v1::QueryConnectionParamsResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::connection::v1::QueryConnectionParamsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::core::connection::v1::QueryConnectionParamsResponse, _impl_.params_),
    0,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::ibc::core::connection::v1::QueryConnectionRequest)},
        { 9, 20, -1, sizeof(::ibc::core::connection::v1::QueryConnectionResponse)},
        { 23, 32, -1, sizeof(::ibc::core::connection::v1::QueryConnectionsRequest)},
        { 33, 44, -1, sizeof(::ibc::core::connection::v1::QueryConnectionsResponse)},
        { 47, -1, -1, sizeof(::ibc::core::connection::v1::QueryClientConnectionsRequest)},
        { 56, 67, -1, sizeof(::ibc::core::connection::v1::QueryClientConnectionsResponse)},
        { 70, -1, -1, sizeof(::ibc::core::connection::v1::QueryConnectionClientStateRequest)},
        { 79, 90, -1, sizeof(::ibc::core::connection::v1::QueryConnectionClientStateResponse)},
        { 93, -1, -1, sizeof(::ibc::core::connection::v1::QueryConnectionConsensusStateRequest)},
        { 104, 116, -1, sizeof(::ibc::core::connection::v1::QueryConnectionConsensusStateResponse)},
        { 120, -1, -1, sizeof(::ibc::core::connection::v1::QueryConnectionParamsRequest)},
        { 128, 137, -1, sizeof(::ibc::core::connection::v1::QueryConnectionParamsResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::ibc::core::connection::v1::_QueryConnectionRequest_default_instance_._instance,
    &::ibc::core::connection::v1::_QueryConnectionResponse_default_instance_._instance,
    &::ibc::core::connection::v1::_QueryConnectionsRequest_default_instance_._instance,
    &::ibc::core::connection::v1::_QueryConnectionsResponse_default_instance_._instance,
    &::ibc::core::connection::v1::_QueryClientConnectionsRequest_default_instance_._instance,
    &::ibc::core::connection::v1::_QueryClientConnectionsResponse_default_instance_._instance,
    &::ibc::core::connection::v1::_QueryConnectionClientStateRequest_default_instance_._instance,
    &::ibc::core::connection::v1::_QueryConnectionClientStateResponse_default_instance_._instance,
    &::ibc::core::connection::v1::_QueryConnectionConsensusStateRequest_default_instance_._instance,
    &::ibc::core::connection::v1::_QueryConnectionConsensusStateResponse_default_instance_._instance,
    &::ibc::core::connection::v1::_QueryConnectionParamsRequest_default_instance_._instance,
    &::ibc::core::connection::v1::_QueryConnectionParamsResponse_default_instance_._instance,
};
const char descriptor_table_protodef_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\"ibc/core/connection/v1/query.proto\022\026ib"
    "c.core.connection.v1\032\024gogoproto/gogo.pro"
    "to\032*cosmos/base/query/v1beta1/pagination"
    ".proto\032\037ibc/core/client/v1/client.proto\032"
    "\'ibc/core/connection/v1/connection.proto"
    "\032\034google/api/annotations.proto\032\031google/p"
    "rotobuf/any.proto\"=\n\026QueryConnectionRequ"
    "est\022#\n\rconnection_id\030\001 \001(\tR\014connectionId"
    "\"\273\001\n\027QueryConnectionResponse\022E\n\nconnecti"
    "on\030\001 \001(\0132%.ibc.core.connection.v1.Connec"
    "tionEndR\nconnection\022\024\n\005proof\030\002 \001(\014R\005proo"
    "f\022C\n\014proof_height\030\003 \001(\0132\032.ibc.core.clien"
    "t.v1.HeightB\004\310\336\037\000R\013proofHeight\"a\n\027QueryC"
    "onnectionsRequest\022F\n\npagination\030\001 \001(\0132&."
    "cosmos.base.query.v1beta1.PageRequestR\np"
    "agination\"\355\001\n\030QueryConnectionsResponse\022N"
    "\n\013connections\030\001 \003(\0132,.ibc.core.connectio"
    "n.v1.IdentifiedConnectionR\013connections\022G"
    "\n\npagination\030\002 \001(\0132\'.cosmos.base.query.v"
    "1beta1.PageResponseR\npagination\0228\n\006heigh"
    "t\030\003 \001(\0132\032.ibc.core.client.v1.HeightB\004\310\336\037"
    "\000R\006height\"<\n\035QueryClientConnectionsReque"
    "st\022\033\n\tclient_id\030\001 \001(\tR\010clientId\"\246\001\n\036Quer"
    "yClientConnectionsResponse\022)\n\020connection"
    "_paths\030\001 \003(\tR\017connectionPaths\022\024\n\005proof\030\002"
    " \001(\014R\005proof\022C\n\014proof_height\030\003 \001(\0132\032.ibc."
    "core.client.v1.HeightB\004\310\336\037\000R\013proofHeight"
    "\"H\n!QueryConnectionClientStateRequest\022#\n"
    "\rconnection_id\030\001 \001(\tR\014connectionId\"\342\001\n\"Q"
    "ueryConnectionClientStateResponse\022a\n\027ide"
    "ntified_client_state\030\001 \001(\0132).ibc.core.cl"
    "ient.v1.IdentifiedClientStateR\025identifie"
    "dClientState\022\024\n\005proof\030\002 \001(\014R\005proof\022C\n\014pr"
    "oof_height\030\003 \001(\0132\032.ibc.core.client.v1.He"
    "ightB\004\310\336\037\000R\013proofHeight\"\235\001\n$QueryConnect"
    "ionConsensusStateRequest\022#\n\rconnection_i"
    "d\030\001 \001(\tR\014connectionId\022\'\n\017revision_number"
    "\030\002 \001(\004R\016revisionNumber\022\'\n\017revision_heigh"
    "t\030\003 \001(\004R\016revisionHeight\"\336\001\n%QueryConnect"
    "ionConsensusStateResponse\022=\n\017consensus_s"
    "tate\030\001 \001(\0132\024.google.protobuf.AnyR\016consen"
    "susState\022\033\n\tclient_id\030\002 \001(\tR\010clientId\022\024\n"
    "\005proof\030\003 \001(\014R\005proof\022C\n\014proof_height\030\004 \001("
    "\0132\032.ibc.core.client.v1.HeightB\004\310\336\037\000R\013pro"
    "ofHeight\"\036\n\034QueryConnectionParamsRequest"
    "\"W\n\035QueryConnectionParamsResponse\0226\n\006par"
    "ams\030\001 \001(\0132\036.ibc.core.connection.v1.Param"
    "sR\006params2\271\t\n\005Query\022\252\001\n\nConnection\022..ibc"
    ".core.connection.v1.QueryConnectionReque"
    "st\032/.ibc.core.connection.v1.QueryConnect"
    "ionResponse\";\202\323\344\223\0025\0223/ibc/core/connectio"
    "n/v1/connections/{connection_id}\022\235\001\n\013Con"
    "nections\022/.ibc.core.connection.v1.QueryC"
    "onnectionsRequest\0320.ibc.core.connection."
    "v1.QueryConnectionsResponse\"+\202\323\344\223\002%\022#/ib"
    "c/core/connection/v1/connections\022\302\001\n\021Cli"
    "entConnections\0225.ibc.core.connection.v1."
    "QueryClientConnectionsRequest\0326.ibc.core"
    ".connection.v1.QueryClientConnectionsRes"
    "ponse\">\202\323\344\223\0028\0226/ibc/core/connection/v1/c"
    "lient_connections/{client_id}\022\330\001\n\025Connec"
    "tionClientState\0229.ibc.core.connection.v1"
    ".QueryConnectionClientStateRequest\032:.ibc"
    ".core.connection.v1.QueryConnectionClien"
    "tStateResponse\"H\202\323\344\223\002B\022@/ibc/core/connec"
    "tion/v1/connections/{connection_id}/clie"
    "nt_state\022\230\002\n\030ConnectionConsensusState\022<."
    "ibc.core.connection.v1.QueryConnectionCo"
    "nsensusStateRequest\032=.ibc.core.connectio"
    "n.v1.QueryConnectionConsensusStateRespon"
    "se\"\177\202\323\344\223\002y\022w/ibc/core/connection/v1/conn"
    "ections/{connection_id}/consensus_state/"
    "revision/{revision_number}/height/{revis"
    "ion_height}\022\247\001\n\020ConnectionParams\0224.ibc.c"
    "ore.connection.v1.QueryConnectionParamsR"
    "equest\0325.ibc.core.connection.v1.QueryCon"
    "nectionParamsResponse\"&\202\323\344\223\002 \022\036/ibc/core"
    "/connection/v1/paramsB\341\001\n\032com.ibc.core.c"
    "onnection.v1B\nQueryProtoP\001Z<github.com/c"
    "osmos/ibc-go/v7/modules/core/03-connecti"
    "on/types\242\002\003ICC\252\002\026Ibc.Core.Connection.V1\312"
    "\002\026Ibc\\Core\\Connection\\V1\342\002\"Ibc\\Core\\Conn"
    "ection\\V1\\GPBMetadata\352\002\031Ibc::Core::Conne"
    "ction::V1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto_deps[6] =
    {
        &::descriptor_table_cosmos_2fbase_2fquery_2fv1beta1_2fpagination_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_google_2fapi_2fannotations_2eproto,
        &::descriptor_table_google_2fprotobuf_2fany_2eproto,
        &::descriptor_table_ibc_2fcore_2fclient_2fv1_2fclient_2eproto,
        &::descriptor_table_ibc_2fcore_2fconnection_2fv1_2fconnection_2eproto,
};
static ::absl::once_flag descriptor_table_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto = {
    false,
    false,
    3337,
    descriptor_table_protodef_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto,
    "ibc/core/connection/v1/query.proto",
    &descriptor_table_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto_once,
    descriptor_table_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto_deps,
    6,
    12,
    schemas,
    file_default_instances,
    TableStruct_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto::offsets,
    file_level_metadata_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto,
    file_level_enum_descriptors_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto,
    file_level_service_descriptors_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto_getter() {
  return &descriptor_table_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto(&descriptor_table_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto);
namespace ibc {
namespace core {
namespace connection {
namespace v1 {
// ===================================================================

class QueryConnectionRequest::_Internal {
 public:
};

QueryConnectionRequest::QueryConnectionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.core.connection.v1.QueryConnectionRequest)
}
QueryConnectionRequest::QueryConnectionRequest(const QueryConnectionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryConnectionRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.connection_id_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.connection_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.connection_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_connection_id().empty()) {
    _this->_impl_.connection_id_.Set(from._internal_connection_id(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ibc.core.connection.v1.QueryConnectionRequest)
}

inline void QueryConnectionRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.connection_id_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.connection_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.connection_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryConnectionRequest::~QueryConnectionRequest() {
  // @@protoc_insertion_point(destructor:ibc.core.connection.v1.QueryConnectionRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryConnectionRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.connection_id_.Destroy();
}

void QueryConnectionRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryConnectionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.core.connection.v1.QueryConnectionRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.connection_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryConnectionRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string connection_id = 1 [json_name = "connectionId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_connection_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ibc.core.connection.v1.QueryConnectionRequest.connection_id"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryConnectionRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.core.connection.v1.QueryConnectionRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string connection_id = 1 [json_name = "connectionId"];
  if (!this->_internal_connection_id().empty()) {
    const std::string& _s = this->_internal_connection_id();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "ibc.core.connection.v1.QueryConnectionRequest.connection_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.core.connection.v1.QueryConnectionRequest)
  return target;
}

::size_t QueryConnectionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.core.connection.v1.QueryConnectionRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string connection_id = 1 [json_name = "connectionId"];
  if (!this->_internal_connection_id().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_connection_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryConnectionRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryConnectionRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryConnectionRequest::GetClassData() const { return &_class_data_; }


void QueryConnectionRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryConnectionRequest*>(&to_msg);
  auto& from = static_cast<const QueryConnectionRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.core.connection.v1.QueryConnectionRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_connection_id().empty()) {
    _this->_internal_set_connection_id(from._internal_connection_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryConnectionRequest::CopyFrom(const QueryConnectionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.core.connection.v1.QueryConnectionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryConnectionRequest::IsInitialized() const {
  return true;
}

void QueryConnectionRequest::InternalSwap(QueryConnectionRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.connection_id_, lhs_arena,
                                       &other->_impl_.connection_id_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryConnectionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto_getter, &descriptor_table_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto_once,
      file_level_metadata_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto[0]);
}
// ===================================================================

class QueryConnectionResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryConnectionResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryConnectionResponse, _impl_._has_bits_);
  static const ::ibc::core::connection::v1::ConnectionEnd& connection(const QueryConnectionResponse* msg);
  static void set_has_connection(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::ibc::core::client::v1::Height& proof_height(const QueryConnectionResponse* msg);
  static void set_has_proof_height(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::ibc::core::connection::v1::ConnectionEnd&
QueryConnectionResponse::_Internal::connection(const QueryConnectionResponse* msg) {
  return *msg->_impl_.connection_;
}
const ::ibc::core::client::v1::Height&
QueryConnectionResponse::_Internal::proof_height(const QueryConnectionResponse* msg) {
  return *msg->_impl_.proof_height_;
}
void QueryConnectionResponse::clear_connection() {
  if (_impl_.connection_ != nullptr) _impl_.connection_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void QueryConnectionResponse::clear_proof_height() {
  if (_impl_.proof_height_ != nullptr) _impl_.proof_height_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
QueryConnectionResponse::QueryConnectionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.core.connection.v1.QueryConnectionResponse)
}
QueryConnectionResponse::QueryConnectionResponse(const QueryConnectionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryConnectionResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.proof_) {}

    , decltype(_impl_.connection_){nullptr}
    , decltype(_impl_.proof_height_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.proof_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.proof_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_proof().empty()) {
    _this->_impl_.proof_.Set(from._internal_proof(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.connection_ = new ::ibc::core::connection::v1::ConnectionEnd(*from._impl_.connection_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.proof_height_ = new ::ibc::core::client::v1::Height(*from._impl_.proof_height_);
  }
  // @@protoc_insertion_point(copy_constructor:ibc.core.connection.v1.QueryConnectionResponse)
}

inline void QueryConnectionResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.proof_) {}

    , decltype(_impl_.connection_){nullptr}
    , decltype(_impl_.proof_height_){nullptr}
  };
  _impl_.proof_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.proof_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryConnectionResponse::~QueryConnectionResponse() {
  // @@protoc_insertion_point(destructor:ibc.core.connection.v1.QueryConnectionResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryConnectionResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.proof_.Destroy();
  if (this != internal_default_instance()) delete _impl_.connection_;
  if (this != internal_default_instance()) delete _impl_.proof_height_;
}

void QueryConnectionResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryConnectionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.core.connection.v1.QueryConnectionResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.proof_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.connection_ != nullptr);
      _impl_.connection_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.proof_height_ != nullptr);
      _impl_.proof_height_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryConnectionResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ibc.core.connection.v1.ConnectionEnd connection = 1 [json_name = "connection"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_connection(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // bytes proof = 2 [json_name = "proof"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_proof();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .ibc.core.client.v1.Height proof_height = 3 [json_name = "proofHeight", (.gogoproto.nullable) = false];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_proof_height(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryConnectionResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.core.connection.v1.QueryConnectionResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .ibc.core.connection.v1.ConnectionEnd connection = 1 [json_name = "connection"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::connection(this),
        _Internal::connection(this).GetCachedSize(), target, stream);
  }

  // bytes proof = 2 [json_name = "proof"];
  if (!this->_internal_proof().empty()) {
    const std::string& _s = this->_internal_proof();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  // .ibc.core.client.v1.Height proof_height = 3 [json_name = "proofHeight", (.gogoproto.nullable) = false];
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::proof_height(this),
        _Internal::proof_height(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.core.connection.v1.QueryConnectionResponse)
  return target;
}

::size_t QueryConnectionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.core.connection.v1.QueryConnectionResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes proof = 2 [json_name = "proof"];
  if (!this->_internal_proof().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
                                    this->_internal_proof());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .ibc.core.connection.v1.ConnectionEnd connection = 1 [json_name = "connection"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.connection_);
    }

    // .ibc.core.client.v1.Height proof_height = 3 [json_name = "proofHeight", (.gogoproto.nullable) = false];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.proof_height_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryConnectionResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryConnectionResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryConnectionResponse::GetClassData() const { return &_class_data_; }


void QueryConnectionResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryConnectionResponse*>(&to_msg);
  auto& from = static_cast<const QueryConnectionResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.core.connection.v1.QueryConnectionResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_proof().empty()) {
    _this->_internal_set_proof(from._internal_proof());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_connection()->::ibc::core::connection::v1::ConnectionEnd::MergeFrom(
          from._internal_connection());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_proof_height()->::ibc::core::client::v1::Height::MergeFrom(
          from._internal_proof_height());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryConnectionResponse::CopyFrom(const QueryConnectionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.core.connection.v1.QueryConnectionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryConnectionResponse::IsInitialized() const {
  return true;
}

void QueryConnectionResponse::InternalSwap(QueryConnectionResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.proof_, lhs_arena,
                                       &other->_impl_.proof_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(QueryConnectionResponse, _impl_.proof_height_)
      + sizeof(QueryConnectionResponse::_impl_.proof_height_)
      - PROTOBUF_FIELD_OFFSET(QueryConnectionResponse, _impl_.connection_)>(
          reinterpret_cast<char*>(&_impl_.connection_),
          reinterpret_cast<char*>(&other->_impl_.connection_));
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryConnectionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto_getter, &descriptor_table_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto_once,
      file_level_metadata_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto[1]);
}
// ===================================================================

class QueryConnectionsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryConnectionsRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryConnectionsRequest, _impl_._has_bits_);
  static const ::cosmos::base::query::v1beta1::PageRequest& pagination(const QueryConnectionsRequest* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::query::v1beta1::PageRequest&
QueryConnectionsRequest::_Internal::pagination(const QueryConnectionsRequest* msg) {
  return *msg->_impl_.pagination_;
}
void QueryConnectionsRequest::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryConnectionsRequest::QueryConnectionsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.core.connection.v1.QueryConnectionsRequest)
}
QueryConnectionsRequest::QueryConnectionsRequest(const QueryConnectionsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryConnectionsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.pagination_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::cosmos::base::query::v1beta1::PageRequest(*from._impl_.pagination_);
  }
  // @@protoc_insertion_point(copy_constructor:ibc.core.connection.v1.QueryConnectionsRequest)
}

inline void QueryConnectionsRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.pagination_){nullptr}
  };
}

QueryConnectionsRequest::~QueryConnectionsRequest() {
  // @@protoc_insertion_point(destructor:ibc.core.connection.v1.QueryConnectionsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryConnectionsRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.pagination_;
}

void QueryConnectionsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryConnectionsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.core.connection.v1.QueryConnectionsRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryConnectionsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cosmos.base.query.v1beta1.PageRequest pagination = 1 [json_name = "pagination"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagination(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryConnectionsRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.core.connection.v1.QueryConnectionsRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.query.v1beta1.PageRequest pagination = 1 [json_name = "pagination"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.core.connection.v1.QueryConnectionsRequest)
  return target;
}

::size_t QueryConnectionsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.core.connection.v1.QueryConnectionsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cosmos.base.query.v1beta1.PageRequest pagination = 1 [json_name = "pagination"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryConnectionsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryConnectionsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryConnectionsRequest::GetClassData() const { return &_class_data_; }


void QueryConnectionsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryConnectionsRequest*>(&to_msg);
  auto& from = static_cast<const QueryConnectionsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.core.connection.v1.QueryConnectionsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::cosmos::base::query::v1beta1::PageRequest::MergeFrom(
        from._internal_pagination());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryConnectionsRequest::CopyFrom(const QueryConnectionsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.core.connection.v1.QueryConnectionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryConnectionsRequest::IsInitialized() const {
  return true;
}

void QueryConnectionsRequest::InternalSwap(QueryConnectionsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryConnectionsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto_getter, &descriptor_table_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto_once,
      file_level_metadata_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto[2]);
}
// ===================================================================

class QueryConnectionsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryConnectionsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryConnectionsResponse, _impl_._has_bits_);
  static const ::cosmos::base::query::v1beta1::PageResponse& pagination(const QueryConnectionsResponse* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::ibc::core::client::v1::Height& height(const QueryConnectionsResponse* msg);
  static void set_has_height(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::cosmos::base::query::v1beta1::PageResponse&
QueryConnectionsResponse::_Internal::pagination(const QueryConnectionsResponse* msg) {
  return *msg->_impl_.pagination_;
}
const ::ibc::core::client::v1::Height&
QueryConnectionsResponse::_Internal::height(const QueryConnectionsResponse* msg) {
  return *msg->_impl_.height_;
}
void QueryConnectionsResponse::clear_connections() {
  _internal_mutable_connections()->Clear();
}
void QueryConnectionsResponse::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void QueryConnectionsResponse::clear_height() {
  if (_impl_.height_ != nullptr) _impl_.height_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
QueryConnectionsResponse::QueryConnectionsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.core.connection.v1.QueryConnectionsResponse)
}
QueryConnectionsResponse::QueryConnectionsResponse(const QueryConnectionsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryConnectionsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.connections_){from._impl_.connections_}
    , decltype(_impl_.pagination_){nullptr}
    , decltype(_impl_.height_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::cosmos::base::query::v1beta1::PageResponse(*from._impl_.pagination_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.height_ = new ::ibc::core::client::v1::Height(*from._impl_.height_);
  }
  // @@protoc_insertion_point(copy_constructor:ibc.core.connection.v1.QueryConnectionsResponse)
}

inline void QueryConnectionsResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.connections_){arena}
    , decltype(_impl_.pagination_){nullptr}
    , decltype(_impl_.height_){nullptr}
  };
}

QueryConnectionsResponse::~QueryConnectionsResponse() {
  // @@protoc_insertion_point(destructor:ibc.core.connection.v1.QueryConnectionsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryConnectionsResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_connections()->~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.pagination_;
  if (this != internal_default_instance()) delete _impl_.height_;
}

void QueryConnectionsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryConnectionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.core.connection.v1.QueryConnectionsResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_connections()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.pagination_ != nullptr);
      _impl_.pagination_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.height_ != nullptr);
      _impl_.height_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryConnectionsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ibc.core.connection.v1.IdentifiedConnection connections = 1 [json_name = "connections"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_connections(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagination(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .ibc.core.client.v1.Height height = 3 [json_name = "height", (.gogoproto.nullable) = false];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_height(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryConnectionsResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.core.connection.v1.QueryConnectionsResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ibc.core.connection.v1.IdentifiedConnection connections = 1 [json_name = "connections"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_connections_size()); i < n; i++) {
    const auto& repfield = this->_internal_connections(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  // .ibc.core.client.v1.Height height = 3 [json_name = "height", (.gogoproto.nullable) = false];
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::height(this),
        _Internal::height(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.core.connection.v1.QueryConnectionsResponse)
  return target;
}

::size_t QueryConnectionsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.core.connection.v1.QueryConnectionsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ibc.core.connection.v1.IdentifiedConnection connections = 1 [json_name = "connections"];
  total_size += 1UL * this->_internal_connections_size();
  for (const auto& msg : this->_internal_connections()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.pagination_);
    }

    // .ibc.core.client.v1.Height height = 3 [json_name = "height", (.gogoproto.nullable) = false];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.height_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryConnectionsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryConnectionsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryConnectionsResponse::GetClassData() const { return &_class_data_; }


void QueryConnectionsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryConnectionsResponse*>(&to_msg);
  auto& from = static_cast<const QueryConnectionsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.core.connection.v1.QueryConnectionsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_connections()->MergeFrom(from._internal_connections());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_pagination()->::cosmos::base::query::v1beta1::PageResponse::MergeFrom(
          from._internal_pagination());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_height()->::ibc::core::client::v1::Height::MergeFrom(
          from._internal_height());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryConnectionsResponse::CopyFrom(const QueryConnectionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.core.connection.v1.QueryConnectionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryConnectionsResponse::IsInitialized() const {
  return true;
}

void QueryConnectionsResponse::InternalSwap(QueryConnectionsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _internal_mutable_connections()->InternalSwap(other->_internal_mutable_connections());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(QueryConnectionsResponse, _impl_.height_)
      + sizeof(QueryConnectionsResponse::_impl_.height_)
      - PROTOBUF_FIELD_OFFSET(QueryConnectionsResponse, _impl_.pagination_)>(
          reinterpret_cast<char*>(&_impl_.pagination_),
          reinterpret_cast<char*>(&other->_impl_.pagination_));
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryConnectionsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto_getter, &descriptor_table_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto_once,
      file_level_metadata_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto[3]);
}
// ===================================================================

class QueryClientConnectionsRequest::_Internal {
 public:
};

QueryClientConnectionsRequest::QueryClientConnectionsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.core.connection.v1.QueryClientConnectionsRequest)
}
QueryClientConnectionsRequest::QueryClientConnectionsRequest(const QueryClientConnectionsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryClientConnectionsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.client_id_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.client_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.client_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_client_id().empty()) {
    _this->_impl_.client_id_.Set(from._internal_client_id(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ibc.core.connection.v1.QueryClientConnectionsRequest)
}

inline void QueryClientConnectionsRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.client_id_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.client_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.client_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryClientConnectionsRequest::~QueryClientConnectionsRequest() {
  // @@protoc_insertion_point(destructor:ibc.core.connection.v1.QueryClientConnectionsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryClientConnectionsRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.client_id_.Destroy();
}

void QueryClientConnectionsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryClientConnectionsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.core.connection.v1.QueryClientConnectionsRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.client_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryClientConnectionsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string client_id = 1 [json_name = "clientId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_client_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ibc.core.connection.v1.QueryClientConnectionsRequest.client_id"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryClientConnectionsRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.core.connection.v1.QueryClientConnectionsRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string client_id = 1 [json_name = "clientId"];
  if (!this->_internal_client_id().empty()) {
    const std::string& _s = this->_internal_client_id();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "ibc.core.connection.v1.QueryClientConnectionsRequest.client_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.core.connection.v1.QueryClientConnectionsRequest)
  return target;
}

::size_t QueryClientConnectionsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.core.connection.v1.QueryClientConnectionsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string client_id = 1 [json_name = "clientId"];
  if (!this->_internal_client_id().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_client_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryClientConnectionsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryClientConnectionsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryClientConnectionsRequest::GetClassData() const { return &_class_data_; }


void QueryClientConnectionsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryClientConnectionsRequest*>(&to_msg);
  auto& from = static_cast<const QueryClientConnectionsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.core.connection.v1.QueryClientConnectionsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_client_id().empty()) {
    _this->_internal_set_client_id(from._internal_client_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryClientConnectionsRequest::CopyFrom(const QueryClientConnectionsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.core.connection.v1.QueryClientConnectionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryClientConnectionsRequest::IsInitialized() const {
  return true;
}

void QueryClientConnectionsRequest::InternalSwap(QueryClientConnectionsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.client_id_, lhs_arena,
                                       &other->_impl_.client_id_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryClientConnectionsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto_getter, &descriptor_table_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto_once,
      file_level_metadata_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto[4]);
}
// ===================================================================

class QueryClientConnectionsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryClientConnectionsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryClientConnectionsResponse, _impl_._has_bits_);
  static const ::ibc::core::client::v1::Height& proof_height(const QueryClientConnectionsResponse* msg);
  static void set_has_proof_height(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ibc::core::client::v1::Height&
QueryClientConnectionsResponse::_Internal::proof_height(const QueryClientConnectionsResponse* msg) {
  return *msg->_impl_.proof_height_;
}
void QueryClientConnectionsResponse::clear_proof_height() {
  if (_impl_.proof_height_ != nullptr) _impl_.proof_height_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryClientConnectionsResponse::QueryClientConnectionsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.core.connection.v1.QueryClientConnectionsResponse)
}
QueryClientConnectionsResponse::QueryClientConnectionsResponse(const QueryClientConnectionsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryClientConnectionsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.connection_paths_){from._impl_.connection_paths_}
    , decltype(_impl_.proof_) {}

    , decltype(_impl_.proof_height_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.proof_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.proof_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_proof().empty()) {
    _this->_impl_.proof_.Set(from._internal_proof(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.proof_height_ = new ::ibc::core::client::v1::Height(*from._impl_.proof_height_);
  }
  // @@protoc_insertion_point(copy_constructor:ibc.core.connection.v1.QueryClientConnectionsResponse)
}

inline void QueryClientConnectionsResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.connection_paths_){arena}
    , decltype(_impl_.proof_) {}

    , decltype(_impl_.proof_height_){nullptr}
  };
  _impl_.proof_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.proof_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryClientConnectionsResponse::~QueryClientConnectionsResponse() {
  // @@protoc_insertion_point(destructor:ibc.core.connection.v1.QueryClientConnectionsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryClientConnectionsResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_connection_paths()->~RepeatedPtrField();
  _impl_.proof_.Destroy();
  if (this != internal_default_instance()) delete _impl_.proof_height_;
}

void QueryClientConnectionsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryClientConnectionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.core.connection.v1.QueryClientConnectionsResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_connection_paths()->Clear();
  _impl_.proof_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.proof_height_ != nullptr);
    _impl_.proof_height_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryClientConnectionsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string connection_paths = 1 [json_name = "connectionPaths"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_connection_paths();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "ibc.core.connection.v1.QueryClientConnectionsResponse.connection_paths"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // bytes proof = 2 [json_name = "proof"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_proof();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .ibc.core.client.v1.Height proof_height = 3 [json_name = "proofHeight", (.gogoproto.nullable) = false];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_proof_height(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryClientConnectionsResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.core.connection.v1.QueryClientConnectionsResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string connection_paths = 1 [json_name = "connectionPaths"];
  for (int i = 0, n = this->_internal_connection_paths_size(); i < n; ++i) {
    const auto& s = this->_internal_connection_paths(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "ibc.core.connection.v1.QueryClientConnectionsResponse.connection_paths");
    target = stream->WriteString(1, s, target);
  }

  // bytes proof = 2 [json_name = "proof"];
  if (!this->_internal_proof().empty()) {
    const std::string& _s = this->_internal_proof();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .ibc.core.client.v1.Height proof_height = 3 [json_name = "proofHeight", (.gogoproto.nullable) = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::proof_height(this),
        _Internal::proof_height(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.core.connection.v1.QueryClientConnectionsResponse)
  return target;
}

::size_t QueryClientConnectionsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.core.connection.v1.QueryClientConnectionsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string connection_paths = 1 [json_name = "connectionPaths"];
  total_size += 1 * ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_internal_connection_paths().size());
  for (int i = 0, n = _internal_connection_paths().size(); i < n; ++i) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        _internal_connection_paths().Get(i));
  }

  // bytes proof = 2 [json_name = "proof"];
  if (!this->_internal_proof().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
                                    this->_internal_proof());
  }

  // .ibc.core.client.v1.Height proof_height = 3 [json_name = "proofHeight", (.gogoproto.nullable) = false];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.proof_height_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryClientConnectionsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryClientConnectionsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryClientConnectionsResponse::GetClassData() const { return &_class_data_; }


void QueryClientConnectionsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryClientConnectionsResponse*>(&to_msg);
  auto& from = static_cast<const QueryClientConnectionsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.core.connection.v1.QueryClientConnectionsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_connection_paths()->MergeFrom(from._internal_connection_paths());
  if (!from._internal_proof().empty()) {
    _this->_internal_set_proof(from._internal_proof());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_proof_height()->::ibc::core::client::v1::Height::MergeFrom(
        from._internal_proof_height());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryClientConnectionsResponse::CopyFrom(const QueryClientConnectionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.core.connection.v1.QueryClientConnectionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryClientConnectionsResponse::IsInitialized() const {
  return true;
}

void QueryClientConnectionsResponse::InternalSwap(QueryClientConnectionsResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _internal_mutable_connection_paths()->InternalSwap(
      other->_internal_mutable_connection_paths());
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.proof_, lhs_arena,
                                       &other->_impl_.proof_, rhs_arena);
  swap(_impl_.proof_height_, other->_impl_.proof_height_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryClientConnectionsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto_getter, &descriptor_table_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto_once,
      file_level_metadata_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto[5]);
}
// ===================================================================

class QueryConnectionClientStateRequest::_Internal {
 public:
};

QueryConnectionClientStateRequest::QueryConnectionClientStateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.core.connection.v1.QueryConnectionClientStateRequest)
}
QueryConnectionClientStateRequest::QueryConnectionClientStateRequest(const QueryConnectionClientStateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryConnectionClientStateRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.connection_id_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.connection_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.connection_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_connection_id().empty()) {
    _this->_impl_.connection_id_.Set(from._internal_connection_id(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ibc.core.connection.v1.QueryConnectionClientStateRequest)
}

inline void QueryConnectionClientStateRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.connection_id_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.connection_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.connection_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryConnectionClientStateRequest::~QueryConnectionClientStateRequest() {
  // @@protoc_insertion_point(destructor:ibc.core.connection.v1.QueryConnectionClientStateRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryConnectionClientStateRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.connection_id_.Destroy();
}

void QueryConnectionClientStateRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryConnectionClientStateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.core.connection.v1.QueryConnectionClientStateRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.connection_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryConnectionClientStateRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string connection_id = 1 [json_name = "connectionId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_connection_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ibc.core.connection.v1.QueryConnectionClientStateRequest.connection_id"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryConnectionClientStateRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.core.connection.v1.QueryConnectionClientStateRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string connection_id = 1 [json_name = "connectionId"];
  if (!this->_internal_connection_id().empty()) {
    const std::string& _s = this->_internal_connection_id();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "ibc.core.connection.v1.QueryConnectionClientStateRequest.connection_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.core.connection.v1.QueryConnectionClientStateRequest)
  return target;
}

::size_t QueryConnectionClientStateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.core.connection.v1.QueryConnectionClientStateRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string connection_id = 1 [json_name = "connectionId"];
  if (!this->_internal_connection_id().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_connection_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryConnectionClientStateRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryConnectionClientStateRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryConnectionClientStateRequest::GetClassData() const { return &_class_data_; }


void QueryConnectionClientStateRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryConnectionClientStateRequest*>(&to_msg);
  auto& from = static_cast<const QueryConnectionClientStateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.core.connection.v1.QueryConnectionClientStateRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_connection_id().empty()) {
    _this->_internal_set_connection_id(from._internal_connection_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryConnectionClientStateRequest::CopyFrom(const QueryConnectionClientStateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.core.connection.v1.QueryConnectionClientStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryConnectionClientStateRequest::IsInitialized() const {
  return true;
}

void QueryConnectionClientStateRequest::InternalSwap(QueryConnectionClientStateRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.connection_id_, lhs_arena,
                                       &other->_impl_.connection_id_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryConnectionClientStateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto_getter, &descriptor_table_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto_once,
      file_level_metadata_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto[6]);
}
// ===================================================================

class QueryConnectionClientStateResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryConnectionClientStateResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryConnectionClientStateResponse, _impl_._has_bits_);
  static const ::ibc::core::client::v1::IdentifiedClientState& identified_client_state(const QueryConnectionClientStateResponse* msg);
  static void set_has_identified_client_state(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::ibc::core::client::v1::Height& proof_height(const QueryConnectionClientStateResponse* msg);
  static void set_has_proof_height(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::ibc::core::client::v1::IdentifiedClientState&
QueryConnectionClientStateResponse::_Internal::identified_client_state(const QueryConnectionClientStateResponse* msg) {
  return *msg->_impl_.identified_client_state_;
}
const ::ibc::core::client::v1::Height&
QueryConnectionClientStateResponse::_Internal::proof_height(const QueryConnectionClientStateResponse* msg) {
  return *msg->_impl_.proof_height_;
}
void QueryConnectionClientStateResponse::clear_identified_client_state() {
  if (_impl_.identified_client_state_ != nullptr) _impl_.identified_client_state_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void QueryConnectionClientStateResponse::clear_proof_height() {
  if (_impl_.proof_height_ != nullptr) _impl_.proof_height_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
QueryConnectionClientStateResponse::QueryConnectionClientStateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.core.connection.v1.QueryConnectionClientStateResponse)
}
QueryConnectionClientStateResponse::QueryConnectionClientStateResponse(const QueryConnectionClientStateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryConnectionClientStateResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.proof_) {}

    , decltype(_impl_.identified_client_state_){nullptr}
    , decltype(_impl_.proof_height_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.proof_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.proof_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_proof().empty()) {
    _this->_impl_.proof_.Set(from._internal_proof(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.identified_client_state_ = new ::ibc::core::client::v1::IdentifiedClientState(*from._impl_.identified_client_state_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.proof_height_ = new ::ibc::core::client::v1::Height(*from._impl_.proof_height_);
  }
  // @@protoc_insertion_point(copy_constructor:ibc.core.connection.v1.QueryConnectionClientStateResponse)
}

inline void QueryConnectionClientStateResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.proof_) {}

    , decltype(_impl_.identified_client_state_){nullptr}
    , decltype(_impl_.proof_height_){nullptr}
  };
  _impl_.proof_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.proof_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryConnectionClientStateResponse::~QueryConnectionClientStateResponse() {
  // @@protoc_insertion_point(destructor:ibc.core.connection.v1.QueryConnectionClientStateResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryConnectionClientStateResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.proof_.Destroy();
  if (this != internal_default_instance()) delete _impl_.identified_client_state_;
  if (this != internal_default_instance()) delete _impl_.proof_height_;
}

void QueryConnectionClientStateResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryConnectionClientStateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.core.connection.v1.QueryConnectionClientStateResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.proof_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.identified_client_state_ != nullptr);
      _impl_.identified_client_state_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.proof_height_ != nullptr);
      _impl_.proof_height_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryConnectionClientStateResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ibc.core.client.v1.IdentifiedClientState identified_client_state = 1 [json_name = "identifiedClientState"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_identified_client_state(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // bytes proof = 2 [json_name = "proof"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_proof();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .ibc.core.client.v1.Height proof_height = 3 [json_name = "proofHeight", (.gogoproto.nullable) = false];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_proof_height(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryConnectionClientStateResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.core.connection.v1.QueryConnectionClientStateResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .ibc.core.client.v1.IdentifiedClientState identified_client_state = 1 [json_name = "identifiedClientState"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::identified_client_state(this),
        _Internal::identified_client_state(this).GetCachedSize(), target, stream);
  }

  // bytes proof = 2 [json_name = "proof"];
  if (!this->_internal_proof().empty()) {
    const std::string& _s = this->_internal_proof();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  // .ibc.core.client.v1.Height proof_height = 3 [json_name = "proofHeight", (.gogoproto.nullable) = false];
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::proof_height(this),
        _Internal::proof_height(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.core.connection.v1.QueryConnectionClientStateResponse)
  return target;
}

::size_t QueryConnectionClientStateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.core.connection.v1.QueryConnectionClientStateResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes proof = 2 [json_name = "proof"];
  if (!this->_internal_proof().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
                                    this->_internal_proof());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .ibc.core.client.v1.IdentifiedClientState identified_client_state = 1 [json_name = "identifiedClientState"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.identified_client_state_);
    }

    // .ibc.core.client.v1.Height proof_height = 3 [json_name = "proofHeight", (.gogoproto.nullable) = false];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.proof_height_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryConnectionClientStateResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryConnectionClientStateResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryConnectionClientStateResponse::GetClassData() const { return &_class_data_; }


void QueryConnectionClientStateResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryConnectionClientStateResponse*>(&to_msg);
  auto& from = static_cast<const QueryConnectionClientStateResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.core.connection.v1.QueryConnectionClientStateResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_proof().empty()) {
    _this->_internal_set_proof(from._internal_proof());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_identified_client_state()->::ibc::core::client::v1::IdentifiedClientState::MergeFrom(
          from._internal_identified_client_state());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_proof_height()->::ibc::core::client::v1::Height::MergeFrom(
          from._internal_proof_height());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryConnectionClientStateResponse::CopyFrom(const QueryConnectionClientStateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.core.connection.v1.QueryConnectionClientStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryConnectionClientStateResponse::IsInitialized() const {
  return true;
}

void QueryConnectionClientStateResponse::InternalSwap(QueryConnectionClientStateResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.proof_, lhs_arena,
                                       &other->_impl_.proof_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(QueryConnectionClientStateResponse, _impl_.proof_height_)
      + sizeof(QueryConnectionClientStateResponse::_impl_.proof_height_)
      - PROTOBUF_FIELD_OFFSET(QueryConnectionClientStateResponse, _impl_.identified_client_state_)>(
          reinterpret_cast<char*>(&_impl_.identified_client_state_),
          reinterpret_cast<char*>(&other->_impl_.identified_client_state_));
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryConnectionClientStateResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto_getter, &descriptor_table_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto_once,
      file_level_metadata_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto[7]);
}
// ===================================================================

class QueryConnectionConsensusStateRequest::_Internal {
 public:
};

QueryConnectionConsensusStateRequest::QueryConnectionConsensusStateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.core.connection.v1.QueryConnectionConsensusStateRequest)
}
QueryConnectionConsensusStateRequest::QueryConnectionConsensusStateRequest(const QueryConnectionConsensusStateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryConnectionConsensusStateRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.connection_id_) {}

    , decltype(_impl_.revision_number_) {}

    , decltype(_impl_.revision_height_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.connection_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.connection_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_connection_id().empty()) {
    _this->_impl_.connection_id_.Set(from._internal_connection_id(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.revision_number_, &from._impl_.revision_number_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.revision_height_) -
    reinterpret_cast<char*>(&_impl_.revision_number_)) + sizeof(_impl_.revision_height_));
  // @@protoc_insertion_point(copy_constructor:ibc.core.connection.v1.QueryConnectionConsensusStateRequest)
}

inline void QueryConnectionConsensusStateRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.connection_id_) {}

    , decltype(_impl_.revision_number_) { ::uint64_t{0u} }

    , decltype(_impl_.revision_height_) { ::uint64_t{0u} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.connection_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.connection_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryConnectionConsensusStateRequest::~QueryConnectionConsensusStateRequest() {
  // @@protoc_insertion_point(destructor:ibc.core.connection.v1.QueryConnectionConsensusStateRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryConnectionConsensusStateRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.connection_id_.Destroy();
}

void QueryConnectionConsensusStateRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryConnectionConsensusStateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.core.connection.v1.QueryConnectionConsensusStateRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.connection_id_.ClearToEmpty();
  ::memset(&_impl_.revision_number_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.revision_height_) -
      reinterpret_cast<char*>(&_impl_.revision_number_)) + sizeof(_impl_.revision_height_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryConnectionConsensusStateRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string connection_id = 1 [json_name = "connectionId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_connection_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ibc.core.connection.v1.QueryConnectionConsensusStateRequest.connection_id"));
        } else {
          goto handle_unusual;
        }
        continue;
      // uint64 revision_number = 2 [json_name = "revisionNumber"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          _impl_.revision_number_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // uint64 revision_height = 3 [json_name = "revisionHeight"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 24)) {
          _impl_.revision_height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryConnectionConsensusStateRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.core.connection.v1.QueryConnectionConsensusStateRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string connection_id = 1 [json_name = "connectionId"];
  if (!this->_internal_connection_id().empty()) {
    const std::string& _s = this->_internal_connection_id();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "ibc.core.connection.v1.QueryConnectionConsensusStateRequest.connection_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // uint64 revision_number = 2 [json_name = "revisionNumber"];
  if (this->_internal_revision_number() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_revision_number(), target);
  }

  // uint64 revision_height = 3 [json_name = "revisionHeight"];
  if (this->_internal_revision_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_revision_height(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.core.connection.v1.QueryConnectionConsensusStateRequest)
  return target;
}

::size_t QueryConnectionConsensusStateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.core.connection.v1.QueryConnectionConsensusStateRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string connection_id = 1 [json_name = "connectionId"];
  if (!this->_internal_connection_id().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_connection_id());
  }

  // uint64 revision_number = 2 [json_name = "revisionNumber"];
  if (this->_internal_revision_number() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_revision_number());
  }

  // uint64 revision_height = 3 [json_name = "revisionHeight"];
  if (this->_internal_revision_height() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_revision_height());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryConnectionConsensusStateRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryConnectionConsensusStateRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryConnectionConsensusStateRequest::GetClassData() const { return &_class_data_; }


void QueryConnectionConsensusStateRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryConnectionConsensusStateRequest*>(&to_msg);
  auto& from = static_cast<const QueryConnectionConsensusStateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.core.connection.v1.QueryConnectionConsensusStateRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_connection_id().empty()) {
    _this->_internal_set_connection_id(from._internal_connection_id());
  }
  if (from._internal_revision_number() != 0) {
    _this->_internal_set_revision_number(from._internal_revision_number());
  }
  if (from._internal_revision_height() != 0) {
    _this->_internal_set_revision_height(from._internal_revision_height());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryConnectionConsensusStateRequest::CopyFrom(const QueryConnectionConsensusStateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.core.connection.v1.QueryConnectionConsensusStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryConnectionConsensusStateRequest::IsInitialized() const {
  return true;
}

void QueryConnectionConsensusStateRequest::InternalSwap(QueryConnectionConsensusStateRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.connection_id_, lhs_arena,
                                       &other->_impl_.connection_id_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(QueryConnectionConsensusStateRequest, _impl_.revision_height_)
      + sizeof(QueryConnectionConsensusStateRequest::_impl_.revision_height_)
      - PROTOBUF_FIELD_OFFSET(QueryConnectionConsensusStateRequest, _impl_.revision_number_)>(
          reinterpret_cast<char*>(&_impl_.revision_number_),
          reinterpret_cast<char*>(&other->_impl_.revision_number_));
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryConnectionConsensusStateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto_getter, &descriptor_table_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto_once,
      file_level_metadata_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto[8]);
}
// ===================================================================

class QueryConnectionConsensusStateResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryConnectionConsensusStateResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryConnectionConsensusStateResponse, _impl_._has_bits_);
  static const ::PROTOBUF_NAMESPACE_ID::Any& consensus_state(const QueryConnectionConsensusStateResponse* msg);
  static void set_has_consensus_state(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::ibc::core::client::v1::Height& proof_height(const QueryConnectionConsensusStateResponse* msg);
  static void set_has_proof_height(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::PROTOBUF_NAMESPACE_ID::Any&
QueryConnectionConsensusStateResponse::_Internal::consensus_state(const QueryConnectionConsensusStateResponse* msg) {
  return *msg->_impl_.consensus_state_;
}
const ::ibc::core::client::v1::Height&
QueryConnectionConsensusStateResponse::_Internal::proof_height(const QueryConnectionConsensusStateResponse* msg) {
  return *msg->_impl_.proof_height_;
}
void QueryConnectionConsensusStateResponse::clear_consensus_state() {
  if (_impl_.consensus_state_ != nullptr) _impl_.consensus_state_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void QueryConnectionConsensusStateResponse::clear_proof_height() {
  if (_impl_.proof_height_ != nullptr) _impl_.proof_height_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
QueryConnectionConsensusStateResponse::QueryConnectionConsensusStateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.core.connection.v1.QueryConnectionConsensusStateResponse)
}
QueryConnectionConsensusStateResponse::QueryConnectionConsensusStateResponse(const QueryConnectionConsensusStateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryConnectionConsensusStateResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.client_id_) {}

    , decltype(_impl_.proof_) {}

    , decltype(_impl_.consensus_state_){nullptr}
    , decltype(_impl_.proof_height_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.client_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.client_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_client_id().empty()) {
    _this->_impl_.client_id_.Set(from._internal_client_id(), _this->GetArenaForAllocation());
  }
  _impl_.proof_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.proof_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_proof().empty()) {
    _this->_impl_.proof_.Set(from._internal_proof(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.consensus_state_ = new ::PROTOBUF_NAMESPACE_ID::Any(*from._impl_.consensus_state_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.proof_height_ = new ::ibc::core::client::v1::Height(*from._impl_.proof_height_);
  }
  // @@protoc_insertion_point(copy_constructor:ibc.core.connection.v1.QueryConnectionConsensusStateResponse)
}

inline void QueryConnectionConsensusStateResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.client_id_) {}

    , decltype(_impl_.proof_) {}

    , decltype(_impl_.consensus_state_){nullptr}
    , decltype(_impl_.proof_height_){nullptr}
  };
  _impl_.client_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.client_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.proof_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.proof_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryConnectionConsensusStateResponse::~QueryConnectionConsensusStateResponse() {
  // @@protoc_insertion_point(destructor:ibc.core.connection.v1.QueryConnectionConsensusStateResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryConnectionConsensusStateResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.client_id_.Destroy();
  _impl_.proof_.Destroy();
  if (this != internal_default_instance()) delete _impl_.consensus_state_;
  if (this != internal_default_instance()) delete _impl_.proof_height_;
}

void QueryConnectionConsensusStateResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryConnectionConsensusStateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.core.connection.v1.QueryConnectionConsensusStateResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.client_id_.ClearToEmpty();
  _impl_.proof_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.consensus_state_ != nullptr);
      _impl_.consensus_state_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.proof_height_ != nullptr);
      _impl_.proof_height_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryConnectionConsensusStateResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.protobuf.Any consensus_state = 1 [json_name = "consensusState"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_consensus_state(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string client_id = 2 [json_name = "clientId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_client_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ibc.core.connection.v1.QueryConnectionConsensusStateResponse.client_id"));
        } else {
          goto handle_unusual;
        }
        continue;
      // bytes proof = 3 [json_name = "proof"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_proof();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .ibc.core.client.v1.Height proof_height = 4 [json_name = "proofHeight", (.gogoproto.nullable) = false];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_proof_height(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryConnectionConsensusStateResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.core.connection.v1.QueryConnectionConsensusStateResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Any consensus_state = 1 [json_name = "consensusState"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::consensus_state(this),
        _Internal::consensus_state(this).GetCachedSize(), target, stream);
  }

  // string client_id = 2 [json_name = "clientId"];
  if (!this->_internal_client_id().empty()) {
    const std::string& _s = this->_internal_client_id();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "ibc.core.connection.v1.QueryConnectionConsensusStateResponse.client_id");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // bytes proof = 3 [json_name = "proof"];
  if (!this->_internal_proof().empty()) {
    const std::string& _s = this->_internal_proof();
    target = stream->WriteBytesMaybeAliased(3, _s, target);
  }

  // .ibc.core.client.v1.Height proof_height = 4 [json_name = "proofHeight", (.gogoproto.nullable) = false];
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::proof_height(this),
        _Internal::proof_height(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.core.connection.v1.QueryConnectionConsensusStateResponse)
  return target;
}

::size_t QueryConnectionConsensusStateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.core.connection.v1.QueryConnectionConsensusStateResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string client_id = 2 [json_name = "clientId"];
  if (!this->_internal_client_id().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_client_id());
  }

  // bytes proof = 3 [json_name = "proof"];
  if (!this->_internal_proof().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
                                    this->_internal_proof());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .google.protobuf.Any consensus_state = 1 [json_name = "consensusState"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.consensus_state_);
    }

    // .ibc.core.client.v1.Height proof_height = 4 [json_name = "proofHeight", (.gogoproto.nullable) = false];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.proof_height_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryConnectionConsensusStateResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryConnectionConsensusStateResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryConnectionConsensusStateResponse::GetClassData() const { return &_class_data_; }


void QueryConnectionConsensusStateResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryConnectionConsensusStateResponse*>(&to_msg);
  auto& from = static_cast<const QueryConnectionConsensusStateResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.core.connection.v1.QueryConnectionConsensusStateResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_client_id().empty()) {
    _this->_internal_set_client_id(from._internal_client_id());
  }
  if (!from._internal_proof().empty()) {
    _this->_internal_set_proof(from._internal_proof());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_consensus_state()->::PROTOBUF_NAMESPACE_ID::Any::MergeFrom(
          from._internal_consensus_state());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_proof_height()->::ibc::core::client::v1::Height::MergeFrom(
          from._internal_proof_height());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryConnectionConsensusStateResponse::CopyFrom(const QueryConnectionConsensusStateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.core.connection.v1.QueryConnectionConsensusStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryConnectionConsensusStateResponse::IsInitialized() const {
  return true;
}

void QueryConnectionConsensusStateResponse::InternalSwap(QueryConnectionConsensusStateResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.client_id_, lhs_arena,
                                       &other->_impl_.client_id_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.proof_, lhs_arena,
                                       &other->_impl_.proof_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(QueryConnectionConsensusStateResponse, _impl_.proof_height_)
      + sizeof(QueryConnectionConsensusStateResponse::_impl_.proof_height_)
      - PROTOBUF_FIELD_OFFSET(QueryConnectionConsensusStateResponse, _impl_.consensus_state_)>(
          reinterpret_cast<char*>(&_impl_.consensus_state_),
          reinterpret_cast<char*>(&other->_impl_.consensus_state_));
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryConnectionConsensusStateResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto_getter, &descriptor_table_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto_once,
      file_level_metadata_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto[9]);
}
// ===================================================================

class QueryConnectionParamsRequest::_Internal {
 public:
};

QueryConnectionParamsRequest::QueryConnectionParamsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:ibc.core.connection.v1.QueryConnectionParamsRequest)
}
QueryConnectionParamsRequest::QueryConnectionParamsRequest(const QueryConnectionParamsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  QueryConnectionParamsRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ibc.core.connection.v1.QueryConnectionParamsRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryConnectionParamsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryConnectionParamsRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata QueryConnectionParamsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto_getter, &descriptor_table_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto_once,
      file_level_metadata_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto[10]);
}
// ===================================================================

class QueryConnectionParamsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryConnectionParamsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryConnectionParamsResponse, _impl_._has_bits_);
  static const ::ibc::core::connection::v1::Params& params(const QueryConnectionParamsResponse* msg);
  static void set_has_params(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ibc::core::connection::v1::Params&
QueryConnectionParamsResponse::_Internal::params(const QueryConnectionParamsResponse* msg) {
  return *msg->_impl_.params_;
}
void QueryConnectionParamsResponse::clear_params() {
  if (_impl_.params_ != nullptr) _impl_.params_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryConnectionParamsResponse::QueryConnectionParamsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.core.connection.v1.QueryConnectionParamsResponse)
}
QueryConnectionParamsResponse::QueryConnectionParamsResponse(const QueryConnectionParamsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryConnectionParamsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.params_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.params_ = new ::ibc::core::connection::v1::Params(*from._impl_.params_);
  }
  // @@protoc_insertion_point(copy_constructor:ibc.core.connection.v1.QueryConnectionParamsResponse)
}

inline void QueryConnectionParamsResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.params_){nullptr}
  };
}

QueryConnectionParamsResponse::~QueryConnectionParamsResponse() {
  // @@protoc_insertion_point(destructor:ibc.core.connection.v1.QueryConnectionParamsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryConnectionParamsResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.params_;
}

void QueryConnectionParamsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryConnectionParamsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.core.connection.v1.QueryConnectionParamsResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.params_ != nullptr);
    _impl_.params_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryConnectionParamsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ibc.core.connection.v1.Params params = 1 [json_name = "params"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryConnectionParamsResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.core.connection.v1.QueryConnectionParamsResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .ibc.core.connection.v1.Params params = 1 [json_name = "params"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.core.connection.v1.QueryConnectionParamsResponse)
  return target;
}

::size_t QueryConnectionParamsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.core.connection.v1.QueryConnectionParamsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ibc.core.connection.v1.Params params = 1 [json_name = "params"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryConnectionParamsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryConnectionParamsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryConnectionParamsResponse::GetClassData() const { return &_class_data_; }


void QueryConnectionParamsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryConnectionParamsResponse*>(&to_msg);
  auto& from = static_cast<const QueryConnectionParamsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.core.connection.v1.QueryConnectionParamsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_params()->::ibc::core::connection::v1::Params::MergeFrom(
        from._internal_params());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryConnectionParamsResponse::CopyFrom(const QueryConnectionParamsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.core.connection.v1.QueryConnectionParamsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryConnectionParamsResponse::IsInitialized() const {
  return true;
}

void QueryConnectionParamsResponse::InternalSwap(QueryConnectionParamsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.params_, other->_impl_.params_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryConnectionParamsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto_getter, &descriptor_table_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto_once,
      file_level_metadata_ibc_2fcore_2fconnection_2fv1_2fquery_2eproto[11]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace connection
}  // namespace core
}  // namespace ibc
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ibc::core::connection::v1::QueryConnectionRequest*
Arena::CreateMaybeMessage< ::ibc::core::connection::v1::QueryConnectionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::core::connection::v1::QueryConnectionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ibc::core::connection::v1::QueryConnectionResponse*
Arena::CreateMaybeMessage< ::ibc::core::connection::v1::QueryConnectionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::core::connection::v1::QueryConnectionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ibc::core::connection::v1::QueryConnectionsRequest*
Arena::CreateMaybeMessage< ::ibc::core::connection::v1::QueryConnectionsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::core::connection::v1::QueryConnectionsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ibc::core::connection::v1::QueryConnectionsResponse*
Arena::CreateMaybeMessage< ::ibc::core::connection::v1::QueryConnectionsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::core::connection::v1::QueryConnectionsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ibc::core::connection::v1::QueryClientConnectionsRequest*
Arena::CreateMaybeMessage< ::ibc::core::connection::v1::QueryClientConnectionsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::core::connection::v1::QueryClientConnectionsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ibc::core::connection::v1::QueryClientConnectionsResponse*
Arena::CreateMaybeMessage< ::ibc::core::connection::v1::QueryClientConnectionsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::core::connection::v1::QueryClientConnectionsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ibc::core::connection::v1::QueryConnectionClientStateRequest*
Arena::CreateMaybeMessage< ::ibc::core::connection::v1::QueryConnectionClientStateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::core::connection::v1::QueryConnectionClientStateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ibc::core::connection::v1::QueryConnectionClientStateResponse*
Arena::CreateMaybeMessage< ::ibc::core::connection::v1::QueryConnectionClientStateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::core::connection::v1::QueryConnectionClientStateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ibc::core::connection::v1::QueryConnectionConsensusStateRequest*
Arena::CreateMaybeMessage< ::ibc::core::connection::v1::QueryConnectionConsensusStateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::core::connection::v1::QueryConnectionConsensusStateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ibc::core::connection::v1::QueryConnectionConsensusStateResponse*
Arena::CreateMaybeMessage< ::ibc::core::connection::v1::QueryConnectionConsensusStateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::core::connection::v1::QueryConnectionConsensusStateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ibc::core::connection::v1::QueryConnectionParamsRequest*
Arena::CreateMaybeMessage< ::ibc::core::connection::v1::QueryConnectionParamsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::core::connection::v1::QueryConnectionParamsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ibc::core::connection::v1::QueryConnectionParamsResponse*
Arena::CreateMaybeMessage< ::ibc::core::connection::v1::QueryConnectionParamsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::core::connection::v1::QueryConnectionParamsResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
