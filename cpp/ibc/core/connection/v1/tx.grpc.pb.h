// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: ibc/core/connection/v1/tx.proto
#ifndef GRPC_ibc_2fcore_2fconnection_2fv1_2ftx_2eproto__INCLUDED
#define GRPC_ibc_2fcore_2fconnection_2fv1_2ftx_2eproto__INCLUDED

#include "ibc/core/connection/v1/tx.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace ibc {
namespace core {
namespace connection {
namespace v1 {

// Msg defines the ibc/connection Msg service.
class Msg final {
 public:
  static constexpr char const* service_full_name() {
    return "ibc.core.connection.v1.Msg";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // ConnectionOpenInit defines a rpc handler method for MsgConnectionOpenInit.
    virtual ::grpc::Status ConnectionOpenInit(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenInit& request, ::ibc::core::connection::v1::MsgConnectionOpenInitResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::connection::v1::MsgConnectionOpenInitResponse>> AsyncConnectionOpenInit(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenInit& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::connection::v1::MsgConnectionOpenInitResponse>>(AsyncConnectionOpenInitRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::connection::v1::MsgConnectionOpenInitResponse>> PrepareAsyncConnectionOpenInit(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenInit& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::connection::v1::MsgConnectionOpenInitResponse>>(PrepareAsyncConnectionOpenInitRaw(context, request, cq));
    }
    // ConnectionOpenTry defines a rpc handler method for MsgConnectionOpenTry.
    virtual ::grpc::Status ConnectionOpenTry(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenTry& request, ::ibc::core::connection::v1::MsgConnectionOpenTryResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::connection::v1::MsgConnectionOpenTryResponse>> AsyncConnectionOpenTry(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenTry& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::connection::v1::MsgConnectionOpenTryResponse>>(AsyncConnectionOpenTryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::connection::v1::MsgConnectionOpenTryResponse>> PrepareAsyncConnectionOpenTry(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenTry& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::connection::v1::MsgConnectionOpenTryResponse>>(PrepareAsyncConnectionOpenTryRaw(context, request, cq));
    }
    // ConnectionOpenAck defines a rpc handler method for MsgConnectionOpenAck.
    virtual ::grpc::Status ConnectionOpenAck(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenAck& request, ::ibc::core::connection::v1::MsgConnectionOpenAckResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::connection::v1::MsgConnectionOpenAckResponse>> AsyncConnectionOpenAck(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenAck& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::connection::v1::MsgConnectionOpenAckResponse>>(AsyncConnectionOpenAckRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::connection::v1::MsgConnectionOpenAckResponse>> PrepareAsyncConnectionOpenAck(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenAck& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::connection::v1::MsgConnectionOpenAckResponse>>(PrepareAsyncConnectionOpenAckRaw(context, request, cq));
    }
    // ConnectionOpenConfirm defines a rpc handler method for
    // MsgConnectionOpenConfirm.
    virtual ::grpc::Status ConnectionOpenConfirm(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenConfirm& request, ::ibc::core::connection::v1::MsgConnectionOpenConfirmResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::connection::v1::MsgConnectionOpenConfirmResponse>> AsyncConnectionOpenConfirm(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenConfirm& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::connection::v1::MsgConnectionOpenConfirmResponse>>(AsyncConnectionOpenConfirmRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::connection::v1::MsgConnectionOpenConfirmResponse>> PrepareAsyncConnectionOpenConfirm(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenConfirm& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::connection::v1::MsgConnectionOpenConfirmResponse>>(PrepareAsyncConnectionOpenConfirmRaw(context, request, cq));
    }
    // UpdateConnectionParams defines a rpc handler method for
    // MsgUpdateParams.
    virtual ::grpc::Status UpdateConnectionParams(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgUpdateParams& request, ::ibc::core::connection::v1::MsgUpdateParamsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::connection::v1::MsgUpdateParamsResponse>> AsyncUpdateConnectionParams(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgUpdateParams& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::connection::v1::MsgUpdateParamsResponse>>(AsyncUpdateConnectionParamsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::connection::v1::MsgUpdateParamsResponse>> PrepareAsyncUpdateConnectionParams(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgUpdateParams& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::connection::v1::MsgUpdateParamsResponse>>(PrepareAsyncUpdateConnectionParamsRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // ConnectionOpenInit defines a rpc handler method for MsgConnectionOpenInit.
      virtual void ConnectionOpenInit(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenInit* request, ::ibc::core::connection::v1::MsgConnectionOpenInitResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ConnectionOpenInit(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenInit* request, ::ibc::core::connection::v1::MsgConnectionOpenInitResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // ConnectionOpenTry defines a rpc handler method for MsgConnectionOpenTry.
      virtual void ConnectionOpenTry(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenTry* request, ::ibc::core::connection::v1::MsgConnectionOpenTryResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ConnectionOpenTry(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenTry* request, ::ibc::core::connection::v1::MsgConnectionOpenTryResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // ConnectionOpenAck defines a rpc handler method for MsgConnectionOpenAck.
      virtual void ConnectionOpenAck(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenAck* request, ::ibc::core::connection::v1::MsgConnectionOpenAckResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ConnectionOpenAck(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenAck* request, ::ibc::core::connection::v1::MsgConnectionOpenAckResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // ConnectionOpenConfirm defines a rpc handler method for
      // MsgConnectionOpenConfirm.
      virtual void ConnectionOpenConfirm(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenConfirm* request, ::ibc::core::connection::v1::MsgConnectionOpenConfirmResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ConnectionOpenConfirm(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenConfirm* request, ::ibc::core::connection::v1::MsgConnectionOpenConfirmResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // UpdateConnectionParams defines a rpc handler method for
      // MsgUpdateParams.
      virtual void UpdateConnectionParams(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgUpdateParams* request, ::ibc::core::connection::v1::MsgUpdateParamsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateConnectionParams(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgUpdateParams* request, ::ibc::core::connection::v1::MsgUpdateParamsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::connection::v1::MsgConnectionOpenInitResponse>* AsyncConnectionOpenInitRaw(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenInit& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::connection::v1::MsgConnectionOpenInitResponse>* PrepareAsyncConnectionOpenInitRaw(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenInit& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::connection::v1::MsgConnectionOpenTryResponse>* AsyncConnectionOpenTryRaw(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenTry& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::connection::v1::MsgConnectionOpenTryResponse>* PrepareAsyncConnectionOpenTryRaw(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenTry& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::connection::v1::MsgConnectionOpenAckResponse>* AsyncConnectionOpenAckRaw(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenAck& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::connection::v1::MsgConnectionOpenAckResponse>* PrepareAsyncConnectionOpenAckRaw(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenAck& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::connection::v1::MsgConnectionOpenConfirmResponse>* AsyncConnectionOpenConfirmRaw(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenConfirm& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::connection::v1::MsgConnectionOpenConfirmResponse>* PrepareAsyncConnectionOpenConfirmRaw(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenConfirm& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::connection::v1::MsgUpdateParamsResponse>* AsyncUpdateConnectionParamsRaw(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgUpdateParams& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::connection::v1::MsgUpdateParamsResponse>* PrepareAsyncUpdateConnectionParamsRaw(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgUpdateParams& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status ConnectionOpenInit(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenInit& request, ::ibc::core::connection::v1::MsgConnectionOpenInitResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ibc::core::connection::v1::MsgConnectionOpenInitResponse>> AsyncConnectionOpenInit(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenInit& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ibc::core::connection::v1::MsgConnectionOpenInitResponse>>(AsyncConnectionOpenInitRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ibc::core::connection::v1::MsgConnectionOpenInitResponse>> PrepareAsyncConnectionOpenInit(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenInit& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ibc::core::connection::v1::MsgConnectionOpenInitResponse>>(PrepareAsyncConnectionOpenInitRaw(context, request, cq));
    }
    ::grpc::Status ConnectionOpenTry(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenTry& request, ::ibc::core::connection::v1::MsgConnectionOpenTryResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ibc::core::connection::v1::MsgConnectionOpenTryResponse>> AsyncConnectionOpenTry(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenTry& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ibc::core::connection::v1::MsgConnectionOpenTryResponse>>(AsyncConnectionOpenTryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ibc::core::connection::v1::MsgConnectionOpenTryResponse>> PrepareAsyncConnectionOpenTry(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenTry& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ibc::core::connection::v1::MsgConnectionOpenTryResponse>>(PrepareAsyncConnectionOpenTryRaw(context, request, cq));
    }
    ::grpc::Status ConnectionOpenAck(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenAck& request, ::ibc::core::connection::v1::MsgConnectionOpenAckResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ibc::core::connection::v1::MsgConnectionOpenAckResponse>> AsyncConnectionOpenAck(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenAck& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ibc::core::connection::v1::MsgConnectionOpenAckResponse>>(AsyncConnectionOpenAckRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ibc::core::connection::v1::MsgConnectionOpenAckResponse>> PrepareAsyncConnectionOpenAck(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenAck& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ibc::core::connection::v1::MsgConnectionOpenAckResponse>>(PrepareAsyncConnectionOpenAckRaw(context, request, cq));
    }
    ::grpc::Status ConnectionOpenConfirm(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenConfirm& request, ::ibc::core::connection::v1::MsgConnectionOpenConfirmResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ibc::core::connection::v1::MsgConnectionOpenConfirmResponse>> AsyncConnectionOpenConfirm(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenConfirm& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ibc::core::connection::v1::MsgConnectionOpenConfirmResponse>>(AsyncConnectionOpenConfirmRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ibc::core::connection::v1::MsgConnectionOpenConfirmResponse>> PrepareAsyncConnectionOpenConfirm(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenConfirm& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ibc::core::connection::v1::MsgConnectionOpenConfirmResponse>>(PrepareAsyncConnectionOpenConfirmRaw(context, request, cq));
    }
    ::grpc::Status UpdateConnectionParams(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgUpdateParams& request, ::ibc::core::connection::v1::MsgUpdateParamsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ibc::core::connection::v1::MsgUpdateParamsResponse>> AsyncUpdateConnectionParams(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgUpdateParams& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ibc::core::connection::v1::MsgUpdateParamsResponse>>(AsyncUpdateConnectionParamsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ibc::core::connection::v1::MsgUpdateParamsResponse>> PrepareAsyncUpdateConnectionParams(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgUpdateParams& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ibc::core::connection::v1::MsgUpdateParamsResponse>>(PrepareAsyncUpdateConnectionParamsRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void ConnectionOpenInit(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenInit* request, ::ibc::core::connection::v1::MsgConnectionOpenInitResponse* response, std::function<void(::grpc::Status)>) override;
      void ConnectionOpenInit(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenInit* request, ::ibc::core::connection::v1::MsgConnectionOpenInitResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ConnectionOpenTry(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenTry* request, ::ibc::core::connection::v1::MsgConnectionOpenTryResponse* response, std::function<void(::grpc::Status)>) override;
      void ConnectionOpenTry(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenTry* request, ::ibc::core::connection::v1::MsgConnectionOpenTryResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ConnectionOpenAck(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenAck* request, ::ibc::core::connection::v1::MsgConnectionOpenAckResponse* response, std::function<void(::grpc::Status)>) override;
      void ConnectionOpenAck(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenAck* request, ::ibc::core::connection::v1::MsgConnectionOpenAckResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ConnectionOpenConfirm(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenConfirm* request, ::ibc::core::connection::v1::MsgConnectionOpenConfirmResponse* response, std::function<void(::grpc::Status)>) override;
      void ConnectionOpenConfirm(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenConfirm* request, ::ibc::core::connection::v1::MsgConnectionOpenConfirmResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateConnectionParams(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgUpdateParams* request, ::ibc::core::connection::v1::MsgUpdateParamsResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateConnectionParams(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgUpdateParams* request, ::ibc::core::connection::v1::MsgUpdateParamsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::ibc::core::connection::v1::MsgConnectionOpenInitResponse>* AsyncConnectionOpenInitRaw(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenInit& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ibc::core::connection::v1::MsgConnectionOpenInitResponse>* PrepareAsyncConnectionOpenInitRaw(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenInit& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ibc::core::connection::v1::MsgConnectionOpenTryResponse>* AsyncConnectionOpenTryRaw(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenTry& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ibc::core::connection::v1::MsgConnectionOpenTryResponse>* PrepareAsyncConnectionOpenTryRaw(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenTry& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ibc::core::connection::v1::MsgConnectionOpenAckResponse>* AsyncConnectionOpenAckRaw(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenAck& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ibc::core::connection::v1::MsgConnectionOpenAckResponse>* PrepareAsyncConnectionOpenAckRaw(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenAck& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ibc::core::connection::v1::MsgConnectionOpenConfirmResponse>* AsyncConnectionOpenConfirmRaw(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenConfirm& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ibc::core::connection::v1::MsgConnectionOpenConfirmResponse>* PrepareAsyncConnectionOpenConfirmRaw(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenConfirm& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ibc::core::connection::v1::MsgUpdateParamsResponse>* AsyncUpdateConnectionParamsRaw(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgUpdateParams& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ibc::core::connection::v1::MsgUpdateParamsResponse>* PrepareAsyncUpdateConnectionParamsRaw(::grpc::ClientContext* context, const ::ibc::core::connection::v1::MsgUpdateParams& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_ConnectionOpenInit_;
    const ::grpc::internal::RpcMethod rpcmethod_ConnectionOpenTry_;
    const ::grpc::internal::RpcMethod rpcmethod_ConnectionOpenAck_;
    const ::grpc::internal::RpcMethod rpcmethod_ConnectionOpenConfirm_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateConnectionParams_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // ConnectionOpenInit defines a rpc handler method for MsgConnectionOpenInit.
    virtual ::grpc::Status ConnectionOpenInit(::grpc::ServerContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenInit* request, ::ibc::core::connection::v1::MsgConnectionOpenInitResponse* response);
    // ConnectionOpenTry defines a rpc handler method for MsgConnectionOpenTry.
    virtual ::grpc::Status ConnectionOpenTry(::grpc::ServerContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenTry* request, ::ibc::core::connection::v1::MsgConnectionOpenTryResponse* response);
    // ConnectionOpenAck defines a rpc handler method for MsgConnectionOpenAck.
    virtual ::grpc::Status ConnectionOpenAck(::grpc::ServerContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenAck* request, ::ibc::core::connection::v1::MsgConnectionOpenAckResponse* response);
    // ConnectionOpenConfirm defines a rpc handler method for
    // MsgConnectionOpenConfirm.
    virtual ::grpc::Status ConnectionOpenConfirm(::grpc::ServerContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenConfirm* request, ::ibc::core::connection::v1::MsgConnectionOpenConfirmResponse* response);
    // UpdateConnectionParams defines a rpc handler method for
    // MsgUpdateParams.
    virtual ::grpc::Status UpdateConnectionParams(::grpc::ServerContext* context, const ::ibc::core::connection::v1::MsgUpdateParams* request, ::ibc::core::connection::v1::MsgUpdateParamsResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_ConnectionOpenInit : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ConnectionOpenInit() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_ConnectionOpenInit() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ConnectionOpenInit(::grpc::ServerContext* /*context*/, const ::ibc::core::connection::v1::MsgConnectionOpenInit* /*request*/, ::ibc::core::connection::v1::MsgConnectionOpenInitResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestConnectionOpenInit(::grpc::ServerContext* context, ::ibc::core::connection::v1::MsgConnectionOpenInit* request, ::grpc::ServerAsyncResponseWriter< ::ibc::core::connection::v1::MsgConnectionOpenInitResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ConnectionOpenTry : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ConnectionOpenTry() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_ConnectionOpenTry() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ConnectionOpenTry(::grpc::ServerContext* /*context*/, const ::ibc::core::connection::v1::MsgConnectionOpenTry* /*request*/, ::ibc::core::connection::v1::MsgConnectionOpenTryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestConnectionOpenTry(::grpc::ServerContext* context, ::ibc::core::connection::v1::MsgConnectionOpenTry* request, ::grpc::ServerAsyncResponseWriter< ::ibc::core::connection::v1::MsgConnectionOpenTryResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ConnectionOpenAck : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ConnectionOpenAck() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_ConnectionOpenAck() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ConnectionOpenAck(::grpc::ServerContext* /*context*/, const ::ibc::core::connection::v1::MsgConnectionOpenAck* /*request*/, ::ibc::core::connection::v1::MsgConnectionOpenAckResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestConnectionOpenAck(::grpc::ServerContext* context, ::ibc::core::connection::v1::MsgConnectionOpenAck* request, ::grpc::ServerAsyncResponseWriter< ::ibc::core::connection::v1::MsgConnectionOpenAckResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ConnectionOpenConfirm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ConnectionOpenConfirm() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_ConnectionOpenConfirm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ConnectionOpenConfirm(::grpc::ServerContext* /*context*/, const ::ibc::core::connection::v1::MsgConnectionOpenConfirm* /*request*/, ::ibc::core::connection::v1::MsgConnectionOpenConfirmResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestConnectionOpenConfirm(::grpc::ServerContext* context, ::ibc::core::connection::v1::MsgConnectionOpenConfirm* request, ::grpc::ServerAsyncResponseWriter< ::ibc::core::connection::v1::MsgConnectionOpenConfirmResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateConnectionParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateConnectionParams() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_UpdateConnectionParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateConnectionParams(::grpc::ServerContext* /*context*/, const ::ibc::core::connection::v1::MsgUpdateParams* /*request*/, ::ibc::core::connection::v1::MsgUpdateParamsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateConnectionParams(::grpc::ServerContext* context, ::ibc::core::connection::v1::MsgUpdateParams* request, ::grpc::ServerAsyncResponseWriter< ::ibc::core::connection::v1::MsgUpdateParamsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_ConnectionOpenInit<WithAsyncMethod_ConnectionOpenTry<WithAsyncMethod_ConnectionOpenAck<WithAsyncMethod_ConnectionOpenConfirm<WithAsyncMethod_UpdateConnectionParams<Service > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_ConnectionOpenInit : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ConnectionOpenInit() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::ibc::core::connection::v1::MsgConnectionOpenInit, ::ibc::core::connection::v1::MsgConnectionOpenInitResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenInit* request, ::ibc::core::connection::v1::MsgConnectionOpenInitResponse* response) { return this->ConnectionOpenInit(context, request, response); }));}
    void SetMessageAllocatorFor_ConnectionOpenInit(
        ::grpc::MessageAllocator< ::ibc::core::connection::v1::MsgConnectionOpenInit, ::ibc::core::connection::v1::MsgConnectionOpenInitResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ibc::core::connection::v1::MsgConnectionOpenInit, ::ibc::core::connection::v1::MsgConnectionOpenInitResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ConnectionOpenInit() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ConnectionOpenInit(::grpc::ServerContext* /*context*/, const ::ibc::core::connection::v1::MsgConnectionOpenInit* /*request*/, ::ibc::core::connection::v1::MsgConnectionOpenInitResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ConnectionOpenInit(
      ::grpc::CallbackServerContext* /*context*/, const ::ibc::core::connection::v1::MsgConnectionOpenInit* /*request*/, ::ibc::core::connection::v1::MsgConnectionOpenInitResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ConnectionOpenTry : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ConnectionOpenTry() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::ibc::core::connection::v1::MsgConnectionOpenTry, ::ibc::core::connection::v1::MsgConnectionOpenTryResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenTry* request, ::ibc::core::connection::v1::MsgConnectionOpenTryResponse* response) { return this->ConnectionOpenTry(context, request, response); }));}
    void SetMessageAllocatorFor_ConnectionOpenTry(
        ::grpc::MessageAllocator< ::ibc::core::connection::v1::MsgConnectionOpenTry, ::ibc::core::connection::v1::MsgConnectionOpenTryResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ibc::core::connection::v1::MsgConnectionOpenTry, ::ibc::core::connection::v1::MsgConnectionOpenTryResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ConnectionOpenTry() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ConnectionOpenTry(::grpc::ServerContext* /*context*/, const ::ibc::core::connection::v1::MsgConnectionOpenTry* /*request*/, ::ibc::core::connection::v1::MsgConnectionOpenTryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ConnectionOpenTry(
      ::grpc::CallbackServerContext* /*context*/, const ::ibc::core::connection::v1::MsgConnectionOpenTry* /*request*/, ::ibc::core::connection::v1::MsgConnectionOpenTryResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ConnectionOpenAck : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ConnectionOpenAck() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::ibc::core::connection::v1::MsgConnectionOpenAck, ::ibc::core::connection::v1::MsgConnectionOpenAckResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenAck* request, ::ibc::core::connection::v1::MsgConnectionOpenAckResponse* response) { return this->ConnectionOpenAck(context, request, response); }));}
    void SetMessageAllocatorFor_ConnectionOpenAck(
        ::grpc::MessageAllocator< ::ibc::core::connection::v1::MsgConnectionOpenAck, ::ibc::core::connection::v1::MsgConnectionOpenAckResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ibc::core::connection::v1::MsgConnectionOpenAck, ::ibc::core::connection::v1::MsgConnectionOpenAckResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ConnectionOpenAck() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ConnectionOpenAck(::grpc::ServerContext* /*context*/, const ::ibc::core::connection::v1::MsgConnectionOpenAck* /*request*/, ::ibc::core::connection::v1::MsgConnectionOpenAckResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ConnectionOpenAck(
      ::grpc::CallbackServerContext* /*context*/, const ::ibc::core::connection::v1::MsgConnectionOpenAck* /*request*/, ::ibc::core::connection::v1::MsgConnectionOpenAckResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ConnectionOpenConfirm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ConnectionOpenConfirm() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::ibc::core::connection::v1::MsgConnectionOpenConfirm, ::ibc::core::connection::v1::MsgConnectionOpenConfirmResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::ibc::core::connection::v1::MsgConnectionOpenConfirm* request, ::ibc::core::connection::v1::MsgConnectionOpenConfirmResponse* response) { return this->ConnectionOpenConfirm(context, request, response); }));}
    void SetMessageAllocatorFor_ConnectionOpenConfirm(
        ::grpc::MessageAllocator< ::ibc::core::connection::v1::MsgConnectionOpenConfirm, ::ibc::core::connection::v1::MsgConnectionOpenConfirmResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ibc::core::connection::v1::MsgConnectionOpenConfirm, ::ibc::core::connection::v1::MsgConnectionOpenConfirmResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ConnectionOpenConfirm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ConnectionOpenConfirm(::grpc::ServerContext* /*context*/, const ::ibc::core::connection::v1::MsgConnectionOpenConfirm* /*request*/, ::ibc::core::connection::v1::MsgConnectionOpenConfirmResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ConnectionOpenConfirm(
      ::grpc::CallbackServerContext* /*context*/, const ::ibc::core::connection::v1::MsgConnectionOpenConfirm* /*request*/, ::ibc::core::connection::v1::MsgConnectionOpenConfirmResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateConnectionParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateConnectionParams() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::ibc::core::connection::v1::MsgUpdateParams, ::ibc::core::connection::v1::MsgUpdateParamsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::ibc::core::connection::v1::MsgUpdateParams* request, ::ibc::core::connection::v1::MsgUpdateParamsResponse* response) { return this->UpdateConnectionParams(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateConnectionParams(
        ::grpc::MessageAllocator< ::ibc::core::connection::v1::MsgUpdateParams, ::ibc::core::connection::v1::MsgUpdateParamsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ibc::core::connection::v1::MsgUpdateParams, ::ibc::core::connection::v1::MsgUpdateParamsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateConnectionParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateConnectionParams(::grpc::ServerContext* /*context*/, const ::ibc::core::connection::v1::MsgUpdateParams* /*request*/, ::ibc::core::connection::v1::MsgUpdateParamsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateConnectionParams(
      ::grpc::CallbackServerContext* /*context*/, const ::ibc::core::connection::v1::MsgUpdateParams* /*request*/, ::ibc::core::connection::v1::MsgUpdateParamsResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_ConnectionOpenInit<WithCallbackMethod_ConnectionOpenTry<WithCallbackMethod_ConnectionOpenAck<WithCallbackMethod_ConnectionOpenConfirm<WithCallbackMethod_UpdateConnectionParams<Service > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_ConnectionOpenInit : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ConnectionOpenInit() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_ConnectionOpenInit() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ConnectionOpenInit(::grpc::ServerContext* /*context*/, const ::ibc::core::connection::v1::MsgConnectionOpenInit* /*request*/, ::ibc::core::connection::v1::MsgConnectionOpenInitResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ConnectionOpenTry : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ConnectionOpenTry() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_ConnectionOpenTry() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ConnectionOpenTry(::grpc::ServerContext* /*context*/, const ::ibc::core::connection::v1::MsgConnectionOpenTry* /*request*/, ::ibc::core::connection::v1::MsgConnectionOpenTryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ConnectionOpenAck : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ConnectionOpenAck() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_ConnectionOpenAck() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ConnectionOpenAck(::grpc::ServerContext* /*context*/, const ::ibc::core::connection::v1::MsgConnectionOpenAck* /*request*/, ::ibc::core::connection::v1::MsgConnectionOpenAckResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ConnectionOpenConfirm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ConnectionOpenConfirm() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_ConnectionOpenConfirm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ConnectionOpenConfirm(::grpc::ServerContext* /*context*/, const ::ibc::core::connection::v1::MsgConnectionOpenConfirm* /*request*/, ::ibc::core::connection::v1::MsgConnectionOpenConfirmResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateConnectionParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateConnectionParams() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_UpdateConnectionParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateConnectionParams(::grpc::ServerContext* /*context*/, const ::ibc::core::connection::v1::MsgUpdateParams* /*request*/, ::ibc::core::connection::v1::MsgUpdateParamsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_ConnectionOpenInit : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ConnectionOpenInit() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_ConnectionOpenInit() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ConnectionOpenInit(::grpc::ServerContext* /*context*/, const ::ibc::core::connection::v1::MsgConnectionOpenInit* /*request*/, ::ibc::core::connection::v1::MsgConnectionOpenInitResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestConnectionOpenInit(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ConnectionOpenTry : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ConnectionOpenTry() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_ConnectionOpenTry() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ConnectionOpenTry(::grpc::ServerContext* /*context*/, const ::ibc::core::connection::v1::MsgConnectionOpenTry* /*request*/, ::ibc::core::connection::v1::MsgConnectionOpenTryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestConnectionOpenTry(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ConnectionOpenAck : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ConnectionOpenAck() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_ConnectionOpenAck() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ConnectionOpenAck(::grpc::ServerContext* /*context*/, const ::ibc::core::connection::v1::MsgConnectionOpenAck* /*request*/, ::ibc::core::connection::v1::MsgConnectionOpenAckResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestConnectionOpenAck(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ConnectionOpenConfirm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ConnectionOpenConfirm() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_ConnectionOpenConfirm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ConnectionOpenConfirm(::grpc::ServerContext* /*context*/, const ::ibc::core::connection::v1::MsgConnectionOpenConfirm* /*request*/, ::ibc::core::connection::v1::MsgConnectionOpenConfirmResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestConnectionOpenConfirm(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateConnectionParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateConnectionParams() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_UpdateConnectionParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateConnectionParams(::grpc::ServerContext* /*context*/, const ::ibc::core::connection::v1::MsgUpdateParams* /*request*/, ::ibc::core::connection::v1::MsgUpdateParamsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateConnectionParams(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ConnectionOpenInit : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ConnectionOpenInit() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ConnectionOpenInit(context, request, response); }));
    }
    ~WithRawCallbackMethod_ConnectionOpenInit() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ConnectionOpenInit(::grpc::ServerContext* /*context*/, const ::ibc::core::connection::v1::MsgConnectionOpenInit* /*request*/, ::ibc::core::connection::v1::MsgConnectionOpenInitResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ConnectionOpenInit(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ConnectionOpenTry : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ConnectionOpenTry() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ConnectionOpenTry(context, request, response); }));
    }
    ~WithRawCallbackMethod_ConnectionOpenTry() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ConnectionOpenTry(::grpc::ServerContext* /*context*/, const ::ibc::core::connection::v1::MsgConnectionOpenTry* /*request*/, ::ibc::core::connection::v1::MsgConnectionOpenTryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ConnectionOpenTry(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ConnectionOpenAck : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ConnectionOpenAck() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ConnectionOpenAck(context, request, response); }));
    }
    ~WithRawCallbackMethod_ConnectionOpenAck() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ConnectionOpenAck(::grpc::ServerContext* /*context*/, const ::ibc::core::connection::v1::MsgConnectionOpenAck* /*request*/, ::ibc::core::connection::v1::MsgConnectionOpenAckResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ConnectionOpenAck(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ConnectionOpenConfirm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ConnectionOpenConfirm() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ConnectionOpenConfirm(context, request, response); }));
    }
    ~WithRawCallbackMethod_ConnectionOpenConfirm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ConnectionOpenConfirm(::grpc::ServerContext* /*context*/, const ::ibc::core::connection::v1::MsgConnectionOpenConfirm* /*request*/, ::ibc::core::connection::v1::MsgConnectionOpenConfirmResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ConnectionOpenConfirm(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateConnectionParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateConnectionParams() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateConnectionParams(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateConnectionParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateConnectionParams(::grpc::ServerContext* /*context*/, const ::ibc::core::connection::v1::MsgUpdateParams* /*request*/, ::ibc::core::connection::v1::MsgUpdateParamsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateConnectionParams(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ConnectionOpenInit : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ConnectionOpenInit() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ibc::core::connection::v1::MsgConnectionOpenInit, ::ibc::core::connection::v1::MsgConnectionOpenInitResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ibc::core::connection::v1::MsgConnectionOpenInit, ::ibc::core::connection::v1::MsgConnectionOpenInitResponse>* streamer) {
                       return this->StreamedConnectionOpenInit(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ConnectionOpenInit() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ConnectionOpenInit(::grpc::ServerContext* /*context*/, const ::ibc::core::connection::v1::MsgConnectionOpenInit* /*request*/, ::ibc::core::connection::v1::MsgConnectionOpenInitResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedConnectionOpenInit(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ibc::core::connection::v1::MsgConnectionOpenInit,::ibc::core::connection::v1::MsgConnectionOpenInitResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ConnectionOpenTry : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ConnectionOpenTry() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ibc::core::connection::v1::MsgConnectionOpenTry, ::ibc::core::connection::v1::MsgConnectionOpenTryResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ibc::core::connection::v1::MsgConnectionOpenTry, ::ibc::core::connection::v1::MsgConnectionOpenTryResponse>* streamer) {
                       return this->StreamedConnectionOpenTry(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ConnectionOpenTry() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ConnectionOpenTry(::grpc::ServerContext* /*context*/, const ::ibc::core::connection::v1::MsgConnectionOpenTry* /*request*/, ::ibc::core::connection::v1::MsgConnectionOpenTryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedConnectionOpenTry(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ibc::core::connection::v1::MsgConnectionOpenTry,::ibc::core::connection::v1::MsgConnectionOpenTryResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ConnectionOpenAck : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ConnectionOpenAck() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ibc::core::connection::v1::MsgConnectionOpenAck, ::ibc::core::connection::v1::MsgConnectionOpenAckResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ibc::core::connection::v1::MsgConnectionOpenAck, ::ibc::core::connection::v1::MsgConnectionOpenAckResponse>* streamer) {
                       return this->StreamedConnectionOpenAck(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ConnectionOpenAck() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ConnectionOpenAck(::grpc::ServerContext* /*context*/, const ::ibc::core::connection::v1::MsgConnectionOpenAck* /*request*/, ::ibc::core::connection::v1::MsgConnectionOpenAckResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedConnectionOpenAck(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ibc::core::connection::v1::MsgConnectionOpenAck,::ibc::core::connection::v1::MsgConnectionOpenAckResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ConnectionOpenConfirm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ConnectionOpenConfirm() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ibc::core::connection::v1::MsgConnectionOpenConfirm, ::ibc::core::connection::v1::MsgConnectionOpenConfirmResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ibc::core::connection::v1::MsgConnectionOpenConfirm, ::ibc::core::connection::v1::MsgConnectionOpenConfirmResponse>* streamer) {
                       return this->StreamedConnectionOpenConfirm(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ConnectionOpenConfirm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ConnectionOpenConfirm(::grpc::ServerContext* /*context*/, const ::ibc::core::connection::v1::MsgConnectionOpenConfirm* /*request*/, ::ibc::core::connection::v1::MsgConnectionOpenConfirmResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedConnectionOpenConfirm(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ibc::core::connection::v1::MsgConnectionOpenConfirm,::ibc::core::connection::v1::MsgConnectionOpenConfirmResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateConnectionParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateConnectionParams() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ibc::core::connection::v1::MsgUpdateParams, ::ibc::core::connection::v1::MsgUpdateParamsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ibc::core::connection::v1::MsgUpdateParams, ::ibc::core::connection::v1::MsgUpdateParamsResponse>* streamer) {
                       return this->StreamedUpdateConnectionParams(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateConnectionParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateConnectionParams(::grpc::ServerContext* /*context*/, const ::ibc::core::connection::v1::MsgUpdateParams* /*request*/, ::ibc::core::connection::v1::MsgUpdateParamsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateConnectionParams(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ibc::core::connection::v1::MsgUpdateParams,::ibc::core::connection::v1::MsgUpdateParamsResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_ConnectionOpenInit<WithStreamedUnaryMethod_ConnectionOpenTry<WithStreamedUnaryMethod_ConnectionOpenAck<WithStreamedUnaryMethod_ConnectionOpenConfirm<WithStreamedUnaryMethod_UpdateConnectionParams<Service > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_ConnectionOpenInit<WithStreamedUnaryMethod_ConnectionOpenTry<WithStreamedUnaryMethod_ConnectionOpenAck<WithStreamedUnaryMethod_ConnectionOpenConfirm<WithStreamedUnaryMethod_UpdateConnectionParams<Service > > > > > StreamedService;
};

}  // namespace v1
}  // namespace connection
}  // namespace core
}  // namespace ibc


#endif  // GRPC_ibc_2fcore_2fconnection_2fv1_2ftx_2eproto__INCLUDED
