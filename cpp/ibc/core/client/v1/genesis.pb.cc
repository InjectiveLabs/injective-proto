// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ibc/core/client/v1/genesis.proto

#include "ibc/core/client/v1/genesis.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace ibc {
namespace core {
namespace client {
namespace v1 {
template <typename>
PROTOBUF_CONSTEXPR GenesisState::GenesisState(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.clients_)*/{}
  , /*decltype(_impl_.clients_consensus_)*/{}
  , /*decltype(_impl_.clients_metadata_)*/{}
  , /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.next_client_sequence_)*/ ::uint64_t{0u}

  , /*decltype(_impl_.create_localhost_)*/ false
} {}
struct GenesisStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GenesisStateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GenesisStateDefaultTypeInternal() {}
  union {
    GenesisState _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GenesisStateDefaultTypeInternal _GenesisState_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR GenesisMetadata::GenesisMetadata(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.key_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.value_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GenesisMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GenesisMetadataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GenesisMetadataDefaultTypeInternal() {}
  union {
    GenesisMetadata _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GenesisMetadataDefaultTypeInternal _GenesisMetadata_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR IdentifiedGenesisMetadata::IdentifiedGenesisMetadata(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.client_metadata_)*/{}
  , /*decltype(_impl_.client_id_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct IdentifiedGenesisMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IdentifiedGenesisMetadataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IdentifiedGenesisMetadataDefaultTypeInternal() {}
  union {
    IdentifiedGenesisMetadata _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IdentifiedGenesisMetadataDefaultTypeInternal _IdentifiedGenesisMetadata_default_instance_;
}  // namespace v1
}  // namespace client
}  // namespace core
}  // namespace ibc
static ::_pb::Metadata file_level_metadata_ibc_2fcore_2fclient_2fv1_2fgenesis_2eproto[3];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_ibc_2fcore_2fclient_2fv1_2fgenesis_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_ibc_2fcore_2fclient_2fv1_2fgenesis_2eproto = nullptr;
const ::uint32_t TableStruct_ibc_2fcore_2fclient_2fv1_2fgenesis_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::GenesisState, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::GenesisState, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::GenesisState, _impl_.clients_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::GenesisState, _impl_.clients_consensus_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::GenesisState, _impl_.clients_metadata_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::GenesisState, _impl_.params_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::GenesisState, _impl_.create_localhost_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::GenesisState, _impl_.next_client_sequence_),
    ~0u,
    ~0u,
    ~0u,
    0,
    ~0u,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::GenesisMetadata, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::GenesisMetadata, _impl_.key_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::GenesisMetadata, _impl_.value_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::IdentifiedGenesisMetadata, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::IdentifiedGenesisMetadata, _impl_.client_id_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::IdentifiedGenesisMetadata, _impl_.client_metadata_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, 14, -1, sizeof(::ibc::core::client::v1::GenesisState)},
        { 20, -1, -1, sizeof(::ibc::core::client::v1::GenesisMetadata)},
        { 30, -1, -1, sizeof(::ibc::core::client::v1::IdentifiedGenesisMetadata)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::ibc::core::client::v1::_GenesisState_default_instance_._instance,
    &::ibc::core::client::v1::_GenesisMetadata_default_instance_._instance,
    &::ibc::core::client::v1::_IdentifiedGenesisMetadata_default_instance_._instance,
};
const char descriptor_table_protodef_ibc_2fcore_2fclient_2fv1_2fgenesis_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n ibc/core/client/v1/genesis.proto\022\022ibc."
    "core.client.v1\032\037ibc/core/client/v1/clien"
    "t.proto\032\024gogoproto/gogo.proto\"\346\003\n\014Genesi"
    "sState\022c\n\007clients\030\001 \003(\0132).ibc.core.clien"
    "t.v1.IdentifiedClientStateB\036\310\336\037\000\252\337\037\026Iden"
    "tifiedClientStatesR\007clients\022v\n\021clients_c"
    "onsensus\030\002 \003(\0132).ibc.core.client.v1.Clie"
    "ntConsensusStatesB\036\310\336\037\000\252\337\037\026ClientsConsen"
    "susStatesR\020clientsConsensus\022^\n\020clients_m"
    "etadata\030\003 \003(\0132-.ibc.core.client.v1.Ident"
    "ifiedGenesisMetadataB\004\310\336\037\000R\017clientsMetad"
    "ata\0228\n\006params\030\004 \001(\0132\032.ibc.core.client.v1"
    ".ParamsB\004\310\336\037\000R\006params\022-\n\020create_localhos"
    "t\030\005 \001(\010B\002\030\001R\017createLocalhost\0220\n\024next_cli"
    "ent_sequence\030\006 \001(\004R\022nextClientSequence\"\?"
    "\n\017GenesisMetadata\022\020\n\003key\030\001 \001(\014R\003key\022\024\n\005v"
    "alue\030\002 \001(\014R\005value:\004\210\240\037\000\"\214\001\n\031IdentifiedGe"
    "nesisMetadata\022\033\n\tclient_id\030\001 \001(\tR\010client"
    "Id\022R\n\017client_metadata\030\002 \003(\0132#.ibc.core.c"
    "lient.v1.GenesisMetadataB\004\310\336\037\000R\016clientMe"
    "tadataB\313\001\n\026com.ibc.core.client.v1B\014Genes"
    "isProtoP\001Z8github.com/cosmos/ibc-go/v7/m"
    "odules/core/02-client/types\242\002\003ICC\252\002\022Ibc."
    "Core.Client.V1\312\002\022Ibc\\Core\\Client\\V1\342\002\036Ib"
    "c\\Core\\Client\\V1\\GPBMetadata\352\002\025Ibc::Core"
    "::Client::V1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_ibc_2fcore_2fclient_2fv1_2fgenesis_2eproto_deps[2] =
    {
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_ibc_2fcore_2fclient_2fv1_2fclient_2eproto,
};
static ::absl::once_flag descriptor_table_ibc_2fcore_2fclient_2fv1_2fgenesis_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_ibc_2fcore_2fclient_2fv1_2fgenesis_2eproto = {
    false,
    false,
    1020,
    descriptor_table_protodef_ibc_2fcore_2fclient_2fv1_2fgenesis_2eproto,
    "ibc/core/client/v1/genesis.proto",
    &descriptor_table_ibc_2fcore_2fclient_2fv1_2fgenesis_2eproto_once,
    descriptor_table_ibc_2fcore_2fclient_2fv1_2fgenesis_2eproto_deps,
    2,
    3,
    schemas,
    file_default_instances,
    TableStruct_ibc_2fcore_2fclient_2fv1_2fgenesis_2eproto::offsets,
    file_level_metadata_ibc_2fcore_2fclient_2fv1_2fgenesis_2eproto,
    file_level_enum_descriptors_ibc_2fcore_2fclient_2fv1_2fgenesis_2eproto,
    file_level_service_descriptors_ibc_2fcore_2fclient_2fv1_2fgenesis_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_ibc_2fcore_2fclient_2fv1_2fgenesis_2eproto_getter() {
  return &descriptor_table_ibc_2fcore_2fclient_2fv1_2fgenesis_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_ibc_2fcore_2fclient_2fv1_2fgenesis_2eproto(&descriptor_table_ibc_2fcore_2fclient_2fv1_2fgenesis_2eproto);
namespace ibc {
namespace core {
namespace client {
namespace v1 {
// ===================================================================

class GenesisState::_Internal {
 public:
  using HasBits = decltype(std::declval<GenesisState>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GenesisState, _impl_._has_bits_);
  static const ::ibc::core::client::v1::Params& params(const GenesisState* msg);
  static void set_has_params(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ibc::core::client::v1::Params&
GenesisState::_Internal::params(const GenesisState* msg) {
  return *msg->_impl_.params_;
}
void GenesisState::clear_clients() {
  _internal_mutable_clients()->Clear();
}
void GenesisState::clear_clients_consensus() {
  _internal_mutable_clients_consensus()->Clear();
}
void GenesisState::clear_params() {
  if (_impl_.params_ != nullptr) _impl_.params_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GenesisState::GenesisState(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.core.client.v1.GenesisState)
}
GenesisState::GenesisState(const GenesisState& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GenesisState* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.clients_){from._impl_.clients_}
    , decltype(_impl_.clients_consensus_){from._impl_.clients_consensus_}
    , decltype(_impl_.clients_metadata_){from._impl_.clients_metadata_}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.next_client_sequence_) {}

    , decltype(_impl_.create_localhost_) {}
  };

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.params_ = new ::ibc::core::client::v1::Params(*from._impl_.params_);
  }
  ::memcpy(&_impl_.next_client_sequence_, &from._impl_.next_client_sequence_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.create_localhost_) -
    reinterpret_cast<char*>(&_impl_.next_client_sequence_)) + sizeof(_impl_.create_localhost_));
  // @@protoc_insertion_point(copy_constructor:ibc.core.client.v1.GenesisState)
}

inline void GenesisState::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.clients_){arena}
    , decltype(_impl_.clients_consensus_){arena}
    , decltype(_impl_.clients_metadata_){arena}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.next_client_sequence_) { ::uint64_t{0u} }

    , decltype(_impl_.create_localhost_) { false }

  };
}

GenesisState::~GenesisState() {
  // @@protoc_insertion_point(destructor:ibc.core.client.v1.GenesisState)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GenesisState::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_clients()->~RepeatedPtrField();
  _internal_mutable_clients_consensus()->~RepeatedPtrField();
  _internal_mutable_clients_metadata()->~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.params_;
}

void GenesisState::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GenesisState::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.core.client.v1.GenesisState)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_clients()->Clear();
  _internal_mutable_clients_consensus()->Clear();
  _internal_mutable_clients_metadata()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.params_ != nullptr);
    _impl_.params_->Clear();
  }
  ::memset(&_impl_.next_client_sequence_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.create_localhost_) -
      reinterpret_cast<char*>(&_impl_.next_client_sequence_)) + sizeof(_impl_.create_localhost_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GenesisState::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ibc.core.client.v1.IdentifiedClientState clients = 1 [json_name = "clients", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "IdentifiedClientStates"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_clients(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated .ibc.core.client.v1.ClientConsensusStates clients_consensus = 2 [json_name = "clientsConsensus", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "ClientsConsensusStates"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_clients_consensus(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated .ibc.core.client.v1.IdentifiedGenesisMetadata clients_metadata = 3 [json_name = "clientsMetadata", (.gogoproto.nullable) = false];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_clients_metadata(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // .ibc.core.client.v1.Params params = 4 [json_name = "params", (.gogoproto.nullable) = false];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // bool create_localhost = 5 [json_name = "createLocalhost", deprecated = true];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 40)) {
          _impl_.create_localhost_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // uint64 next_client_sequence = 6 [json_name = "nextClientSequence"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 48)) {
          _impl_.next_client_sequence_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* GenesisState::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.core.client.v1.GenesisState)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ibc.core.client.v1.IdentifiedClientState clients = 1 [json_name = "clients", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "IdentifiedClientStates"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_clients_size()); i < n; i++) {
    const auto& repfield = this->_internal_clients(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .ibc.core.client.v1.ClientConsensusStates clients_consensus = 2 [json_name = "clientsConsensus", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "ClientsConsensusStates"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_clients_consensus_size()); i < n; i++) {
    const auto& repfield = this->_internal_clients_consensus(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .ibc.core.client.v1.IdentifiedGenesisMetadata clients_metadata = 3 [json_name = "clientsMetadata", (.gogoproto.nullable) = false];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_clients_metadata_size()); i < n; i++) {
    const auto& repfield = this->_internal_clients_metadata(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .ibc.core.client.v1.Params params = 4 [json_name = "params", (.gogoproto.nullable) = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  // bool create_localhost = 5 [json_name = "createLocalhost", deprecated = true];
  if (this->_internal_create_localhost() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this->_internal_create_localhost(), target);
  }

  // uint64 next_client_sequence = 6 [json_name = "nextClientSequence"];
  if (this->_internal_next_client_sequence() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        6, this->_internal_next_client_sequence(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.core.client.v1.GenesisState)
  return target;
}

::size_t GenesisState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.core.client.v1.GenesisState)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ibc.core.client.v1.IdentifiedClientState clients = 1 [json_name = "clients", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "IdentifiedClientStates"];
  total_size += 1UL * this->_internal_clients_size();
  for (const auto& msg : this->_internal_clients()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ibc.core.client.v1.ClientConsensusStates clients_consensus = 2 [json_name = "clientsConsensus", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "ClientsConsensusStates"];
  total_size += 1UL * this->_internal_clients_consensus_size();
  for (const auto& msg : this->_internal_clients_consensus()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ibc.core.client.v1.IdentifiedGenesisMetadata clients_metadata = 3 [json_name = "clientsMetadata", (.gogoproto.nullable) = false];
  total_size += 1UL * this->_internal_clients_metadata_size();
  for (const auto& msg : this->_internal_clients_metadata()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .ibc.core.client.v1.Params params = 4 [json_name = "params", (.gogoproto.nullable) = false];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // uint64 next_client_sequence = 6 [json_name = "nextClientSequence"];
  if (this->_internal_next_client_sequence() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_next_client_sequence());
  }

  // bool create_localhost = 5 [json_name = "createLocalhost", deprecated = true];
  if (this->_internal_create_localhost() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GenesisState::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GenesisState::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GenesisState::GetClassData() const { return &_class_data_; }


void GenesisState::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GenesisState*>(&to_msg);
  auto& from = static_cast<const GenesisState&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.core.client.v1.GenesisState)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_clients()->MergeFrom(from._internal_clients());
  _this->_internal_mutable_clients_consensus()->MergeFrom(from._internal_clients_consensus());
  _this->_internal_mutable_clients_metadata()->MergeFrom(from._internal_clients_metadata());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_params()->::ibc::core::client::v1::Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_next_client_sequence() != 0) {
    _this->_internal_set_next_client_sequence(from._internal_next_client_sequence());
  }
  if (from._internal_create_localhost() != 0) {
    _this->_internal_set_create_localhost(from._internal_create_localhost());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GenesisState::CopyFrom(const GenesisState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.core.client.v1.GenesisState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenesisState::IsInitialized() const {
  return true;
}

void GenesisState::InternalSwap(GenesisState* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _internal_mutable_clients()->InternalSwap(other->_internal_mutable_clients());
  _internal_mutable_clients_consensus()->InternalSwap(other->_internal_mutable_clients_consensus());
  _internal_mutable_clients_metadata()->InternalSwap(other->_internal_mutable_clients_metadata());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.create_localhost_)
      + sizeof(GenesisState::_impl_.create_localhost_)
      - PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GenesisState::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fcore_2fclient_2fv1_2fgenesis_2eproto_getter, &descriptor_table_ibc_2fcore_2fclient_2fv1_2fgenesis_2eproto_once,
      file_level_metadata_ibc_2fcore_2fclient_2fv1_2fgenesis_2eproto[0]);
}
// ===================================================================

class GenesisMetadata::_Internal {
 public:
};

GenesisMetadata::GenesisMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.core.client.v1.GenesisMetadata)
}
GenesisMetadata::GenesisMetadata(const GenesisMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GenesisMetadata* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.key_) {}

    , decltype(_impl_.value_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.key_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_key().empty()) {
    _this->_impl_.key_.Set(from._internal_key(), _this->GetArenaForAllocation());
  }
  _impl_.value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.value_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_value().empty()) {
    _this->_impl_.value_.Set(from._internal_value(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ibc.core.client.v1.GenesisMetadata)
}

inline void GenesisMetadata::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.key_) {}

    , decltype(_impl_.value_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.key_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.value_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GenesisMetadata::~GenesisMetadata() {
  // @@protoc_insertion_point(destructor:ibc.core.client.v1.GenesisMetadata)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GenesisMetadata::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.key_.Destroy();
  _impl_.value_.Destroy();
}

void GenesisMetadata::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GenesisMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.core.client.v1.GenesisMetadata)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.key_.ClearToEmpty();
  _impl_.value_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GenesisMetadata::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes key = 1 [json_name = "key"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_key();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // bytes value = 2 [json_name = "value"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_value();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* GenesisMetadata::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.core.client.v1.GenesisMetadata)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes key = 1 [json_name = "key"];
  if (!this->_internal_key().empty()) {
    const std::string& _s = this->_internal_key();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // bytes value = 2 [json_name = "value"];
  if (!this->_internal_value().empty()) {
    const std::string& _s = this->_internal_value();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.core.client.v1.GenesisMetadata)
  return target;
}

::size_t GenesisMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.core.client.v1.GenesisMetadata)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes key = 1 [json_name = "key"];
  if (!this->_internal_key().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
                                    this->_internal_key());
  }

  // bytes value = 2 [json_name = "value"];
  if (!this->_internal_value().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
                                    this->_internal_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GenesisMetadata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GenesisMetadata::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GenesisMetadata::GetClassData() const { return &_class_data_; }


void GenesisMetadata::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GenesisMetadata*>(&to_msg);
  auto& from = static_cast<const GenesisMetadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.core.client.v1.GenesisMetadata)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  if (!from._internal_value().empty()) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GenesisMetadata::CopyFrom(const GenesisMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.core.client.v1.GenesisMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenesisMetadata::IsInitialized() const {
  return true;
}

void GenesisMetadata::InternalSwap(GenesisMetadata* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, lhs_arena,
                                       &other->_impl_.key_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, lhs_arena,
                                       &other->_impl_.value_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata GenesisMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fcore_2fclient_2fv1_2fgenesis_2eproto_getter, &descriptor_table_ibc_2fcore_2fclient_2fv1_2fgenesis_2eproto_once,
      file_level_metadata_ibc_2fcore_2fclient_2fv1_2fgenesis_2eproto[1]);
}
// ===================================================================

class IdentifiedGenesisMetadata::_Internal {
 public:
};

IdentifiedGenesisMetadata::IdentifiedGenesisMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.core.client.v1.IdentifiedGenesisMetadata)
}
IdentifiedGenesisMetadata::IdentifiedGenesisMetadata(const IdentifiedGenesisMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  IdentifiedGenesisMetadata* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.client_metadata_){from._impl_.client_metadata_}
    , decltype(_impl_.client_id_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.client_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.client_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_client_id().empty()) {
    _this->_impl_.client_id_.Set(from._internal_client_id(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ibc.core.client.v1.IdentifiedGenesisMetadata)
}

inline void IdentifiedGenesisMetadata::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.client_metadata_){arena}
    , decltype(_impl_.client_id_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.client_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.client_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

IdentifiedGenesisMetadata::~IdentifiedGenesisMetadata() {
  // @@protoc_insertion_point(destructor:ibc.core.client.v1.IdentifiedGenesisMetadata)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void IdentifiedGenesisMetadata::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_client_metadata()->~RepeatedPtrField();
  _impl_.client_id_.Destroy();
}

void IdentifiedGenesisMetadata::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void IdentifiedGenesisMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.core.client.v1.IdentifiedGenesisMetadata)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_client_metadata()->Clear();
  _impl_.client_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IdentifiedGenesisMetadata::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string client_id = 1 [json_name = "clientId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_client_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ibc.core.client.v1.IdentifiedGenesisMetadata.client_id"));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated .ibc.core.client.v1.GenesisMetadata client_metadata = 2 [json_name = "clientMetadata", (.gogoproto.nullable) = false];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_client_metadata(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* IdentifiedGenesisMetadata::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.core.client.v1.IdentifiedGenesisMetadata)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string client_id = 1 [json_name = "clientId"];
  if (!this->_internal_client_id().empty()) {
    const std::string& _s = this->_internal_client_id();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "ibc.core.client.v1.IdentifiedGenesisMetadata.client_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .ibc.core.client.v1.GenesisMetadata client_metadata = 2 [json_name = "clientMetadata", (.gogoproto.nullable) = false];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_client_metadata_size()); i < n; i++) {
    const auto& repfield = this->_internal_client_metadata(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.core.client.v1.IdentifiedGenesisMetadata)
  return target;
}

::size_t IdentifiedGenesisMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.core.client.v1.IdentifiedGenesisMetadata)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ibc.core.client.v1.GenesisMetadata client_metadata = 2 [json_name = "clientMetadata", (.gogoproto.nullable) = false];
  total_size += 1UL * this->_internal_client_metadata_size();
  for (const auto& msg : this->_internal_client_metadata()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string client_id = 1 [json_name = "clientId"];
  if (!this->_internal_client_id().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_client_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData IdentifiedGenesisMetadata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    IdentifiedGenesisMetadata::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*IdentifiedGenesisMetadata::GetClassData() const { return &_class_data_; }


void IdentifiedGenesisMetadata::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<IdentifiedGenesisMetadata*>(&to_msg);
  auto& from = static_cast<const IdentifiedGenesisMetadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.core.client.v1.IdentifiedGenesisMetadata)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_client_metadata()->MergeFrom(from._internal_client_metadata());
  if (!from._internal_client_id().empty()) {
    _this->_internal_set_client_id(from._internal_client_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void IdentifiedGenesisMetadata::CopyFrom(const IdentifiedGenesisMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.core.client.v1.IdentifiedGenesisMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IdentifiedGenesisMetadata::IsInitialized() const {
  return true;
}

void IdentifiedGenesisMetadata::InternalSwap(IdentifiedGenesisMetadata* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_client_metadata()->InternalSwap(other->_internal_mutable_client_metadata());
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.client_id_, lhs_arena,
                                       &other->_impl_.client_id_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata IdentifiedGenesisMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fcore_2fclient_2fv1_2fgenesis_2eproto_getter, &descriptor_table_ibc_2fcore_2fclient_2fv1_2fgenesis_2eproto_once,
      file_level_metadata_ibc_2fcore_2fclient_2fv1_2fgenesis_2eproto[2]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace client
}  // namespace core
}  // namespace ibc
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ibc::core::client::v1::GenesisState*
Arena::CreateMaybeMessage< ::ibc::core::client::v1::GenesisState >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::core::client::v1::GenesisState >(arena);
}
template<> PROTOBUF_NOINLINE ::ibc::core::client::v1::GenesisMetadata*
Arena::CreateMaybeMessage< ::ibc::core::client::v1::GenesisMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::core::client::v1::GenesisMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::ibc::core::client::v1::IdentifiedGenesisMetadata*
Arena::CreateMaybeMessage< ::ibc::core::client::v1::IdentifiedGenesisMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::core::client::v1::IdentifiedGenesisMetadata >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
