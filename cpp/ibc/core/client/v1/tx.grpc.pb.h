// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: ibc/core/client/v1/tx.proto
#ifndef GRPC_ibc_2fcore_2fclient_2fv1_2ftx_2eproto__INCLUDED
#define GRPC_ibc_2fcore_2fclient_2fv1_2ftx_2eproto__INCLUDED

#include "ibc/core/client/v1/tx.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace ibc {
namespace core {
namespace client {
namespace v1 {

// Msg defines the ibc/client Msg service.
class Msg final {
 public:
  static constexpr char const* service_full_name() {
    return "ibc.core.client.v1.Msg";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // CreateClient defines a rpc handler method for MsgCreateClient.
    virtual ::grpc::Status CreateClient(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgCreateClient& request, ::ibc::core::client::v1::MsgCreateClientResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::client::v1::MsgCreateClientResponse>> AsyncCreateClient(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgCreateClient& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::client::v1::MsgCreateClientResponse>>(AsyncCreateClientRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::client::v1::MsgCreateClientResponse>> PrepareAsyncCreateClient(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgCreateClient& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::client::v1::MsgCreateClientResponse>>(PrepareAsyncCreateClientRaw(context, request, cq));
    }
    // UpdateClient defines a rpc handler method for MsgUpdateClient.
    virtual ::grpc::Status UpdateClient(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgUpdateClient& request, ::ibc::core::client::v1::MsgUpdateClientResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::client::v1::MsgUpdateClientResponse>> AsyncUpdateClient(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgUpdateClient& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::client::v1::MsgUpdateClientResponse>>(AsyncUpdateClientRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::client::v1::MsgUpdateClientResponse>> PrepareAsyncUpdateClient(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgUpdateClient& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::client::v1::MsgUpdateClientResponse>>(PrepareAsyncUpdateClientRaw(context, request, cq));
    }
    // UpgradeClient defines a rpc handler method for MsgUpgradeClient.
    virtual ::grpc::Status UpgradeClient(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgUpgradeClient& request, ::ibc::core::client::v1::MsgUpgradeClientResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::client::v1::MsgUpgradeClientResponse>> AsyncUpgradeClient(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgUpgradeClient& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::client::v1::MsgUpgradeClientResponse>>(AsyncUpgradeClientRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::client::v1::MsgUpgradeClientResponse>> PrepareAsyncUpgradeClient(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgUpgradeClient& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::client::v1::MsgUpgradeClientResponse>>(PrepareAsyncUpgradeClientRaw(context, request, cq));
    }
    // SubmitMisbehaviour defines a rpc handler method for MsgSubmitMisbehaviour.
    virtual ::grpc::Status SubmitMisbehaviour(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgSubmitMisbehaviour& request, ::ibc::core::client::v1::MsgSubmitMisbehaviourResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::client::v1::MsgSubmitMisbehaviourResponse>> AsyncSubmitMisbehaviour(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgSubmitMisbehaviour& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::client::v1::MsgSubmitMisbehaviourResponse>>(AsyncSubmitMisbehaviourRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::client::v1::MsgSubmitMisbehaviourResponse>> PrepareAsyncSubmitMisbehaviour(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgSubmitMisbehaviour& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::client::v1::MsgSubmitMisbehaviourResponse>>(PrepareAsyncSubmitMisbehaviourRaw(context, request, cq));
    }
    // UpdateClientParams defines a rpc handler method for MsgUpdateParams.
    virtual ::grpc::Status UpdateClientParams(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgUpdateParams& request, ::ibc::core::client::v1::MsgUpdateParamsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::client::v1::MsgUpdateParamsResponse>> AsyncUpdateClientParams(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgUpdateParams& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::client::v1::MsgUpdateParamsResponse>>(AsyncUpdateClientParamsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::client::v1::MsgUpdateParamsResponse>> PrepareAsyncUpdateClientParams(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgUpdateParams& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::client::v1::MsgUpdateParamsResponse>>(PrepareAsyncUpdateClientParamsRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // CreateClient defines a rpc handler method for MsgCreateClient.
      virtual void CreateClient(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgCreateClient* request, ::ibc::core::client::v1::MsgCreateClientResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateClient(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgCreateClient* request, ::ibc::core::client::v1::MsgCreateClientResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // UpdateClient defines a rpc handler method for MsgUpdateClient.
      virtual void UpdateClient(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgUpdateClient* request, ::ibc::core::client::v1::MsgUpdateClientResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateClient(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgUpdateClient* request, ::ibc::core::client::v1::MsgUpdateClientResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // UpgradeClient defines a rpc handler method for MsgUpgradeClient.
      virtual void UpgradeClient(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgUpgradeClient* request, ::ibc::core::client::v1::MsgUpgradeClientResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpgradeClient(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgUpgradeClient* request, ::ibc::core::client::v1::MsgUpgradeClientResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // SubmitMisbehaviour defines a rpc handler method for MsgSubmitMisbehaviour.
      virtual void SubmitMisbehaviour(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgSubmitMisbehaviour* request, ::ibc::core::client::v1::MsgSubmitMisbehaviourResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SubmitMisbehaviour(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgSubmitMisbehaviour* request, ::ibc::core::client::v1::MsgSubmitMisbehaviourResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // UpdateClientParams defines a rpc handler method for MsgUpdateParams.
      virtual void UpdateClientParams(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgUpdateParams* request, ::ibc::core::client::v1::MsgUpdateParamsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateClientParams(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgUpdateParams* request, ::ibc::core::client::v1::MsgUpdateParamsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::client::v1::MsgCreateClientResponse>* AsyncCreateClientRaw(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgCreateClient& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::client::v1::MsgCreateClientResponse>* PrepareAsyncCreateClientRaw(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgCreateClient& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::client::v1::MsgUpdateClientResponse>* AsyncUpdateClientRaw(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgUpdateClient& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::client::v1::MsgUpdateClientResponse>* PrepareAsyncUpdateClientRaw(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgUpdateClient& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::client::v1::MsgUpgradeClientResponse>* AsyncUpgradeClientRaw(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgUpgradeClient& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::client::v1::MsgUpgradeClientResponse>* PrepareAsyncUpgradeClientRaw(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgUpgradeClient& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::client::v1::MsgSubmitMisbehaviourResponse>* AsyncSubmitMisbehaviourRaw(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgSubmitMisbehaviour& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::client::v1::MsgSubmitMisbehaviourResponse>* PrepareAsyncSubmitMisbehaviourRaw(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgSubmitMisbehaviour& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::client::v1::MsgUpdateParamsResponse>* AsyncUpdateClientParamsRaw(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgUpdateParams& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ibc::core::client::v1::MsgUpdateParamsResponse>* PrepareAsyncUpdateClientParamsRaw(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgUpdateParams& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status CreateClient(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgCreateClient& request, ::ibc::core::client::v1::MsgCreateClientResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ibc::core::client::v1::MsgCreateClientResponse>> AsyncCreateClient(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgCreateClient& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ibc::core::client::v1::MsgCreateClientResponse>>(AsyncCreateClientRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ibc::core::client::v1::MsgCreateClientResponse>> PrepareAsyncCreateClient(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgCreateClient& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ibc::core::client::v1::MsgCreateClientResponse>>(PrepareAsyncCreateClientRaw(context, request, cq));
    }
    ::grpc::Status UpdateClient(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgUpdateClient& request, ::ibc::core::client::v1::MsgUpdateClientResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ibc::core::client::v1::MsgUpdateClientResponse>> AsyncUpdateClient(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgUpdateClient& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ibc::core::client::v1::MsgUpdateClientResponse>>(AsyncUpdateClientRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ibc::core::client::v1::MsgUpdateClientResponse>> PrepareAsyncUpdateClient(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgUpdateClient& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ibc::core::client::v1::MsgUpdateClientResponse>>(PrepareAsyncUpdateClientRaw(context, request, cq));
    }
    ::grpc::Status UpgradeClient(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgUpgradeClient& request, ::ibc::core::client::v1::MsgUpgradeClientResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ibc::core::client::v1::MsgUpgradeClientResponse>> AsyncUpgradeClient(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgUpgradeClient& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ibc::core::client::v1::MsgUpgradeClientResponse>>(AsyncUpgradeClientRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ibc::core::client::v1::MsgUpgradeClientResponse>> PrepareAsyncUpgradeClient(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgUpgradeClient& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ibc::core::client::v1::MsgUpgradeClientResponse>>(PrepareAsyncUpgradeClientRaw(context, request, cq));
    }
    ::grpc::Status SubmitMisbehaviour(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgSubmitMisbehaviour& request, ::ibc::core::client::v1::MsgSubmitMisbehaviourResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ibc::core::client::v1::MsgSubmitMisbehaviourResponse>> AsyncSubmitMisbehaviour(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgSubmitMisbehaviour& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ibc::core::client::v1::MsgSubmitMisbehaviourResponse>>(AsyncSubmitMisbehaviourRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ibc::core::client::v1::MsgSubmitMisbehaviourResponse>> PrepareAsyncSubmitMisbehaviour(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgSubmitMisbehaviour& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ibc::core::client::v1::MsgSubmitMisbehaviourResponse>>(PrepareAsyncSubmitMisbehaviourRaw(context, request, cq));
    }
    ::grpc::Status UpdateClientParams(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgUpdateParams& request, ::ibc::core::client::v1::MsgUpdateParamsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ibc::core::client::v1::MsgUpdateParamsResponse>> AsyncUpdateClientParams(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgUpdateParams& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ibc::core::client::v1::MsgUpdateParamsResponse>>(AsyncUpdateClientParamsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ibc::core::client::v1::MsgUpdateParamsResponse>> PrepareAsyncUpdateClientParams(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgUpdateParams& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ibc::core::client::v1::MsgUpdateParamsResponse>>(PrepareAsyncUpdateClientParamsRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void CreateClient(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgCreateClient* request, ::ibc::core::client::v1::MsgCreateClientResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateClient(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgCreateClient* request, ::ibc::core::client::v1::MsgCreateClientResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateClient(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgUpdateClient* request, ::ibc::core::client::v1::MsgUpdateClientResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateClient(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgUpdateClient* request, ::ibc::core::client::v1::MsgUpdateClientResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpgradeClient(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgUpgradeClient* request, ::ibc::core::client::v1::MsgUpgradeClientResponse* response, std::function<void(::grpc::Status)>) override;
      void UpgradeClient(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgUpgradeClient* request, ::ibc::core::client::v1::MsgUpgradeClientResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SubmitMisbehaviour(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgSubmitMisbehaviour* request, ::ibc::core::client::v1::MsgSubmitMisbehaviourResponse* response, std::function<void(::grpc::Status)>) override;
      void SubmitMisbehaviour(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgSubmitMisbehaviour* request, ::ibc::core::client::v1::MsgSubmitMisbehaviourResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateClientParams(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgUpdateParams* request, ::ibc::core::client::v1::MsgUpdateParamsResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateClientParams(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgUpdateParams* request, ::ibc::core::client::v1::MsgUpdateParamsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::ibc::core::client::v1::MsgCreateClientResponse>* AsyncCreateClientRaw(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgCreateClient& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ibc::core::client::v1::MsgCreateClientResponse>* PrepareAsyncCreateClientRaw(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgCreateClient& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ibc::core::client::v1::MsgUpdateClientResponse>* AsyncUpdateClientRaw(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgUpdateClient& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ibc::core::client::v1::MsgUpdateClientResponse>* PrepareAsyncUpdateClientRaw(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgUpdateClient& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ibc::core::client::v1::MsgUpgradeClientResponse>* AsyncUpgradeClientRaw(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgUpgradeClient& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ibc::core::client::v1::MsgUpgradeClientResponse>* PrepareAsyncUpgradeClientRaw(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgUpgradeClient& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ibc::core::client::v1::MsgSubmitMisbehaviourResponse>* AsyncSubmitMisbehaviourRaw(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgSubmitMisbehaviour& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ibc::core::client::v1::MsgSubmitMisbehaviourResponse>* PrepareAsyncSubmitMisbehaviourRaw(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgSubmitMisbehaviour& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ibc::core::client::v1::MsgUpdateParamsResponse>* AsyncUpdateClientParamsRaw(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgUpdateParams& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ibc::core::client::v1::MsgUpdateParamsResponse>* PrepareAsyncUpdateClientParamsRaw(::grpc::ClientContext* context, const ::ibc::core::client::v1::MsgUpdateParams& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_CreateClient_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateClient_;
    const ::grpc::internal::RpcMethod rpcmethod_UpgradeClient_;
    const ::grpc::internal::RpcMethod rpcmethod_SubmitMisbehaviour_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateClientParams_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // CreateClient defines a rpc handler method for MsgCreateClient.
    virtual ::grpc::Status CreateClient(::grpc::ServerContext* context, const ::ibc::core::client::v1::MsgCreateClient* request, ::ibc::core::client::v1::MsgCreateClientResponse* response);
    // UpdateClient defines a rpc handler method for MsgUpdateClient.
    virtual ::grpc::Status UpdateClient(::grpc::ServerContext* context, const ::ibc::core::client::v1::MsgUpdateClient* request, ::ibc::core::client::v1::MsgUpdateClientResponse* response);
    // UpgradeClient defines a rpc handler method for MsgUpgradeClient.
    virtual ::grpc::Status UpgradeClient(::grpc::ServerContext* context, const ::ibc::core::client::v1::MsgUpgradeClient* request, ::ibc::core::client::v1::MsgUpgradeClientResponse* response);
    // SubmitMisbehaviour defines a rpc handler method for MsgSubmitMisbehaviour.
    virtual ::grpc::Status SubmitMisbehaviour(::grpc::ServerContext* context, const ::ibc::core::client::v1::MsgSubmitMisbehaviour* request, ::ibc::core::client::v1::MsgSubmitMisbehaviourResponse* response);
    // UpdateClientParams defines a rpc handler method for MsgUpdateParams.
    virtual ::grpc::Status UpdateClientParams(::grpc::ServerContext* context, const ::ibc::core::client::v1::MsgUpdateParams* request, ::ibc::core::client::v1::MsgUpdateParamsResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateClient : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateClient() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_CreateClient() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateClient(::grpc::ServerContext* /*context*/, const ::ibc::core::client::v1::MsgCreateClient* /*request*/, ::ibc::core::client::v1::MsgCreateClientResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateClient(::grpc::ServerContext* context, ::ibc::core::client::v1::MsgCreateClient* request, ::grpc::ServerAsyncResponseWriter< ::ibc::core::client::v1::MsgCreateClientResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateClient : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateClient() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_UpdateClient() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateClient(::grpc::ServerContext* /*context*/, const ::ibc::core::client::v1::MsgUpdateClient* /*request*/, ::ibc::core::client::v1::MsgUpdateClientResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateClient(::grpc::ServerContext* context, ::ibc::core::client::v1::MsgUpdateClient* request, ::grpc::ServerAsyncResponseWriter< ::ibc::core::client::v1::MsgUpdateClientResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpgradeClient : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpgradeClient() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_UpgradeClient() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpgradeClient(::grpc::ServerContext* /*context*/, const ::ibc::core::client::v1::MsgUpgradeClient* /*request*/, ::ibc::core::client::v1::MsgUpgradeClientResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpgradeClient(::grpc::ServerContext* context, ::ibc::core::client::v1::MsgUpgradeClient* request, ::grpc::ServerAsyncResponseWriter< ::ibc::core::client::v1::MsgUpgradeClientResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SubmitMisbehaviour : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SubmitMisbehaviour() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_SubmitMisbehaviour() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubmitMisbehaviour(::grpc::ServerContext* /*context*/, const ::ibc::core::client::v1::MsgSubmitMisbehaviour* /*request*/, ::ibc::core::client::v1::MsgSubmitMisbehaviourResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubmitMisbehaviour(::grpc::ServerContext* context, ::ibc::core::client::v1::MsgSubmitMisbehaviour* request, ::grpc::ServerAsyncResponseWriter< ::ibc::core::client::v1::MsgSubmitMisbehaviourResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateClientParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateClientParams() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_UpdateClientParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateClientParams(::grpc::ServerContext* /*context*/, const ::ibc::core::client::v1::MsgUpdateParams* /*request*/, ::ibc::core::client::v1::MsgUpdateParamsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateClientParams(::grpc::ServerContext* context, ::ibc::core::client::v1::MsgUpdateParams* request, ::grpc::ServerAsyncResponseWriter< ::ibc::core::client::v1::MsgUpdateParamsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_CreateClient<WithAsyncMethod_UpdateClient<WithAsyncMethod_UpgradeClient<WithAsyncMethod_SubmitMisbehaviour<WithAsyncMethod_UpdateClientParams<Service > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_CreateClient : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateClient() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::ibc::core::client::v1::MsgCreateClient, ::ibc::core::client::v1::MsgCreateClientResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::ibc::core::client::v1::MsgCreateClient* request, ::ibc::core::client::v1::MsgCreateClientResponse* response) { return this->CreateClient(context, request, response); }));}
    void SetMessageAllocatorFor_CreateClient(
        ::grpc::MessageAllocator< ::ibc::core::client::v1::MsgCreateClient, ::ibc::core::client::v1::MsgCreateClientResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ibc::core::client::v1::MsgCreateClient, ::ibc::core::client::v1::MsgCreateClientResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateClient() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateClient(::grpc::ServerContext* /*context*/, const ::ibc::core::client::v1::MsgCreateClient* /*request*/, ::ibc::core::client::v1::MsgCreateClientResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateClient(
      ::grpc::CallbackServerContext* /*context*/, const ::ibc::core::client::v1::MsgCreateClient* /*request*/, ::ibc::core::client::v1::MsgCreateClientResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateClient : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateClient() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::ibc::core::client::v1::MsgUpdateClient, ::ibc::core::client::v1::MsgUpdateClientResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::ibc::core::client::v1::MsgUpdateClient* request, ::ibc::core::client::v1::MsgUpdateClientResponse* response) { return this->UpdateClient(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateClient(
        ::grpc::MessageAllocator< ::ibc::core::client::v1::MsgUpdateClient, ::ibc::core::client::v1::MsgUpdateClientResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ibc::core::client::v1::MsgUpdateClient, ::ibc::core::client::v1::MsgUpdateClientResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateClient() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateClient(::grpc::ServerContext* /*context*/, const ::ibc::core::client::v1::MsgUpdateClient* /*request*/, ::ibc::core::client::v1::MsgUpdateClientResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateClient(
      ::grpc::CallbackServerContext* /*context*/, const ::ibc::core::client::v1::MsgUpdateClient* /*request*/, ::ibc::core::client::v1::MsgUpdateClientResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpgradeClient : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpgradeClient() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::ibc::core::client::v1::MsgUpgradeClient, ::ibc::core::client::v1::MsgUpgradeClientResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::ibc::core::client::v1::MsgUpgradeClient* request, ::ibc::core::client::v1::MsgUpgradeClientResponse* response) { return this->UpgradeClient(context, request, response); }));}
    void SetMessageAllocatorFor_UpgradeClient(
        ::grpc::MessageAllocator< ::ibc::core::client::v1::MsgUpgradeClient, ::ibc::core::client::v1::MsgUpgradeClientResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ibc::core::client::v1::MsgUpgradeClient, ::ibc::core::client::v1::MsgUpgradeClientResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpgradeClient() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpgradeClient(::grpc::ServerContext* /*context*/, const ::ibc::core::client::v1::MsgUpgradeClient* /*request*/, ::ibc::core::client::v1::MsgUpgradeClientResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpgradeClient(
      ::grpc::CallbackServerContext* /*context*/, const ::ibc::core::client::v1::MsgUpgradeClient* /*request*/, ::ibc::core::client::v1::MsgUpgradeClientResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SubmitMisbehaviour : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SubmitMisbehaviour() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::ibc::core::client::v1::MsgSubmitMisbehaviour, ::ibc::core::client::v1::MsgSubmitMisbehaviourResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::ibc::core::client::v1::MsgSubmitMisbehaviour* request, ::ibc::core::client::v1::MsgSubmitMisbehaviourResponse* response) { return this->SubmitMisbehaviour(context, request, response); }));}
    void SetMessageAllocatorFor_SubmitMisbehaviour(
        ::grpc::MessageAllocator< ::ibc::core::client::v1::MsgSubmitMisbehaviour, ::ibc::core::client::v1::MsgSubmitMisbehaviourResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ibc::core::client::v1::MsgSubmitMisbehaviour, ::ibc::core::client::v1::MsgSubmitMisbehaviourResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SubmitMisbehaviour() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubmitMisbehaviour(::grpc::ServerContext* /*context*/, const ::ibc::core::client::v1::MsgSubmitMisbehaviour* /*request*/, ::ibc::core::client::v1::MsgSubmitMisbehaviourResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SubmitMisbehaviour(
      ::grpc::CallbackServerContext* /*context*/, const ::ibc::core::client::v1::MsgSubmitMisbehaviour* /*request*/, ::ibc::core::client::v1::MsgSubmitMisbehaviourResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateClientParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateClientParams() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::ibc::core::client::v1::MsgUpdateParams, ::ibc::core::client::v1::MsgUpdateParamsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::ibc::core::client::v1::MsgUpdateParams* request, ::ibc::core::client::v1::MsgUpdateParamsResponse* response) { return this->UpdateClientParams(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateClientParams(
        ::grpc::MessageAllocator< ::ibc::core::client::v1::MsgUpdateParams, ::ibc::core::client::v1::MsgUpdateParamsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ibc::core::client::v1::MsgUpdateParams, ::ibc::core::client::v1::MsgUpdateParamsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateClientParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateClientParams(::grpc::ServerContext* /*context*/, const ::ibc::core::client::v1::MsgUpdateParams* /*request*/, ::ibc::core::client::v1::MsgUpdateParamsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateClientParams(
      ::grpc::CallbackServerContext* /*context*/, const ::ibc::core::client::v1::MsgUpdateParams* /*request*/, ::ibc::core::client::v1::MsgUpdateParamsResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_CreateClient<WithCallbackMethod_UpdateClient<WithCallbackMethod_UpgradeClient<WithCallbackMethod_SubmitMisbehaviour<WithCallbackMethod_UpdateClientParams<Service > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_CreateClient : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateClient() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_CreateClient() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateClient(::grpc::ServerContext* /*context*/, const ::ibc::core::client::v1::MsgCreateClient* /*request*/, ::ibc::core::client::v1::MsgCreateClientResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateClient : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateClient() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_UpdateClient() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateClient(::grpc::ServerContext* /*context*/, const ::ibc::core::client::v1::MsgUpdateClient* /*request*/, ::ibc::core::client::v1::MsgUpdateClientResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpgradeClient : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpgradeClient() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_UpgradeClient() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpgradeClient(::grpc::ServerContext* /*context*/, const ::ibc::core::client::v1::MsgUpgradeClient* /*request*/, ::ibc::core::client::v1::MsgUpgradeClientResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SubmitMisbehaviour : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SubmitMisbehaviour() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_SubmitMisbehaviour() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubmitMisbehaviour(::grpc::ServerContext* /*context*/, const ::ibc::core::client::v1::MsgSubmitMisbehaviour* /*request*/, ::ibc::core::client::v1::MsgSubmitMisbehaviourResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateClientParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateClientParams() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_UpdateClientParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateClientParams(::grpc::ServerContext* /*context*/, const ::ibc::core::client::v1::MsgUpdateParams* /*request*/, ::ibc::core::client::v1::MsgUpdateParamsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateClient : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateClient() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_CreateClient() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateClient(::grpc::ServerContext* /*context*/, const ::ibc::core::client::v1::MsgCreateClient* /*request*/, ::ibc::core::client::v1::MsgCreateClientResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateClient(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateClient : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateClient() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_UpdateClient() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateClient(::grpc::ServerContext* /*context*/, const ::ibc::core::client::v1::MsgUpdateClient* /*request*/, ::ibc::core::client::v1::MsgUpdateClientResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateClient(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpgradeClient : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpgradeClient() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_UpgradeClient() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpgradeClient(::grpc::ServerContext* /*context*/, const ::ibc::core::client::v1::MsgUpgradeClient* /*request*/, ::ibc::core::client::v1::MsgUpgradeClientResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpgradeClient(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SubmitMisbehaviour : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SubmitMisbehaviour() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_SubmitMisbehaviour() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubmitMisbehaviour(::grpc::ServerContext* /*context*/, const ::ibc::core::client::v1::MsgSubmitMisbehaviour* /*request*/, ::ibc::core::client::v1::MsgSubmitMisbehaviourResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubmitMisbehaviour(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateClientParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateClientParams() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_UpdateClientParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateClientParams(::grpc::ServerContext* /*context*/, const ::ibc::core::client::v1::MsgUpdateParams* /*request*/, ::ibc::core::client::v1::MsgUpdateParamsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateClientParams(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateClient : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateClient() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateClient(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateClient() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateClient(::grpc::ServerContext* /*context*/, const ::ibc::core::client::v1::MsgCreateClient* /*request*/, ::ibc::core::client::v1::MsgCreateClientResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateClient(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateClient : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateClient() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateClient(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateClient() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateClient(::grpc::ServerContext* /*context*/, const ::ibc::core::client::v1::MsgUpdateClient* /*request*/, ::ibc::core::client::v1::MsgUpdateClientResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateClient(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpgradeClient : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpgradeClient() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpgradeClient(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpgradeClient() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpgradeClient(::grpc::ServerContext* /*context*/, const ::ibc::core::client::v1::MsgUpgradeClient* /*request*/, ::ibc::core::client::v1::MsgUpgradeClientResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpgradeClient(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SubmitMisbehaviour : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SubmitMisbehaviour() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SubmitMisbehaviour(context, request, response); }));
    }
    ~WithRawCallbackMethod_SubmitMisbehaviour() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubmitMisbehaviour(::grpc::ServerContext* /*context*/, const ::ibc::core::client::v1::MsgSubmitMisbehaviour* /*request*/, ::ibc::core::client::v1::MsgSubmitMisbehaviourResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SubmitMisbehaviour(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateClientParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateClientParams() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateClientParams(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateClientParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateClientParams(::grpc::ServerContext* /*context*/, const ::ibc::core::client::v1::MsgUpdateParams* /*request*/, ::ibc::core::client::v1::MsgUpdateParamsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateClientParams(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateClient : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateClient() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ibc::core::client::v1::MsgCreateClient, ::ibc::core::client::v1::MsgCreateClientResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ibc::core::client::v1::MsgCreateClient, ::ibc::core::client::v1::MsgCreateClientResponse>* streamer) {
                       return this->StreamedCreateClient(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateClient() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateClient(::grpc::ServerContext* /*context*/, const ::ibc::core::client::v1::MsgCreateClient* /*request*/, ::ibc::core::client::v1::MsgCreateClientResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateClient(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ibc::core::client::v1::MsgCreateClient,::ibc::core::client::v1::MsgCreateClientResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateClient : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateClient() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ibc::core::client::v1::MsgUpdateClient, ::ibc::core::client::v1::MsgUpdateClientResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ibc::core::client::v1::MsgUpdateClient, ::ibc::core::client::v1::MsgUpdateClientResponse>* streamer) {
                       return this->StreamedUpdateClient(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateClient() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateClient(::grpc::ServerContext* /*context*/, const ::ibc::core::client::v1::MsgUpdateClient* /*request*/, ::ibc::core::client::v1::MsgUpdateClientResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateClient(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ibc::core::client::v1::MsgUpdateClient,::ibc::core::client::v1::MsgUpdateClientResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpgradeClient : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpgradeClient() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ibc::core::client::v1::MsgUpgradeClient, ::ibc::core::client::v1::MsgUpgradeClientResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ibc::core::client::v1::MsgUpgradeClient, ::ibc::core::client::v1::MsgUpgradeClientResponse>* streamer) {
                       return this->StreamedUpgradeClient(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpgradeClient() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpgradeClient(::grpc::ServerContext* /*context*/, const ::ibc::core::client::v1::MsgUpgradeClient* /*request*/, ::ibc::core::client::v1::MsgUpgradeClientResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpgradeClient(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ibc::core::client::v1::MsgUpgradeClient,::ibc::core::client::v1::MsgUpgradeClientResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SubmitMisbehaviour : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SubmitMisbehaviour() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ibc::core::client::v1::MsgSubmitMisbehaviour, ::ibc::core::client::v1::MsgSubmitMisbehaviourResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ibc::core::client::v1::MsgSubmitMisbehaviour, ::ibc::core::client::v1::MsgSubmitMisbehaviourResponse>* streamer) {
                       return this->StreamedSubmitMisbehaviour(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SubmitMisbehaviour() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SubmitMisbehaviour(::grpc::ServerContext* /*context*/, const ::ibc::core::client::v1::MsgSubmitMisbehaviour* /*request*/, ::ibc::core::client::v1::MsgSubmitMisbehaviourResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSubmitMisbehaviour(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ibc::core::client::v1::MsgSubmitMisbehaviour,::ibc::core::client::v1::MsgSubmitMisbehaviourResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateClientParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateClientParams() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ibc::core::client::v1::MsgUpdateParams, ::ibc::core::client::v1::MsgUpdateParamsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ibc::core::client::v1::MsgUpdateParams, ::ibc::core::client::v1::MsgUpdateParamsResponse>* streamer) {
                       return this->StreamedUpdateClientParams(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateClientParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateClientParams(::grpc::ServerContext* /*context*/, const ::ibc::core::client::v1::MsgUpdateParams* /*request*/, ::ibc::core::client::v1::MsgUpdateParamsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateClientParams(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ibc::core::client::v1::MsgUpdateParams,::ibc::core::client::v1::MsgUpdateParamsResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_CreateClient<WithStreamedUnaryMethod_UpdateClient<WithStreamedUnaryMethod_UpgradeClient<WithStreamedUnaryMethod_SubmitMisbehaviour<WithStreamedUnaryMethod_UpdateClientParams<Service > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_CreateClient<WithStreamedUnaryMethod_UpdateClient<WithStreamedUnaryMethod_UpgradeClient<WithStreamedUnaryMethod_SubmitMisbehaviour<WithStreamedUnaryMethod_UpdateClientParams<Service > > > > > StreamedService;
};

}  // namespace v1
}  // namespace client
}  // namespace core
}  // namespace ibc


#endif  // GRPC_ibc_2fcore_2fclient_2fv1_2ftx_2eproto__INCLUDED
