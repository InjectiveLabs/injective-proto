// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ibc/core/client/v1/query.proto

#include "ibc/core/client/v1/query.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace ibc {
namespace core {
namespace client {
namespace v1 {
template <typename>
PROTOBUF_CONSTEXPR QueryClientStateRequest::QueryClientStateRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.client_id_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryClientStateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryClientStateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryClientStateRequestDefaultTypeInternal() {}
  union {
    QueryClientStateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryClientStateRequestDefaultTypeInternal _QueryClientStateRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryClientStateResponse::QueryClientStateResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.proof_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.client_state_)*/nullptr
  , /*decltype(_impl_.proof_height_)*/nullptr} {}
struct QueryClientStateResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryClientStateResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryClientStateResponseDefaultTypeInternal() {}
  union {
    QueryClientStateResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryClientStateResponseDefaultTypeInternal _QueryClientStateResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryClientStatesRequest::QueryClientStatesRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.pagination_)*/nullptr} {}
struct QueryClientStatesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryClientStatesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryClientStatesRequestDefaultTypeInternal() {}
  union {
    QueryClientStatesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryClientStatesRequestDefaultTypeInternal _QueryClientStatesRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryClientStatesResponse::QueryClientStatesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.client_states_)*/{}
  , /*decltype(_impl_.pagination_)*/nullptr} {}
struct QueryClientStatesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryClientStatesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryClientStatesResponseDefaultTypeInternal() {}
  union {
    QueryClientStatesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryClientStatesResponseDefaultTypeInternal _QueryClientStatesResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryConsensusStateRequest::QueryConsensusStateRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.client_id_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.revision_number_)*/ ::uint64_t{0u}

  , /*decltype(_impl_.revision_height_)*/ ::uint64_t{0u}

  , /*decltype(_impl_.latest_height_)*/ false

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryConsensusStateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryConsensusStateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryConsensusStateRequestDefaultTypeInternal() {}
  union {
    QueryConsensusStateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryConsensusStateRequestDefaultTypeInternal _QueryConsensusStateRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryConsensusStateResponse::QueryConsensusStateResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.proof_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.consensus_state_)*/nullptr
  , /*decltype(_impl_.proof_height_)*/nullptr} {}
struct QueryConsensusStateResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryConsensusStateResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryConsensusStateResponseDefaultTypeInternal() {}
  union {
    QueryConsensusStateResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryConsensusStateResponseDefaultTypeInternal _QueryConsensusStateResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryConsensusStatesRequest::QueryConsensusStatesRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.client_id_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.pagination_)*/nullptr} {}
struct QueryConsensusStatesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryConsensusStatesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryConsensusStatesRequestDefaultTypeInternal() {}
  union {
    QueryConsensusStatesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryConsensusStatesRequestDefaultTypeInternal _QueryConsensusStatesRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryConsensusStatesResponse::QueryConsensusStatesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.consensus_states_)*/{}
  , /*decltype(_impl_.pagination_)*/nullptr} {}
struct QueryConsensusStatesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryConsensusStatesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryConsensusStatesResponseDefaultTypeInternal() {}
  union {
    QueryConsensusStatesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryConsensusStatesResponseDefaultTypeInternal _QueryConsensusStatesResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryConsensusStateHeightsRequest::QueryConsensusStateHeightsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.client_id_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.pagination_)*/nullptr} {}
struct QueryConsensusStateHeightsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryConsensusStateHeightsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryConsensusStateHeightsRequestDefaultTypeInternal() {}
  union {
    QueryConsensusStateHeightsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryConsensusStateHeightsRequestDefaultTypeInternal _QueryConsensusStateHeightsRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryConsensusStateHeightsResponse::QueryConsensusStateHeightsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.consensus_state_heights_)*/{}
  , /*decltype(_impl_.pagination_)*/nullptr} {}
struct QueryConsensusStateHeightsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryConsensusStateHeightsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryConsensusStateHeightsResponseDefaultTypeInternal() {}
  union {
    QueryConsensusStateHeightsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryConsensusStateHeightsResponseDefaultTypeInternal _QueryConsensusStateHeightsResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryClientStatusRequest::QueryClientStatusRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.client_id_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryClientStatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryClientStatusRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryClientStatusRequestDefaultTypeInternal() {}
  union {
    QueryClientStatusRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryClientStatusRequestDefaultTypeInternal _QueryClientStatusRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryClientStatusResponse::QueryClientStatusResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.status_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryClientStatusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryClientStatusResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryClientStatusResponseDefaultTypeInternal() {}
  union {
    QueryClientStatusResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryClientStatusResponseDefaultTypeInternal _QueryClientStatusResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryClientParamsRequest::QueryClientParamsRequest(
    ::_pbi::ConstantInitialized) {}
struct QueryClientParamsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryClientParamsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryClientParamsRequestDefaultTypeInternal() {}
  union {
    QueryClientParamsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryClientParamsRequestDefaultTypeInternal _QueryClientParamsRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryClientParamsResponse::QueryClientParamsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.params_)*/nullptr} {}
struct QueryClientParamsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryClientParamsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryClientParamsResponseDefaultTypeInternal() {}
  union {
    QueryClientParamsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryClientParamsResponseDefaultTypeInternal _QueryClientParamsResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryUpgradedClientStateRequest::QueryUpgradedClientStateRequest(
    ::_pbi::ConstantInitialized) {}
struct QueryUpgradedClientStateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryUpgradedClientStateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryUpgradedClientStateRequestDefaultTypeInternal() {}
  union {
    QueryUpgradedClientStateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryUpgradedClientStateRequestDefaultTypeInternal _QueryUpgradedClientStateRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryUpgradedClientStateResponse::QueryUpgradedClientStateResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.upgraded_client_state_)*/nullptr} {}
struct QueryUpgradedClientStateResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryUpgradedClientStateResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryUpgradedClientStateResponseDefaultTypeInternal() {}
  union {
    QueryUpgradedClientStateResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryUpgradedClientStateResponseDefaultTypeInternal _QueryUpgradedClientStateResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryUpgradedConsensusStateRequest::QueryUpgradedConsensusStateRequest(
    ::_pbi::ConstantInitialized) {}
struct QueryUpgradedConsensusStateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryUpgradedConsensusStateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryUpgradedConsensusStateRequestDefaultTypeInternal() {}
  union {
    QueryUpgradedConsensusStateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryUpgradedConsensusStateRequestDefaultTypeInternal _QueryUpgradedConsensusStateRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryUpgradedConsensusStateResponse::QueryUpgradedConsensusStateResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.upgraded_consensus_state_)*/nullptr} {}
struct QueryUpgradedConsensusStateResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryUpgradedConsensusStateResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryUpgradedConsensusStateResponseDefaultTypeInternal() {}
  union {
    QueryUpgradedConsensusStateResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryUpgradedConsensusStateResponseDefaultTypeInternal _QueryUpgradedConsensusStateResponse_default_instance_;
}  // namespace v1
}  // namespace client
}  // namespace core
}  // namespace ibc
static ::_pb::Metadata file_level_metadata_ibc_2fcore_2fclient_2fv1_2fquery_2eproto[18];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_ibc_2fcore_2fclient_2fv1_2fquery_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_ibc_2fcore_2fclient_2fv1_2fquery_2eproto = nullptr;
const ::uint32_t TableStruct_ibc_2fcore_2fclient_2fv1_2fquery_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryClientStateRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryClientStateRequest, _impl_.client_id_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryClientStateResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryClientStateResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryClientStateResponse, _impl_.client_state_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryClientStateResponse, _impl_.proof_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryClientStateResponse, _impl_.proof_height_),
    0,
    ~0u,
    1,
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryClientStatesRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryClientStatesRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryClientStatesRequest, _impl_.pagination_),
    0,
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryClientStatesResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryClientStatesResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryClientStatesResponse, _impl_.client_states_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryClientStatesResponse, _impl_.pagination_),
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryConsensusStateRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryConsensusStateRequest, _impl_.client_id_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryConsensusStateRequest, _impl_.revision_number_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryConsensusStateRequest, _impl_.revision_height_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryConsensusStateRequest, _impl_.latest_height_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryConsensusStateResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryConsensusStateResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryConsensusStateResponse, _impl_.consensus_state_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryConsensusStateResponse, _impl_.proof_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryConsensusStateResponse, _impl_.proof_height_),
    0,
    ~0u,
    1,
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryConsensusStatesRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryConsensusStatesRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryConsensusStatesRequest, _impl_.client_id_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryConsensusStatesRequest, _impl_.pagination_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryConsensusStatesResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryConsensusStatesResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryConsensusStatesResponse, _impl_.consensus_states_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryConsensusStatesResponse, _impl_.pagination_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryConsensusStateHeightsRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryConsensusStateHeightsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryConsensusStateHeightsRequest, _impl_.client_id_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryConsensusStateHeightsRequest, _impl_.pagination_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryConsensusStateHeightsResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryConsensusStateHeightsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryConsensusStateHeightsResponse, _impl_.consensus_state_heights_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryConsensusStateHeightsResponse, _impl_.pagination_),
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryClientStatusRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryClientStatusRequest, _impl_.client_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryClientStatusResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryClientStatusResponse, _impl_.status_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryClientParamsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryClientParamsResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryClientParamsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryClientParamsResponse, _impl_.params_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryUpgradedClientStateRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryUpgradedClientStateResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryUpgradedClientStateResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryUpgradedClientStateResponse, _impl_.upgraded_client_state_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryUpgradedConsensusStateRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryUpgradedConsensusStateResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryUpgradedConsensusStateResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::core::client::v1::QueryUpgradedConsensusStateResponse, _impl_.upgraded_consensus_state_),
    0,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::ibc::core::client::v1::QueryClientStateRequest)},
        { 9, 20, -1, sizeof(::ibc::core::client::v1::QueryClientStateResponse)},
        { 23, 32, -1, sizeof(::ibc::core::client::v1::QueryClientStatesRequest)},
        { 33, 43, -1, sizeof(::ibc::core::client::v1::QueryClientStatesResponse)},
        { 45, -1, -1, sizeof(::ibc::core::client::v1::QueryConsensusStateRequest)},
        { 57, 68, -1, sizeof(::ibc::core::client::v1::QueryConsensusStateResponse)},
        { 71, 81, -1, sizeof(::ibc::core::client::v1::QueryConsensusStatesRequest)},
        { 83, 93, -1, sizeof(::ibc::core::client::v1::QueryConsensusStatesResponse)},
        { 95, 105, -1, sizeof(::ibc::core::client::v1::QueryConsensusStateHeightsRequest)},
        { 107, 117, -1, sizeof(::ibc::core::client::v1::QueryConsensusStateHeightsResponse)},
        { 119, -1, -1, sizeof(::ibc::core::client::v1::QueryClientStatusRequest)},
        { 128, -1, -1, sizeof(::ibc::core::client::v1::QueryClientStatusResponse)},
        { 137, -1, -1, sizeof(::ibc::core::client::v1::QueryClientParamsRequest)},
        { 145, 154, -1, sizeof(::ibc::core::client::v1::QueryClientParamsResponse)},
        { 155, -1, -1, sizeof(::ibc::core::client::v1::QueryUpgradedClientStateRequest)},
        { 163, 172, -1, sizeof(::ibc::core::client::v1::QueryUpgradedClientStateResponse)},
        { 173, -1, -1, sizeof(::ibc::core::client::v1::QueryUpgradedConsensusStateRequest)},
        { 181, 190, -1, sizeof(::ibc::core::client::v1::QueryUpgradedConsensusStateResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::ibc::core::client::v1::_QueryClientStateRequest_default_instance_._instance,
    &::ibc::core::client::v1::_QueryClientStateResponse_default_instance_._instance,
    &::ibc::core::client::v1::_QueryClientStatesRequest_default_instance_._instance,
    &::ibc::core::client::v1::_QueryClientStatesResponse_default_instance_._instance,
    &::ibc::core::client::v1::_QueryConsensusStateRequest_default_instance_._instance,
    &::ibc::core::client::v1::_QueryConsensusStateResponse_default_instance_._instance,
    &::ibc::core::client::v1::_QueryConsensusStatesRequest_default_instance_._instance,
    &::ibc::core::client::v1::_QueryConsensusStatesResponse_default_instance_._instance,
    &::ibc::core::client::v1::_QueryConsensusStateHeightsRequest_default_instance_._instance,
    &::ibc::core::client::v1::_QueryConsensusStateHeightsResponse_default_instance_._instance,
    &::ibc::core::client::v1::_QueryClientStatusRequest_default_instance_._instance,
    &::ibc::core::client::v1::_QueryClientStatusResponse_default_instance_._instance,
    &::ibc::core::client::v1::_QueryClientParamsRequest_default_instance_._instance,
    &::ibc::core::client::v1::_QueryClientParamsResponse_default_instance_._instance,
    &::ibc::core::client::v1::_QueryUpgradedClientStateRequest_default_instance_._instance,
    &::ibc::core::client::v1::_QueryUpgradedClientStateResponse_default_instance_._instance,
    &::ibc::core::client::v1::_QueryUpgradedConsensusStateRequest_default_instance_._instance,
    &::ibc::core::client::v1::_QueryUpgradedConsensusStateResponse_default_instance_._instance,
};
const char descriptor_table_protodef_ibc_2fcore_2fclient_2fv1_2fquery_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\036ibc/core/client/v1/query.proto\022\022ibc.co"
    "re.client.v1\032*cosmos/base/query/v1beta1/"
    "pagination.proto\032\037ibc/core/client/v1/cli"
    "ent.proto\032\031google/protobuf/any.proto\032\034go"
    "ogle/api/annotations.proto\032\024gogoproto/go"
    "go.proto\"6\n\027QueryClientStateRequest\022\033\n\tc"
    "lient_id\030\001 \001(\tR\010clientId\"\256\001\n\030QueryClient"
    "StateResponse\0227\n\014client_state\030\001 \001(\0132\024.go"
    "ogle.protobuf.AnyR\013clientState\022\024\n\005proof\030"
    "\002 \001(\014R\005proof\022C\n\014proof_height\030\003 \001(\0132\032.ibc"
    ".core.client.v1.HeightB\004\310\336\037\000R\013proofHeigh"
    "t\"b\n\030QueryClientStatesRequest\022F\n\npaginat"
    "ion\030\001 \001(\0132&.cosmos.base.query.v1beta1.Pa"
    "geRequestR\npagination\"\324\001\n\031QueryClientSta"
    "tesResponse\022n\n\rclient_states\030\001 \003(\0132).ibc"
    ".core.client.v1.IdentifiedClientStateB\036\310"
    "\336\037\000\252\337\037\026IdentifiedClientStatesR\014clientSta"
    "tes\022G\n\npagination\030\002 \001(\0132\'.cosmos.base.qu"
    "ery.v1beta1.PageResponseR\npagination\"\260\001\n"
    "\032QueryConsensusStateRequest\022\033\n\tclient_id"
    "\030\001 \001(\tR\010clientId\022\'\n\017revision_number\030\002 \001("
    "\004R\016revisionNumber\022\'\n\017revision_height\030\003 \001"
    "(\004R\016revisionHeight\022#\n\rlatest_height\030\004 \001("
    "\010R\014latestHeight\"\267\001\n\033QueryConsensusStateR"
    "esponse\022=\n\017consensus_state\030\001 \001(\0132\024.googl"
    "e.protobuf.AnyR\016consensusState\022\024\n\005proof\030"
    "\002 \001(\014R\005proof\022C\n\014proof_height\030\003 \001(\0132\032.ibc"
    ".core.client.v1.HeightB\004\310\336\037\000R\013proofHeigh"
    "t\"\202\001\n\033QueryConsensusStatesRequest\022\033\n\tcli"
    "ent_id\030\001 \001(\tR\010clientId\022F\n\npagination\030\002 \001"
    "(\0132&.cosmos.base.query.v1beta1.PageReque"
    "stR\npagination\"\306\001\n\034QueryConsensusStatesR"
    "esponse\022]\n\020consensus_states\030\001 \003(\0132,.ibc."
    "core.client.v1.ConsensusStateWithHeightB"
    "\004\310\336\037\000R\017consensusStates\022G\n\npagination\030\002 \001"
    "(\0132\'.cosmos.base.query.v1beta1.PageRespo"
    "nseR\npagination\"\210\001\n!QueryConsensusStateH"
    "eightsRequest\022\033\n\tclient_id\030\001 \001(\tR\010client"
    "Id\022F\n\npagination\030\002 \001(\0132&.cosmos.base.que"
    "ry.v1beta1.PageRequestR\npagination\"\307\001\n\"Q"
    "ueryConsensusStateHeightsResponse\022X\n\027con"
    "sensus_state_heights\030\001 \003(\0132\032.ibc.core.cl"
    "ient.v1.HeightB\004\310\336\037\000R\025consensusStateHeig"
    "hts\022G\n\npagination\030\002 \001(\0132\'.cosmos.base.qu"
    "ery.v1beta1.PageResponseR\npagination\"7\n\030"
    "QueryClientStatusRequest\022\033\n\tclient_id\030\001 "
    "\001(\tR\010clientId\"3\n\031QueryClientStatusRespon"
    "se\022\026\n\006status\030\001 \001(\tR\006status\"\032\n\030QueryClien"
    "tParamsRequest\"O\n\031QueryClientParamsRespo"
    "nse\0222\n\006params\030\001 \001(\0132\032.ibc.core.client.v1"
    ".ParamsR\006params\"!\n\037QueryUpgradedClientSt"
    "ateRequest\"l\n QueryUpgradedClientStateRe"
    "sponse\022H\n\025upgraded_client_state\030\001 \001(\0132\024."
    "google.protobuf.AnyR\023upgradedClientState"
    "\"$\n\"QueryUpgradedConsensusStateRequest\"u"
    "\n#QueryUpgradedConsensusStateResponse\022N\n"
    "\030upgraded_consensus_state\030\001 \001(\0132\024.google"
    ".protobuf.AnyR\026upgradedConsensusState2\321\014"
    "\n\005Query\022\237\001\n\013ClientState\022+.ibc.core.clien"
    "t.v1.QueryClientStateRequest\032,.ibc.core."
    "client.v1.QueryClientStateResponse\"5\202\323\344\223"
    "\002/\022-/ibc/core/client/v1/client_states/{c"
    "lient_id}\022\226\001\n\014ClientStates\022,.ibc.core.cl"
    "ient.v1.QueryClientStatesRequest\032-.ibc.c"
    "ore.client.v1.QueryClientStatesResponse\""
    ")\202\323\344\223\002#\022!/ibc/core/client/v1/client_stat"
    "es\022\337\001\n\016ConsensusState\022..ibc.core.client."
    "v1.QueryConsensusStateRequest\032/.ibc.core"
    ".client.v1.QueryConsensusStateResponse\"l"
    "\202\323\344\223\002f\022d/ibc/core/client/v1/consensus_st"
    "ates/{client_id}/revision/{revision_numb"
    "er}/height/{revision_height}\022\256\001\n\017Consens"
    "usStates\022/.ibc.core.client.v1.QueryConse"
    "nsusStatesRequest\0320.ibc.core.client.v1.Q"
    "ueryConsensusStatesResponse\"8\202\323\344\223\0022\0220/ib"
    "c/core/client/v1/consensus_states/{clien"
    "t_id}\022\310\001\n\025ConsensusStateHeights\0225.ibc.co"
    "re.client.v1.QueryConsensusStateHeightsR"
    "equest\0326.ibc.core.client.v1.QueryConsens"
    "usStateHeightsResponse\"@\202\323\344\223\002:\0228/ibc/cor"
    "e/client/v1/consensus_states/{client_id}"
    "/heights\022\242\001\n\014ClientStatus\022,.ibc.core.cli"
    "ent.v1.QueryClientStatusRequest\032-.ibc.co"
    "re.client.v1.QueryClientStatusResponse\"5"
    "\202\323\344\223\002/\022-/ibc/core/client/v1/client_statu"
    "s/{client_id}\022\217\001\n\014ClientParams\022,.ibc.cor"
    "e.client.v1.QueryClientParamsRequest\032-.i"
    "bc.core.client.v1.QueryClientParamsRespo"
    "nse\"\"\202\323\344\223\002\034\022\032/ibc/core/client/v1/params\022"
    "\264\001\n\023UpgradedClientState\0223.ibc.core.clien"
    "t.v1.QueryUpgradedClientStateRequest\0324.i"
    "bc.core.client.v1.QueryUpgradedClientSta"
    "teResponse\"2\202\323\344\223\002,\022*/ibc/core/client/v1/"
    "upgraded_client_states\022\300\001\n\026UpgradedConse"
    "nsusState\0226.ibc.core.client.v1.QueryUpgr"
    "adedConsensusStateRequest\0327.ibc.core.cli"
    "ent.v1.QueryUpgradedConsensusStateRespon"
    "se\"5\202\323\344\223\002/\022-/ibc/core/client/v1/upgraded"
    "_consensus_statesB\311\001\n\026com.ibc.core.clien"
    "t.v1B\nQueryProtoP\001Z8github.com/cosmos/ib"
    "c-go/v7/modules/core/02-client/types\242\002\003I"
    "CC\252\002\022Ibc.Core.Client.V1\312\002\022Ibc\\Core\\Clien"
    "t\\V1\342\002\036Ibc\\Core\\Client\\V1\\GPBMetadata\352\002\025"
    "Ibc::Core::Client::V1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_ibc_2fcore_2fclient_2fv1_2fquery_2eproto_deps[5] =
    {
        &::descriptor_table_cosmos_2fbase_2fquery_2fv1beta1_2fpagination_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_google_2fapi_2fannotations_2eproto,
        &::descriptor_table_google_2fprotobuf_2fany_2eproto,
        &::descriptor_table_ibc_2fcore_2fclient_2fv1_2fclient_2eproto,
};
static ::absl::once_flag descriptor_table_ibc_2fcore_2fclient_2fv1_2fquery_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_ibc_2fcore_2fclient_2fv1_2fquery_2eproto = {
    false,
    false,
    4149,
    descriptor_table_protodef_ibc_2fcore_2fclient_2fv1_2fquery_2eproto,
    "ibc/core/client/v1/query.proto",
    &descriptor_table_ibc_2fcore_2fclient_2fv1_2fquery_2eproto_once,
    descriptor_table_ibc_2fcore_2fclient_2fv1_2fquery_2eproto_deps,
    5,
    18,
    schemas,
    file_default_instances,
    TableStruct_ibc_2fcore_2fclient_2fv1_2fquery_2eproto::offsets,
    file_level_metadata_ibc_2fcore_2fclient_2fv1_2fquery_2eproto,
    file_level_enum_descriptors_ibc_2fcore_2fclient_2fv1_2fquery_2eproto,
    file_level_service_descriptors_ibc_2fcore_2fclient_2fv1_2fquery_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_ibc_2fcore_2fclient_2fv1_2fquery_2eproto_getter() {
  return &descriptor_table_ibc_2fcore_2fclient_2fv1_2fquery_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_ibc_2fcore_2fclient_2fv1_2fquery_2eproto(&descriptor_table_ibc_2fcore_2fclient_2fv1_2fquery_2eproto);
namespace ibc {
namespace core {
namespace client {
namespace v1 {
// ===================================================================

class QueryClientStateRequest::_Internal {
 public:
};

QueryClientStateRequest::QueryClientStateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.core.client.v1.QueryClientStateRequest)
}
QueryClientStateRequest::QueryClientStateRequest(const QueryClientStateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryClientStateRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.client_id_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.client_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.client_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_client_id().empty()) {
    _this->_impl_.client_id_.Set(from._internal_client_id(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ibc.core.client.v1.QueryClientStateRequest)
}

inline void QueryClientStateRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.client_id_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.client_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.client_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryClientStateRequest::~QueryClientStateRequest() {
  // @@protoc_insertion_point(destructor:ibc.core.client.v1.QueryClientStateRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryClientStateRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.client_id_.Destroy();
}

void QueryClientStateRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryClientStateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.core.client.v1.QueryClientStateRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.client_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryClientStateRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string client_id = 1 [json_name = "clientId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_client_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ibc.core.client.v1.QueryClientStateRequest.client_id"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryClientStateRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.core.client.v1.QueryClientStateRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string client_id = 1 [json_name = "clientId"];
  if (!this->_internal_client_id().empty()) {
    const std::string& _s = this->_internal_client_id();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "ibc.core.client.v1.QueryClientStateRequest.client_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.core.client.v1.QueryClientStateRequest)
  return target;
}

::size_t QueryClientStateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.core.client.v1.QueryClientStateRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string client_id = 1 [json_name = "clientId"];
  if (!this->_internal_client_id().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_client_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryClientStateRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryClientStateRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryClientStateRequest::GetClassData() const { return &_class_data_; }


void QueryClientStateRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryClientStateRequest*>(&to_msg);
  auto& from = static_cast<const QueryClientStateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.core.client.v1.QueryClientStateRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_client_id().empty()) {
    _this->_internal_set_client_id(from._internal_client_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryClientStateRequest::CopyFrom(const QueryClientStateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.core.client.v1.QueryClientStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryClientStateRequest::IsInitialized() const {
  return true;
}

void QueryClientStateRequest::InternalSwap(QueryClientStateRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.client_id_, lhs_arena,
                                       &other->_impl_.client_id_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryClientStateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fcore_2fclient_2fv1_2fquery_2eproto_getter, &descriptor_table_ibc_2fcore_2fclient_2fv1_2fquery_2eproto_once,
      file_level_metadata_ibc_2fcore_2fclient_2fv1_2fquery_2eproto[0]);
}
// ===================================================================

class QueryClientStateResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryClientStateResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryClientStateResponse, _impl_._has_bits_);
  static const ::PROTOBUF_NAMESPACE_ID::Any& client_state(const QueryClientStateResponse* msg);
  static void set_has_client_state(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::ibc::core::client::v1::Height& proof_height(const QueryClientStateResponse* msg);
  static void set_has_proof_height(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::PROTOBUF_NAMESPACE_ID::Any&
QueryClientStateResponse::_Internal::client_state(const QueryClientStateResponse* msg) {
  return *msg->_impl_.client_state_;
}
const ::ibc::core::client::v1::Height&
QueryClientStateResponse::_Internal::proof_height(const QueryClientStateResponse* msg) {
  return *msg->_impl_.proof_height_;
}
void QueryClientStateResponse::clear_client_state() {
  if (_impl_.client_state_ != nullptr) _impl_.client_state_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void QueryClientStateResponse::clear_proof_height() {
  if (_impl_.proof_height_ != nullptr) _impl_.proof_height_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
QueryClientStateResponse::QueryClientStateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.core.client.v1.QueryClientStateResponse)
}
QueryClientStateResponse::QueryClientStateResponse(const QueryClientStateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryClientStateResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.proof_) {}

    , decltype(_impl_.client_state_){nullptr}
    , decltype(_impl_.proof_height_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.proof_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.proof_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_proof().empty()) {
    _this->_impl_.proof_.Set(from._internal_proof(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.client_state_ = new ::PROTOBUF_NAMESPACE_ID::Any(*from._impl_.client_state_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.proof_height_ = new ::ibc::core::client::v1::Height(*from._impl_.proof_height_);
  }
  // @@protoc_insertion_point(copy_constructor:ibc.core.client.v1.QueryClientStateResponse)
}

inline void QueryClientStateResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.proof_) {}

    , decltype(_impl_.client_state_){nullptr}
    , decltype(_impl_.proof_height_){nullptr}
  };
  _impl_.proof_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.proof_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryClientStateResponse::~QueryClientStateResponse() {
  // @@protoc_insertion_point(destructor:ibc.core.client.v1.QueryClientStateResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryClientStateResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.proof_.Destroy();
  if (this != internal_default_instance()) delete _impl_.client_state_;
  if (this != internal_default_instance()) delete _impl_.proof_height_;
}

void QueryClientStateResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryClientStateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.core.client.v1.QueryClientStateResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.proof_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.client_state_ != nullptr);
      _impl_.client_state_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.proof_height_ != nullptr);
      _impl_.proof_height_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryClientStateResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.protobuf.Any client_state = 1 [json_name = "clientState"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_client_state(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // bytes proof = 2 [json_name = "proof"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_proof();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .ibc.core.client.v1.Height proof_height = 3 [json_name = "proofHeight", (.gogoproto.nullable) = false];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_proof_height(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryClientStateResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.core.client.v1.QueryClientStateResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Any client_state = 1 [json_name = "clientState"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::client_state(this),
        _Internal::client_state(this).GetCachedSize(), target, stream);
  }

  // bytes proof = 2 [json_name = "proof"];
  if (!this->_internal_proof().empty()) {
    const std::string& _s = this->_internal_proof();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  // .ibc.core.client.v1.Height proof_height = 3 [json_name = "proofHeight", (.gogoproto.nullable) = false];
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::proof_height(this),
        _Internal::proof_height(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.core.client.v1.QueryClientStateResponse)
  return target;
}

::size_t QueryClientStateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.core.client.v1.QueryClientStateResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes proof = 2 [json_name = "proof"];
  if (!this->_internal_proof().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
                                    this->_internal_proof());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .google.protobuf.Any client_state = 1 [json_name = "clientState"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.client_state_);
    }

    // .ibc.core.client.v1.Height proof_height = 3 [json_name = "proofHeight", (.gogoproto.nullable) = false];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.proof_height_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryClientStateResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryClientStateResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryClientStateResponse::GetClassData() const { return &_class_data_; }


void QueryClientStateResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryClientStateResponse*>(&to_msg);
  auto& from = static_cast<const QueryClientStateResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.core.client.v1.QueryClientStateResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_proof().empty()) {
    _this->_internal_set_proof(from._internal_proof());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_client_state()->::PROTOBUF_NAMESPACE_ID::Any::MergeFrom(
          from._internal_client_state());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_proof_height()->::ibc::core::client::v1::Height::MergeFrom(
          from._internal_proof_height());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryClientStateResponse::CopyFrom(const QueryClientStateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.core.client.v1.QueryClientStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryClientStateResponse::IsInitialized() const {
  return true;
}

void QueryClientStateResponse::InternalSwap(QueryClientStateResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.proof_, lhs_arena,
                                       &other->_impl_.proof_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(QueryClientStateResponse, _impl_.proof_height_)
      + sizeof(QueryClientStateResponse::_impl_.proof_height_)
      - PROTOBUF_FIELD_OFFSET(QueryClientStateResponse, _impl_.client_state_)>(
          reinterpret_cast<char*>(&_impl_.client_state_),
          reinterpret_cast<char*>(&other->_impl_.client_state_));
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryClientStateResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fcore_2fclient_2fv1_2fquery_2eproto_getter, &descriptor_table_ibc_2fcore_2fclient_2fv1_2fquery_2eproto_once,
      file_level_metadata_ibc_2fcore_2fclient_2fv1_2fquery_2eproto[1]);
}
// ===================================================================

class QueryClientStatesRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryClientStatesRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryClientStatesRequest, _impl_._has_bits_);
  static const ::cosmos::base::query::v1beta1::PageRequest& pagination(const QueryClientStatesRequest* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::query::v1beta1::PageRequest&
QueryClientStatesRequest::_Internal::pagination(const QueryClientStatesRequest* msg) {
  return *msg->_impl_.pagination_;
}
void QueryClientStatesRequest::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryClientStatesRequest::QueryClientStatesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.core.client.v1.QueryClientStatesRequest)
}
QueryClientStatesRequest::QueryClientStatesRequest(const QueryClientStatesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryClientStatesRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.pagination_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::cosmos::base::query::v1beta1::PageRequest(*from._impl_.pagination_);
  }
  // @@protoc_insertion_point(copy_constructor:ibc.core.client.v1.QueryClientStatesRequest)
}

inline void QueryClientStatesRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.pagination_){nullptr}
  };
}

QueryClientStatesRequest::~QueryClientStatesRequest() {
  // @@protoc_insertion_point(destructor:ibc.core.client.v1.QueryClientStatesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryClientStatesRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.pagination_;
}

void QueryClientStatesRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryClientStatesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.core.client.v1.QueryClientStatesRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryClientStatesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cosmos.base.query.v1beta1.PageRequest pagination = 1 [json_name = "pagination"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagination(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryClientStatesRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.core.client.v1.QueryClientStatesRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.query.v1beta1.PageRequest pagination = 1 [json_name = "pagination"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.core.client.v1.QueryClientStatesRequest)
  return target;
}

::size_t QueryClientStatesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.core.client.v1.QueryClientStatesRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cosmos.base.query.v1beta1.PageRequest pagination = 1 [json_name = "pagination"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryClientStatesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryClientStatesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryClientStatesRequest::GetClassData() const { return &_class_data_; }


void QueryClientStatesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryClientStatesRequest*>(&to_msg);
  auto& from = static_cast<const QueryClientStatesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.core.client.v1.QueryClientStatesRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::cosmos::base::query::v1beta1::PageRequest::MergeFrom(
        from._internal_pagination());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryClientStatesRequest::CopyFrom(const QueryClientStatesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.core.client.v1.QueryClientStatesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryClientStatesRequest::IsInitialized() const {
  return true;
}

void QueryClientStatesRequest::InternalSwap(QueryClientStatesRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryClientStatesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fcore_2fclient_2fv1_2fquery_2eproto_getter, &descriptor_table_ibc_2fcore_2fclient_2fv1_2fquery_2eproto_once,
      file_level_metadata_ibc_2fcore_2fclient_2fv1_2fquery_2eproto[2]);
}
// ===================================================================

class QueryClientStatesResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryClientStatesResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryClientStatesResponse, _impl_._has_bits_);
  static const ::cosmos::base::query::v1beta1::PageResponse& pagination(const QueryClientStatesResponse* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::query::v1beta1::PageResponse&
QueryClientStatesResponse::_Internal::pagination(const QueryClientStatesResponse* msg) {
  return *msg->_impl_.pagination_;
}
void QueryClientStatesResponse::clear_client_states() {
  _internal_mutable_client_states()->Clear();
}
void QueryClientStatesResponse::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryClientStatesResponse::QueryClientStatesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.core.client.v1.QueryClientStatesResponse)
}
QueryClientStatesResponse::QueryClientStatesResponse(const QueryClientStatesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryClientStatesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.client_states_){from._impl_.client_states_}
    , decltype(_impl_.pagination_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::cosmos::base::query::v1beta1::PageResponse(*from._impl_.pagination_);
  }
  // @@protoc_insertion_point(copy_constructor:ibc.core.client.v1.QueryClientStatesResponse)
}

inline void QueryClientStatesResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.client_states_){arena}
    , decltype(_impl_.pagination_){nullptr}
  };
}

QueryClientStatesResponse::~QueryClientStatesResponse() {
  // @@protoc_insertion_point(destructor:ibc.core.client.v1.QueryClientStatesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryClientStatesResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_client_states()->~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.pagination_;
}

void QueryClientStatesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryClientStatesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.core.client.v1.QueryClientStatesResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_client_states()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryClientStatesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ibc.core.client.v1.IdentifiedClientState client_states = 1 [json_name = "clientStates", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "IdentifiedClientStates"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_client_states(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagination(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryClientStatesResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.core.client.v1.QueryClientStatesResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ibc.core.client.v1.IdentifiedClientState client_states = 1 [json_name = "clientStates", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "IdentifiedClientStates"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_client_states_size()); i < n; i++) {
    const auto& repfield = this->_internal_client_states(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.core.client.v1.QueryClientStatesResponse)
  return target;
}

::size_t QueryClientStatesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.core.client.v1.QueryClientStatesResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ibc.core.client.v1.IdentifiedClientState client_states = 1 [json_name = "clientStates", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "IdentifiedClientStates"];
  total_size += 1UL * this->_internal_client_states_size();
  for (const auto& msg : this->_internal_client_states()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryClientStatesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryClientStatesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryClientStatesResponse::GetClassData() const { return &_class_data_; }


void QueryClientStatesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryClientStatesResponse*>(&to_msg);
  auto& from = static_cast<const QueryClientStatesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.core.client.v1.QueryClientStatesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_client_states()->MergeFrom(from._internal_client_states());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::cosmos::base::query::v1beta1::PageResponse::MergeFrom(
        from._internal_pagination());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryClientStatesResponse::CopyFrom(const QueryClientStatesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.core.client.v1.QueryClientStatesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryClientStatesResponse::IsInitialized() const {
  return true;
}

void QueryClientStatesResponse::InternalSwap(QueryClientStatesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _internal_mutable_client_states()->InternalSwap(other->_internal_mutable_client_states());
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryClientStatesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fcore_2fclient_2fv1_2fquery_2eproto_getter, &descriptor_table_ibc_2fcore_2fclient_2fv1_2fquery_2eproto_once,
      file_level_metadata_ibc_2fcore_2fclient_2fv1_2fquery_2eproto[3]);
}
// ===================================================================

class QueryConsensusStateRequest::_Internal {
 public:
};

QueryConsensusStateRequest::QueryConsensusStateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.core.client.v1.QueryConsensusStateRequest)
}
QueryConsensusStateRequest::QueryConsensusStateRequest(const QueryConsensusStateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryConsensusStateRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.client_id_) {}

    , decltype(_impl_.revision_number_) {}

    , decltype(_impl_.revision_height_) {}

    , decltype(_impl_.latest_height_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.client_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.client_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_client_id().empty()) {
    _this->_impl_.client_id_.Set(from._internal_client_id(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.revision_number_, &from._impl_.revision_number_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.latest_height_) -
    reinterpret_cast<char*>(&_impl_.revision_number_)) + sizeof(_impl_.latest_height_));
  // @@protoc_insertion_point(copy_constructor:ibc.core.client.v1.QueryConsensusStateRequest)
}

inline void QueryConsensusStateRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.client_id_) {}

    , decltype(_impl_.revision_number_) { ::uint64_t{0u} }

    , decltype(_impl_.revision_height_) { ::uint64_t{0u} }

    , decltype(_impl_.latest_height_) { false }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.client_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.client_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryConsensusStateRequest::~QueryConsensusStateRequest() {
  // @@protoc_insertion_point(destructor:ibc.core.client.v1.QueryConsensusStateRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryConsensusStateRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.client_id_.Destroy();
}

void QueryConsensusStateRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryConsensusStateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.core.client.v1.QueryConsensusStateRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.client_id_.ClearToEmpty();
  ::memset(&_impl_.revision_number_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.latest_height_) -
      reinterpret_cast<char*>(&_impl_.revision_number_)) + sizeof(_impl_.latest_height_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryConsensusStateRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string client_id = 1 [json_name = "clientId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_client_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ibc.core.client.v1.QueryConsensusStateRequest.client_id"));
        } else {
          goto handle_unusual;
        }
        continue;
      // uint64 revision_number = 2 [json_name = "revisionNumber"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          _impl_.revision_number_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // uint64 revision_height = 3 [json_name = "revisionHeight"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 24)) {
          _impl_.revision_height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // bool latest_height = 4 [json_name = "latestHeight"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 32)) {
          _impl_.latest_height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryConsensusStateRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.core.client.v1.QueryConsensusStateRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string client_id = 1 [json_name = "clientId"];
  if (!this->_internal_client_id().empty()) {
    const std::string& _s = this->_internal_client_id();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "ibc.core.client.v1.QueryConsensusStateRequest.client_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // uint64 revision_number = 2 [json_name = "revisionNumber"];
  if (this->_internal_revision_number() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_revision_number(), target);
  }

  // uint64 revision_height = 3 [json_name = "revisionHeight"];
  if (this->_internal_revision_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_revision_height(), target);
  }

  // bool latest_height = 4 [json_name = "latestHeight"];
  if (this->_internal_latest_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_latest_height(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.core.client.v1.QueryConsensusStateRequest)
  return target;
}

::size_t QueryConsensusStateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.core.client.v1.QueryConsensusStateRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string client_id = 1 [json_name = "clientId"];
  if (!this->_internal_client_id().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_client_id());
  }

  // uint64 revision_number = 2 [json_name = "revisionNumber"];
  if (this->_internal_revision_number() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_revision_number());
  }

  // uint64 revision_height = 3 [json_name = "revisionHeight"];
  if (this->_internal_revision_height() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_revision_height());
  }

  // bool latest_height = 4 [json_name = "latestHeight"];
  if (this->_internal_latest_height() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryConsensusStateRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryConsensusStateRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryConsensusStateRequest::GetClassData() const { return &_class_data_; }


void QueryConsensusStateRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryConsensusStateRequest*>(&to_msg);
  auto& from = static_cast<const QueryConsensusStateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.core.client.v1.QueryConsensusStateRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_client_id().empty()) {
    _this->_internal_set_client_id(from._internal_client_id());
  }
  if (from._internal_revision_number() != 0) {
    _this->_internal_set_revision_number(from._internal_revision_number());
  }
  if (from._internal_revision_height() != 0) {
    _this->_internal_set_revision_height(from._internal_revision_height());
  }
  if (from._internal_latest_height() != 0) {
    _this->_internal_set_latest_height(from._internal_latest_height());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryConsensusStateRequest::CopyFrom(const QueryConsensusStateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.core.client.v1.QueryConsensusStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryConsensusStateRequest::IsInitialized() const {
  return true;
}

void QueryConsensusStateRequest::InternalSwap(QueryConsensusStateRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.client_id_, lhs_arena,
                                       &other->_impl_.client_id_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(QueryConsensusStateRequest, _impl_.latest_height_)
      + sizeof(QueryConsensusStateRequest::_impl_.latest_height_)
      - PROTOBUF_FIELD_OFFSET(QueryConsensusStateRequest, _impl_.revision_number_)>(
          reinterpret_cast<char*>(&_impl_.revision_number_),
          reinterpret_cast<char*>(&other->_impl_.revision_number_));
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryConsensusStateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fcore_2fclient_2fv1_2fquery_2eproto_getter, &descriptor_table_ibc_2fcore_2fclient_2fv1_2fquery_2eproto_once,
      file_level_metadata_ibc_2fcore_2fclient_2fv1_2fquery_2eproto[4]);
}
// ===================================================================

class QueryConsensusStateResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryConsensusStateResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryConsensusStateResponse, _impl_._has_bits_);
  static const ::PROTOBUF_NAMESPACE_ID::Any& consensus_state(const QueryConsensusStateResponse* msg);
  static void set_has_consensus_state(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::ibc::core::client::v1::Height& proof_height(const QueryConsensusStateResponse* msg);
  static void set_has_proof_height(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::PROTOBUF_NAMESPACE_ID::Any&
QueryConsensusStateResponse::_Internal::consensus_state(const QueryConsensusStateResponse* msg) {
  return *msg->_impl_.consensus_state_;
}
const ::ibc::core::client::v1::Height&
QueryConsensusStateResponse::_Internal::proof_height(const QueryConsensusStateResponse* msg) {
  return *msg->_impl_.proof_height_;
}
void QueryConsensusStateResponse::clear_consensus_state() {
  if (_impl_.consensus_state_ != nullptr) _impl_.consensus_state_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void QueryConsensusStateResponse::clear_proof_height() {
  if (_impl_.proof_height_ != nullptr) _impl_.proof_height_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
QueryConsensusStateResponse::QueryConsensusStateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.core.client.v1.QueryConsensusStateResponse)
}
QueryConsensusStateResponse::QueryConsensusStateResponse(const QueryConsensusStateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryConsensusStateResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.proof_) {}

    , decltype(_impl_.consensus_state_){nullptr}
    , decltype(_impl_.proof_height_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.proof_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.proof_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_proof().empty()) {
    _this->_impl_.proof_.Set(from._internal_proof(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.consensus_state_ = new ::PROTOBUF_NAMESPACE_ID::Any(*from._impl_.consensus_state_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.proof_height_ = new ::ibc::core::client::v1::Height(*from._impl_.proof_height_);
  }
  // @@protoc_insertion_point(copy_constructor:ibc.core.client.v1.QueryConsensusStateResponse)
}

inline void QueryConsensusStateResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.proof_) {}

    , decltype(_impl_.consensus_state_){nullptr}
    , decltype(_impl_.proof_height_){nullptr}
  };
  _impl_.proof_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.proof_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryConsensusStateResponse::~QueryConsensusStateResponse() {
  // @@protoc_insertion_point(destructor:ibc.core.client.v1.QueryConsensusStateResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryConsensusStateResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.proof_.Destroy();
  if (this != internal_default_instance()) delete _impl_.consensus_state_;
  if (this != internal_default_instance()) delete _impl_.proof_height_;
}

void QueryConsensusStateResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryConsensusStateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.core.client.v1.QueryConsensusStateResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.proof_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.consensus_state_ != nullptr);
      _impl_.consensus_state_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.proof_height_ != nullptr);
      _impl_.proof_height_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryConsensusStateResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.protobuf.Any consensus_state = 1 [json_name = "consensusState"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_consensus_state(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // bytes proof = 2 [json_name = "proof"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_proof();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .ibc.core.client.v1.Height proof_height = 3 [json_name = "proofHeight", (.gogoproto.nullable) = false];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_proof_height(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryConsensusStateResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.core.client.v1.QueryConsensusStateResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Any consensus_state = 1 [json_name = "consensusState"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::consensus_state(this),
        _Internal::consensus_state(this).GetCachedSize(), target, stream);
  }

  // bytes proof = 2 [json_name = "proof"];
  if (!this->_internal_proof().empty()) {
    const std::string& _s = this->_internal_proof();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  // .ibc.core.client.v1.Height proof_height = 3 [json_name = "proofHeight", (.gogoproto.nullable) = false];
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::proof_height(this),
        _Internal::proof_height(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.core.client.v1.QueryConsensusStateResponse)
  return target;
}

::size_t QueryConsensusStateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.core.client.v1.QueryConsensusStateResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes proof = 2 [json_name = "proof"];
  if (!this->_internal_proof().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
                                    this->_internal_proof());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .google.protobuf.Any consensus_state = 1 [json_name = "consensusState"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.consensus_state_);
    }

    // .ibc.core.client.v1.Height proof_height = 3 [json_name = "proofHeight", (.gogoproto.nullable) = false];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.proof_height_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryConsensusStateResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryConsensusStateResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryConsensusStateResponse::GetClassData() const { return &_class_data_; }


void QueryConsensusStateResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryConsensusStateResponse*>(&to_msg);
  auto& from = static_cast<const QueryConsensusStateResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.core.client.v1.QueryConsensusStateResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_proof().empty()) {
    _this->_internal_set_proof(from._internal_proof());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_consensus_state()->::PROTOBUF_NAMESPACE_ID::Any::MergeFrom(
          from._internal_consensus_state());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_proof_height()->::ibc::core::client::v1::Height::MergeFrom(
          from._internal_proof_height());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryConsensusStateResponse::CopyFrom(const QueryConsensusStateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.core.client.v1.QueryConsensusStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryConsensusStateResponse::IsInitialized() const {
  return true;
}

void QueryConsensusStateResponse::InternalSwap(QueryConsensusStateResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.proof_, lhs_arena,
                                       &other->_impl_.proof_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(QueryConsensusStateResponse, _impl_.proof_height_)
      + sizeof(QueryConsensusStateResponse::_impl_.proof_height_)
      - PROTOBUF_FIELD_OFFSET(QueryConsensusStateResponse, _impl_.consensus_state_)>(
          reinterpret_cast<char*>(&_impl_.consensus_state_),
          reinterpret_cast<char*>(&other->_impl_.consensus_state_));
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryConsensusStateResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fcore_2fclient_2fv1_2fquery_2eproto_getter, &descriptor_table_ibc_2fcore_2fclient_2fv1_2fquery_2eproto_once,
      file_level_metadata_ibc_2fcore_2fclient_2fv1_2fquery_2eproto[5]);
}
// ===================================================================

class QueryConsensusStatesRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryConsensusStatesRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryConsensusStatesRequest, _impl_._has_bits_);
  static const ::cosmos::base::query::v1beta1::PageRequest& pagination(const QueryConsensusStatesRequest* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::query::v1beta1::PageRequest&
QueryConsensusStatesRequest::_Internal::pagination(const QueryConsensusStatesRequest* msg) {
  return *msg->_impl_.pagination_;
}
void QueryConsensusStatesRequest::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryConsensusStatesRequest::QueryConsensusStatesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.core.client.v1.QueryConsensusStatesRequest)
}
QueryConsensusStatesRequest::QueryConsensusStatesRequest(const QueryConsensusStatesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryConsensusStatesRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.client_id_) {}

    , decltype(_impl_.pagination_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.client_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.client_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_client_id().empty()) {
    _this->_impl_.client_id_.Set(from._internal_client_id(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::cosmos::base::query::v1beta1::PageRequest(*from._impl_.pagination_);
  }
  // @@protoc_insertion_point(copy_constructor:ibc.core.client.v1.QueryConsensusStatesRequest)
}

inline void QueryConsensusStatesRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.client_id_) {}

    , decltype(_impl_.pagination_){nullptr}
  };
  _impl_.client_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.client_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryConsensusStatesRequest::~QueryConsensusStatesRequest() {
  // @@protoc_insertion_point(destructor:ibc.core.client.v1.QueryConsensusStatesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryConsensusStatesRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.client_id_.Destroy();
  if (this != internal_default_instance()) delete _impl_.pagination_;
}

void QueryConsensusStatesRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryConsensusStatesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.core.client.v1.QueryConsensusStatesRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.client_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryConsensusStatesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string client_id = 1 [json_name = "clientId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_client_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ibc.core.client.v1.QueryConsensusStatesRequest.client_id"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagination(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryConsensusStatesRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.core.client.v1.QueryConsensusStatesRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string client_id = 1 [json_name = "clientId"];
  if (!this->_internal_client_id().empty()) {
    const std::string& _s = this->_internal_client_id();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "ibc.core.client.v1.QueryConsensusStatesRequest.client_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.core.client.v1.QueryConsensusStatesRequest)
  return target;
}

::size_t QueryConsensusStatesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.core.client.v1.QueryConsensusStatesRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string client_id = 1 [json_name = "clientId"];
  if (!this->_internal_client_id().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_client_id());
  }

  // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryConsensusStatesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryConsensusStatesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryConsensusStatesRequest::GetClassData() const { return &_class_data_; }


void QueryConsensusStatesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryConsensusStatesRequest*>(&to_msg);
  auto& from = static_cast<const QueryConsensusStatesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.core.client.v1.QueryConsensusStatesRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_client_id().empty()) {
    _this->_internal_set_client_id(from._internal_client_id());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::cosmos::base::query::v1beta1::PageRequest::MergeFrom(
        from._internal_pagination());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryConsensusStatesRequest::CopyFrom(const QueryConsensusStatesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.core.client.v1.QueryConsensusStatesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryConsensusStatesRequest::IsInitialized() const {
  return true;
}

void QueryConsensusStatesRequest::InternalSwap(QueryConsensusStatesRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.client_id_, lhs_arena,
                                       &other->_impl_.client_id_, rhs_arena);
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryConsensusStatesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fcore_2fclient_2fv1_2fquery_2eproto_getter, &descriptor_table_ibc_2fcore_2fclient_2fv1_2fquery_2eproto_once,
      file_level_metadata_ibc_2fcore_2fclient_2fv1_2fquery_2eproto[6]);
}
// ===================================================================

class QueryConsensusStatesResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryConsensusStatesResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryConsensusStatesResponse, _impl_._has_bits_);
  static const ::cosmos::base::query::v1beta1::PageResponse& pagination(const QueryConsensusStatesResponse* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::query::v1beta1::PageResponse&
QueryConsensusStatesResponse::_Internal::pagination(const QueryConsensusStatesResponse* msg) {
  return *msg->_impl_.pagination_;
}
void QueryConsensusStatesResponse::clear_consensus_states() {
  _internal_mutable_consensus_states()->Clear();
}
void QueryConsensusStatesResponse::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryConsensusStatesResponse::QueryConsensusStatesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.core.client.v1.QueryConsensusStatesResponse)
}
QueryConsensusStatesResponse::QueryConsensusStatesResponse(const QueryConsensusStatesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryConsensusStatesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.consensus_states_){from._impl_.consensus_states_}
    , decltype(_impl_.pagination_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::cosmos::base::query::v1beta1::PageResponse(*from._impl_.pagination_);
  }
  // @@protoc_insertion_point(copy_constructor:ibc.core.client.v1.QueryConsensusStatesResponse)
}

inline void QueryConsensusStatesResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.consensus_states_){arena}
    , decltype(_impl_.pagination_){nullptr}
  };
}

QueryConsensusStatesResponse::~QueryConsensusStatesResponse() {
  // @@protoc_insertion_point(destructor:ibc.core.client.v1.QueryConsensusStatesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryConsensusStatesResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_consensus_states()->~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.pagination_;
}

void QueryConsensusStatesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryConsensusStatesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.core.client.v1.QueryConsensusStatesResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_consensus_states()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryConsensusStatesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ibc.core.client.v1.ConsensusStateWithHeight consensus_states = 1 [json_name = "consensusStates", (.gogoproto.nullable) = false];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_consensus_states(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagination(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryConsensusStatesResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.core.client.v1.QueryConsensusStatesResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ibc.core.client.v1.ConsensusStateWithHeight consensus_states = 1 [json_name = "consensusStates", (.gogoproto.nullable) = false];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_consensus_states_size()); i < n; i++) {
    const auto& repfield = this->_internal_consensus_states(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.core.client.v1.QueryConsensusStatesResponse)
  return target;
}

::size_t QueryConsensusStatesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.core.client.v1.QueryConsensusStatesResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ibc.core.client.v1.ConsensusStateWithHeight consensus_states = 1 [json_name = "consensusStates", (.gogoproto.nullable) = false];
  total_size += 1UL * this->_internal_consensus_states_size();
  for (const auto& msg : this->_internal_consensus_states()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryConsensusStatesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryConsensusStatesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryConsensusStatesResponse::GetClassData() const { return &_class_data_; }


void QueryConsensusStatesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryConsensusStatesResponse*>(&to_msg);
  auto& from = static_cast<const QueryConsensusStatesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.core.client.v1.QueryConsensusStatesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_consensus_states()->MergeFrom(from._internal_consensus_states());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::cosmos::base::query::v1beta1::PageResponse::MergeFrom(
        from._internal_pagination());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryConsensusStatesResponse::CopyFrom(const QueryConsensusStatesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.core.client.v1.QueryConsensusStatesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryConsensusStatesResponse::IsInitialized() const {
  return true;
}

void QueryConsensusStatesResponse::InternalSwap(QueryConsensusStatesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _internal_mutable_consensus_states()->InternalSwap(other->_internal_mutable_consensus_states());
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryConsensusStatesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fcore_2fclient_2fv1_2fquery_2eproto_getter, &descriptor_table_ibc_2fcore_2fclient_2fv1_2fquery_2eproto_once,
      file_level_metadata_ibc_2fcore_2fclient_2fv1_2fquery_2eproto[7]);
}
// ===================================================================

class QueryConsensusStateHeightsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryConsensusStateHeightsRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryConsensusStateHeightsRequest, _impl_._has_bits_);
  static const ::cosmos::base::query::v1beta1::PageRequest& pagination(const QueryConsensusStateHeightsRequest* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::query::v1beta1::PageRequest&
QueryConsensusStateHeightsRequest::_Internal::pagination(const QueryConsensusStateHeightsRequest* msg) {
  return *msg->_impl_.pagination_;
}
void QueryConsensusStateHeightsRequest::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryConsensusStateHeightsRequest::QueryConsensusStateHeightsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.core.client.v1.QueryConsensusStateHeightsRequest)
}
QueryConsensusStateHeightsRequest::QueryConsensusStateHeightsRequest(const QueryConsensusStateHeightsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryConsensusStateHeightsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.client_id_) {}

    , decltype(_impl_.pagination_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.client_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.client_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_client_id().empty()) {
    _this->_impl_.client_id_.Set(from._internal_client_id(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::cosmos::base::query::v1beta1::PageRequest(*from._impl_.pagination_);
  }
  // @@protoc_insertion_point(copy_constructor:ibc.core.client.v1.QueryConsensusStateHeightsRequest)
}

inline void QueryConsensusStateHeightsRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.client_id_) {}

    , decltype(_impl_.pagination_){nullptr}
  };
  _impl_.client_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.client_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryConsensusStateHeightsRequest::~QueryConsensusStateHeightsRequest() {
  // @@protoc_insertion_point(destructor:ibc.core.client.v1.QueryConsensusStateHeightsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryConsensusStateHeightsRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.client_id_.Destroy();
  if (this != internal_default_instance()) delete _impl_.pagination_;
}

void QueryConsensusStateHeightsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryConsensusStateHeightsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.core.client.v1.QueryConsensusStateHeightsRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.client_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryConsensusStateHeightsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string client_id = 1 [json_name = "clientId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_client_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ibc.core.client.v1.QueryConsensusStateHeightsRequest.client_id"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagination(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryConsensusStateHeightsRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.core.client.v1.QueryConsensusStateHeightsRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string client_id = 1 [json_name = "clientId"];
  if (!this->_internal_client_id().empty()) {
    const std::string& _s = this->_internal_client_id();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "ibc.core.client.v1.QueryConsensusStateHeightsRequest.client_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.core.client.v1.QueryConsensusStateHeightsRequest)
  return target;
}

::size_t QueryConsensusStateHeightsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.core.client.v1.QueryConsensusStateHeightsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string client_id = 1 [json_name = "clientId"];
  if (!this->_internal_client_id().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_client_id());
  }

  // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryConsensusStateHeightsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryConsensusStateHeightsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryConsensusStateHeightsRequest::GetClassData() const { return &_class_data_; }


void QueryConsensusStateHeightsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryConsensusStateHeightsRequest*>(&to_msg);
  auto& from = static_cast<const QueryConsensusStateHeightsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.core.client.v1.QueryConsensusStateHeightsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_client_id().empty()) {
    _this->_internal_set_client_id(from._internal_client_id());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::cosmos::base::query::v1beta1::PageRequest::MergeFrom(
        from._internal_pagination());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryConsensusStateHeightsRequest::CopyFrom(const QueryConsensusStateHeightsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.core.client.v1.QueryConsensusStateHeightsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryConsensusStateHeightsRequest::IsInitialized() const {
  return true;
}

void QueryConsensusStateHeightsRequest::InternalSwap(QueryConsensusStateHeightsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.client_id_, lhs_arena,
                                       &other->_impl_.client_id_, rhs_arena);
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryConsensusStateHeightsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fcore_2fclient_2fv1_2fquery_2eproto_getter, &descriptor_table_ibc_2fcore_2fclient_2fv1_2fquery_2eproto_once,
      file_level_metadata_ibc_2fcore_2fclient_2fv1_2fquery_2eproto[8]);
}
// ===================================================================

class QueryConsensusStateHeightsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryConsensusStateHeightsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryConsensusStateHeightsResponse, _impl_._has_bits_);
  static const ::cosmos::base::query::v1beta1::PageResponse& pagination(const QueryConsensusStateHeightsResponse* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::query::v1beta1::PageResponse&
QueryConsensusStateHeightsResponse::_Internal::pagination(const QueryConsensusStateHeightsResponse* msg) {
  return *msg->_impl_.pagination_;
}
void QueryConsensusStateHeightsResponse::clear_consensus_state_heights() {
  _internal_mutable_consensus_state_heights()->Clear();
}
void QueryConsensusStateHeightsResponse::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryConsensusStateHeightsResponse::QueryConsensusStateHeightsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.core.client.v1.QueryConsensusStateHeightsResponse)
}
QueryConsensusStateHeightsResponse::QueryConsensusStateHeightsResponse(const QueryConsensusStateHeightsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryConsensusStateHeightsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.consensus_state_heights_){from._impl_.consensus_state_heights_}
    , decltype(_impl_.pagination_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::cosmos::base::query::v1beta1::PageResponse(*from._impl_.pagination_);
  }
  // @@protoc_insertion_point(copy_constructor:ibc.core.client.v1.QueryConsensusStateHeightsResponse)
}

inline void QueryConsensusStateHeightsResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.consensus_state_heights_){arena}
    , decltype(_impl_.pagination_){nullptr}
  };
}

QueryConsensusStateHeightsResponse::~QueryConsensusStateHeightsResponse() {
  // @@protoc_insertion_point(destructor:ibc.core.client.v1.QueryConsensusStateHeightsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryConsensusStateHeightsResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_consensus_state_heights()->~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.pagination_;
}

void QueryConsensusStateHeightsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryConsensusStateHeightsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.core.client.v1.QueryConsensusStateHeightsResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_consensus_state_heights()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryConsensusStateHeightsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ibc.core.client.v1.Height consensus_state_heights = 1 [json_name = "consensusStateHeights", (.gogoproto.nullable) = false];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_consensus_state_heights(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagination(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryConsensusStateHeightsResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.core.client.v1.QueryConsensusStateHeightsResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ibc.core.client.v1.Height consensus_state_heights = 1 [json_name = "consensusStateHeights", (.gogoproto.nullable) = false];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_consensus_state_heights_size()); i < n; i++) {
    const auto& repfield = this->_internal_consensus_state_heights(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.core.client.v1.QueryConsensusStateHeightsResponse)
  return target;
}

::size_t QueryConsensusStateHeightsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.core.client.v1.QueryConsensusStateHeightsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ibc.core.client.v1.Height consensus_state_heights = 1 [json_name = "consensusStateHeights", (.gogoproto.nullable) = false];
  total_size += 1UL * this->_internal_consensus_state_heights_size();
  for (const auto& msg : this->_internal_consensus_state_heights()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryConsensusStateHeightsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryConsensusStateHeightsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryConsensusStateHeightsResponse::GetClassData() const { return &_class_data_; }


void QueryConsensusStateHeightsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryConsensusStateHeightsResponse*>(&to_msg);
  auto& from = static_cast<const QueryConsensusStateHeightsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.core.client.v1.QueryConsensusStateHeightsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_consensus_state_heights()->MergeFrom(from._internal_consensus_state_heights());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::cosmos::base::query::v1beta1::PageResponse::MergeFrom(
        from._internal_pagination());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryConsensusStateHeightsResponse::CopyFrom(const QueryConsensusStateHeightsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.core.client.v1.QueryConsensusStateHeightsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryConsensusStateHeightsResponse::IsInitialized() const {
  return true;
}

void QueryConsensusStateHeightsResponse::InternalSwap(QueryConsensusStateHeightsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _internal_mutable_consensus_state_heights()->InternalSwap(other->_internal_mutable_consensus_state_heights());
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryConsensusStateHeightsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fcore_2fclient_2fv1_2fquery_2eproto_getter, &descriptor_table_ibc_2fcore_2fclient_2fv1_2fquery_2eproto_once,
      file_level_metadata_ibc_2fcore_2fclient_2fv1_2fquery_2eproto[9]);
}
// ===================================================================

class QueryClientStatusRequest::_Internal {
 public:
};

QueryClientStatusRequest::QueryClientStatusRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.core.client.v1.QueryClientStatusRequest)
}
QueryClientStatusRequest::QueryClientStatusRequest(const QueryClientStatusRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryClientStatusRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.client_id_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.client_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.client_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_client_id().empty()) {
    _this->_impl_.client_id_.Set(from._internal_client_id(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ibc.core.client.v1.QueryClientStatusRequest)
}

inline void QueryClientStatusRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.client_id_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.client_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.client_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryClientStatusRequest::~QueryClientStatusRequest() {
  // @@protoc_insertion_point(destructor:ibc.core.client.v1.QueryClientStatusRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryClientStatusRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.client_id_.Destroy();
}

void QueryClientStatusRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryClientStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.core.client.v1.QueryClientStatusRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.client_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryClientStatusRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string client_id = 1 [json_name = "clientId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_client_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ibc.core.client.v1.QueryClientStatusRequest.client_id"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryClientStatusRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.core.client.v1.QueryClientStatusRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string client_id = 1 [json_name = "clientId"];
  if (!this->_internal_client_id().empty()) {
    const std::string& _s = this->_internal_client_id();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "ibc.core.client.v1.QueryClientStatusRequest.client_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.core.client.v1.QueryClientStatusRequest)
  return target;
}

::size_t QueryClientStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.core.client.v1.QueryClientStatusRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string client_id = 1 [json_name = "clientId"];
  if (!this->_internal_client_id().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_client_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryClientStatusRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryClientStatusRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryClientStatusRequest::GetClassData() const { return &_class_data_; }


void QueryClientStatusRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryClientStatusRequest*>(&to_msg);
  auto& from = static_cast<const QueryClientStatusRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.core.client.v1.QueryClientStatusRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_client_id().empty()) {
    _this->_internal_set_client_id(from._internal_client_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryClientStatusRequest::CopyFrom(const QueryClientStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.core.client.v1.QueryClientStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryClientStatusRequest::IsInitialized() const {
  return true;
}

void QueryClientStatusRequest::InternalSwap(QueryClientStatusRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.client_id_, lhs_arena,
                                       &other->_impl_.client_id_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryClientStatusRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fcore_2fclient_2fv1_2fquery_2eproto_getter, &descriptor_table_ibc_2fcore_2fclient_2fv1_2fquery_2eproto_once,
      file_level_metadata_ibc_2fcore_2fclient_2fv1_2fquery_2eproto[10]);
}
// ===================================================================

class QueryClientStatusResponse::_Internal {
 public:
};

QueryClientStatusResponse::QueryClientStatusResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.core.client.v1.QueryClientStatusResponse)
}
QueryClientStatusResponse::QueryClientStatusResponse(const QueryClientStatusResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryClientStatusResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.status_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.status_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.status_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_status().empty()) {
    _this->_impl_.status_.Set(from._internal_status(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ibc.core.client.v1.QueryClientStatusResponse)
}

inline void QueryClientStatusResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.status_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.status_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.status_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryClientStatusResponse::~QueryClientStatusResponse() {
  // @@protoc_insertion_point(destructor:ibc.core.client.v1.QueryClientStatusResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryClientStatusResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.status_.Destroy();
}

void QueryClientStatusResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryClientStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.core.client.v1.QueryClientStatusResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.status_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryClientStatusResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string status = 1 [json_name = "status"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_status();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ibc.core.client.v1.QueryClientStatusResponse.status"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryClientStatusResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.core.client.v1.QueryClientStatusResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string status = 1 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    const std::string& _s = this->_internal_status();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "ibc.core.client.v1.QueryClientStatusResponse.status");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.core.client.v1.QueryClientStatusResponse)
  return target;
}

::size_t QueryClientStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.core.client.v1.QueryClientStatusResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 1 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryClientStatusResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryClientStatusResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryClientStatusResponse::GetClassData() const { return &_class_data_; }


void QueryClientStatusResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryClientStatusResponse*>(&to_msg);
  auto& from = static_cast<const QueryClientStatusResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.core.client.v1.QueryClientStatusResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryClientStatusResponse::CopyFrom(const QueryClientStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.core.client.v1.QueryClientStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryClientStatusResponse::IsInitialized() const {
  return true;
}

void QueryClientStatusResponse::InternalSwap(QueryClientStatusResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.status_, lhs_arena,
                                       &other->_impl_.status_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryClientStatusResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fcore_2fclient_2fv1_2fquery_2eproto_getter, &descriptor_table_ibc_2fcore_2fclient_2fv1_2fquery_2eproto_once,
      file_level_metadata_ibc_2fcore_2fclient_2fv1_2fquery_2eproto[11]);
}
// ===================================================================

class QueryClientParamsRequest::_Internal {
 public:
};

QueryClientParamsRequest::QueryClientParamsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:ibc.core.client.v1.QueryClientParamsRequest)
}
QueryClientParamsRequest::QueryClientParamsRequest(const QueryClientParamsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  QueryClientParamsRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ibc.core.client.v1.QueryClientParamsRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryClientParamsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryClientParamsRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata QueryClientParamsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fcore_2fclient_2fv1_2fquery_2eproto_getter, &descriptor_table_ibc_2fcore_2fclient_2fv1_2fquery_2eproto_once,
      file_level_metadata_ibc_2fcore_2fclient_2fv1_2fquery_2eproto[12]);
}
// ===================================================================

class QueryClientParamsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryClientParamsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryClientParamsResponse, _impl_._has_bits_);
  static const ::ibc::core::client::v1::Params& params(const QueryClientParamsResponse* msg);
  static void set_has_params(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ibc::core::client::v1::Params&
QueryClientParamsResponse::_Internal::params(const QueryClientParamsResponse* msg) {
  return *msg->_impl_.params_;
}
void QueryClientParamsResponse::clear_params() {
  if (_impl_.params_ != nullptr) _impl_.params_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryClientParamsResponse::QueryClientParamsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.core.client.v1.QueryClientParamsResponse)
}
QueryClientParamsResponse::QueryClientParamsResponse(const QueryClientParamsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryClientParamsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.params_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.params_ = new ::ibc::core::client::v1::Params(*from._impl_.params_);
  }
  // @@protoc_insertion_point(copy_constructor:ibc.core.client.v1.QueryClientParamsResponse)
}

inline void QueryClientParamsResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.params_){nullptr}
  };
}

QueryClientParamsResponse::~QueryClientParamsResponse() {
  // @@protoc_insertion_point(destructor:ibc.core.client.v1.QueryClientParamsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryClientParamsResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.params_;
}

void QueryClientParamsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryClientParamsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.core.client.v1.QueryClientParamsResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.params_ != nullptr);
    _impl_.params_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryClientParamsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ibc.core.client.v1.Params params = 1 [json_name = "params"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryClientParamsResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.core.client.v1.QueryClientParamsResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .ibc.core.client.v1.Params params = 1 [json_name = "params"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.core.client.v1.QueryClientParamsResponse)
  return target;
}

::size_t QueryClientParamsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.core.client.v1.QueryClientParamsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ibc.core.client.v1.Params params = 1 [json_name = "params"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryClientParamsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryClientParamsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryClientParamsResponse::GetClassData() const { return &_class_data_; }


void QueryClientParamsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryClientParamsResponse*>(&to_msg);
  auto& from = static_cast<const QueryClientParamsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.core.client.v1.QueryClientParamsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_params()->::ibc::core::client::v1::Params::MergeFrom(
        from._internal_params());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryClientParamsResponse::CopyFrom(const QueryClientParamsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.core.client.v1.QueryClientParamsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryClientParamsResponse::IsInitialized() const {
  return true;
}

void QueryClientParamsResponse::InternalSwap(QueryClientParamsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.params_, other->_impl_.params_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryClientParamsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fcore_2fclient_2fv1_2fquery_2eproto_getter, &descriptor_table_ibc_2fcore_2fclient_2fv1_2fquery_2eproto_once,
      file_level_metadata_ibc_2fcore_2fclient_2fv1_2fquery_2eproto[13]);
}
// ===================================================================

class QueryUpgradedClientStateRequest::_Internal {
 public:
};

QueryUpgradedClientStateRequest::QueryUpgradedClientStateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:ibc.core.client.v1.QueryUpgradedClientStateRequest)
}
QueryUpgradedClientStateRequest::QueryUpgradedClientStateRequest(const QueryUpgradedClientStateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  QueryUpgradedClientStateRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ibc.core.client.v1.QueryUpgradedClientStateRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryUpgradedClientStateRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryUpgradedClientStateRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata QueryUpgradedClientStateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fcore_2fclient_2fv1_2fquery_2eproto_getter, &descriptor_table_ibc_2fcore_2fclient_2fv1_2fquery_2eproto_once,
      file_level_metadata_ibc_2fcore_2fclient_2fv1_2fquery_2eproto[14]);
}
// ===================================================================

class QueryUpgradedClientStateResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryUpgradedClientStateResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryUpgradedClientStateResponse, _impl_._has_bits_);
  static const ::PROTOBUF_NAMESPACE_ID::Any& upgraded_client_state(const QueryUpgradedClientStateResponse* msg);
  static void set_has_upgraded_client_state(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::PROTOBUF_NAMESPACE_ID::Any&
QueryUpgradedClientStateResponse::_Internal::upgraded_client_state(const QueryUpgradedClientStateResponse* msg) {
  return *msg->_impl_.upgraded_client_state_;
}
void QueryUpgradedClientStateResponse::clear_upgraded_client_state() {
  if (_impl_.upgraded_client_state_ != nullptr) _impl_.upgraded_client_state_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryUpgradedClientStateResponse::QueryUpgradedClientStateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.core.client.v1.QueryUpgradedClientStateResponse)
}
QueryUpgradedClientStateResponse::QueryUpgradedClientStateResponse(const QueryUpgradedClientStateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryUpgradedClientStateResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.upgraded_client_state_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.upgraded_client_state_ = new ::PROTOBUF_NAMESPACE_ID::Any(*from._impl_.upgraded_client_state_);
  }
  // @@protoc_insertion_point(copy_constructor:ibc.core.client.v1.QueryUpgradedClientStateResponse)
}

inline void QueryUpgradedClientStateResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.upgraded_client_state_){nullptr}
  };
}

QueryUpgradedClientStateResponse::~QueryUpgradedClientStateResponse() {
  // @@protoc_insertion_point(destructor:ibc.core.client.v1.QueryUpgradedClientStateResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryUpgradedClientStateResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.upgraded_client_state_;
}

void QueryUpgradedClientStateResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryUpgradedClientStateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.core.client.v1.QueryUpgradedClientStateResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.upgraded_client_state_ != nullptr);
    _impl_.upgraded_client_state_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryUpgradedClientStateResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.protobuf.Any upgraded_client_state = 1 [json_name = "upgradedClientState"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_upgraded_client_state(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryUpgradedClientStateResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.core.client.v1.QueryUpgradedClientStateResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Any upgraded_client_state = 1 [json_name = "upgradedClientState"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::upgraded_client_state(this),
        _Internal::upgraded_client_state(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.core.client.v1.QueryUpgradedClientStateResponse)
  return target;
}

::size_t QueryUpgradedClientStateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.core.client.v1.QueryUpgradedClientStateResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Any upgraded_client_state = 1 [json_name = "upgradedClientState"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.upgraded_client_state_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryUpgradedClientStateResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryUpgradedClientStateResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryUpgradedClientStateResponse::GetClassData() const { return &_class_data_; }


void QueryUpgradedClientStateResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryUpgradedClientStateResponse*>(&to_msg);
  auto& from = static_cast<const QueryUpgradedClientStateResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.core.client.v1.QueryUpgradedClientStateResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_upgraded_client_state()->::PROTOBUF_NAMESPACE_ID::Any::MergeFrom(
        from._internal_upgraded_client_state());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryUpgradedClientStateResponse::CopyFrom(const QueryUpgradedClientStateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.core.client.v1.QueryUpgradedClientStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryUpgradedClientStateResponse::IsInitialized() const {
  return true;
}

void QueryUpgradedClientStateResponse::InternalSwap(QueryUpgradedClientStateResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.upgraded_client_state_, other->_impl_.upgraded_client_state_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryUpgradedClientStateResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fcore_2fclient_2fv1_2fquery_2eproto_getter, &descriptor_table_ibc_2fcore_2fclient_2fv1_2fquery_2eproto_once,
      file_level_metadata_ibc_2fcore_2fclient_2fv1_2fquery_2eproto[15]);
}
// ===================================================================

class QueryUpgradedConsensusStateRequest::_Internal {
 public:
};

QueryUpgradedConsensusStateRequest::QueryUpgradedConsensusStateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:ibc.core.client.v1.QueryUpgradedConsensusStateRequest)
}
QueryUpgradedConsensusStateRequest::QueryUpgradedConsensusStateRequest(const QueryUpgradedConsensusStateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  QueryUpgradedConsensusStateRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ibc.core.client.v1.QueryUpgradedConsensusStateRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryUpgradedConsensusStateRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryUpgradedConsensusStateRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata QueryUpgradedConsensusStateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fcore_2fclient_2fv1_2fquery_2eproto_getter, &descriptor_table_ibc_2fcore_2fclient_2fv1_2fquery_2eproto_once,
      file_level_metadata_ibc_2fcore_2fclient_2fv1_2fquery_2eproto[16]);
}
// ===================================================================

class QueryUpgradedConsensusStateResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryUpgradedConsensusStateResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryUpgradedConsensusStateResponse, _impl_._has_bits_);
  static const ::PROTOBUF_NAMESPACE_ID::Any& upgraded_consensus_state(const QueryUpgradedConsensusStateResponse* msg);
  static void set_has_upgraded_consensus_state(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::PROTOBUF_NAMESPACE_ID::Any&
QueryUpgradedConsensusStateResponse::_Internal::upgraded_consensus_state(const QueryUpgradedConsensusStateResponse* msg) {
  return *msg->_impl_.upgraded_consensus_state_;
}
void QueryUpgradedConsensusStateResponse::clear_upgraded_consensus_state() {
  if (_impl_.upgraded_consensus_state_ != nullptr) _impl_.upgraded_consensus_state_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryUpgradedConsensusStateResponse::QueryUpgradedConsensusStateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.core.client.v1.QueryUpgradedConsensusStateResponse)
}
QueryUpgradedConsensusStateResponse::QueryUpgradedConsensusStateResponse(const QueryUpgradedConsensusStateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryUpgradedConsensusStateResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.upgraded_consensus_state_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.upgraded_consensus_state_ = new ::PROTOBUF_NAMESPACE_ID::Any(*from._impl_.upgraded_consensus_state_);
  }
  // @@protoc_insertion_point(copy_constructor:ibc.core.client.v1.QueryUpgradedConsensusStateResponse)
}

inline void QueryUpgradedConsensusStateResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.upgraded_consensus_state_){nullptr}
  };
}

QueryUpgradedConsensusStateResponse::~QueryUpgradedConsensusStateResponse() {
  // @@protoc_insertion_point(destructor:ibc.core.client.v1.QueryUpgradedConsensusStateResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryUpgradedConsensusStateResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.upgraded_consensus_state_;
}

void QueryUpgradedConsensusStateResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryUpgradedConsensusStateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.core.client.v1.QueryUpgradedConsensusStateResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.upgraded_consensus_state_ != nullptr);
    _impl_.upgraded_consensus_state_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryUpgradedConsensusStateResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.protobuf.Any upgraded_consensus_state = 1 [json_name = "upgradedConsensusState"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_upgraded_consensus_state(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryUpgradedConsensusStateResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.core.client.v1.QueryUpgradedConsensusStateResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Any upgraded_consensus_state = 1 [json_name = "upgradedConsensusState"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::upgraded_consensus_state(this),
        _Internal::upgraded_consensus_state(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.core.client.v1.QueryUpgradedConsensusStateResponse)
  return target;
}

::size_t QueryUpgradedConsensusStateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.core.client.v1.QueryUpgradedConsensusStateResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Any upgraded_consensus_state = 1 [json_name = "upgradedConsensusState"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.upgraded_consensus_state_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryUpgradedConsensusStateResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryUpgradedConsensusStateResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryUpgradedConsensusStateResponse::GetClassData() const { return &_class_data_; }


void QueryUpgradedConsensusStateResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryUpgradedConsensusStateResponse*>(&to_msg);
  auto& from = static_cast<const QueryUpgradedConsensusStateResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.core.client.v1.QueryUpgradedConsensusStateResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_upgraded_consensus_state()->::PROTOBUF_NAMESPACE_ID::Any::MergeFrom(
        from._internal_upgraded_consensus_state());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryUpgradedConsensusStateResponse::CopyFrom(const QueryUpgradedConsensusStateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.core.client.v1.QueryUpgradedConsensusStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryUpgradedConsensusStateResponse::IsInitialized() const {
  return true;
}

void QueryUpgradedConsensusStateResponse::InternalSwap(QueryUpgradedConsensusStateResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.upgraded_consensus_state_, other->_impl_.upgraded_consensus_state_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryUpgradedConsensusStateResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fcore_2fclient_2fv1_2fquery_2eproto_getter, &descriptor_table_ibc_2fcore_2fclient_2fv1_2fquery_2eproto_once,
      file_level_metadata_ibc_2fcore_2fclient_2fv1_2fquery_2eproto[17]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace client
}  // namespace core
}  // namespace ibc
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ibc::core::client::v1::QueryClientStateRequest*
Arena::CreateMaybeMessage< ::ibc::core::client::v1::QueryClientStateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::core::client::v1::QueryClientStateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ibc::core::client::v1::QueryClientStateResponse*
Arena::CreateMaybeMessage< ::ibc::core::client::v1::QueryClientStateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::core::client::v1::QueryClientStateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ibc::core::client::v1::QueryClientStatesRequest*
Arena::CreateMaybeMessage< ::ibc::core::client::v1::QueryClientStatesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::core::client::v1::QueryClientStatesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ibc::core::client::v1::QueryClientStatesResponse*
Arena::CreateMaybeMessage< ::ibc::core::client::v1::QueryClientStatesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::core::client::v1::QueryClientStatesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ibc::core::client::v1::QueryConsensusStateRequest*
Arena::CreateMaybeMessage< ::ibc::core::client::v1::QueryConsensusStateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::core::client::v1::QueryConsensusStateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ibc::core::client::v1::QueryConsensusStateResponse*
Arena::CreateMaybeMessage< ::ibc::core::client::v1::QueryConsensusStateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::core::client::v1::QueryConsensusStateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ibc::core::client::v1::QueryConsensusStatesRequest*
Arena::CreateMaybeMessage< ::ibc::core::client::v1::QueryConsensusStatesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::core::client::v1::QueryConsensusStatesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ibc::core::client::v1::QueryConsensusStatesResponse*
Arena::CreateMaybeMessage< ::ibc::core::client::v1::QueryConsensusStatesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::core::client::v1::QueryConsensusStatesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ibc::core::client::v1::QueryConsensusStateHeightsRequest*
Arena::CreateMaybeMessage< ::ibc::core::client::v1::QueryConsensusStateHeightsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::core::client::v1::QueryConsensusStateHeightsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ibc::core::client::v1::QueryConsensusStateHeightsResponse*
Arena::CreateMaybeMessage< ::ibc::core::client::v1::QueryConsensusStateHeightsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::core::client::v1::QueryConsensusStateHeightsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ibc::core::client::v1::QueryClientStatusRequest*
Arena::CreateMaybeMessage< ::ibc::core::client::v1::QueryClientStatusRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::core::client::v1::QueryClientStatusRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ibc::core::client::v1::QueryClientStatusResponse*
Arena::CreateMaybeMessage< ::ibc::core::client::v1::QueryClientStatusResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::core::client::v1::QueryClientStatusResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ibc::core::client::v1::QueryClientParamsRequest*
Arena::CreateMaybeMessage< ::ibc::core::client::v1::QueryClientParamsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::core::client::v1::QueryClientParamsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ibc::core::client::v1::QueryClientParamsResponse*
Arena::CreateMaybeMessage< ::ibc::core::client::v1::QueryClientParamsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::core::client::v1::QueryClientParamsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ibc::core::client::v1::QueryUpgradedClientStateRequest*
Arena::CreateMaybeMessage< ::ibc::core::client::v1::QueryUpgradedClientStateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::core::client::v1::QueryUpgradedClientStateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ibc::core::client::v1::QueryUpgradedClientStateResponse*
Arena::CreateMaybeMessage< ::ibc::core::client::v1::QueryUpgradedClientStateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::core::client::v1::QueryUpgradedClientStateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ibc::core::client::v1::QueryUpgradedConsensusStateRequest*
Arena::CreateMaybeMessage< ::ibc::core::client::v1::QueryUpgradedConsensusStateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::core::client::v1::QueryUpgradedConsensusStateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ibc::core::client::v1::QueryUpgradedConsensusStateResponse*
Arena::CreateMaybeMessage< ::ibc::core::client::v1::QueryUpgradedConsensusStateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::core::client::v1::QueryUpgradedConsensusStateResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
