// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ibc/core/client/v1/tx.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ibc_2fcore_2fclient_2fv1_2ftx_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_ibc_2fcore_2fclient_2fv1_2ftx_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4023000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4023004 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "cosmos/msg/v1/msg.pb.h"
#include "gogoproto/gogo.pb.h"
#include "google/protobuf/any.pb.h"
#include "ibc/core/client/v1/client.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_ibc_2fcore_2fclient_2fv1_2ftx_2eproto

PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ibc_2fcore_2fclient_2fv1_2ftx_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable
    descriptor_table_ibc_2fcore_2fclient_2fv1_2ftx_2eproto;
namespace ibc {
namespace core {
namespace client {
namespace v1 {
class MsgCreateClient;
struct MsgCreateClientDefaultTypeInternal;
extern MsgCreateClientDefaultTypeInternal _MsgCreateClient_default_instance_;
class MsgCreateClientResponse;
struct MsgCreateClientResponseDefaultTypeInternal;
extern MsgCreateClientResponseDefaultTypeInternal _MsgCreateClientResponse_default_instance_;
class MsgSubmitMisbehaviour;
struct MsgSubmitMisbehaviourDefaultTypeInternal;
extern MsgSubmitMisbehaviourDefaultTypeInternal _MsgSubmitMisbehaviour_default_instance_;
class MsgSubmitMisbehaviourResponse;
struct MsgSubmitMisbehaviourResponseDefaultTypeInternal;
extern MsgSubmitMisbehaviourResponseDefaultTypeInternal _MsgSubmitMisbehaviourResponse_default_instance_;
class MsgUpdateClient;
struct MsgUpdateClientDefaultTypeInternal;
extern MsgUpdateClientDefaultTypeInternal _MsgUpdateClient_default_instance_;
class MsgUpdateClientResponse;
struct MsgUpdateClientResponseDefaultTypeInternal;
extern MsgUpdateClientResponseDefaultTypeInternal _MsgUpdateClientResponse_default_instance_;
class MsgUpdateParams;
struct MsgUpdateParamsDefaultTypeInternal;
extern MsgUpdateParamsDefaultTypeInternal _MsgUpdateParams_default_instance_;
class MsgUpdateParamsResponse;
struct MsgUpdateParamsResponseDefaultTypeInternal;
extern MsgUpdateParamsResponseDefaultTypeInternal _MsgUpdateParamsResponse_default_instance_;
class MsgUpgradeClient;
struct MsgUpgradeClientDefaultTypeInternal;
extern MsgUpgradeClientDefaultTypeInternal _MsgUpgradeClient_default_instance_;
class MsgUpgradeClientResponse;
struct MsgUpgradeClientResponseDefaultTypeInternal;
extern MsgUpgradeClientResponseDefaultTypeInternal _MsgUpgradeClientResponse_default_instance_;
}  // namespace v1
}  // namespace client
}  // namespace core
}  // namespace ibc
PROTOBUF_NAMESPACE_OPEN
template <>
::ibc::core::client::v1::MsgCreateClient* Arena::CreateMaybeMessage<::ibc::core::client::v1::MsgCreateClient>(Arena*);
template <>
::ibc::core::client::v1::MsgCreateClientResponse* Arena::CreateMaybeMessage<::ibc::core::client::v1::MsgCreateClientResponse>(Arena*);
template <>
::ibc::core::client::v1::MsgSubmitMisbehaviour* Arena::CreateMaybeMessage<::ibc::core::client::v1::MsgSubmitMisbehaviour>(Arena*);
template <>
::ibc::core::client::v1::MsgSubmitMisbehaviourResponse* Arena::CreateMaybeMessage<::ibc::core::client::v1::MsgSubmitMisbehaviourResponse>(Arena*);
template <>
::ibc::core::client::v1::MsgUpdateClient* Arena::CreateMaybeMessage<::ibc::core::client::v1::MsgUpdateClient>(Arena*);
template <>
::ibc::core::client::v1::MsgUpdateClientResponse* Arena::CreateMaybeMessage<::ibc::core::client::v1::MsgUpdateClientResponse>(Arena*);
template <>
::ibc::core::client::v1::MsgUpdateParams* Arena::CreateMaybeMessage<::ibc::core::client::v1::MsgUpdateParams>(Arena*);
template <>
::ibc::core::client::v1::MsgUpdateParamsResponse* Arena::CreateMaybeMessage<::ibc::core::client::v1::MsgUpdateParamsResponse>(Arena*);
template <>
::ibc::core::client::v1::MsgUpgradeClient* Arena::CreateMaybeMessage<::ibc::core::client::v1::MsgUpgradeClient>(Arena*);
template <>
::ibc::core::client::v1::MsgUpgradeClientResponse* Arena::CreateMaybeMessage<::ibc::core::client::v1::MsgUpgradeClientResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

namespace ibc {
namespace core {
namespace client {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class MsgCreateClient final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ibc.core.client.v1.MsgCreateClient) */ {
 public:
  inline MsgCreateClient() : MsgCreateClient(nullptr) {}
  ~MsgCreateClient() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgCreateClient(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgCreateClient(const MsgCreateClient& from);
  MsgCreateClient(MsgCreateClient&& from) noexcept
    : MsgCreateClient() {
    *this = ::std::move(from);
  }

  inline MsgCreateClient& operator=(const MsgCreateClient& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgCreateClient& operator=(MsgCreateClient&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgCreateClient& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgCreateClient* internal_default_instance() {
    return reinterpret_cast<const MsgCreateClient*>(
               &_MsgCreateClient_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MsgCreateClient& a, MsgCreateClient& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgCreateClient* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgCreateClient* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgCreateClient* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgCreateClient>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgCreateClient& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgCreateClient& from) {
    MsgCreateClient::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgCreateClient* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ibc.core.client.v1.MsgCreateClient";
  }
  protected:
  explicit MsgCreateClient(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSignerFieldNumber = 3,
    kClientStateFieldNumber = 1,
    kConsensusStateFieldNumber = 2,
  };
  // string signer = 3 [json_name = "signer"];
  void clear_signer() ;
  const std::string& signer() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_signer(Arg_&& arg, Args_... args);
  std::string* mutable_signer();
  PROTOBUF_NODISCARD std::string* release_signer();
  void set_allocated_signer(std::string* ptr);

  private:
  const std::string& _internal_signer() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_signer(
      const std::string& value);
  std::string* _internal_mutable_signer();

  public:
  // .google.protobuf.Any client_state = 1 [json_name = "clientState"];
  bool has_client_state() const;
  void clear_client_state() ;
  const ::PROTOBUF_NAMESPACE_ID::Any& client_state() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Any* release_client_state();
  ::PROTOBUF_NAMESPACE_ID::Any* mutable_client_state();
  void set_allocated_client_state(::PROTOBUF_NAMESPACE_ID::Any* client_state);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Any& _internal_client_state() const;
  ::PROTOBUF_NAMESPACE_ID::Any* _internal_mutable_client_state();
  public:
  void unsafe_arena_set_allocated_client_state(
      ::PROTOBUF_NAMESPACE_ID::Any* client_state);
  ::PROTOBUF_NAMESPACE_ID::Any* unsafe_arena_release_client_state();
  // .google.protobuf.Any consensus_state = 2 [json_name = "consensusState"];
  bool has_consensus_state() const;
  void clear_consensus_state() ;
  const ::PROTOBUF_NAMESPACE_ID::Any& consensus_state() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Any* release_consensus_state();
  ::PROTOBUF_NAMESPACE_ID::Any* mutable_consensus_state();
  void set_allocated_consensus_state(::PROTOBUF_NAMESPACE_ID::Any* consensus_state);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Any& _internal_consensus_state() const;
  ::PROTOBUF_NAMESPACE_ID::Any* _internal_mutable_consensus_state();
  public:
  void unsafe_arena_set_allocated_consensus_state(
      ::PROTOBUF_NAMESPACE_ID::Any* consensus_state);
  ::PROTOBUF_NAMESPACE_ID::Any* unsafe_arena_release_consensus_state();
  // @@protoc_insertion_point(class_scope:ibc.core.client.v1.MsgCreateClient)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr signer_;
    ::PROTOBUF_NAMESPACE_ID::Any* client_state_;
    ::PROTOBUF_NAMESPACE_ID::Any* consensus_state_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ibc_2fcore_2fclient_2fv1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgCreateClientResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:ibc.core.client.v1.MsgCreateClientResponse) */ {
 public:
  inline MsgCreateClientResponse() : MsgCreateClientResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgCreateClientResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgCreateClientResponse(const MsgCreateClientResponse& from);
  MsgCreateClientResponse(MsgCreateClientResponse&& from) noexcept
    : MsgCreateClientResponse() {
    *this = ::std::move(from);
  }

  inline MsgCreateClientResponse& operator=(const MsgCreateClientResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgCreateClientResponse& operator=(MsgCreateClientResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgCreateClientResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgCreateClientResponse* internal_default_instance() {
    return reinterpret_cast<const MsgCreateClientResponse*>(
               &_MsgCreateClientResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(MsgCreateClientResponse& a, MsgCreateClientResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgCreateClientResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgCreateClientResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgCreateClientResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgCreateClientResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgCreateClientResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgCreateClientResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ibc.core.client.v1.MsgCreateClientResponse";
  }
  protected:
  explicit MsgCreateClientResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ibc.core.client.v1.MsgCreateClientResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_ibc_2fcore_2fclient_2fv1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgUpdateClient final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ibc.core.client.v1.MsgUpdateClient) */ {
 public:
  inline MsgUpdateClient() : MsgUpdateClient(nullptr) {}
  ~MsgUpdateClient() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUpdateClient(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgUpdateClient(const MsgUpdateClient& from);
  MsgUpdateClient(MsgUpdateClient&& from) noexcept
    : MsgUpdateClient() {
    *this = ::std::move(from);
  }

  inline MsgUpdateClient& operator=(const MsgUpdateClient& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateClient& operator=(MsgUpdateClient&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUpdateClient& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUpdateClient* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateClient*>(
               &_MsgUpdateClient_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(MsgUpdateClient& a, MsgUpdateClient& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgUpdateClient* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateClient* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUpdateClient* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgUpdateClient>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgUpdateClient& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgUpdateClient& from) {
    MsgUpdateClient::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgUpdateClient* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ibc.core.client.v1.MsgUpdateClient";
  }
  protected:
  explicit MsgUpdateClient(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kClientIdFieldNumber = 1,
    kSignerFieldNumber = 3,
    kClientMessageFieldNumber = 2,
  };
  // string client_id = 1 [json_name = "clientId"];
  void clear_client_id() ;
  const std::string& client_id() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_client_id(Arg_&& arg, Args_... args);
  std::string* mutable_client_id();
  PROTOBUF_NODISCARD std::string* release_client_id();
  void set_allocated_client_id(std::string* ptr);

  private:
  const std::string& _internal_client_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_client_id(
      const std::string& value);
  std::string* _internal_mutable_client_id();

  public:
  // string signer = 3 [json_name = "signer"];
  void clear_signer() ;
  const std::string& signer() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_signer(Arg_&& arg, Args_... args);
  std::string* mutable_signer();
  PROTOBUF_NODISCARD std::string* release_signer();
  void set_allocated_signer(std::string* ptr);

  private:
  const std::string& _internal_signer() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_signer(
      const std::string& value);
  std::string* _internal_mutable_signer();

  public:
  // .google.protobuf.Any client_message = 2 [json_name = "clientMessage"];
  bool has_client_message() const;
  void clear_client_message() ;
  const ::PROTOBUF_NAMESPACE_ID::Any& client_message() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Any* release_client_message();
  ::PROTOBUF_NAMESPACE_ID::Any* mutable_client_message();
  void set_allocated_client_message(::PROTOBUF_NAMESPACE_ID::Any* client_message);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Any& _internal_client_message() const;
  ::PROTOBUF_NAMESPACE_ID::Any* _internal_mutable_client_message();
  public:
  void unsafe_arena_set_allocated_client_message(
      ::PROTOBUF_NAMESPACE_ID::Any* client_message);
  ::PROTOBUF_NAMESPACE_ID::Any* unsafe_arena_release_client_message();
  // @@protoc_insertion_point(class_scope:ibc.core.client.v1.MsgUpdateClient)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr client_id_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr signer_;
    ::PROTOBUF_NAMESPACE_ID::Any* client_message_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ibc_2fcore_2fclient_2fv1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgUpdateClientResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:ibc.core.client.v1.MsgUpdateClientResponse) */ {
 public:
  inline MsgUpdateClientResponse() : MsgUpdateClientResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUpdateClientResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgUpdateClientResponse(const MsgUpdateClientResponse& from);
  MsgUpdateClientResponse(MsgUpdateClientResponse&& from) noexcept
    : MsgUpdateClientResponse() {
    *this = ::std::move(from);
  }

  inline MsgUpdateClientResponse& operator=(const MsgUpdateClientResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateClientResponse& operator=(MsgUpdateClientResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUpdateClientResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUpdateClientResponse* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateClientResponse*>(
               &_MsgUpdateClientResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(MsgUpdateClientResponse& a, MsgUpdateClientResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgUpdateClientResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateClientResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUpdateClientResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgUpdateClientResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgUpdateClientResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgUpdateClientResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ibc.core.client.v1.MsgUpdateClientResponse";
  }
  protected:
  explicit MsgUpdateClientResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ibc.core.client.v1.MsgUpdateClientResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_ibc_2fcore_2fclient_2fv1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgUpgradeClient final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ibc.core.client.v1.MsgUpgradeClient) */ {
 public:
  inline MsgUpgradeClient() : MsgUpgradeClient(nullptr) {}
  ~MsgUpgradeClient() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUpgradeClient(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgUpgradeClient(const MsgUpgradeClient& from);
  MsgUpgradeClient(MsgUpgradeClient&& from) noexcept
    : MsgUpgradeClient() {
    *this = ::std::move(from);
  }

  inline MsgUpgradeClient& operator=(const MsgUpgradeClient& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpgradeClient& operator=(MsgUpgradeClient&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUpgradeClient& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUpgradeClient* internal_default_instance() {
    return reinterpret_cast<const MsgUpgradeClient*>(
               &_MsgUpgradeClient_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(MsgUpgradeClient& a, MsgUpgradeClient& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgUpgradeClient* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpgradeClient* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUpgradeClient* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgUpgradeClient>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgUpgradeClient& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgUpgradeClient& from) {
    MsgUpgradeClient::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgUpgradeClient* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ibc.core.client.v1.MsgUpgradeClient";
  }
  protected:
  explicit MsgUpgradeClient(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kClientIdFieldNumber = 1,
    kProofUpgradeClientFieldNumber = 4,
    kProofUpgradeConsensusStateFieldNumber = 5,
    kSignerFieldNumber = 6,
    kClientStateFieldNumber = 2,
    kConsensusStateFieldNumber = 3,
  };
  // string client_id = 1 [json_name = "clientId"];
  void clear_client_id() ;
  const std::string& client_id() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_client_id(Arg_&& arg, Args_... args);
  std::string* mutable_client_id();
  PROTOBUF_NODISCARD std::string* release_client_id();
  void set_allocated_client_id(std::string* ptr);

  private:
  const std::string& _internal_client_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_client_id(
      const std::string& value);
  std::string* _internal_mutable_client_id();

  public:
  // bytes proof_upgrade_client = 4 [json_name = "proofUpgradeClient"];
  void clear_proof_upgrade_client() ;
  const std::string& proof_upgrade_client() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_proof_upgrade_client(Arg_&& arg, Args_... args);
  std::string* mutable_proof_upgrade_client();
  PROTOBUF_NODISCARD std::string* release_proof_upgrade_client();
  void set_allocated_proof_upgrade_client(std::string* ptr);

  private:
  const std::string& _internal_proof_upgrade_client() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_proof_upgrade_client(
      const std::string& value);
  std::string* _internal_mutable_proof_upgrade_client();

  public:
  // bytes proof_upgrade_consensus_state = 5 [json_name = "proofUpgradeConsensusState"];
  void clear_proof_upgrade_consensus_state() ;
  const std::string& proof_upgrade_consensus_state() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_proof_upgrade_consensus_state(Arg_&& arg, Args_... args);
  std::string* mutable_proof_upgrade_consensus_state();
  PROTOBUF_NODISCARD std::string* release_proof_upgrade_consensus_state();
  void set_allocated_proof_upgrade_consensus_state(std::string* ptr);

  private:
  const std::string& _internal_proof_upgrade_consensus_state() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_proof_upgrade_consensus_state(
      const std::string& value);
  std::string* _internal_mutable_proof_upgrade_consensus_state();

  public:
  // string signer = 6 [json_name = "signer"];
  void clear_signer() ;
  const std::string& signer() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_signer(Arg_&& arg, Args_... args);
  std::string* mutable_signer();
  PROTOBUF_NODISCARD std::string* release_signer();
  void set_allocated_signer(std::string* ptr);

  private:
  const std::string& _internal_signer() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_signer(
      const std::string& value);
  std::string* _internal_mutable_signer();

  public:
  // .google.protobuf.Any client_state = 2 [json_name = "clientState"];
  bool has_client_state() const;
  void clear_client_state() ;
  const ::PROTOBUF_NAMESPACE_ID::Any& client_state() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Any* release_client_state();
  ::PROTOBUF_NAMESPACE_ID::Any* mutable_client_state();
  void set_allocated_client_state(::PROTOBUF_NAMESPACE_ID::Any* client_state);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Any& _internal_client_state() const;
  ::PROTOBUF_NAMESPACE_ID::Any* _internal_mutable_client_state();
  public:
  void unsafe_arena_set_allocated_client_state(
      ::PROTOBUF_NAMESPACE_ID::Any* client_state);
  ::PROTOBUF_NAMESPACE_ID::Any* unsafe_arena_release_client_state();
  // .google.protobuf.Any consensus_state = 3 [json_name = "consensusState"];
  bool has_consensus_state() const;
  void clear_consensus_state() ;
  const ::PROTOBUF_NAMESPACE_ID::Any& consensus_state() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Any* release_consensus_state();
  ::PROTOBUF_NAMESPACE_ID::Any* mutable_consensus_state();
  void set_allocated_consensus_state(::PROTOBUF_NAMESPACE_ID::Any* consensus_state);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Any& _internal_consensus_state() const;
  ::PROTOBUF_NAMESPACE_ID::Any* _internal_mutable_consensus_state();
  public:
  void unsafe_arena_set_allocated_consensus_state(
      ::PROTOBUF_NAMESPACE_ID::Any* consensus_state);
  ::PROTOBUF_NAMESPACE_ID::Any* unsafe_arena_release_consensus_state();
  // @@protoc_insertion_point(class_scope:ibc.core.client.v1.MsgUpgradeClient)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr client_id_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr proof_upgrade_client_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr proof_upgrade_consensus_state_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr signer_;
    ::PROTOBUF_NAMESPACE_ID::Any* client_state_;
    ::PROTOBUF_NAMESPACE_ID::Any* consensus_state_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ibc_2fcore_2fclient_2fv1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgUpgradeClientResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:ibc.core.client.v1.MsgUpgradeClientResponse) */ {
 public:
  inline MsgUpgradeClientResponse() : MsgUpgradeClientResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUpgradeClientResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgUpgradeClientResponse(const MsgUpgradeClientResponse& from);
  MsgUpgradeClientResponse(MsgUpgradeClientResponse&& from) noexcept
    : MsgUpgradeClientResponse() {
    *this = ::std::move(from);
  }

  inline MsgUpgradeClientResponse& operator=(const MsgUpgradeClientResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpgradeClientResponse& operator=(MsgUpgradeClientResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUpgradeClientResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUpgradeClientResponse* internal_default_instance() {
    return reinterpret_cast<const MsgUpgradeClientResponse*>(
               &_MsgUpgradeClientResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(MsgUpgradeClientResponse& a, MsgUpgradeClientResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgUpgradeClientResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpgradeClientResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUpgradeClientResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgUpgradeClientResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgUpgradeClientResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgUpgradeClientResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ibc.core.client.v1.MsgUpgradeClientResponse";
  }
  protected:
  explicit MsgUpgradeClientResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ibc.core.client.v1.MsgUpgradeClientResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_ibc_2fcore_2fclient_2fv1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgSubmitMisbehaviour final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ibc.core.client.v1.MsgSubmitMisbehaviour) */ {
 public:
  inline MsgSubmitMisbehaviour() : MsgSubmitMisbehaviour(nullptr) {}
  ~MsgSubmitMisbehaviour() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgSubmitMisbehaviour(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgSubmitMisbehaviour(const MsgSubmitMisbehaviour& from);
  MsgSubmitMisbehaviour(MsgSubmitMisbehaviour&& from) noexcept
    : MsgSubmitMisbehaviour() {
    *this = ::std::move(from);
  }

  inline MsgSubmitMisbehaviour& operator=(const MsgSubmitMisbehaviour& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgSubmitMisbehaviour& operator=(MsgSubmitMisbehaviour&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgSubmitMisbehaviour& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgSubmitMisbehaviour* internal_default_instance() {
    return reinterpret_cast<const MsgSubmitMisbehaviour*>(
               &_MsgSubmitMisbehaviour_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(MsgSubmitMisbehaviour& a, MsgSubmitMisbehaviour& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgSubmitMisbehaviour* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgSubmitMisbehaviour* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgSubmitMisbehaviour* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgSubmitMisbehaviour>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgSubmitMisbehaviour& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgSubmitMisbehaviour& from) {
    MsgSubmitMisbehaviour::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSubmitMisbehaviour* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ibc.core.client.v1.MsgSubmitMisbehaviour";
  }
  protected:
  explicit MsgSubmitMisbehaviour(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kClientIdFieldNumber = 1,
    kSignerFieldNumber = 3,
    kMisbehaviourFieldNumber = 2,
  };
  // string client_id = 1 [json_name = "clientId"];
  void clear_client_id() ;
  const std::string& client_id() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_client_id(Arg_&& arg, Args_... args);
  std::string* mutable_client_id();
  PROTOBUF_NODISCARD std::string* release_client_id();
  void set_allocated_client_id(std::string* ptr);

  private:
  const std::string& _internal_client_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_client_id(
      const std::string& value);
  std::string* _internal_mutable_client_id();

  public:
  // string signer = 3 [json_name = "signer"];
  void clear_signer() ;
  const std::string& signer() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_signer(Arg_&& arg, Args_... args);
  std::string* mutable_signer();
  PROTOBUF_NODISCARD std::string* release_signer();
  void set_allocated_signer(std::string* ptr);

  private:
  const std::string& _internal_signer() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_signer(
      const std::string& value);
  std::string* _internal_mutable_signer();

  public:
  // .google.protobuf.Any misbehaviour = 2 [json_name = "misbehaviour"];
  bool has_misbehaviour() const;
  void clear_misbehaviour() ;
  const ::PROTOBUF_NAMESPACE_ID::Any& misbehaviour() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Any* release_misbehaviour();
  ::PROTOBUF_NAMESPACE_ID::Any* mutable_misbehaviour();
  void set_allocated_misbehaviour(::PROTOBUF_NAMESPACE_ID::Any* misbehaviour);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Any& _internal_misbehaviour() const;
  ::PROTOBUF_NAMESPACE_ID::Any* _internal_mutable_misbehaviour();
  public:
  void unsafe_arena_set_allocated_misbehaviour(
      ::PROTOBUF_NAMESPACE_ID::Any* misbehaviour);
  ::PROTOBUF_NAMESPACE_ID::Any* unsafe_arena_release_misbehaviour();
  // @@protoc_insertion_point(class_scope:ibc.core.client.v1.MsgSubmitMisbehaviour)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr client_id_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr signer_;
    ::PROTOBUF_NAMESPACE_ID::Any* misbehaviour_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ibc_2fcore_2fclient_2fv1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgSubmitMisbehaviourResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:ibc.core.client.v1.MsgSubmitMisbehaviourResponse) */ {
 public:
  inline MsgSubmitMisbehaviourResponse() : MsgSubmitMisbehaviourResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgSubmitMisbehaviourResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgSubmitMisbehaviourResponse(const MsgSubmitMisbehaviourResponse& from);
  MsgSubmitMisbehaviourResponse(MsgSubmitMisbehaviourResponse&& from) noexcept
    : MsgSubmitMisbehaviourResponse() {
    *this = ::std::move(from);
  }

  inline MsgSubmitMisbehaviourResponse& operator=(const MsgSubmitMisbehaviourResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgSubmitMisbehaviourResponse& operator=(MsgSubmitMisbehaviourResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgSubmitMisbehaviourResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgSubmitMisbehaviourResponse* internal_default_instance() {
    return reinterpret_cast<const MsgSubmitMisbehaviourResponse*>(
               &_MsgSubmitMisbehaviourResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(MsgSubmitMisbehaviourResponse& a, MsgSubmitMisbehaviourResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgSubmitMisbehaviourResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgSubmitMisbehaviourResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgSubmitMisbehaviourResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgSubmitMisbehaviourResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgSubmitMisbehaviourResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgSubmitMisbehaviourResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ibc.core.client.v1.MsgSubmitMisbehaviourResponse";
  }
  protected:
  explicit MsgSubmitMisbehaviourResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ibc.core.client.v1.MsgSubmitMisbehaviourResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_ibc_2fcore_2fclient_2fv1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgUpdateParams final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ibc.core.client.v1.MsgUpdateParams) */ {
 public:
  inline MsgUpdateParams() : MsgUpdateParams(nullptr) {}
  ~MsgUpdateParams() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUpdateParams(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgUpdateParams(const MsgUpdateParams& from);
  MsgUpdateParams(MsgUpdateParams&& from) noexcept
    : MsgUpdateParams() {
    *this = ::std::move(from);
  }

  inline MsgUpdateParams& operator=(const MsgUpdateParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateParams& operator=(MsgUpdateParams&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUpdateParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUpdateParams* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateParams*>(
               &_MsgUpdateParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(MsgUpdateParams& a, MsgUpdateParams& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgUpdateParams* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateParams* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUpdateParams* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgUpdateParams>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgUpdateParams& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgUpdateParams& from) {
    MsgUpdateParams::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgUpdateParams* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ibc.core.client.v1.MsgUpdateParams";
  }
  protected:
  explicit MsgUpdateParams(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAuthorityFieldNumber = 1,
    kParamsFieldNumber = 2,
  };
  // string authority = 1 [json_name = "authority"];
  void clear_authority() ;
  const std::string& authority() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_authority(Arg_&& arg, Args_... args);
  std::string* mutable_authority();
  PROTOBUF_NODISCARD std::string* release_authority();
  void set_allocated_authority(std::string* ptr);

  private:
  const std::string& _internal_authority() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_authority(
      const std::string& value);
  std::string* _internal_mutable_authority();

  public:
  // .ibc.core.client.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];
  bool has_params() const;
  void clear_params() ;
  const ::ibc::core::client::v1::Params& params() const;
  PROTOBUF_NODISCARD ::ibc::core::client::v1::Params* release_params();
  ::ibc::core::client::v1::Params* mutable_params();
  void set_allocated_params(::ibc::core::client::v1::Params* params);
  private:
  const ::ibc::core::client::v1::Params& _internal_params() const;
  ::ibc::core::client::v1::Params* _internal_mutable_params();
  public:
  void unsafe_arena_set_allocated_params(
      ::ibc::core::client::v1::Params* params);
  ::ibc::core::client::v1::Params* unsafe_arena_release_params();
  // @@protoc_insertion_point(class_scope:ibc.core.client.v1.MsgUpdateParams)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr authority_;
    ::ibc::core::client::v1::Params* params_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ibc_2fcore_2fclient_2fv1_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgUpdateParamsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:ibc.core.client.v1.MsgUpdateParamsResponse) */ {
 public:
  inline MsgUpdateParamsResponse() : MsgUpdateParamsResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUpdateParamsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgUpdateParamsResponse(const MsgUpdateParamsResponse& from);
  MsgUpdateParamsResponse(MsgUpdateParamsResponse&& from) noexcept
    : MsgUpdateParamsResponse() {
    *this = ::std::move(from);
  }

  inline MsgUpdateParamsResponse& operator=(const MsgUpdateParamsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateParamsResponse& operator=(MsgUpdateParamsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUpdateParamsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUpdateParamsResponse* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateParamsResponse*>(
               &_MsgUpdateParamsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(MsgUpdateParamsResponse& a, MsgUpdateParamsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgUpdateParamsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateParamsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUpdateParamsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgUpdateParamsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgUpdateParamsResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgUpdateParamsResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ibc.core.client.v1.MsgUpdateParamsResponse";
  }
  protected:
  explicit MsgUpdateParamsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ibc.core.client.v1.MsgUpdateParamsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_ibc_2fcore_2fclient_2fv1_2ftx_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// MsgCreateClient

// .google.protobuf.Any client_state = 1 [json_name = "clientState"];
inline bool MsgCreateClient::has_client_state() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.client_state_ != nullptr);
  return value;
}
inline const ::PROTOBUF_NAMESPACE_ID::Any& MsgCreateClient::_internal_client_state() const {
  const ::PROTOBUF_NAMESPACE_ID::Any* p = _impl_.client_state_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Any&>(
      ::PROTOBUF_NAMESPACE_ID::_Any_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Any& MsgCreateClient::client_state() const {
  // @@protoc_insertion_point(field_get:ibc.core.client.v1.MsgCreateClient.client_state)
  return _internal_client_state();
}
inline void MsgCreateClient::unsafe_arena_set_allocated_client_state(
    ::PROTOBUF_NAMESPACE_ID::Any* client_state) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.client_state_);
  }
  _impl_.client_state_ = client_state;
  if (client_state) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ibc.core.client.v1.MsgCreateClient.client_state)
}
inline ::PROTOBUF_NAMESPACE_ID::Any* MsgCreateClient::release_client_state() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::PROTOBUF_NAMESPACE_ID::Any* temp = _impl_.client_state_;
  _impl_.client_state_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Any* MsgCreateClient::unsafe_arena_release_client_state() {
  // @@protoc_insertion_point(field_release:ibc.core.client.v1.MsgCreateClient.client_state)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::PROTOBUF_NAMESPACE_ID::Any* temp = _impl_.client_state_;
  _impl_.client_state_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Any* MsgCreateClient::_internal_mutable_client_state() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.client_state_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Any>(GetArenaForAllocation());
    _impl_.client_state_ = p;
  }
  return _impl_.client_state_;
}
inline ::PROTOBUF_NAMESPACE_ID::Any* MsgCreateClient::mutable_client_state() {
  ::PROTOBUF_NAMESPACE_ID::Any* _msg = _internal_mutable_client_state();
  // @@protoc_insertion_point(field_mutable:ibc.core.client.v1.MsgCreateClient.client_state)
  return _msg;
}
inline void MsgCreateClient::set_allocated_client_state(::PROTOBUF_NAMESPACE_ID::Any* client_state) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.client_state_);
  }
  if (client_state) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(client_state));
    if (message_arena != submessage_arena) {
      client_state = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, client_state, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.client_state_ = client_state;
  // @@protoc_insertion_point(field_set_allocated:ibc.core.client.v1.MsgCreateClient.client_state)
}

// .google.protobuf.Any consensus_state = 2 [json_name = "consensusState"];
inline bool MsgCreateClient::has_consensus_state() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.consensus_state_ != nullptr);
  return value;
}
inline const ::PROTOBUF_NAMESPACE_ID::Any& MsgCreateClient::_internal_consensus_state() const {
  const ::PROTOBUF_NAMESPACE_ID::Any* p = _impl_.consensus_state_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Any&>(
      ::PROTOBUF_NAMESPACE_ID::_Any_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Any& MsgCreateClient::consensus_state() const {
  // @@protoc_insertion_point(field_get:ibc.core.client.v1.MsgCreateClient.consensus_state)
  return _internal_consensus_state();
}
inline void MsgCreateClient::unsafe_arena_set_allocated_consensus_state(
    ::PROTOBUF_NAMESPACE_ID::Any* consensus_state) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.consensus_state_);
  }
  _impl_.consensus_state_ = consensus_state;
  if (consensus_state) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ibc.core.client.v1.MsgCreateClient.consensus_state)
}
inline ::PROTOBUF_NAMESPACE_ID::Any* MsgCreateClient::release_consensus_state() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::PROTOBUF_NAMESPACE_ID::Any* temp = _impl_.consensus_state_;
  _impl_.consensus_state_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Any* MsgCreateClient::unsafe_arena_release_consensus_state() {
  // @@protoc_insertion_point(field_release:ibc.core.client.v1.MsgCreateClient.consensus_state)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::PROTOBUF_NAMESPACE_ID::Any* temp = _impl_.consensus_state_;
  _impl_.consensus_state_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Any* MsgCreateClient::_internal_mutable_consensus_state() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.consensus_state_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Any>(GetArenaForAllocation());
    _impl_.consensus_state_ = p;
  }
  return _impl_.consensus_state_;
}
inline ::PROTOBUF_NAMESPACE_ID::Any* MsgCreateClient::mutable_consensus_state() {
  ::PROTOBUF_NAMESPACE_ID::Any* _msg = _internal_mutable_consensus_state();
  // @@protoc_insertion_point(field_mutable:ibc.core.client.v1.MsgCreateClient.consensus_state)
  return _msg;
}
inline void MsgCreateClient::set_allocated_consensus_state(::PROTOBUF_NAMESPACE_ID::Any* consensus_state) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.consensus_state_);
  }
  if (consensus_state) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(consensus_state));
    if (message_arena != submessage_arena) {
      consensus_state = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, consensus_state, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.consensus_state_ = consensus_state;
  // @@protoc_insertion_point(field_set_allocated:ibc.core.client.v1.MsgCreateClient.consensus_state)
}

// string signer = 3 [json_name = "signer"];
inline void MsgCreateClient::clear_signer() {
  _impl_.signer_.ClearToEmpty();
}
inline const std::string& MsgCreateClient::signer() const {
  // @@protoc_insertion_point(field_get:ibc.core.client.v1.MsgCreateClient.signer)
  return _internal_signer();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgCreateClient::set_signer(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.signer_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ibc.core.client.v1.MsgCreateClient.signer)
}
inline std::string* MsgCreateClient::mutable_signer() {
  std::string* _s = _internal_mutable_signer();
  // @@protoc_insertion_point(field_mutable:ibc.core.client.v1.MsgCreateClient.signer)
  return _s;
}
inline const std::string& MsgCreateClient::_internal_signer() const {
  return _impl_.signer_.Get();
}
inline void MsgCreateClient::_internal_set_signer(const std::string& value) {
  ;


  _impl_.signer_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgCreateClient::_internal_mutable_signer() {
  ;
  return _impl_.signer_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgCreateClient::release_signer() {
  // @@protoc_insertion_point(field_release:ibc.core.client.v1.MsgCreateClient.signer)
  return _impl_.signer_.Release();
}
inline void MsgCreateClient::set_allocated_signer(std::string* value) {
  _impl_.signer_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.signer_.IsDefault()) {
          _impl_.signer_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ibc.core.client.v1.MsgCreateClient.signer)
}

// -------------------------------------------------------------------

// MsgCreateClientResponse

// -------------------------------------------------------------------

// MsgUpdateClient

// string client_id = 1 [json_name = "clientId"];
inline void MsgUpdateClient::clear_client_id() {
  _impl_.client_id_.ClearToEmpty();
}
inline const std::string& MsgUpdateClient::client_id() const {
  // @@protoc_insertion_point(field_get:ibc.core.client.v1.MsgUpdateClient.client_id)
  return _internal_client_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgUpdateClient::set_client_id(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.client_id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ibc.core.client.v1.MsgUpdateClient.client_id)
}
inline std::string* MsgUpdateClient::mutable_client_id() {
  std::string* _s = _internal_mutable_client_id();
  // @@protoc_insertion_point(field_mutable:ibc.core.client.v1.MsgUpdateClient.client_id)
  return _s;
}
inline const std::string& MsgUpdateClient::_internal_client_id() const {
  return _impl_.client_id_.Get();
}
inline void MsgUpdateClient::_internal_set_client_id(const std::string& value) {
  ;


  _impl_.client_id_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgUpdateClient::_internal_mutable_client_id() {
  ;
  return _impl_.client_id_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgUpdateClient::release_client_id() {
  // @@protoc_insertion_point(field_release:ibc.core.client.v1.MsgUpdateClient.client_id)
  return _impl_.client_id_.Release();
}
inline void MsgUpdateClient::set_allocated_client_id(std::string* value) {
  _impl_.client_id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.client_id_.IsDefault()) {
          _impl_.client_id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ibc.core.client.v1.MsgUpdateClient.client_id)
}

// .google.protobuf.Any client_message = 2 [json_name = "clientMessage"];
inline bool MsgUpdateClient::has_client_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.client_message_ != nullptr);
  return value;
}
inline const ::PROTOBUF_NAMESPACE_ID::Any& MsgUpdateClient::_internal_client_message() const {
  const ::PROTOBUF_NAMESPACE_ID::Any* p = _impl_.client_message_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Any&>(
      ::PROTOBUF_NAMESPACE_ID::_Any_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Any& MsgUpdateClient::client_message() const {
  // @@protoc_insertion_point(field_get:ibc.core.client.v1.MsgUpdateClient.client_message)
  return _internal_client_message();
}
inline void MsgUpdateClient::unsafe_arena_set_allocated_client_message(
    ::PROTOBUF_NAMESPACE_ID::Any* client_message) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.client_message_);
  }
  _impl_.client_message_ = client_message;
  if (client_message) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ibc.core.client.v1.MsgUpdateClient.client_message)
}
inline ::PROTOBUF_NAMESPACE_ID::Any* MsgUpdateClient::release_client_message() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::PROTOBUF_NAMESPACE_ID::Any* temp = _impl_.client_message_;
  _impl_.client_message_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Any* MsgUpdateClient::unsafe_arena_release_client_message() {
  // @@protoc_insertion_point(field_release:ibc.core.client.v1.MsgUpdateClient.client_message)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::PROTOBUF_NAMESPACE_ID::Any* temp = _impl_.client_message_;
  _impl_.client_message_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Any* MsgUpdateClient::_internal_mutable_client_message() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.client_message_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Any>(GetArenaForAllocation());
    _impl_.client_message_ = p;
  }
  return _impl_.client_message_;
}
inline ::PROTOBUF_NAMESPACE_ID::Any* MsgUpdateClient::mutable_client_message() {
  ::PROTOBUF_NAMESPACE_ID::Any* _msg = _internal_mutable_client_message();
  // @@protoc_insertion_point(field_mutable:ibc.core.client.v1.MsgUpdateClient.client_message)
  return _msg;
}
inline void MsgUpdateClient::set_allocated_client_message(::PROTOBUF_NAMESPACE_ID::Any* client_message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.client_message_);
  }
  if (client_message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(client_message));
    if (message_arena != submessage_arena) {
      client_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, client_message, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.client_message_ = client_message;
  // @@protoc_insertion_point(field_set_allocated:ibc.core.client.v1.MsgUpdateClient.client_message)
}

// string signer = 3 [json_name = "signer"];
inline void MsgUpdateClient::clear_signer() {
  _impl_.signer_.ClearToEmpty();
}
inline const std::string& MsgUpdateClient::signer() const {
  // @@protoc_insertion_point(field_get:ibc.core.client.v1.MsgUpdateClient.signer)
  return _internal_signer();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgUpdateClient::set_signer(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.signer_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ibc.core.client.v1.MsgUpdateClient.signer)
}
inline std::string* MsgUpdateClient::mutable_signer() {
  std::string* _s = _internal_mutable_signer();
  // @@protoc_insertion_point(field_mutable:ibc.core.client.v1.MsgUpdateClient.signer)
  return _s;
}
inline const std::string& MsgUpdateClient::_internal_signer() const {
  return _impl_.signer_.Get();
}
inline void MsgUpdateClient::_internal_set_signer(const std::string& value) {
  ;


  _impl_.signer_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgUpdateClient::_internal_mutable_signer() {
  ;
  return _impl_.signer_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgUpdateClient::release_signer() {
  // @@protoc_insertion_point(field_release:ibc.core.client.v1.MsgUpdateClient.signer)
  return _impl_.signer_.Release();
}
inline void MsgUpdateClient::set_allocated_signer(std::string* value) {
  _impl_.signer_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.signer_.IsDefault()) {
          _impl_.signer_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ibc.core.client.v1.MsgUpdateClient.signer)
}

// -------------------------------------------------------------------

// MsgUpdateClientResponse

// -------------------------------------------------------------------

// MsgUpgradeClient

// string client_id = 1 [json_name = "clientId"];
inline void MsgUpgradeClient::clear_client_id() {
  _impl_.client_id_.ClearToEmpty();
}
inline const std::string& MsgUpgradeClient::client_id() const {
  // @@protoc_insertion_point(field_get:ibc.core.client.v1.MsgUpgradeClient.client_id)
  return _internal_client_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgUpgradeClient::set_client_id(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.client_id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ibc.core.client.v1.MsgUpgradeClient.client_id)
}
inline std::string* MsgUpgradeClient::mutable_client_id() {
  std::string* _s = _internal_mutable_client_id();
  // @@protoc_insertion_point(field_mutable:ibc.core.client.v1.MsgUpgradeClient.client_id)
  return _s;
}
inline const std::string& MsgUpgradeClient::_internal_client_id() const {
  return _impl_.client_id_.Get();
}
inline void MsgUpgradeClient::_internal_set_client_id(const std::string& value) {
  ;


  _impl_.client_id_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgUpgradeClient::_internal_mutable_client_id() {
  ;
  return _impl_.client_id_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgUpgradeClient::release_client_id() {
  // @@protoc_insertion_point(field_release:ibc.core.client.v1.MsgUpgradeClient.client_id)
  return _impl_.client_id_.Release();
}
inline void MsgUpgradeClient::set_allocated_client_id(std::string* value) {
  _impl_.client_id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.client_id_.IsDefault()) {
          _impl_.client_id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ibc.core.client.v1.MsgUpgradeClient.client_id)
}

// .google.protobuf.Any client_state = 2 [json_name = "clientState"];
inline bool MsgUpgradeClient::has_client_state() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.client_state_ != nullptr);
  return value;
}
inline const ::PROTOBUF_NAMESPACE_ID::Any& MsgUpgradeClient::_internal_client_state() const {
  const ::PROTOBUF_NAMESPACE_ID::Any* p = _impl_.client_state_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Any&>(
      ::PROTOBUF_NAMESPACE_ID::_Any_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Any& MsgUpgradeClient::client_state() const {
  // @@protoc_insertion_point(field_get:ibc.core.client.v1.MsgUpgradeClient.client_state)
  return _internal_client_state();
}
inline void MsgUpgradeClient::unsafe_arena_set_allocated_client_state(
    ::PROTOBUF_NAMESPACE_ID::Any* client_state) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.client_state_);
  }
  _impl_.client_state_ = client_state;
  if (client_state) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ibc.core.client.v1.MsgUpgradeClient.client_state)
}
inline ::PROTOBUF_NAMESPACE_ID::Any* MsgUpgradeClient::release_client_state() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::PROTOBUF_NAMESPACE_ID::Any* temp = _impl_.client_state_;
  _impl_.client_state_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Any* MsgUpgradeClient::unsafe_arena_release_client_state() {
  // @@protoc_insertion_point(field_release:ibc.core.client.v1.MsgUpgradeClient.client_state)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::PROTOBUF_NAMESPACE_ID::Any* temp = _impl_.client_state_;
  _impl_.client_state_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Any* MsgUpgradeClient::_internal_mutable_client_state() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.client_state_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Any>(GetArenaForAllocation());
    _impl_.client_state_ = p;
  }
  return _impl_.client_state_;
}
inline ::PROTOBUF_NAMESPACE_ID::Any* MsgUpgradeClient::mutable_client_state() {
  ::PROTOBUF_NAMESPACE_ID::Any* _msg = _internal_mutable_client_state();
  // @@protoc_insertion_point(field_mutable:ibc.core.client.v1.MsgUpgradeClient.client_state)
  return _msg;
}
inline void MsgUpgradeClient::set_allocated_client_state(::PROTOBUF_NAMESPACE_ID::Any* client_state) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.client_state_);
  }
  if (client_state) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(client_state));
    if (message_arena != submessage_arena) {
      client_state = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, client_state, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.client_state_ = client_state;
  // @@protoc_insertion_point(field_set_allocated:ibc.core.client.v1.MsgUpgradeClient.client_state)
}

// .google.protobuf.Any consensus_state = 3 [json_name = "consensusState"];
inline bool MsgUpgradeClient::has_consensus_state() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.consensus_state_ != nullptr);
  return value;
}
inline const ::PROTOBUF_NAMESPACE_ID::Any& MsgUpgradeClient::_internal_consensus_state() const {
  const ::PROTOBUF_NAMESPACE_ID::Any* p = _impl_.consensus_state_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Any&>(
      ::PROTOBUF_NAMESPACE_ID::_Any_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Any& MsgUpgradeClient::consensus_state() const {
  // @@protoc_insertion_point(field_get:ibc.core.client.v1.MsgUpgradeClient.consensus_state)
  return _internal_consensus_state();
}
inline void MsgUpgradeClient::unsafe_arena_set_allocated_consensus_state(
    ::PROTOBUF_NAMESPACE_ID::Any* consensus_state) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.consensus_state_);
  }
  _impl_.consensus_state_ = consensus_state;
  if (consensus_state) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ibc.core.client.v1.MsgUpgradeClient.consensus_state)
}
inline ::PROTOBUF_NAMESPACE_ID::Any* MsgUpgradeClient::release_consensus_state() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::PROTOBUF_NAMESPACE_ID::Any* temp = _impl_.consensus_state_;
  _impl_.consensus_state_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Any* MsgUpgradeClient::unsafe_arena_release_consensus_state() {
  // @@protoc_insertion_point(field_release:ibc.core.client.v1.MsgUpgradeClient.consensus_state)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::PROTOBUF_NAMESPACE_ID::Any* temp = _impl_.consensus_state_;
  _impl_.consensus_state_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Any* MsgUpgradeClient::_internal_mutable_consensus_state() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.consensus_state_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Any>(GetArenaForAllocation());
    _impl_.consensus_state_ = p;
  }
  return _impl_.consensus_state_;
}
inline ::PROTOBUF_NAMESPACE_ID::Any* MsgUpgradeClient::mutable_consensus_state() {
  ::PROTOBUF_NAMESPACE_ID::Any* _msg = _internal_mutable_consensus_state();
  // @@protoc_insertion_point(field_mutable:ibc.core.client.v1.MsgUpgradeClient.consensus_state)
  return _msg;
}
inline void MsgUpgradeClient::set_allocated_consensus_state(::PROTOBUF_NAMESPACE_ID::Any* consensus_state) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.consensus_state_);
  }
  if (consensus_state) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(consensus_state));
    if (message_arena != submessage_arena) {
      consensus_state = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, consensus_state, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.consensus_state_ = consensus_state;
  // @@protoc_insertion_point(field_set_allocated:ibc.core.client.v1.MsgUpgradeClient.consensus_state)
}

// bytes proof_upgrade_client = 4 [json_name = "proofUpgradeClient"];
inline void MsgUpgradeClient::clear_proof_upgrade_client() {
  _impl_.proof_upgrade_client_.ClearToEmpty();
}
inline const std::string& MsgUpgradeClient::proof_upgrade_client() const {
  // @@protoc_insertion_point(field_get:ibc.core.client.v1.MsgUpgradeClient.proof_upgrade_client)
  return _internal_proof_upgrade_client();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgUpgradeClient::set_proof_upgrade_client(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.proof_upgrade_client_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ibc.core.client.v1.MsgUpgradeClient.proof_upgrade_client)
}
inline std::string* MsgUpgradeClient::mutable_proof_upgrade_client() {
  std::string* _s = _internal_mutable_proof_upgrade_client();
  // @@protoc_insertion_point(field_mutable:ibc.core.client.v1.MsgUpgradeClient.proof_upgrade_client)
  return _s;
}
inline const std::string& MsgUpgradeClient::_internal_proof_upgrade_client() const {
  return _impl_.proof_upgrade_client_.Get();
}
inline void MsgUpgradeClient::_internal_set_proof_upgrade_client(const std::string& value) {
  ;


  _impl_.proof_upgrade_client_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgUpgradeClient::_internal_mutable_proof_upgrade_client() {
  ;
  return _impl_.proof_upgrade_client_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgUpgradeClient::release_proof_upgrade_client() {
  // @@protoc_insertion_point(field_release:ibc.core.client.v1.MsgUpgradeClient.proof_upgrade_client)
  return _impl_.proof_upgrade_client_.Release();
}
inline void MsgUpgradeClient::set_allocated_proof_upgrade_client(std::string* value) {
  _impl_.proof_upgrade_client_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.proof_upgrade_client_.IsDefault()) {
          _impl_.proof_upgrade_client_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ibc.core.client.v1.MsgUpgradeClient.proof_upgrade_client)
}

// bytes proof_upgrade_consensus_state = 5 [json_name = "proofUpgradeConsensusState"];
inline void MsgUpgradeClient::clear_proof_upgrade_consensus_state() {
  _impl_.proof_upgrade_consensus_state_.ClearToEmpty();
}
inline const std::string& MsgUpgradeClient::proof_upgrade_consensus_state() const {
  // @@protoc_insertion_point(field_get:ibc.core.client.v1.MsgUpgradeClient.proof_upgrade_consensus_state)
  return _internal_proof_upgrade_consensus_state();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgUpgradeClient::set_proof_upgrade_consensus_state(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.proof_upgrade_consensus_state_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ibc.core.client.v1.MsgUpgradeClient.proof_upgrade_consensus_state)
}
inline std::string* MsgUpgradeClient::mutable_proof_upgrade_consensus_state() {
  std::string* _s = _internal_mutable_proof_upgrade_consensus_state();
  // @@protoc_insertion_point(field_mutable:ibc.core.client.v1.MsgUpgradeClient.proof_upgrade_consensus_state)
  return _s;
}
inline const std::string& MsgUpgradeClient::_internal_proof_upgrade_consensus_state() const {
  return _impl_.proof_upgrade_consensus_state_.Get();
}
inline void MsgUpgradeClient::_internal_set_proof_upgrade_consensus_state(const std::string& value) {
  ;


  _impl_.proof_upgrade_consensus_state_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgUpgradeClient::_internal_mutable_proof_upgrade_consensus_state() {
  ;
  return _impl_.proof_upgrade_consensus_state_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgUpgradeClient::release_proof_upgrade_consensus_state() {
  // @@protoc_insertion_point(field_release:ibc.core.client.v1.MsgUpgradeClient.proof_upgrade_consensus_state)
  return _impl_.proof_upgrade_consensus_state_.Release();
}
inline void MsgUpgradeClient::set_allocated_proof_upgrade_consensus_state(std::string* value) {
  _impl_.proof_upgrade_consensus_state_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.proof_upgrade_consensus_state_.IsDefault()) {
          _impl_.proof_upgrade_consensus_state_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ibc.core.client.v1.MsgUpgradeClient.proof_upgrade_consensus_state)
}

// string signer = 6 [json_name = "signer"];
inline void MsgUpgradeClient::clear_signer() {
  _impl_.signer_.ClearToEmpty();
}
inline const std::string& MsgUpgradeClient::signer() const {
  // @@protoc_insertion_point(field_get:ibc.core.client.v1.MsgUpgradeClient.signer)
  return _internal_signer();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgUpgradeClient::set_signer(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.signer_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ibc.core.client.v1.MsgUpgradeClient.signer)
}
inline std::string* MsgUpgradeClient::mutable_signer() {
  std::string* _s = _internal_mutable_signer();
  // @@protoc_insertion_point(field_mutable:ibc.core.client.v1.MsgUpgradeClient.signer)
  return _s;
}
inline const std::string& MsgUpgradeClient::_internal_signer() const {
  return _impl_.signer_.Get();
}
inline void MsgUpgradeClient::_internal_set_signer(const std::string& value) {
  ;


  _impl_.signer_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgUpgradeClient::_internal_mutable_signer() {
  ;
  return _impl_.signer_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgUpgradeClient::release_signer() {
  // @@protoc_insertion_point(field_release:ibc.core.client.v1.MsgUpgradeClient.signer)
  return _impl_.signer_.Release();
}
inline void MsgUpgradeClient::set_allocated_signer(std::string* value) {
  _impl_.signer_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.signer_.IsDefault()) {
          _impl_.signer_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ibc.core.client.v1.MsgUpgradeClient.signer)
}

// -------------------------------------------------------------------

// MsgUpgradeClientResponse

// -------------------------------------------------------------------

// MsgSubmitMisbehaviour

// string client_id = 1 [json_name = "clientId"];
inline void MsgSubmitMisbehaviour::clear_client_id() {
  _impl_.client_id_.ClearToEmpty();
}
inline const std::string& MsgSubmitMisbehaviour::client_id() const {
  // @@protoc_insertion_point(field_get:ibc.core.client.v1.MsgSubmitMisbehaviour.client_id)
  return _internal_client_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgSubmitMisbehaviour::set_client_id(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.client_id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ibc.core.client.v1.MsgSubmitMisbehaviour.client_id)
}
inline std::string* MsgSubmitMisbehaviour::mutable_client_id() {
  std::string* _s = _internal_mutable_client_id();
  // @@protoc_insertion_point(field_mutable:ibc.core.client.v1.MsgSubmitMisbehaviour.client_id)
  return _s;
}
inline const std::string& MsgSubmitMisbehaviour::_internal_client_id() const {
  return _impl_.client_id_.Get();
}
inline void MsgSubmitMisbehaviour::_internal_set_client_id(const std::string& value) {
  ;


  _impl_.client_id_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgSubmitMisbehaviour::_internal_mutable_client_id() {
  ;
  return _impl_.client_id_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgSubmitMisbehaviour::release_client_id() {
  // @@protoc_insertion_point(field_release:ibc.core.client.v1.MsgSubmitMisbehaviour.client_id)
  return _impl_.client_id_.Release();
}
inline void MsgSubmitMisbehaviour::set_allocated_client_id(std::string* value) {
  _impl_.client_id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.client_id_.IsDefault()) {
          _impl_.client_id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ibc.core.client.v1.MsgSubmitMisbehaviour.client_id)
}

// .google.protobuf.Any misbehaviour = 2 [json_name = "misbehaviour"];
inline bool MsgSubmitMisbehaviour::has_misbehaviour() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.misbehaviour_ != nullptr);
  return value;
}
inline const ::PROTOBUF_NAMESPACE_ID::Any& MsgSubmitMisbehaviour::_internal_misbehaviour() const {
  const ::PROTOBUF_NAMESPACE_ID::Any* p = _impl_.misbehaviour_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Any&>(
      ::PROTOBUF_NAMESPACE_ID::_Any_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Any& MsgSubmitMisbehaviour::misbehaviour() const {
  // @@protoc_insertion_point(field_get:ibc.core.client.v1.MsgSubmitMisbehaviour.misbehaviour)
  return _internal_misbehaviour();
}
inline void MsgSubmitMisbehaviour::unsafe_arena_set_allocated_misbehaviour(
    ::PROTOBUF_NAMESPACE_ID::Any* misbehaviour) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.misbehaviour_);
  }
  _impl_.misbehaviour_ = misbehaviour;
  if (misbehaviour) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ibc.core.client.v1.MsgSubmitMisbehaviour.misbehaviour)
}
inline ::PROTOBUF_NAMESPACE_ID::Any* MsgSubmitMisbehaviour::release_misbehaviour() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::PROTOBUF_NAMESPACE_ID::Any* temp = _impl_.misbehaviour_;
  _impl_.misbehaviour_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Any* MsgSubmitMisbehaviour::unsafe_arena_release_misbehaviour() {
  // @@protoc_insertion_point(field_release:ibc.core.client.v1.MsgSubmitMisbehaviour.misbehaviour)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::PROTOBUF_NAMESPACE_ID::Any* temp = _impl_.misbehaviour_;
  _impl_.misbehaviour_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Any* MsgSubmitMisbehaviour::_internal_mutable_misbehaviour() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.misbehaviour_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Any>(GetArenaForAllocation());
    _impl_.misbehaviour_ = p;
  }
  return _impl_.misbehaviour_;
}
inline ::PROTOBUF_NAMESPACE_ID::Any* MsgSubmitMisbehaviour::mutable_misbehaviour() {
  ::PROTOBUF_NAMESPACE_ID::Any* _msg = _internal_mutable_misbehaviour();
  // @@protoc_insertion_point(field_mutable:ibc.core.client.v1.MsgSubmitMisbehaviour.misbehaviour)
  return _msg;
}
inline void MsgSubmitMisbehaviour::set_allocated_misbehaviour(::PROTOBUF_NAMESPACE_ID::Any* misbehaviour) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.misbehaviour_);
  }
  if (misbehaviour) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(misbehaviour));
    if (message_arena != submessage_arena) {
      misbehaviour = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, misbehaviour, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.misbehaviour_ = misbehaviour;
  // @@protoc_insertion_point(field_set_allocated:ibc.core.client.v1.MsgSubmitMisbehaviour.misbehaviour)
}

// string signer = 3 [json_name = "signer"];
inline void MsgSubmitMisbehaviour::clear_signer() {
  _impl_.signer_.ClearToEmpty();
}
inline const std::string& MsgSubmitMisbehaviour::signer() const {
  // @@protoc_insertion_point(field_get:ibc.core.client.v1.MsgSubmitMisbehaviour.signer)
  return _internal_signer();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgSubmitMisbehaviour::set_signer(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.signer_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ibc.core.client.v1.MsgSubmitMisbehaviour.signer)
}
inline std::string* MsgSubmitMisbehaviour::mutable_signer() {
  std::string* _s = _internal_mutable_signer();
  // @@protoc_insertion_point(field_mutable:ibc.core.client.v1.MsgSubmitMisbehaviour.signer)
  return _s;
}
inline const std::string& MsgSubmitMisbehaviour::_internal_signer() const {
  return _impl_.signer_.Get();
}
inline void MsgSubmitMisbehaviour::_internal_set_signer(const std::string& value) {
  ;


  _impl_.signer_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgSubmitMisbehaviour::_internal_mutable_signer() {
  ;
  return _impl_.signer_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgSubmitMisbehaviour::release_signer() {
  // @@protoc_insertion_point(field_release:ibc.core.client.v1.MsgSubmitMisbehaviour.signer)
  return _impl_.signer_.Release();
}
inline void MsgSubmitMisbehaviour::set_allocated_signer(std::string* value) {
  _impl_.signer_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.signer_.IsDefault()) {
          _impl_.signer_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ibc.core.client.v1.MsgSubmitMisbehaviour.signer)
}

// -------------------------------------------------------------------

// MsgSubmitMisbehaviourResponse

// -------------------------------------------------------------------

// MsgUpdateParams

// string authority = 1 [json_name = "authority"];
inline void MsgUpdateParams::clear_authority() {
  _impl_.authority_.ClearToEmpty();
}
inline const std::string& MsgUpdateParams::authority() const {
  // @@protoc_insertion_point(field_get:ibc.core.client.v1.MsgUpdateParams.authority)
  return _internal_authority();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgUpdateParams::set_authority(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.authority_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ibc.core.client.v1.MsgUpdateParams.authority)
}
inline std::string* MsgUpdateParams::mutable_authority() {
  std::string* _s = _internal_mutable_authority();
  // @@protoc_insertion_point(field_mutable:ibc.core.client.v1.MsgUpdateParams.authority)
  return _s;
}
inline const std::string& MsgUpdateParams::_internal_authority() const {
  return _impl_.authority_.Get();
}
inline void MsgUpdateParams::_internal_set_authority(const std::string& value) {
  ;


  _impl_.authority_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgUpdateParams::_internal_mutable_authority() {
  ;
  return _impl_.authority_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgUpdateParams::release_authority() {
  // @@protoc_insertion_point(field_release:ibc.core.client.v1.MsgUpdateParams.authority)
  return _impl_.authority_.Release();
}
inline void MsgUpdateParams::set_allocated_authority(std::string* value) {
  _impl_.authority_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.authority_.IsDefault()) {
          _impl_.authority_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ibc.core.client.v1.MsgUpdateParams.authority)
}

// .ibc.core.client.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];
inline bool MsgUpdateParams::has_params() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.params_ != nullptr);
  return value;
}
inline const ::ibc::core::client::v1::Params& MsgUpdateParams::_internal_params() const {
  const ::ibc::core::client::v1::Params* p = _impl_.params_;
  return p != nullptr ? *p : reinterpret_cast<const ::ibc::core::client::v1::Params&>(
      ::ibc::core::client::v1::_Params_default_instance_);
}
inline const ::ibc::core::client::v1::Params& MsgUpdateParams::params() const {
  // @@protoc_insertion_point(field_get:ibc.core.client.v1.MsgUpdateParams.params)
  return _internal_params();
}
inline void MsgUpdateParams::unsafe_arena_set_allocated_params(
    ::ibc::core::client::v1::Params* params) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.params_);
  }
  _impl_.params_ = params;
  if (params) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ibc.core.client.v1.MsgUpdateParams.params)
}
inline ::ibc::core::client::v1::Params* MsgUpdateParams::release_params() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ibc::core::client::v1::Params* temp = _impl_.params_;
  _impl_.params_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ibc::core::client::v1::Params* MsgUpdateParams::unsafe_arena_release_params() {
  // @@protoc_insertion_point(field_release:ibc.core.client.v1.MsgUpdateParams.params)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ibc::core::client::v1::Params* temp = _impl_.params_;
  _impl_.params_ = nullptr;
  return temp;
}
inline ::ibc::core::client::v1::Params* MsgUpdateParams::_internal_mutable_params() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.params_ == nullptr) {
    auto* p = CreateMaybeMessage<::ibc::core::client::v1::Params>(GetArenaForAllocation());
    _impl_.params_ = p;
  }
  return _impl_.params_;
}
inline ::ibc::core::client::v1::Params* MsgUpdateParams::mutable_params() {
  ::ibc::core::client::v1::Params* _msg = _internal_mutable_params();
  // @@protoc_insertion_point(field_mutable:ibc.core.client.v1.MsgUpdateParams.params)
  return _msg;
}
inline void MsgUpdateParams::set_allocated_params(::ibc::core::client::v1::Params* params) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.params_);
  }
  if (params) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(params));
    if (message_arena != submessage_arena) {
      params = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, params, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.params_ = params;
  // @@protoc_insertion_point(field_set_allocated:ibc.core.client.v1.MsgUpdateParams.params)
}

// -------------------------------------------------------------------

// MsgUpdateParamsResponse

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace client
}  // namespace core
}  // namespace ibc


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_ibc_2fcore_2fclient_2fv1_2ftx_2eproto_2epb_2eh
