// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ibc/core/types/v1/genesis.proto

#include "ibc/core/types/v1/genesis.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace ibc {
namespace core {
namespace types {
namespace v1 {
template <typename>
PROTOBUF_CONSTEXPR GenesisState::GenesisState(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.client_genesis_)*/nullptr
  , /*decltype(_impl_.connection_genesis_)*/nullptr
  , /*decltype(_impl_.channel_genesis_)*/nullptr} {}
struct GenesisStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GenesisStateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GenesisStateDefaultTypeInternal() {}
  union {
    GenesisState _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GenesisStateDefaultTypeInternal _GenesisState_default_instance_;
}  // namespace v1
}  // namespace types
}  // namespace core
}  // namespace ibc
static ::_pb::Metadata file_level_metadata_ibc_2fcore_2ftypes_2fv1_2fgenesis_2eproto[1];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_ibc_2fcore_2ftypes_2fv1_2fgenesis_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_ibc_2fcore_2ftypes_2fv1_2fgenesis_2eproto = nullptr;
const ::uint32_t TableStruct_ibc_2fcore_2ftypes_2fv1_2fgenesis_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::ibc::core::types::v1::GenesisState, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::types::v1::GenesisState, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ibc::core::types::v1::GenesisState, _impl_.client_genesis_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::types::v1::GenesisState, _impl_.connection_genesis_),
    PROTOBUF_FIELD_OFFSET(::ibc::core::types::v1::GenesisState, _impl_.channel_genesis_),
    0,
    1,
    2,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, 11, -1, sizeof(::ibc::core::types::v1::GenesisState)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::ibc::core::types::v1::_GenesisState_default_instance_._instance,
};
const char descriptor_table_protodef_ibc_2fcore_2ftypes_2fv1_2fgenesis_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\037ibc/core/types/v1/genesis.proto\022\021ibc.c"
    "ore.types.v1\032\024gogoproto/gogo.proto\032 ibc/"
    "core/client/v1/genesis.proto\032$ibc/core/c"
    "onnection/v1/genesis.proto\032!ibc/core/cha"
    "nnel/v1/genesis.proto\"\212\002\n\014GenesisState\022M"
    "\n\016client_genesis\030\001 \001(\0132 .ibc.core.client"
    ".v1.GenesisStateB\004\310\336\037\000R\rclientGenesis\022Y\n"
    "\022connection_genesis\030\002 \001(\0132$.ibc.core.con"
    "nection.v1.GenesisStateB\004\310\336\037\000R\021connectio"
    "nGenesis\022P\n\017channel_genesis\030\003 \001(\0132!.ibc."
    "core.channel.v1.GenesisStateB\004\310\336\037\000R\016chan"
    "nelGenesisB\274\001\n\025com.ibc.core.types.v1B\014Ge"
    "nesisProtoP\001Z.github.com/cosmos/ibc-go/v"
    "7/modules/core/types\242\002\003ICT\252\002\021Ibc.Core.Ty"
    "pes.V1\312\002\021Ibc\\Core\\Types\\V1\342\002\035Ibc\\Core\\Ty"
    "pes\\V1\\GPBMetadata\352\002\024Ibc::Core::Types::V"
    "1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_ibc_2fcore_2ftypes_2fv1_2fgenesis_2eproto_deps[4] =
    {
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_ibc_2fcore_2fchannel_2fv1_2fgenesis_2eproto,
        &::descriptor_table_ibc_2fcore_2fclient_2fv1_2fgenesis_2eproto,
        &::descriptor_table_ibc_2fcore_2fconnection_2fv1_2fgenesis_2eproto,
};
static ::absl::once_flag descriptor_table_ibc_2fcore_2ftypes_2fv1_2fgenesis_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_ibc_2fcore_2ftypes_2fv1_2fgenesis_2eproto = {
    false,
    false,
    649,
    descriptor_table_protodef_ibc_2fcore_2ftypes_2fv1_2fgenesis_2eproto,
    "ibc/core/types/v1/genesis.proto",
    &descriptor_table_ibc_2fcore_2ftypes_2fv1_2fgenesis_2eproto_once,
    descriptor_table_ibc_2fcore_2ftypes_2fv1_2fgenesis_2eproto_deps,
    4,
    1,
    schemas,
    file_default_instances,
    TableStruct_ibc_2fcore_2ftypes_2fv1_2fgenesis_2eproto::offsets,
    file_level_metadata_ibc_2fcore_2ftypes_2fv1_2fgenesis_2eproto,
    file_level_enum_descriptors_ibc_2fcore_2ftypes_2fv1_2fgenesis_2eproto,
    file_level_service_descriptors_ibc_2fcore_2ftypes_2fv1_2fgenesis_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_ibc_2fcore_2ftypes_2fv1_2fgenesis_2eproto_getter() {
  return &descriptor_table_ibc_2fcore_2ftypes_2fv1_2fgenesis_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_ibc_2fcore_2ftypes_2fv1_2fgenesis_2eproto(&descriptor_table_ibc_2fcore_2ftypes_2fv1_2fgenesis_2eproto);
namespace ibc {
namespace core {
namespace types {
namespace v1 {
// ===================================================================

class GenesisState::_Internal {
 public:
  using HasBits = decltype(std::declval<GenesisState>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GenesisState, _impl_._has_bits_);
  static const ::ibc::core::client::v1::GenesisState& client_genesis(const GenesisState* msg);
  static void set_has_client_genesis(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::ibc::core::connection::v1::GenesisState& connection_genesis(const GenesisState* msg);
  static void set_has_connection_genesis(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::ibc::core::channel::v1::GenesisState& channel_genesis(const GenesisState* msg);
  static void set_has_channel_genesis(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::ibc::core::client::v1::GenesisState&
GenesisState::_Internal::client_genesis(const GenesisState* msg) {
  return *msg->_impl_.client_genesis_;
}
const ::ibc::core::connection::v1::GenesisState&
GenesisState::_Internal::connection_genesis(const GenesisState* msg) {
  return *msg->_impl_.connection_genesis_;
}
const ::ibc::core::channel::v1::GenesisState&
GenesisState::_Internal::channel_genesis(const GenesisState* msg) {
  return *msg->_impl_.channel_genesis_;
}
void GenesisState::clear_client_genesis() {
  if (_impl_.client_genesis_ != nullptr) _impl_.client_genesis_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void GenesisState::clear_connection_genesis() {
  if (_impl_.connection_genesis_ != nullptr) _impl_.connection_genesis_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void GenesisState::clear_channel_genesis() {
  if (_impl_.channel_genesis_ != nullptr) _impl_.channel_genesis_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
GenesisState::GenesisState(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.core.types.v1.GenesisState)
}
GenesisState::GenesisState(const GenesisState& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GenesisState* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.client_genesis_){nullptr}
    , decltype(_impl_.connection_genesis_){nullptr}
    , decltype(_impl_.channel_genesis_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.client_genesis_ = new ::ibc::core::client::v1::GenesisState(*from._impl_.client_genesis_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.connection_genesis_ = new ::ibc::core::connection::v1::GenesisState(*from._impl_.connection_genesis_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.channel_genesis_ = new ::ibc::core::channel::v1::GenesisState(*from._impl_.channel_genesis_);
  }
  // @@protoc_insertion_point(copy_constructor:ibc.core.types.v1.GenesisState)
}

inline void GenesisState::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.client_genesis_){nullptr}
    , decltype(_impl_.connection_genesis_){nullptr}
    , decltype(_impl_.channel_genesis_){nullptr}
  };
}

GenesisState::~GenesisState() {
  // @@protoc_insertion_point(destructor:ibc.core.types.v1.GenesisState)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GenesisState::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.client_genesis_;
  if (this != internal_default_instance()) delete _impl_.connection_genesis_;
  if (this != internal_default_instance()) delete _impl_.channel_genesis_;
}

void GenesisState::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GenesisState::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.core.types.v1.GenesisState)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.client_genesis_ != nullptr);
      _impl_.client_genesis_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.connection_genesis_ != nullptr);
      _impl_.connection_genesis_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.channel_genesis_ != nullptr);
      _impl_.channel_genesis_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GenesisState::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ibc.core.client.v1.GenesisState client_genesis = 1 [json_name = "clientGenesis", (.gogoproto.nullable) = false];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_client_genesis(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .ibc.core.connection.v1.GenesisState connection_genesis = 2 [json_name = "connectionGenesis", (.gogoproto.nullable) = false];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_connection_genesis(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .ibc.core.channel.v1.GenesisState channel_genesis = 3 [json_name = "channelGenesis", (.gogoproto.nullable) = false];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_channel_genesis(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* GenesisState::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ibc.core.types.v1.GenesisState)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .ibc.core.client.v1.GenesisState client_genesis = 1 [json_name = "clientGenesis", (.gogoproto.nullable) = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::client_genesis(this),
        _Internal::client_genesis(this).GetCachedSize(), target, stream);
  }

  // .ibc.core.connection.v1.GenesisState connection_genesis = 2 [json_name = "connectionGenesis", (.gogoproto.nullable) = false];
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::connection_genesis(this),
        _Internal::connection_genesis(this).GetCachedSize(), target, stream);
  }

  // .ibc.core.channel.v1.GenesisState channel_genesis = 3 [json_name = "channelGenesis", (.gogoproto.nullable) = false];
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::channel_genesis(this),
        _Internal::channel_genesis(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ibc.core.types.v1.GenesisState)
  return target;
}

::size_t GenesisState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ibc.core.types.v1.GenesisState)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // .ibc.core.client.v1.GenesisState client_genesis = 1 [json_name = "clientGenesis", (.gogoproto.nullable) = false];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.client_genesis_);
    }

    // .ibc.core.connection.v1.GenesisState connection_genesis = 2 [json_name = "connectionGenesis", (.gogoproto.nullable) = false];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.connection_genesis_);
    }

    // .ibc.core.channel.v1.GenesisState channel_genesis = 3 [json_name = "channelGenesis", (.gogoproto.nullable) = false];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.channel_genesis_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GenesisState::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GenesisState::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GenesisState::GetClassData() const { return &_class_data_; }


void GenesisState::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GenesisState*>(&to_msg);
  auto& from = static_cast<const GenesisState&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.core.types.v1.GenesisState)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_client_genesis()->::ibc::core::client::v1::GenesisState::MergeFrom(
          from._internal_client_genesis());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_connection_genesis()->::ibc::core::connection::v1::GenesisState::MergeFrom(
          from._internal_connection_genesis());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_channel_genesis()->::ibc::core::channel::v1::GenesisState::MergeFrom(
          from._internal_channel_genesis());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GenesisState::CopyFrom(const GenesisState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.core.types.v1.GenesisState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenesisState::IsInitialized() const {
  return true;
}

void GenesisState::InternalSwap(GenesisState* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.channel_genesis_)
      + sizeof(GenesisState::_impl_.channel_genesis_)
      - PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.client_genesis_)>(
          reinterpret_cast<char*>(&_impl_.client_genesis_),
          reinterpret_cast<char*>(&other->_impl_.client_genesis_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GenesisState::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ibc_2fcore_2ftypes_2fv1_2fgenesis_2eproto_getter, &descriptor_table_ibc_2fcore_2ftypes_2fv1_2fgenesis_2eproto_once,
      file_level_metadata_ibc_2fcore_2ftypes_2fv1_2fgenesis_2eproto[0]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace types
}  // namespace core
}  // namespace ibc
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ibc::core::types::v1::GenesisState*
Arena::CreateMaybeMessage< ::ibc::core::types::v1::GenesisState >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ibc::core::types::v1::GenesisState >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
