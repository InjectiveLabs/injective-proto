// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ibc/core/channel/v1/genesis.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ibc_2fcore_2fchannel_2fv1_2fgenesis_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_ibc_2fcore_2fchannel_2fv1_2fgenesis_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4023000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4023004 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "gogoproto/gogo.pb.h"
#include "ibc/core/channel/v1/channel.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_ibc_2fcore_2fchannel_2fv1_2fgenesis_2eproto

PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ibc_2fcore_2fchannel_2fv1_2fgenesis_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable
    descriptor_table_ibc_2fcore_2fchannel_2fv1_2fgenesis_2eproto;
namespace ibc {
namespace core {
namespace channel {
namespace v1 {
class GenesisState;
struct GenesisStateDefaultTypeInternal;
extern GenesisStateDefaultTypeInternal _GenesisState_default_instance_;
class PacketSequence;
struct PacketSequenceDefaultTypeInternal;
extern PacketSequenceDefaultTypeInternal _PacketSequence_default_instance_;
}  // namespace v1
}  // namespace channel
}  // namespace core
}  // namespace ibc
PROTOBUF_NAMESPACE_OPEN
template <>
::ibc::core::channel::v1::GenesisState* Arena::CreateMaybeMessage<::ibc::core::channel::v1::GenesisState>(Arena*);
template <>
::ibc::core::channel::v1::PacketSequence* Arena::CreateMaybeMessage<::ibc::core::channel::v1::PacketSequence>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

namespace ibc {
namespace core {
namespace channel {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class GenesisState final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ibc.core.channel.v1.GenesisState) */ {
 public:
  inline GenesisState() : GenesisState(nullptr) {}
  ~GenesisState() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GenesisState(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GenesisState(const GenesisState& from);
  GenesisState(GenesisState&& from) noexcept
    : GenesisState() {
    *this = ::std::move(from);
  }

  inline GenesisState& operator=(const GenesisState& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenesisState& operator=(GenesisState&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GenesisState& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenesisState* internal_default_instance() {
    return reinterpret_cast<const GenesisState*>(
               &_GenesisState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(GenesisState& a, GenesisState& b) {
    a.Swap(&b);
  }
  inline void Swap(GenesisState* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenesisState* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GenesisState* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GenesisState>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GenesisState& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GenesisState& from) {
    GenesisState::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenesisState* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ibc.core.channel.v1.GenesisState";
  }
  protected:
  explicit GenesisState(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChannelsFieldNumber = 1,
    kAcknowledgementsFieldNumber = 2,
    kCommitmentsFieldNumber = 3,
    kReceiptsFieldNumber = 4,
    kSendSequencesFieldNumber = 5,
    kRecvSequencesFieldNumber = 6,
    kAckSequencesFieldNumber = 7,
    kNextChannelSequenceFieldNumber = 8,
  };
  // repeated .ibc.core.channel.v1.IdentifiedChannel channels = 1 [json_name = "channels", (.gogoproto.nullable) = false, (.gogoproto.casttype) = "IdentifiedChannel"];
  int channels_size() const;
  private:
  int _internal_channels_size() const;

  public:
  void clear_channels() ;
  ::ibc::core::channel::v1::IdentifiedChannel* mutable_channels(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ibc::core::channel::v1::IdentifiedChannel >*
      mutable_channels();
  private:
  const ::ibc::core::channel::v1::IdentifiedChannel& _internal_channels(int index) const;
  ::ibc::core::channel::v1::IdentifiedChannel* _internal_add_channels();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::ibc::core::channel::v1::IdentifiedChannel>& _internal_channels() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::ibc::core::channel::v1::IdentifiedChannel>* _internal_mutable_channels();
  public:
  const ::ibc::core::channel::v1::IdentifiedChannel& channels(int index) const;
  ::ibc::core::channel::v1::IdentifiedChannel* add_channels();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ibc::core::channel::v1::IdentifiedChannel >&
      channels() const;
  // repeated .ibc.core.channel.v1.PacketState acknowledgements = 2 [json_name = "acknowledgements", (.gogoproto.nullable) = false];
  int acknowledgements_size() const;
  private:
  int _internal_acknowledgements_size() const;

  public:
  void clear_acknowledgements() ;
  ::ibc::core::channel::v1::PacketState* mutable_acknowledgements(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ibc::core::channel::v1::PacketState >*
      mutable_acknowledgements();
  private:
  const ::ibc::core::channel::v1::PacketState& _internal_acknowledgements(int index) const;
  ::ibc::core::channel::v1::PacketState* _internal_add_acknowledgements();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::ibc::core::channel::v1::PacketState>& _internal_acknowledgements() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::ibc::core::channel::v1::PacketState>* _internal_mutable_acknowledgements();
  public:
  const ::ibc::core::channel::v1::PacketState& acknowledgements(int index) const;
  ::ibc::core::channel::v1::PacketState* add_acknowledgements();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ibc::core::channel::v1::PacketState >&
      acknowledgements() const;
  // repeated .ibc.core.channel.v1.PacketState commitments = 3 [json_name = "commitments", (.gogoproto.nullable) = false];
  int commitments_size() const;
  private:
  int _internal_commitments_size() const;

  public:
  void clear_commitments() ;
  ::ibc::core::channel::v1::PacketState* mutable_commitments(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ibc::core::channel::v1::PacketState >*
      mutable_commitments();
  private:
  const ::ibc::core::channel::v1::PacketState& _internal_commitments(int index) const;
  ::ibc::core::channel::v1::PacketState* _internal_add_commitments();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::ibc::core::channel::v1::PacketState>& _internal_commitments() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::ibc::core::channel::v1::PacketState>* _internal_mutable_commitments();
  public:
  const ::ibc::core::channel::v1::PacketState& commitments(int index) const;
  ::ibc::core::channel::v1::PacketState* add_commitments();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ibc::core::channel::v1::PacketState >&
      commitments() const;
  // repeated .ibc.core.channel.v1.PacketState receipts = 4 [json_name = "receipts", (.gogoproto.nullable) = false];
  int receipts_size() const;
  private:
  int _internal_receipts_size() const;

  public:
  void clear_receipts() ;
  ::ibc::core::channel::v1::PacketState* mutable_receipts(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ibc::core::channel::v1::PacketState >*
      mutable_receipts();
  private:
  const ::ibc::core::channel::v1::PacketState& _internal_receipts(int index) const;
  ::ibc::core::channel::v1::PacketState* _internal_add_receipts();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::ibc::core::channel::v1::PacketState>& _internal_receipts() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::ibc::core::channel::v1::PacketState>* _internal_mutable_receipts();
  public:
  const ::ibc::core::channel::v1::PacketState& receipts(int index) const;
  ::ibc::core::channel::v1::PacketState* add_receipts();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ibc::core::channel::v1::PacketState >&
      receipts() const;
  // repeated .ibc.core.channel.v1.PacketSequence send_sequences = 5 [json_name = "sendSequences", (.gogoproto.nullable) = false];
  int send_sequences_size() const;
  private:
  int _internal_send_sequences_size() const;

  public:
  void clear_send_sequences() ;
  ::ibc::core::channel::v1::PacketSequence* mutable_send_sequences(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ibc::core::channel::v1::PacketSequence >*
      mutable_send_sequences();
  private:
  const ::ibc::core::channel::v1::PacketSequence& _internal_send_sequences(int index) const;
  ::ibc::core::channel::v1::PacketSequence* _internal_add_send_sequences();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::ibc::core::channel::v1::PacketSequence>& _internal_send_sequences() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::ibc::core::channel::v1::PacketSequence>* _internal_mutable_send_sequences();
  public:
  const ::ibc::core::channel::v1::PacketSequence& send_sequences(int index) const;
  ::ibc::core::channel::v1::PacketSequence* add_send_sequences();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ibc::core::channel::v1::PacketSequence >&
      send_sequences() const;
  // repeated .ibc.core.channel.v1.PacketSequence recv_sequences = 6 [json_name = "recvSequences", (.gogoproto.nullable) = false];
  int recv_sequences_size() const;
  private:
  int _internal_recv_sequences_size() const;

  public:
  void clear_recv_sequences() ;
  ::ibc::core::channel::v1::PacketSequence* mutable_recv_sequences(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ibc::core::channel::v1::PacketSequence >*
      mutable_recv_sequences();
  private:
  const ::ibc::core::channel::v1::PacketSequence& _internal_recv_sequences(int index) const;
  ::ibc::core::channel::v1::PacketSequence* _internal_add_recv_sequences();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::ibc::core::channel::v1::PacketSequence>& _internal_recv_sequences() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::ibc::core::channel::v1::PacketSequence>* _internal_mutable_recv_sequences();
  public:
  const ::ibc::core::channel::v1::PacketSequence& recv_sequences(int index) const;
  ::ibc::core::channel::v1::PacketSequence* add_recv_sequences();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ibc::core::channel::v1::PacketSequence >&
      recv_sequences() const;
  // repeated .ibc.core.channel.v1.PacketSequence ack_sequences = 7 [json_name = "ackSequences", (.gogoproto.nullable) = false];
  int ack_sequences_size() const;
  private:
  int _internal_ack_sequences_size() const;

  public:
  void clear_ack_sequences() ;
  ::ibc::core::channel::v1::PacketSequence* mutable_ack_sequences(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ibc::core::channel::v1::PacketSequence >*
      mutable_ack_sequences();
  private:
  const ::ibc::core::channel::v1::PacketSequence& _internal_ack_sequences(int index) const;
  ::ibc::core::channel::v1::PacketSequence* _internal_add_ack_sequences();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::ibc::core::channel::v1::PacketSequence>& _internal_ack_sequences() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::ibc::core::channel::v1::PacketSequence>* _internal_mutable_ack_sequences();
  public:
  const ::ibc::core::channel::v1::PacketSequence& ack_sequences(int index) const;
  ::ibc::core::channel::v1::PacketSequence* add_ack_sequences();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ibc::core::channel::v1::PacketSequence >&
      ack_sequences() const;
  // uint64 next_channel_sequence = 8 [json_name = "nextChannelSequence"];
  void clear_next_channel_sequence() ;
  ::uint64_t next_channel_sequence() const;
  void set_next_channel_sequence(::uint64_t value);

  private:
  ::uint64_t _internal_next_channel_sequence() const;
  void _internal_set_next_channel_sequence(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:ibc.core.channel.v1.GenesisState)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ibc::core::channel::v1::IdentifiedChannel > channels_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ibc::core::channel::v1::PacketState > acknowledgements_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ibc::core::channel::v1::PacketState > commitments_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ibc::core::channel::v1::PacketState > receipts_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ibc::core::channel::v1::PacketSequence > send_sequences_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ibc::core::channel::v1::PacketSequence > recv_sequences_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ibc::core::channel::v1::PacketSequence > ack_sequences_;
    ::uint64_t next_channel_sequence_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ibc_2fcore_2fchannel_2fv1_2fgenesis_2eproto;
};// -------------------------------------------------------------------

class PacketSequence final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ibc.core.channel.v1.PacketSequence) */ {
 public:
  inline PacketSequence() : PacketSequence(nullptr) {}
  ~PacketSequence() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PacketSequence(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PacketSequence(const PacketSequence& from);
  PacketSequence(PacketSequence&& from) noexcept
    : PacketSequence() {
    *this = ::std::move(from);
  }

  inline PacketSequence& operator=(const PacketSequence& from) {
    CopyFrom(from);
    return *this;
  }
  inline PacketSequence& operator=(PacketSequence&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PacketSequence& default_instance() {
    return *internal_default_instance();
  }
  static inline const PacketSequence* internal_default_instance() {
    return reinterpret_cast<const PacketSequence*>(
               &_PacketSequence_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(PacketSequence& a, PacketSequence& b) {
    a.Swap(&b);
  }
  inline void Swap(PacketSequence* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PacketSequence* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PacketSequence* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PacketSequence>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PacketSequence& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PacketSequence& from) {
    PacketSequence::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PacketSequence* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ibc.core.channel.v1.PacketSequence";
  }
  protected:
  explicit PacketSequence(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPortIdFieldNumber = 1,
    kChannelIdFieldNumber = 2,
    kSequenceFieldNumber = 3,
  };
  // string port_id = 1 [json_name = "portId"];
  void clear_port_id() ;
  const std::string& port_id() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_port_id(Arg_&& arg, Args_... args);
  std::string* mutable_port_id();
  PROTOBUF_NODISCARD std::string* release_port_id();
  void set_allocated_port_id(std::string* ptr);

  private:
  const std::string& _internal_port_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_port_id(
      const std::string& value);
  std::string* _internal_mutable_port_id();

  public:
  // string channel_id = 2 [json_name = "channelId"];
  void clear_channel_id() ;
  const std::string& channel_id() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_channel_id(Arg_&& arg, Args_... args);
  std::string* mutable_channel_id();
  PROTOBUF_NODISCARD std::string* release_channel_id();
  void set_allocated_channel_id(std::string* ptr);

  private:
  const std::string& _internal_channel_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_channel_id(
      const std::string& value);
  std::string* _internal_mutable_channel_id();

  public:
  // uint64 sequence = 3 [json_name = "sequence"];
  void clear_sequence() ;
  ::uint64_t sequence() const;
  void set_sequence(::uint64_t value);

  private:
  ::uint64_t _internal_sequence() const;
  void _internal_set_sequence(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:ibc.core.channel.v1.PacketSequence)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr port_id_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr channel_id_;
    ::uint64_t sequence_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ibc_2fcore_2fchannel_2fv1_2fgenesis_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// GenesisState

// repeated .ibc.core.channel.v1.IdentifiedChannel channels = 1 [json_name = "channels", (.gogoproto.nullable) = false, (.gogoproto.casttype) = "IdentifiedChannel"];
inline int GenesisState::_internal_channels_size() const {
  return _impl_.channels_.size();
}
inline int GenesisState::channels_size() const {
  return _internal_channels_size();
}
inline ::ibc::core::channel::v1::IdentifiedChannel* GenesisState::mutable_channels(int index) {
  // @@protoc_insertion_point(field_mutable:ibc.core.channel.v1.GenesisState.channels)
  return _internal_mutable_channels()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ibc::core::channel::v1::IdentifiedChannel >*
GenesisState::mutable_channels() {
  // @@protoc_insertion_point(field_mutable_list:ibc.core.channel.v1.GenesisState.channels)
  return _internal_mutable_channels();
}
inline const ::ibc::core::channel::v1::IdentifiedChannel& GenesisState::_internal_channels(int index) const {
  return _internal_channels().Get(index);
}
inline const ::ibc::core::channel::v1::IdentifiedChannel& GenesisState::channels(int index) const {
  // @@protoc_insertion_point(field_get:ibc.core.channel.v1.GenesisState.channels)
  return _internal_channels(index);
}
inline ::ibc::core::channel::v1::IdentifiedChannel* GenesisState::_internal_add_channels() {
  return _internal_mutable_channels()->Add();
}
inline ::ibc::core::channel::v1::IdentifiedChannel* GenesisState::add_channels() {
  ::ibc::core::channel::v1::IdentifiedChannel* _add = _internal_add_channels();
  // @@protoc_insertion_point(field_add:ibc.core.channel.v1.GenesisState.channels)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ibc::core::channel::v1::IdentifiedChannel >&
GenesisState::channels() const {
  // @@protoc_insertion_point(field_list:ibc.core.channel.v1.GenesisState.channels)
  return _internal_channels();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::ibc::core::channel::v1::IdentifiedChannel>&
GenesisState::_internal_channels() const {
  return _impl_.channels_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::ibc::core::channel::v1::IdentifiedChannel>*
GenesisState::_internal_mutable_channels() {
  return &_impl_.channels_;
}

// repeated .ibc.core.channel.v1.PacketState acknowledgements = 2 [json_name = "acknowledgements", (.gogoproto.nullable) = false];
inline int GenesisState::_internal_acknowledgements_size() const {
  return _impl_.acknowledgements_.size();
}
inline int GenesisState::acknowledgements_size() const {
  return _internal_acknowledgements_size();
}
inline ::ibc::core::channel::v1::PacketState* GenesisState::mutable_acknowledgements(int index) {
  // @@protoc_insertion_point(field_mutable:ibc.core.channel.v1.GenesisState.acknowledgements)
  return _internal_mutable_acknowledgements()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ibc::core::channel::v1::PacketState >*
GenesisState::mutable_acknowledgements() {
  // @@protoc_insertion_point(field_mutable_list:ibc.core.channel.v1.GenesisState.acknowledgements)
  return _internal_mutable_acknowledgements();
}
inline const ::ibc::core::channel::v1::PacketState& GenesisState::_internal_acknowledgements(int index) const {
  return _internal_acknowledgements().Get(index);
}
inline const ::ibc::core::channel::v1::PacketState& GenesisState::acknowledgements(int index) const {
  // @@protoc_insertion_point(field_get:ibc.core.channel.v1.GenesisState.acknowledgements)
  return _internal_acknowledgements(index);
}
inline ::ibc::core::channel::v1::PacketState* GenesisState::_internal_add_acknowledgements() {
  return _internal_mutable_acknowledgements()->Add();
}
inline ::ibc::core::channel::v1::PacketState* GenesisState::add_acknowledgements() {
  ::ibc::core::channel::v1::PacketState* _add = _internal_add_acknowledgements();
  // @@protoc_insertion_point(field_add:ibc.core.channel.v1.GenesisState.acknowledgements)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ibc::core::channel::v1::PacketState >&
GenesisState::acknowledgements() const {
  // @@protoc_insertion_point(field_list:ibc.core.channel.v1.GenesisState.acknowledgements)
  return _internal_acknowledgements();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::ibc::core::channel::v1::PacketState>&
GenesisState::_internal_acknowledgements() const {
  return _impl_.acknowledgements_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::ibc::core::channel::v1::PacketState>*
GenesisState::_internal_mutable_acknowledgements() {
  return &_impl_.acknowledgements_;
}

// repeated .ibc.core.channel.v1.PacketState commitments = 3 [json_name = "commitments", (.gogoproto.nullable) = false];
inline int GenesisState::_internal_commitments_size() const {
  return _impl_.commitments_.size();
}
inline int GenesisState::commitments_size() const {
  return _internal_commitments_size();
}
inline ::ibc::core::channel::v1::PacketState* GenesisState::mutable_commitments(int index) {
  // @@protoc_insertion_point(field_mutable:ibc.core.channel.v1.GenesisState.commitments)
  return _internal_mutable_commitments()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ibc::core::channel::v1::PacketState >*
GenesisState::mutable_commitments() {
  // @@protoc_insertion_point(field_mutable_list:ibc.core.channel.v1.GenesisState.commitments)
  return _internal_mutable_commitments();
}
inline const ::ibc::core::channel::v1::PacketState& GenesisState::_internal_commitments(int index) const {
  return _internal_commitments().Get(index);
}
inline const ::ibc::core::channel::v1::PacketState& GenesisState::commitments(int index) const {
  // @@protoc_insertion_point(field_get:ibc.core.channel.v1.GenesisState.commitments)
  return _internal_commitments(index);
}
inline ::ibc::core::channel::v1::PacketState* GenesisState::_internal_add_commitments() {
  return _internal_mutable_commitments()->Add();
}
inline ::ibc::core::channel::v1::PacketState* GenesisState::add_commitments() {
  ::ibc::core::channel::v1::PacketState* _add = _internal_add_commitments();
  // @@protoc_insertion_point(field_add:ibc.core.channel.v1.GenesisState.commitments)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ibc::core::channel::v1::PacketState >&
GenesisState::commitments() const {
  // @@protoc_insertion_point(field_list:ibc.core.channel.v1.GenesisState.commitments)
  return _internal_commitments();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::ibc::core::channel::v1::PacketState>&
GenesisState::_internal_commitments() const {
  return _impl_.commitments_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::ibc::core::channel::v1::PacketState>*
GenesisState::_internal_mutable_commitments() {
  return &_impl_.commitments_;
}

// repeated .ibc.core.channel.v1.PacketState receipts = 4 [json_name = "receipts", (.gogoproto.nullable) = false];
inline int GenesisState::_internal_receipts_size() const {
  return _impl_.receipts_.size();
}
inline int GenesisState::receipts_size() const {
  return _internal_receipts_size();
}
inline ::ibc::core::channel::v1::PacketState* GenesisState::mutable_receipts(int index) {
  // @@protoc_insertion_point(field_mutable:ibc.core.channel.v1.GenesisState.receipts)
  return _internal_mutable_receipts()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ibc::core::channel::v1::PacketState >*
GenesisState::mutable_receipts() {
  // @@protoc_insertion_point(field_mutable_list:ibc.core.channel.v1.GenesisState.receipts)
  return _internal_mutable_receipts();
}
inline const ::ibc::core::channel::v1::PacketState& GenesisState::_internal_receipts(int index) const {
  return _internal_receipts().Get(index);
}
inline const ::ibc::core::channel::v1::PacketState& GenesisState::receipts(int index) const {
  // @@protoc_insertion_point(field_get:ibc.core.channel.v1.GenesisState.receipts)
  return _internal_receipts(index);
}
inline ::ibc::core::channel::v1::PacketState* GenesisState::_internal_add_receipts() {
  return _internal_mutable_receipts()->Add();
}
inline ::ibc::core::channel::v1::PacketState* GenesisState::add_receipts() {
  ::ibc::core::channel::v1::PacketState* _add = _internal_add_receipts();
  // @@protoc_insertion_point(field_add:ibc.core.channel.v1.GenesisState.receipts)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ibc::core::channel::v1::PacketState >&
GenesisState::receipts() const {
  // @@protoc_insertion_point(field_list:ibc.core.channel.v1.GenesisState.receipts)
  return _internal_receipts();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::ibc::core::channel::v1::PacketState>&
GenesisState::_internal_receipts() const {
  return _impl_.receipts_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::ibc::core::channel::v1::PacketState>*
GenesisState::_internal_mutable_receipts() {
  return &_impl_.receipts_;
}

// repeated .ibc.core.channel.v1.PacketSequence send_sequences = 5 [json_name = "sendSequences", (.gogoproto.nullable) = false];
inline int GenesisState::_internal_send_sequences_size() const {
  return _impl_.send_sequences_.size();
}
inline int GenesisState::send_sequences_size() const {
  return _internal_send_sequences_size();
}
inline void GenesisState::clear_send_sequences() {
  _internal_mutable_send_sequences()->Clear();
}
inline ::ibc::core::channel::v1::PacketSequence* GenesisState::mutable_send_sequences(int index) {
  // @@protoc_insertion_point(field_mutable:ibc.core.channel.v1.GenesisState.send_sequences)
  return _internal_mutable_send_sequences()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ibc::core::channel::v1::PacketSequence >*
GenesisState::mutable_send_sequences() {
  // @@protoc_insertion_point(field_mutable_list:ibc.core.channel.v1.GenesisState.send_sequences)
  return _internal_mutable_send_sequences();
}
inline const ::ibc::core::channel::v1::PacketSequence& GenesisState::_internal_send_sequences(int index) const {
  return _internal_send_sequences().Get(index);
}
inline const ::ibc::core::channel::v1::PacketSequence& GenesisState::send_sequences(int index) const {
  // @@protoc_insertion_point(field_get:ibc.core.channel.v1.GenesisState.send_sequences)
  return _internal_send_sequences(index);
}
inline ::ibc::core::channel::v1::PacketSequence* GenesisState::_internal_add_send_sequences() {
  return _internal_mutable_send_sequences()->Add();
}
inline ::ibc::core::channel::v1::PacketSequence* GenesisState::add_send_sequences() {
  ::ibc::core::channel::v1::PacketSequence* _add = _internal_add_send_sequences();
  // @@protoc_insertion_point(field_add:ibc.core.channel.v1.GenesisState.send_sequences)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ibc::core::channel::v1::PacketSequence >&
GenesisState::send_sequences() const {
  // @@protoc_insertion_point(field_list:ibc.core.channel.v1.GenesisState.send_sequences)
  return _internal_send_sequences();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::ibc::core::channel::v1::PacketSequence>&
GenesisState::_internal_send_sequences() const {
  return _impl_.send_sequences_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::ibc::core::channel::v1::PacketSequence>*
GenesisState::_internal_mutable_send_sequences() {
  return &_impl_.send_sequences_;
}

// repeated .ibc.core.channel.v1.PacketSequence recv_sequences = 6 [json_name = "recvSequences", (.gogoproto.nullable) = false];
inline int GenesisState::_internal_recv_sequences_size() const {
  return _impl_.recv_sequences_.size();
}
inline int GenesisState::recv_sequences_size() const {
  return _internal_recv_sequences_size();
}
inline void GenesisState::clear_recv_sequences() {
  _internal_mutable_recv_sequences()->Clear();
}
inline ::ibc::core::channel::v1::PacketSequence* GenesisState::mutable_recv_sequences(int index) {
  // @@protoc_insertion_point(field_mutable:ibc.core.channel.v1.GenesisState.recv_sequences)
  return _internal_mutable_recv_sequences()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ibc::core::channel::v1::PacketSequence >*
GenesisState::mutable_recv_sequences() {
  // @@protoc_insertion_point(field_mutable_list:ibc.core.channel.v1.GenesisState.recv_sequences)
  return _internal_mutable_recv_sequences();
}
inline const ::ibc::core::channel::v1::PacketSequence& GenesisState::_internal_recv_sequences(int index) const {
  return _internal_recv_sequences().Get(index);
}
inline const ::ibc::core::channel::v1::PacketSequence& GenesisState::recv_sequences(int index) const {
  // @@protoc_insertion_point(field_get:ibc.core.channel.v1.GenesisState.recv_sequences)
  return _internal_recv_sequences(index);
}
inline ::ibc::core::channel::v1::PacketSequence* GenesisState::_internal_add_recv_sequences() {
  return _internal_mutable_recv_sequences()->Add();
}
inline ::ibc::core::channel::v1::PacketSequence* GenesisState::add_recv_sequences() {
  ::ibc::core::channel::v1::PacketSequence* _add = _internal_add_recv_sequences();
  // @@protoc_insertion_point(field_add:ibc.core.channel.v1.GenesisState.recv_sequences)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ibc::core::channel::v1::PacketSequence >&
GenesisState::recv_sequences() const {
  // @@protoc_insertion_point(field_list:ibc.core.channel.v1.GenesisState.recv_sequences)
  return _internal_recv_sequences();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::ibc::core::channel::v1::PacketSequence>&
GenesisState::_internal_recv_sequences() const {
  return _impl_.recv_sequences_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::ibc::core::channel::v1::PacketSequence>*
GenesisState::_internal_mutable_recv_sequences() {
  return &_impl_.recv_sequences_;
}

// repeated .ibc.core.channel.v1.PacketSequence ack_sequences = 7 [json_name = "ackSequences", (.gogoproto.nullable) = false];
inline int GenesisState::_internal_ack_sequences_size() const {
  return _impl_.ack_sequences_.size();
}
inline int GenesisState::ack_sequences_size() const {
  return _internal_ack_sequences_size();
}
inline void GenesisState::clear_ack_sequences() {
  _internal_mutable_ack_sequences()->Clear();
}
inline ::ibc::core::channel::v1::PacketSequence* GenesisState::mutable_ack_sequences(int index) {
  // @@protoc_insertion_point(field_mutable:ibc.core.channel.v1.GenesisState.ack_sequences)
  return _internal_mutable_ack_sequences()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ibc::core::channel::v1::PacketSequence >*
GenesisState::mutable_ack_sequences() {
  // @@protoc_insertion_point(field_mutable_list:ibc.core.channel.v1.GenesisState.ack_sequences)
  return _internal_mutable_ack_sequences();
}
inline const ::ibc::core::channel::v1::PacketSequence& GenesisState::_internal_ack_sequences(int index) const {
  return _internal_ack_sequences().Get(index);
}
inline const ::ibc::core::channel::v1::PacketSequence& GenesisState::ack_sequences(int index) const {
  // @@protoc_insertion_point(field_get:ibc.core.channel.v1.GenesisState.ack_sequences)
  return _internal_ack_sequences(index);
}
inline ::ibc::core::channel::v1::PacketSequence* GenesisState::_internal_add_ack_sequences() {
  return _internal_mutable_ack_sequences()->Add();
}
inline ::ibc::core::channel::v1::PacketSequence* GenesisState::add_ack_sequences() {
  ::ibc::core::channel::v1::PacketSequence* _add = _internal_add_ack_sequences();
  // @@protoc_insertion_point(field_add:ibc.core.channel.v1.GenesisState.ack_sequences)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ibc::core::channel::v1::PacketSequence >&
GenesisState::ack_sequences() const {
  // @@protoc_insertion_point(field_list:ibc.core.channel.v1.GenesisState.ack_sequences)
  return _internal_ack_sequences();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::ibc::core::channel::v1::PacketSequence>&
GenesisState::_internal_ack_sequences() const {
  return _impl_.ack_sequences_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::ibc::core::channel::v1::PacketSequence>*
GenesisState::_internal_mutable_ack_sequences() {
  return &_impl_.ack_sequences_;
}

// uint64 next_channel_sequence = 8 [json_name = "nextChannelSequence"];
inline void GenesisState::clear_next_channel_sequence() {
  _impl_.next_channel_sequence_ = ::uint64_t{0u};
}
inline ::uint64_t GenesisState::next_channel_sequence() const {
  // @@protoc_insertion_point(field_get:ibc.core.channel.v1.GenesisState.next_channel_sequence)
  return _internal_next_channel_sequence();
}
inline void GenesisState::set_next_channel_sequence(::uint64_t value) {
  _internal_set_next_channel_sequence(value);
  // @@protoc_insertion_point(field_set:ibc.core.channel.v1.GenesisState.next_channel_sequence)
}
inline ::uint64_t GenesisState::_internal_next_channel_sequence() const {
  return _impl_.next_channel_sequence_;
}
inline void GenesisState::_internal_set_next_channel_sequence(::uint64_t value) {
  ;
  _impl_.next_channel_sequence_ = value;
}

// -------------------------------------------------------------------

// PacketSequence

// string port_id = 1 [json_name = "portId"];
inline void PacketSequence::clear_port_id() {
  _impl_.port_id_.ClearToEmpty();
}
inline const std::string& PacketSequence::port_id() const {
  // @@protoc_insertion_point(field_get:ibc.core.channel.v1.PacketSequence.port_id)
  return _internal_port_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PacketSequence::set_port_id(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.port_id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ibc.core.channel.v1.PacketSequence.port_id)
}
inline std::string* PacketSequence::mutable_port_id() {
  std::string* _s = _internal_mutable_port_id();
  // @@protoc_insertion_point(field_mutable:ibc.core.channel.v1.PacketSequence.port_id)
  return _s;
}
inline const std::string& PacketSequence::_internal_port_id() const {
  return _impl_.port_id_.Get();
}
inline void PacketSequence::_internal_set_port_id(const std::string& value) {
  ;


  _impl_.port_id_.Set(value, GetArenaForAllocation());
}
inline std::string* PacketSequence::_internal_mutable_port_id() {
  ;
  return _impl_.port_id_.Mutable( GetArenaForAllocation());
}
inline std::string* PacketSequence::release_port_id() {
  // @@protoc_insertion_point(field_release:ibc.core.channel.v1.PacketSequence.port_id)
  return _impl_.port_id_.Release();
}
inline void PacketSequence::set_allocated_port_id(std::string* value) {
  _impl_.port_id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.port_id_.IsDefault()) {
          _impl_.port_id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ibc.core.channel.v1.PacketSequence.port_id)
}

// string channel_id = 2 [json_name = "channelId"];
inline void PacketSequence::clear_channel_id() {
  _impl_.channel_id_.ClearToEmpty();
}
inline const std::string& PacketSequence::channel_id() const {
  // @@protoc_insertion_point(field_get:ibc.core.channel.v1.PacketSequence.channel_id)
  return _internal_channel_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PacketSequence::set_channel_id(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.channel_id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ibc.core.channel.v1.PacketSequence.channel_id)
}
inline std::string* PacketSequence::mutable_channel_id() {
  std::string* _s = _internal_mutable_channel_id();
  // @@protoc_insertion_point(field_mutable:ibc.core.channel.v1.PacketSequence.channel_id)
  return _s;
}
inline const std::string& PacketSequence::_internal_channel_id() const {
  return _impl_.channel_id_.Get();
}
inline void PacketSequence::_internal_set_channel_id(const std::string& value) {
  ;


  _impl_.channel_id_.Set(value, GetArenaForAllocation());
}
inline std::string* PacketSequence::_internal_mutable_channel_id() {
  ;
  return _impl_.channel_id_.Mutable( GetArenaForAllocation());
}
inline std::string* PacketSequence::release_channel_id() {
  // @@protoc_insertion_point(field_release:ibc.core.channel.v1.PacketSequence.channel_id)
  return _impl_.channel_id_.Release();
}
inline void PacketSequence::set_allocated_channel_id(std::string* value) {
  _impl_.channel_id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.channel_id_.IsDefault()) {
          _impl_.channel_id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ibc.core.channel.v1.PacketSequence.channel_id)
}

// uint64 sequence = 3 [json_name = "sequence"];
inline void PacketSequence::clear_sequence() {
  _impl_.sequence_ = ::uint64_t{0u};
}
inline ::uint64_t PacketSequence::sequence() const {
  // @@protoc_insertion_point(field_get:ibc.core.channel.v1.PacketSequence.sequence)
  return _internal_sequence();
}
inline void PacketSequence::set_sequence(::uint64_t value) {
  _internal_set_sequence(value);
  // @@protoc_insertion_point(field_set:ibc.core.channel.v1.PacketSequence.sequence)
}
inline ::uint64_t PacketSequence::_internal_sequence() const {
  return _impl_.sequence_;
}
inline void PacketSequence::_internal_set_sequence(::uint64_t value) {
  ;
  _impl_.sequence_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace channel
}  // namespace core
}  // namespace ibc


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_ibc_2fcore_2fchannel_2fv1_2fgenesis_2eproto_2epb_2eh
